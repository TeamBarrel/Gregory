

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Wed May 29 18:34:28 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPET
                                 ITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPET
                                 ITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_lcd_set_cursor
    49                           	FNCALL	_main,_lcd_write_string
    50                           	FNCALL	_main,_EEPROMToSerial
    51                           	FNCALL	_main,_findWalls
    52                           	FNCALL	_main,_turnAround
    53                           	FNCALL	_main,_turnLeft90
    54                           	FNCALL	_main,_turnRight90
    55                           	FNCALL	_main,_lcd_write_data
    56                           	FNCALL	_main,_play_iCreate_song
    57                           	FNCALL	_main,_rotateIR
    58                           	FNCALL	_main,_checkForFinalDestination
    59                           	FNCALL	_main,_lookForVictim
    60                           	FNCALL	_main,_goParallel
    61                           	FNCALL	_main,_frontWallCorrect
    62                           	FNCALL	_main,_goToNextCell
    63                           	FNCALL	_main,_goRight
    64                           	FNCALL	_main,_getOrientation
    65                           	FNCALL	_main,_goForward
    66                           	FNCALL	_main,_goLeft
    67                           	FNCALL	_main,_getSuccessfulDrive
    68                           	FNCALL	_main,_updateMapData
    69                           	FNCALL	_main,_updateLocation
    70                           	FNCALL	_main,_updateNode
    71                           	FNCALL	_main,_checkIfHome
    72                           	FNCALL	_goToNextCell,_getSomethingInTheWay
    73                           	FNCALL	_goToNextCell,_goLeft
    74                           	FNCALL	_goToNextCell,_goForward
    75                           	FNCALL	_goToNextCell,_goRight
    76                           	FNCALL	_goToNextCell,_goBackward
    77                           	FNCALL	_findWalls,_lcd_set_cursor
    78                           	FNCALL	_findWalls,_findWall
    79                           	FNCALL	_findWalls,_lcd_write_data
    80                           	FNCALL	_findWalls,_rotateIR
    81                           	FNCALL	_findWalls,_play_iCreate_song
    82                           	FNCALL	_goRight,_lcd_set_cursor
    83                           	FNCALL	_goRight,_lcd_write_data
    84                           	FNCALL	_goRight,_turnRight90
    85                           	FNCALL	_goRight,_updateOrientation
    86                           	FNCALL	_goRight,_driveForDistance
    87                           	FNCALL	_goLeft,_lcd_set_cursor
    88                           	FNCALL	_goLeft,_lcd_write_data
    89                           	FNCALL	_goLeft,_turnLeft90
    90                           	FNCALL	_goLeft,_updateOrientation
    91                           	FNCALL	_goLeft,_driveForDistance
    92                           	FNCALL	_goForward,_lcd_set_cursor
    93                           	FNCALL	_goForward,_lcd_write_data
    94                           	FNCALL	_goForward,_getCurrentX
    95                           	FNCALL	_goForward,_getCurrentY
    96                           	FNCALL	_goForward,_driveForDistance
    97                           	FNCALL	_goBackward,_lcd_set_cursor
    98                           	FNCALL	_goBackward,_lcd_write_data
    99                           	FNCALL	_goBackward,_turnAround
   100                           	FNCALL	_goBackward,_updateOrientation
   101                           	FNCALL	_goBackward,_driveForDistance
   102                           	FNCALL	_goParallel,_readIR
   103                           	FNCALL	_goParallel,_rotateIR
   104                           	FNCALL	_goParallel,___lbtoft
   105                           	FNCALL	_goParallel,___ftmul
   106                           	FNCALL	_goParallel,___ftadd
   107                           	FNCALL	_goParallel,___fttol
   108                           	FNCALL	_goParallel,_drive
   109                           	FNCALL	_goParallel,_waitFor
   110                           	FNCALL	_findWall,_readIR
   111                           	FNCALL	_frontWallCorrect,_rotateIR
   112                           	FNCALL	_frontWallCorrect,_readIR
   113                           	FNCALL	_frontWallCorrect,_drive
   114                           	FNCALL	_driveForDistance,_drive
   115                           	FNCALL	_driveForDistance,_ser_putch
   116                           	FNCALL	_driveForDistance,_ser_getch
   117                           	FNCALL	_driveForDistance,_goReverse
   118                           	FNCALL	_driveForDistance,_turnRight90
   119                           	FNCALL	_driveForDistance,_updateOrientation
   120                           	FNCALL	_driveForDistance,_turnLeft90
   121                           	FNCALL	_driveForDistance,_getCurrentY
   122                           	FNCALL	_driveForDistance,_getCurrentX
   123                           	FNCALL	_driveForDistance,_findFinalDestination
   124                           	FNCALL	_updateLocation,_lcd_set_cursor
   125                           	FNCALL	_updateLocation,_lcd_write_data
   126                           	FNCALL	_updateLocation,_getOrientation
   127                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
   128                           	FNCALL	_lookForVictim,_ser_putch
   129                           	FNCALL	_lookForVictim,_ser_getch
   130                           	FNCALL	_lookForVictim,_play_iCreate_song
   131                           	FNCALL	_lookForVictim,_lcd_set_cursor
   132                           	FNCALL	_lookForVictim,_lcd_write_data
   133                           	FNCALL	_lookForVictim,_getVictimZone
   134                           	FNCALL	_lookForVictim,_lcd_write_1_digit_bcd
   135                           	FNCALL	_checkForFinalDestination,_getFinalX
   136                           	FNCALL	_checkForFinalDestination,_getFinalY
   137                           	FNCALL	_checkForFinalDestination,_play_iCreate_song
   138                           	FNCALL	_checkForFinalDestination,_lcd_set_cursor
   139                           	FNCALL	_checkForFinalDestination,_lcd_write_data
   140                           	FNCALL	_init,_init_adc
   141                           	FNCALL	_init,_lcd_init
   142                           	FNCALL	_init,_ser_init
   143                           	FNCALL	_init,_initIRobot
   144                           	FNCALL	_init,_initSongs
   145                           	FNCALL	_goReverse,_lcd_set_cursor
   146                           	FNCALL	_goReverse,_lcd_write_data
   147                           	FNCALL	_goReverse,_drive
   148                           	FNCALL	_goReverse,_waitFor
   149                           	FNCALL	_readIR,_adc_read_channel
   150                           	FNCALL	_readIR,_convert
   151                           	FNCALL	_findFinalDestination,_lcd_set_cursor
   152                           	FNCALL	_findFinalDestination,_lcd_write_1_digit_bcd
   153                           	FNCALL	_updateMapData,_addNewData
   154                           	FNCALL	_checkIfHome,_drive
   155                           	FNCALL	_checkIfHome,_play_iCreate_song
   156                           	FNCALL	_turnAround,_drive
   157                           	FNCALL	_turnAround,_waitFor
   158                           	FNCALL	_turnLeft90,_drive
   159                           	FNCALL	_turnLeft90,_getCurrentX
   160                           	FNCALL	_turnLeft90,_getCurrentY
   161                           	FNCALL	_turnLeft90,_waitFor
   162                           	FNCALL	_turnRight90,_drive
   163                           	FNCALL	_turnRight90,_waitFor
   164                           	FNCALL	_initSongs,_ser_putArr
   165                           	FNCALL	_lcd_init,_lcd_write_control
   166                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
   167                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   168                           	FNCALL	_EEPROMToSerial,_readEEPROM
   169                           	FNCALL	_EEPROMToSerial,_ser_putch
   170                           	FNCALL	_addNewData,_writeEEPROM
   171                           	FNCALL	_lcd_write_string,_lcd_write_data
   172                           	FNCALL	_adc_read_channel,_adc_read
   173                           	FNCALL	___lbtoft,___ftpack
   174                           	FNCALL	___ftmul,___ftpack
   175                           	FNCALL	___ftadd,___ftpack
   176                           	FNCALL	_initIRobot,_ser_putch
   177                           	FNCALL	_waitFor,_ser_putch
   178                           	FNCALL	_drive,_ser_putch
   179                           	FNCALL	_convert,___wmul
   180                           	FNCALL	_convert,___awdiv
   181                           	FNCALL	_play_iCreate_song,_ser_putch
   182                           	FNCALL	_ser_putArr,_ser_putch
   183                           	FNCALL	_ser_getch,_ser_isrx
   184                           	FNCALL	_readEEPROM,_initEEPROMMode
   185                           	FNCALL	_readEEPROM,_writeSPIByte
   186                           	FNCALL	_writeEEPROM,_initEEPROMMode
   187                           	FNCALL	_writeEEPROM,_writeSPIByte
   188                           	FNCALL	_adc_read,___awdiv
   189                           	FNROOT	_main
   190                           	FNCALL	_isr1,___lwmod
   191                           	FNCALL	intlevel1,_isr1
   192                           	global	intlevel1
   193                           	FNROOT	intlevel1
   194                           	global	_finalX
   195                           	global	_xCoord
   196                           	global	_yCoord
   197                           	global	_finalY
   198                           	global	_somethingInTheWay
   199                           	global	_lookingForU2
   200                           	global	_finalCountdown
   201                           	global	_superMarioBros
   202                           	global	_champions
   203                           	global	_beep
   204                           psect	idataBANK0,class=CODE,space=0,delta=2
   205                           global __pidataBANK0
   206  1E7C                     __pidataBANK0:
   207                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
   208                           	line	7
   209                           
   210                           ;initializer for _finalX
   211  1E7C  3403               	retlw	03h
   212                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
   213                           	line	51
   214                           
   215                           ;initializer for _xCoord
   216  1E7D  3401               	retlw	01h
   217                           	line	52
   218                           
   219                           ;initializer for _yCoord
   220  1E7E  3403               	retlw	03h
   221                           psect	idataBANK1,class=CODE,space=0,delta=2
   222                           global __pidataBANK1
   223  07F9                     __pidataBANK1:
   224                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
   225                           	line	8
   226                           
   227                           ;initializer for _finalY
   228  07F9  3401               	retlw	01h
   229                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
   230                           	line	14
   231                           
   232                           ;initializer for _somethingInTheWay
   233  07FA  3402               	retlw	02h
   234                           psect	idataBANK2,class=CODE,space=0,delta=2
   235                           global __pidataBANK2
   236  1F84                     __pidataBANK2:
   237                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
   238                           	line	11
   239                           
   240                           ;initializer for _lookingForU2
   241  1F84  348C               	retlw	08Ch
   242  1F85  3402               	retlw	02h
   243  1F86  340D               	retlw	0Dh
   244  1F87  3448               	retlw	048h
   245  1F88  341C               	retlw	01Ch
   246  1F89  3448               	retlw	048h
   247  1F8A  341C               	retlw	01Ch
   248  1F8B  344F               	retlw	04Fh
   249  1F8C  3440               	retlw	040h
   250  1F8D  3480               	retlw	080h
   251  1F8E  3410               	retlw	010h
   252  1F8F  344D               	retlw	04Dh
   253  1F90  341C               	retlw	01Ch
   254  1F91  344C               	retlw	04Ch
   255  1F92  341C               	retlw	01Ch
   256  1F93  3448               	retlw	048h
   257  1F94  3440               	retlw	040h
   258  1F95  3480               	retlw	080h
   259  1F96  3410               	retlw	010h
   260  1F97  3445               	retlw	045h
   261  1F98  341C               	retlw	01Ch
   262  1F99  3445               	retlw	045h
   263  1F9A  341C               	retlw	01Ch
   264  1F9B  3445               	retlw	045h
   265  1F9C  341C               	retlw	01Ch
   266  1F9D  3448               	retlw	048h
   267  1F9E  341C               	retlw	01Ch
   268  1F9F  3448               	retlw	048h
   269  1FA0  3440               	retlw	040h
   270                           psect	idataBANK3,class=CODE,space=0,delta=2
   271                           global __pidataBANK3
   272  1596                     __pidataBANK3:
   273                           	line	12
   274                           
   275                           ;initializer for _finalCountdown
   276  1596  348C               	retlw	08Ch
   277  1597  3403               	retlw	03h
   278  1598  340C               	retlw	0Ch
   279  1599  3449               	retlw	049h
   280  159A  3408               	retlw	08h
   281  159B  3447               	retlw	047h
   282  159C  3408               	retlw	08h
   283  159D  3449               	retlw	049h
   284  159E  3420               	retlw	020h
   285  159F  3442               	retlw	042h
   286  15A0  3440               	retlw	040h
   287  15A1  3480               	retlw	080h
   288  15A2  3420               	retlw	020h
   289  15A3  344A               	retlw	04Ah
   290  15A4  3408               	retlw	08h
   291  15A5  3449               	retlw	049h
   292  15A6  3408               	retlw	08h
   293  15A7  344A               	retlw	04Ah
   294  15A8  3408               	retlw	08h
   295  15A9  3480               	retlw	080h
   296  15AA  340C               	retlw	0Ch
   297  15AB  3449               	retlw	049h
   298  15AC  3406               	retlw	06h
   299  15AD  3480               	retlw	080h
   300  15AE  340C               	retlw	0Ch
   301  15AF  3447               	retlw	047h
   302  15B0  3430               	retlw	030h
   303                           	line	10
   304                           
   305                           ;initializer for _superMarioBros
   306  15B1  348C               	retlw	08Ch
   307  15B2  3401               	retlw	01h
   308  15B3  340B               	retlw	0Bh
   309  15B4  344C               	retlw	04Ch
   310  15B5  3408               	retlw	08h
   311  15B6  3480               	retlw	080h
   312  15B7  3404               	retlw	04h
   313  15B8  344C               	retlw	04Ch
   314  15B9  3410               	retlw	010h
   315  15BA  3480               	retlw	080h
   316  15BB  3404               	retlw	04h
   317  15BC  344C               	retlw	04Ch
   318  15BD  3410               	retlw	010h
   319  15BE  3480               	retlw	080h
   320  15BF  3404               	retlw	04h
   321  15C0  3448               	retlw	048h
   322  15C1  3408               	retlw	08h
   323  15C2  344C               	retlw	04Ch
   324  15C3  3410               	retlw	010h
   325  15C4  344F               	retlw	04Fh
   326  15C5  3420               	retlw	020h
   327  15C6  3480               	retlw	080h
   328  15C7  3408               	retlw	08h
   329  15C8  3443               	retlw	043h
   330  15C9  3410               	retlw	010h
   331                           	line	13
   332                           
   333                           ;initializer for _champions
   334  15CA  348C               	retlw	08Ch
   335  15CB  3404               	retlw	04h
   336  15CC  3409               	retlw	09h
   337  15CD  344A               	retlw	04Ah
   338  15CE  3440               	retlw	040h
   339  15CF  3449               	retlw	049h
   340  15D0  3410               	retlw	010h
   341  15D1  344A               	retlw	04Ah
   342  15D2  3410               	retlw	010h
   343  15D3  3449               	retlw	049h
   344  15D4  3430               	retlw	030h
   345  15D5  3445               	retlw	045h
   346  15D6  3430               	retlw	030h
   347  15D7  3480               	retlw	080h
   348  15D8  3420               	retlw	020h
   349  15D9  3442               	retlw	042h
   350  15DA  341C               	retlw	01Ch
   351  15DB  3447               	retlw	047h
   352  15DC  3420               	retlw	020h
   353  15DD  3442               	retlw	042h
   354  15DE  3430               	retlw	030h
   355                           psect	idataBANK1
   356                           	line	14
   357                           
   358                           ;initializer for _beep
   359  07FB  348C               	retlw	08Ch
   360  07FC  3405               	retlw	05h
   361  07FD  3401               	retlw	01h
   362  07FE  3448               	retlw	048h
   363  07FF  3404               	retlw	04h
   364                           	global	_RTC_Counter
   365                           	global	_addressCount
   366                           	global	_addressCurrent
   367                           	global	_currentOrientation
   368                           	global	_lastMove
   369                           	global	_victimZone
   370                           	global	_rxiptr
   371                           	global	_rxoptr
   372                           	global	_txiptr
   373                           	global	_txoptr
   374                           	global	_RTC_FLAG_10MS
   375                           	global	_RTC_FLAG_1MS
   376                           	global	_RTC_FLAG_500MS
   377                           	global	_RTC_FLAG_50MS
   378                           	global	_frontWall
   379                           	global	_goingHome
   380                           	global	_home
   381                           	global	_leftWall
   382                           	global	_moving
   383                           	global	_ready
   384                           	global	_rightWall
   385                           	global	_successfulDrive
   386                           	global	_rxfifo
   387                           	global	_txfifo
   388                           	global	_eeprom
   389                           	global	_start
   390                           	global	_closestObject
   391                           	global	_node
   392                           	global	_ser_tmp
   393                           	global	_stepPosition
   394                           	global	_stepsToPerpendicular
   395                           	global	_vicZone
   396                           	global	_wayWent
   397                           	global	_ADCON0
   398  001F                     _ADCON0	set	31
   399                           	global	_ADRESH
   400  001E                     _ADRESH	set	30
   401                           	global	_PORTA
   402  0005                     _PORTA	set	5
   403                           	global	_PORTC
   404  0007                     _PORTC	set	7
   405                           	global	_PORTD
   406  0008                     _PORTD	set	8
   407                           	global	_PORTE
   408  0009                     _PORTE	set	9
   409                           	global	_RCREG
   410  001A                     _RCREG	set	26
   411                           	global	_SSPBUF
   412  0013                     _SSPBUF	set	19
   413                           	global	_SSPCON
   414  0014                     _SSPCON	set	20
   415                           	global	_TMR0
   416  0001                     _TMR0	set	1
   417                           	global	_TXREG
   418  0019                     _TXREG	set	25
   419                           	global	_CHS0
   420  00FB                     _CHS0	set	251
   421                           	global	_CHS1
   422  00FC                     _CHS1	set	252
   423                           	global	_CHS2
   424  00FD                     _CHS2	set	253
   425                           	global	_CREN
   426  00C4                     _CREN	set	196
   427                           	global	_GIE
   428  005F                     _GIE	set	95
   429                           	global	_GO
   430  00FA                     _GO	set	250
   431                           	global	_OERR
   432  00C1                     _OERR	set	193
   433                           	global	_PEIE
   434  005E                     _PEIE	set	94
   435                           	global	_RB0
   436  0030                     _RB0	set	48
   437                           	global	_RB1
   438  0031                     _RB1	set	49
   439                           	global	_RCIF
   440  0065                     _RCIF	set	101
   441                           	global	_RE0
   442  0048                     _RE0	set	72
   443                           	global	_RE1
   444  0049                     _RE1	set	73
   445                           	global	_RE2
   446  004A                     _RE2	set	74
   447                           	global	_RX9
   448  00C6                     _RX9	set	198
   449                           	global	_SPEN
   450  00C7                     _SPEN	set	199
   451                           	global	_SSPIF
   452  0063                     _SSPIF	set	99
   453                           	global	_TMR0IE
   454  005D                     _TMR0IE	set	93
   455                           	global	_TMR0IF
   456  005A                     _TMR0IF	set	90
   457                           	global	_TXIF
   458  0064                     _TXIF	set	100
   459                           	global	_ADCON1
   460  009F                     _ADCON1	set	159
   461                           	global	_ADRESL
   462  009E                     _ADRESL	set	158
   463                           	global	_OPTION_REG
   464  0081                     _OPTION_REG	set	129
   465                           	global	_SPBRG
   466  0099                     _SPBRG	set	153
   467                           	global	_SSPSTAT
   468  0094                     _SSPSTAT	set	148
   469                           	global	_TRISA
   470  0085                     _TRISA	set	133
   471                           	global	_TRISB
   472  0086                     _TRISB	set	134
   473                           	global	_TRISC
   474  0087                     _TRISC	set	135
   475                           	global	_TRISD
   476  0088                     _TRISD	set	136
   477                           	global	_TRISE
   478  0089                     _TRISE	set	137
   479                           	global	_BRGH
   480  04C2                     _BRGH	set	1218
   481                           	global	_RCIE
   482  0465                     _RCIE	set	1125
   483                           	global	_SYNC
   484  04C4                     _SYNC	set	1220
   485                           	global	_TX9
   486  04C6                     _TX9	set	1222
   487                           	global	_TXEN
   488  04C5                     _TXEN	set	1221
   489                           	global	_TXIE
   490  0464                     _TXIE	set	1124
   491                           psect	strings,class=STRING,delta=2
   492                           global __pstrings
   493  0015                     __pstrings:
   494                           ;	global	stringdir,stringtab,__stringbase
   495  0015                     stringtab:
   496                           ;	String table - string pointers are 1 byte each
   497  0015                     stringcode:stringdir:
      + 0015                     stringdir:	
   498  0015  3000               movlw high(stringdir)
   499  0016  008A               movwf pclath
   500  0017  0804               movf fsr,w
   501  0018  0A84               incf fsr
   502  0019  0782               	addwf pc
   503  001A                     __stringbase:
   504  001A  3400               	retlw	0
   505                           psect	strings
   506                           	
   507  001B                     STR_3:	
   508  001B  3428               	retlw	40	;'('
   509  001C  342D               	retlw	45	;'-'
   510  001D  342C               	retlw	44	;','
   511  001E  342D               	retlw	45	;'-'
   512  001F  3429               	retlw	41	;')'
   513  0020  3420               	retlw	32	;' '
   514  0021  342D               	retlw	45	;'-'
   515  0022  3420               	retlw	32	;' '
   516  0023  342D               	retlw	45	;'-'
   517  0024  342D               	retlw	45	;'-'
   518  0025  3420               	retlw	32	;' '
   519  0026  342D               	retlw	45	;'-'
   520  0027  342D               	retlw	45	;'-'
   521  0028  342D               	retlw	45	;'-'
   522  0029  3420               	retlw	32	;' '
   523  002A  342D               	retlw	45	;'-'
   524  002B  3400               	retlw	0
   525                           psect	strings
   526                           	
   527  002C                     STR_4:	
   528  002C  342D               	retlw	45	;'-'
   529  002D  3420               	retlw	32	;' '
   530  002E  342D               	retlw	45	;'-'
   531  002F  3420               	retlw	32	;' '
   532  0030  342D               	retlw	45	;'-'
   533  0031  3420               	retlw	32	;' '
   534  0032  3428               	retlw	40	;'('
   535  0033  3433               	retlw	51	;'3'
   536  0034  342C               	retlw	44	;','
   537  0035  3431               	retlw	49	;'1'
   538  0036  3429               	retlw	41	;')'
   539  0037  3420               	retlw	32	;' '
   540  0038  3447               	retlw	71	;'G'
   541  0039  3452               	retlw	82	;'R'
   542  003A  3445               	retlw	69	;'E'
   543  003B  3447               	retlw	71	;'G'
   544  003C  3400               	retlw	0
   545                           psect	strings
   546                           	
   547  003D                     STR_1:	
   548  003D  3445               	retlw	69	;'E'
   549  003E  3445               	retlw	69	;'E'
   550  003F  3450               	retlw	80	;'P'
   551  0040  3452               	retlw	82	;'R'
   552  0041  344F               	retlw	79	;'O'
   553  0042  344D               	retlw	77	;'M'
   554  0043  3420               	retlw	32	;' '
   555  0044  3453               	retlw	83	;'S'
   556  0045  3475               	retlw	117	;'u'
   557  0046  3463               	retlw	99	;'c'
   558  0047  3463               	retlw	99	;'c'
   559  0048  3465               	retlw	101	;'e'
   560  0049  3473               	retlw	115	;'s'
   561  004A  3473               	retlw	115	;'s'
   562  004B  3400               	retlw	0
   563                           psect	strings
   564                           	
   565  004C                     STR_2:	
   566  004C  3445               	retlw	69	;'E'
   567  004D  3445               	retlw	69	;'E'
   568  004E  3450               	retlw	80	;'P'
   569  004F  3452               	retlw	82	;'R'
   570  0050  344F               	retlw	79	;'O'
   571  0051  344D               	retlw	77	;'M'
   572  0052  3420               	retlw	32	;' '
   573  0053  3446               	retlw	70	;'F'
   574  0054  3461               	retlw	97	;'a'
   575  0055  3469               	retlw	105	;'i'
   576  0056  346C               	retlw	108	;'l'
   577  0057  3465               	retlw	101	;'e'
   578  0058  3464               	retlw	100	;'d'
   579  0059  3400               	retlw	0
   580                           psect	strings
   581                           	file	"COMPETITIONv0.7.as"
   582                           	line	#
   583                           psect cinit,class=CODE,delta=2
   584                           global start_initialization
   585  1678                     start_initialization:
   586                           
   587                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   588                           global __pbitbssCOMMON
   589  0380                     __pbitbssCOMMON:
   590  0380                     _RTC_FLAG_10MS:
   591  0380                            ds      1
   592                           
   593  0381                     _RTC_FLAG_1MS:
   594  0381                            ds      1
   595                           
   596  0382                     _RTC_FLAG_500MS:
   597  0382                            ds      1
   598                           
   599  0383                     _RTC_FLAG_50MS:
   600  0383                            ds      1
   601                           
   602  0384                     _frontWall:
   603  0384                            ds      1
   604                           
   605  0385                     _goingHome:
   606  0385                            ds      1
   607                           
   608  0386                     _home:
   609  0386                            ds      1
   610                           
   611  0387                     _leftWall:
   612  0387                            ds      1
   613                           
   614  0388                     _moving:
   615  0388                            ds      1
   616                           
   617  0389                     _ready:
   618  0389                            ds      1
   619                           
   620  038A                     _rightWall:
   621  038A                            ds      1
   622                           
   623  038B                     _successfulDrive:
   624  038B                            ds      1
   625                           
   626                           psect	bssCOMMON,class=COMMON,space=1
   627                           global __pbssCOMMON
   628  0078                     __pbssCOMMON:
   629  0078                     _rxiptr:
   630  0078                            ds      1
   631                           
   632  0079                     _rxoptr:
   633  0079                            ds      1
   634                           
   635  007A                     _txiptr:
   636  007A                            ds      1
   637                           
   638  007B                     _txoptr:
   639  007B                            ds      1
   640                           
   641                           psect	bssBANK0,class=BANK0,space=1
   642                           global __pbssBANK0
   643  005C                     __pbssBANK0:
   644  005C                     _RTC_Counter:
   645  005C                            ds      2
   646                           
   647  005E                     _addressCount:
   648  005E                            ds      1
   649                           
   650  005F                     _addressCurrent:
   651  005F                            ds      1
   652                           
   653  0060                     _currentOrientation:
   654  0060                            ds      1
   655                           
   656  0061                     _lastMove:
   657  0061                            ds      1
   658                           
   659  0062                     _victimZone:
   660  0062                            ds      1
   661                           
   662                           psect	dataBANK0,class=BANK0,space=1
   663                           global __pdataBANK0
   664  0063                     __pdataBANK0:
   665                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
   666                           	line	7
   667  0063                     _finalX:
   668  0063                            ds      1
   669                           
   670                           psect	dataBANK0
   671                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
   672                           	line	51
   673  0064                     _xCoord:
   674  0064                            ds      1
   675                           
   676                           psect	dataBANK0
   677                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
   678                           	line	52
   679  0065                     _yCoord:
   680  0065                            ds      1
   681                           
   682                           psect	bssBANK1,class=BANK1,space=1
   683                           global __pbssBANK1
   684  00A0                     __pbssBANK1:
   685  00A0                     _rxfifo:
   686  00A0                            ds      16
   687                           
   688  00B0                     _txfifo:
   689  00B0                            ds      16
   690                           
   691  00C0                     _eeprom:
   692  00C0                            ds      3
   693                           
   694  00C3                     _start:
   695  00C3                            ds      3
   696                           
   697  00C6                     _closestObject:
   698  00C6                            ds      2
   699                           
   700  00C8                     _node:
   701  00C8                            ds      1
   702                           
   703  00C9                     _ser_tmp:
   704  00C9                            ds      1
   705                           
   706  00CA                     _stepPosition:
   707  00CA                            ds      1
   708                           
   709  00CB                     _stepsToPerpendicular:
   710  00CB                            ds      1
   711                           
   712  00CC                     _vicZone:
   713  00CC                            ds      1
   714                           
   715  00CD                     _wayWent:
   716  00CD                            ds      1
   717                           
   718                           psect	dataBANK1,class=BANK1,space=1
   719                           global __pdataBANK1
   720  00E5                     __pdataBANK1:
   721                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
   722                           	line	8
   723  00E5                     _finalY:
   724  00E5                            ds      1
   725                           
   726                           psect	dataBANK1
   727                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
   728                           	line	14
   729  00E6                     _somethingInTheWay:
   730  00E6                            ds      1
   731                           
   732                           psect	dataBANK1
   733                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
   734  00E7                     _beep:
   735  00E7                            ds      5
   736                           
   737                           psect	dataBANK3,class=BANK3,space=1
   738                           global __pdataBANK3
   739  0190                     __pdataBANK3:
   740                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
   741                           	line	12
   742  0190                     _finalCountdown:
   743  0190                            ds      27
   744                           
   745                           psect	dataBANK3
   746                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
   747                           	line	10
   748  01AB                     _superMarioBros:
   749  01AB                            ds      25
   750                           
   751                           psect	dataBANK3
   752                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
   753                           	line	13
   754  01C4                     _champions:
   755  01C4                            ds      21
   756                           
   757                           psect	dataBANK2,class=BANK2,space=1
   758                           global __pdataBANK2
   759  0110                     __pdataBANK2:
   760                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
   761                           	line	11
   762  0110                     _lookingForU2:
   763  0110                            ds      29
   764                           
   765                           psect clrtext,class=CODE,delta=2
   766                           global clear_ram
   767                           ;	Called with FSR containing the base address, and
   768                           ;	W with the last address+1
   769  0801                     clear_ram:
   770  0801  0064               	clrwdt			;clear the watchdog before getting into this loop
   771  0802                     clrloop:
   772  0802  0180               	clrf	indf		;clear RAM location pointed to by FSR
   773  0803  0A84               	incf	fsr,f		;increment pointer
   774  0804  0604               	xorwf	fsr,w		;XOR with final address
   775  0805  1903               	btfsc	status,2	;have we reached the end yet?
   776  0806  3400               	retlw	0		;all done for this memory range, return
   777  0807  0604               	xorwf	fsr,w		;XOR again to restore value
   778  0808  2802               	goto	clrloop		;do the next byte
   779                           
   780                           ; Clear objects allocated to BITCOMMON
   781                           psect cinit,class=CODE,delta=2
   782  1678  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   783  1679  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   784                           ; Clear objects allocated to COMMON
   785                           psect cinit,class=CODE,delta=2
   786  167A  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   787  167B  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   788  167C  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   789  167D  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   790                           ; Clear objects allocated to BANK0
   791                           psect cinit,class=CODE,delta=2
   792  167E  01DC               	clrf	((__pbssBANK0)+0)&07Fh
   793  167F  01DD               	clrf	((__pbssBANK0)+1)&07Fh
   794  1680  01DE               	clrf	((__pbssBANK0)+2)&07Fh
   795  1681  01DF               	clrf	((__pbssBANK0)+3)&07Fh
   796  1682  01E0               	clrf	((__pbssBANK0)+4)&07Fh
   797  1683  01E1               	clrf	((__pbssBANK0)+5)&07Fh
   798  1684  01E2               	clrf	((__pbssBANK0)+6)&07Fh
   799                           ; Clear objects allocated to BANK1
   800                           psect cinit,class=CODE,delta=2
   801  1685  1383               	bcf	status, 7	;select IRP bank0
   802  1686  30A0               	movlw	low(__pbssBANK1)
   803  1687  0084               	movwf	fsr
   804  1688  30CE               	movlw	low((__pbssBANK1)+02Eh)
   805  1689  120A  158A  2001   	fcall	clear_ram
              160A  118A         
   806                           global btemp
   807                           psect inittext,class=CODE,delta=2
   808                           global init_fetch,btemp
   809                           ;	Called with low address in FSR and high address in W
   810  1ED6                     init_fetch:
   811  1ED6  087E               	movf btemp,w
   812  1ED7  008A               	movwf pclath
   813  1ED8  087F               	movf btemp+1,w
   814  1ED9  0082               	movwf pc
   815                           global init_ram
   816                           ;Called with:
   817                           ;	high address of idata address in btemp 
   818                           ;	low address of idata address in btemp+1 
   819                           ;	low address of data in FSR
   820                           ;	high address + 1 of data in btemp-1
   821  1EDA                     init_ram:
   822  1EDA  26D6  160A  158A   	fcall init_fetch
   823  1EDD  0080               	movwf indf,f
   824  1EDE  0A84               	incf fsr,f
   825  1EDF  0804               	movf fsr,w
   826  1EE0  067D               	xorwf btemp-1,w
   827  1EE1  1903               	btfsc status,2
   828  1EE2  3400               	retlw 0
   829  1EE3  0AFF               	incf btemp+1,f
   830  1EE4  1903               	btfsc status,2
   831  1EE5  0AFE               	incf btemp,f
   832  1EE6  2EDA               	goto init_ram
   833                           ; Initialize objects allocated to BANK3
   834                           psect cinit,class=CODE,delta=2
   835                           global init_ram, __pidataBANK3
   836  168E  1783               	bsf	status, 7	;select IRP bank2
   837  168F  30D9               	movlw low(__pdataBANK3+73)
   838  1690  00FD               	movwf btemp-1,f
   839  1691  3015               	movlw high(__pidataBANK3)
   840  1692  00FE               	movwf btemp,f
   841  1693  3096               	movlw low(__pidataBANK3)
   842  1694  00FF               	movwf btemp+1,f
   843  1695  3090               	movlw low(__pdataBANK3)
   844  1696  0084               	movwf fsr,f
   845  1697  160A  158A  26DA   	fcall init_ram
              160A  118A         
   846                           ; Initialize objects allocated to BANK2
   847                           psect cinit,class=CODE,delta=2
   848                           global init_ram, __pidataBANK2
   849  169C  302D               	movlw low(__pdataBANK2+29)
   850  169D  00FD               	movwf btemp-1,f
   851  169E  301F               	movlw high(__pidataBANK2)
   852  169F  00FE               	movwf btemp,f
   853  16A0  3084               	movlw low(__pidataBANK2)
   854  16A1  00FF               	movwf btemp+1,f
   855  16A2  3010               	movlw low(__pdataBANK2)
   856  16A3  0084               	movwf fsr,f
   857  16A4  160A  158A  26DA   	fcall init_ram
              160A  118A         
   858                           ; Initialize objects allocated to BANK1
   859                           psect cinit,class=CODE,delta=2
   860                           global init_ram, __pidataBANK1
   861  16A9  1383               	bcf	status, 7	;select IRP bank0
   862  16AA  30EC               	movlw low(__pdataBANK1+7)
   863  16AB  00FD               	movwf btemp-1,f
   864  16AC  3007               	movlw high(__pidataBANK1)
   865  16AD  00FE               	movwf btemp,f
   866  16AE  30F9               	movlw low(__pidataBANK1)
   867  16AF  00FF               	movwf btemp+1,f
   868  16B0  30E5               	movlw low(__pdataBANK1)
   869  16B1  0084               	movwf fsr,f
   870  16B2  160A  158A  26DA   	fcall init_ram
              160A  118A         
   871                           ; Initialize objects allocated to BANK0
   872                           psect cinit,class=CODE,delta=2
   873                           global init_ram, __pidataBANK0
   874  16B7  3066               	movlw low(__pdataBANK0+3)
   875  16B8  00FD               	movwf btemp-1,f
   876  16B9  301E               	movlw high(__pidataBANK0)
   877  16BA  00FE               	movwf btemp,f
   878  16BB  307C               	movlw low(__pidataBANK0)
   879  16BC  00FF               	movwf btemp+1,f
   880  16BD  3063               	movlw low(__pdataBANK0)
   881  16BE  0084               	movwf fsr,f
   882  16BF  160A  158A  26DA   	fcall init_ram
              160A  118A         
   883                           psect cinit,class=CODE,delta=2
   884                           global end_of_initialization
   885                           
   886                           ;End of C runtime variable initialization code
   887                           
   888  16C4                     end_of_initialization:
   889  16C4  0183               clrf status
   890  16C5  120A  118A  285A   ljmp _main	;jump to C main() function
   891                           psect	cstackBANK1,class=BANK1,space=1
   892                           global __pcstackBANK1
   893  00CE                     __pcstackBANK1:
   894                           	global	?___ftadd
   895  00CE                     ?___ftadd:	; 3 bytes @ 0x0
   896                           	global	___ftadd@f1
   897  00CE                     ___ftadd@f1:	; 3 bytes @ 0x0
   898  00CE                     	ds	3
   899                           	global	___ftadd@f2
   900  00D1                     ___ftadd@f2:	; 3 bytes @ 0x3
   901  00D1                     	ds	3
   902                           	global	___ftadd@sign
   903  00D4                     ___ftadd@sign:	; 1 bytes @ 0x6
   904  00D4                     	ds	1
   905                           	global	___ftadd@exp2
   906  00D5                     ___ftadd@exp2:	; 1 bytes @ 0x7
   907  00D5                     	ds	1
   908                           	global	___ftadd@exp1
   909  00D6                     ___ftadd@exp1:	; 1 bytes @ 0x8
   910  00D6                     	ds	1
   911                           	global	??_goParallel
   912  00D7                     ??_goParallel:	; 0 bytes @ 0x9
   913  00D7                     	ds	2
   914                           	global	goParallel@stepsToWall
   915  00D9                     goParallel@stepsToWall:	; 1 bytes @ 0xB
   916  00D9                     	ds	1
   917                           	global	goParallel@shortestDistance
   918  00DA                     goParallel@shortestDistance:	; 2 bytes @ 0xC
   919  00DA                     	ds	2
   920                           	global	goParallel@angleHighByte
   921  00DC                     goParallel@angleHighByte:	; 1 bytes @ 0xE
   922  00DC                     	ds	1
   923                           	global	goParallel@angleLowByte
   924  00DD                     goParallel@angleLowByte:	; 1 bytes @ 0xF
   925  00DD                     	ds	1
   926                           	global	goParallel@distance
   927  00DE                     goParallel@distance:	; 2 bytes @ 0x10
   928  00DE                     	ds	2
   929                           	global	goParallel@step
   930  00E0                     goParallel@step:	; 2 bytes @ 0x12
   931  00E0                     	ds	2
   932                           	global	goParallel@angleParallelToWall
   933  00E2                     goParallel@angleParallelToWall:	; 2 bytes @ 0x14
   934  00E2                     	ds	2
   935                           	global	??_main
   936  00E4                     ??_main:	; 0 bytes @ 0x16
   937  00E4                     	ds	1
   938                           psect	cstackCOMMON,class=COMMON,space=1
   939                           global __pcstackCOMMON
   940  0072                     __pcstackCOMMON:
   941                           	global	?_lcd_write_string
   942  0072                     ?_lcd_write_string:	; 0 bytes @ 0x0
   943                           	global	?_ser_putch
   944  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   945                           	global	?_goReverse
   946  0072                     ?_goReverse:	; 0 bytes @ 0x0
   947                           	global	?_turnRight90
   948  0072                     ?_turnRight90:	; 0 bytes @ 0x0
   949                           	global	?_updateOrientation
   950  0072                     ?_updateOrientation:	; 0 bytes @ 0x0
   951                           	global	?_turnLeft90
   952  0072                     ?_turnLeft90:	; 0 bytes @ 0x0
   953                           	global	?_turnAround
   954  0072                     ?_turnAround:	; 0 bytes @ 0x0
   955                           	global	?_initIRobot
   956  0072                     ?_initIRobot:	; 0 bytes @ 0x0
   957                           	global	?_findWall
   958  0072                     ?_findWall:	; 1 bit 
   959                           	global	?_init_adc
   960  0072                     ?_init_adc:	; 0 bytes @ 0x0
   961                           	global	?_writeSPIByte
   962  0072                     ?_writeSPIByte:	; 0 bytes @ 0x0
   963                           	global	?_initEEPROMMode
   964  0072                     ?_initEEPROMMode:	; 0 bytes @ 0x0
   965                           	global	?_addNewData
   966  0072                     ?_addNewData:	; 0 bytes @ 0x0
   967                           	global	?_EEPROMToSerial
   968  0072                     ?_EEPROMToSerial:	; 0 bytes @ 0x0
   969                           	global	?_lcd_write_control
   970  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   971                           	global	?_lcd_write_data
   972  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   973                           	global	?_lcd_set_cursor
   974  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   975                           	global	?_lcd_write_1_digit_bcd
   976  0072                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
   977                           	global	?_lcd_init
   978  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   979                           	global	?_ser_isrx
   980  0072                     ?_ser_isrx:	; 1 bit 
   981                           	global	?_ser_init
   982  0072                     ?_ser_init:	; 0 bytes @ 0x0
   983                           	global	?_play_iCreate_song
   984  0072                     ?_play_iCreate_song:	; 0 bytes @ 0x0
   985                           	global	?_initSongs
   986  0072                     ?_initSongs:	; 0 bytes @ 0x0
   987                           	global	?_getSuccessfulDrive
   988  0072                     ?_getSuccessfulDrive:	; 1 bit 
   989                           	global	?_goBackward
   990  0072                     ?_goBackward:	; 0 bytes @ 0x0
   991                           	global	?_goForward
   992  0072                     ?_goForward:	; 0 bytes @ 0x0
   993                           	global	?_goLeft
   994  0072                     ?_goLeft:	; 0 bytes @ 0x0
   995                           	global	?_goRight
   996  0072                     ?_goRight:	; 0 bytes @ 0x0
   997                           	global	?_frontWallCorrect
   998  0072                     ?_frontWallCorrect:	; 0 bytes @ 0x0
   999                           	global	?_isr1
  1000  0072                     ?_isr1:	; 0 bytes @ 0x0
  1001                           	global	?_init
  1002  0072                     ?_init:	; 0 bytes @ 0x0
  1003                           	global	?_checkForFinalDestination
  1004  0072                     ?_checkForFinalDestination:	; 0 bytes @ 0x0
  1005                           	global	?_lookForVictim
  1006  0072                     ?_lookForVictim:	; 0 bytes @ 0x0
  1007                           	global	?_findWalls
  1008  0072                     ?_findWalls:	; 0 bytes @ 0x0
  1009                           	global	?_goParallel
  1010  0072                     ?_goParallel:	; 0 bytes @ 0x0
  1011                           	global	?_goToNextCell
  1012  0072                     ?_goToNextCell:	; 0 bytes @ 0x0
  1013                           	global	?_updateLocation
  1014  0072                     ?_updateLocation:	; 0 bytes @ 0x0
  1015                           	global	?_updateNode
  1016  0072                     ?_updateNode:	; 0 bytes @ 0x0
  1017                           	global	?_checkIfHome
  1018  0072                     ?_checkIfHome:	; 0 bytes @ 0x0
  1019                           	global	?_main
  1020  0072                     ?_main:	; 0 bytes @ 0x0
  1021                           	global	?_getCurrentX
  1022  0072                     ?_getCurrentX:	; 1 bytes @ 0x0
  1023                           	global	?_getCurrentY
  1024  0072                     ?_getCurrentY:	; 1 bytes @ 0x0
  1025                           	global	?_getFinalX
  1026  0072                     ?_getFinalX:	; 1 bytes @ 0x0
  1027                           	global	?_getFinalY
  1028  0072                     ?_getFinalY:	; 1 bytes @ 0x0
  1029                           	global	?_ser_getch
  1030  0072                     ?_ser_getch:	; 1 bytes @ 0x0
  1031                           	global	?_getOrientation
  1032  0072                     ?_getOrientation:	; 1 bytes @ 0x0
  1033                           	global	?_getSomethingInTheWay
  1034  0072                     ?_getSomethingInTheWay:	; 1 bytes @ 0x0
  1035                           	global	?___lwmod
  1036  0072                     ?___lwmod:	; 2 bytes @ 0x0
  1037                           	global	___lwmod@divisor
  1038  0072                     ___lwmod@divisor:	; 2 bytes @ 0x0
  1039  0072                     	ds	2
  1040                           	global	___lwmod@dividend
  1041  0074                     ___lwmod@dividend:	; 2 bytes @ 0x2
  1042  0074                     	ds	2
  1043                           	global	??___lwmod
  1044  0076                     ??___lwmod:	; 0 bytes @ 0x4
  1045  0076                     	ds	1
  1046                           	global	___lwmod@counter
  1047  0077                     ___lwmod@counter:	; 1 bytes @ 0x5
  1048  0077                     	ds	1
  1049                           psect	cstackBANK0,class=BANK0,space=1
  1050                           global __pcstackBANK0
  1051  0020                     __pcstackBANK0:
  1052                           	global	??_isr1
  1053  0020                     ??_isr1:	; 0 bytes @ 0x0
  1054  0020                     	ds	10
  1055                           	global	??_ser_putch
  1056  002A                     ??_ser_putch:	; 0 bytes @ 0xA
  1057                           	global	??_updateOrientation
  1058  002A                     ??_updateOrientation:	; 0 bytes @ 0xA
  1059                           	global	??_getCurrentX
  1060  002A                     ??_getCurrentX:	; 0 bytes @ 0xA
  1061                           	global	??_getCurrentY
  1062  002A                     ??_getCurrentY:	; 0 bytes @ 0xA
  1063                           	global	??_init_adc
  1064  002A                     ??_init_adc:	; 0 bytes @ 0xA
  1065                           	global	??_writeSPIByte
  1066  002A                     ??_writeSPIByte:	; 0 bytes @ 0xA
  1067                           	global	??_initEEPROMMode
  1068  002A                     ??_initEEPROMMode:	; 0 bytes @ 0xA
  1069                           	global	??_lcd_write_control
  1070  002A                     ??_lcd_write_control:	; 0 bytes @ 0xA
  1071                           	global	??_lcd_write_data
  1072  002A                     ??_lcd_write_data:	; 0 bytes @ 0xA
  1073                           	global	??_getFinalX
  1074  002A                     ??_getFinalX:	; 0 bytes @ 0xA
  1075                           	global	??_getFinalY
  1076  002A                     ??_getFinalY:	; 0 bytes @ 0xA
  1077                           	global	??_ser_isrx
  1078  002A                     ??_ser_isrx:	; 0 bytes @ 0xA
  1079                           	global	??_ser_getch
  1080  002A                     ??_ser_getch:	; 0 bytes @ 0xA
  1081                           	global	??_ser_init
  1082  002A                     ??_ser_init:	; 0 bytes @ 0xA
  1083                           	global	?_rotateIR
  1084  002A                     ?_rotateIR:	; 0 bytes @ 0xA
  1085                           	global	??_getOrientation
  1086  002A                     ??_getOrientation:	; 0 bytes @ 0xA
  1087                           	global	??_getSomethingInTheWay
  1088  002A                     ??_getSomethingInTheWay:	; 0 bytes @ 0xA
  1089                           	global	??_getSuccessfulDrive
  1090  002A                     ??_getSuccessfulDrive:	; 0 bytes @ 0xA
  1091                           	global	??_updateNode
  1092  002A                     ??_updateNode:	; 0 bytes @ 0xA
  1093                           	global	?_getVictimZone
  1094  002A                     ?_getVictimZone:	; 1 bytes @ 0xA
  1095                           	global	?___wmul
  1096  002A                     ?___wmul:	; 2 bytes @ 0xA
  1097                           	global	?___ftpack
  1098  002A                     ?___ftpack:	; 3 bytes @ 0xA
  1099                           	global	writeSPIByte@data
  1100  002A                     writeSPIByte@data:	; 1 bytes @ 0xA
  1101                           	global	getVictimZone@victimY
  1102  002A                     getVictimZone@victimY:	; 1 bytes @ 0xA
  1103                           	global	rotateIR@direction
  1104  002A                     rotateIR@direction:	; 1 bytes @ 0xA
  1105                           	global	___wmul@multiplier
  1106  002A                     ___wmul@multiplier:	; 2 bytes @ 0xA
  1107                           	global	___ftpack@arg
  1108  002A                     ___ftpack@arg:	; 3 bytes @ 0xA
  1109  002A                     	ds	1
  1110                           	global	?_writeEEPROM
  1111  002B                     ?_writeEEPROM:	; 0 bytes @ 0xB
  1112                           	global	??_getVictimZone
  1113  002B                     ??_getVictimZone:	; 0 bytes @ 0xB
  1114                           	global	??_rotateIR
  1115  002B                     ??_rotateIR:	; 0 bytes @ 0xB
  1116                           	global	?_readEEPROM
  1117  002B                     ?_readEEPROM:	; 1 bytes @ 0xB
  1118                           	global	writeEEPROM@addressH
  1119  002B                     writeEEPROM@addressH:	; 1 bytes @ 0xB
  1120                           	global	readEEPROM@addressL
  1121  002B                     readEEPROM@addressL:	; 1 bytes @ 0xB
  1122                           	global	ser_getch@c
  1123  002B                     ser_getch@c:	; 1 bytes @ 0xB
  1124                           	global	ser_putch@c
  1125  002B                     ser_putch@c:	; 1 bytes @ 0xB
  1126                           	global	updateOrientation@moved
  1127  002B                     updateOrientation@moved:	; 1 bytes @ 0xB
  1128  002B                     	ds	1
  1129                           	global	?_waitFor
  1130  002C                     ?_waitFor:	; 0 bytes @ 0xC
  1131                           	global	??_initIRobot
  1132  002C                     ??_initIRobot:	; 0 bytes @ 0xC
  1133                           	global	??_readEEPROM
  1134  002C                     ??_readEEPROM:	; 0 bytes @ 0xC
  1135                           	global	?_ser_putArr
  1136  002C                     ?_ser_putArr:	; 0 bytes @ 0xC
  1137                           	global	??_play_iCreate_song
  1138  002C                     ??_play_iCreate_song:	; 0 bytes @ 0xC
  1139                           	global	?_drive
  1140  002C                     ?_drive:	; 0 bytes @ 0xC
  1141                           	global	writeEEPROM@addressL
  1142  002C                     writeEEPROM@addressL:	; 1 bytes @ 0xC
  1143                           	global	lcd_write_control@databyte
  1144  002C                     lcd_write_control@databyte:	; 1 bytes @ 0xC
  1145                           	global	lcd_write_data@databyte
  1146  002C                     lcd_write_data@databyte:	; 1 bytes @ 0xC
  1147                           	global	getVictimZone@victimX
  1148  002C                     getVictimZone@victimX:	; 1 bytes @ 0xC
  1149                           	global	play_iCreate_song@song
  1150  002C                     play_iCreate_song@song:	; 1 bytes @ 0xC
  1151                           	global	drive@lowByteSpeed
  1152  002C                     drive@lowByteSpeed:	; 1 bytes @ 0xC
  1153                           	global	waitFor@highByte
  1154  002C                     waitFor@highByte:	; 1 bytes @ 0xC
  1155                           	global	ser_putArr@array
  1156  002C                     ser_putArr@array:	; 2 bytes @ 0xC
  1157                           	global	___wmul@multiplicand
  1158  002C                     ___wmul@multiplicand:	; 2 bytes @ 0xC
  1159  002C                     	ds	1
  1160                           	global	??_lcd_write_string
  1161  002D                     ??_lcd_write_string:	; 0 bytes @ 0xD
  1162                           	global	??_writeEEPROM
  1163  002D                     ??_writeEEPROM:	; 0 bytes @ 0xD
  1164                           	global	??_lcd_set_cursor
  1165  002D                     ??_lcd_set_cursor:	; 0 bytes @ 0xD
  1166                           	global	??_lcd_write_1_digit_bcd
  1167  002D                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0xD
  1168                           	global	??_lcd_init
  1169  002D                     ??_lcd_init:	; 0 bytes @ 0xD
  1170                           	global	lcd_set_cursor@address
  1171  002D                     lcd_set_cursor@address:	; 1 bytes @ 0xD
  1172                           	global	lcd_write_1_digit_bcd@data
  1173  002D                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0xD
  1174                           	global	rotateIR@steps
  1175  002D                     rotateIR@steps:	; 1 bytes @ 0xD
  1176                           	global	drive@highByteRadius
  1177  002D                     drive@highByteRadius:	; 1 bytes @ 0xD
  1178                           	global	waitFor@lowByte
  1179  002D                     waitFor@lowByte:	; 1 bytes @ 0xD
  1180                           	global	___ftpack@exp
  1181  002D                     ___ftpack@exp:	; 1 bytes @ 0xD
  1182  002D                     	ds	1
  1183                           	global	??_waitFor
  1184  002E                     ??_waitFor:	; 0 bytes @ 0xE
  1185                           	global	?_findFinalDestination
  1186  002E                     ?_findFinalDestination:	; 0 bytes @ 0xE
  1187                           	global	??_checkForFinalDestination
  1188  002E                     ??_checkForFinalDestination:	; 0 bytes @ 0xE
  1189                           	global	??_lookForVictim
  1190  002E                     ??_lookForVictim:	; 0 bytes @ 0xE
  1191                           	global	??_updateLocation
  1192  002E                     ??_updateLocation:	; 0 bytes @ 0xE
  1193                           	global	??___wmul
  1194  002E                     ??___wmul:	; 0 bytes @ 0xE
  1195                           	global	lcd_write_string@s
  1196  002E                     lcd_write_string@s:	; 1 bytes @ 0xE
  1197                           	global	findFinalDestination@virtualWallY
  1198  002E                     findFinalDestination@virtualWallY:	; 1 bytes @ 0xE
  1199                           	global	rotateIR@stepNum
  1200  002E                     rotateIR@stepNum:	; 1 bytes @ 0xE
  1201                           	global	drive@lowByteRadius
  1202  002E                     drive@lowByteRadius:	; 1 bytes @ 0xE
  1203                           	global	___ftpack@sign
  1204  002E                     ___ftpack@sign:	; 1 bytes @ 0xE
  1205                           	global	ser_putArr@length
  1206  002E                     ser_putArr@length:	; 2 bytes @ 0xE
  1207                           	global	___wmul@product
  1208  002E                     ___wmul@product:	; 2 bytes @ 0xE
  1209  002E                     	ds	1
  1210                           	global	??___ftpack
  1211  002F                     ??___ftpack:	; 0 bytes @ 0xF
  1212                           	global	??_drive
  1213  002F                     ??_drive:	; 0 bytes @ 0xF
  1214                           	global	readEEPROM@addressH
  1215  002F                     readEEPROM@addressH:	; 1 bytes @ 0xF
  1216                           	global	findFinalDestination@robotOrientation
  1217  002F                     findFinalDestination@robotOrientation:	; 1 bytes @ 0xF
  1218  002F                     	ds	1
  1219                           	global	??_findFinalDestination
  1220  0030                     ??_findFinalDestination:	; 0 bytes @ 0x10
  1221                           	global	??_ser_putArr
  1222  0030                     ??_ser_putArr:	; 0 bytes @ 0x10
  1223                           	global	?___awdiv
  1224  0030                     ?___awdiv:	; 2 bytes @ 0x10
  1225                           	global	writeEEPROM@data
  1226  0030                     writeEEPROM@data:	; 1 bytes @ 0x10
  1227                           	global	readEEPROM@returnData
  1228  0030                     readEEPROM@returnData:	; 1 bytes @ 0x10
  1229                           	global	lookForVictim@victim
  1230  0030                     lookForVictim@victim:	; 1 bytes @ 0x10
  1231                           	global	___awdiv@divisor
  1232  0030                     ___awdiv@divisor:	; 2 bytes @ 0x10
  1233  0030                     	ds	1
  1234                           	global	??_addNewData
  1235  0031                     ??_addNewData:	; 0 bytes @ 0x11
  1236                           	global	??_EEPROMToSerial
  1237  0031                     ??_EEPROMToSerial:	; 0 bytes @ 0x11
  1238                           	global	findFinalDestination@virtualWallX
  1239  0031                     findFinalDestination@virtualWallX:	; 1 bytes @ 0x11
  1240                           	global	waitFor@type
  1241  0031                     waitFor@type:	; 1 bytes @ 0x11
  1242  0031                     	ds	1
  1243                           	global	?___fttol
  1244  0032                     ?___fttol:	; 4 bytes @ 0x12
  1245                           	global	addNewData@data
  1246  0032                     addNewData@data:	; 1 bytes @ 0x12
  1247                           	global	drive@highByteSpeed
  1248  0032                     drive@highByteSpeed:	; 1 bytes @ 0x12
  1249                           	global	___awdiv@dividend
  1250  0032                     ___awdiv@dividend:	; 2 bytes @ 0x12
  1251                           	global	___fttol@f1
  1252  0032                     ___fttol@f1:	; 3 bytes @ 0x12
  1253  0032                     	ds	1
  1254                           	global	??_goReverse
  1255  0033                     ??_goReverse:	; 0 bytes @ 0x13
  1256                           	global	??_turnRight90
  1257  0033                     ??_turnRight90:	; 0 bytes @ 0x13
  1258                           	global	??_turnLeft90
  1259  0033                     ??_turnLeft90:	; 0 bytes @ 0x13
  1260                           	global	??_turnAround
  1261  0033                     ??_turnAround:	; 0 bytes @ 0x13
  1262                           	global	?_updateMapData
  1263  0033                     ?_updateMapData:	; 0 bytes @ 0x13
  1264                           	global	??_checkIfHome
  1265  0033                     ??_checkIfHome:	; 0 bytes @ 0x13
  1266                           	global	updateMapData@virtualS
  1267  0033                     updateMapData@virtualS:	; 1 bytes @ 0x13
  1268                           	global	ser_putArr@i
  1269  0033                     ser_putArr@i:	; 2 bytes @ 0x13
  1270  0033                     	ds	1
  1271                           	global	??___awdiv
  1272  0034                     ??___awdiv:	; 0 bytes @ 0x14
  1273                           	global	updateMapData@virtualE
  1274  0034                     updateMapData@virtualE:	; 1 bytes @ 0x14
  1275                           	global	EEPROMToSerial@transferDone
  1276  0034                     EEPROMToSerial@transferDone:	; 1 bytes @ 0x14
  1277  0034                     	ds	1
  1278                           	global	??_initSongs
  1279  0035                     ??_initSongs:	; 0 bytes @ 0x15
  1280                           	global	??_init
  1281  0035                     ??_init:	; 0 bytes @ 0x15
  1282                           	global	updateMapData@virtualN
  1283  0035                     updateMapData@virtualN:	; 1 bytes @ 0x15
  1284                           	global	___awdiv@counter
  1285  0035                     ___awdiv@counter:	; 1 bytes @ 0x15
  1286  0035                     	ds	1
  1287                           	global	?_driveForDistance
  1288  0036                     ?_driveForDistance:	; 0 bytes @ 0x16
  1289                           	global	??___fttol
  1290  0036                     ??___fttol:	; 0 bytes @ 0x16
  1291                           	global	updateMapData@victim
  1292  0036                     updateMapData@victim:	; 1 bytes @ 0x16
  1293                           	global	___awdiv@sign
  1294  0036                     ___awdiv@sign:	; 1 bytes @ 0x16
  1295                           	global	driveForDistance@moveDistance
  1296  0036                     driveForDistance@moveDistance:	; 2 bytes @ 0x16
  1297  0036                     	ds	1
  1298                           	global	updateMapData@move
  1299  0037                     updateMapData@move:	; 1 bytes @ 0x17
  1300                           	global	___awdiv@quotient
  1301  0037                     ___awdiv@quotient:	; 2 bytes @ 0x17
  1302  0037                     	ds	1
  1303                           	global	??_updateMapData
  1304  0038                     ??_updateMapData:	; 0 bytes @ 0x18
  1305                           	global	??_driveForDistance
  1306  0038                     ??_driveForDistance:	; 0 bytes @ 0x18
  1307  0038                     	ds	1
  1308                           	global	?_adc_read
  1309  0039                     ?_adc_read:	; 2 bytes @ 0x19
  1310  0039                     	ds	1
  1311                           	global	updateMapData@virtualW
  1312  003A                     updateMapData@virtualW:	; 1 bytes @ 0x1A
  1313                           	global	___fttol@sign1
  1314  003A                     ___fttol@sign1:	; 1 bytes @ 0x1A
  1315                           	global	driveForDistance@deltaDistance
  1316  003A                     driveForDistance@deltaDistance:	; 2 bytes @ 0x1A
  1317  003A                     	ds	1
  1318                           	global	??_adc_read
  1319  003B                     ??_adc_read:	; 0 bytes @ 0x1B
  1320                           	global	updateMapData@completeData
  1321  003B                     updateMapData@completeData:	; 1 bytes @ 0x1B
  1322                           	global	___fttol@lval
  1323  003B                     ___fttol@lval:	; 4 bytes @ 0x1B
  1324  003B                     	ds	1
  1325                           	global	driveForDistance@distance
  1326  003C                     driveForDistance@distance:	; 2 bytes @ 0x1C
  1327  003C                     	ds	2
  1328                           	global	driveForDistance@high
  1329  003E                     driveForDistance@high:	; 1 bytes @ 0x1E
  1330  003E                     	ds	1
  1331                           	global	driveForDistance@low
  1332  003F                     driveForDistance@low:	; 1 bytes @ 0x1F
  1333                           	global	___fttol@exp1
  1334  003F                     ___fttol@exp1:	; 1 bytes @ 0x1F
  1335                           	global	adc_read@adc_value
  1336  003F                     adc_read@adc_value:	; 2 bytes @ 0x1F
  1337  003F                     	ds	1
  1338                           	global	?___lbtoft
  1339  0040                     ?___lbtoft:	; 3 bytes @ 0x20
  1340                           	global	driveForDistance@virtualWall
  1341  0040                     driveForDistance@virtualWall:	; 1 bytes @ 0x20
  1342  0040                     	ds	1
  1343                           	global	?_convert
  1344  0041                     ?_convert:	; 2 bytes @ 0x21
  1345                           	global	driveForDistance@cliff
  1346  0041                     driveForDistance@cliff:	; 1 bytes @ 0x21
  1347                           	global	convert@adc_value
  1348  0041                     convert@adc_value:	; 2 bytes @ 0x21
  1349  0041                     	ds	1
  1350                           	global	??_goBackward
  1351  0042                     ??_goBackward:	; 0 bytes @ 0x22
  1352                           	global	??_goForward
  1353  0042                     ??_goForward:	; 0 bytes @ 0x22
  1354                           	global	??_goLeft
  1355  0042                     ??_goLeft:	; 0 bytes @ 0x22
  1356                           	global	??_goRight
  1357  0042                     ??_goRight:	; 0 bytes @ 0x22
  1358  0042                     	ds	1
  1359                           	global	??_convert
  1360  0043                     ??_convert:	; 0 bytes @ 0x23
  1361                           	global	??_goToNextCell
  1362  0043                     ??_goToNextCell:	; 0 bytes @ 0x23
  1363                           	global	??___lbtoft
  1364  0043                     ??___lbtoft:	; 0 bytes @ 0x23
  1365  0043                     	ds	2
  1366                           	global	?_adc_read_channel
  1367  0045                     ?_adc_read_channel:	; 2 bytes @ 0x25
  1368  0045                     	ds	2
  1369                           	global	??_adc_read_channel
  1370  0047                     ??_adc_read_channel:	; 0 bytes @ 0x27
  1371                           	global	___lbtoft@c
  1372  0047                     ___lbtoft@c:	; 1 bytes @ 0x27
  1373  0047                     	ds	1
  1374                           	global	?___ftmul
  1375  0048                     ?___ftmul:	; 3 bytes @ 0x28
  1376                           	global	adc_read_channel@channel
  1377  0048                     adc_read_channel@channel:	; 1 bytes @ 0x28
  1378                           	global	___ftmul@f1
  1379  0048                     ___ftmul@f1:	; 3 bytes @ 0x28
  1380  0048                     	ds	1
  1381                           	global	?_readIR
  1382  0049                     ?_readIR:	; 2 bytes @ 0x29
  1383  0049                     	ds	2
  1384                           	global	??_readIR
  1385  004B                     ??_readIR:	; 0 bytes @ 0x2B
  1386                           	global	readIR@cm
  1387  004B                     readIR@cm:	; 2 bytes @ 0x2B
  1388                           	global	___ftmul@f2
  1389  004B                     ___ftmul@f2:	; 3 bytes @ 0x2B
  1390  004B                     	ds	2
  1391                           	global	??_findWall
  1392  004D                     ??_findWall:	; 0 bytes @ 0x2D
  1393                           	global	??_frontWallCorrect
  1394  004D                     ??_frontWallCorrect:	; 0 bytes @ 0x2D
  1395                           	global	??_findWalls
  1396  004D                     ??_findWalls:	; 0 bytes @ 0x2D
  1397  004D                     	ds	1
  1398                           	global	??___ftmul
  1399  004E                     ??___ftmul:	; 0 bytes @ 0x2E
  1400  004E                     	ds	1
  1401                           	global	frontWallCorrect@distToWall
  1402  004F                     frontWallCorrect@distToWall:	; 2 bytes @ 0x2F
  1403  004F                     	ds	3
  1404                           	global	___ftmul@exp
  1405  0052                     ___ftmul@exp:	; 1 bytes @ 0x32
  1406  0052                     	ds	1
  1407                           	global	___ftmul@f3_as_product
  1408  0053                     ___ftmul@f3_as_product:	; 3 bytes @ 0x33
  1409  0053                     	ds	3
  1410                           	global	___ftmul@cntr
  1411  0056                     ___ftmul@cntr:	; 1 bytes @ 0x36
  1412  0056                     	ds	1
  1413                           	global	___ftmul@sign
  1414  0057                     ___ftmul@sign:	; 1 bytes @ 0x37
  1415  0057                     	ds	1
  1416                           	global	??___ftadd
  1417  0058                     ??___ftadd:	; 0 bytes @ 0x38
  1418  0058                     	ds	4
  1419 ;;Data sizes: Strings 63, constant 0, data 112, bss 57, persistent 0 stack 0
  1420 ;;Auto spaces:   Size  Autos    Used
  1421 ;; COMMON          14      6      12
  1422 ;; BANK0           80     60      70
  1423 ;; BANK1           80     23      76
  1424 ;; BANK3           96      0      73
  1425 ;; BANK2           96      0      29
  1426                           
  1427 ;;
  1428 ;; Pointer list with targets:
  1429                           
  1430 ;; ?___lbtoft	float  size(1) Largest target is 0
  1431 ;;
  1432 ;; ?___ftpack	float  size(1) Largest target is 0
  1433 ;;
  1434 ;; ?___fttol	long  size(1) Largest target is 0
  1435 ;;
  1436 ;; ?___ftmul	float  size(1) Largest target is 0
  1437 ;;
  1438 ;; ?___ftadd	float  size(1) Largest target is 0
  1439 ;;
  1440 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1441 ;;
  1442 ;; ?_readIR	int  size(1) Largest target is 0
  1443 ;;
  1444 ;; ?_convert	int  size(1) Largest target is 2
  1445 ;;		 -> convert@adc_value(BANK0[2]), 
  1446 ;;
  1447 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1448 ;;
  1449 ;; ?_adc_read	int  size(1) Largest target is 0
  1450 ;;
  1451 ;; ?___awdiv	int  size(1) Largest target is 0
  1452 ;;
  1453 ;; ?_adc_read_channel	int  size(1) Largest target is 0
  1454 ;;
  1455 ;; ser_putArr@array	PTR unsigned char  size(2) Largest target is 29
  1456 ;;		 -> beep(BANK1[5]), champions(BANK3[21]), lookingForU2(BANK2[29]), superMarioBros(BANK3[25]), 
  1457 ;;		 -> finalCountdown(BANK3[27]), 
  1458 ;;
  1459 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 17
  1460 ;;		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[14]), STR_1(CODE[15]), 
  1461 ;;
  1462                           
  1463                           
  1464 ;;
  1465 ;; Critical Paths under _main in COMMON
  1466 ;;
  1467 ;;   None.
  1468 ;;
  1469 ;; Critical Paths under _isr1 in COMMON
  1470 ;;
  1471 ;;   _isr1->___lwmod
  1472 ;;
  1473 ;; Critical Paths under _main in BANK0
  1474 ;;
  1475 ;;   _goToNextCell->_goRight
  1476 ;;   _goToNextCell->_goBackward
  1477 ;;   _goRight->_driveForDistance
  1478 ;;   _goLeft->_driveForDistance
  1479 ;;   _goForward->_driveForDistance
  1480 ;;   _goBackward->_driveForDistance
  1481 ;;   _goParallel->___ftadd
  1482 ;;   _findWall->_readIR
  1483 ;;   _frontWallCorrect->_readIR
  1484 ;;   _driveForDistance->_goReverse
  1485 ;;   _driveForDistance->_turnRight90
  1486 ;;   _driveForDistance->_turnLeft90
  1487 ;;   _updateLocation->_lcd_set_cursor
  1488 ;;   _updateLocation->_lcd_write_1_digit_bcd
  1489 ;;   _lookForVictim->_lcd_set_cursor
  1490 ;;   _lookForVictim->_lcd_write_1_digit_bcd
  1491 ;;   _checkForFinalDestination->_lcd_set_cursor
  1492 ;;   _goReverse->_drive
  1493 ;;   _readIR->_adc_read_channel
  1494 ;;   _findFinalDestination->_lcd_set_cursor
  1495 ;;   _findFinalDestination->_lcd_write_1_digit_bcd
  1496 ;;   _updateMapData->_addNewData
  1497 ;;   _checkIfHome->_drive
  1498 ;;   _turnAround->_drive
  1499 ;;   _turnLeft90->_drive
  1500 ;;   _turnRight90->_drive
  1501 ;;   _initSongs->_ser_putArr
  1502 ;;   _lcd_init->_lcd_write_control
  1503 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
  1504 ;;   _lcd_set_cursor->_lcd_write_control
  1505 ;;   _EEPROMToSerial->_readEEPROM
  1506 ;;   _addNewData->_writeEEPROM
  1507 ;;   _lcd_write_string->_lcd_write_data
  1508 ;;   _adc_read_channel->_convert
  1509 ;;   ___lbtoft->___fttol
  1510 ;;   ___ftmul->___lbtoft
  1511 ;;   ___ftadd->___ftmul
  1512 ;;   _initIRobot->_ser_putch
  1513 ;;   _waitFor->_ser_putch
  1514 ;;   _drive->_ser_putch
  1515 ;;   _convert->_adc_read
  1516 ;;   _play_iCreate_song->_ser_putch
  1517 ;;   _ser_putArr->_ser_putch
  1518 ;;   _readEEPROM->_initEEPROMMode
  1519 ;;   _readEEPROM->_writeSPIByte
  1520 ;;   _writeEEPROM->_initEEPROMMode
  1521 ;;   _writeEEPROM->_writeSPIByte
  1522 ;;   _adc_read->___awdiv
  1523 ;;   ___awdiv->___wmul
  1524 ;;   ___fttol->___ftpack
  1525 ;;
  1526 ;; Critical Paths under _isr1 in BANK0
  1527 ;;
  1528 ;;   None.
  1529 ;;
  1530 ;; Critical Paths under _main in BANK1
  1531 ;;
  1532 ;;   _main->_goParallel
  1533 ;;   _goParallel->___ftadd
  1534 ;;
  1535 ;; Critical Paths under _isr1 in BANK1
  1536 ;;
  1537 ;;   None.
  1538 ;;
  1539 ;; Critical Paths under _main in BANK3
  1540 ;;
  1541 ;;   None.
  1542 ;;
  1543 ;; Critical Paths under _isr1 in BANK3
  1544 ;;
  1545 ;;   None.
  1546 ;;
  1547 ;; Critical Paths under _main in BANK2
  1548 ;;
  1549 ;;   None.
  1550 ;;
  1551 ;; Critical Paths under _isr1 in BANK2
  1552 ;;
  1553 ;;   None.
  1554                           
  1555 ;;
  1556 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1557 ;;
  1558                           
  1559 ;;
  1560 ;;Call Graph Tables:
  1561 ;;
  1562 ;; ---------------------------------------------------------------------------------
  1563 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1564 ;; ---------------------------------------------------------------------------------
  1565 ;; (0) _main                                                 1     1      0   27341
  1566 ;;                                             22 BANK1      1     1      0
  1567 ;;                               _init
  1568 ;;                              _drive
  1569 ;;                     _lcd_set_cursor
  1570 ;;                   _lcd_write_string
  1571 ;;                     _EEPROMToSerial
  1572 ;;                          _findWalls
  1573 ;;                         _turnAround
  1574 ;;                         _turnLeft90
  1575 ;;                        _turnRight90
  1576 ;;                     _lcd_write_data
  1577 ;;                  _play_iCreate_song
  1578 ;;                           _rotateIR
  1579 ;;           _checkForFinalDestination
  1580 ;;                      _lookForVictim
  1581 ;;                         _goParallel
  1582 ;;                   _frontWallCorrect
  1583 ;;                       _goToNextCell
  1584 ;;                            _goRight
  1585 ;;                     _getOrientation
  1586 ;;                          _goForward
  1587 ;;                             _goLeft
  1588 ;;                 _getSuccessfulDrive
  1589 ;;                      _updateMapData
  1590 ;;                     _updateLocation
  1591 ;;                         _updateNode
  1592 ;;                        _checkIfHome
  1593 ;; ---------------------------------------------------------------------------------
  1594 ;; (1) _goToNextCell                                         0     0      0    9170
  1595 ;;               _getSomethingInTheWay
  1596 ;;                             _goLeft
  1597 ;;                          _goForward
  1598 ;;                            _goRight
  1599 ;;                         _goBackward
  1600 ;; ---------------------------------------------------------------------------------
  1601 ;; (1) _findWalls                                            1     1      0    1475
  1602 ;;                                             45 BANK0      1     1      0
  1603 ;;                     _lcd_set_cursor
  1604 ;;                           _findWall
  1605 ;;                     _lcd_write_data
  1606 ;;                           _rotateIR
  1607 ;;                  _play_iCreate_song
  1608 ;; ---------------------------------------------------------------------------------
  1609 ;; (1) _goRight                                              1     1      0    2370
  1610 ;;                                             34 BANK0      1     1      0
  1611 ;;                     _lcd_set_cursor
  1612 ;;                     _lcd_write_data
  1613 ;;                        _turnRight90
  1614 ;;                  _updateOrientation
  1615 ;;                   _driveForDistance
  1616 ;; ---------------------------------------------------------------------------------
  1617 ;; (1) _goLeft                                               0     0      0    2370
  1618 ;;                     _lcd_set_cursor
  1619 ;;                     _lcd_write_data
  1620 ;;                         _turnLeft90
  1621 ;;                  _updateOrientation
  1622 ;;                   _driveForDistance
  1623 ;; ---------------------------------------------------------------------------------
  1624 ;; (1) _goForward                                            0     0      0    2060
  1625 ;;                     _lcd_set_cursor
  1626 ;;                     _lcd_write_data
  1627 ;;                        _getCurrentX
  1628 ;;                        _getCurrentY
  1629 ;;                   _driveForDistance
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (2) _goBackward                                           1     1      0    2370
  1632 ;;                                             34 BANK0      1     1      0
  1633 ;;                     _lcd_set_cursor
  1634 ;;                     _lcd_write_data
  1635 ;;                         _turnAround
  1636 ;;                  _updateOrientation
  1637 ;;                   _driveForDistance
  1638 ;; ---------------------------------------------------------------------------------
  1639 ;; (1) _goParallel                                          13    13      0    5060
  1640 ;;                                              9 BANK1     13    13      0
  1641 ;;                             _readIR
  1642 ;;                           _rotateIR
  1643 ;;                           ___lbtoft
  1644 ;;                            ___ftmul
  1645 ;;                            ___ftadd
  1646 ;;                            ___fttol
  1647 ;;                              _drive
  1648 ;;                            _waitFor
  1649 ;; ---------------------------------------------------------------------------------
  1650 ;; (2) _findWall                                             0     0      0    1218
  1651 ;;                             _readIR
  1652 ;; ---------------------------------------------------------------------------------
  1653 ;; (1) _frontWallCorrect                                     4     4      0    1605
  1654 ;;                                             45 BANK0      4     4      0
  1655 ;;                           _rotateIR
  1656 ;;                             _readIR
  1657 ;;                              _drive
  1658 ;; ---------------------------------------------------------------------------------
  1659 ;; (2) _driveForDistance                                    12    10      2    1964
  1660 ;;                                             22 BANK0     12    10      2
  1661 ;;                              _drive
  1662 ;;                          _ser_putch
  1663 ;;                          _ser_getch
  1664 ;;                          _goReverse
  1665 ;;                        _turnRight90
  1666 ;;                  _updateOrientation
  1667 ;;                         _turnLeft90
  1668 ;;                        _getCurrentY
  1669 ;;                        _getCurrentX
  1670 ;;               _findFinalDestination
  1671 ;; ---------------------------------------------------------------------------------
  1672 ;; (1) _updateLocation                                       1     1      0     158
  1673 ;;                                             14 BANK0      1     1      0
  1674 ;;                     _lcd_set_cursor
  1675 ;;                     _lcd_write_data
  1676 ;;                     _getOrientation
  1677 ;;              _lcd_write_1_digit_bcd
  1678 ;; ---------------------------------------------------------------------------------
  1679 ;; (1) _lookForVictim                                        3     3      0     536
  1680 ;;                                             14 BANK0      3     3      0
  1681 ;;                          _ser_putch
  1682 ;;                          _ser_getch
  1683 ;;                  _play_iCreate_song
  1684 ;;                     _lcd_set_cursor
  1685 ;;                     _lcd_write_data
  1686 ;;                      _getVictimZone
  1687 ;;              _lcd_write_1_digit_bcd
  1688 ;; ---------------------------------------------------------------------------------
  1689 ;; (1) _checkForFinalDestination                             0     0      0     158
  1690 ;;                          _getFinalX
  1691 ;;                          _getFinalY
  1692 ;;                  _play_iCreate_song
  1693 ;;                     _lcd_set_cursor
  1694 ;;                     _lcd_write_data
  1695 ;; ---------------------------------------------------------------------------------
  1696 ;; (1) _init                                                 0     0      0     223
  1697 ;;                           _init_adc
  1698 ;;                           _lcd_init
  1699 ;;                           _ser_init
  1700 ;;                         _initIRobot
  1701 ;;                          _initSongs
  1702 ;; ---------------------------------------------------------------------------------
  1703 ;; (3) _goReverse                                            3     3      0     375
  1704 ;;                                             19 BANK0      3     3      0
  1705 ;;                     _lcd_set_cursor
  1706 ;;                     _lcd_write_data
  1707 ;;                              _drive
  1708 ;;                            _waitFor
  1709 ;; ---------------------------------------------------------------------------------
  1710 ;; (2) _readIR                                               4     2      2    1218
  1711 ;;                                             41 BANK0      4     2      2
  1712 ;;                   _adc_read_channel
  1713 ;;                            _convert
  1714 ;; ---------------------------------------------------------------------------------
  1715 ;; (3) _findFinalDestination                                 4     2      2     406
  1716 ;;                                             14 BANK0      4     2      2
  1717 ;;                     _lcd_set_cursor
  1718 ;;              _lcd_write_1_digit_bcd
  1719 ;;                        _getCurrentY (ARG)
  1720 ;;                        _getCurrentX (ARG)
  1721 ;; ---------------------------------------------------------------------------------
  1722 ;; (1) _updateMapData                                        9     4      5     396
  1723 ;;                                             19 BANK0      9     4      5
  1724 ;;                         _addNewData
  1725 ;;                     _getOrientation (ARG)
  1726 ;; ---------------------------------------------------------------------------------
  1727 ;; (1) _checkIfHome                                          0     0      0     217
  1728 ;;                              _drive
  1729 ;;                  _play_iCreate_song
  1730 ;; ---------------------------------------------------------------------------------
  1731 ;; (3) _turnAround                                           3     3      0     279
  1732 ;;                                             19 BANK0      3     3      0
  1733 ;;                              _drive
  1734 ;;                            _waitFor
  1735 ;; ---------------------------------------------------------------------------------
  1736 ;; (3) _turnLeft90                                           3     3      0     279
  1737 ;;                                             19 BANK0      3     3      0
  1738 ;;                              _drive
  1739 ;;                        _getCurrentX
  1740 ;;                        _getCurrentY
  1741 ;;                            _waitFor
  1742 ;; ---------------------------------------------------------------------------------
  1743 ;; (3) _turnRight90                                          3     3      0     279
  1744 ;;                                             19 BANK0      3     3      0
  1745 ;;                              _drive
  1746 ;;                            _waitFor
  1747 ;; ---------------------------------------------------------------------------------
  1748 ;; (2) _initSongs                                            0     0      0     161
  1749 ;;                         _ser_putArr
  1750 ;; ---------------------------------------------------------------------------------
  1751 ;; (2) _lcd_init                                             0     0      0      31
  1752 ;;                  _lcd_write_control
  1753 ;; ---------------------------------------------------------------------------------
  1754 ;; (2) _lcd_write_1_digit_bcd                                1     1      0      62
  1755 ;;                                             13 BANK0      1     1      0
  1756 ;;                     _lcd_write_data
  1757 ;; ---------------------------------------------------------------------------------
  1758 ;; (2) _lcd_set_cursor                                       1     1      0      65
  1759 ;;                                             13 BANK0      1     1      0
  1760 ;;                  _lcd_write_control
  1761 ;; ---------------------------------------------------------------------------------
  1762 ;; (1) _EEPROMToSerial                                       4     4      0     198
  1763 ;;                                             17 BANK0      4     4      0
  1764 ;;                         _readEEPROM
  1765 ;;                          _ser_putch
  1766 ;; ---------------------------------------------------------------------------------
  1767 ;; (2) _addNewData                                           2     2      0     155
  1768 ;;                                             17 BANK0      2     2      0
  1769 ;;                        _writeEEPROM
  1770 ;; ---------------------------------------------------------------------------------
  1771 ;; (1) _lcd_write_string                                     2     2      0      96
  1772 ;;                                             13 BANK0      2     2      0
  1773 ;;                     _lcd_write_data
  1774 ;; ---------------------------------------------------------------------------------
  1775 ;; (3) _adc_read_channel                                     4     2      2     345
  1776 ;;                                             37 BANK0      4     2      2
  1777 ;;                           _adc_read
  1778 ;;                            _convert (ARG)
  1779 ;; ---------------------------------------------------------------------------------
  1780 ;; (2) ___lbtoft                                             8     5      3     343
  1781 ;;                                             32 BANK0      8     5      3
  1782 ;;                           ___ftpack
  1783 ;;                            ___fttol (ARG)
  1784 ;; ---------------------------------------------------------------------------------
  1785 ;; (2) ___ftmul                                             16    10      6     800
  1786 ;;                                             40 BANK0     16    10      6
  1787 ;;                           ___ftpack
  1788 ;;                           ___lbtoft (ARG)
  1789 ;;                            ___fttol (ARG)
  1790 ;; ---------------------------------------------------------------------------------
  1791 ;; (2) ___ftadd                                             13     7      6    1537
  1792 ;;                                             56 BANK0      4     4      0
  1793 ;;                                              0 BANK1      9     3      6
  1794 ;;                           ___ftpack
  1795 ;;                            ___ftmul (ARG)
  1796 ;;                           ___lbtoft (ARG)
  1797 ;;                            ___fttol (ARG)
  1798 ;; ---------------------------------------------------------------------------------
  1799 ;; (2) _initIRobot                                           3     3      0      31
  1800 ;;                                             12 BANK0      3     3      0
  1801 ;;                          _ser_putch
  1802 ;; ---------------------------------------------------------------------------------
  1803 ;; (4) _waitFor                                              6     4      2     124
  1804 ;;                                             12 BANK0      6     4      2
  1805 ;;                          _ser_putch
  1806 ;; ---------------------------------------------------------------------------------
  1807 ;; (2) _drive                                                7     4      3     155
  1808 ;;                                             12 BANK0      7     4      3
  1809 ;;                          _ser_putch
  1810 ;; ---------------------------------------------------------------------------------
  1811 ;; (2) _rotateIR                                             5     4      1      99
  1812 ;;                                             10 BANK0      5     4      1
  1813 ;; ---------------------------------------------------------------------------------
  1814 ;; (3) _convert                                              4     2      2     839
  1815 ;;                                             33 BANK0      4     2      2
  1816 ;;                             ___wmul
  1817 ;;                            ___awdiv
  1818 ;;                           _adc_read (ARG)
  1819 ;; ---------------------------------------------------------------------------------
  1820 ;; (2) _play_iCreate_song                                    1     1      0      62
  1821 ;;                                             12 BANK0      1     1      0
  1822 ;;                          _ser_putch
  1823 ;; ---------------------------------------------------------------------------------
  1824 ;; (3) _ser_putArr                                           9     5      4     161
  1825 ;;                                             12 BANK0      9     5      4
  1826 ;;                          _ser_putch
  1827 ;; ---------------------------------------------------------------------------------
  1828 ;; (3) _ser_getch                                            2     2      0      34
  1829 ;;                                             10 BANK0      2     2      0
  1830 ;;                           _ser_isrx
  1831 ;; ---------------------------------------------------------------------------------
  1832 ;; (3) _lcd_write_data                                       3     3      0      31
  1833 ;;                                             10 BANK0      3     3      0
  1834 ;; ---------------------------------------------------------------------------------
  1835 ;; (3) _lcd_write_control                                    3     3      0      31
  1836 ;;                                             10 BANK0      3     3      0
  1837 ;; ---------------------------------------------------------------------------------
  1838 ;; (2) _readEEPROM                                           6     5      1     130
  1839 ;;                                             11 BANK0      6     5      1
  1840 ;;                     _initEEPROMMode
  1841 ;;                       _writeSPIByte
  1842 ;; ---------------------------------------------------------------------------------
  1843 ;; (3) _writeEEPROM                                          6     4      2     124
  1844 ;;                                             11 BANK0      6     4      2
  1845 ;;                     _initEEPROMMode
  1846 ;;                       _writeSPIByte
  1847 ;; ---------------------------------------------------------------------------------
  1848 ;; (2) _init_adc                                             1     1      0       0
  1849 ;;                                             10 BANK0      1     1      0
  1850 ;; ---------------------------------------------------------------------------------
  1851 ;; (4) _adc_read                                             8     6      2     323
  1852 ;;                                             25 BANK0      8     6      2
  1853 ;;                            ___awdiv
  1854 ;; ---------------------------------------------------------------------------------
  1855 ;; (4) ___awdiv                                              9     5      4     300
  1856 ;;                                             16 BANK0      9     5      4
  1857 ;;                             ___wmul (ARG)
  1858 ;; ---------------------------------------------------------------------------------
  1859 ;; (2) ___fttol                                             14    10      4     252
  1860 ;;                                             18 BANK0     14    10      4
  1861 ;;                           ___ftpack (ARG)
  1862 ;; ---------------------------------------------------------------------------------
  1863 ;; (3) ___ftpack                                             8     3      5     312
  1864 ;;                                             10 BANK0      8     3      5
  1865 ;; ---------------------------------------------------------------------------------
  1866 ;; (4) ___wmul                                               6     2      4     136
  1867 ;;                                             10 BANK0      6     2      4
  1868 ;; ---------------------------------------------------------------------------------
  1869 ;; (1) _updateNode                                           1     1      0       0
  1870 ;;                                             10 BANK0      1     1      0
  1871 ;; ---------------------------------------------------------------------------------
  1872 ;; (1) _getSuccessfulDrive                                   0     0      0       0
  1873 ;; ---------------------------------------------------------------------------------
  1874 ;; (2) _getSomethingInTheWay                                 0     0      0       0
  1875 ;; ---------------------------------------------------------------------------------
  1876 ;; (2) _getOrientation                                       0     0      0       0
  1877 ;; ---------------------------------------------------------------------------------
  1878 ;; (3) _getCurrentY                                          0     0      0       0
  1879 ;; ---------------------------------------------------------------------------------
  1880 ;; (3) _getCurrentX                                          0     0      0       0
  1881 ;; ---------------------------------------------------------------------------------
  1882 ;; (3) _updateOrientation                                    2     2      0      31
  1883 ;;                                             10 BANK0      2     2      0
  1884 ;; ---------------------------------------------------------------------------------
  1885 ;; (2) _ser_init                                             1     1      0       0
  1886 ;;                                             10 BANK0      1     1      0
  1887 ;; ---------------------------------------------------------------------------------
  1888 ;; (4) _ser_isrx                                             0     0      0       0
  1889 ;; ---------------------------------------------------------------------------------
  1890 ;; (2) _getVictimZone                                        3     2      1     186
  1891 ;;                                             10 BANK0      3     2      1
  1892 ;; ---------------------------------------------------------------------------------
  1893 ;; (2) _getFinalY                                            0     0      0       0
  1894 ;; ---------------------------------------------------------------------------------
  1895 ;; (2) _getFinalX                                            0     0      0       0
  1896 ;; ---------------------------------------------------------------------------------
  1897 ;; (3) _ser_putch                                            2     2      0      31
  1898 ;;                                             10 BANK0      2     2      0
  1899 ;; ---------------------------------------------------------------------------------
  1900 ;; (4) _initEEPROMMode                                       1     1      0       0
  1901 ;;                                             10 BANK0      1     1      0
  1902 ;; ---------------------------------------------------------------------------------
  1903 ;; (4) _writeSPIByte                                         1     1      0      31
  1904 ;;                                             10 BANK0      1     1      0
  1905 ;; ---------------------------------------------------------------------------------
  1906 ;; Estimated maximum stack depth 4
  1907 ;; ---------------------------------------------------------------------------------
  1908 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1909 ;; ---------------------------------------------------------------------------------
  1910 ;; (7) _isr1                                                10    10      0     159
  1911 ;;                                              0 BANK0     10    10      0
  1912 ;;                            ___lwmod
  1913 ;; ---------------------------------------------------------------------------------
  1914 ;; (8) ___lwmod                                              6     2      4     159
  1915 ;;                                              0 COMMON     6     2      4
  1916 ;; ---------------------------------------------------------------------------------
  1917 ;; Estimated maximum stack depth 8
  1918 ;; ---------------------------------------------------------------------------------
  1919                           
  1920 ;; Call Graph Graphs:
  1921                           
  1922 ;; _main (ROOT)
  1923 ;;   _init
  1924 ;;     _init_adc
  1925 ;;     _lcd_init
  1926 ;;       _lcd_write_control
  1927 ;;     _ser_init
  1928 ;;     _initIRobot
  1929 ;;       _ser_putch
  1930 ;;     _initSongs
  1931 ;;       _ser_putArr
  1932 ;;         _ser_putch
  1933 ;;   _drive
  1934 ;;     _ser_putch
  1935 ;;   _lcd_set_cursor
  1936 ;;     _lcd_write_control
  1937 ;;   _lcd_write_string
  1938 ;;     _lcd_write_data
  1939 ;;   _EEPROMToSerial
  1940 ;;     _readEEPROM
  1941 ;;       _initEEPROMMode
  1942 ;;       _writeSPIByte
  1943 ;;     _ser_putch
  1944 ;;   _findWalls
  1945 ;;     _lcd_set_cursor
  1946 ;;       _lcd_write_control
  1947 ;;     _findWall
  1948 ;;       _readIR
  1949 ;;         _adc_read_channel
  1950 ;;           _adc_read
  1951 ;;             ___awdiv
  1952 ;;               ___wmul (ARG)
  1953 ;;           _convert (ARG)
  1954 ;;             ___wmul
  1955 ;;             ___awdiv
  1956 ;;               ___wmul (ARG)
  1957 ;;             _adc_read (ARG)
  1958 ;;               ___awdiv
  1959 ;;                 ___wmul (ARG)
  1960 ;;         _convert
  1961 ;;           ___wmul
  1962 ;;           ___awdiv
  1963 ;;             ___wmul (ARG)
  1964 ;;           _adc_read (ARG)
  1965 ;;             ___awdiv
  1966 ;;               ___wmul (ARG)
  1967 ;;     _lcd_write_data
  1968 ;;     _rotateIR
  1969 ;;     _play_iCreate_song
  1970 ;;       _ser_putch
  1971 ;;   _turnAround
  1972 ;;     _drive
  1973 ;;       _ser_putch
  1974 ;;     _waitFor
  1975 ;;       _ser_putch
  1976 ;;   _turnLeft90
  1977 ;;     _drive
  1978 ;;       _ser_putch
  1979 ;;     _getCurrentX
  1980 ;;     _getCurrentY
  1981 ;;     _waitFor
  1982 ;;       _ser_putch
  1983 ;;   _turnRight90
  1984 ;;     _drive
  1985 ;;       _ser_putch
  1986 ;;     _waitFor
  1987 ;;       _ser_putch
  1988 ;;   _lcd_write_data
  1989 ;;   _play_iCreate_song
  1990 ;;     _ser_putch
  1991 ;;   _rotateIR
  1992 ;;   _checkForFinalDestination
  1993 ;;     _getFinalX
  1994 ;;     _getFinalY
  1995 ;;     _play_iCreate_song
  1996 ;;       _ser_putch
  1997 ;;     _lcd_set_cursor
  1998 ;;       _lcd_write_control
  1999 ;;     _lcd_write_data
  2000 ;;   _lookForVictim
  2001 ;;     _ser_putch
  2002 ;;     _ser_getch
  2003 ;;       _ser_isrx
  2004 ;;     _play_iCreate_song
  2005 ;;       _ser_putch
  2006 ;;     _lcd_set_cursor
  2007 ;;       _lcd_write_control
  2008 ;;     _lcd_write_data
  2009 ;;     _getVictimZone
  2010 ;;     _lcd_write_1_digit_bcd
  2011 ;;       _lcd_write_data
  2012 ;;   _goParallel
  2013 ;;     _readIR
  2014 ;;       _adc_read_channel
  2015 ;;         _adc_read
  2016 ;;           ___awdiv
  2017 ;;             ___wmul (ARG)
  2018 ;;         _convert (ARG)
  2019 ;;           ___wmul
  2020 ;;           ___awdiv
  2021 ;;             ___wmul (ARG)
  2022 ;;           _adc_read (ARG)
  2023 ;;             ___awdiv
  2024 ;;               ___wmul (ARG)
  2025 ;;       _convert
  2026 ;;         ___wmul
  2027 ;;         ___awdiv
  2028 ;;           ___wmul (ARG)
  2029 ;;         _adc_read (ARG)
  2030 ;;           ___awdiv
  2031 ;;             ___wmul (ARG)
  2032 ;;     _rotateIR
  2033 ;;     ___lbtoft
  2034 ;;       ___ftpack
  2035 ;;       ___fttol (ARG)
  2036 ;;         ___ftpack (ARG)
  2037 ;;     ___ftmul
  2038 ;;       ___ftpack
  2039 ;;       ___lbtoft (ARG)
  2040 ;;         ___ftpack
  2041 ;;         ___fttol (ARG)
  2042 ;;           ___ftpack (ARG)
  2043 ;;       ___fttol (ARG)
  2044 ;;         ___ftpack (ARG)
  2045 ;;     ___ftadd
  2046 ;;       ___ftpack
  2047 ;;       ___ftmul (ARG)
  2048 ;;         ___ftpack
  2049 ;;         ___lbtoft (ARG)
  2050 ;;           ___ftpack
  2051 ;;           ___fttol (ARG)
  2052 ;;             ___ftpack (ARG)
  2053 ;;         ___fttol (ARG)
  2054 ;;           ___ftpack (ARG)
  2055 ;;       ___lbtoft (ARG)
  2056 ;;         ___ftpack
  2057 ;;         ___fttol (ARG)
  2058 ;;           ___ftpack (ARG)
  2059 ;;       ___fttol (ARG)
  2060 ;;         ___ftpack (ARG)
  2061 ;;     ___fttol
  2062 ;;       ___ftpack (ARG)
  2063 ;;     _drive
  2064 ;;       _ser_putch
  2065 ;;     _waitFor
  2066 ;;       _ser_putch
  2067 ;;   _frontWallCorrect
  2068 ;;     _rotateIR
  2069 ;;     _readIR
  2070 ;;       _adc_read_channel
  2071 ;;         _adc_read
  2072 ;;           ___awdiv
  2073 ;;             ___wmul (ARG)
  2074 ;;         _convert (ARG)
  2075 ;;           ___wmul
  2076 ;;           ___awdiv
  2077 ;;             ___wmul (ARG)
  2078 ;;           _adc_read (ARG)
  2079 ;;             ___awdiv
  2080 ;;               ___wmul (ARG)
  2081 ;;       _convert
  2082 ;;         ___wmul
  2083 ;;         ___awdiv
  2084 ;;           ___wmul (ARG)
  2085 ;;         _adc_read (ARG)
  2086 ;;           ___awdiv
  2087 ;;             ___wmul (ARG)
  2088 ;;     _drive
  2089 ;;       _ser_putch
  2090 ;;   _goToNextCell
  2091 ;;     _getSomethingInTheWay
  2092 ;;     _goLeft
  2093 ;;       _lcd_set_cursor
  2094 ;;         _lcd_write_control
  2095 ;;       _lcd_write_data
  2096 ;;       _turnLeft90
  2097 ;;         _drive
  2098 ;;           _ser_putch
  2099 ;;         _getCurrentX
  2100 ;;         _getCurrentY
  2101 ;;         _waitFor
  2102 ;;           _ser_putch
  2103 ;;       _updateOrientation
  2104 ;;       _driveForDistance
  2105 ;;         _drive
  2106 ;;           _ser_putch
  2107 ;;         _ser_putch
  2108 ;;         _ser_getch
  2109 ;;           _ser_isrx
  2110 ;;         _goReverse
  2111 ;;           _lcd_set_cursor
  2112 ;;             _lcd_write_control
  2113 ;;           _lcd_write_data
  2114 ;;           _drive
  2115 ;;             _ser_putch
  2116 ;;           _waitFor
  2117 ;;             _ser_putch
  2118 ;;         _turnRight90
  2119 ;;           _drive
  2120 ;;             _ser_putch
  2121 ;;           _waitFor
  2122 ;;             _ser_putch
  2123 ;;         _updateOrientation
  2124 ;;         _turnLeft90
  2125 ;;           _drive
  2126 ;;             _ser_putch
  2127 ;;           _getCurrentX
  2128 ;;           _getCurrentY
  2129 ;;           _waitFor
  2130 ;;             _ser_putch
  2131 ;;         _getCurrentY
  2132 ;;         _getCurrentX
  2133 ;;         _findFinalDestination
  2134 ;;           _lcd_set_cursor
  2135 ;;             _lcd_write_control
  2136 ;;           _lcd_write_1_digit_bcd
  2137 ;;             _lcd_write_data
  2138 ;;           _getCurrentY (ARG)
  2139 ;;           _getCurrentX (ARG)
  2140 ;;     _goForward
  2141 ;;       _lcd_set_cursor
  2142 ;;         _lcd_write_control
  2143 ;;       _lcd_write_data
  2144 ;;       _getCurrentX
  2145 ;;       _getCurrentY
  2146 ;;       _driveForDistance
  2147 ;;         _drive
  2148 ;;           _ser_putch
  2149 ;;         _ser_putch
  2150 ;;         _ser_getch
  2151 ;;           _ser_isrx
  2152 ;;         _goReverse
  2153 ;;           _lcd_set_cursor
  2154 ;;             _lcd_write_control
  2155 ;;           _lcd_write_data
  2156 ;;           _drive
  2157 ;;             _ser_putch
  2158 ;;           _waitFor
  2159 ;;             _ser_putch
  2160 ;;         _turnRight90
  2161 ;;           _drive
  2162 ;;             _ser_putch
  2163 ;;           _waitFor
  2164 ;;             _ser_putch
  2165 ;;         _updateOrientation
  2166 ;;         _turnLeft90
  2167 ;;           _drive
  2168 ;;             _ser_putch
  2169 ;;           _getCurrentX
  2170 ;;           _getCurrentY
  2171 ;;           _waitFor
  2172 ;;             _ser_putch
  2173 ;;         _getCurrentY
  2174 ;;         _getCurrentX
  2175 ;;         _findFinalDestination
  2176 ;;           _lcd_set_cursor
  2177 ;;             _lcd_write_control
  2178 ;;           _lcd_write_1_digit_bcd
  2179 ;;             _lcd_write_data
  2180 ;;           _getCurrentY (ARG)
  2181 ;;           _getCurrentX (ARG)
  2182 ;;     _goRight
  2183 ;;       _lcd_set_cursor
  2184 ;;         _lcd_write_control
  2185 ;;       _lcd_write_data
  2186 ;;       _turnRight90
  2187 ;;         _drive
  2188 ;;           _ser_putch
  2189 ;;         _waitFor
  2190 ;;           _ser_putch
  2191 ;;       _updateOrientation
  2192 ;;       _driveForDistance
  2193 ;;         _drive
  2194 ;;           _ser_putch
  2195 ;;         _ser_putch
  2196 ;;         _ser_getch
  2197 ;;           _ser_isrx
  2198 ;;         _goReverse
  2199 ;;           _lcd_set_cursor
  2200 ;;             _lcd_write_control
  2201 ;;           _lcd_write_data
  2202 ;;           _drive
  2203 ;;             _ser_putch
  2204 ;;           _waitFor
  2205 ;;             _ser_putch
  2206 ;;         _turnRight90
  2207 ;;           _drive
  2208 ;;             _ser_putch
  2209 ;;           _waitFor
  2210 ;;             _ser_putch
  2211 ;;         _updateOrientation
  2212 ;;         _turnLeft90
  2213 ;;           _drive
  2214 ;;             _ser_putch
  2215 ;;           _getCurrentX
  2216 ;;           _getCurrentY
  2217 ;;           _waitFor
  2218 ;;             _ser_putch
  2219 ;;         _getCurrentY
  2220 ;;         _getCurrentX
  2221 ;;         _findFinalDestination
  2222 ;;           _lcd_set_cursor
  2223 ;;             _lcd_write_control
  2224 ;;           _lcd_write_1_digit_bcd
  2225 ;;             _lcd_write_data
  2226 ;;           _getCurrentY (ARG)
  2227 ;;           _getCurrentX (ARG)
  2228 ;;     _goBackward
  2229 ;;       _lcd_set_cursor
  2230 ;;         _lcd_write_control
  2231 ;;       _lcd_write_data
  2232 ;;       _turnAround
  2233 ;;         _drive
  2234 ;;           _ser_putch
  2235 ;;         _waitFor
  2236 ;;           _ser_putch
  2237 ;;       _updateOrientation
  2238 ;;       _driveForDistance
  2239 ;;         _drive
  2240 ;;           _ser_putch
  2241 ;;         _ser_putch
  2242 ;;         _ser_getch
  2243 ;;           _ser_isrx
  2244 ;;         _goReverse
  2245 ;;           _lcd_set_cursor
  2246 ;;             _lcd_write_control
  2247 ;;           _lcd_write_data
  2248 ;;           _drive
  2249 ;;             _ser_putch
  2250 ;;           _waitFor
  2251 ;;             _ser_putch
  2252 ;;         _turnRight90
  2253 ;;           _drive
  2254 ;;             _ser_putch
  2255 ;;           _waitFor
  2256 ;;             _ser_putch
  2257 ;;         _updateOrientation
  2258 ;;         _turnLeft90
  2259 ;;           _drive
  2260 ;;             _ser_putch
  2261 ;;           _getCurrentX
  2262 ;;           _getCurrentY
  2263 ;;           _waitFor
  2264 ;;             _ser_putch
  2265 ;;         _getCurrentY
  2266 ;;         _getCurrentX
  2267 ;;         _findFinalDestination
  2268 ;;           _lcd_set_cursor
  2269 ;;             _lcd_write_control
  2270 ;;           _lcd_write_1_digit_bcd
  2271 ;;             _lcd_write_data
  2272 ;;           _getCurrentY (ARG)
  2273 ;;           _getCurrentX (ARG)
  2274 ;;   _goRight
  2275 ;;     _lcd_set_cursor
  2276 ;;       _lcd_write_control
  2277 ;;     _lcd_write_data
  2278 ;;     _turnRight90
  2279 ;;       _drive
  2280 ;;         _ser_putch
  2281 ;;       _waitFor
  2282 ;;         _ser_putch
  2283 ;;     _updateOrientation
  2284 ;;     _driveForDistance
  2285 ;;       _drive
  2286 ;;         _ser_putch
  2287 ;;       _ser_putch
  2288 ;;       _ser_getch
  2289 ;;         _ser_isrx
  2290 ;;       _goReverse
  2291 ;;         _lcd_set_cursor
  2292 ;;           _lcd_write_control
  2293 ;;         _lcd_write_data
  2294 ;;         _drive
  2295 ;;           _ser_putch
  2296 ;;         _waitFor
  2297 ;;           _ser_putch
  2298 ;;       _turnRight90
  2299 ;;         _drive
  2300 ;;           _ser_putch
  2301 ;;         _waitFor
  2302 ;;           _ser_putch
  2303 ;;       _updateOrientation
  2304 ;;       _turnLeft90
  2305 ;;         _drive
  2306 ;;           _ser_putch
  2307 ;;         _getCurrentX
  2308 ;;         _getCurrentY
  2309 ;;         _waitFor
  2310 ;;           _ser_putch
  2311 ;;       _getCurrentY
  2312 ;;       _getCurrentX
  2313 ;;       _findFinalDestination
  2314 ;;         _lcd_set_cursor
  2315 ;;           _lcd_write_control
  2316 ;;         _lcd_write_1_digit_bcd
  2317 ;;           _lcd_write_data
  2318 ;;         _getCurrentY (ARG)
  2319 ;;         _getCurrentX (ARG)
  2320 ;;   _getOrientation
  2321 ;;   _goForward
  2322 ;;     _lcd_set_cursor
  2323 ;;       _lcd_write_control
  2324 ;;     _lcd_write_data
  2325 ;;     _getCurrentX
  2326 ;;     _getCurrentY
  2327 ;;     _driveForDistance
  2328 ;;       _drive
  2329 ;;         _ser_putch
  2330 ;;       _ser_putch
  2331 ;;       _ser_getch
  2332 ;;         _ser_isrx
  2333 ;;       _goReverse
  2334 ;;         _lcd_set_cursor
  2335 ;;           _lcd_write_control
  2336 ;;         _lcd_write_data
  2337 ;;         _drive
  2338 ;;           _ser_putch
  2339 ;;         _waitFor
  2340 ;;           _ser_putch
  2341 ;;       _turnRight90
  2342 ;;         _drive
  2343 ;;           _ser_putch
  2344 ;;         _waitFor
  2345 ;;           _ser_putch
  2346 ;;       _updateOrientation
  2347 ;;       _turnLeft90
  2348 ;;         _drive
  2349 ;;           _ser_putch
  2350 ;;         _getCurrentX
  2351 ;;         _getCurrentY
  2352 ;;         _waitFor
  2353 ;;           _ser_putch
  2354 ;;       _getCurrentY
  2355 ;;       _getCurrentX
  2356 ;;       _findFinalDestination
  2357 ;;         _lcd_set_cursor
  2358 ;;           _lcd_write_control
  2359 ;;         _lcd_write_1_digit_bcd
  2360 ;;           _lcd_write_data
  2361 ;;         _getCurrentY (ARG)
  2362 ;;         _getCurrentX (ARG)
  2363 ;;   _goLeft
  2364 ;;     _lcd_set_cursor
  2365 ;;       _lcd_write_control
  2366 ;;     _lcd_write_data
  2367 ;;     _turnLeft90
  2368 ;;       _drive
  2369 ;;         _ser_putch
  2370 ;;       _getCurrentX
  2371 ;;       _getCurrentY
  2372 ;;       _waitFor
  2373 ;;         _ser_putch
  2374 ;;     _updateOrientation
  2375 ;;     _driveForDistance
  2376 ;;       _drive
  2377 ;;         _ser_putch
  2378 ;;       _ser_putch
  2379 ;;       _ser_getch
  2380 ;;         _ser_isrx
  2381 ;;       _goReverse
  2382 ;;         _lcd_set_cursor
  2383 ;;           _lcd_write_control
  2384 ;;         _lcd_write_data
  2385 ;;         _drive
  2386 ;;           _ser_putch
  2387 ;;         _waitFor
  2388 ;;           _ser_putch
  2389 ;;       _turnRight90
  2390 ;;         _drive
  2391 ;;           _ser_putch
  2392 ;;         _waitFor
  2393 ;;           _ser_putch
  2394 ;;       _updateOrientation
  2395 ;;       _turnLeft90
  2396 ;;         _drive
  2397 ;;           _ser_putch
  2398 ;;         _getCurrentX
  2399 ;;         _getCurrentY
  2400 ;;         _waitFor
  2401 ;;           _ser_putch
  2402 ;;       _getCurrentY
  2403 ;;       _getCurrentX
  2404 ;;       _findFinalDestination
  2405 ;;         _lcd_set_cursor
  2406 ;;           _lcd_write_control
  2407 ;;         _lcd_write_1_digit_bcd
  2408 ;;           _lcd_write_data
  2409 ;;         _getCurrentY (ARG)
  2410 ;;         _getCurrentX (ARG)
  2411 ;;   _getSuccessfulDrive
  2412 ;;   _updateMapData
  2413 ;;     _addNewData
  2414 ;;       _writeEEPROM
  2415 ;;         _initEEPROMMode
  2416 ;;         _writeSPIByte
  2417 ;;     _getOrientation (ARG)
  2418 ;;   _updateLocation
  2419 ;;     _lcd_set_cursor
  2420 ;;       _lcd_write_control
  2421 ;;     _lcd_write_data
  2422 ;;     _getOrientation
  2423 ;;     _lcd_write_1_digit_bcd
  2424 ;;       _lcd_write_data
  2425 ;;   _updateNode
  2426 ;;   _checkIfHome
  2427 ;;     _drive
  2428 ;;       _ser_putch
  2429 ;;     _play_iCreate_song
  2430 ;;       _ser_putch
  2431 ;;
  2432 ;; _isr1 (ROOT)
  2433 ;;   ___lwmod
  2434 ;;
  2435                           
  2436 ;; Address spaces:
  2437                           
  2438 ;;Name               Size   Autos  Total    Cost      Usage
  2439 ;;BANK3               60      0      49       9       76.0%
  2440 ;;BITBANK3            60      0       0       8        0.0%
  2441 ;;SFR3                 0      0       0       4        0.0%
  2442 ;;BITSFR3              0      0       0       4        0.0%
  2443 ;;BANK2               60      0      1D      11       30.2%
  2444 ;;BITBANK2            60      0       0      10        0.0%
  2445 ;;SFR2                 0      0       0       5        0.0%
  2446 ;;BITSFR2              0      0       0       5        0.0%
  2447 ;;SFR1                 0      0       0       2        0.0%
  2448 ;;BITSFR1              0      0       0       2        0.0%
  2449 ;;BANK1               50     17      4C       7       95.0%
  2450 ;;BITBANK1            50      0       0       6        0.0%
  2451 ;;CODE                 0      0       0       0        0.0%
  2452 ;;DATA                 0      0     10E      12        0.0%
  2453 ;;ABS                  0      0     104       3        0.0%
  2454 ;;NULL                 0      0       0       0        0.0%
  2455 ;;STACK                0      0       A       2        0.0%
  2456 ;;BANK0               50     3C      46       5       87.5%
  2457 ;;BITBANK0            50      0       0       4        0.0%
  2458 ;;SFR0                 0      0       0       1        0.0%
  2459 ;;BITSFR0              0      0       0       1        0.0%
  2460 ;;COMMON               E      6       C       1       85.7%
  2461 ;;BITCOMMON            E      0       2       0       14.3%
  2462 ;;EEDATA             100      0       0       0        0.0%
  2463                           
  2464                           	global	_main
  2465                           psect	maintext,global,class=CODE,delta=2
  2466                           global __pmaintext
  2467  005A                     __pmaintext:
  2468                           
  2469 ;; *************** function _main *****************
  2470 ;; Defined at:
  2471 ;;		line 333 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;		None               void
  2478 ;; Registers used:
  2479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 17F/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0
  2487 ;;      Temps:          0       0       1       0       0
  2488 ;;      Totals:         0       0       1       0       0
  2489 ;;Total ram usage:        1 bytes
  2490 ;; Hardware stack levels required when called:    8
  2491 ;; This function calls:
  2492 ;;		_init
  2493 ;;		_drive
  2494 ;;		_lcd_set_cursor
  2495 ;;		_lcd_write_string
  2496 ;;		_EEPROMToSerial
  2497 ;;		_findWalls
  2498 ;;		_turnAround
  2499 ;;		_turnLeft90
  2500 ;;		_turnRight90
  2501 ;;		_lcd_write_data
  2502 ;;		_play_iCreate_song
  2503 ;;		_rotateIR
  2504 ;;		_checkForFinalDestination
  2505 ;;		_lookForVictim
  2506 ;;		_goParallel
  2507 ;;		_frontWallCorrect
  2508 ;;		_goToNextCell
  2509 ;;		_goRight
  2510 ;;		_getOrientation
  2511 ;;		_goForward
  2512 ;;		_goLeft
  2513 ;;		_getSuccessfulDrive
  2514 ;;		_updateMapData
  2515 ;;		_updateLocation
  2516 ;;		_updateNode
  2517 ;;		_checkIfHome
  2518 ;; This function is called by:
  2519 ;;		Startup code after reset
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           psect	maintext
  2523                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  2524                           	line	333
  2525                           	global	__size_of_main
  2526  020D                     	__size_of_main	equ	__end_of_main-_main
  2527                           	
  2528  005A                     _main:	
  2529                           	opt	stack 0
  2530                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2531                           	line	334
  2532                           	
  2533  005A                     l12445:	
  2534                           ;main.c: 334: init();
  2535  005A  160A  118A  2286   	fcall	_init
              120A  118A         
  2536                           	line	335
  2537                           ;main.c: 335: drive(0, 0, 0, 0);
  2538  005F  1283               	bcf	status, 5	;RP0=0, select bank0
  2539  0060  1303               	bcf	status, 6	;RP1=0, select bank0
  2540  0061  01AC               	clrf	(?_drive)
  2541  0062  01AD               	clrf	0+(?_drive)+01h
  2542  0063  01AE               	clrf	0+(?_drive)+02h
  2543  0064  3000               	movlw	(0)
  2544  0065  160A  118A  2217   	fcall	_drive
              120A  118A         
  2545                           	line	337
  2546                           	
  2547  006A                     l12447:	
  2548                           ;main.c: 337: lcd_set_cursor(0x00);
  2549  006A  3000               	movlw	(0)
  2550  006B  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  118A         
  2551                           	line	338
  2552                           	
  2553  0070                     l12449:	
  2554                           ;main.c: 338: lcd_write_string("(-,-) - -- --- -");
  2555  0070  3001               	movlw	((STR_3-__stringbase))&0ffh
  2556  0071  160A  118A  2075   	fcall	_lcd_write_string
              120A  118A         
  2557                           	line	339
  2558                           ;main.c: 339: lcd_set_cursor(0x40);
  2559  0076  3040               	movlw	(040h)
  2560  0077  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  118A         
  2561                           	line	340
  2562                           	
  2563  007C                     l12451:	
  2564                           ;main.c: 340: lcd_write_string("- - - (3,1) GREG");
  2565  007C  3012               	movlw	((STR_4-__stringbase))&0ffh
  2566  007D  160A  118A  2075   	fcall	_lcd_write_string
              120A  118A         
  2567                           	line	342
  2568                           ;main.c: 342: while(!home)
  2569  0082  2A5F               	goto	l12577
  2570                           	
  2571  0083                     l6788:	
  2572                           	line	345
  2573                           	
  2574  0083                     l12453:	
  2575                           ;main.c: 343: {
  2576                           ;main.c: 345: if(eeprom.pressed && ready == 0)
  2577  0083  1683               	bsf	status, 5	;RP0=1, select bank1
  2578  0084  1303               	bcf	status, 6	;RP1=0, select bank1
  2579  0085  0840               	movf	(_eeprom)^080h,w
  2580  0086  1D03               	skipz
  2581  0087  2889               	goto	u7530
  2582  0088  2896               	goto	l12461
  2583  0089                     u7530:
  2584                           	
  2585  0089                     l12455:	
  2586  0089  18F1               	btfsc	(_ready/8),(_ready)&7
  2587  008A  288C               	goto	u7541
  2588  008B  288D               	goto	u7540
  2589  008C                     u7541:
  2590  008C  2896               	goto	l12461
  2591  008D                     u7540:
  2592                           	line	347
  2593                           	
  2594  008D                     l12457:	
  2595                           ;main.c: 346: {
  2596                           ;main.c: 347: EEPROMToSerial();
  2597  008D  120A  158A  2067   	fcall	_EEPROMToSerial
              120A  118A         
  2598                           	line	348
  2599                           	
  2600  0092                     l12459:	
  2601                           ;main.c: 348: eeprom.pressed = 0;
  2602  0092  1683               	bsf	status, 5	;RP0=1, select bank1
  2603  0093  1303               	bcf	status, 6	;RP1=0, select bank1
  2604  0094  01C0               	clrf	(_eeprom)^080h
  2605  0095  2896               	goto	l12461
  2606                           	line	349
  2607                           	
  2608  0096                     l6789:	
  2609                           	line	351
  2610                           	
  2611  0096                     l12461:	
  2612                           ;main.c: 349: }
  2613                           ;main.c: 351: if(start.pressed && ready == 0)
  2614  0096  0843               	movf	(_start)^080h,w
  2615  0097  1D03               	skipz
  2616  0098  289A               	goto	u7550
  2617  0099  28F5               	goto	l12491
  2618  009A                     u7550:
  2619                           	
  2620  009A                     l12463:	
  2621  009A  18F1               	btfsc	(_ready/8),(_ready)&7
  2622  009B  289D               	goto	u7561
  2623  009C  289E               	goto	u7560
  2624  009D                     u7561:
  2625  009D  28F5               	goto	l12491
  2626  009E                     u7560:
  2627                           	line	353
  2628                           	
  2629  009E                     l12465:	
  2630                           ;main.c: 352: {
  2631                           ;main.c: 353: findWalls();
  2632  009E  120A  158A  20E3   	fcall	_findWalls
              120A  118A         
  2633                           	line	354
  2634                           	
  2635  00A3                     l12467:	
  2636                           ;main.c: 354: if(leftWall && rightWall && frontWall)
  2637  00A3  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2638  00A4  28A6               	goto	u7571
  2639  00A5  28A7               	goto	u7570
  2640  00A6                     u7571:
  2641  00A6  28B5               	goto	l6791
  2642  00A7                     u7570:
  2643                           	
  2644  00A7                     l12469:	
  2645  00A7  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  2646  00A8  28AA               	goto	u7581
  2647  00A9  28AB               	goto	u7580
  2648  00AA                     u7581:
  2649  00AA  28B5               	goto	l6791
  2650  00AB                     u7580:
  2651                           	
  2652  00AB                     l12471:	
  2653  00AB  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2654  00AC  28AE               	goto	u7591
  2655  00AD  28AF               	goto	u7590
  2656  00AE                     u7591:
  2657  00AE  28B5               	goto	l6791
  2658  00AF                     u7590:
  2659                           	line	355
  2660                           	
  2661  00AF                     l12473:	
  2662                           ;main.c: 355: turnAround();
  2663  00AF  160A  118A  2508   	fcall	_turnAround
              120A  118A         
  2664  00B4  28D3               	goto	l12483
  2665                           	line	356
  2666                           	
  2667  00B5                     l6791:	
  2668                           ;main.c: 356: else if (rightWall && frontWall)
  2669  00B5  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  2670  00B6  28B8               	goto	u7601
  2671  00B7  28B9               	goto	u7600
  2672  00B8                     u7601:
  2673  00B8  28C3               	goto	l6793
  2674  00B9                     u7600:
  2675                           	
  2676  00B9                     l12475:	
  2677  00B9  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2678  00BA  28BC               	goto	u7611
  2679  00BB  28BD               	goto	u7610
  2680  00BC                     u7611:
  2681  00BC  28C3               	goto	l6793
  2682  00BD                     u7610:
  2683                           	line	357
  2684                           	
  2685  00BD                     l12477:	
  2686                           ;main.c: 357: turnLeft90();
  2687  00BD  160A  118A  26C8   	fcall	_turnLeft90
              120A  118A         
  2688  00C2  28D3               	goto	l12483
  2689                           	line	358
  2690                           	
  2691  00C3                     l6793:	
  2692                           ;main.c: 358: else if(leftWall && frontWall)
  2693  00C3  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2694  00C4  28C6               	goto	u7621
  2695  00C5  28C7               	goto	u7620
  2696  00C6                     u7621:
  2697  00C6  28D3               	goto	l12483
  2698  00C7                     u7620:
  2699                           	
  2700  00C7                     l12479:	
  2701  00C7  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2702  00C8  28CA               	goto	u7631
  2703  00C9  28CB               	goto	u7630
  2704  00CA                     u7631:
  2705  00CA  28D3               	goto	l12483
  2706  00CB                     u7630:
  2707                           	line	359
  2708                           	
  2709  00CB                     l12481:	
  2710                           ;main.c: 359: turnRight90();
  2711  00CB  160A  118A  237A   	fcall	_turnRight90
              120A  118A         
  2712  00D0  28D3               	goto	l12483
  2713                           	
  2714  00D1                     l6795:	
  2715  00D1  28D3               	goto	l12483
  2716                           	line	360
  2717                           	
  2718  00D2                     l6794:	
  2719  00D2  28D3               	goto	l12483
  2720                           	
  2721  00D3                     l6792:	
  2722                           	
  2723  00D3                     l12483:	
  2724                           ;main.c: 360: ready = 1;
  2725  00D3  14F1               	bsf	(_ready/8),(_ready)&7
  2726                           	line	361
  2727                           	
  2728  00D4                     l12485:	
  2729                           ;main.c: 361: lcd_set_cursor(0x06);
  2730  00D4  3006               	movlw	(06h)
  2731  00D5  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  118A         
  2732                           	line	362
  2733                           	
  2734  00DA                     l12487:	
  2735                           ;main.c: 362: lcd_write_data('E');
  2736  00DA  3045               	movlw	(045h)
  2737  00DB  160A  158A  26F9   	fcall	_lcd_write_data
              120A  118A         
  2738                           	line	363
  2739                           ;main.c: 363: play_iCreate_song(1);
  2740  00E0  3001               	movlw	(01h)
  2741  00E1  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  2742                           	line	364
  2743                           	
  2744  00E6                     l12489:	
  2745                           ;main.c: 364: rotateIR(12, 0b00001101);
  2746  00E6  300D               	movlw	(0Dh)
  2747  00E7  1683               	bsf	status, 5	;RP0=1, select bank1
  2748  00E8  1303               	bcf	status, 6	;RP1=0, select bank1
  2749  00E9  00E4               	movwf	(??_main+0)^080h+0
  2750  00EA  0864               	movf	(??_main+0)^080h+0,w
  2751  00EB  1283               	bcf	status, 5	;RP0=0, select bank0
  2752  00EC  1303               	bcf	status, 6	;RP1=0, select bank0
  2753  00ED  00AA               	movwf	(?_rotateIR)
  2754  00EE  300C               	movlw	(0Ch)
  2755  00EF  160A  118A  21E4   	fcall	_rotateIR
              120A  118A         
  2756  00F4  28F5               	goto	l12491
  2757                           	line	365
  2758                           	
  2759  00F5                     l6790:	
  2760                           	line	367
  2761                           	
  2762  00F5                     l12491:	
  2763                           ;main.c: 365: }
  2764                           ;main.c: 367: if(start.pressed && ready == 1)
  2765  00F5  1683               	bsf	status, 5	;RP0=1, select bank1
  2766  00F6  1303               	bcf	status, 6	;RP1=0, select bank1
  2767  00F7  0843               	movf	(_start)^080h,w
  2768  00F8  1D03               	skipz
  2769  00F9  28FB               	goto	u7640
  2770  00FA  2A5F               	goto	l12577
  2771  00FB                     u7640:
  2772                           	
  2773  00FB                     l12493:	
  2774  00FB  1CF1               	btfss	(_ready/8),(_ready)&7
  2775  00FC  28FE               	goto	u7651
  2776  00FD  28FF               	goto	u7650
  2777  00FE                     u7651:
  2778  00FE  2A5F               	goto	l12577
  2779  00FF                     u7650:
  2780                           	line	369
  2781                           	
  2782  00FF                     l12495:	
  2783                           ;main.c: 368: {
  2784                           ;main.c: 369: checkForFinalDestination();
  2785  00FF  160A  118A  21B7   	fcall	_checkForFinalDestination
              120A  118A         
  2786                           	line	370
  2787                           ;main.c: 370: play_iCreate_song(5);
  2788  0104  3005               	movlw	(05h)
  2789  0105  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  2790                           	line	371
  2791                           ;main.c: 371: lookForVictim();
  2792  010A  120A  158A  2009   	fcall	_lookForVictim
              120A  118A         
  2793                           	line	372
  2794                           ;main.c: 372: play_iCreate_song(5);
  2795  010F  3005               	movlw	(05h)
  2796  0110  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  2797                           	line	373
  2798                           	
  2799  0115                     l12497:	
  2800                           ;main.c: 373: findWalls();
  2801  0115  120A  158A  20E3   	fcall	_findWalls
              120A  118A         
  2802                           	line	374
  2803                           	
  2804  011A                     l12499:	
  2805                           ;main.c: 374: play_iCreate_song(5);
  2806  011A  3005               	movlw	(05h)
  2807  011B  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  2808                           	line	375
  2809                           	
  2810  0120                     l12501:	
  2811                           ;main.c: 375: if(leftWall)
  2812  0120  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2813  0121  2923               	goto	u7661
  2814  0122  2924               	goto	u7660
  2815  0123                     u7661:
  2816  0123  292A               	goto	l12505
  2817  0124                     u7660:
  2818                           	line	376
  2819                           	
  2820  0124                     l12503:	
  2821                           ;main.c: 376: goParallel();
  2822  0124  120A  158A  26A5   	fcall	_goParallel
              120A  118A         
  2823  0129  2939               	goto	l12507
  2824                           	line	377
  2825                           	
  2826  012A                     l6797:	
  2827                           	line	378
  2828                           	
  2829  012A                     l12505:	
  2830                           ;main.c: 377: else
  2831                           ;main.c: 378: rotateIR(12, 0b00001101);
  2832  012A  300D               	movlw	(0Dh)
  2833  012B  1683               	bsf	status, 5	;RP0=1, select bank1
  2834  012C  1303               	bcf	status, 6	;RP1=0, select bank1
  2835  012D  00E4               	movwf	(??_main+0)^080h+0
  2836  012E  0864               	movf	(??_main+0)^080h+0,w
  2837  012F  1283               	bcf	status, 5	;RP0=0, select bank0
  2838  0130  1303               	bcf	status, 6	;RP1=0, select bank0
  2839  0131  00AA               	movwf	(?_rotateIR)
  2840  0132  300C               	movlw	(0Ch)
  2841  0133  160A  118A  21E4   	fcall	_rotateIR
              120A  118A         
  2842  0138  2939               	goto	l12507
  2843                           	
  2844  0139                     l6798:	
  2845                           	line	379
  2846                           	
  2847  0139                     l12507:	
  2848                           ;main.c: 379: play_iCreate_song(5);
  2849  0139  3005               	movlw	(05h)
  2850  013A  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  2851                           	line	380
  2852                           	
  2853  013F                     l12509:	
  2854                           ;main.c: 380: if(frontWall)
  2855  013F  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2856  0140  2942               	goto	u7671
  2857  0141  2943               	goto	u7670
  2858  0142                     u7671:
  2859  0142  2949               	goto	l12513
  2860  0143                     u7670:
  2861                           	line	381
  2862                           	
  2863  0143                     l12511:	
  2864                           ;main.c: 381: frontWallCorrect();
  2865  0143  120A  158A  22B8   	fcall	_frontWallCorrect
              120A  118A         
  2866  0148  2949               	goto	l12513
  2867                           	
  2868  0149                     l6799:	
  2869                           	line	382
  2870                           	
  2871  0149                     l12513:	
  2872                           ;main.c: 382: play_iCreate_song(5);
  2873  0149  3005               	movlw	(05h)
  2874  014A  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  2875                           	line	383
  2876                           ;main.c: 383: switch(node)
  2877  014F  2A0C               	goto	l12561
  2878                           	line	385
  2879                           ;main.c: 384: {
  2880                           ;main.c: 385: case 0:
  2881                           	
  2882  0150                     l6801:	
  2883                           	line	386
  2884                           	
  2885  0150                     l12515:	
  2886                           ;main.c: 386: goToNextCell();
  2887  0150  160A  118A  24C3   	fcall	_goToNextCell
              120A  118A         
  2888                           	line	387
  2889                           ;main.c: 387: break;
  2890  0155  2A1C               	goto	l12563
  2891                           	line	388
  2892                           ;main.c: 388: case 1:
  2893                           	
  2894  0156                     l6803:	
  2895                           	line	389
  2896                           ;main.c: 389: if (goingHome)
  2897  0156  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  2898  0157  2959               	goto	u7681
  2899  0158  295A               	goto	u7680
  2900  0159                     u7681:
  2901  0159  298B               	goto	l12529
  2902  015A                     u7680:
  2903                           	line	391
  2904                           	
  2905  015A                     l12517:	
  2906                           ;main.c: 390: {
  2907                           ;main.c: 391: if (victimZone == 1)
  2908  015A  1283               	bcf	status, 5	;RP0=0, select bank0
  2909  015B  1303               	bcf	status, 6	;RP1=0, select bank0
  2910  015C  0862               	movf	(_victimZone),w	;volatile
  2911  015D  3A01               	xorlw	01h
  2912  015E  1D03               	skipz
  2913  015F  2961               	goto	u7691
  2914  0160  2962               	goto	u7690
  2915  0161                     u7691:
  2916  0161  2968               	goto	l12521
  2917  0162                     u7690:
  2918                           	line	392
  2919                           	
  2920  0162                     l12519:	
  2921                           ;main.c: 392: goRight();
  2922  0162  160A  118A  20C0   	fcall	_goRight
              120A  118A         
  2923  0167  2A1C               	goto	l12563
  2924                           	line	393
  2925                           	
  2926  0168                     l6805:	
  2927                           	
  2928  0168                     l12521:	
  2929                           ;main.c: 393: else if (getOrientation() == EAST)
  2930  0168  160A  158A  2693   	fcall	_getOrientation
              120A  118A         
  2931  016D  3A02               	xorlw	02h
  2932  016E  1D03               	skipz
  2933  016F  2971               	goto	u7701
  2934  0170  2972               	goto	u7700
  2935  0171                     u7701:
  2936  0171  2978               	goto	l12525
  2937  0172                     u7700:
  2938                           	line	394
  2939                           	
  2940  0172                     l12523:	
  2941                           ;main.c: 394: goForward();
  2942  0172  160A  118A  22C0   	fcall	_goForward
              120A  118A         
  2943  0177  2A1C               	goto	l12563
  2944                           	line	395
  2945                           	
  2946  0178                     l6807:	
  2947                           	
  2948  0178                     l12525:	
  2949                           ;main.c: 395: else if (getOrientation() == SOUTH)
  2950  0178  160A  158A  2693   	fcall	_getOrientation
              120A  118A         
  2951  017D  3A01               	xorlw	01h
  2952  017E  1D03               	skipz
  2953  017F  2981               	goto	u7711
  2954  0180  2982               	goto	u7710
  2955  0181                     u7711:
  2956  0181  2A1C               	goto	l12563
  2957  0182                     u7710:
  2958                           	line	396
  2959                           	
  2960  0182                     l12527:	
  2961                           ;main.c: 396: goRight();
  2962  0182  160A  118A  20C0   	fcall	_goRight
              120A  118A         
  2963  0187  2A1C               	goto	l12563
  2964                           	
  2965  0188                     l6809:	
  2966  0188  2A1C               	goto	l12563
  2967                           	line	397
  2968                           	
  2969  0189                     l6808:	
  2970  0189  2A1C               	goto	l12563
  2971                           	
  2972  018A                     l6806:	
  2973                           ;main.c: 397: }
  2974  018A  2A1C               	goto	l12563
  2975                           	line	398
  2976                           	
  2977  018B                     l6804:	
  2978                           	line	399
  2979                           	
  2980  018B                     l12529:	
  2981                           ;main.c: 398: else
  2982                           ;main.c: 399: goToNextCell();
  2983  018B  160A  118A  24C3   	fcall	_goToNextCell
              120A  118A         
  2984  0190  2A1C               	goto	l12563
  2985                           	
  2986  0191                     l6810:	
  2987                           	line	400
  2988                           ;main.c: 400: break;
  2989  0191  2A1C               	goto	l12563
  2990                           	line	401
  2991                           ;main.c: 401: case 2:
  2992                           	
  2993  0192                     l6811:	
  2994                           	line	402
  2995                           ;main.c: 402: if (goingHome)
  2996  0192  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  2997  0193  2995               	goto	u7721
  2998  0194  2996               	goto	u7720
  2999  0195                     u7721:
  3000  0195  29C7               	goto	l12543
  3001  0196                     u7720:
  3002                           	line	404
  3003                           	
  3004  0196                     l12531:	
  3005                           ;main.c: 403: {
  3006                           ;main.c: 404: if (victimZone == 2)
  3007  0196  1283               	bcf	status, 5	;RP0=0, select bank0
  3008  0197  1303               	bcf	status, 6	;RP1=0, select bank0
  3009  0198  0862               	movf	(_victimZone),w	;volatile
  3010  0199  3A02               	xorlw	02h
  3011  019A  1D03               	skipz
  3012  019B  299D               	goto	u7731
  3013  019C  299E               	goto	u7730
  3014  019D                     u7731:
  3015  019D  29A4               	goto	l12535
  3016  019E                     u7730:
  3017                           	line	405
  3018                           	
  3019  019E                     l12533:	
  3020                           ;main.c: 405: goForward();
  3021  019E  160A  118A  22C0   	fcall	_goForward
              120A  118A         
  3022  01A3  2A1C               	goto	l12563
  3023                           	line	406
  3024                           	
  3025  01A4                     l6813:	
  3026                           	
  3027  01A4                     l12535:	
  3028                           ;main.c: 406: else if (getOrientation() == SOUTH)
  3029  01A4  160A  158A  2693   	fcall	_getOrientation
              120A  118A         
  3030  01A9  3A01               	xorlw	01h
  3031  01AA  1D03               	skipz
  3032  01AB  29AD               	goto	u7741
  3033  01AC  29AE               	goto	u7740
  3034  01AD                     u7741:
  3035  01AD  29B4               	goto	l12539
  3036  01AE                     u7740:
  3037                           	line	407
  3038                           	
  3039  01AE                     l12537:	
  3040                           ;main.c: 407: goRight();
  3041  01AE  160A  118A  20C0   	fcall	_goRight
              120A  118A         
  3042  01B3  2A1C               	goto	l12563
  3043                           	line	408
  3044                           	
  3045  01B4                     l6815:	
  3046                           	
  3047  01B4                     l12539:	
  3048                           ;main.c: 408: else if (getOrientation() == NORTH)
  3049  01B4  160A  158A  2693   	fcall	_getOrientation
              120A  118A         
  3050  01B9  3A03               	xorlw	03h
  3051  01BA  1D03               	skipz
  3052  01BB  29BD               	goto	u7751
  3053  01BC  29BE               	goto	u7750
  3054  01BD                     u7751:
  3055  01BD  2A1C               	goto	l12563
  3056  01BE                     u7750:
  3057                           	line	409
  3058                           	
  3059  01BE                     l12541:	
  3060                           ;main.c: 409: goLeft();
  3061  01BE  160A  118A  209A   	fcall	_goLeft
              120A  118A         
  3062  01C3  2A1C               	goto	l12563
  3063                           	
  3064  01C4                     l6817:	
  3065  01C4  2A1C               	goto	l12563
  3066                           	line	410
  3067                           	
  3068  01C5                     l6816:	
  3069  01C5  2A1C               	goto	l12563
  3070                           	
  3071  01C6                     l6814:	
  3072                           ;main.c: 410: }
  3073  01C6  2A1C               	goto	l12563
  3074                           	line	411
  3075                           	
  3076  01C7                     l6812:	
  3077                           	line	412
  3078                           	
  3079  01C7                     l12543:	
  3080                           ;main.c: 411: else
  3081                           ;main.c: 412: goToNextCell();
  3082  01C7  160A  118A  24C3   	fcall	_goToNextCell
              120A  118A         
  3083  01CC  2A1C               	goto	l12563
  3084                           	
  3085  01CD                     l6818:	
  3086                           	line	413
  3087                           ;main.c: 413: break;
  3088  01CD  2A1C               	goto	l12563
  3089                           	line	414
  3090                           ;main.c: 414: case 3:
  3091                           	
  3092  01CE                     l6819:	
  3093                           	line	415
  3094                           ;main.c: 415: if (goingHome)
  3095  01CE  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3096  01CF  29D1               	goto	u7761
  3097  01D0  29D2               	goto	u7760
  3098  01D1                     u7761:
  3099  01D1  2A03               	goto	l12557
  3100  01D2                     u7760:
  3101                           	line	417
  3102                           	
  3103  01D2                     l12545:	
  3104                           ;main.c: 416: {
  3105                           ;main.c: 417: if (victimZone == 3)
  3106  01D2  1283               	bcf	status, 5	;RP0=0, select bank0
  3107  01D3  1303               	bcf	status, 6	;RP1=0, select bank0
  3108  01D4  0862               	movf	(_victimZone),w	;volatile
  3109  01D5  3A03               	xorlw	03h
  3110  01D6  1D03               	skipz
  3111  01D7  29D9               	goto	u7771
  3112  01D8  29DA               	goto	u7770
  3113  01D9                     u7771:
  3114  01D9  29E0               	goto	l12549
  3115  01DA                     u7770:
  3116                           	line	418
  3117                           	
  3118  01DA                     l12547:	
  3119                           ;main.c: 418: goRight();
  3120  01DA  160A  118A  20C0   	fcall	_goRight
              120A  118A         
  3121  01DF  2A1C               	goto	l12563
  3122                           	line	419
  3123                           	
  3124  01E0                     l6821:	
  3125                           	
  3126  01E0                     l12549:	
  3127                           ;main.c: 419: else if (getOrientation() == EAST)
  3128  01E0  160A  158A  2693   	fcall	_getOrientation
              120A  118A         
  3129  01E5  3A02               	xorlw	02h
  3130  01E6  1D03               	skipz
  3131  01E7  29E9               	goto	u7781
  3132  01E8  29EA               	goto	u7780
  3133  01E9                     u7781:
  3134  01E9  29F0               	goto	l12553
  3135  01EA                     u7780:
  3136                           	line	420
  3137                           	
  3138  01EA                     l12551:	
  3139                           ;main.c: 420: goForward();
  3140  01EA  160A  118A  22C0   	fcall	_goForward
              120A  118A         
  3141  01EF  2A1C               	goto	l12563
  3142                           	line	421
  3143                           	
  3144  01F0                     l6823:	
  3145                           	
  3146  01F0                     l12553:	
  3147                           ;main.c: 421: else if (getOrientation() == SOUTH)
  3148  01F0  160A  158A  2693   	fcall	_getOrientation
              120A  118A         
  3149  01F5  3A01               	xorlw	01h
  3150  01F6  1D03               	skipz
  3151  01F7  29F9               	goto	u7791
  3152  01F8  29FA               	goto	u7790
  3153  01F9                     u7791:
  3154  01F9  2A1C               	goto	l12563
  3155  01FA                     u7790:
  3156                           	line	422
  3157                           	
  3158  01FA                     l12555:	
  3159                           ;main.c: 422: goLeft();
  3160  01FA  160A  118A  209A   	fcall	_goLeft
              120A  118A         
  3161  01FF  2A1C               	goto	l12563
  3162                           	
  3163  0200                     l6825:	
  3164  0200  2A1C               	goto	l12563
  3165                           	line	423
  3166                           	
  3167  0201                     l6824:	
  3168  0201  2A1C               	goto	l12563
  3169                           	
  3170  0202                     l6822:	
  3171                           ;main.c: 423: }
  3172  0202  2A1C               	goto	l12563
  3173                           	line	424
  3174                           	
  3175  0203                     l6820:	
  3176                           	line	425
  3177                           	
  3178  0203                     l12557:	
  3179                           ;main.c: 424: else
  3180                           ;main.c: 425: goToNextCell();
  3181  0203  160A  118A  24C3   	fcall	_goToNextCell
              120A  118A         
  3182  0208  2A1C               	goto	l12563
  3183                           	
  3184  0209                     l6826:	
  3185                           	line	426
  3186                           ;main.c: 426: break;
  3187  0209  2A1C               	goto	l12563
  3188                           	line	427
  3189                           ;main.c: 427: default:
  3190                           	
  3191  020A                     l6827:	
  3192                           	line	428
  3193                           ;main.c: 428: break;
  3194  020A  2A1C               	goto	l12563
  3195                           	line	429
  3196                           	
  3197  020B                     l12559:	
  3198                           ;main.c: 429: }
  3199  020B  2A1C               	goto	l12563
  3200                           	line	383
  3201                           	
  3202  020C                     l6800:	
  3203                           	
  3204  020C                     l12561:	
  3205  020C  1683               	bsf	status, 5	;RP0=1, select bank1
  3206  020D  1303               	bcf	status, 6	;RP1=0, select bank1
  3207  020E  0848               	movf	(_node)^080h,w	;volatile
  3208                           	; Switch size 1, requested type "space"
  3209                           ; Number of cases is 4, Range of values is 0 to 3
  3210                           ; switch strategies available:
  3211                           ; Name         Instructions Cycles
  3212                           ; simple_byte           13     7 (average)
  3213                           ; direct_byte           20     8 (fixed)
  3214                           ; jumptable            260     6 (fixed)
  3215                           ; rangetable             8     6 (fixed)
  3216                           ; spacedrange           14     9 (fixed)
  3217                           ; locatedrange           4     3 (fixed)
  3218                           ;	Chosen strategy is simple_byte
  3219                           
  3220                           	opt asmopt_off
  3221  020F  3A00               	xorlw	0^0	; case 0
  3222  0210  1903               	skipnz
  3223  0211  2950               	goto	l12515
  3224  0212  3A01               	xorlw	1^0	; case 1
  3225  0213  1903               	skipnz
  3226  0214  2956               	goto	l6803
  3227  0215  3A03               	xorlw	2^1	; case 2
  3228  0216  1903               	skipnz
  3229  0217  2992               	goto	l6811
  3230  0218  3A01               	xorlw	3^2	; case 3
  3231  0219  1903               	skipnz
  3232  021A  29CE               	goto	l6819
  3233  021B  2A1C               	goto	l12563
  3234                           	opt asmopt_on
  3235                           
  3236                           	line	429
  3237                           	
  3238  021C                     l6802:	
  3239                           	line	430
  3240                           	
  3241  021C                     l12563:	
  3242                           ;main.c: 430: play_iCreate_song(5);
  3243  021C  3005               	movlw	(05h)
  3244  021D  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  3245                           	line	433
  3246                           	
  3247  0222                     l12565:	
  3248                           ;main.c: 433: if(getSuccessfulDrive())
  3249  0222  160A  158A  26A5   	fcall	_getSuccessfulDrive
              120A  118A         
  3250  0227  1C03               	btfss	status,0
  3251  0228  2A2A               	goto	u7801
  3252  0229  2A2B               	goto	u7800
  3253  022A                     u7801:
  3254  022A  2A5F               	goto	l12577
  3255  022B                     u7800:
  3256                           	line	436
  3257                           	
  3258  022B                     l12567:	
  3259                           ;main.c: 434: {
  3260                           ;main.c: 436: updateMapData(0,0,0,0,0,getOrientation());
  3261  022B  1283               	bcf	status, 5	;RP0=0, select bank0
  3262  022C  1303               	bcf	status, 6	;RP1=0, select bank0
  3263  022D  01B3               	clrf	(?_updateMapData)
  3264  022E  01B4               	clrf	0+(?_updateMapData)+01h
  3265  022F  01B5               	clrf	0+(?_updateMapData)+02h
  3266  0230  01B6               	clrf	0+(?_updateMapData)+03h
  3267  0231  160A  158A  2693   	fcall	_getOrientation
              120A  118A         
  3268  0236  1683               	bsf	status, 5	;RP0=1, select bank1
  3269  0237  1303               	bcf	status, 6	;RP1=0, select bank1
  3270  0238  00E4               	movwf	(??_main+0)^080h+0
  3271  0239  0864               	movf	(??_main+0)^080h+0,w
  3272  023A  1283               	bcf	status, 5	;RP0=0, select bank0
  3273  023B  1303               	bcf	status, 6	;RP1=0, select bank0
  3274  023C  00B7               	movwf	0+(?_updateMapData)+04h
  3275  023D  3000               	movlw	(0)
  3276  023E  160A  118A  262B   	fcall	_updateMapData
              120A  118A         
  3277                           	line	437
  3278                           	
  3279  0243                     l12569:	
  3280                           ;main.c: 437: updateLocation();
  3281  0243  160A  118A  2722   	fcall	_updateLocation
              120A  118A         
  3282                           	line	438
  3283                           	
  3284  0248                     l12571:	
  3285                           ;main.c: 438: updateNode();
  3286  0248  160A  118A  23FA   	fcall	_updateNode
              120A  118A         
  3287                           	line	439
  3288                           	
  3289  024D                     l12573:	
  3290                           ;main.c: 439: if(goingHome)
  3291  024D  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3292  024E  2A50               	goto	u7811
  3293  024F  2A51               	goto	u7810
  3294  0250                     u7811:
  3295  0250  2A56               	goto	l6829
  3296  0251                     u7810:
  3297                           	line	440
  3298                           	
  3299  0251                     l12575:	
  3300                           ;main.c: 440: checkIfHome();
  3301  0251  160A  158A  27BF   	fcall	_checkIfHome
              120A  118A         
  3302                           	
  3303  0256                     l6829:	
  3304                           	line	441
  3305                           ;main.c: 441: play_iCreate_song(5);
  3306  0256  3005               	movlw	(05h)
  3307  0257  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  118A         
  3308  025C  2A5F               	goto	l12577
  3309                           	line	442
  3310                           	
  3311  025D                     l6828:	
  3312  025D  2A5F               	goto	l12577
  3313                           	line	443
  3314                           	
  3315  025E                     l6796:	
  3316  025E  2A5F               	goto	l12577
  3317                           	line	444
  3318                           	
  3319  025F                     l6787:	
  3320                           	line	342
  3321                           	
  3322  025F                     l12577:	
  3323  025F  1F70               	btfss	(_home/8),(_home)&7
  3324  0260  2A62               	goto	u7821
  3325  0261  2A63               	goto	u7820
  3326  0262                     u7821:
  3327  0262  2883               	goto	l12453
  3328  0263                     u7820:
  3329  0263  2A64               	goto	l6831
  3330                           	
  3331  0264                     l6830:	
  3332                           	line	446
  3333                           	
  3334  0264                     l6831:	
  3335                           	global	start
  3336  0264  120A  118A  2812   	ljmp	start
  3337                           	opt stack 0
  3338                           GLOBAL	__end_of_main
  3339  0267                     	__end_of_main:
  3340 ;; =============== function _main ends ============
  3341                           
  3342                           	signat	_main,88
  3343                           	global	_goToNextCell
  3344                           psect	text2197,local,class=CODE,delta=2
  3345                           global __ptext2197
  3346  14C3                     __ptext2197:
  3347                           
  3348 ;; *************** function _goToNextCell *****************
  3349 ;; Defined at:
  3350 ;;		line 266 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;		None               void
  3357 ;; Registers used:
  3358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3364 ;;      Params:         0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    7
  3371 ;; This function calls:
  3372 ;;		_getSomethingInTheWay
  3373 ;;		_goLeft
  3374 ;;		_goForward
  3375 ;;		_goRight
  3376 ;;		_goBackward
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           psect	text2197
  3382                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  3383                           	line	266
  3384                           	global	__size_of_goToNextCell
  3385  0045                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  3386                           	
  3387  14C3                     _goToNextCell:	
  3388                           	opt	stack 0
  3389                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3390                           	line	267
  3391                           	
  3392  14C3                     l12429:	
  3393                           ;main.c: 267: if(!leftWall && (getSomethingInTheWay() != LEFT))
  3394  14C3  1BF0               	btfsc	(_leftWall/8),(_leftWall)&7
  3395  14C4  2CC6               	goto	u7471
  3396  14C5  2CC7               	goto	u7470
  3397  14C6                     u7471:
  3398  14C6  2CD7               	goto	l6755
  3399  14C7                     u7470:
  3400                           	
  3401  14C7                     l12431:	
  3402  14C7  160A  158A  2698   	fcall	_getSomethingInTheWay
              160A  118A         
  3403  14CC  3A01               	xorlw	01h
  3404  14CD  1903               	skipnz
  3405  14CE  2CD0               	goto	u7481
  3406  14CF  2CD1               	goto	u7480
  3407  14D0                     u7481:
  3408  14D0  2CD7               	goto	l6755
  3409  14D1                     u7480:
  3410                           	line	268
  3411                           	
  3412  14D1                     l12433:	
  3413                           ;main.c: 268: goLeft();
  3414  14D1  160A  118A  209A   	fcall	_goLeft
              160A  118A         
  3415  14D6  2D07               	goto	l6761
  3416                           	line	269
  3417                           	
  3418  14D7                     l6755:	
  3419                           ;main.c: 269: else if(!frontWall && (getSomethingInTheWay() != FORWARD))
  3420  14D7  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  3421  14D8  2CDA               	goto	u7491
  3422  14D9  2CDB               	goto	u7490
  3423  14DA                     u7491:
  3424  14DA  2CEB               	goto	l6757
  3425  14DB                     u7490:
  3426                           	
  3427  14DB                     l12435:	
  3428  14DB  160A  158A  2698   	fcall	_getSomethingInTheWay
              160A  118A         
  3429  14E0  3A00               	xorlw	0
  3430  14E1  1903               	skipnz
  3431  14E2  2CE4               	goto	u7501
  3432  14E3  2CE5               	goto	u7500
  3433  14E4                     u7501:
  3434  14E4  2CEB               	goto	l6757
  3435  14E5                     u7500:
  3436                           	line	270
  3437                           	
  3438  14E5                     l12437:	
  3439                           ;main.c: 270: goForward();
  3440  14E5  160A  118A  22C0   	fcall	_goForward
              160A  118A         
  3441  14EA  2D07               	goto	l6761
  3442                           	line	271
  3443                           	
  3444  14EB                     l6757:	
  3445                           ;main.c: 271: else if(!rightWall && (getSomethingInTheWay() != RIGHT))
  3446  14EB  1971               	btfsc	(_rightWall/8),(_rightWall)&7
  3447  14EC  2CEE               	goto	u7511
  3448  14ED  2CEF               	goto	u7510
  3449  14EE                     u7511:
  3450  14EE  2CFF               	goto	l12443
  3451  14EF                     u7510:
  3452                           	
  3453  14EF                     l12439:	
  3454  14EF  160A  158A  2698   	fcall	_getSomethingInTheWay
              160A  118A         
  3455  14F4  3A03               	xorlw	03h
  3456  14F5  1903               	skipnz
  3457  14F6  2CF8               	goto	u7521
  3458  14F7  2CF9               	goto	u7520
  3459  14F8                     u7521:
  3460  14F8  2CFF               	goto	l12443
  3461  14F9                     u7520:
  3462                           	line	272
  3463                           	
  3464  14F9                     l12441:	
  3465                           ;main.c: 272: goRight();
  3466  14F9  160A  118A  20C0   	fcall	_goRight
              160A  118A         
  3467  14FE  2D07               	goto	l6761
  3468                           	line	273
  3469                           	
  3470  14FF                     l6759:	
  3471                           	line	274
  3472                           	
  3473  14FF                     l12443:	
  3474                           ;main.c: 273: else
  3475                           ;main.c: 274: goBackward();
  3476  14FF  160A  118A  2137   	fcall	_goBackward
              160A  118A         
  3477  1504  2D07               	goto	l6761
  3478                           	
  3479  1505                     l6760:	
  3480  1505  2D07               	goto	l6761
  3481                           	
  3482  1506                     l6758:	
  3483  1506  2D07               	goto	l6761
  3484                           	
  3485  1507                     l6756:	
  3486                           	line	275
  3487                           	
  3488  1507                     l6761:	
  3489  1507  0008               	return
  3490                           	opt stack 0
  3491                           GLOBAL	__end_of_goToNextCell
  3492  1508                     	__end_of_goToNextCell:
  3493 ;; =============== function _goToNextCell ends ============
  3494                           
  3495                           	signat	_goToNextCell,88
  3496                           	global	_findWalls
  3497                           psect	text2198,local,class=CODE,delta=2
  3498                           global __ptext2198
  3499  08E3                     __ptext2198:
  3500                           
  3501 ;; *************** function _findWalls *****************
  3502 ;; Defined at:
  3503 ;;		line 192 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;		None               void
  3510 ;; Registers used:
  3511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3517 ;;      Params:         0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0
  3519 ;;      Temps:          0       1       0       0       0
  3520 ;;      Totals:         0       1       0       0       0
  3521 ;;Total ram usage:        1 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    7
  3524 ;; This function calls:
  3525 ;;		_lcd_set_cursor
  3526 ;;		_findWall
  3527 ;;		_lcd_write_data
  3528 ;;		_rotateIR
  3529 ;;		_play_iCreate_song
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           psect	text2198
  3535                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  3536                           	line	192
  3537                           	global	__size_of_findWalls
  3538  0094                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  3539                           	
  3540  08E3                     _findWalls:	
  3541                           	opt	stack 0
  3542                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3543                           	line	193
  3544                           	
  3545  08E3                     l12397:	
  3546                           ;main.c: 193: lcd_set_cursor(0x0B);
  3547  08E3  300B               	movlw	(0Bh)
  3548  08E4  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  158A         
  3549                           	line	195
  3550                           	
  3551  08E9                     l12399:	
  3552                           ;main.c: 195: leftWall = findWall();
  3553  08E9  160A  158A  2768   	fcall	_findWall
              120A  158A         
  3554  08EE  1803               	btfsc	status,0
  3555  08EF  28F1               	goto	u7361
  3556  08F0  28F3               	goto	u7360
  3557                           	
  3558  08F1                     u7361:
  3559  08F1  17F0               	bsf	(_leftWall/8),(_leftWall)&7
  3560  08F2  28F4               	goto	u7374
  3561  08F3                     u7360:
  3562  08F3  13F0               	bcf	(_leftWall/8),(_leftWall)&7
  3563  08F4                     u7374:
  3564                           	line	196
  3565                           	
  3566  08F4                     l12401:	
  3567                           ;main.c: 196: if(leftWall)
  3568  08F4  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  3569  08F5  28F7               	goto	u7381
  3570  08F6  28F8               	goto	u7380
  3571  08F7                     u7381:
  3572  08F7  28FF               	goto	l12405
  3573  08F8                     u7380:
  3574                           	line	197
  3575                           	
  3576  08F8                     l12403:	
  3577                           ;main.c: 197: lcd_write_data('L');
  3578  08F8  304C               	movlw	(04Ch)
  3579  08F9  160A  158A  26F9   	fcall	_lcd_write_data
              120A  158A         
  3580  08FE  2905               	goto	l6737
  3581                           	line	198
  3582                           	
  3583  08FF                     l6736:	
  3584                           	line	199
  3585                           	
  3586  08FF                     l12405:	
  3587                           ;main.c: 198: else
  3588                           ;main.c: 199: lcd_write_data(' ');
  3589  08FF  3020               	movlw	(020h)
  3590  0900  160A  158A  26F9   	fcall	_lcd_write_data
              120A  158A         
  3591                           	
  3592  0905                     l6737:	
  3593                           	line	201
  3594                           ;main.c: 201: rotateIR(24, 0b00001111);
  3595  0905  300F               	movlw	(0Fh)
  3596  0906  1283               	bcf	status, 5	;RP0=0, select bank0
  3597  0907  1303               	bcf	status, 6	;RP1=0, select bank0
  3598  0908  00CD               	movwf	(??_findWalls+0)+0
  3599  0909  084D               	movf	(??_findWalls+0)+0,w
  3600  090A  00AA               	movwf	(?_rotateIR)
  3601  090B  3018               	movlw	(018h)
  3602  090C  160A  118A  21E4   	fcall	_rotateIR
              120A  158A         
  3603                           	line	202
  3604                           	
  3605  0911                     l12407:	
  3606                           ;main.c: 202: frontWall = findWall();
  3607  0911  160A  158A  2768   	fcall	_findWall
              120A  158A         
  3608  0916  1803               	btfsc	status,0
  3609  0917  2919               	goto	u7391
  3610  0918  291B               	goto	u7390
  3611                           	
  3612  0919                     u7391:
  3613  0919  1670               	bsf	(_frontWall/8),(_frontWall)&7
  3614  091A  291C               	goto	u7404
  3615  091B                     u7390:
  3616  091B  1270               	bcf	(_frontWall/8),(_frontWall)&7
  3617  091C                     u7404:
  3618                           	line	204
  3619                           	
  3620  091C                     l12409:	
  3621                           ;main.c: 204: if(xCoord == 2 && yCoord == 1)
  3622  091C  1283               	bcf	status, 5	;RP0=0, select bank0
  3623  091D  1303               	bcf	status, 6	;RP1=0, select bank0
  3624  091E  0864               	movf	(_xCoord),w	;volatile
  3625  091F  3A02               	xorlw	02h
  3626  0920  1D03               	skipz
  3627  0921  2923               	goto	u7411
  3628  0922  2924               	goto	u7410
  3629  0923                     u7411:
  3630  0923  292B               	goto	l6738
  3631  0924                     u7410:
  3632                           	
  3633  0924                     l12411:	
  3634  0924  0865               	movf	(_yCoord),w	;volatile
  3635  0925  3A01               	xorlw	01h
  3636  0926  1D03               	skipz
  3637  0927  2929               	goto	u7421
  3638  0928  292A               	goto	u7420
  3639  0929                     u7421:
  3640  0929  292B               	goto	l6738
  3641  092A                     u7420:
  3642                           	line	206
  3643                           	
  3644  092A                     l12413:	
  3645                           ;main.c: 205: {
  3646                           ;main.c: 206: frontWall = 1;
  3647  092A  1670               	bsf	(_frontWall/8),(_frontWall)&7
  3648                           	line	207
  3649                           	
  3650  092B                     l6738:	
  3651                           	line	208
  3652                           ;main.c: 207: }
  3653                           ;main.c: 208: if(frontWall)
  3654  092B  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  3655  092C  292E               	goto	u7431
  3656  092D  292F               	goto	u7430
  3657  092E                     u7431:
  3658  092E  2936               	goto	l12417
  3659  092F                     u7430:
  3660                           	line	209
  3661                           	
  3662  092F                     l12415:	
  3663                           ;main.c: 209: lcd_write_data('F');
  3664  092F  3046               	movlw	(046h)
  3665  0930  160A  158A  26F9   	fcall	_lcd_write_data
              120A  158A         
  3666  0935  293C               	goto	l6740
  3667                           	line	210
  3668                           	
  3669  0936                     l6739:	
  3670                           	line	211
  3671                           	
  3672  0936                     l12417:	
  3673                           ;main.c: 210: else
  3674                           ;main.c: 211: lcd_write_data(' ');
  3675  0936  3020               	movlw	(020h)
  3676  0937  160A  158A  26F9   	fcall	_lcd_write_data
              120A  158A         
  3677                           	
  3678  093C                     l6740:	
  3679                           	line	213
  3680                           ;main.c: 213: rotateIR(24, 0b00001111);
  3681  093C  300F               	movlw	(0Fh)
  3682  093D  1283               	bcf	status, 5	;RP0=0, select bank0
  3683  093E  1303               	bcf	status, 6	;RP1=0, select bank0
  3684  093F  00CD               	movwf	(??_findWalls+0)+0
  3685  0940  084D               	movf	(??_findWalls+0)+0,w
  3686  0941  00AA               	movwf	(?_rotateIR)
  3687  0942  3018               	movlw	(018h)
  3688  0943  160A  118A  21E4   	fcall	_rotateIR
              120A  158A         
  3689                           	line	214
  3690                           	
  3691  0948                     l12419:	
  3692                           ;main.c: 214: rightWall = findWall();
  3693  0948  160A  158A  2768   	fcall	_findWall
              120A  158A         
  3694  094D  1803               	btfsc	status,0
  3695  094E  2950               	goto	u7441
  3696  094F  2952               	goto	u7440
  3697                           	
  3698  0950                     u7441:
  3699  0950  1571               	bsf	(_rightWall/8),(_rightWall)&7
  3700  0951  2953               	goto	u7454
  3701  0952                     u7440:
  3702  0952  1171               	bcf	(_rightWall/8),(_rightWall)&7
  3703  0953                     u7454:
  3704                           	line	216
  3705                           	
  3706  0953                     l12421:	
  3707                           ;main.c: 216: if(rightWall)
  3708  0953  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  3709  0954  2956               	goto	u7461
  3710  0955  2957               	goto	u7460
  3711  0956                     u7461:
  3712  0956  2964               	goto	l12427
  3713  0957                     u7460:
  3714                           	line	218
  3715                           	
  3716  0957                     l12423:	
  3717                           ;main.c: 217: {
  3718                           ;main.c: 218: play_iCreate_song(5);
  3719  0957  3005               	movlw	(05h)
  3720  0958  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  158A         
  3721                           	line	219
  3722                           	
  3723  095D                     l12425:	
  3724                           ;main.c: 219: lcd_write_data('R');
  3725  095D  3052               	movlw	(052h)
  3726  095E  160A  158A  26F9   	fcall	_lcd_write_data
              120A  158A         
  3727                           	line	220
  3728                           ;main.c: 220: }else
  3729  0963  296A               	goto	l6742
  3730                           	
  3731  0964                     l6741:	
  3732                           	line	221
  3733                           	
  3734  0964                     l12427:	
  3735                           ;main.c: 221: lcd_write_data(' ');
  3736  0964  3020               	movlw	(020h)
  3737  0965  160A  158A  26F9   	fcall	_lcd_write_data
              120A  158A         
  3738                           	
  3739  096A                     l6742:	
  3740                           	line	223
  3741                           ;main.c: 223: rotateIR(36, 0b00001101);
  3742  096A  300D               	movlw	(0Dh)
  3743  096B  1283               	bcf	status, 5	;RP0=0, select bank0
  3744  096C  1303               	bcf	status, 6	;RP1=0, select bank0
  3745  096D  00CD               	movwf	(??_findWalls+0)+0
  3746  096E  084D               	movf	(??_findWalls+0)+0,w
  3747  096F  00AA               	movwf	(?_rotateIR)
  3748  0970  3024               	movlw	(024h)
  3749  0971  160A  118A  21E4   	fcall	_rotateIR
              120A  158A         
  3750                           	line	224
  3751                           	
  3752  0976                     l6743:	
  3753  0976  0008               	return
  3754                           	opt stack 0
  3755                           GLOBAL	__end_of_findWalls
  3756  0977                     	__end_of_findWalls:
  3757 ;; =============== function _findWalls ends ============
  3758                           
  3759                           	signat	_findWalls,88
  3760                           	global	_goRight
  3761                           psect	text2199,local,class=CODE,delta=2
  3762                           global __ptext2199
  3763  10C0                     __ptext2199:
  3764                           
  3765 ;; *************** function _goRight *****************
  3766 ;; Defined at:
  3767 ;;		line 204 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;		None               void
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3781 ;;      Params:         0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0
  3783 ;;      Temps:          0       1       0       0       0
  3784 ;;      Totals:         0       1       0       0       0
  3785 ;;Total ram usage:        1 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    6
  3788 ;; This function calls:
  3789 ;;		_lcd_set_cursor
  3790 ;;		_lcd_write_data
  3791 ;;		_turnRight90
  3792 ;;		_updateOrientation
  3793 ;;		_driveForDistance
  3794 ;; This function is called by:
  3795 ;;		_goToNextCell
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           psect	text2199
  3800                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  3801                           	line	204
  3802                           	global	__size_of_goRight
  3803  0027                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  3804                           	
  3805  10C0                     _goRight:	
  3806                           	opt	stack 1
  3807                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3808                           	line	205
  3809                           	
  3810  10C0                     l12387:	
  3811                           ;drive.c: 205: lcd_set_cursor(0x0F);
  3812  10C0  300F               	movlw	(0Fh)
  3813  10C1  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  3814                           	line	206
  3815                           ;drive.c: 206: lcd_write_data('R');
  3816  10C6  3052               	movlw	(052h)
  3817  10C7  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  3818                           	line	207
  3819                           	
  3820  10CC                     l12389:	
  3821                           ;drive.c: 207: turnRight90();
  3822  10CC  160A  118A  237A   	fcall	_turnRight90
              160A  118A         
  3823                           	line	208
  3824                           	
  3825  10D1                     l12391:	
  3826                           ;drive.c: 208: updateOrientation(RIGHT);
  3827  10D1  3003               	movlw	(03h)
  3828  10D2  160A  158A  26C5   	fcall	_updateOrientation
              160A  118A         
  3829                           	line	209
  3830                           	
  3831  10D7                     l12393:	
  3832                           ;drive.c: 209: lastMove = RIGHT;
  3833  10D7  3003               	movlw	(03h)
  3834  10D8  1283               	bcf	status, 5	;RP0=0, select bank0
  3835  10D9  1303               	bcf	status, 6	;RP1=0, select bank0
  3836  10DA  00C2               	movwf	(??_goRight+0)+0
  3837  10DB  0842               	movf	(??_goRight+0)+0,w
  3838  10DC  00E1               	movwf	(_lastMove)	;volatile
  3839                           	line	210
  3840                           	
  3841  10DD                     l12395:	
  3842                           ;drive.c: 210: driveForDistance(1000);
  3843  10DD  30E8               	movlw	low(03E8h)
  3844  10DE  00B6               	movwf	(?_driveForDistance)
  3845  10DF  3003               	movlw	high(03E8h)
  3846  10E0  00B7               	movwf	((?_driveForDistance))+1
  3847  10E1  120A  118A  2436   	fcall	_driveForDistance
              160A  118A         
  3848                           	line	211
  3849                           	
  3850  10E6                     l5866:	
  3851  10E6  0008               	return
  3852                           	opt stack 0
  3853                           GLOBAL	__end_of_goRight
  3854  10E7                     	__end_of_goRight:
  3855 ;; =============== function _goRight ends ============
  3856                           
  3857                           	signat	_goRight,88
  3858                           	global	_goLeft
  3859                           psect	text2200,local,class=CODE,delta=2
  3860                           global __ptext2200
  3861  109A                     __ptext2200:
  3862                           
  3863 ;; *************** function _goLeft *****************
  3864 ;; Defined at:
  3865 ;;		line 183 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;		None               void
  3872 ;; Registers used:
  3873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0
  3882 ;;      Totals:         0       0       0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    6
  3886 ;; This function calls:
  3887 ;;		_lcd_set_cursor
  3888 ;;		_lcd_write_data
  3889 ;;		_turnLeft90
  3890 ;;		_updateOrientation
  3891 ;;		_driveForDistance
  3892 ;; This function is called by:
  3893 ;;		_goToNextCell
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           psect	text2200
  3898                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  3899                           	line	183
  3900                           	global	__size_of_goLeft
  3901  0026                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  3902                           	
  3903  109A                     _goLeft:	
  3904                           	opt	stack 1
  3905                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3906                           	line	184
  3907                           	
  3908  109A                     l12377:	
  3909                           ;drive.c: 184: lcd_set_cursor(0x0F);
  3910  109A  300F               	movlw	(0Fh)
  3911  109B  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  3912                           	line	185
  3913                           ;drive.c: 185: lcd_write_data('L');
  3914  10A0  304C               	movlw	(04Ch)
  3915  10A1  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  3916                           	line	186
  3917                           	
  3918  10A6                     l12379:	
  3919                           ;drive.c: 186: turnLeft90();
  3920  10A6  160A  118A  26C8   	fcall	_turnLeft90
              160A  118A         
  3921                           	line	187
  3922                           	
  3923  10AB                     l12381:	
  3924                           ;drive.c: 187: updateOrientation(LEFT);
  3925  10AB  3001               	movlw	(01h)
  3926  10AC  160A  158A  26C5   	fcall	_updateOrientation
              160A  118A         
  3927                           	line	188
  3928                           	
  3929  10B1                     l12383:	
  3930                           ;drive.c: 188: lastMove = LEFT;
  3931  10B1  1283               	bcf	status, 5	;RP0=0, select bank0
  3932  10B2  1303               	bcf	status, 6	;RP1=0, select bank0
  3933  10B3  01E1               	clrf	(_lastMove)	;volatile
  3934  10B4  1403               	bsf	status,0
  3935  10B5  0DE1               	rlf	(_lastMove),f	;volatile
  3936                           	line	189
  3937                           	
  3938  10B6                     l12385:	
  3939                           ;drive.c: 189: driveForDistance(1000);
  3940  10B6  30E8               	movlw	low(03E8h)
  3941  10B7  00B6               	movwf	(?_driveForDistance)
  3942  10B8  3003               	movlw	high(03E8h)
  3943  10B9  00B7               	movwf	((?_driveForDistance))+1
  3944  10BA  120A  118A  2436   	fcall	_driveForDistance
              160A  118A         
  3945                           	line	190
  3946                           	
  3947  10BF                     l5860:	
  3948  10BF  0008               	return
  3949                           	opt stack 0
  3950                           GLOBAL	__end_of_goLeft
  3951  10C0                     	__end_of_goLeft:
  3952 ;; =============== function _goLeft ends ============
  3953                           
  3954                           	signat	_goLeft,88
  3955                           	global	_goForward
  3956                           psect	text2201,local,class=CODE,delta=2
  3957                           global __ptext2201
  3958  12C0                     __ptext2201:
  3959                           
  3960 ;; *************** function _goForward *****************
  3961 ;; Defined at:
  3962 ;;		line 168 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;		None               void
  3969 ;; Registers used:
  3970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0
  3979 ;;      Totals:         0       0       0       0       0
  3980 ;;Total ram usage:        0 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    6
  3983 ;; This function calls:
  3984 ;;		_lcd_set_cursor
  3985 ;;		_lcd_write_data
  3986 ;;		_getCurrentX
  3987 ;;		_getCurrentY
  3988 ;;		_driveForDistance
  3989 ;; This function is called by:
  3990 ;;		_goToNextCell
  3991 ;;		_main
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           psect	text2201
  3995                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  3996                           	line	168
  3997                           	global	__size_of_goForward
  3998  003C                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  3999                           	
  4000  12C0                     _goForward:	
  4001                           	opt	stack 1
  4002                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4003                           	line	169
  4004                           	
  4005  12C0                     l12365:	
  4006                           ;drive.c: 169: lcd_set_cursor(0x0F);
  4007  12C0  300F               	movlw	(0Fh)
  4008  12C1  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  4009                           	line	170
  4010                           ;drive.c: 170: lcd_write_data('F');
  4011  12C6  3046               	movlw	(046h)
  4012  12C7  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  4013                           	line	171
  4014                           	
  4015  12CC                     l12367:	
  4016                           ;drive.c: 171: lastMove = FORWARD;
  4017  12CC  1283               	bcf	status, 5	;RP0=0, select bank0
  4018  12CD  1303               	bcf	status, 6	;RP1=0, select bank0
  4019  12CE  01E1               	clrf	(_lastMove)	;volatile
  4020                           	line	172
  4021                           	
  4022  12CF                     l12369:	
  4023                           ;drive.c: 172: if( (getCurrentX() == 1 && getCurrentY() == 2))
  4024  12CF  160A  158A  2689   	fcall	_getCurrentX
              160A  118A         
  4025  12D4  3A01               	xorlw	01h
  4026  12D5  1D03               	skipz
  4027  12D6  2AD8               	goto	u7341
  4028  12D7  2AD9               	goto	u7340
  4029  12D8                     u7341:
  4030  12D8  2AEF               	goto	l12375
  4031  12D9                     u7340:
  4032                           	
  4033  12D9                     l12371:	
  4034  12D9  160A  158A  268E   	fcall	_getCurrentY
              160A  118A         
  4035  12DE  3A02               	xorlw	02h
  4036  12DF  1D03               	skipz
  4037  12E0  2AE2               	goto	u7351
  4038  12E1  2AE3               	goto	u7350
  4039  12E2                     u7351:
  4040  12E2  2AEF               	goto	l12375
  4041  12E3                     u7350:
  4042                           	line	174
  4043                           	
  4044  12E3                     l12373:	
  4045                           ;drive.c: 173: {
  4046                           ;drive.c: 174: driveForDistance(800);
  4047  12E3  3020               	movlw	low(0320h)
  4048  12E4  1283               	bcf	status, 5	;RP0=0, select bank0
  4049  12E5  1303               	bcf	status, 6	;RP1=0, select bank0
  4050  12E6  00B6               	movwf	(?_driveForDistance)
  4051  12E7  3003               	movlw	high(0320h)
  4052  12E8  00B7               	movwf	((?_driveForDistance))+1
  4053  12E9  120A  118A  2436   	fcall	_driveForDistance
              160A  118A         
  4054                           	line	175
  4055                           ;drive.c: 175: }else
  4056  12EE  2AFB               	goto	l5857
  4057                           	
  4058  12EF                     l5855:	
  4059                           	line	177
  4060                           	
  4061  12EF                     l12375:	
  4062                           ;drive.c: 176: {
  4063                           ;drive.c: 177: driveForDistance(1000);
  4064  12EF  30E8               	movlw	low(03E8h)
  4065  12F0  1283               	bcf	status, 5	;RP0=0, select bank0
  4066  12F1  1303               	bcf	status, 6	;RP1=0, select bank0
  4067  12F2  00B6               	movwf	(?_driveForDistance)
  4068  12F3  3003               	movlw	high(03E8h)
  4069  12F4  00B7               	movwf	((?_driveForDistance))+1
  4070  12F5  120A  118A  2436   	fcall	_driveForDistance
              160A  118A         
  4071  12FA  2AFB               	goto	l5857
  4072                           	line	178
  4073                           	
  4074  12FB                     l5856:	
  4075                           	line	179
  4076                           	
  4077  12FB                     l5857:	
  4078  12FB  0008               	return
  4079                           	opt stack 0
  4080                           GLOBAL	__end_of_goForward
  4081  12FC                     	__end_of_goForward:
  4082 ;; =============== function _goForward ends ============
  4083                           
  4084                           	signat	_goForward,88
  4085                           	global	_goBackward
  4086                           psect	text2202,local,class=CODE,delta=2
  4087                           global __ptext2202
  4088  1137                     __ptext2202:
  4089                           
  4090 ;; *************** function _goBackward *****************
  4091 ;; Defined at:
  4092 ;;		line 157 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;		None               void
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0
  4108 ;;      Temps:          0       1       0       0       0
  4109 ;;      Totals:         0       1       0       0       0
  4110 ;;Total ram usage:        1 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    6
  4113 ;; This function calls:
  4114 ;;		_lcd_set_cursor
  4115 ;;		_lcd_write_data
  4116 ;;		_turnAround
  4117 ;;		_updateOrientation
  4118 ;;		_driveForDistance
  4119 ;; This function is called by:
  4120 ;;		_goToNextCell
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           psect	text2202
  4124                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  4125                           	line	157
  4126                           	global	__size_of_goBackward
  4127  0029                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  4128                           	
  4129  1137                     _goBackward:	
  4130                           	opt	stack 0
  4131                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4132                           	line	158
  4133                           	
  4134  1137                     l12355:	
  4135                           ;drive.c: 158: lcd_set_cursor(0x0F);
  4136  1137  300F               	movlw	(0Fh)
  4137  1138  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  4138                           	line	159
  4139                           ;drive.c: 159: lcd_write_data('B');
  4140  113D  3042               	movlw	(042h)
  4141  113E  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  4142                           	line	160
  4143                           	
  4144  1143                     l12357:	
  4145                           ;drive.c: 160: turnAround();
  4146  1143  160A  118A  2508   	fcall	_turnAround
              160A  118A         
  4147                           	line	161
  4148                           	
  4149  1148                     l12359:	
  4150                           ;drive.c: 161: updateOrientation(BACKWARD);
  4151  1148  3002               	movlw	(02h)
  4152  1149  160A  158A  26C5   	fcall	_updateOrientation
              160A  118A         
  4153                           	line	162
  4154                           	
  4155  114E                     l12361:	
  4156                           ;drive.c: 162: driveForDistance(1000);
  4157  114E  30E8               	movlw	low(03E8h)
  4158  114F  1283               	bcf	status, 5	;RP0=0, select bank0
  4159  1150  1303               	bcf	status, 6	;RP1=0, select bank0
  4160  1151  00B6               	movwf	(?_driveForDistance)
  4161  1152  3003               	movlw	high(03E8h)
  4162  1153  00B7               	movwf	((?_driveForDistance))+1
  4163  1154  120A  118A  2436   	fcall	_driveForDistance
              160A  118A         
  4164                           	line	163
  4165                           	
  4166  1159                     l12363:	
  4167                           ;drive.c: 163: lastMove = BACKWARD;
  4168  1159  3002               	movlw	(02h)
  4169  115A  1283               	bcf	status, 5	;RP0=0, select bank0
  4170  115B  1303               	bcf	status, 6	;RP1=0, select bank0
  4171  115C  00C2               	movwf	(??_goBackward+0)+0
  4172  115D  0842               	movf	(??_goBackward+0)+0,w
  4173  115E  00E1               	movwf	(_lastMove)	;volatile
  4174                           	line	164
  4175                           	
  4176  115F                     l5852:	
  4177  115F  0008               	return
  4178                           	opt stack 0
  4179                           GLOBAL	__end_of_goBackward
  4180  1160                     	__end_of_goBackward:
  4181 ;; =============== function _goBackward ends ============
  4182                           
  4183                           	signat	_goBackward,88
  4184                           	global	_goParallel
  4185                           psect	text2203,local,class=CODE,delta=2
  4186                           global __ptext2203
  4187  0EA5                     __ptext2203:
  4188                           
  4189 ;; *************** function _goParallel *****************
  4190 ;; Defined at:
  4191 ;;		line 227 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  step            2   18[BANK1 ] int 
  4196 ;;  angleParalle    2   20[BANK1 ] int 
  4197 ;;  distance        2   16[BANK1 ] int 
  4198 ;;  shortestDist    2   12[BANK1 ] int 
  4199 ;;  angleLowByte    1   15[BANK1 ] unsigned char 
  4200 ;;  angleHighByt    1   14[BANK1 ] unsigned char 
  4201 ;;  stepsToWall     1   11[BANK1 ] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;		None               void
  4204 ;; Registers used:
  4205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4211 ;;      Params:         0       0       0       0       0
  4212 ;;      Locals:         0       0      11       0       0
  4213 ;;      Temps:          0       0       2       0       0
  4214 ;;      Totals:         0       0      13       0       0
  4215 ;;Total ram usage:       13 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    6
  4218 ;; This function calls:
  4219 ;;		_readIR
  4220 ;;		_rotateIR
  4221 ;;		___lbtoft
  4222 ;;		___ftmul
  4223 ;;		___ftadd
  4224 ;;		___fttol
  4225 ;;		_drive
  4226 ;;		_waitFor
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           psect	text2203
  4232                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  4233                           	line	227
  4234                           	global	__size_of_goParallel
  4235  015B                     	__size_of_goParallel	equ	__end_of_goParallel-_goParallel
  4236                           	
  4237  0EA5                     _goParallel:	
  4238                           	opt	stack 1
  4239                           ; Regs used in _goParallel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4240                           	line	228
  4241                           	
  4242  0EA5                     l12309:	
  4243                           ;main.c: 228: PORTC |= 0b00000011;
  4244  0EA5  3003               	movlw	(03h)
  4245  0EA6  1683               	bsf	status, 5	;RP0=1, select bank1
  4246  0EA7  1303               	bcf	status, 6	;RP1=0, select bank1
  4247  0EA8  00D7               	movwf	(??_goParallel+0)^080h+0
  4248  0EA9  0857               	movf	(??_goParallel+0)^080h+0,w
  4249  0EAA  1283               	bcf	status, 5	;RP0=0, select bank0
  4250  0EAB  1303               	bcf	status, 6	;RP1=0, select bank0
  4251  0EAC  0487               	iorwf	(7),f	;volatile
  4252                           	line	230
  4253                           	
  4254  0EAD                     l12311:	
  4255                           ;main.c: 230: int distance, shortestDistance = 999;
  4256  0EAD  30E7               	movlw	low(03E7h)
  4257  0EAE  1683               	bsf	status, 5	;RP0=1, select bank1
  4258  0EAF  1303               	bcf	status, 6	;RP1=0, select bank1
  4259  0EB0  00DA               	movwf	(goParallel@shortestDistance)^080h
  4260  0EB1  3003               	movlw	high(03E7h)
  4261  0EB2  00DB               	movwf	((goParallel@shortestDistance)^080h)+1
  4262                           	line	233
  4263                           	
  4264  0EB3                     l12313:	
  4265                           ;main.c: 231: char stepsToWall;
  4266                           ;main.c: 233: for (int step = -12; step <= 12; step++)
  4267  0EB3  30F4               	movlw	low(-12)
  4268  0EB4  00E0               	movwf	(goParallel@step)^080h
  4269  0EB5  30FF               	movlw	high(-12)
  4270  0EB6  00E1               	movwf	((goParallel@step)^080h)+1
  4271                           	
  4272  0EB7                     l12315:	
  4273  0EB7  0861               	movf	(goParallel@step+1)^080h,w
  4274  0EB8  3A80               	xorlw	80h
  4275  0EB9  00FF               	movwf	btemp+1
  4276  0EBA  3080               	movlw	(high(0Dh))^80h
  4277  0EBB  027F               	subwf	btemp+1,w
  4278  0EBC  1D03               	skipz
  4279  0EBD  2EC0               	goto	u7275
  4280  0EBE  300D               	movlw	low(0Dh)
  4281  0EBF  0260               	subwf	(goParallel@step)^080h,w
  4282  0EC0                     u7275:
  4283                           
  4284  0EC0  1C03               	skipc
  4285  0EC1  2EC3               	goto	u7271
  4286  0EC2  2EC4               	goto	u7270
  4287  0EC3                     u7271:
  4288  0EC3  2EC6               	goto	l12319
  4289  0EC4                     u7270:
  4290  0EC4  2F18               	goto	l12333
  4291                           	
  4292  0EC5                     l12317:	
  4293  0EC5  2F18               	goto	l12333
  4294                           	line	234
  4295                           	
  4296  0EC6                     l6746:	
  4297                           	line	235
  4298                           	
  4299  0EC6                     l12319:	
  4300                           ;main.c: 234: {
  4301                           ;main.c: 235: distance = readIR();
  4302  0EC6  160A  118A  2052   	fcall	_readIR
              120A  158A         
  4303  0ECB  1283               	bcf	status, 5	;RP0=0, select bank0
  4304  0ECC  1303               	bcf	status, 6	;RP1=0, select bank0
  4305  0ECD  084A               	movf	(1+(?_readIR)),w
  4306  0ECE  1683               	bsf	status, 5	;RP0=1, select bank1
  4307  0ECF  1303               	bcf	status, 6	;RP1=0, select bank1
  4308  0ED0  01DF               	clrf	(goParallel@distance+1)^080h
  4309  0ED1  07DF               	addwf	(goParallel@distance+1)^080h
  4310  0ED2  1283               	bcf	status, 5	;RP0=0, select bank0
  4311  0ED3  1303               	bcf	status, 6	;RP1=0, select bank0
  4312  0ED4  0849               	movf	(0+(?_readIR)),w
  4313  0ED5  1683               	bsf	status, 5	;RP0=1, select bank1
  4314  0ED6  1303               	bcf	status, 6	;RP1=0, select bank1
  4315  0ED7  01DE               	clrf	(goParallel@distance)^080h
  4316  0ED8  07DE               	addwf	(goParallel@distance)^080h
  4317                           
  4318                           	line	236
  4319                           	
  4320  0ED9                     l12321:	
  4321                           ;main.c: 236: if(distance < shortestDistance)
  4322  0ED9  085F               	movf	(goParallel@distance+1)^080h,w
  4323  0EDA  3A80               	xorlw	80h
  4324  0EDB  00D7               	movwf	(??_goParallel+0)^080h+0
  4325  0EDC  085B               	movf	(goParallel@shortestDistance+1)^080h,w
  4326  0EDD  3A80               	xorlw	80h
  4327  0EDE  0257               	subwf	(??_goParallel+0)^080h+0,w
  4328  0EDF  1D03               	skipz
  4329  0EE0  2EE3               	goto	u7285
  4330  0EE1  085A               	movf	(goParallel@shortestDistance)^080h,w
  4331  0EE2  025E               	subwf	(goParallel@distance)^080h,w
  4332  0EE3                     u7285:
  4333                           
  4334  0EE3  1803               	skipnc
  4335  0EE4  2EE6               	goto	u7281
  4336  0EE5  2EE7               	goto	u7280
  4337  0EE6                     u7281:
  4338  0EE6  2EF4               	goto	l12327
  4339  0EE7                     u7280:
  4340                           	line	238
  4341                           	
  4342  0EE7                     l12323:	
  4343                           ;main.c: 237: {
  4344                           ;main.c: 238: stepsToWall = step;
  4345  0EE7  1683               	bsf	status, 5	;RP0=1, select bank1
  4346  0EE8  1303               	bcf	status, 6	;RP1=0, select bank1
  4347  0EE9  0860               	movf	(goParallel@step)^080h,w
  4348  0EEA  00D7               	movwf	(??_goParallel+0)^080h+0
  4349  0EEB  0857               	movf	(??_goParallel+0)^080h+0,w
  4350  0EEC  00D9               	movwf	(goParallel@stepsToWall)^080h
  4351                           	line	239
  4352                           	
  4353  0EED                     l12325:	
  4354                           ;main.c: 239: shortestDistance = distance;
  4355  0EED  085F               	movf	(goParallel@distance+1)^080h,w
  4356  0EEE  01DB               	clrf	(goParallel@shortestDistance+1)^080h
  4357  0EEF  07DB               	addwf	(goParallel@shortestDistance+1)^080h
  4358  0EF0  085E               	movf	(goParallel@distance)^080h,w
  4359  0EF1  01DA               	clrf	(goParallel@shortestDistance)^080h
  4360  0EF2  07DA               	addwf	(goParallel@shortestDistance)^080h
  4361                           
  4362  0EF3  2EF4               	goto	l12327
  4363                           	line	240
  4364                           	
  4365  0EF4                     l6748:	
  4366                           	line	241
  4367                           	
  4368  0EF4                     l12327:	
  4369                           ;main.c: 240: }
  4370                           ;main.c: 241: rotateIR(1, 0b00001101);
  4371  0EF4  300D               	movlw	(0Dh)
  4372  0EF5  1683               	bsf	status, 5	;RP0=1, select bank1
  4373  0EF6  1303               	bcf	status, 6	;RP1=0, select bank1
  4374  0EF7  00D7               	movwf	(??_goParallel+0)^080h+0
  4375  0EF8  0857               	movf	(??_goParallel+0)^080h+0,w
  4376  0EF9  1283               	bcf	status, 5	;RP0=0, select bank0
  4377  0EFA  1303               	bcf	status, 6	;RP1=0, select bank0
  4378  0EFB  00AA               	movwf	(?_rotateIR)
  4379  0EFC  3001               	movlw	(01h)
  4380  0EFD  160A  118A  21E4   	fcall	_rotateIR
              120A  158A         
  4381                           	line	233
  4382                           	
  4383  0F02                     l12329:	
  4384  0F02  3001               	movlw	low(01h)
  4385  0F03  1683               	bsf	status, 5	;RP0=1, select bank1
  4386  0F04  1303               	bcf	status, 6	;RP1=0, select bank1
  4387  0F05  07E0               	addwf	(goParallel@step)^080h,f
  4388  0F06  1803               	skipnc
  4389  0F07  0AE1               	incf	(goParallel@step+1)^080h,f
  4390  0F08  3000               	movlw	high(01h)
  4391  0F09  07E1               	addwf	(goParallel@step+1)^080h,f
  4392                           	
  4393  0F0A                     l12331:	
  4394  0F0A  0861               	movf	(goParallel@step+1)^080h,w
  4395  0F0B  3A80               	xorlw	80h
  4396  0F0C  00FF               	movwf	btemp+1
  4397  0F0D  3080               	movlw	(high(0Dh))^80h
  4398  0F0E  027F               	subwf	btemp+1,w
  4399  0F0F  1D03               	skipz
  4400  0F10  2F13               	goto	u7295
  4401  0F11  300D               	movlw	low(0Dh)
  4402  0F12  0260               	subwf	(goParallel@step)^080h,w
  4403  0F13                     u7295:
  4404                           
  4405  0F13  1C03               	skipc
  4406  0F14  2F16               	goto	u7291
  4407  0F15  2F17               	goto	u7290
  4408  0F16                     u7291:
  4409  0F16  2EC6               	goto	l12319
  4410  0F17                     u7290:
  4411  0F17  2F18               	goto	l12333
  4412                           	
  4413  0F18                     l6747:	
  4414                           	line	243
  4415                           	
  4416  0F18                     l12333:	
  4417                           ;main.c: 242: }
  4418                           ;main.c: 243: rotateIR(12, 0b00001111);
  4419  0F18  300F               	movlw	(0Fh)
  4420  0F19  1683               	bsf	status, 5	;RP0=1, select bank1
  4421  0F1A  1303               	bcf	status, 6	;RP1=0, select bank1
  4422  0F1B  00D7               	movwf	(??_goParallel+0)^080h+0
  4423  0F1C  0857               	movf	(??_goParallel+0)^080h+0,w
  4424  0F1D  1283               	bcf	status, 5	;RP0=0, select bank0
  4425  0F1E  1303               	bcf	status, 6	;RP1=0, select bank0
  4426  0F1F  00AA               	movwf	(?_rotateIR)
  4427  0F20  300C               	movlw	(0Ch)
  4428  0F21  160A  118A  21E4   	fcall	_rotateIR
              120A  158A         
  4429                           	line	245
  4430                           ;main.c: 245: int angleParallelToWall = (int)((stepsToWall*3.75)-6);
  4431  0F26  1683               	bsf	status, 5	;RP0=1, select bank1
  4432  0F27  1303               	bcf	status, 6	;RP1=0, select bank1
  4433  0F28  0859               	movf	(goParallel@stepsToWall)^080h,w
  4434  0F29  160A  118A  200F   	fcall	___lbtoft
              120A  158A         
  4435  0F2E  1283               	bcf	status, 5	;RP0=0, select bank0
  4436  0F2F  1303               	bcf	status, 6	;RP1=0, select bank0
  4437  0F30  0840               	movf	(0+(?___lbtoft)),w
  4438  0F31  00CB               	movwf	0+(?___ftmul)+03h
  4439  0F32  0841               	movf	(1+(?___lbtoft)),w
  4440  0F33  00CC               	movwf	1+(?___ftmul)+03h
  4441  0F34  0842               	movf	(2+(?___lbtoft)),w
  4442  0F35  00CD               	movwf	2+(?___ftmul)+03h
  4443  0F36  3000               	movlw	0x0
  4444  0F37  00C8               	movwf	(?___ftmul)
  4445  0F38  3070               	movlw	0x70
  4446  0F39  00C9               	movwf	(?___ftmul+1)
  4447  0F3A  3040               	movlw	0x40
  4448  0F3B  00CA               	movwf	(?___ftmul+2)
  4449  0F3C  120A  158A  2373   	fcall	___ftmul
              120A  158A         
  4450  0F41  1283               	bcf	status, 5	;RP0=0, select bank0
  4451  0F42  1303               	bcf	status, 6	;RP1=0, select bank0
  4452  0F43  0848               	movf	(0+(?___ftmul)),w
  4453  0F44  1683               	bsf	status, 5	;RP0=1, select bank1
  4454  0F45  1303               	bcf	status, 6	;RP1=0, select bank1
  4455  0F46  00D1               	movwf	0+(?___ftadd)^080h+03h
  4456  0F47  1283               	bcf	status, 5	;RP0=0, select bank0
  4457  0F48  1303               	bcf	status, 6	;RP1=0, select bank0
  4458  0F49  0849               	movf	(1+(?___ftmul)),w
  4459  0F4A  1683               	bsf	status, 5	;RP0=1, select bank1
  4460  0F4B  1303               	bcf	status, 6	;RP1=0, select bank1
  4461  0F4C  00D2               	movwf	1+(?___ftadd)^080h+03h
  4462  0F4D  1283               	bcf	status, 5	;RP0=0, select bank0
  4463  0F4E  1303               	bcf	status, 6	;RP1=0, select bank0
  4464  0F4F  084A               	movf	(2+(?___ftmul)),w
  4465  0F50  1683               	bsf	status, 5	;RP0=1, select bank1
  4466  0F51  1303               	bcf	status, 6	;RP1=0, select bank1
  4467  0F52  00D3               	movwf	2+(?___ftadd)^080h+03h
  4468  0F53  3000               	movlw	0x0
  4469  0F54  00CE               	movwf	(?___ftadd)^080h
  4470  0F55  30C0               	movlw	0xc0
  4471  0F56  00CF               	movwf	(?___ftadd+1)^080h
  4472  0F57  30C0               	movlw	0xc0
  4473  0F58  00D0               	movwf	(?___ftadd+2)^080h
  4474  0F59  120A  118A  25EF   	fcall	___ftadd
              120A  158A         
  4475  0F5E  1683               	bsf	status, 5	;RP0=1, select bank1
  4476  0F5F  1303               	bcf	status, 6	;RP1=0, select bank1
  4477  0F60  084E               	movf	(0+(?___ftadd))^080h,w
  4478  0F61  1283               	bcf	status, 5	;RP0=0, select bank0
  4479  0F62  1303               	bcf	status, 6	;RP1=0, select bank0
  4480  0F63  00B2               	movwf	(?___fttol)
  4481  0F64  1683               	bsf	status, 5	;RP0=1, select bank1
  4482  0F65  1303               	bcf	status, 6	;RP1=0, select bank1
  4483  0F66  084F               	movf	(1+(?___ftadd))^080h,w
  4484  0F67  1283               	bcf	status, 5	;RP0=0, select bank0
  4485  0F68  1303               	bcf	status, 6	;RP1=0, select bank0
  4486  0F69  00B3               	movwf	(?___fttol+1)
  4487  0F6A  1683               	bsf	status, 5	;RP0=1, select bank1
  4488  0F6B  1303               	bcf	status, 6	;RP1=0, select bank1
  4489  0F6C  0850               	movf	(2+(?___ftadd))^080h,w
  4490  0F6D  1283               	bcf	status, 5	;RP0=0, select bank0
  4491  0F6E  1303               	bcf	status, 6	;RP1=0, select bank0
  4492  0F6F  00B4               	movwf	(?___fttol+2)
  4493  0F70  120A  158A  2212   	fcall	___fttol
              120A  158A         
  4494  0F75  1283               	bcf	status, 5	;RP0=0, select bank0
  4495  0F76  1303               	bcf	status, 6	;RP1=0, select bank0
  4496  0F77  0833               	movf	1+(((0+(?___fttol)))),w
  4497  0F78  1683               	bsf	status, 5	;RP0=1, select bank1
  4498  0F79  1303               	bcf	status, 6	;RP1=0, select bank1
  4499  0F7A  01E3               	clrf	(goParallel@angleParallelToWall+1)^080h
  4500  0F7B  07E3               	addwf	(goParallel@angleParallelToWall+1)^080h
  4501  0F7C  1283               	bcf	status, 5	;RP0=0, select bank0
  4502  0F7D  1303               	bcf	status, 6	;RP1=0, select bank0
  4503  0F7E  0832               	movf	0+(((0+(?___fttol)))),w
  4504  0F7F  1683               	bsf	status, 5	;RP0=1, select bank1
  4505  0F80  1303               	bcf	status, 6	;RP1=0, select bank1
  4506  0F81  01E2               	clrf	(goParallel@angleParallelToWall)^080h
  4507  0F82  07E2               	addwf	(goParallel@angleParallelToWall)^080h
  4508                           
  4509                           	line	246
  4510                           	
  4511  0F83                     l12335:	
  4512                           ;main.c: 246: char angleHighByte = 0;
  4513  0F83  01DC               	clrf	(goParallel@angleHighByte)^080h
  4514                           	line	247
  4515                           	
  4516  0F84                     l12337:	
  4517                           ;main.c: 247: char angleLowByte = (char) angleParallelToWall;
  4518  0F84  0862               	movf	(goParallel@angleParallelToWall)^080h,w
  4519  0F85  00D7               	movwf	(??_goParallel+0)^080h+0
  4520  0F86  0857               	movf	(??_goParallel+0)^080h+0,w
  4521  0F87  00DD               	movwf	(goParallel@angleLowByte)^080h
  4522                           	line	249
  4523                           	
  4524  0F88                     l12339:	
  4525                           ;main.c: 249: if(angleParallelToWall < 0)
  4526  0F88  1FE3               	btfss	(goParallel@angleParallelToWall+1)^080h,7
  4527  0F89  2F8B               	goto	u7301
  4528  0F8A  2F8C               	goto	u7300
  4529  0F8B                     u7301:
  4530  0F8B  2F95               	goto	l12343
  4531  0F8C                     u7300:
  4532                           	line	250
  4533                           	
  4534  0F8C                     l12341:	
  4535                           ;main.c: 250: angleParallelToWall = 360 + angleParallelToWall;
  4536  0F8C  0862               	movf	(goParallel@angleParallelToWall)^080h,w
  4537  0F8D  3E68               	addlw	low(0168h)
  4538  0F8E  00E2               	movwf	(goParallel@angleParallelToWall)^080h
  4539  0F8F  0863               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4540  0F90  1803               	skipnc
  4541  0F91  3E01               	addlw	1
  4542  0F92  3E01               	addlw	high(0168h)
  4543  0F93  00E3               	movwf	1+(goParallel@angleParallelToWall)^080h
  4544  0F94  2F95               	goto	l12343
  4545                           	
  4546  0F95                     l6749:	
  4547                           	line	252
  4548                           	
  4549  0F95                     l12343:	
  4550                           ;main.c: 252: if(angleParallelToWall > 255)
  4551  0F95  0863               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4552  0F96  3A80               	xorlw	80h
  4553  0F97  00FF               	movwf	btemp+1
  4554  0F98  3081               	movlw	(high(0100h))^80h
  4555  0F99  027F               	subwf	btemp+1,w
  4556  0F9A  1D03               	skipz
  4557  0F9B  2F9E               	goto	u7315
  4558  0F9C  3000               	movlw	low(0100h)
  4559  0F9D  0262               	subwf	(goParallel@angleParallelToWall)^080h,w
  4560  0F9E                     u7315:
  4561                           
  4562  0F9E  1C03               	skipc
  4563  0F9F  2FA1               	goto	u7311
  4564  0FA0  2FA2               	goto	u7310
  4565  0FA1                     u7311:
  4566  0FA1  2FAD               	goto	l12349
  4567  0FA2                     u7310:
  4568                           	line	254
  4569                           	
  4570  0FA2                     l12345:	
  4571                           ;main.c: 253: {
  4572                           ;main.c: 254: angleHighByte = 1;
  4573  0FA2  1683               	bsf	status, 5	;RP0=1, select bank1
  4574  0FA3  1303               	bcf	status, 6	;RP1=0, select bank1
  4575  0FA4  01DC               	clrf	(goParallel@angleHighByte)^080h
  4576  0FA5  1403               	bsf	status,0
  4577  0FA6  0DDC               	rlf	(goParallel@angleHighByte)^080h,f
  4578                           	line	255
  4579                           	
  4580  0FA7                     l12347:	
  4581                           ;main.c: 255: angleLowByte = (char)(angleParallelToWall - 255);
  4582  0FA7  0862               	movf	(goParallel@angleParallelToWall)^080h,w
  4583  0FA8  3E01               	addlw	01h
  4584  0FA9  00D7               	movwf	(??_goParallel+0)^080h+0
  4585  0FAA  0857               	movf	(??_goParallel+0)^080h+0,w
  4586  0FAB  00DD               	movwf	(goParallel@angleLowByte)^080h
  4587  0FAC  2FAD               	goto	l12349
  4588                           	line	256
  4589                           	
  4590  0FAD                     l6750:	
  4591                           	line	257
  4592                           	
  4593  0FAD                     l12349:	
  4594                           ;main.c: 256: }
  4595                           ;main.c: 257: if((angleParallelToWall > 8) && (angleParallelToWall < 352))
  4596  0FAD  1683               	bsf	status, 5	;RP0=1, select bank1
  4597  0FAE  1303               	bcf	status, 6	;RP1=0, select bank1
  4598  0FAF  0863               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4599  0FB0  3A80               	xorlw	80h
  4600  0FB1  00FF               	movwf	btemp+1
  4601  0FB2  3080               	movlw	(high(09h))^80h
  4602  0FB3  027F               	subwf	btemp+1,w
  4603  0FB4  1D03               	skipz
  4604  0FB5  2FB8               	goto	u7325
  4605  0FB6  3009               	movlw	low(09h)
  4606  0FB7  0262               	subwf	(goParallel@angleParallelToWall)^080h,w
  4607  0FB8                     u7325:
  4608                           
  4609  0FB8  1C03               	skipc
  4610  0FB9  2FBB               	goto	u7321
  4611  0FBA  2FBC               	goto	u7320
  4612  0FBB                     u7321:
  4613  0FBB  2FFF               	goto	l6752
  4614  0FBC                     u7320:
  4615                           	
  4616  0FBC                     l12351:	
  4617  0FBC  1683               	bsf	status, 5	;RP0=1, select bank1
  4618  0FBD  1303               	bcf	status, 6	;RP1=0, select bank1
  4619  0FBE  0863               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4620  0FBF  3A80               	xorlw	80h
  4621  0FC0  00FF               	movwf	btemp+1
  4622  0FC1  3081               	movlw	(high(0160h))^80h
  4623  0FC2  027F               	subwf	btemp+1,w
  4624  0FC3  1D03               	skipz
  4625  0FC4  2FC7               	goto	u7335
  4626  0FC5  3060               	movlw	low(0160h)
  4627  0FC6  0262               	subwf	(goParallel@angleParallelToWall)^080h,w
  4628  0FC7                     u7335:
  4629                           
  4630  0FC7  1803               	skipnc
  4631  0FC8  2FCA               	goto	u7331
  4632  0FC9  2FCB               	goto	u7330
  4633  0FCA                     u7331:
  4634  0FCA  2FFF               	goto	l6752
  4635  0FCB                     u7330:
  4636                           	line	259
  4637                           	
  4638  0FCB                     l12353:	
  4639                           ;main.c: 258: {
  4640                           ;main.c: 259: drive(0, 50, 0, 1);
  4641  0FCB  3032               	movlw	(032h)
  4642  0FCC  1683               	bsf	status, 5	;RP0=1, select bank1
  4643  0FCD  1303               	bcf	status, 6	;RP1=0, select bank1
  4644  0FCE  00D7               	movwf	(??_goParallel+0)^080h+0
  4645  0FCF  0857               	movf	(??_goParallel+0)^080h+0,w
  4646  0FD0  1283               	bcf	status, 5	;RP0=0, select bank0
  4647  0FD1  1303               	bcf	status, 6	;RP1=0, select bank0
  4648  0FD2  00AC               	movwf	(?_drive)
  4649  0FD3  01AD               	clrf	0+(?_drive)+01h
  4650  0FD4  01AE               	clrf	0+(?_drive)+02h
  4651  0FD5  1403               	bsf	status,0
  4652  0FD6  0DAE               	rlf	0+(?_drive)+02h,f
  4653  0FD7  3000               	movlw	(0)
  4654  0FD8  160A  118A  2217   	fcall	_drive
              120A  158A         
  4655                           	line	260
  4656                           ;main.c: 260: waitFor(157,angleHighByte,angleLowByte);
  4657  0FDD  1683               	bsf	status, 5	;RP0=1, select bank1
  4658  0FDE  1303               	bcf	status, 6	;RP1=0, select bank1
  4659  0FDF  085C               	movf	(goParallel@angleHighByte)^080h,w
  4660  0FE0  00D7               	movwf	(??_goParallel+0)^080h+0
  4661  0FE1  0857               	movf	(??_goParallel+0)^080h+0,w
  4662  0FE2  1283               	bcf	status, 5	;RP0=0, select bank0
  4663  0FE3  1303               	bcf	status, 6	;RP1=0, select bank0
  4664  0FE4  00AC               	movwf	(?_waitFor)
  4665  0FE5  1683               	bsf	status, 5	;RP0=1, select bank1
  4666  0FE6  1303               	bcf	status, 6	;RP1=0, select bank1
  4667  0FE7  085D               	movf	(goParallel@angleLowByte)^080h,w
  4668  0FE8  00D8               	movwf	(??_goParallel+1)^080h+0
  4669  0FE9  0858               	movf	(??_goParallel+1)^080h+0,w
  4670  0FEA  1283               	bcf	status, 5	;RP0=0, select bank0
  4671  0FEB  1303               	bcf	status, 6	;RP1=0, select bank0
  4672  0FEC  00AD               	movwf	0+(?_waitFor)+01h
  4673  0FED  309D               	movlw	(09Dh)
  4674  0FEE  160A  118A  210F   	fcall	_waitFor
              120A  158A         
  4675                           	line	261
  4676                           ;main.c: 261: drive(0, 0, 0, 0);
  4677  0FF3  1283               	bcf	status, 5	;RP0=0, select bank0
  4678  0FF4  1303               	bcf	status, 6	;RP1=0, select bank0
  4679  0FF5  01AC               	clrf	(?_drive)
  4680  0FF6  01AD               	clrf	0+(?_drive)+01h
  4681  0FF7  01AE               	clrf	0+(?_drive)+02h
  4682  0FF8  3000               	movlw	(0)
  4683  0FF9  160A  118A  2217   	fcall	_drive
              120A  158A         
  4684  0FFE  2FFF               	goto	l6752
  4685                           	line	262
  4686                           	
  4687  0FFF                     l6751:	
  4688                           	line	263
  4689                           	
  4690  0FFF                     l6752:	
  4691  0FFF  0008               	return
  4692                           	opt stack 0
  4693                           GLOBAL	__end_of_goParallel
  4694  1000                     	__end_of_goParallel:
  4695 ;; =============== function _goParallel ends ============
  4696                           
  4697                           	signat	_goParallel,88
  4698                           	global	_findWall
  4699                           psect	text2204,local,class=CODE,delta=2
  4700                           global __ptext2204
  4701  1F68                     __ptext2204:
  4702                           
  4703 ;; *************** function _findWall *****************
  4704 ;; Defined at:
  4705 ;;		line 452 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    6
  4726 ;; This function calls:
  4727 ;;		_readIR
  4728 ;; This function is called by:
  4729 ;;		_findWalls
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           psect	text2204
  4733                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  4734                           	line	452
  4735                           	global	__size_of_findWall
  4736  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  4737                           	
  4738  1F68                     _findWall:	
  4739                           	opt	stack 0
  4740                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4741                           	line	453
  4742                           	
  4743  1F68                     l12297:	
  4744                           ;main.c: 453: if(readIR() > 100)
  4745  1F68  160A  118A  2052   	fcall	_readIR
              160A  158A         
  4746  1F6D  1283               	bcf	status, 5	;RP0=0, select bank0
  4747  1F6E  1303               	bcf	status, 6	;RP1=0, select bank0
  4748  1F6F  084A               	movf	(1+(?_readIR)),w
  4749  1F70  3A80               	xorlw	80h
  4750  1F71  00FF               	movwf	btemp+1
  4751  1F72  3080               	movlw	(high(065h))^80h
  4752  1F73  027F               	subwf	btemp+1,w
  4753  1F74  1D03               	skipz
  4754  1F75  2F78               	goto	u7265
  4755  1F76  3065               	movlw	low(065h)
  4756  1F77  0249               	subwf	(0+(?_readIR)),w
  4757  1F78                     u7265:
  4758                           
  4759  1F78  1C03               	skipc
  4760  1F79  2F7B               	goto	u7261
  4761  1F7A  2F7C               	goto	u7260
  4762  1F7B                     u7261:
  4763  1F7B  2F80               	goto	l12305
  4764  1F7C                     u7260:
  4765                           	line	454
  4766                           	
  4767  1F7C                     l12299:	
  4768                           ;main.c: 454: return 0;
  4769  1F7C  1003               	clrc
  4770                           	
  4771  1F7D  2F83               	goto	l6835
  4772                           	
  4773  1F7E                     l12301:	
  4774  1F7E  2F83               	goto	l6835
  4775                           	
  4776  1F7F                     l12303:	
  4777  1F7F  2F83               	goto	l6835
  4778                           	line	455
  4779                           	
  4780  1F80                     l6834:	
  4781                           	line	456
  4782                           	
  4783  1F80                     l12305:	
  4784                           ;main.c: 455: else
  4785                           ;main.c: 456: return 1;
  4786  1F80  1403               	setc
  4787                           	
  4788  1F81  2F83               	goto	l6835
  4789                           	
  4790  1F82                     l12307:	
  4791  1F82  2F83               	goto	l6835
  4792                           	
  4793  1F83                     l6836:	
  4794                           	line	457
  4795                           	
  4796  1F83                     l6835:	
  4797  1F83  0008               	return
  4798                           	opt stack 0
  4799                           GLOBAL	__end_of_findWall
  4800  1F84                     	__end_of_findWall:
  4801 ;; =============== function _findWall ends ============
  4802                           
  4803                           	signat	_findWall,88
  4804                           	global	_frontWallCorrect
  4805                           psect	text2205,local,class=CODE,delta=2
  4806                           global __ptext2205
  4807  0AB8                     __ptext2205:
  4808                           
  4809 ;; *************** function _frontWallCorrect *****************
  4810 ;; Defined at:
  4811 ;;		line 277 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  distToWall      2   47[BANK0 ] int 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;		None               void
  4818 ;; Registers used:
  4819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       0       0       0       0
  4826 ;;      Locals:         0       2       0       0       0
  4827 ;;      Temps:          0       2       0       0       0
  4828 ;;      Totals:         0       4       0       0       0
  4829 ;;Total ram usage:        4 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    6
  4832 ;; This function calls:
  4833 ;;		_rotateIR
  4834 ;;		_readIR
  4835 ;;		_drive
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           psect	text2205
  4841                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  4842                           	line	277
  4843                           	global	__size_of_frontWallCorrect
  4844  00BB                     	__size_of_frontWallCorrect	equ	__end_of_frontWallCorrect-_frontWallCorrect
  4845                           	
  4846  0AB8                     _frontWallCorrect:	
  4847                           	opt	stack 1
  4848                           ; Regs used in _frontWallCorrect: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4849                           	line	278
  4850                           	
  4851  0AB8                     l12271:	
  4852                           ;drive.c: 278: rotateIR(24, 0b00001111);
  4853  0AB8  300F               	movlw	(0Fh)
  4854  0AB9  1283               	bcf	status, 5	;RP0=0, select bank0
  4855  0ABA  1303               	bcf	status, 6	;RP1=0, select bank0
  4856  0ABB  00CD               	movwf	(??_frontWallCorrect+0)+0
  4857  0ABC  084D               	movf	(??_frontWallCorrect+0)+0,w
  4858  0ABD  00AA               	movwf	(?_rotateIR)
  4859  0ABE  3018               	movlw	(018h)
  4860  0ABF  160A  118A  21E4   	fcall	_rotateIR
              120A  158A         
  4861                           	line	279
  4862                           	
  4863  0AC4                     l12273:	
  4864                           ;drive.c: 279: int distToWall = readIR();
  4865  0AC4  160A  118A  2052   	fcall	_readIR
              120A  158A         
  4866  0AC9  1283               	bcf	status, 5	;RP0=0, select bank0
  4867  0ACA  1303               	bcf	status, 6	;RP1=0, select bank0
  4868  0ACB  084A               	movf	(1+(?_readIR)),w
  4869  0ACC  01D0               	clrf	(frontWallCorrect@distToWall+1)
  4870  0ACD  07D0               	addwf	(frontWallCorrect@distToWall+1)
  4871  0ACE  0849               	movf	(0+(?_readIR)),w
  4872  0ACF  01CF               	clrf	(frontWallCorrect@distToWall)
  4873  0AD0  07CF               	addwf	(frontWallCorrect@distToWall)
  4874                           
  4875                           	line	280
  4876                           	
  4877  0AD1                     l12275:	
  4878                           ;drive.c: 280: if(distToWall < 45)
  4879  0AD1  0850               	movf	(frontWallCorrect@distToWall+1),w
  4880  0AD2  3A80               	xorlw	80h
  4881  0AD3  00FF               	movwf	btemp+1
  4882  0AD4  3080               	movlw	(high(02Dh))^80h
  4883  0AD5  027F               	subwf	btemp+1,w
  4884  0AD6  1D03               	skipz
  4885  0AD7  2ADA               	goto	u7225
  4886  0AD8  302D               	movlw	low(02Dh)
  4887  0AD9  024F               	subwf	(frontWallCorrect@distToWall),w
  4888  0ADA                     u7225:
  4889                           
  4890  0ADA  1803               	skipnc
  4891  0ADB  2ADD               	goto	u7221
  4892  0ADC  2ADE               	goto	u7220
  4893  0ADD                     u7221:
  4894  0ADD  2B1A               	goto	l12285
  4895  0ADE                     u7220:
  4896                           	line	282
  4897                           	
  4898  0ADE                     l12277:	
  4899                           ;drive.c: 281: {
  4900                           ;drive.c: 282: drive(255, 125, 128, 0);
  4901  0ADE  307D               	movlw	(07Dh)
  4902  0ADF  1283               	bcf	status, 5	;RP0=0, select bank0
  4903  0AE0  1303               	bcf	status, 6	;RP1=0, select bank0
  4904  0AE1  00CD               	movwf	(??_frontWallCorrect+0)+0
  4905  0AE2  084D               	movf	(??_frontWallCorrect+0)+0,w
  4906  0AE3  00AC               	movwf	(?_drive)
  4907  0AE4  3080               	movlw	(080h)
  4908  0AE5  00CE               	movwf	(??_frontWallCorrect+1)+0
  4909  0AE6  084E               	movf	(??_frontWallCorrect+1)+0,w
  4910  0AE7  00AD               	movwf	0+(?_drive)+01h
  4911  0AE8  01AE               	clrf	0+(?_drive)+02h
  4912  0AE9  30FF               	movlw	(0FFh)
  4913  0AEA  160A  118A  2217   	fcall	_drive
              120A  158A         
  4914                           	line	283
  4915                           ;drive.c: 283: while(distToWall < 51)
  4916  0AEF  2AFE               	goto	l12281
  4917                           	
  4918  0AF0                     l5889:	
  4919                           	line	284
  4920                           	
  4921  0AF0                     l12279:	
  4922                           ;drive.c: 284: distToWall = readIR();
  4923  0AF0  160A  118A  2052   	fcall	_readIR
              120A  158A         
  4924  0AF5  1283               	bcf	status, 5	;RP0=0, select bank0
  4925  0AF6  1303               	bcf	status, 6	;RP1=0, select bank0
  4926  0AF7  084A               	movf	(1+(?_readIR)),w
  4927  0AF8  01D0               	clrf	(frontWallCorrect@distToWall+1)
  4928  0AF9  07D0               	addwf	(frontWallCorrect@distToWall+1)
  4929  0AFA  0849               	movf	(0+(?_readIR)),w
  4930  0AFB  01CF               	clrf	(frontWallCorrect@distToWall)
  4931  0AFC  07CF               	addwf	(frontWallCorrect@distToWall)
  4932                           
  4933  0AFD  2AFE               	goto	l12281
  4934                           	
  4935  0AFE                     l5888:	
  4936                           	line	283
  4937                           	
  4938  0AFE                     l12281:	
  4939  0AFE  1283               	bcf	status, 5	;RP0=0, select bank0
  4940  0AFF  1303               	bcf	status, 6	;RP1=0, select bank0
  4941  0B00  0850               	movf	(frontWallCorrect@distToWall+1),w
  4942  0B01  3A80               	xorlw	80h
  4943  0B02  00FF               	movwf	btemp+1
  4944  0B03  3080               	movlw	(high(033h))^80h
  4945  0B04  027F               	subwf	btemp+1,w
  4946  0B05  1D03               	skipz
  4947  0B06  2B09               	goto	u7235
  4948  0B07  3033               	movlw	low(033h)
  4949  0B08  024F               	subwf	(frontWallCorrect@distToWall),w
  4950  0B09                     u7235:
  4951                           
  4952  0B09  1C03               	skipc
  4953  0B0A  2B0C               	goto	u7231
  4954  0B0B  2B0D               	goto	u7230
  4955  0B0C                     u7231:
  4956  0B0C  2AF0               	goto	l12279
  4957  0B0D                     u7230:
  4958  0B0D  2B0E               	goto	l12283
  4959                           	
  4960  0B0E                     l5890:	
  4961                           	line	285
  4962                           	
  4963  0B0E                     l12283:	
  4964                           ;drive.c: 285: drive(0, 0, 0, 0);
  4965  0B0E  1283               	bcf	status, 5	;RP0=0, select bank0
  4966  0B0F  1303               	bcf	status, 6	;RP1=0, select bank0
  4967  0B10  01AC               	clrf	(?_drive)
  4968  0B11  01AD               	clrf	0+(?_drive)+01h
  4969  0B12  01AE               	clrf	0+(?_drive)+02h
  4970  0B13  3000               	movlw	(0)
  4971  0B14  160A  118A  2217   	fcall	_drive
              120A  158A         
  4972                           	line	286
  4973                           ;drive.c: 286: }
  4974  0B19  2B66               	goto	l12295
  4975                           	line	287
  4976                           	
  4977  0B1A                     l5887:	
  4978                           	
  4979  0B1A                     l12285:	
  4980                           ;drive.c: 287: else if(distToWall > 55)
  4981  0B1A  1283               	bcf	status, 5	;RP0=0, select bank0
  4982  0B1B  1303               	bcf	status, 6	;RP1=0, select bank0
  4983  0B1C  0850               	movf	(frontWallCorrect@distToWall+1),w
  4984  0B1D  3A80               	xorlw	80h
  4985  0B1E  00FF               	movwf	btemp+1
  4986  0B1F  3080               	movlw	(high(038h))^80h
  4987  0B20  027F               	subwf	btemp+1,w
  4988  0B21  1D03               	skipz
  4989  0B22  2B25               	goto	u7245
  4990  0B23  3038               	movlw	low(038h)
  4991  0B24  024F               	subwf	(frontWallCorrect@distToWall),w
  4992  0B25                     u7245:
  4993                           
  4994  0B25  1C03               	skipc
  4995  0B26  2B28               	goto	u7241
  4996  0B27  2B29               	goto	u7240
  4997  0B28                     u7241:
  4998  0B28  2B66               	goto	l12295
  4999  0B29                     u7240:
  5000                           	line	289
  5001                           	
  5002  0B29                     l12287:	
  5003                           ;drive.c: 288: {
  5004                           ;drive.c: 289: drive(0, 250, 128, 0);
  5005  0B29  30FA               	movlw	(0FAh)
  5006  0B2A  1283               	bcf	status, 5	;RP0=0, select bank0
  5007  0B2B  1303               	bcf	status, 6	;RP1=0, select bank0
  5008  0B2C  00CD               	movwf	(??_frontWallCorrect+0)+0
  5009  0B2D  084D               	movf	(??_frontWallCorrect+0)+0,w
  5010  0B2E  00AC               	movwf	(?_drive)
  5011  0B2F  3080               	movlw	(080h)
  5012  0B30  00CE               	movwf	(??_frontWallCorrect+1)+0
  5013  0B31  084E               	movf	(??_frontWallCorrect+1)+0,w
  5014  0B32  00AD               	movwf	0+(?_drive)+01h
  5015  0B33  01AE               	clrf	0+(?_drive)+02h
  5016  0B34  3000               	movlw	(0)
  5017  0B35  160A  118A  2217   	fcall	_drive
              120A  158A         
  5018                           	line	290
  5019                           ;drive.c: 290: while(distToWall > 49)
  5020  0B3A  2B49               	goto	l12291
  5021                           	
  5022  0B3B                     l5894:	
  5023                           	line	291
  5024                           	
  5025  0B3B                     l12289:	
  5026                           ;drive.c: 291: distToWall = readIR();
  5027  0B3B  160A  118A  2052   	fcall	_readIR
              120A  158A         
  5028  0B40  1283               	bcf	status, 5	;RP0=0, select bank0
  5029  0B41  1303               	bcf	status, 6	;RP1=0, select bank0
  5030  0B42  084A               	movf	(1+(?_readIR)),w
  5031  0B43  01D0               	clrf	(frontWallCorrect@distToWall+1)
  5032  0B44  07D0               	addwf	(frontWallCorrect@distToWall+1)
  5033  0B45  0849               	movf	(0+(?_readIR)),w
  5034  0B46  01CF               	clrf	(frontWallCorrect@distToWall)
  5035  0B47  07CF               	addwf	(frontWallCorrect@distToWall)
  5036                           
  5037  0B48  2B49               	goto	l12291
  5038                           	
  5039  0B49                     l5893:	
  5040                           	line	290
  5041                           	
  5042  0B49                     l12291:	
  5043  0B49  1283               	bcf	status, 5	;RP0=0, select bank0
  5044  0B4A  1303               	bcf	status, 6	;RP1=0, select bank0
  5045  0B4B  0850               	movf	(frontWallCorrect@distToWall+1),w
  5046  0B4C  3A80               	xorlw	80h
  5047  0B4D  00FF               	movwf	btemp+1
  5048  0B4E  3080               	movlw	(high(032h))^80h
  5049  0B4F  027F               	subwf	btemp+1,w
  5050  0B50  1D03               	skipz
  5051  0B51  2B54               	goto	u7255
  5052  0B52  3032               	movlw	low(032h)
  5053  0B53  024F               	subwf	(frontWallCorrect@distToWall),w
  5054  0B54                     u7255:
  5055                           
  5056  0B54  1803               	skipnc
  5057  0B55  2B57               	goto	u7251
  5058  0B56  2B58               	goto	u7250
  5059  0B57                     u7251:
  5060  0B57  2B3B               	goto	l12289
  5061  0B58                     u7250:
  5062  0B58  2B59               	goto	l12293
  5063                           	
  5064  0B59                     l5895:	
  5065                           	line	292
  5066                           	
  5067  0B59                     l12293:	
  5068                           ;drive.c: 292: drive(0, 0, 0, 0);
  5069  0B59  1283               	bcf	status, 5	;RP0=0, select bank0
  5070  0B5A  1303               	bcf	status, 6	;RP1=0, select bank0
  5071  0B5B  01AC               	clrf	(?_drive)
  5072  0B5C  01AD               	clrf	0+(?_drive)+01h
  5073  0B5D  01AE               	clrf	0+(?_drive)+02h
  5074  0B5E  3000               	movlw	(0)
  5075  0B5F  160A  118A  2217   	fcall	_drive
              120A  158A         
  5076  0B64  2B66               	goto	l12295
  5077                           	line	293
  5078                           	
  5079  0B65                     l5892:	
  5080  0B65  2B66               	goto	l12295
  5081                           	line	294
  5082                           	
  5083  0B66                     l5891:	
  5084                           	
  5085  0B66                     l12295:	
  5086                           ;drive.c: 293: }
  5087                           ;drive.c: 294: rotateIR(24, 0b00001101);
  5088  0B66  300D               	movlw	(0Dh)
  5089  0B67  1283               	bcf	status, 5	;RP0=0, select bank0
  5090  0B68  1303               	bcf	status, 6	;RP1=0, select bank0
  5091  0B69  00CD               	movwf	(??_frontWallCorrect+0)+0
  5092  0B6A  084D               	movf	(??_frontWallCorrect+0)+0,w
  5093  0B6B  00AA               	movwf	(?_rotateIR)
  5094  0B6C  3018               	movlw	(018h)
  5095  0B6D  160A  118A  21E4   	fcall	_rotateIR
              120A  158A         
  5096                           	line	295
  5097                           	
  5098  0B72                     l5896:	
  5099  0B72  0008               	return
  5100                           	opt stack 0
  5101                           GLOBAL	__end_of_frontWallCorrect
  5102  0B73                     	__end_of_frontWallCorrect:
  5103 ;; =============== function _frontWallCorrect ends ============
  5104                           
  5105                           	signat	_frontWallCorrect,88
  5106                           	global	_driveForDistance
  5107                           psect	text2206,local,class=CODE,delta=2
  5108                           global __ptext2206
  5109  0436                     __ptext2206:
  5110                           
  5111 ;; *************** function _driveForDistance *****************
  5112 ;; Defined at:
  5113 ;;		line 31 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\drive.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  moveDistance    2   22[BANK0 ] int 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  distance        2   28[BANK0 ] int 
  5118 ;;  deltaDistanc    2   26[BANK0 ] int 
  5119 ;;  cliff           1   33[BANK0 ] volatile unsigned char 
  5120 ;;  virtualWall     1   32[BANK0 ] volatile unsigned char 
  5121 ;;  low             1   31[BANK0 ] volatile unsigned char 
  5122 ;;  high            1   30[BANK0 ] volatile unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;		None               void
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         0       2       0       0       0
  5133 ;;      Locals:         0       8       0       0       0
  5134 ;;      Temps:          0       2       0       0       0
  5135 ;;      Totals:         0      12       0       0       0
  5136 ;;Total ram usage:       12 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    5
  5139 ;; This function calls:
  5140 ;;		_drive
  5141 ;;		_ser_putch
  5142 ;;		_ser_getch
  5143 ;;		_goReverse
  5144 ;;		_turnRight90
  5145 ;;		_updateOrientation
  5146 ;;		_turnLeft90
  5147 ;;		_getCurrentY
  5148 ;;		_getCurrentX
  5149 ;;		_findFinalDestination
  5150 ;; This function is called by:
  5151 ;;		_goBackward
  5152 ;;		_goForward
  5153 ;;		_goLeft
  5154 ;;		_goRight
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           psect	text2206
  5158                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  5159                           	line	31
  5160                           	global	__size_of_driveForDistance
  5161  01B9                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  5162                           	
  5163  0436                     _driveForDistance:	
  5164                           	opt	stack 1
  5165                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5166                           	line	34
  5167                           	
  5168  0436                     l12187:	
  5169                           ;drive.c: 33: volatile char high, low, cliff, virtualWall;
  5170                           ;drive.c: 34: int deltaDistance = 0;
  5171  0436  1283               	bcf	status, 5	;RP0=0, select bank0
  5172  0437  1303               	bcf	status, 6	;RP1=0, select bank0
  5173  0438  01BA               	clrf	(driveForDistance@deltaDistance)
  5174  0439  01BB               	clrf	(driveForDistance@deltaDistance+1)
  5175                           	line	35
  5176                           ;drive.c: 35: int distance = 0;
  5177  043A  01BC               	clrf	(driveForDistance@distance)
  5178  043B  01BD               	clrf	(driveForDistance@distance+1)
  5179                           	line	37
  5180                           	
  5181  043C                     l12189:	
  5182                           ;drive.c: 37: moving = 1;
  5183  043C  1471               	bsf	(_moving/8),(_moving)&7
  5184                           	line	38
  5185                           	
  5186  043D                     l12191:	
  5187                           ;drive.c: 38: drive(0, 250, 128, 0);
  5188  043D  30FA               	movlw	(0FAh)
  5189  043E  00B8               	movwf	(??_driveForDistance+0)+0
  5190  043F  0838               	movf	(??_driveForDistance+0)+0,w
  5191  0440  00AC               	movwf	(?_drive)
  5192  0441  3080               	movlw	(080h)
  5193  0442  00B9               	movwf	(??_driveForDistance+1)+0
  5194  0443  0839               	movf	(??_driveForDistance+1)+0,w
  5195  0444  00AD               	movwf	0+(?_drive)+01h
  5196  0445  01AE               	clrf	0+(?_drive)+02h
  5197  0446  3000               	movlw	(0)
  5198  0447  160A  118A  2217   	fcall	_drive
              120A  118A         
  5199                           	line	39
  5200                           	
  5201  044C                     l12193:	
  5202                           ;drive.c: 39: successfulDrive = 0;
  5203  044C  11F1               	bcf	(_successfulDrive/8),(_successfulDrive)&7
  5204                           	line	41
  5205                           ;drive.c: 41: while(moving)
  5206  044D  2DE9               	goto	l12269
  5207                           	
  5208  044E                     l5820:	
  5209                           	line	43
  5210                           	
  5211  044E                     l12195:	
  5212                           ;drive.c: 42: {
  5213                           ;drive.c: 43: if(distance >= 100)
  5214  044E  1283               	bcf	status, 5	;RP0=0, select bank0
  5215  044F  1303               	bcf	status, 6	;RP1=0, select bank0
  5216  0450  083D               	movf	(driveForDistance@distance+1),w
  5217  0451  3A80               	xorlw	80h
  5218  0452  00FF               	movwf	btemp+1
  5219  0453  3080               	movlw	(high(064h))^80h
  5220  0454  027F               	subwf	btemp+1,w
  5221  0455  1D03               	skipz
  5222  0456  2C59               	goto	u7105
  5223  0457  3064               	movlw	low(064h)
  5224  0458  023C               	subwf	(driveForDistance@distance),w
  5225  0459                     u7105:
  5226                           
  5227  0459  1C03               	skipc
  5228  045A  2C5C               	goto	u7101
  5229  045B  2C5D               	goto	u7100
  5230  045C                     u7101:
  5231  045C  2D15               	goto	l12231
  5232  045D                     u7100:
  5233                           	line	46
  5234                           	
  5235  045D                     l12197:	
  5236                           ;drive.c: 44: {
  5237                           ;drive.c: 46: ser_putch(142);
  5238  045D  308E               	movlw	(08Eh)
  5239  045E  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5240                           	line	47
  5241                           ;drive.c: 47: ser_putch(10);
  5242  0463  300A               	movlw	(0Ah)
  5243  0464  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5244                           	line	48
  5245                           ;drive.c: 48: cliff = ser_getch();
  5246  0469  160A  118A  2030   	fcall	_ser_getch
              120A  118A         
  5247  046E  1283               	bcf	status, 5	;RP0=0, select bank0
  5248  046F  1303               	bcf	status, 6	;RP1=0, select bank0
  5249  0470  00B8               	movwf	(??_driveForDistance+0)+0
  5250  0471  0838               	movf	(??_driveForDistance+0)+0,w
  5251  0472  00C1               	movwf	(driveForDistance@cliff)	;volatile
  5252                           	line	49
  5253                           	
  5254  0473                     l12199:	
  5255                           ;drive.c: 49: if(cliff == 0)
  5256  0473  08C1               	movf	(driveForDistance@cliff),f
  5257  0474  1D03               	skipz	;volatile
  5258  0475  2C77               	goto	u7111
  5259  0476  2C78               	goto	u7110
  5260  0477                     u7111:
  5261  0477  2CC7               	goto	l12211
  5262  0478                     u7110:
  5263                           	line	51
  5264                           	
  5265  0478                     l12201:	
  5266                           ;drive.c: 50: {
  5267                           ;drive.c: 51: ser_putch(142);
  5268  0478  308E               	movlw	(08Eh)
  5269  0479  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5270                           	line	52
  5271                           ;drive.c: 52: ser_putch(11);
  5272  047E  300B               	movlw	(0Bh)
  5273  047F  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5274                           	line	53
  5275                           ;drive.c: 53: cliff = ser_getch();
  5276  0484  160A  118A  2030   	fcall	_ser_getch
              120A  118A         
  5277  0489  1283               	bcf	status, 5	;RP0=0, select bank0
  5278  048A  1303               	bcf	status, 6	;RP1=0, select bank0
  5279  048B  00B8               	movwf	(??_driveForDistance+0)+0
  5280  048C  0838               	movf	(??_driveForDistance+0)+0,w
  5281  048D  00C1               	movwf	(driveForDistance@cliff)	;volatile
  5282                           	line	54
  5283                           	
  5284  048E                     l12203:	
  5285                           ;drive.c: 54: if(cliff == 0)
  5286  048E  08C1               	movf	(driveForDistance@cliff),f
  5287  048F  1D03               	skipz	;volatile
  5288  0490  2C92               	goto	u7121
  5289  0491  2C93               	goto	u7120
  5290  0492                     u7121:
  5291  0492  2CC7               	goto	l12211
  5292  0493                     u7120:
  5293                           	line	56
  5294                           	
  5295  0493                     l12205:	
  5296                           ;drive.c: 55: {
  5297                           ;drive.c: 56: ser_putch(142);
  5298  0493  308E               	movlw	(08Eh)
  5299  0494  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5300                           	line	57
  5301                           ;drive.c: 57: ser_putch(9);
  5302  0499  3009               	movlw	(09h)
  5303  049A  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5304                           	line	58
  5305                           ;drive.c: 58: cliff = ser_getch();
  5306  049F  160A  118A  2030   	fcall	_ser_getch
              120A  118A         
  5307  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  5308  04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  5309  04A6  00B8               	movwf	(??_driveForDistance+0)+0
  5310  04A7  0838               	movf	(??_driveForDistance+0)+0,w
  5311  04A8  00C1               	movwf	(driveForDistance@cliff)	;volatile
  5312                           	line	59
  5313                           	
  5314  04A9                     l12207:	
  5315                           ;drive.c: 59: if(cliff == 0)
  5316  04A9  08C1               	movf	(driveForDistance@cliff),f
  5317  04AA  1D03               	skipz	;volatile
  5318  04AB  2CAD               	goto	u7131
  5319  04AC  2CAE               	goto	u7130
  5320  04AD                     u7131:
  5321  04AD  2CC7               	goto	l12211
  5322  04AE                     u7130:
  5323                           	line	61
  5324                           	
  5325  04AE                     l12209:	
  5326                           ;drive.c: 60: {
  5327                           ;drive.c: 61: ser_putch(142);
  5328  04AE  308E               	movlw	(08Eh)
  5329  04AF  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5330                           	line	62
  5331                           ;drive.c: 62: ser_putch(12);
  5332  04B4  300C               	movlw	(0Ch)
  5333  04B5  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5334                           	line	63
  5335                           ;drive.c: 63: cliff = ser_getch();
  5336  04BA  160A  118A  2030   	fcall	_ser_getch
              120A  118A         
  5337  04BF  1283               	bcf	status, 5	;RP0=0, select bank0
  5338  04C0  1303               	bcf	status, 6	;RP1=0, select bank0
  5339  04C1  00B8               	movwf	(??_driveForDistance+0)+0
  5340  04C2  0838               	movf	(??_driveForDistance+0)+0,w
  5341  04C3  00C1               	movwf	(driveForDistance@cliff)	;volatile
  5342  04C4  2CC7               	goto	l12211
  5343                           	line	64
  5344                           	
  5345  04C5                     l5824:	
  5346  04C5  2CC7               	goto	l12211
  5347                           	line	65
  5348                           	
  5349  04C6                     l5823:	
  5350  04C6  2CC7               	goto	l12211
  5351                           	line	66
  5352                           	
  5353  04C7                     l5822:	
  5354                           	line	67
  5355                           	
  5356  04C7                     l12211:	
  5357                           ;drive.c: 64: }
  5358                           ;drive.c: 65: }
  5359                           ;drive.c: 66: }
  5360                           ;drive.c: 67: if(cliff == 1)
  5361  04C7  0841               	movf	(driveForDistance@cliff),w	;volatile
  5362  04C8  3A01               	xorlw	01h
  5363  04C9  1D03               	skipz
  5364  04CA  2CCC               	goto	u7141
  5365  04CB  2CCD               	goto	u7140
  5366  04CC                     u7141:
  5367  04CC  2D15               	goto	l12231
  5368  04CD                     u7140:
  5369                           	line	69
  5370                           	
  5371  04CD                     l12213:	
  5372                           ;drive.c: 68: {
  5373                           ;drive.c: 69: drive(0, 0, 0, 0);
  5374  04CD  01AC               	clrf	(?_drive)
  5375  04CE  01AD               	clrf	0+(?_drive)+01h
  5376  04CF  01AE               	clrf	0+(?_drive)+02h
  5377  04D0  3000               	movlw	(0)
  5378  04D1  160A  118A  2217   	fcall	_drive
              120A  118A         
  5379                           	line	70
  5380                           ;drive.c: 70: goReverse();
  5381  04D6  160A  118A  254F   	fcall	_goReverse
              120A  118A         
  5382                           	line	72
  5383                           	
  5384  04DB                     l12215:	
  5385                           ;drive.c: 72: if(lastMove == LEFT)
  5386  04DB  1283               	bcf	status, 5	;RP0=0, select bank0
  5387  04DC  1303               	bcf	status, 6	;RP1=0, select bank0
  5388  04DD  0861               	movf	(_lastMove),w	;volatile
  5389  04DE  3A01               	xorlw	01h
  5390  04DF  1D03               	skipz
  5391  04E0  2CE2               	goto	u7151
  5392  04E1  2CE3               	goto	u7150
  5393  04E2                     u7151:
  5394  04E2  2CF4               	goto	l12223
  5395  04E3                     u7150:
  5396                           	line	74
  5397                           	
  5398  04E3                     l12217:	
  5399                           ;drive.c: 73: {
  5400                           ;drive.c: 74: somethingInTheWay = LEFT;
  5401  04E3  1683               	bsf	status, 5	;RP0=1, select bank1
  5402  04E4  1303               	bcf	status, 6	;RP1=0, select bank1
  5403  04E5  01E6               	clrf	(_somethingInTheWay)^080h	;volatile
  5404  04E6  1403               	bsf	status,0
  5405  04E7  0DE6               	rlf	(_somethingInTheWay)^080h,f	;volatile
  5406                           	line	75
  5407                           	
  5408  04E8                     l12219:	
  5409                           ;drive.c: 75: turnRight90();
  5410  04E8  160A  118A  237A   	fcall	_turnRight90
              120A  118A         
  5411                           	line	76
  5412                           	
  5413  04ED                     l12221:	
  5414                           ;drive.c: 76: updateOrientation(RIGHT);
  5415  04ED  3003               	movlw	(03h)
  5416  04EE  160A  158A  26C5   	fcall	_updateOrientation
              120A  118A         
  5417                           	line	77
  5418                           ;drive.c: 77: }
  5419  04F3  2D12               	goto	l5827
  5420                           	line	78
  5421                           	
  5422  04F4                     l5826:	
  5423                           	
  5424  04F4                     l12223:	
  5425                           ;drive.c: 78: else if (lastMove == RIGHT)
  5426  04F4  1283               	bcf	status, 5	;RP0=0, select bank0
  5427  04F5  1303               	bcf	status, 6	;RP1=0, select bank0
  5428  04F6  0861               	movf	(_lastMove),w	;volatile
  5429  04F7  3A03               	xorlw	03h
  5430  04F8  1D03               	skipz
  5431  04F9  2CFB               	goto	u7161
  5432  04FA  2CFC               	goto	u7160
  5433  04FB                     u7161:
  5434  04FB  2D0E               	goto	l5828
  5435  04FC                     u7160:
  5436                           	line	80
  5437                           	
  5438  04FC                     l12225:	
  5439                           ;drive.c: 79: {
  5440                           ;drive.c: 80: somethingInTheWay = RIGHT;
  5441  04FC  3003               	movlw	(03h)
  5442  04FD  00B8               	movwf	(??_driveForDistance+0)+0
  5443  04FE  0838               	movf	(??_driveForDistance+0)+0,w
  5444  04FF  1683               	bsf	status, 5	;RP0=1, select bank1
  5445  0500  1303               	bcf	status, 6	;RP1=0, select bank1
  5446  0501  00E6               	movwf	(_somethingInTheWay)^080h	;volatile
  5447                           	line	81
  5448                           	
  5449  0502                     l12227:	
  5450                           ;drive.c: 81: turnLeft90();
  5451  0502  160A  118A  26C8   	fcall	_turnLeft90
              120A  118A         
  5452                           	line	82
  5453                           	
  5454  0507                     l12229:	
  5455                           ;drive.c: 82: updateOrientation(LEFT);
  5456  0507  3001               	movlw	(01h)
  5457  0508  160A  158A  26C5   	fcall	_updateOrientation
              120A  118A         
  5458                           	line	83
  5459                           ;drive.c: 83: }
  5460  050D  2D12               	goto	l5827
  5461                           	line	84
  5462                           	
  5463  050E                     l5828:	
  5464                           	line	85
  5465                           ;drive.c: 84: else
  5466                           ;drive.c: 85: somethingInTheWay = FORWARD;
  5467  050E  1683               	bsf	status, 5	;RP0=1, select bank1
  5468  050F  1303               	bcf	status, 6	;RP1=0, select bank1
  5469  0510  01E6               	clrf	(_somethingInTheWay)^080h	;volatile
  5470  0511  2D12               	goto	l5827
  5471                           	
  5472  0512                     l5829:	
  5473                           	
  5474  0512                     l5827:	
  5475                           	line	86
  5476                           ;drive.c: 86: moving = 0;
  5477  0512  1071               	bcf	(_moving/8),(_moving)&7
  5478  0513  2D15               	goto	l12231
  5479                           	line	87
  5480                           	
  5481  0514                     l5825:	
  5482  0514  2D15               	goto	l12231
  5483                           	line	88
  5484                           	
  5485  0515                     l5821:	
  5486                           	line	91
  5487                           	
  5488  0515                     l12231:	
  5489                           ;drive.c: 87: }
  5490                           ;drive.c: 88: }
  5491                           ;drive.c: 91: ser_putch(142);
  5492  0515  308E               	movlw	(08Eh)
  5493  0516  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5494                           	line	92
  5495                           ;drive.c: 92: ser_putch(13);
  5496  051B  300D               	movlw	(0Dh)
  5497  051C  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5498                           	line	93
  5499                           ;drive.c: 93: virtualWall = ser_getch();
  5500  0521  160A  118A  2030   	fcall	_ser_getch
              120A  118A         
  5501  0526  1283               	bcf	status, 5	;RP0=0, select bank0
  5502  0527  1303               	bcf	status, 6	;RP1=0, select bank0
  5503  0528  00B8               	movwf	(??_driveForDistance+0)+0
  5504  0529  0838               	movf	(??_driveForDistance+0)+0,w
  5505  052A  00C0               	movwf	(driveForDistance@virtualWall)	;volatile
  5506                           	line	94
  5507                           	
  5508  052B                     l12233:	
  5509                           ;drive.c: 94: if(virtualWall == 1)
  5510  052B  0840               	movf	(driveForDistance@virtualWall),w	;volatile
  5511  052C  3A01               	xorlw	01h
  5512  052D  1D03               	skipz
  5513  052E  2D30               	goto	u7171
  5514  052F  2D31               	goto	u7170
  5515  0530                     u7171:
  5516  0530  2D90               	goto	l12253
  5517  0531                     u7170:
  5518                           	line	96
  5519                           	
  5520  0531                     l12235:	
  5521                           ;drive.c: 95: {
  5522                           ;drive.c: 96: drive(0, 0, 0, 0);
  5523  0531  01AC               	clrf	(?_drive)
  5524  0532  01AD               	clrf	0+(?_drive)+01h
  5525  0533  01AE               	clrf	0+(?_drive)+02h
  5526  0534  3000               	movlw	(0)
  5527  0535  160A  118A  2217   	fcall	_drive
              120A  118A         
  5528                           	line	97
  5529                           ;drive.c: 97: findFinalDestination(getCurrentX(),getCurrentY(), currentOrientation);
  5530  053A  160A  158A  268E   	fcall	_getCurrentY
              120A  118A         
  5531  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  5532  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  5533  0541  00B8               	movwf	(??_driveForDistance+0)+0
  5534  0542  0838               	movf	(??_driveForDistance+0)+0,w
  5535  0543  00AE               	movwf	(?_findFinalDestination)
  5536  0544  0860               	movf	(_currentOrientation),w	;volatile
  5537  0545  00B9               	movwf	(??_driveForDistance+1)+0
  5538  0546  0839               	movf	(??_driveForDistance+1)+0,w
  5539  0547  00AF               	movwf	0+(?_findFinalDestination)+01h
  5540  0548  160A  158A  2689   	fcall	_getCurrentX
              120A  118A         
  5541  054D  120A  158A  2573   	fcall	_findFinalDestination
              120A  118A         
  5542                           	line	98
  5543                           ;drive.c: 98: goReverse();
  5544  0552  160A  118A  254F   	fcall	_goReverse
              120A  118A         
  5545                           	line	100
  5546                           	
  5547  0557                     l12237:	
  5548                           ;drive.c: 100: if(lastMove == LEFT)
  5549  0557  1283               	bcf	status, 5	;RP0=0, select bank0
  5550  0558  1303               	bcf	status, 6	;RP1=0, select bank0
  5551  0559  0861               	movf	(_lastMove),w	;volatile
  5552  055A  3A01               	xorlw	01h
  5553  055B  1D03               	skipz
  5554  055C  2D5E               	goto	u7181
  5555  055D  2D5F               	goto	u7180
  5556  055E                     u7181:
  5557  055E  2D70               	goto	l12245
  5558  055F                     u7180:
  5559                           	line	102
  5560                           	
  5561  055F                     l12239:	
  5562                           ;drive.c: 101: {
  5563                           ;drive.c: 102: somethingInTheWay = LEFT;
  5564  055F  1683               	bsf	status, 5	;RP0=1, select bank1
  5565  0560  1303               	bcf	status, 6	;RP1=0, select bank1
  5566  0561  01E6               	clrf	(_somethingInTheWay)^080h	;volatile
  5567  0562  1403               	bsf	status,0
  5568  0563  0DE6               	rlf	(_somethingInTheWay)^080h,f	;volatile
  5569                           	line	103
  5570                           	
  5571  0564                     l12241:	
  5572                           ;drive.c: 103: turnRight90();
  5573  0564  160A  118A  237A   	fcall	_turnRight90
              120A  118A         
  5574                           	line	104
  5575                           	
  5576  0569                     l12243:	
  5577                           ;drive.c: 104: updateOrientation(RIGHT);
  5578  0569  3003               	movlw	(03h)
  5579  056A  160A  158A  26C5   	fcall	_updateOrientation
              120A  118A         
  5580                           	line	105
  5581                           ;drive.c: 105: }
  5582  056F  2D8E               	goto	l5832
  5583                           	line	106
  5584                           	
  5585  0570                     l5831:	
  5586                           	
  5587  0570                     l12245:	
  5588                           ;drive.c: 106: else if (lastMove == RIGHT)
  5589  0570  1283               	bcf	status, 5	;RP0=0, select bank0
  5590  0571  1303               	bcf	status, 6	;RP1=0, select bank0
  5591  0572  0861               	movf	(_lastMove),w	;volatile
  5592  0573  3A03               	xorlw	03h
  5593  0574  1D03               	skipz
  5594  0575  2D77               	goto	u7191
  5595  0576  2D78               	goto	u7190
  5596  0577                     u7191:
  5597  0577  2D8A               	goto	l5833
  5598  0578                     u7190:
  5599                           	line	108
  5600                           	
  5601  0578                     l12247:	
  5602                           ;drive.c: 107: {
  5603                           ;drive.c: 108: somethingInTheWay = RIGHT;
  5604  0578  3003               	movlw	(03h)
  5605  0579  00B8               	movwf	(??_driveForDistance+0)+0
  5606  057A  0838               	movf	(??_driveForDistance+0)+0,w
  5607  057B  1683               	bsf	status, 5	;RP0=1, select bank1
  5608  057C  1303               	bcf	status, 6	;RP1=0, select bank1
  5609  057D  00E6               	movwf	(_somethingInTheWay)^080h	;volatile
  5610                           	line	109
  5611                           	
  5612  057E                     l12249:	
  5613                           ;drive.c: 109: turnLeft90();
  5614  057E  160A  118A  26C8   	fcall	_turnLeft90
              120A  118A         
  5615                           	line	110
  5616                           	
  5617  0583                     l12251:	
  5618                           ;drive.c: 110: updateOrientation(LEFT);
  5619  0583  3001               	movlw	(01h)
  5620  0584  160A  158A  26C5   	fcall	_updateOrientation
              120A  118A         
  5621                           	line	111
  5622                           ;drive.c: 111: }
  5623  0589  2D8E               	goto	l5832
  5624                           	line	112
  5625                           	
  5626  058A                     l5833:	
  5627                           	line	113
  5628                           ;drive.c: 112: else
  5629                           ;drive.c: 113: somethingInTheWay = FORWARD;
  5630  058A  1683               	bsf	status, 5	;RP0=1, select bank1
  5631  058B  1303               	bcf	status, 6	;RP1=0, select bank1
  5632  058C  01E6               	clrf	(_somethingInTheWay)^080h	;volatile
  5633  058D  2D8E               	goto	l5832
  5634                           	
  5635  058E                     l5834:	
  5636                           	
  5637  058E                     l5832:	
  5638                           	line	114
  5639                           ;drive.c: 114: moving = 0;
  5640  058E  1071               	bcf	(_moving/8),(_moving)&7
  5641  058F  2D90               	goto	l12253
  5642                           	line	115
  5643                           	
  5644  0590                     l5830:	
  5645                           	line	118
  5646                           	
  5647  0590                     l12253:	
  5648                           ;drive.c: 115: }
  5649                           ;drive.c: 118: ser_putch(142);
  5650  0590  308E               	movlw	(08Eh)
  5651  0591  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5652                           	line	119
  5653                           ;drive.c: 119: ser_putch(19);
  5654  0596  3013               	movlw	(013h)
  5655  0597  160A  158A  27DF   	fcall	_ser_putch
              120A  118A         
  5656                           	line	120
  5657                           ;drive.c: 120: high = ser_getch();
  5658  059C  160A  118A  2030   	fcall	_ser_getch
              120A  118A         
  5659  05A1  1283               	bcf	status, 5	;RP0=0, select bank0
  5660  05A2  1303               	bcf	status, 6	;RP1=0, select bank0
  5661  05A3  00B8               	movwf	(??_driveForDistance+0)+0
  5662  05A4  0838               	movf	(??_driveForDistance+0)+0,w
  5663  05A5  00BE               	movwf	(driveForDistance@high)	;volatile
  5664                           	line	121
  5665                           ;drive.c: 121: low = ser_getch();
  5666  05A6  160A  118A  2030   	fcall	_ser_getch
              120A  118A         
  5667  05AB  1283               	bcf	status, 5	;RP0=0, select bank0
  5668  05AC  1303               	bcf	status, 6	;RP1=0, select bank0
  5669  05AD  00B8               	movwf	(??_driveForDistance+0)+0
  5670  05AE  0838               	movf	(??_driveForDistance+0)+0,w
  5671  05AF  00BF               	movwf	(driveForDistance@low)	;volatile
  5672                           	line	122
  5673                           	
  5674  05B0                     l12255:	
  5675                           ;drive.c: 122: deltaDistance = high*256 + low;
  5676  05B0  083E               	movf	(driveForDistance@high),w	;volatile
  5677  05B1  00B8               	movwf	(??_driveForDistance+0)+0
  5678  05B2  01B9               	clrf	(??_driveForDistance+0)+0+1
  5679  05B3  0838               	movf	(??_driveForDistance+0)+0,w
  5680  05B4  00B9               	movwf	(??_driveForDistance+0)+1
  5681  05B5  01B8               	clrf	(??_driveForDistance+0)+0
  5682  05B6  083F               	movf	(driveForDistance@low),w	;volatile
  5683  05B7  0738               	addwf	0+(??_driveForDistance+0)+0,w
  5684  05B8  00BA               	movwf	(driveForDistance@deltaDistance)
  5685  05B9  3000               	movlw	0
  5686  05BA  1803               	skipnc
  5687  05BB  3001               	movlw	1
  5688  05BC  0739               	addwf	1+(??_driveForDistance+0)+0,w
  5689  05BD  00BB               	movwf	1+(driveForDistance@deltaDistance)
  5690                           	line	123
  5691                           	
  5692  05BE                     l12257:	
  5693                           ;drive.c: 123: distance += deltaDistance;
  5694  05BE  083A               	movf	(driveForDistance@deltaDistance),w
  5695  05BF  07BC               	addwf	(driveForDistance@distance),f
  5696  05C0  1803               	skipnc
  5697  05C1  0ABD               	incf	(driveForDistance@distance+1),f
  5698  05C2  083B               	movf	(driveForDistance@deltaDistance+1),w
  5699  05C3  07BD               	addwf	(driveForDistance@distance+1),f
  5700                           	line	124
  5701                           	
  5702  05C4                     l12259:	
  5703                           ;drive.c: 124: if(distance >= moveDistance)
  5704  05C4  083D               	movf	(driveForDistance@distance+1),w
  5705  05C5  3A80               	xorlw	80h
  5706  05C6  00B8               	movwf	(??_driveForDistance+0)+0
  5707  05C7  0837               	movf	(driveForDistance@moveDistance+1),w
  5708  05C8  3A80               	xorlw	80h
  5709  05C9  0238               	subwf	(??_driveForDistance+0)+0,w
  5710  05CA  1D03               	skipz
  5711  05CB  2DCE               	goto	u7205
  5712  05CC  0836               	movf	(driveForDistance@moveDistance),w
  5713  05CD  023C               	subwf	(driveForDistance@distance),w
  5714  05CE                     u7205:
  5715                           
  5716  05CE  1C03               	skipc
  5717  05CF  2DD1               	goto	u7201
  5718  05D0  2DD2               	goto	u7200
  5719  05D1                     u7201:
  5720  05D1  2DE9               	goto	l12269
  5721  05D2                     u7200:
  5722                           	line	126
  5723                           	
  5724  05D2                     l12261:	
  5725                           ;drive.c: 125: {
  5726                           ;drive.c: 126: drive(0, 0, 0, 0);
  5727  05D2  1283               	bcf	status, 5	;RP0=0, select bank0
  5728  05D3  1303               	bcf	status, 6	;RP1=0, select bank0
  5729  05D4  01AC               	clrf	(?_drive)
  5730  05D5  01AD               	clrf	0+(?_drive)+01h
  5731  05D6  01AE               	clrf	0+(?_drive)+02h
  5732  05D7  3000               	movlw	(0)
  5733  05D8  160A  118A  2217   	fcall	_drive
              120A  118A         
  5734                           	line	127
  5735                           	
  5736  05DD                     l12263:	
  5737                           ;drive.c: 127: successfulDrive = 1;
  5738  05DD  15F1               	bsf	(_successfulDrive/8),(_successfulDrive)&7
  5739                           	line	128
  5740                           	
  5741  05DE                     l12265:	
  5742                           ;drive.c: 128: moving = 0;
  5743  05DE  1071               	bcf	(_moving/8),(_moving)&7
  5744                           	line	129
  5745                           	
  5746  05DF                     l12267:	
  5747                           ;drive.c: 129: somethingInTheWay = BACKWARD;
  5748  05DF  3002               	movlw	(02h)
  5749  05E0  1283               	bcf	status, 5	;RP0=0, select bank0
  5750  05E1  1303               	bcf	status, 6	;RP1=0, select bank0
  5751  05E2  00B8               	movwf	(??_driveForDistance+0)+0
  5752  05E3  0838               	movf	(??_driveForDistance+0)+0,w
  5753  05E4  1683               	bsf	status, 5	;RP0=1, select bank1
  5754  05E5  1303               	bcf	status, 6	;RP1=0, select bank1
  5755  05E6  00E6               	movwf	(_somethingInTheWay)^080h	;volatile
  5756  05E7  2DE9               	goto	l12269
  5757                           	line	130
  5758                           	
  5759  05E8                     l5835:	
  5760  05E8  2DE9               	goto	l12269
  5761                           	line	131
  5762                           	
  5763  05E9                     l5819:	
  5764                           	line	41
  5765                           	
  5766  05E9                     l12269:	
  5767  05E9  1871               	btfsc	(_moving/8),(_moving)&7
  5768  05EA  2DEC               	goto	u7211
  5769  05EB  2DED               	goto	u7210
  5770  05EC                     u7211:
  5771  05EC  2C4E               	goto	l12195
  5772  05ED                     u7210:
  5773  05ED  2DEE               	goto	l5837
  5774                           	
  5775  05EE                     l5836:	
  5776                           	line	132
  5777                           	
  5778  05EE                     l5837:	
  5779  05EE  0008               	return
  5780                           	opt stack 0
  5781                           GLOBAL	__end_of_driveForDistance
  5782  05EF                     	__end_of_driveForDistance:
  5783 ;; =============== function _driveForDistance ends ============
  5784                           
  5785                           	signat	_driveForDistance,4216
  5786                           	global	_updateLocation
  5787                           psect	text2207,local,class=CODE,delta=2
  5788                           global __ptext2207
  5789  1722                     __ptext2207:
  5790                           
  5791 ;; *************** function _updateLocation *****************
  5792 ;; Defined at:
  5793 ;;		line 278 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;		None               void
  5800 ;; Registers used:
  5801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5807 ;;      Params:         0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0
  5809 ;;      Temps:          0       1       0       0       0
  5810 ;;      Totals:         0       1       0       0       0
  5811 ;;Total ram usage:        1 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    4
  5814 ;; This function calls:
  5815 ;;		_lcd_set_cursor
  5816 ;;		_lcd_write_data
  5817 ;;		_getOrientation
  5818 ;;		_lcd_write_1_digit_bcd
  5819 ;; This function is called by:
  5820 ;;		_main
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           psect	text2207
  5824                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  5825                           	line	278
  5826                           	global	__size_of_updateLocation
  5827  0068                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  5828                           	
  5829  1722                     _updateLocation:	
  5830                           	opt	stack 3
  5831                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5832                           	line	279
  5833                           	
  5834  1722                     l12163:	
  5835                           ;main.c: 279: lcd_set_cursor(0x40);
  5836  1722  3040               	movlw	(040h)
  5837  1723  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  5838                           	line	280
  5839                           ;main.c: 280: switch(getOrientation())
  5840  1728  2F5B               	goto	l12183
  5841                           	line	282
  5842                           ;main.c: 281: {
  5843                           ;main.c: 282: case NORTH:
  5844                           	
  5845  1729                     l6765:	
  5846                           	line	283
  5847                           	
  5848  1729                     l12165:	
  5849                           ;main.c: 283: ++yCoord;
  5850  1729  3001               	movlw	(01h)
  5851  172A  1283               	bcf	status, 5	;RP0=0, select bank0
  5852  172B  1303               	bcf	status, 6	;RP1=0, select bank0
  5853  172C  00AE               	movwf	(??_updateLocation+0)+0
  5854  172D  082E               	movf	(??_updateLocation+0)+0,w
  5855  172E  07E5               	addwf	(_yCoord),f	;volatile
  5856                           	line	284
  5857                           	
  5858  172F                     l12167:	
  5859                           ;main.c: 284: lcd_write_data('N');
  5860  172F  304E               	movlw	(04Eh)
  5861  1730  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  5862                           	line	285
  5863                           ;main.c: 285: break;
  5864  1735  2F6D               	goto	l12185
  5865                           	line	286
  5866                           ;main.c: 286: case SOUTH:
  5867                           	
  5868  1736                     l6767:	
  5869                           	line	287
  5870                           	
  5871  1736                     l12169:	
  5872                           ;main.c: 287: --yCoord;
  5873  1736  3001               	movlw	low(01h)
  5874  1737  1283               	bcf	status, 5	;RP0=0, select bank0
  5875  1738  1303               	bcf	status, 6	;RP1=0, select bank0
  5876  1739  02E5               	subwf	(_yCoord),f	;volatile
  5877                           	line	288
  5878                           	
  5879  173A                     l12171:	
  5880                           ;main.c: 288: lcd_write_data('S');
  5881  173A  3053               	movlw	(053h)
  5882  173B  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  5883                           	line	289
  5884                           ;main.c: 289: break;
  5885  1740  2F6D               	goto	l12185
  5886                           	line	290
  5887                           ;main.c: 290: case EAST:
  5888                           	
  5889  1741                     l6768:	
  5890                           	line	291
  5891                           	
  5892  1741                     l12173:	
  5893                           ;main.c: 291: ++xCoord;
  5894  1741  3001               	movlw	(01h)
  5895  1742  1283               	bcf	status, 5	;RP0=0, select bank0
  5896  1743  1303               	bcf	status, 6	;RP1=0, select bank0
  5897  1744  00AE               	movwf	(??_updateLocation+0)+0
  5898  1745  082E               	movf	(??_updateLocation+0)+0,w
  5899  1746  07E4               	addwf	(_xCoord),f	;volatile
  5900                           	line	292
  5901                           	
  5902  1747                     l12175:	
  5903                           ;main.c: 292: lcd_write_data('E');
  5904  1747  3045               	movlw	(045h)
  5905  1748  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  5906                           	line	293
  5907                           ;main.c: 293: break;
  5908  174D  2F6D               	goto	l12185
  5909                           	line	294
  5910                           ;main.c: 294: case WEST:
  5911                           	
  5912  174E                     l6769:	
  5913                           	line	295
  5914                           	
  5915  174E                     l12177:	
  5916                           ;main.c: 295: --xCoord;
  5917  174E  3001               	movlw	low(01h)
  5918  174F  1283               	bcf	status, 5	;RP0=0, select bank0
  5919  1750  1303               	bcf	status, 6	;RP1=0, select bank0
  5920  1751  02E4               	subwf	(_xCoord),f	;volatile
  5921                           	line	296
  5922                           	
  5923  1752                     l12179:	
  5924                           ;main.c: 296: lcd_write_data('W');
  5925  1752  3057               	movlw	(057h)
  5926  1753  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  5927                           	line	297
  5928                           ;main.c: 297: break;
  5929  1758  2F6D               	goto	l12185
  5930                           	line	298
  5931                           ;main.c: 298: default:
  5932                           	
  5933  1759                     l6770:	
  5934                           	line	299
  5935                           ;main.c: 299: break;
  5936  1759  2F6D               	goto	l12185
  5937                           	line	300
  5938                           	
  5939  175A                     l12181:	
  5940                           ;main.c: 300: }
  5941  175A  2F6D               	goto	l12185
  5942                           	line	280
  5943                           	
  5944  175B                     l6764:	
  5945                           	
  5946  175B                     l12183:	
  5947  175B  160A  158A  2693   	fcall	_getOrientation
              160A  118A         
  5948                           	; Switch size 1, requested type "space"
  5949                           ; Number of cases is 4, Range of values is 0 to 3
  5950                           ; switch strategies available:
  5951                           ; Name         Instructions Cycles
  5952                           ; simple_byte           13     7 (average)
  5953                           ; direct_byte           20     8 (fixed)
  5954                           ; jumptable            260     6 (fixed)
  5955                           ; rangetable             8     6 (fixed)
  5956                           ; spacedrange           14     9 (fixed)
  5957                           ; locatedrange           4     3 (fixed)
  5958                           ;	Chosen strategy is simple_byte
  5959                           
  5960                           	opt asmopt_off
  5961  1760  3A00               	xorlw	0^0	; case 0
  5962  1761  1903               	skipnz
  5963  1762  2F4E               	goto	l12177
  5964  1763  3A01               	xorlw	1^0	; case 1
  5965  1764  1903               	skipnz
  5966  1765  2F36               	goto	l12169
  5967  1766  3A03               	xorlw	2^1	; case 2
  5968  1767  1903               	skipnz
  5969  1768  2F41               	goto	l12173
  5970  1769  3A01               	xorlw	3^2	; case 3
  5971  176A  1903               	skipnz
  5972  176B  2F29               	goto	l12165
  5973  176C  2F6D               	goto	l12185
  5974                           	opt asmopt_on
  5975                           
  5976                           	line	300
  5977                           	
  5978  176D                     l6766:	
  5979                           	line	302
  5980                           	
  5981  176D                     l12185:	
  5982                           ;main.c: 302: lcd_set_cursor(0x01);
  5983  176D  3001               	movlw	(01h)
  5984  176E  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  5985                           	line	303
  5986                           ;main.c: 303: lcd_write_1_digit_bcd(xCoord);
  5987  1773  1283               	bcf	status, 5	;RP0=0, select bank0
  5988  1774  1303               	bcf	status, 6	;RP1=0, select bank0
  5989  1775  0864               	movf	(_xCoord),w	;volatile
  5990  1776  160A  158A  26BA   	fcall	_lcd_write_1_digit_bcd
              160A  118A         
  5991                           	line	304
  5992                           ;main.c: 304: lcd_set_cursor(0x03);
  5993  177B  3003               	movlw	(03h)
  5994  177C  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  5995                           	line	305
  5996                           ;main.c: 305: lcd_write_1_digit_bcd(yCoord);
  5997  1781  1283               	bcf	status, 5	;RP0=0, select bank0
  5998  1782  1303               	bcf	status, 6	;RP1=0, select bank0
  5999  1783  0865               	movf	(_yCoord),w	;volatile
  6000  1784  160A  158A  26BA   	fcall	_lcd_write_1_digit_bcd
              160A  118A         
  6001                           	line	306
  6002                           	
  6003  1789                     l6771:	
  6004  1789  0008               	return
  6005                           	opt stack 0
  6006                           GLOBAL	__end_of_updateLocation
  6007  178A                     	__end_of_updateLocation:
  6008 ;; =============== function _updateLocation ends ============
  6009                           
  6010                           	signat	_updateLocation,88
  6011                           	global	_lookForVictim
  6012                           psect	text2208,local,class=CODE,delta=2
  6013                           global __ptext2208
  6014  0809                     __ptext2208:
  6015                           
  6016 ;; *************** function _lookForVictim *****************
  6017 ;; Defined at:
  6018 ;;		line 167 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  victim          1   16[BANK0 ] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;		None               void
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6032 ;;      Params:         0       0       0       0       0
  6033 ;;      Locals:         0       1       0       0       0
  6034 ;;      Temps:          0       2       0       0       0
  6035 ;;      Totals:         0       3       0       0       0
  6036 ;;Total ram usage:        3 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    4
  6039 ;; This function calls:
  6040 ;;		_ser_putch
  6041 ;;		_ser_getch
  6042 ;;		_play_iCreate_song
  6043 ;;		_lcd_set_cursor
  6044 ;;		_lcd_write_data
  6045 ;;		_getVictimZone
  6046 ;;		_lcd_write_1_digit_bcd
  6047 ;; This function is called by:
  6048 ;;		_main
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           psect	text2208
  6052                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  6053                           	line	167
  6054                           	global	__size_of_lookForVictim
  6055  005E                     	__size_of_lookForVictim	equ	__end_of_lookForVictim-_lookForVictim
  6056                           	
  6057  0809                     _lookForVictim:	
  6058                           	opt	stack 3
  6059                           ; Regs used in _lookForVictim: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6060                           	line	168
  6061                           	
  6062  0809                     l12141:	
  6063                           ;main.c: 168: ser_putch(142);
  6064  0809  308E               	movlw	(08Eh)
  6065  080A  160A  158A  27DF   	fcall	_ser_putch
              120A  158A         
  6066                           	line	169
  6067                           ;main.c: 169: ser_putch(17);
  6068  080F  3011               	movlw	(011h)
  6069  0810  160A  158A  27DF   	fcall	_ser_putch
              120A  158A         
  6070                           	line	170
  6071                           ;main.c: 170: char victim = ser_getch();
  6072  0815  160A  118A  2030   	fcall	_ser_getch
              120A  158A         
  6073  081A  1283               	bcf	status, 5	;RP0=0, select bank0
  6074  081B  1303               	bcf	status, 6	;RP1=0, select bank0
  6075  081C  00AE               	movwf	(??_lookForVictim+0)+0
  6076  081D  082E               	movf	(??_lookForVictim+0)+0,w
  6077  081E  00B0               	movwf	(lookForVictim@victim)
  6078                           	line	172
  6079                           	
  6080  081F                     l12143:	
  6081                           ;main.c: 172: if(victim > 241 && victim != 255)
  6082  081F  30F2               	movlw	(0F2h)
  6083  0820  0230               	subwf	(lookForVictim@victim),w
  6084  0821  1C03               	skipc
  6085  0822  2824               	goto	u7071
  6086  0823  2825               	goto	u7070
  6087  0824                     u7071:
  6088  0824  2866               	goto	l6733
  6089  0825                     u7070:
  6090                           	
  6091  0825                     l12145:	
  6092  0825  0830               	movf	(lookForVictim@victim),w
  6093  0826  3AFF               	xorlw	0FFh
  6094  0827  1903               	skipnz
  6095  0828  282A               	goto	u7081
  6096  0829  282B               	goto	u7080
  6097  082A                     u7081:
  6098  082A  2866               	goto	l6733
  6099  082B                     u7080:
  6100                           	line	174
  6101                           	
  6102  082B                     l12147:	
  6103                           ;main.c: 173: {
  6104                           ;main.c: 174: if(goingHome)
  6105  082B  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  6106  082C  282E               	goto	u7091
  6107  082D  282F               	goto	u7090
  6108  082E                     u7091:
  6109  082E  2845               	goto	l12157
  6110  082F                     u7090:
  6111                           	line	176
  6112                           	
  6113  082F                     l12149:	
  6114                           ;main.c: 175: {
  6115                           ;main.c: 176: play_iCreate_song(3);
  6116  082F  3003               	movlw	(03h)
  6117  0830  160A  158A  26E7   	fcall	_play_iCreate_song
              120A  158A         
  6118                           	line	177
  6119                           	
  6120  0835                     l12151:	
  6121                           ;main.c: 177: victimZone = 0;
  6122  0835  1283               	bcf	status, 5	;RP0=0, select bank0
  6123  0836  1303               	bcf	status, 6	;RP1=0, select bank0
  6124  0837  01E2               	clrf	(_victimZone)	;volatile
  6125                           	line	178
  6126                           	
  6127  0838                     l12153:	
  6128                           ;main.c: 178: lcd_set_cursor(0x09);
  6129  0838  3009               	movlw	(09h)
  6130  0839  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  158A         
  6131                           	line	179
  6132                           	
  6133  083E                     l12155:	
  6134                           ;main.c: 179: lcd_write_data('V');
  6135  083E  3056               	movlw	(056h)
  6136  083F  160A  158A  26F9   	fcall	_lcd_write_data
              120A  158A         
  6137                           	line	180
  6138                           ;main.c: 180: }
  6139  0844  2866               	goto	l6733
  6140                           	line	181
  6141                           	
  6142  0845                     l6731:	
  6143                           	line	183
  6144                           	
  6145  0845                     l12157:	
  6146                           ;main.c: 181: else
  6147                           ;main.c: 182: {
  6148                           ;main.c: 183: victimZone = getVictimZone(xCoord, yCoord);
  6149  0845  1283               	bcf	status, 5	;RP0=0, select bank0
  6150  0846  1303               	bcf	status, 6	;RP1=0, select bank0
  6151  0847  0865               	movf	(_yCoord),w	;volatile
  6152  0848  00AE               	movwf	(??_lookForVictim+0)+0
  6153  0849  082E               	movf	(??_lookForVictim+0)+0,w
  6154  084A  00AA               	movwf	(?_getVictimZone)
  6155  084B  0864               	movf	(_xCoord),w	;volatile
  6156  084C  120A  158A  2177   	fcall	_getVictimZone
              120A  158A         
  6157  0851  1283               	bcf	status, 5	;RP0=0, select bank0
  6158  0852  1303               	bcf	status, 6	;RP1=0, select bank0
  6159  0853  00AF               	movwf	(??_lookForVictim+1)+0
  6160  0854  082F               	movf	(??_lookForVictim+1)+0,w
  6161  0855  00E2               	movwf	(_victimZone)	;volatile
  6162                           	line	184
  6163                           	
  6164  0856                     l12159:	
  6165                           ;main.c: 184: lcd_set_cursor(0x08);
  6166  0856  3008               	movlw	(08h)
  6167  0857  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  158A         
  6168                           	line	185
  6169                           	
  6170  085C                     l12161:	
  6171                           ;main.c: 185: lcd_write_1_digit_bcd(victimZone);
  6172  085C  1283               	bcf	status, 5	;RP0=0, select bank0
  6173  085D  1303               	bcf	status, 6	;RP1=0, select bank0
  6174  085E  0862               	movf	(_victimZone),w	;volatile
  6175  085F  160A  158A  26BA   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  6176  0864  2866               	goto	l6733
  6177                           	line	186
  6178                           	
  6179  0865                     l6732:	
  6180  0865  2866               	goto	l6733
  6181                           	line	187
  6182                           	
  6183  0866                     l6730:	
  6184                           	line	188
  6185                           	
  6186  0866                     l6733:	
  6187  0866  0008               	return
  6188                           	opt stack 0
  6189                           GLOBAL	__end_of_lookForVictim
  6190  0867                     	__end_of_lookForVictim:
  6191 ;; =============== function _lookForVictim ends ============
  6192                           
  6193                           	signat	_lookForVictim,88
  6194                           	global	_checkForFinalDestination
  6195                           psect	text2209,local,class=CODE,delta=2
  6196                           global __ptext2209
  6197  11B7                     __ptext2209:
  6198                           
  6199 ;; *************** function _checkForFinalDestination *****************
  6200 ;; Defined at:
  6201 ;;		line 156 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;		None
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;		None
  6206 ;; Return value:  Size  Location     Type
  6207 ;;		None               void
  6208 ;; Registers used:
  6209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6215 ;;      Params:         0       0       0       0       0
  6216 ;;      Locals:         0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0
  6218 ;;      Totals:         0       0       0       0       0
  6219 ;;Total ram usage:        0 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    4
  6222 ;; This function calls:
  6223 ;;		_getFinalX
  6224 ;;		_getFinalY
  6225 ;;		_play_iCreate_song
  6226 ;;		_lcd_set_cursor
  6227 ;;		_lcd_write_data
  6228 ;; This function is called by:
  6229 ;;		_main
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           psect	text2209
  6233                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  6234                           	line	156
  6235                           	global	__size_of_checkForFinalDestination
  6236  002D                     	__size_of_checkForFinalDestination	equ	__end_of_checkForFinalDestination-_checkForFinal
                                 Destination
  6237                           	
  6238  11B7                     _checkForFinalDestination:	
  6239                           	opt	stack 3
  6240                           ; Regs used in _checkForFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6241                           	line	157
  6242                           	
  6243  11B7                     l12129:	
  6244                           ;main.c: 157: if((xCoord == getFinalX()) && (yCoord == getFinalY()))
  6245  11B7  160A  158A  267F   	fcall	_getFinalX
              160A  118A         
  6246  11BC  1283               	bcf	status, 5	;RP0=0, select bank0
  6247  11BD  1303               	bcf	status, 6	;RP1=0, select bank0
  6248  11BE  0664               	xorwf	(_xCoord),w	;volatile
  6249  11BF  1D03               	skipz
  6250  11C0  29C2               	goto	u7051
  6251  11C1  29C3               	goto	u7050
  6252  11C2                     u7051:
  6253  11C2  29E3               	goto	l6727
  6254  11C3                     u7050:
  6255                           	
  6256  11C3                     l12131:	
  6257  11C3  160A  158A  2684   	fcall	_getFinalY
              160A  118A         
  6258  11C8  1283               	bcf	status, 5	;RP0=0, select bank0
  6259  11C9  1303               	bcf	status, 6	;RP1=0, select bank0
  6260  11CA  0665               	xorwf	(_yCoord),w	;volatile
  6261  11CB  1D03               	skipz
  6262  11CC  29CE               	goto	u7061
  6263  11CD  29CF               	goto	u7060
  6264  11CE                     u7061:
  6265  11CE  29E3               	goto	l6727
  6266  11CF                     u7060:
  6267                           	line	159
  6268                           	
  6269  11CF                     l12133:	
  6270                           ;main.c: 158: {
  6271                           ;main.c: 159: play_iCreate_song(2);
  6272  11CF  3002               	movlw	(02h)
  6273  11D0  160A  158A  26E7   	fcall	_play_iCreate_song
              160A  118A         
  6274                           	line	160
  6275                           	
  6276  11D5                     l12135:	
  6277                           ;main.c: 160: goingHome = 1;
  6278  11D5  16F0               	bsf	(_goingHome/8),(_goingHome)&7
  6279                           	line	161
  6280                           	
  6281  11D6                     l12137:	
  6282                           ;main.c: 161: lcd_set_cursor(0x06);
  6283  11D6  3006               	movlw	(06h)
  6284  11D7  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  6285                           	line	162
  6286                           	
  6287  11DC                     l12139:	
  6288                           ;main.c: 162: lcd_write_data('R');
  6289  11DC  3052               	movlw	(052h)
  6290  11DD  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  6291  11E2  29E3               	goto	l6727
  6292                           	line	163
  6293                           	
  6294  11E3                     l6726:	
  6295                           	line	164
  6296                           	
  6297  11E3                     l6727:	
  6298  11E3  0008               	return
  6299                           	opt stack 0
  6300                           GLOBAL	__end_of_checkForFinalDestination
  6301  11E4                     	__end_of_checkForFinalDestination:
  6302 ;; =============== function _checkForFinalDestination ends ============
  6303                           
  6304                           	signat	_checkForFinalDestination,88
  6305                           	global	_init
  6306                           psect	text2210,local,class=CODE,delta=2
  6307                           global __ptext2210
  6308  1286                     __ptext2210:
  6309                           
  6310 ;; *************** function _init *****************
  6311 ;; Defined at:
  6312 ;;		line 117 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;		None               void
  6319 ;; Registers used:
  6320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6326 ;;      Params:         0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0
  6329 ;;      Totals:         0       0       0       0       0
  6330 ;;Total ram usage:        0 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    5
  6333 ;; This function calls:
  6334 ;;		_init_adc
  6335 ;;		_lcd_init
  6336 ;;		_ser_init
  6337 ;;		_initIRobot
  6338 ;;		_initSongs
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           psect	text2210
  6344                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  6345                           	line	117
  6346                           	global	__size_of_init
  6347  003A                     	__size_of_init	equ	__end_of_init-_init
  6348                           	
  6349  1286                     _init:	
  6350                           	opt	stack 2
  6351                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6352                           	line	118
  6353                           	
  6354  1286                     l12095:	
  6355                           ;main.c: 118: start.pressed = 0;
  6356  1286  1683               	bsf	status, 5	;RP0=1, select bank1
  6357  1287  1303               	bcf	status, 6	;RP1=0, select bank1
  6358  1288  01C3               	clrf	(_start)^080h
  6359                           	line	119
  6360                           	
  6361  1289                     l12097:	
  6362                           ;main.c: 119: start.released = 1;
  6363  1289  01C4               	clrf	0+(_start)^080h+01h
  6364  128A  1403               	bsf	status,0
  6365  128B  0DC4               	rlf	0+(_start)^080h+01h,f
  6366                           	line	120
  6367                           	
  6368  128C                     l12099:	
  6369                           ;main.c: 120: eeprom.pressed = 0;
  6370  128C  01C0               	clrf	(_eeprom)^080h
  6371                           	line	121
  6372                           ;main.c: 121: eeprom.released = 1;
  6373  128D  01C1               	clrf	0+(_eeprom)^080h+01h
  6374  128E  1403               	bsf	status,0
  6375  128F  0DC1               	rlf	0+(_eeprom)^080h+01h,f
  6376                           	line	123
  6377                           	
  6378  1290                     l12101:	
  6379                           ;main.c: 123: init_adc();
  6380  1290  160A  158A  2720   	fcall	_init_adc
              160A  118A         
  6381                           	line	124
  6382                           	
  6383  1295                     l12103:	
  6384                           ;main.c: 124: lcd_init();
  6385  1295  160A  118A  2160   	fcall	_lcd_init
              160A  118A         
  6386                           	line	126
  6387                           	
  6388  129A                     l12105:	
  6389                           ;main.c: 126: TRISB = 0b00000011;
  6390  129A  3003               	movlw	(03h)
  6391  129B  1683               	bsf	status, 5	;RP0=1, select bank1
  6392  129C  1303               	bcf	status, 6	;RP1=0, select bank1
  6393  129D  0086               	movwf	(134)^080h	;volatile
  6394                           	line	129
  6395                           	
  6396  129E                     l12107:	
  6397                           ;main.c: 129: OPTION_REG = 0b00000100;
  6398  129E  3004               	movlw	(04h)
  6399  129F  0081               	movwf	(129)^080h	;volatile
  6400                           	line	131
  6401                           	
  6402  12A0                     l12109:	
  6403                           ;main.c: 131: TMR0IE = 1;
  6404  12A0  168B               	bsf	(93/8),(93)&7
  6405                           	line	132
  6406                           	
  6407  12A1                     l12111:	
  6408                           ;main.c: 132: SSPSTAT = 0b01000000;
  6409  12A1  3040               	movlw	(040h)
  6410  12A2  0094               	movwf	(148)^080h	;volatile
  6411                           	line	133
  6412                           	
  6413  12A3                     l12113:	
  6414                           ;main.c: 133: SSPCON = 0b00100010;
  6415  12A3  3022               	movlw	(022h)
  6416  12A4  1283               	bcf	status, 5	;RP0=0, select bank0
  6417  12A5  1303               	bcf	status, 6	;RP1=0, select bank0
  6418  12A6  0094               	movwf	(20)	;volatile
  6419                           	line	134
  6420                           	
  6421  12A7                     l12115:	
  6422                           ;main.c: 134: TRISC = 0b10010000;
  6423  12A7  3090               	movlw	(090h)
  6424  12A8  1683               	bsf	status, 5	;RP0=1, select bank1
  6425  12A9  1303               	bcf	status, 6	;RP1=0, select bank1
  6426  12AA  0087               	movwf	(135)^080h	;volatile
  6427                           	line	135
  6428                           	
  6429  12AB                     l12117:	
  6430                           ;main.c: 135: PORTC = 0b00000000;
  6431  12AB  1283               	bcf	status, 5	;RP0=0, select bank0
  6432  12AC  1303               	bcf	status, 6	;RP1=0, select bank0
  6433  12AD  0187               	clrf	(7)	;volatile
  6434                           	line	138
  6435                           	
  6436  12AE                     l12119:	
  6437                           ;main.c: 138: PEIE = 1;
  6438  12AE  170B               	bsf	(94/8),(94)&7
  6439                           	line	139
  6440                           	
  6441  12AF                     l12121:	
  6442                           ;main.c: 139: GIE = 1;
  6443  12AF  178B               	bsf	(95/8),(95)&7
  6444                           	line	141
  6445                           	
  6446  12B0                     l12123:	
  6447                           ;main.c: 141: ser_init();
  6448  12B0  160A  118A  20E7   	fcall	_ser_init
              160A  118A         
  6449                           	line	142
  6450                           	
  6451  12B5                     l12125:	
  6452                           ;main.c: 142: initIRobot();
  6453  12B5  160A  158A  274D   	fcall	_initIRobot
              160A  118A         
  6454                           	line	143
  6455                           	
  6456  12BA                     l12127:	
  6457                           ;main.c: 143: initSongs();
  6458  12BA  160A  118A  25DF   	fcall	_initSongs
              160A  118A         
  6459                           	line	144
  6460                           	
  6461  12BF                     l6720:	
  6462  12BF  0008               	return
  6463                           	opt stack 0
  6464                           GLOBAL	__end_of_init
  6465  12C0                     	__end_of_init:
  6466 ;; =============== function _init ends ============
  6467                           
  6468                           	signat	_init,88
  6469                           	global	_goReverse
  6470                           psect	text2211,local,class=CODE,delta=2
  6471                           global __ptext2211
  6472  154F                     __ptext2211:
  6473                           
  6474 ;; *************** function _goReverse *****************
  6475 ;; Defined at:
  6476 ;;		line 193 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;		None               void
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6490 ;;      Params:         0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0
  6492 ;;      Temps:          0       3       0       0       0
  6493 ;;      Totals:         0       3       0       0       0
  6494 ;;Total ram usage:        3 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    4
  6497 ;; This function calls:
  6498 ;;		_lcd_set_cursor
  6499 ;;		_lcd_write_data
  6500 ;;		_drive
  6501 ;;		_waitFor
  6502 ;; This function is called by:
  6503 ;;		_driveForDistance
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           psect	text2211
  6507                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  6508                           	line	193
  6509                           	global	__size_of_goReverse
  6510  0047                     	__size_of_goReverse	equ	__end_of_goReverse-_goReverse
  6511                           	
  6512  154F                     _goReverse:	
  6513                           	opt	stack 1
  6514                           ; Regs used in _goReverse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6515                           	line	194
  6516                           	
  6517  154F                     l12085:	
  6518                           ;drive.c: 194: lcd_set_cursor(0x0F);
  6519  154F  300F               	movlw	(0Fh)
  6520  1550  160A  158A  26AF   	fcall	_lcd_set_cursor
              160A  118A         
  6521                           	line	195
  6522                           ;drive.c: 195: lcd_write_data('!');
  6523  1555  3021               	movlw	(021h)
  6524  1556  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  6525                           	line	196
  6526                           	
  6527  155B                     l12087:	
  6528                           ;drive.c: 196: drive(255, 125, 128, 0);
  6529  155B  307D               	movlw	(07Dh)
  6530  155C  1283               	bcf	status, 5	;RP0=0, select bank0
  6531  155D  1303               	bcf	status, 6	;RP1=0, select bank0
  6532  155E  00B3               	movwf	(??_goReverse+0)+0
  6533  155F  0833               	movf	(??_goReverse+0)+0,w
  6534  1560  00AC               	movwf	(?_drive)
  6535  1561  3080               	movlw	(080h)
  6536  1562  00B4               	movwf	(??_goReverse+1)+0
  6537  1563  0834               	movf	(??_goReverse+1)+0,w
  6538  1564  00AD               	movwf	0+(?_drive)+01h
  6539  1565  01AE               	clrf	0+(?_drive)+02h
  6540  1566  30FF               	movlw	(0FFh)
  6541  1567  160A  118A  2217   	fcall	_drive
              160A  118A         
  6542                           	line	197
  6543                           	
  6544  156C                     l12089:	
  6545                           ;drive.c: 197: waitFor(156,254,12);
  6546  156C  30FE               	movlw	(0FEh)
  6547  156D  1283               	bcf	status, 5	;RP0=0, select bank0
  6548  156E  1303               	bcf	status, 6	;RP1=0, select bank0
  6549  156F  00B3               	movwf	(??_goReverse+0)+0
  6550  1570  0833               	movf	(??_goReverse+0)+0,w
  6551  1571  00AC               	movwf	(?_waitFor)
  6552  1572  300C               	movlw	(0Ch)
  6553  1573  00B4               	movwf	(??_goReverse+1)+0
  6554  1574  0834               	movf	(??_goReverse+1)+0,w
  6555  1575  00AD               	movwf	0+(?_waitFor)+01h
  6556  1576  309C               	movlw	(09Ch)
  6557  1577  160A  118A  210F   	fcall	_waitFor
              160A  118A         
  6558                           	line	198
  6559                           	
  6560  157C                     l12091:	
  6561                           ;drive.c: 198: drive(0, 0, 0, 0);
  6562  157C  1283               	bcf	status, 5	;RP0=0, select bank0
  6563  157D  1303               	bcf	status, 6	;RP1=0, select bank0
  6564  157E  01AC               	clrf	(?_drive)
  6565  157F  01AD               	clrf	0+(?_drive)+01h
  6566  1580  01AE               	clrf	0+(?_drive)+02h
  6567  1581  3000               	movlw	(0)
  6568  1582  160A  118A  2217   	fcall	_drive
              160A  118A         
  6569                           	line	199
  6570                           	
  6571  1587                     l12093:	
  6572                           ;drive.c: 199: _delay((unsigned long)((2000)*(20000000/4000.0)));
  6573                           	opt asmopt_off
  6574  1587  3033               movlw  51
  6575  1588  1283               	bcf	status, 5	;RP0=0, select bank0
  6576  1589  1303               	bcf	status, 6	;RP1=0, select bank0
  6577  158A  00B5               movwf	((??_goReverse+0)+0+2),f
  6578  158B  3089               movlw	137
  6579  158C  00B4               movwf	((??_goReverse+0)+0+1),f
  6580  158D  3000               	movlw	256
  6581  158E  00B3               movwf	((??_goReverse+0)+0),f
  6582  158F                     u7837:
  6583  158F  0BB3               	decfsz	((??_goReverse+0)+0),f
  6584  1590  2D8F               	goto	u7837
  6585  1591  0BB4               	decfsz	((??_goReverse+0)+0+1),f
  6586  1592  2D8F               	goto	u7837
  6587  1593  0BB5               	decfsz	((??_goReverse+0)+0+2),f
  6588  1594  2D8F               	goto	u7837
  6589                           opt asmopt_on
  6590                           
  6591                           	line	200
  6592                           	
  6593  1595                     l5863:	
  6594  1595  0008               	return
  6595                           	opt stack 0
  6596                           GLOBAL	__end_of_goReverse
  6597  1596                     	__end_of_goReverse:
  6598 ;; =============== function _goReverse ends ============
  6599                           
  6600                           	signat	_goReverse,88
  6601                           	global	_readIR
  6602                           psect	text2212,local,class=CODE,delta=2
  6603                           global __ptext2212
  6604  1052                     __ptext2212:
  6605                           
  6606 ;; *************** function _readIR *****************
  6607 ;; Defined at:
  6608 ;;		line 33 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\ir.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  cm              2   43[BANK0 ] int 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  2   41[BANK0 ] int 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6622 ;;      Params:         0       2       0       0       0
  6623 ;;      Locals:         0       2       0       0       0
  6624 ;;      Temps:          0       0       0       0       0
  6625 ;;      Totals:         0       4       0       0       0
  6626 ;;Total ram usage:        4 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    5
  6629 ;; This function calls:
  6630 ;;		_adc_read_channel
  6631 ;;		_convert
  6632 ;; This function is called by:
  6633 ;;		_frontWallCorrect
  6634 ;;		_goParallel
  6635 ;;		_findWall
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           psect	text2212
  6639                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ir.c"
  6640                           	line	33
  6641                           	global	__size_of_readIR
  6642  0023                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  6643                           	
  6644  1052                     _readIR:	
  6645                           	opt	stack 1
  6646                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6647                           	line	34
  6648                           	
  6649  1052                     l12079:	
  6650                           ;ir.c: 34: int cm = convert(adc_read_channel(0));
  6651  1052  3000               	movlw	(0)
  6652  1053  160A  118A  23B9   	fcall	_adc_read_channel
              160A  118A         
  6653  1058  1283               	bcf	status, 5	;RP0=0, select bank0
  6654  1059  1303               	bcf	status, 6	;RP1=0, select bank0
  6655  105A  0846               	movf	(1+(?_adc_read_channel)),w
  6656  105B  01C2               	clrf	(?_convert+1)
  6657  105C  07C2               	addwf	(?_convert+1)
  6658  105D  0845               	movf	(0+(?_adc_read_channel)),w
  6659  105E  01C1               	clrf	(?_convert)
  6660  105F  07C1               	addwf	(?_convert)
  6661                           
  6662  1060  120A  118A  2267   	fcall	_convert
              160A  118A         
  6663  1065  1283               	bcf	status, 5	;RP0=0, select bank0
  6664  1066  1303               	bcf	status, 6	;RP1=0, select bank0
  6665  1067  0842               	movf	(1+(?_convert)),w
  6666  1068  01CC               	clrf	(readIR@cm+1)
  6667  1069  07CC               	addwf	(readIR@cm+1)
  6668  106A  0841               	movf	(0+(?_convert)),w
  6669  106B  01CB               	clrf	(readIR@cm)
  6670  106C  07CB               	addwf	(readIR@cm)
  6671                           
  6672                           	line	35
  6673                           	
  6674  106D                     l12081:	
  6675                           ;ir.c: 35: return cm;
  6676  106D  084C               	movf	(readIR@cm+1),w
  6677  106E  01CA               	clrf	(?_readIR+1)
  6678  106F  07CA               	addwf	(?_readIR+1)
  6679  1070  084B               	movf	(readIR@cm),w
  6680  1071  01C9               	clrf	(?_readIR)
  6681  1072  07C9               	addwf	(?_readIR)
  6682                           
  6683  1073  2874               	goto	l5081
  6684                           	
  6685  1074                     l12083:	
  6686                           	line	36
  6687                           	
  6688  1074                     l5081:	
  6689  1074  0008               	return
  6690                           	opt stack 0
  6691                           GLOBAL	__end_of_readIR
  6692  1075                     	__end_of_readIR:
  6693 ;; =============== function _readIR ends ============
  6694                           
  6695                           	signat	_readIR,90
  6696                           	global	_findFinalDestination
  6697                           psect	text2213,local,class=CODE,delta=2
  6698                           global __ptext2213
  6699  0D73                     __ptext2213:
  6700                           
  6701 ;; *************** function _findFinalDestination *****************
  6702 ;; Defined at:
  6703 ;;		line 12 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\map.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  virtualWallX    1    wreg     unsigned char 
  6706 ;;  virtualWallY    1   14[BANK0 ] unsigned char 
  6707 ;;  robotOrienta    1   15[BANK0 ] enum E1088
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  virtualWallX    1   17[BANK0 ] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;		None               void
  6712 ;; Registers used:
  6713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6719 ;;      Params:         0       2       0       0       0
  6720 ;;      Locals:         0       1       0       0       0
  6721 ;;      Temps:          0       1       0       0       0
  6722 ;;      Totals:         0       4       0       0       0
  6723 ;;Total ram usage:        4 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    4
  6726 ;; This function calls:
  6727 ;;		_lcd_set_cursor
  6728 ;;		_lcd_write_1_digit_bcd
  6729 ;; This function is called by:
  6730 ;;		_driveForDistance
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           psect	text2213
  6734                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
  6735                           	line	12
  6736                           	global	__size_of_findFinalDestination
  6737  0132                     	__size_of_findFinalDestination	equ	__end_of_findFinalDestination-_findFinalDestination
  6738                           	
  6739  0D73                     _findFinalDestination:	
  6740                           	opt	stack 1
  6741                           ; Regs used in _findFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6742                           ;findFinalDestination@virtualWallX stored from wreg
  6743  0D73  1283               	bcf	status, 5	;RP0=0, select bank0
  6744  0D74  1303               	bcf	status, 6	;RP1=0, select bank0
  6745  0D75  00B1               	movwf	(findFinalDestination@virtualWallX)
  6746                           	line	13
  6747                           	
  6748  0D76                     l11999:	
  6749                           ;map.c: 13: switch (virtualWallX)
  6750  0D76  2E77               	goto	l12075
  6751                           	line	15
  6752                           ;map.c: 14: {
  6753                           ;map.c: 15: case 0:
  6754                           	
  6755  0D77                     l2849:	
  6756                           	line	16
  6757                           ;map.c: 16: switch (virtualWallY)
  6758  0D77  2D91               	goto	l12009
  6759                           	line	20
  6760                           ;map.c: 17: {
  6761                           ;map.c: 20: case 1:
  6762                           	
  6763  0D78                     l2851:	
  6764                           	line	21
  6765                           ;map.c: 21: finalX = 0;
  6766  0D78  01E3               	clrf	(_finalX)
  6767                           	line	22
  6768                           	
  6769  0D79                     l12001:	
  6770                           ;map.c: 22: finalY = 1;
  6771  0D79  1683               	bsf	status, 5	;RP0=1, select bank1
  6772  0D7A  1303               	bcf	status, 6	;RP1=0, select bank1
  6773  0D7B  01E5               	clrf	(_finalY)^080h
  6774  0D7C  1403               	bsf	status,0
  6775  0D7D  0DE5               	rlf	(_finalY)^080h,f
  6776                           	line	23
  6777                           ;map.c: 23: break;
  6778  0D7E  2E88               	goto	l12077
  6779                           	line	24
  6780                           ;map.c: 24: case 2:
  6781                           	
  6782  0D7F                     l2853:	
  6783                           	line	25
  6784                           ;map.c: 25: finalX = 0;
  6785  0D7F  01E3               	clrf	(_finalX)
  6786                           	line	26
  6787                           	
  6788  0D80                     l12003:	
  6789                           ;map.c: 26: finalY = 2;
  6790  0D80  3002               	movlw	(02h)
  6791  0D81  00B0               	movwf	(??_findFinalDestination+0)+0
  6792  0D82  0830               	movf	(??_findFinalDestination+0)+0,w
  6793  0D83  1683               	bsf	status, 5	;RP0=1, select bank1
  6794  0D84  1303               	bcf	status, 6	;RP1=0, select bank1
  6795  0D85  00E5               	movwf	(_finalY)^080h
  6796                           	line	27
  6797                           ;map.c: 27: break;
  6798  0D86  2E88               	goto	l12077
  6799                           	line	28
  6800                           ;map.c: 28: case 3:
  6801                           	
  6802  0D87                     l2854:	
  6803                           	line	29
  6804                           ;map.c: 29: finalX = 0;
  6805  0D87  01E3               	clrf	(_finalX)
  6806                           	line	30
  6807                           	
  6808  0D88                     l12005:	
  6809                           ;map.c: 30: finalY = 3;
  6810  0D88  3003               	movlw	(03h)
  6811  0D89  00B0               	movwf	(??_findFinalDestination+0)+0
  6812  0D8A  0830               	movf	(??_findFinalDestination+0)+0,w
  6813  0D8B  1683               	bsf	status, 5	;RP0=1, select bank1
  6814  0D8C  1303               	bcf	status, 6	;RP1=0, select bank1
  6815  0D8D  00E5               	movwf	(_finalY)^080h
  6816                           	line	31
  6817                           ;map.c: 31: break;
  6818  0D8E  2E88               	goto	l12077
  6819                           	line	32
  6820                           ;map.c: 32: default:
  6821                           	
  6822  0D8F                     l2855:	
  6823                           	line	33
  6824                           ;map.c: 33: break;
  6825  0D8F  2E88               	goto	l12077
  6826                           	line	34
  6827                           	
  6828  0D90                     l12007:	
  6829                           ;map.c: 34: }
  6830  0D90  2E88               	goto	l12077
  6831                           	line	16
  6832                           	
  6833  0D91                     l2850:	
  6834                           	
  6835  0D91                     l12009:	
  6836  0D91  1283               	bcf	status, 5	;RP0=0, select bank0
  6837  0D92  082E               	movf	(findFinalDestination@virtualWallY),w
  6838                           	; Switch size 1, requested type "space"
  6839                           ; Number of cases is 3, Range of values is 1 to 3
  6840                           ; switch strategies available:
  6841                           ; Name         Instructions Cycles
  6842                           ; simple_byte           10     6 (average)
  6843                           ; direct_byte           20    11 (fixed)
  6844                           ; jumptable            263     9 (fixed)
  6845                           ;	Chosen strategy is simple_byte
  6846                           
  6847                           	opt asmopt_off
  6848  0D93  3A01               	xorlw	1^0	; case 1
  6849  0D94  1903               	skipnz
  6850  0D95  2D78               	goto	l2851
  6851  0D96  3A03               	xorlw	2^1	; case 2
  6852  0D97  1903               	skipnz
  6853  0D98  2D7F               	goto	l2853
  6854  0D99  3A01               	xorlw	3^2	; case 3
  6855  0D9A  1903               	skipnz
  6856  0D9B  2D87               	goto	l2854
  6857  0D9C  2E88               	goto	l12077
  6858                           	opt asmopt_on
  6859                           
  6860                           	line	34
  6861                           	
  6862  0D9D                     l2852:	
  6863                           	line	35
  6864                           ;map.c: 35: break;
  6865  0D9D  2E88               	goto	l12077
  6866                           	line	37
  6867                           ;map.c: 37: case 1:
  6868                           	
  6869  0D9E                     l2857:	
  6870                           	line	38
  6871                           ;map.c: 38: switch (virtualWallY)
  6872  0D9E  2DC8               	goto	l12027
  6873                           	line	40
  6874                           ;map.c: 39: {
  6875                           ;map.c: 40: case 0:
  6876                           	
  6877  0D9F                     l2859:	
  6878                           	line	41
  6879                           	
  6880  0D9F                     l12011:	
  6881                           ;map.c: 41: finalX = 1;
  6882  0D9F  01E3               	clrf	(_finalX)
  6883  0DA0  1403               	bsf	status,0
  6884  0DA1  0DE3               	rlf	(_finalX),f
  6885                           	line	42
  6886                           	
  6887  0DA2                     l12013:	
  6888                           ;map.c: 42: finalY = 0;
  6889  0DA2  1683               	bsf	status, 5	;RP0=1, select bank1
  6890  0DA3  1303               	bcf	status, 6	;RP1=0, select bank1
  6891  0DA4  01E5               	clrf	(_finalY)^080h
  6892                           	line	43
  6893                           ;map.c: 43: break;
  6894  0DA5  2E88               	goto	l12077
  6895                           	line	44
  6896                           ;map.c: 44: case 1:
  6897                           	
  6898  0DA6                     l2861:	
  6899                           	line	45
  6900                           	
  6901  0DA6                     l12015:	
  6902                           ;map.c: 45: finalX = 1;
  6903  0DA6  1283               	bcf	status, 5	;RP0=0, select bank0
  6904  0DA7  01E3               	clrf	(_finalX)
  6905  0DA8  1403               	bsf	status,0
  6906  0DA9  0DE3               	rlf	(_finalX),f
  6907                           	line	46
  6908                           ;map.c: 46: finalY = 1;
  6909  0DAA  1683               	bsf	status, 5	;RP0=1, select bank1
  6910  0DAB  1303               	bcf	status, 6	;RP1=0, select bank1
  6911  0DAC  01E5               	clrf	(_finalY)^080h
  6912  0DAD  1403               	bsf	status,0
  6913  0DAE  0DE5               	rlf	(_finalY)^080h,f
  6914                           	line	47
  6915                           ;map.c: 47: break;
  6916  0DAF  2E88               	goto	l12077
  6917                           	line	48
  6918                           ;map.c: 48: case 2:
  6919                           	
  6920  0DB0                     l2862:	
  6921                           	line	49
  6922                           	
  6923  0DB0                     l12017:	
  6924                           ;map.c: 49: finalX = 1;
  6925  0DB0  1283               	bcf	status, 5	;RP0=0, select bank0
  6926  0DB1  01E3               	clrf	(_finalX)
  6927  0DB2  1403               	bsf	status,0
  6928  0DB3  0DE3               	rlf	(_finalX),f
  6929                           	line	50
  6930                           	
  6931  0DB4                     l12019:	
  6932                           ;map.c: 50: finalY = 2;
  6933  0DB4  3002               	movlw	(02h)
  6934  0DB5  00B0               	movwf	(??_findFinalDestination+0)+0
  6935  0DB6  0830               	movf	(??_findFinalDestination+0)+0,w
  6936  0DB7  1683               	bsf	status, 5	;RP0=1, select bank1
  6937  0DB8  1303               	bcf	status, 6	;RP1=0, select bank1
  6938  0DB9  00E5               	movwf	(_finalY)^080h
  6939                           	line	51
  6940                           ;map.c: 51: break;
  6941  0DBA  2E88               	goto	l12077
  6942                           	line	52
  6943                           ;map.c: 52: case 3:
  6944                           	
  6945  0DBB                     l2863:	
  6946                           	line	53
  6947                           	
  6948  0DBB                     l12021:	
  6949                           ;map.c: 53: finalX = 1;
  6950  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  6951  0DBC  01E3               	clrf	(_finalX)
  6952  0DBD  1403               	bsf	status,0
  6953  0DBE  0DE3               	rlf	(_finalX),f
  6954                           	line	54
  6955                           	
  6956  0DBF                     l12023:	
  6957                           ;map.c: 54: finalY = 3;
  6958  0DBF  3003               	movlw	(03h)
  6959  0DC0  00B0               	movwf	(??_findFinalDestination+0)+0
  6960  0DC1  0830               	movf	(??_findFinalDestination+0)+0,w
  6961  0DC2  1683               	bsf	status, 5	;RP0=1, select bank1
  6962  0DC3  1303               	bcf	status, 6	;RP1=0, select bank1
  6963  0DC4  00E5               	movwf	(_finalY)^080h
  6964                           	line	55
  6965                           ;map.c: 55: break;
  6966  0DC5  2E88               	goto	l12077
  6967                           	line	56
  6968                           ;map.c: 56: default:
  6969                           	
  6970  0DC6                     l2864:	
  6971                           	line	57
  6972                           ;map.c: 57: break;
  6973  0DC6  2E88               	goto	l12077
  6974                           	line	58
  6975                           	
  6976  0DC7                     l12025:	
  6977                           ;map.c: 58: }
  6978  0DC7  2E88               	goto	l12077
  6979                           	line	38
  6980                           	
  6981  0DC8                     l2858:	
  6982                           	
  6983  0DC8                     l12027:	
  6984  0DC8  1283               	bcf	status, 5	;RP0=0, select bank0
  6985  0DC9  082E               	movf	(findFinalDestination@virtualWallY),w
  6986                           	; Switch size 1, requested type "space"
  6987                           ; Number of cases is 4, Range of values is 0 to 3
  6988                           ; switch strategies available:
  6989                           ; Name         Instructions Cycles
  6990                           ; simple_byte           13     7 (average)
  6991                           ; direct_byte           20     8 (fixed)
  6992                           ; jumptable            260     6 (fixed)
  6993                           ; rangetable             8     6 (fixed)
  6994                           ; spacedrange           14     9 (fixed)
  6995                           ; locatedrange           4     3 (fixed)
  6996                           ;	Chosen strategy is simple_byte
  6997                           
  6998                           	opt asmopt_off
  6999  0DCA  3A00               	xorlw	0^0	; case 0
  7000  0DCB  1903               	skipnz
  7001  0DCC  2D9F               	goto	l12011
  7002  0DCD  3A01               	xorlw	1^0	; case 1
  7003  0DCE  1903               	skipnz
  7004  0DCF  2DA6               	goto	l12015
  7005  0DD0  3A03               	xorlw	2^1	; case 2
  7006  0DD1  1903               	skipnz
  7007  0DD2  2DB0               	goto	l12017
  7008  0DD3  3A01               	xorlw	3^2	; case 3
  7009  0DD4  1903               	skipnz
  7010  0DD5  2DBB               	goto	l12021
  7011  0DD6  2E88               	goto	l12077
  7012                           	opt asmopt_on
  7013                           
  7014                           	line	58
  7015                           	
  7016  0DD7                     l2860:	
  7017                           	line	59
  7018                           ;map.c: 59: break;
  7019  0DD7  2E88               	goto	l12077
  7020                           	line	61
  7021                           ;map.c: 61: case 2:
  7022                           	
  7023  0DD8                     l2865:	
  7024                           	line	62
  7025                           ;map.c: 62: switch (virtualWallY)
  7026  0DD8  2E09               	goto	l12045
  7027                           	line	64
  7028                           ;map.c: 63: {
  7029                           ;map.c: 64: case 0:
  7030                           	
  7031  0DD9                     l2867:	
  7032                           	line	65
  7033                           	
  7034  0DD9                     l12029:	
  7035                           ;map.c: 65: if(robotOrientation == WEST)
  7036  0DD9  08AF               	movf	(findFinalDestination@robotOrientation),f
  7037  0DDA  1D03               	skipz
  7038  0DDB  2DDD               	goto	u7021
  7039  0DDC  2DDE               	goto	u7020
  7040  0DDD                     u7021:
  7041  0DDD  2E88               	goto	l12077
  7042  0DDE                     u7020:
  7043                           	line	67
  7044                           	
  7045  0DDE                     l12031:	
  7046                           ;map.c: 66: {
  7047                           ;map.c: 67: finalX = 3;
  7048  0DDE  3003               	movlw	(03h)
  7049  0DDF  00B0               	movwf	(??_findFinalDestination+0)+0
  7050  0DE0  0830               	movf	(??_findFinalDestination+0)+0,w
  7051  0DE1  00E3               	movwf	(_finalX)
  7052                           	line	68
  7053                           	
  7054  0DE2                     l12033:	
  7055                           ;map.c: 68: finalY = 1;
  7056  0DE2  1683               	bsf	status, 5	;RP0=1, select bank1
  7057  0DE3  1303               	bcf	status, 6	;RP1=0, select bank1
  7058  0DE4  01E5               	clrf	(_finalY)^080h
  7059  0DE5  1403               	bsf	status,0
  7060  0DE6  0DE5               	rlf	(_finalY)^080h,f
  7061  0DE7  2E88               	goto	l12077
  7062                           	line	69
  7063                           	
  7064  0DE8                     l2868:	
  7065                           	line	70
  7066                           ;map.c: 69: }
  7067                           ;map.c: 70: break;
  7068  0DE8  2E88               	goto	l12077
  7069                           	line	71
  7070                           ;map.c: 71: case 1:
  7071                           	
  7072  0DE9                     l2870:	
  7073                           	line	72
  7074                           	
  7075  0DE9                     l12035:	
  7076                           ;map.c: 72: finalX = 2;
  7077  0DE9  3002               	movlw	(02h)
  7078  0DEA  1283               	bcf	status, 5	;RP0=0, select bank0
  7079  0DEB  00B0               	movwf	(??_findFinalDestination+0)+0
  7080  0DEC  0830               	movf	(??_findFinalDestination+0)+0,w
  7081  0DED  00E3               	movwf	(_finalX)
  7082                           	line	73
  7083                           	
  7084  0DEE                     l12037:	
  7085                           ;map.c: 73: finalY = 1;
  7086  0DEE  1683               	bsf	status, 5	;RP0=1, select bank1
  7087  0DEF  1303               	bcf	status, 6	;RP1=0, select bank1
  7088  0DF0  01E5               	clrf	(_finalY)^080h
  7089  0DF1  1403               	bsf	status,0
  7090  0DF2  0DE5               	rlf	(_finalY)^080h,f
  7091                           	line	74
  7092                           ;map.c: 74: break;
  7093  0DF3  2E88               	goto	l12077
  7094                           	line	75
  7095                           ;map.c: 75: case 2:
  7096                           	
  7097  0DF4                     l2871:	
  7098                           	line	76
  7099                           	
  7100  0DF4                     l12039:	
  7101                           ;map.c: 76: if(robotOrientation == EAST)
  7102  0DF4  1283               	bcf	status, 5	;RP0=0, select bank0
  7103  0DF5  082F               	movf	(findFinalDestination@robotOrientation),w
  7104  0DF6  3A02               	xorlw	02h
  7105  0DF7  1D03               	skipz
  7106  0DF8  2DFA               	goto	u7031
  7107  0DF9  2DFB               	goto	u7030
  7108  0DFA                     u7031:
  7109  0DFA  2E88               	goto	l12077
  7110  0DFB                     u7030:
  7111                           	line	78
  7112                           	
  7113  0DFB                     l12041:	
  7114                           ;map.c: 77: {
  7115                           ;map.c: 78: finalX = 2;
  7116  0DFB  3002               	movlw	(02h)
  7117  0DFC  00B0               	movwf	(??_findFinalDestination+0)+0
  7118  0DFD  0830               	movf	(??_findFinalDestination+0)+0,w
  7119  0DFE  00E3               	movwf	(_finalX)
  7120                           	line	79
  7121                           ;map.c: 79: finalY = 2;
  7122  0DFF  3002               	movlw	(02h)
  7123  0E00  00B0               	movwf	(??_findFinalDestination+0)+0
  7124  0E01  0830               	movf	(??_findFinalDestination+0)+0,w
  7125  0E02  1683               	bsf	status, 5	;RP0=1, select bank1
  7126  0E03  1303               	bcf	status, 6	;RP1=0, select bank1
  7127  0E04  00E5               	movwf	(_finalY)^080h
  7128  0E05  2E88               	goto	l12077
  7129                           	line	80
  7130                           	
  7131  0E06                     l2872:	
  7132                           	line	81
  7133                           ;map.c: 80: }
  7134                           ;map.c: 81: break;
  7135  0E06  2E88               	goto	l12077
  7136                           	line	84
  7137                           ;map.c: 84: default:
  7138                           	
  7139  0E07                     l2873:	
  7140                           	line	85
  7141                           ;map.c: 85: break;
  7142  0E07  2E88               	goto	l12077
  7143                           	line	86
  7144                           	
  7145  0E08                     l12043:	
  7146                           ;map.c: 86: }
  7147  0E08  2E88               	goto	l12077
  7148                           	line	62
  7149                           	
  7150  0E09                     l2866:	
  7151                           	
  7152  0E09                     l12045:	
  7153  0E09  1283               	bcf	status, 5	;RP0=0, select bank0
  7154  0E0A  082E               	movf	(findFinalDestination@virtualWallY),w
  7155                           	; Switch size 1, requested type "space"
  7156                           ; Number of cases is 3, Range of values is 0 to 2
  7157                           ; switch strategies available:
  7158                           ; Name         Instructions Cycles
  7159                           ; simple_byte           10     6 (average)
  7160                           ; direct_byte           17     8 (fixed)
  7161                           ; jumptable            260     6 (fixed)
  7162                           ; rangetable             7     6 (fixed)
  7163                           ; spacedrange           12     9 (fixed)
  7164                           ; locatedrange           3     3 (fixed)
  7165                           ;	Chosen strategy is simple_byte
  7166                           
  7167                           	opt asmopt_off
  7168  0E0B  3A00               	xorlw	0^0	; case 0
  7169  0E0C  1903               	skipnz
  7170  0E0D  2DD9               	goto	l12029
  7171  0E0E  3A01               	xorlw	1^0	; case 1
  7172  0E0F  1903               	skipnz
  7173  0E10  2DE9               	goto	l12035
  7174  0E11  3A03               	xorlw	2^1	; case 2
  7175  0E12  1903               	skipnz
  7176  0E13  2DF4               	goto	l12039
  7177  0E14  2E88               	goto	l12077
  7178                           	opt asmopt_on
  7179                           
  7180                           	line	86
  7181                           	
  7182  0E15                     l2869:	
  7183                           	line	87
  7184                           ;map.c: 87: break;
  7185  0E15  2E88               	goto	l12077
  7186                           	line	89
  7187                           ;map.c: 89: case 3:
  7188                           	
  7189  0E16                     l2874:	
  7190                           	line	90
  7191                           ;map.c: 90: switch (virtualWallY)
  7192  0E16  2E2D               	goto	l12055
  7193                           	line	92
  7194                           ;map.c: 91: {
  7195                           ;map.c: 92: case 0:
  7196                           	
  7197  0E17                     l2876:	
  7198                           	line	93
  7199                           	
  7200  0E17                     l12047:	
  7201                           ;map.c: 93: finalX = 3;
  7202  0E17  3003               	movlw	(03h)
  7203  0E18  00B0               	movwf	(??_findFinalDestination+0)+0
  7204  0E19  0830               	movf	(??_findFinalDestination+0)+0,w
  7205  0E1A  00E3               	movwf	(_finalX)
  7206                           	line	94
  7207                           	
  7208  0E1B                     l12049:	
  7209                           ;map.c: 94: finalY = 0;
  7210  0E1B  1683               	bsf	status, 5	;RP0=1, select bank1
  7211  0E1C  1303               	bcf	status, 6	;RP1=0, select bank1
  7212  0E1D  01E5               	clrf	(_finalY)^080h
  7213                           	line	95
  7214                           ;map.c: 95: break;
  7215  0E1E  2E88               	goto	l12077
  7216                           	line	98
  7217                           ;map.c: 98: case 2:
  7218                           	
  7219  0E1F                     l2878:	
  7220                           	line	99
  7221                           	
  7222  0E1F                     l12051:	
  7223                           ;map.c: 99: finalX = 3;
  7224  0E1F  3003               	movlw	(03h)
  7225  0E20  1283               	bcf	status, 5	;RP0=0, select bank0
  7226  0E21  00B0               	movwf	(??_findFinalDestination+0)+0
  7227  0E22  0830               	movf	(??_findFinalDestination+0)+0,w
  7228  0E23  00E3               	movwf	(_finalX)
  7229                           	line	100
  7230                           ;map.c: 100: finalY = 2;
  7231  0E24  3002               	movlw	(02h)
  7232  0E25  00B0               	movwf	(??_findFinalDestination+0)+0
  7233  0E26  0830               	movf	(??_findFinalDestination+0)+0,w
  7234  0E27  1683               	bsf	status, 5	;RP0=1, select bank1
  7235  0E28  1303               	bcf	status, 6	;RP1=0, select bank1
  7236  0E29  00E5               	movwf	(_finalY)^080h
  7237                           	line	101
  7238                           ;map.c: 101: break;
  7239  0E2A  2E88               	goto	l12077
  7240                           	line	104
  7241                           ;map.c: 104: default:
  7242                           	
  7243  0E2B                     l2879:	
  7244                           	line	105
  7245                           ;map.c: 105: break;
  7246  0E2B  2E88               	goto	l12077
  7247                           	line	106
  7248                           	
  7249  0E2C                     l12053:	
  7250                           ;map.c: 106: }
  7251  0E2C  2E88               	goto	l12077
  7252                           	line	90
  7253                           	
  7254  0E2D                     l2875:	
  7255                           	
  7256  0E2D                     l12055:	
  7257  0E2D  1283               	bcf	status, 5	;RP0=0, select bank0
  7258  0E2E  082E               	movf	(findFinalDestination@virtualWallY),w
  7259                           	; Switch size 1, requested type "space"
  7260                           ; Number of cases is 2, Range of values is 0 to 2
  7261                           ; switch strategies available:
  7262                           ; Name         Instructions Cycles
  7263                           ; simple_byte            7     4 (average)
  7264                           ; direct_byte           17     8 (fixed)
  7265                           ; jumptable            260     6 (fixed)
  7266                           ; rangetable             7     6 (fixed)
  7267                           ; spacedrange           12     9 (fixed)
  7268                           ; locatedrange           3     3 (fixed)
  7269                           ;	Chosen strategy is simple_byte
  7270                           
  7271                           	opt asmopt_off
  7272  0E2F  3A00               	xorlw	0^0	; case 0
  7273  0E30  1903               	skipnz
  7274  0E31  2E17               	goto	l12047
  7275  0E32  3A02               	xorlw	2^0	; case 2
  7276  0E33  1903               	skipnz
  7277  0E34  2E1F               	goto	l12051
  7278  0E35  2E88               	goto	l12077
  7279                           	opt asmopt_on
  7280                           
  7281                           	line	106
  7282                           	
  7283  0E36                     l2877:	
  7284                           	line	107
  7285                           ;map.c: 107: break;
  7286  0E36  2E88               	goto	l12077
  7287                           	line	109
  7288                           ;map.c: 109: case 4:
  7289                           	
  7290  0E37                     l2880:	
  7291                           	line	110
  7292                           ;map.c: 110: switch (virtualWallY)
  7293  0E37  2E65               	goto	l12071
  7294                           	line	112
  7295                           ;map.c: 111: {
  7296                           ;map.c: 112: case 0:
  7297                           	
  7298  0E38                     l2882:	
  7299                           	line	113
  7300                           	
  7301  0E38                     l12057:	
  7302                           ;map.c: 113: finalX = 4;
  7303  0E38  3004               	movlw	(04h)
  7304  0E39  00B0               	movwf	(??_findFinalDestination+0)+0
  7305  0E3A  0830               	movf	(??_findFinalDestination+0)+0,w
  7306  0E3B  00E3               	movwf	(_finalX)
  7307                           	line	114
  7308                           	
  7309  0E3C                     l12059:	
  7310                           ;map.c: 114: finalY = 0;
  7311  0E3C  1683               	bsf	status, 5	;RP0=1, select bank1
  7312  0E3D  1303               	bcf	status, 6	;RP1=0, select bank1
  7313  0E3E  01E5               	clrf	(_finalY)^080h
  7314                           	line	115
  7315                           ;map.c: 115: break;
  7316  0E3F  2E88               	goto	l12077
  7317                           	line	116
  7318                           ;map.c: 116: case 1:
  7319                           	
  7320  0E40                     l2884:	
  7321                           	line	117
  7322                           	
  7323  0E40                     l12061:	
  7324                           ;map.c: 117: finalX = 4;
  7325  0E40  3004               	movlw	(04h)
  7326  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  7327  0E42  00B0               	movwf	(??_findFinalDestination+0)+0
  7328  0E43  0830               	movf	(??_findFinalDestination+0)+0,w
  7329  0E44  00E3               	movwf	(_finalX)
  7330                           	line	118
  7331                           	
  7332  0E45                     l12063:	
  7333                           ;map.c: 118: finalY = 1;
  7334  0E45  1683               	bsf	status, 5	;RP0=1, select bank1
  7335  0E46  1303               	bcf	status, 6	;RP1=0, select bank1
  7336  0E47  01E5               	clrf	(_finalY)^080h
  7337  0E48  1403               	bsf	status,0
  7338  0E49  0DE5               	rlf	(_finalY)^080h,f
  7339                           	line	119
  7340                           ;map.c: 119: break;
  7341  0E4A  2E88               	goto	l12077
  7342                           	line	120
  7343                           ;map.c: 120: case 2:
  7344                           	
  7345  0E4B                     l2885:	
  7346                           	line	121
  7347                           	
  7348  0E4B                     l12065:	
  7349                           ;map.c: 121: if (robotOrientation == SOUTH)
  7350  0E4B  1283               	bcf	status, 5	;RP0=0, select bank0
  7351  0E4C  082F               	movf	(findFinalDestination@robotOrientation),w
  7352  0E4D  3A01               	xorlw	01h
  7353  0E4E  1D03               	skipz
  7354  0E4F  2E51               	goto	u7041
  7355  0E50  2E52               	goto	u7040
  7356  0E51                     u7041:
  7357  0E51  2E88               	goto	l12077
  7358  0E52                     u7040:
  7359                           	line	123
  7360                           	
  7361  0E52                     l12067:	
  7362                           ;map.c: 122: {
  7363                           ;map.c: 123: finalX = 4;
  7364  0E52  3004               	movlw	(04h)
  7365  0E53  00B0               	movwf	(??_findFinalDestination+0)+0
  7366  0E54  0830               	movf	(??_findFinalDestination+0)+0,w
  7367  0E55  00E3               	movwf	(_finalX)
  7368                           	line	124
  7369                           ;map.c: 124: finalY = 2;
  7370  0E56  3002               	movlw	(02h)
  7371  0E57  00B0               	movwf	(??_findFinalDestination+0)+0
  7372  0E58  0830               	movf	(??_findFinalDestination+0)+0,w
  7373  0E59  1683               	bsf	status, 5	;RP0=1, select bank1
  7374  0E5A  1303               	bcf	status, 6	;RP1=0, select bank1
  7375  0E5B  00E5               	movwf	(_finalY)^080h
  7376  0E5C  2E88               	goto	l12077
  7377                           	line	125
  7378                           	
  7379  0E5D                     l2886:	
  7380                           	line	126
  7381                           ;map.c: 125: }
  7382                           ;map.c: 126: break;
  7383  0E5D  2E88               	goto	l12077
  7384                           	line	127
  7385                           ;map.c: 127: case 3:
  7386                           	
  7387  0E5E                     l2887:	
  7388                           	line	128
  7389                           ;map.c: 128: finalX = 0;
  7390  0E5E  01E3               	clrf	(_finalX)
  7391                           	line	129
  7392                           ;map.c: 129: finalY = 0;
  7393  0E5F  1683               	bsf	status, 5	;RP0=1, select bank1
  7394  0E60  1303               	bcf	status, 6	;RP1=0, select bank1
  7395  0E61  01E5               	clrf	(_finalY)^080h
  7396                           	line	130
  7397                           ;map.c: 130: break;
  7398  0E62  2E88               	goto	l12077
  7399                           	line	131
  7400                           ;map.c: 131: default:
  7401                           	
  7402  0E63                     l2888:	
  7403                           	line	132
  7404                           ;map.c: 132: break;
  7405  0E63  2E88               	goto	l12077
  7406                           	line	133
  7407                           	
  7408  0E64                     l12069:	
  7409                           ;map.c: 133: }
  7410  0E64  2E88               	goto	l12077
  7411                           	line	110
  7412                           	
  7413  0E65                     l2881:	
  7414                           	
  7415  0E65                     l12071:	
  7416  0E65  1283               	bcf	status, 5	;RP0=0, select bank0
  7417  0E66  082E               	movf	(findFinalDestination@virtualWallY),w
  7418                           	; Switch size 1, requested type "space"
  7419                           ; Number of cases is 4, Range of values is 0 to 3
  7420                           ; switch strategies available:
  7421                           ; Name         Instructions Cycles
  7422                           ; simple_byte           13     7 (average)
  7423                           ; direct_byte           20     8 (fixed)
  7424                           ; jumptable            260     6 (fixed)
  7425                           ; rangetable             8     6 (fixed)
  7426                           ; spacedrange           14     9 (fixed)
  7427                           ; locatedrange           4     3 (fixed)
  7428                           ;	Chosen strategy is simple_byte
  7429                           
  7430                           	opt asmopt_off
  7431  0E67  3A00               	xorlw	0^0	; case 0
  7432  0E68  1903               	skipnz
  7433  0E69  2E38               	goto	l12057
  7434  0E6A  3A01               	xorlw	1^0	; case 1
  7435  0E6B  1903               	skipnz
  7436  0E6C  2E40               	goto	l12061
  7437  0E6D  3A03               	xorlw	2^1	; case 2
  7438  0E6E  1903               	skipnz
  7439  0E6F  2E4B               	goto	l12065
  7440  0E70  3A01               	xorlw	3^2	; case 3
  7441  0E71  1903               	skipnz
  7442  0E72  2E5E               	goto	l2887
  7443  0E73  2E88               	goto	l12077
  7444                           	opt asmopt_on
  7445                           
  7446                           	line	133
  7447                           	
  7448  0E74                     l2883:	
  7449                           	line	134
  7450                           ;map.c: 134: break;
  7451  0E74  2E88               	goto	l12077
  7452                           	line	136
  7453                           ;map.c: 136: default:
  7454                           	
  7455  0E75                     l2889:	
  7456                           	line	137
  7457                           ;map.c: 137: break;
  7458  0E75  2E88               	goto	l12077
  7459                           	line	138
  7460                           	
  7461  0E76                     l12073:	
  7462                           ;map.c: 138: }
  7463  0E76  2E88               	goto	l12077
  7464                           	line	13
  7465                           	
  7466  0E77                     l2848:	
  7467                           	
  7468  0E77                     l12075:	
  7469  0E77  0831               	movf	(findFinalDestination@virtualWallX),w
  7470                           	; Switch size 1, requested type "space"
  7471                           ; Number of cases is 5, Range of values is 0 to 4
  7472                           ; switch strategies available:
  7473                           ; Name         Instructions Cycles
  7474                           ; simple_byte           16     9 (average)
  7475                           ; direct_byte           23     8 (fixed)
  7476                           ; jumptable            260     6 (fixed)
  7477                           ; rangetable             9     6 (fixed)
  7478                           ; spacedrange           16     9 (fixed)
  7479                           ; locatedrange           5     3 (fixed)
  7480                           ;	Chosen strategy is simple_byte
  7481                           
  7482                           	opt asmopt_off
  7483  0E78  3A00               	xorlw	0^0	; case 0
  7484  0E79  1903               	skipnz
  7485  0E7A  2D91               	goto	l12009
  7486  0E7B  3A01               	xorlw	1^0	; case 1
  7487  0E7C  1903               	skipnz
  7488  0E7D  2DC8               	goto	l12027
  7489  0E7E  3A03               	xorlw	2^1	; case 2
  7490  0E7F  1903               	skipnz
  7491  0E80  2E09               	goto	l12045
  7492  0E81  3A01               	xorlw	3^2	; case 3
  7493  0E82  1903               	skipnz
  7494  0E83  2E2D               	goto	l12055
  7495  0E84  3A07               	xorlw	4^3	; case 4
  7496  0E85  1903               	skipnz
  7497  0E86  2E65               	goto	l12071
  7498  0E87  2E88               	goto	l12077
  7499                           	opt asmopt_on
  7500                           
  7501                           	line	138
  7502                           	
  7503  0E88                     l2856:	
  7504                           	line	140
  7505                           	
  7506  0E88                     l12077:	
  7507                           ;map.c: 140: lcd_set_cursor(0x47);
  7508  0E88  3047               	movlw	(047h)
  7509  0E89  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  158A         
  7510                           	line	141
  7511                           ;map.c: 141: lcd_write_1_digit_bcd(finalX);
  7512  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  7513  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  7514  0E90  0863               	movf	(_finalX),w
  7515  0E91  160A  158A  26BA   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  7516                           	line	142
  7517                           ;map.c: 142: lcd_set_cursor(0x49);
  7518  0E96  3049               	movlw	(049h)
  7519  0E97  160A  158A  26AF   	fcall	_lcd_set_cursor
              120A  158A         
  7520                           	line	143
  7521                           ;map.c: 143: lcd_write_1_digit_bcd(finalY);
  7522  0E9C  1683               	bsf	status, 5	;RP0=1, select bank1
  7523  0E9D  1303               	bcf	status, 6	;RP1=0, select bank1
  7524  0E9E  0865               	movf	(_finalY)^080h,w
  7525  0E9F  160A  158A  26BA   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  7526                           	line	144
  7527                           	
  7528  0EA4                     l2890:	
  7529  0EA4  0008               	return
  7530                           	opt stack 0
  7531                           GLOBAL	__end_of_findFinalDestination
  7532  0EA5                     	__end_of_findFinalDestination:
  7533 ;; =============== function _findFinalDestination ends ============
  7534                           
  7535                           	signat	_findFinalDestination,12408
  7536                           	global	_updateMapData
  7537                           psect	text2214,local,class=CODE,delta=2
  7538                           global __ptext2214
  7539  162B                     __ptext2214:
  7540                           
  7541 ;; *************** function _updateMapData *****************
  7542 ;; Defined at:
  7543 ;;		line 135 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\eeprom.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  virtualW        1    wreg     unsigned char 
  7546 ;;  virtualS        1   19[BANK0 ] unsigned char 
  7547 ;;  virtualE        1   20[BANK0 ] unsigned char 
  7548 ;;  virtualN        1   21[BANK0 ] unsigned char 
  7549 ;;  victim          1   22[BANK0 ] unsigned char 
  7550 ;;  move            1   23[BANK0 ] unsigned char 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  virtualW        1   26[BANK0 ] unsigned char 
  7553 ;;  completeData    1   27[BANK0 ] unsigned char 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;		None               void
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, status,0, pclath, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7563 ;;      Params:         0       5       0       0       0
  7564 ;;      Locals:         0       2       0       0       0
  7565 ;;      Temps:          0       2       0       0       0
  7566 ;;      Totals:         0       9       0       0       0
  7567 ;;Total ram usage:        9 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:    5
  7570 ;; This function calls:
  7571 ;;		_addNewData
  7572 ;; This function is called by:
  7573 ;;		_main
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           psect	text2214
  7577                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\eeprom.c"
  7578                           	line	135
  7579                           	global	__size_of_updateMapData
  7580  004D                     	__size_of_updateMapData	equ	__end_of_updateMapData-_updateMapData
  7581                           	
  7582  162B                     _updateMapData:	
  7583                           	opt	stack 2
  7584                           ; Regs used in _updateMapData: [wreg+status,2+status,0+pclath+cstack]
  7585                           ;updateMapData@virtualW stored from wreg
  7586  162B  1283               	bcf	status, 5	;RP0=0, select bank0
  7587  162C  1303               	bcf	status, 6	;RP1=0, select bank0
  7588  162D  00BA               	movwf	(updateMapData@virtualW)
  7589                           	line	136
  7590                           	
  7591  162E                     l11993:	
  7592                           ;eeprom.c: 136: char completeData = 0;
  7593  162E  01BB               	clrf	(updateMapData@completeData)
  7594                           	line	137
  7595                           	
  7596  162F                     l11995:	
  7597                           ;eeprom.c: 137: completeData |= virtualW;
  7598  162F  083A               	movf	(updateMapData@virtualW),w
  7599  1630  00B8               	movwf	(??_updateMapData+0)+0
  7600  1631  0838               	movf	(??_updateMapData+0)+0,w
  7601  1632  04BB               	iorwf	(updateMapData@completeData),f
  7602                           	line	138
  7603                           ;eeprom.c: 138: completeData |= virtualS << 1;
  7604  1633  0833               	movf	(updateMapData@virtualS),w
  7605  1634  00B8               	movwf	(??_updateMapData+0)+0
  7606  1635  0738               	addwf	(??_updateMapData+0)+0,w
  7607  1636  00B9               	movwf	(??_updateMapData+1)+0
  7608  1637  0839               	movf	(??_updateMapData+1)+0,w
  7609  1638  04BB               	iorwf	(updateMapData@completeData),f
  7610                           	line	139
  7611                           ;eeprom.c: 139: completeData |= virtualE << 2;
  7612  1639  0834               	movf	(updateMapData@virtualE),w
  7613  163A  00B8               	movwf	(??_updateMapData+0)+0
  7614  163B  3001               	movlw	(02h)-1
  7615  163C                     u6985:
  7616  163C  1003               	clrc
  7617  163D  0DB8               	rlf	(??_updateMapData+0)+0,f
  7618  163E  3EFF               	addlw	-1
  7619  163F  1D03               	skipz
  7620  1640  2E3C               	goto	u6985
  7621  1641  1003               	clrc
  7622  1642  0D38               	rlf	(??_updateMapData+0)+0,w
  7623  1643  00B9               	movwf	(??_updateMapData+1)+0
  7624  1644  0839               	movf	(??_updateMapData+1)+0,w
  7625  1645  04BB               	iorwf	(updateMapData@completeData),f
  7626                           	line	140
  7627                           ;eeprom.c: 140: completeData |= virtualN << 3;
  7628  1646  0835               	movf	(updateMapData@virtualN),w
  7629  1647  00B8               	movwf	(??_updateMapData+0)+0
  7630  1648  3002               	movlw	(03h)-1
  7631  1649                     u6995:
  7632  1649  1003               	clrc
  7633  164A  0DB8               	rlf	(??_updateMapData+0)+0,f
  7634  164B  3EFF               	addlw	-1
  7635  164C  1D03               	skipz
  7636  164D  2E49               	goto	u6995
  7637  164E  1003               	clrc
  7638  164F  0D38               	rlf	(??_updateMapData+0)+0,w
  7639  1650  00B9               	movwf	(??_updateMapData+1)+0
  7640  1651  0839               	movf	(??_updateMapData+1)+0,w
  7641  1652  04BB               	iorwf	(updateMapData@completeData),f
  7642                           	line	141
  7643                           ;eeprom.c: 141: completeData |= victim << 4;
  7644  1653  0836               	movf	(updateMapData@victim),w
  7645  1654  00B8               	movwf	(??_updateMapData+0)+0
  7646  1655  3003               	movlw	(04h)-1
  7647  1656                     u7005:
  7648  1656  1003               	clrc
  7649  1657  0DB8               	rlf	(??_updateMapData+0)+0,f
  7650  1658  3EFF               	addlw	-1
  7651  1659  1D03               	skipz
  7652  165A  2E56               	goto	u7005
  7653  165B  1003               	clrc
  7654  165C  0D38               	rlf	(??_updateMapData+0)+0,w
  7655  165D  00B9               	movwf	(??_updateMapData+1)+0
  7656  165E  0839               	movf	(??_updateMapData+1)+0,w
  7657  165F  04BB               	iorwf	(updateMapData@completeData),f
  7658                           	line	142
  7659                           ;eeprom.c: 142: completeData |= move << 5;
  7660  1660  0837               	movf	(updateMapData@move),w
  7661  1661  00B8               	movwf	(??_updateMapData+0)+0
  7662  1662  3004               	movlw	(05h)-1
  7663  1663                     u7015:
  7664  1663  1003               	clrc
  7665  1664  0DB8               	rlf	(??_updateMapData+0)+0,f
  7666  1665  3EFF               	addlw	-1
  7667  1666  1D03               	skipz
  7668  1667  2E63               	goto	u7015
  7669  1668  1003               	clrc
  7670  1669  0D38               	rlf	(??_updateMapData+0)+0,w
  7671  166A  00B9               	movwf	(??_updateMapData+1)+0
  7672  166B  0839               	movf	(??_updateMapData+1)+0,w
  7673  166C  04BB               	iorwf	(updateMapData@completeData),f
  7674                           	line	143
  7675                           ;eeprom.c: 143: completeData &= 0b01111111;
  7676  166D  307F               	movlw	(07Fh)
  7677  166E  00B8               	movwf	(??_updateMapData+0)+0
  7678  166F  0838               	movf	(??_updateMapData+0)+0,w
  7679  1670  05BB               	andwf	(updateMapData@completeData),f
  7680                           	line	144
  7681                           	
  7682  1671                     l11997:	
  7683                           ;eeprom.c: 144: addNewData(completeData);
  7684  1671  083B               	movf	(updateMapData@completeData),w
  7685  1672  160A  158A  27A1   	fcall	_addNewData
              160A  118A         
  7686                           	line	145
  7687                           	
  7688  1677                     l1430:	
  7689  1677  0008               	return
  7690                           	opt stack 0
  7691                           GLOBAL	__end_of_updateMapData
  7692  1678                     	__end_of_updateMapData:
  7693 ;; =============== function _updateMapData ends ============
  7694                           
  7695                           	signat	_updateMapData,24696
  7696                           	global	_checkIfHome
  7697                           psect	text2215,local,class=CODE,delta=2
  7698                           global __ptext2215
  7699  1FBF                     __ptext2215:
  7700                           
  7701 ;; *************** function _checkIfHome *****************
  7702 ;; Defined at:
  7703 ;;		line 321 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;		None
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;		None
  7708 ;; Return value:  Size  Location     Type
  7709 ;;		None               void
  7710 ;; Registers used:
  7711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7717 ;;      Params:         0       0       0       0       0
  7718 ;;      Locals:         0       0       0       0       0
  7719 ;;      Temps:          0       0       0       0       0
  7720 ;;      Totals:         0       0       0       0       0
  7721 ;;Total ram usage:        0 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    4
  7724 ;; This function calls:
  7725 ;;		_drive
  7726 ;;		_play_iCreate_song
  7727 ;; This function is called by:
  7728 ;;		_main
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           psect	text2215
  7732                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
  7733                           	line	321
  7734                           	global	__size_of_checkIfHome
  7735  0020                     	__size_of_checkIfHome	equ	__end_of_checkIfHome-_checkIfHome
  7736                           	
  7737  1FBF                     _checkIfHome:	
  7738                           	opt	stack 3
  7739                           ; Regs used in _checkIfHome: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7740                           	line	322
  7741                           	
  7742  1FBF                     l11985:	
  7743                           ;main.c: 322: if((xCoord == 1) && (yCoord == 3))
  7744  1FBF  1283               	bcf	status, 5	;RP0=0, select bank0
  7745  1FC0  1303               	bcf	status, 6	;RP1=0, select bank0
  7746  1FC1  0864               	movf	(_xCoord),w	;volatile
  7747  1FC2  3A01               	xorlw	01h
  7748  1FC3  1D03               	skipz
  7749  1FC4  2FC6               	goto	u6961
  7750  1FC5  2FC7               	goto	u6960
  7751  1FC6                     u6961:
  7752  1FC6  2FDE               	goto	l6784
  7753  1FC7                     u6960:
  7754                           	
  7755  1FC7                     l11987:	
  7756  1FC7  0865               	movf	(_yCoord),w	;volatile
  7757  1FC8  3A03               	xorlw	03h
  7758  1FC9  1D03               	skipz
  7759  1FCA  2FCC               	goto	u6971
  7760  1FCB  2FCD               	goto	u6970
  7761  1FCC                     u6971:
  7762  1FCC  2FDE               	goto	l6784
  7763  1FCD                     u6970:
  7764                           	line	324
  7765                           	
  7766  1FCD                     l11989:	
  7767                           ;main.c: 323: {
  7768                           ;main.c: 324: drive(0, 0, 0, 0);
  7769  1FCD  01AC               	clrf	(?_drive)
  7770  1FCE  01AD               	clrf	0+(?_drive)+01h
  7771  1FCF  01AE               	clrf	0+(?_drive)+02h
  7772  1FD0  3000               	movlw	(0)
  7773  1FD1  160A  118A  2217   	fcall	_drive
              160A  158A         
  7774                           	line	325
  7775                           ;main.c: 325: play_iCreate_song(4);
  7776  1FD6  3004               	movlw	(04h)
  7777  1FD7  160A  158A  26E7   	fcall	_play_iCreate_song
              160A  158A         
  7778                           	line	326
  7779                           	
  7780  1FDC                     l11991:	
  7781                           ;main.c: 326: home = 1;
  7782  1FDC  1770               	bsf	(_home/8),(_home)&7
  7783  1FDD  2FDE               	goto	l6784
  7784                           	line	327
  7785                           	
  7786  1FDE                     l6783:	
  7787                           	line	328
  7788                           	
  7789  1FDE                     l6784:	
  7790  1FDE  0008               	return
  7791                           	opt stack 0
  7792                           GLOBAL	__end_of_checkIfHome
  7793  1FDF                     	__end_of_checkIfHome:
  7794 ;; =============== function _checkIfHome ends ============
  7795                           
  7796                           	signat	_checkIfHome,88
  7797                           	global	_turnAround
  7798                           psect	text2216,local,class=CODE,delta=2
  7799                           global __ptext2216
  7800  1508                     __ptext2216:
  7801                           
  7802 ;; *************** function _turnAround *****************
  7803 ;; Defined at:
  7804 ;;		line 214 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;		None               void
  7811 ;; Registers used:
  7812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7818 ;;      Params:         0       0       0       0       0
  7819 ;;      Locals:         0       0       0       0       0
  7820 ;;      Temps:          0       3       0       0       0
  7821 ;;      Totals:         0       3       0       0       0
  7822 ;;Total ram usage:        3 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    4
  7825 ;; This function calls:
  7826 ;;		_drive
  7827 ;;		_waitFor
  7828 ;; This function is called by:
  7829 ;;		_goBackward
  7830 ;;		_main
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           psect	text2216
  7834                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  7835                           	line	214
  7836                           	global	__size_of_turnAround
  7837  0047                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  7838                           	
  7839  1508                     _turnAround:	
  7840                           	opt	stack 1
  7841                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7842                           	line	215
  7843                           	
  7844  1508                     l11979:	
  7845                           ;drive.c: 215: drive(0, 50, 0, 1);
  7846  1508  3032               	movlw	(032h)
  7847  1509  1283               	bcf	status, 5	;RP0=0, select bank0
  7848  150A  1303               	bcf	status, 6	;RP1=0, select bank0
  7849  150B  00B3               	movwf	(??_turnAround+0)+0
  7850  150C  0833               	movf	(??_turnAround+0)+0,w
  7851  150D  00AC               	movwf	(?_drive)
  7852  150E  01AD               	clrf	0+(?_drive)+01h
  7853  150F  01AE               	clrf	0+(?_drive)+02h
  7854  1510  1403               	bsf	status,0
  7855  1511  0DAE               	rlf	0+(?_drive)+02h,f
  7856  1512  3000               	movlw	(0)
  7857  1513  160A  118A  2217   	fcall	_drive
              160A  118A         
  7858                           	line	216
  7859                           ;drive.c: 216: waitFor(157,0,180);
  7860  1518  1283               	bcf	status, 5	;RP0=0, select bank0
  7861  1519  1303               	bcf	status, 6	;RP1=0, select bank0
  7862  151A  01AC               	clrf	(?_waitFor)
  7863  151B  30B4               	movlw	(0B4h)
  7864  151C  00B3               	movwf	(??_turnAround+0)+0
  7865  151D  0833               	movf	(??_turnAround+0)+0,w
  7866  151E  00AD               	movwf	0+(?_waitFor)+01h
  7867  151F  309D               	movlw	(09Dh)
  7868  1520  160A  118A  210F   	fcall	_waitFor
              160A  118A         
  7869                           	line	217
  7870                           ;drive.c: 217: drive(0, 0, 0, 0);
  7871  1525  1283               	bcf	status, 5	;RP0=0, select bank0
  7872  1526  1303               	bcf	status, 6	;RP1=0, select bank0
  7873  1527  01AC               	clrf	(?_drive)
  7874  1528  01AD               	clrf	0+(?_drive)+01h
  7875  1529  01AE               	clrf	0+(?_drive)+02h
  7876  152A  3000               	movlw	(0)
  7877  152B  160A  118A  2217   	fcall	_drive
              160A  118A         
  7878                           	line	218
  7879                           	
  7880  1530                     l11981:	
  7881                           ;drive.c: 218: _delay((unsigned long)((3000)*(20000000/4000.0)));
  7882                           	opt asmopt_off
  7883  1530  304C               movlw  76
  7884  1531  1283               	bcf	status, 5	;RP0=0, select bank0
  7885  1532  1303               	bcf	status, 6	;RP1=0, select bank0
  7886  1533  00B5               movwf	((??_turnAround+0)+0+2),f
  7887  1534  30CE               movlw	206
  7888  1535  00B4               movwf	((??_turnAround+0)+0+1),f
  7889  1536  3081               	movlw	129
  7890  1537  00B3               movwf	((??_turnAround+0)+0),f
  7891  1538                     u7847:
  7892  1538  0BB3               	decfsz	((??_turnAround+0)+0),f
  7893  1539  2D38               	goto	u7847
  7894  153A  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  7895  153B  2D38               	goto	u7847
  7896  153C  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  7897  153D  2D38               	goto	u7847
  7898  153E  0064               	clrwdt
  7899                           opt asmopt_on
  7900                           
  7901                           	line	219
  7902                           	
  7903  153F                     l11983:	
  7904                           ;drive.c: 219: _delay((unsigned long)((3000)*(20000000/4000.0)));
  7905                           	opt asmopt_off
  7906  153F  304C               movlw  76
  7907  1540  1283               	bcf	status, 5	;RP0=0, select bank0
  7908  1541  1303               	bcf	status, 6	;RP1=0, select bank0
  7909  1542  00B5               movwf	((??_turnAround+0)+0+2),f
  7910  1543  30CE               movlw	206
  7911  1544  00B4               movwf	((??_turnAround+0)+0+1),f
  7912  1545  3081               	movlw	129
  7913  1546  00B3               movwf	((??_turnAround+0)+0),f
  7914  1547                     u7857:
  7915  1547  0BB3               	decfsz	((??_turnAround+0)+0),f
  7916  1548  2D47               	goto	u7857
  7917  1549  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  7918  154A  2D47               	goto	u7857
  7919  154B  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  7920  154C  2D47               	goto	u7857
  7921  154D  0064               	clrwdt
  7922                           opt asmopt_on
  7923                           
  7924                           	line	220
  7925                           	
  7926  154E                     l5869:	
  7927  154E  0008               	return
  7928                           	opt stack 0
  7929                           GLOBAL	__end_of_turnAround
  7930  154F                     	__end_of_turnAround:
  7931 ;; =============== function _turnAround ends ============
  7932                           
  7933                           	signat	_turnAround,88
  7934                           	global	_turnLeft90
  7935                           psect	text2217,local,class=CODE,delta=2
  7936                           global __ptext2217
  7937  16C8                     __ptext2217:
  7938                           
  7939 ;; *************** function _turnLeft90 *****************
  7940 ;; Defined at:
  7941 ;;		line 223 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;		None               void
  7948 ;; Registers used:
  7949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7955 ;;      Params:         0       0       0       0       0
  7956 ;;      Locals:         0       0       0       0       0
  7957 ;;      Temps:          0       3       0       0       0
  7958 ;;      Totals:         0       3       0       0       0
  7959 ;;Total ram usage:        3 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    4
  7962 ;; This function calls:
  7963 ;;		_drive
  7964 ;;		_getCurrentX
  7965 ;;		_getCurrentY
  7966 ;;		_waitFor
  7967 ;; This function is called by:
  7968 ;;		_driveForDistance
  7969 ;;		_goLeft
  7970 ;;		_main
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           psect	text2217
  7974                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  7975                           	line	223
  7976                           	global	__size_of_turnLeft90
  7977  005A                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  7978                           	
  7979  16C8                     _turnLeft90:	
  7980                           	opt	stack 1
  7981                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7982                           	line	224
  7983                           	
  7984  16C8                     l11967:	
  7985                           ;drive.c: 224: drive(0, 50, 0, 1);
  7986  16C8  3032               	movlw	(032h)
  7987  16C9  1283               	bcf	status, 5	;RP0=0, select bank0
  7988  16CA  1303               	bcf	status, 6	;RP1=0, select bank0
  7989  16CB  00B3               	movwf	(??_turnLeft90+0)+0
  7990  16CC  0833               	movf	(??_turnLeft90+0)+0,w
  7991  16CD  00AC               	movwf	(?_drive)
  7992  16CE  01AD               	clrf	0+(?_drive)+01h
  7993  16CF  01AE               	clrf	0+(?_drive)+02h
  7994  16D0  1403               	bsf	status,0
  7995  16D1  0DAE               	rlf	0+(?_drive)+02h,f
  7996  16D2  3000               	movlw	(0)
  7997  16D3  160A  118A  2217   	fcall	_drive
              160A  118A         
  7998                           	line	225
  7999                           	
  8000  16D8                     l11969:	
  8001                           ;drive.c: 225: if( (getCurrentX() == 2 && getCurrentY() == 2))
  8002  16D8  160A  158A  2689   	fcall	_getCurrentX
              160A  118A         
  8003  16DD  3A02               	xorlw	02h
  8004  16DE  1D03               	skipz
  8005  16DF  2EE1               	goto	u6941
  8006  16E0  2EE2               	goto	u6940
  8007  16E1                     u6941:
  8008  16E1  2EFA               	goto	l11975
  8009  16E2                     u6940:
  8010                           	
  8011  16E2                     l11971:	
  8012  16E2  160A  158A  268E   	fcall	_getCurrentY
              160A  118A         
  8013  16E7  3A02               	xorlw	02h
  8014  16E8  1D03               	skipz
  8015  16E9  2EEB               	goto	u6951
  8016  16EA  2EEC               	goto	u6950
  8017  16EB                     u6951:
  8018  16EB  2EFA               	goto	l11975
  8019  16EC                     u6950:
  8020                           	line	227
  8021                           	
  8022  16EC                     l11973:	
  8023                           ;drive.c: 226: {
  8024                           ;drive.c: 227: waitFor(157,0,85);
  8025  16EC  1283               	bcf	status, 5	;RP0=0, select bank0
  8026  16ED  1303               	bcf	status, 6	;RP1=0, select bank0
  8027  16EE  01AC               	clrf	(?_waitFor)
  8028  16EF  3055               	movlw	(055h)
  8029  16F0  00B3               	movwf	(??_turnLeft90+0)+0
  8030  16F1  0833               	movf	(??_turnLeft90+0)+0,w
  8031  16F2  00AD               	movwf	0+(?_waitFor)+01h
  8032  16F3  309D               	movlw	(09Dh)
  8033  16F4  160A  118A  210F   	fcall	_waitFor
              160A  118A         
  8034                           	line	228
  8035                           ;drive.c: 228: }else
  8036  16F9  2F07               	goto	l5873
  8037                           	
  8038  16FA                     l5872:	
  8039                           	line	230
  8040                           	
  8041  16FA                     l11975:	
  8042                           ;drive.c: 229: {
  8043                           ;drive.c: 230: waitFor(157,0,90);
  8044  16FA  1283               	bcf	status, 5	;RP0=0, select bank0
  8045  16FB  1303               	bcf	status, 6	;RP1=0, select bank0
  8046  16FC  01AC               	clrf	(?_waitFor)
  8047  16FD  305A               	movlw	(05Ah)
  8048  16FE  00B3               	movwf	(??_turnLeft90+0)+0
  8049  16FF  0833               	movf	(??_turnLeft90+0)+0,w
  8050  1700  00AD               	movwf	0+(?_waitFor)+01h
  8051  1701  309D               	movlw	(09Dh)
  8052  1702  160A  118A  210F   	fcall	_waitFor
              160A  118A         
  8053                           	line	231
  8054                           	
  8055  1707                     l5873:	
  8056                           	line	232
  8057                           ;drive.c: 231: }
  8058                           ;drive.c: 232: drive(0, 0, 0, 0);
  8059  1707  1283               	bcf	status, 5	;RP0=0, select bank0
  8060  1708  1303               	bcf	status, 6	;RP1=0, select bank0
  8061  1709  01AC               	clrf	(?_drive)
  8062  170A  01AD               	clrf	0+(?_drive)+01h
  8063  170B  01AE               	clrf	0+(?_drive)+02h
  8064  170C  3000               	movlw	(0)
  8065  170D  160A  118A  2217   	fcall	_drive
              160A  118A         
  8066                           	line	233
  8067                           	
  8068  1712                     l11977:	
  8069                           ;drive.c: 233: _delay((unsigned long)((3000)*(20000000/4000.0)));
  8070                           	opt asmopt_off
  8071  1712  304C               movlw  76
  8072  1713  1283               	bcf	status, 5	;RP0=0, select bank0
  8073  1714  1303               	bcf	status, 6	;RP1=0, select bank0
  8074  1715  00B5               movwf	((??_turnLeft90+0)+0+2),f
  8075  1716  30CE               movlw	206
  8076  1717  00B4               movwf	((??_turnLeft90+0)+0+1),f
  8077  1718  3081               	movlw	129
  8078  1719  00B3               movwf	((??_turnLeft90+0)+0),f
  8079  171A                     u7867:
  8080  171A  0BB3               	decfsz	((??_turnLeft90+0)+0),f
  8081  171B  2F1A               	goto	u7867
  8082  171C  0BB4               	decfsz	((??_turnLeft90+0)+0+1),f
  8083  171D  2F1A               	goto	u7867
  8084  171E  0BB5               	decfsz	((??_turnLeft90+0)+0+2),f
  8085  171F  2F1A               	goto	u7867
  8086  1720  0064               	clrwdt
  8087                           opt asmopt_on
  8088                           
  8089                           	line	234
  8090                           	
  8091  1721                     l5874:	
  8092  1721  0008               	return
  8093                           	opt stack 0
  8094                           GLOBAL	__end_of_turnLeft90
  8095  1722                     	__end_of_turnLeft90:
  8096 ;; =============== function _turnLeft90 ends ============
  8097                           
  8098                           	signat	_turnLeft90,88
  8099                           	global	_turnRight90
  8100                           psect	text2218,local,class=CODE,delta=2
  8101                           global __ptext2218
  8102  137A                     __ptext2218:
  8103                           
  8104 ;; *************** function _turnRight90 *****************
  8105 ;; Defined at:
  8106 ;;		line 237 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;		None               void
  8113 ;; Registers used:
  8114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8120 ;;      Params:         0       0       0       0       0
  8121 ;;      Locals:         0       0       0       0       0
  8122 ;;      Temps:          0       3       0       0       0
  8123 ;;      Totals:         0       3       0       0       0
  8124 ;;Total ram usage:        3 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; Hardware stack levels required when called:    4
  8127 ;; This function calls:
  8128 ;;		_drive
  8129 ;;		_waitFor
  8130 ;; This function is called by:
  8131 ;;		_driveForDistance
  8132 ;;		_goRight
  8133 ;;		_main
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           psect	text2218
  8137                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
  8138                           	line	237
  8139                           	global	__size_of_turnRight90
  8140  003F                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  8141                           	
  8142  137A                     _turnRight90:	
  8143                           	opt	stack 1
  8144                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8145                           	line	238
  8146                           	
  8147  137A                     l11963:	
  8148                           ;drive.c: 238: drive(0, 50, 255, 255);
  8149  137A  3032               	movlw	(032h)
  8150  137B  1283               	bcf	status, 5	;RP0=0, select bank0
  8151  137C  1303               	bcf	status, 6	;RP1=0, select bank0
  8152  137D  00B3               	movwf	(??_turnRight90+0)+0
  8153  137E  0833               	movf	(??_turnRight90+0)+0,w
  8154  137F  00AC               	movwf	(?_drive)
  8155  1380  30FF               	movlw	(0FFh)
  8156  1381  00B4               	movwf	(??_turnRight90+1)+0
  8157  1382  0834               	movf	(??_turnRight90+1)+0,w
  8158  1383  00AD               	movwf	0+(?_drive)+01h
  8159  1384  30FF               	movlw	(0FFh)
  8160  1385  00B5               	movwf	(??_turnRight90+2)+0
  8161  1386  0835               	movf	(??_turnRight90+2)+0,w
  8162  1387  00AE               	movwf	0+(?_drive)+02h
  8163  1388  3000               	movlw	(0)
  8164  1389  160A  118A  2217   	fcall	_drive
              160A  118A         
  8165                           	line	239
  8166                           ;drive.c: 239: waitFor(157,255,174);
  8167  138E  30FF               	movlw	(0FFh)
  8168  138F  1283               	bcf	status, 5	;RP0=0, select bank0
  8169  1390  1303               	bcf	status, 6	;RP1=0, select bank0
  8170  1391  00B3               	movwf	(??_turnRight90+0)+0
  8171  1392  0833               	movf	(??_turnRight90+0)+0,w
  8172  1393  00AC               	movwf	(?_waitFor)
  8173  1394  30AE               	movlw	(0AEh)
  8174  1395  00B4               	movwf	(??_turnRight90+1)+0
  8175  1396  0834               	movf	(??_turnRight90+1)+0,w
  8176  1397  00AD               	movwf	0+(?_waitFor)+01h
  8177  1398  309D               	movlw	(09Dh)
  8178  1399  160A  118A  210F   	fcall	_waitFor
              160A  118A         
  8179                           	line	240
  8180                           ;drive.c: 240: drive(0, 0, 0, 0);
  8181  139E  1283               	bcf	status, 5	;RP0=0, select bank0
  8182  139F  1303               	bcf	status, 6	;RP1=0, select bank0
  8183  13A0  01AC               	clrf	(?_drive)
  8184  13A1  01AD               	clrf	0+(?_drive)+01h
  8185  13A2  01AE               	clrf	0+(?_drive)+02h
  8186  13A3  3000               	movlw	(0)
  8187  13A4  160A  118A  2217   	fcall	_drive
              160A  118A         
  8188                           	line	241
  8189                           	
  8190  13A9                     l11965:	
  8191                           ;drive.c: 241: _delay((unsigned long)((3000)*(20000000/4000.0)));
  8192                           	opt asmopt_off
  8193  13A9  304C               movlw  76
  8194  13AA  1283               	bcf	status, 5	;RP0=0, select bank0
  8195  13AB  1303               	bcf	status, 6	;RP1=0, select bank0
  8196  13AC  00B5               movwf	((??_turnRight90+0)+0+2),f
  8197  13AD  30CE               movlw	206
  8198  13AE  00B4               movwf	((??_turnRight90+0)+0+1),f
  8199  13AF  3081               	movlw	129
  8200  13B0  00B3               movwf	((??_turnRight90+0)+0),f
  8201  13B1                     u7877:
  8202  13B1  0BB3               	decfsz	((??_turnRight90+0)+0),f
  8203  13B2  2BB1               	goto	u7877
  8204  13B3  0BB4               	decfsz	((??_turnRight90+0)+0+1),f
  8205  13B4  2BB1               	goto	u7877
  8206  13B5  0BB5               	decfsz	((??_turnRight90+0)+0+2),f
  8207  13B6  2BB1               	goto	u7877
  8208  13B7  0064               	clrwdt
  8209                           opt asmopt_on
  8210                           
  8211                           	line	242
  8212                           	
  8213  13B8                     l5877:	
  8214  13B8  0008               	return
  8215                           	opt stack 0
  8216                           GLOBAL	__end_of_turnRight90
  8217  13B9                     	__end_of_turnRight90:
  8218 ;; =============== function _turnRight90 ends ============
  8219                           
  8220                           	signat	_turnRight90,88
  8221                           	global	_initSongs
  8222                           psect	text2219,local,class=CODE,delta=2
  8223                           global __ptext2219
  8224  15DF                     __ptext2219:
  8225                           
  8226 ;; *************** function _initSongs *****************
  8227 ;; Defined at:
  8228 ;;		line 31 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\songs.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;		None               void
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8242 ;;      Params:         0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0
  8245 ;;      Totals:         0       0       0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    4
  8249 ;; This function calls:
  8250 ;;		_ser_putArr
  8251 ;; This function is called by:
  8252 ;;		_init
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           psect	text2219
  8256                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
  8257                           	line	31
  8258                           	global	__size_of_initSongs
  8259  004C                     	__size_of_initSongs	equ	__end_of_initSongs-_initSongs
  8260                           	
  8261  15DF                     _initSongs:	
  8262                           	opt	stack 2
  8263                           ; Regs used in _initSongs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8264                           	line	32
  8265                           	
  8266  15DF                     l11961:	
  8267                           ;songs.c: 32: ser_putArr(finalCountdown, 27);
  8268  15DF  3090               	movlw	(_finalCountdown&0ffh)
  8269  15E0  1283               	bcf	status, 5	;RP0=0, select bank0
  8270  15E1  1303               	bcf	status, 6	;RP1=0, select bank0
  8271  15E2  00AC               	movwf	(?_ser_putArr)
  8272  15E3  3001               	movlw	(0x3/2)
  8273  15E4  00AD               	movwf	(?_ser_putArr+1)
  8274  15E5  301B               	movlw	low(01Bh)
  8275  15E6  00AE               	movwf	0+(?_ser_putArr)+02h
  8276  15E7  3000               	movlw	high(01Bh)
  8277  15E8  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  8278  15E9  160A  118A  224D   	fcall	_ser_putArr
              160A  118A         
  8279                           	line	33
  8280                           ;songs.c: 33: ser_putArr(superMarioBros, 25);
  8281  15EE  30AB               	movlw	(_superMarioBros&0ffh)
  8282  15EF  1283               	bcf	status, 5	;RP0=0, select bank0
  8283  15F0  1303               	bcf	status, 6	;RP1=0, select bank0
  8284  15F1  00AC               	movwf	(?_ser_putArr)
  8285  15F2  3001               	movlw	(0x3/2)
  8286  15F3  00AD               	movwf	(?_ser_putArr+1)
  8287  15F4  3019               	movlw	low(019h)
  8288  15F5  00AE               	movwf	0+(?_ser_putArr)+02h
  8289  15F6  3000               	movlw	high(019h)
  8290  15F7  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  8291  15F8  160A  118A  224D   	fcall	_ser_putArr
              160A  118A         
  8292                           	line	34
  8293                           ;songs.c: 34: ser_putArr(lookingForU2, 29);
  8294  15FD  3010               	movlw	(_lookingForU2&0ffh)
  8295  15FE  1283               	bcf	status, 5	;RP0=0, select bank0
  8296  15FF  1303               	bcf	status, 6	;RP1=0, select bank0
  8297  1600  00AC               	movwf	(?_ser_putArr)
  8298  1601  3001               	movlw	(0x2/2)
  8299  1602  00AD               	movwf	(?_ser_putArr+1)
  8300  1603  301D               	movlw	low(01Dh)
  8301  1604  00AE               	movwf	0+(?_ser_putArr)+02h
  8302  1605  3000               	movlw	high(01Dh)
  8303  1606  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  8304  1607  160A  118A  224D   	fcall	_ser_putArr
              160A  118A         
  8305                           	line	35
  8306                           ;songs.c: 35: ser_putArr(champions, 21);
  8307  160C  30C4               	movlw	(_champions&0ffh)
  8308  160D  1283               	bcf	status, 5	;RP0=0, select bank0
  8309  160E  1303               	bcf	status, 6	;RP1=0, select bank0
  8310  160F  00AC               	movwf	(?_ser_putArr)
  8311  1610  3001               	movlw	(0x3/2)
  8312  1611  00AD               	movwf	(?_ser_putArr+1)
  8313  1612  3015               	movlw	low(015h)
  8314  1613  00AE               	movwf	0+(?_ser_putArr)+02h
  8315  1614  3000               	movlw	high(015h)
  8316  1615  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  8317  1616  160A  118A  224D   	fcall	_ser_putArr
              160A  118A         
  8318                           	line	36
  8319                           ;songs.c: 36: ser_putArr(beep, 5);
  8320  161B  30E7               	movlw	(_beep&0ffh)
  8321  161C  1283               	bcf	status, 5	;RP0=0, select bank0
  8322  161D  1303               	bcf	status, 6	;RP1=0, select bank0
  8323  161E  00AC               	movwf	(?_ser_putArr)
  8324  161F  3000               	movlw	(0x1/2)
  8325  1620  00AD               	movwf	(?_ser_putArr+1)
  8326  1621  3005               	movlw	low(05h)
  8327  1622  00AE               	movwf	0+(?_ser_putArr)+02h
  8328  1623  3000               	movlw	high(05h)
  8329  1624  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  8330  1625  160A  118A  224D   	fcall	_ser_putArr
              160A  118A         
  8331                           	line	37
  8332                           	
  8333  162A                     l4375:	
  8334  162A  0008               	return
  8335                           	opt stack 0
  8336                           GLOBAL	__end_of_initSongs
  8337  162B                     	__end_of_initSongs:
  8338 ;; =============== function _initSongs ends ============
  8339                           
  8340                           	signat	_initSongs,88
  8341                           	global	_lcd_init
  8342                           psect	text2220,local,class=CODE,delta=2
  8343                           global __ptext2220
  8344  1160                     __ptext2220:
  8345                           
  8346 ;; *************** function _lcd_init *****************
  8347 ;; Defined at:
  8348 ;;		line 78 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\lcd.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;		None               void
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, pclath, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8362 ;;      Params:         0       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0
  8365 ;;      Totals:         0       0       0       0       0
  8366 ;;Total ram usage:        0 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    3
  8369 ;; This function calls:
  8370 ;;		_lcd_write_control
  8371 ;; This function is called by:
  8372 ;;		_init
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           psect	text2220
  8376                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\lcd.c"
  8377                           	line	78
  8378                           	global	__size_of_lcd_init
  8379  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  8380                           	
  8381  1160                     _lcd_init:	
  8382                           	opt	stack 3
  8383                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  8384                           	line	82
  8385                           	
  8386  1160                     l11941:	
  8387                           ;lcd.c: 82: ADCON1 = 0b00000010;
  8388  1160  3002               	movlw	(02h)
  8389  1161  1683               	bsf	status, 5	;RP0=1, select bank1
  8390  1162  1303               	bcf	status, 6	;RP1=0, select bank1
  8391  1163  009F               	movwf	(159)^080h	;volatile
  8392                           	line	85
  8393                           	
  8394  1164                     l11943:	
  8395                           ;lcd.c: 85: PORTD = 0;
  8396  1164  1283               	bcf	status, 5	;RP0=0, select bank0
  8397  1165  1303               	bcf	status, 6	;RP1=0, select bank0
  8398  1166  0188               	clrf	(8)	;volatile
  8399                           	line	86
  8400                           	
  8401  1167                     l11945:	
  8402                           ;lcd.c: 86: PORTE = 0;
  8403  1167  0189               	clrf	(9)	;volatile
  8404                           	line	88
  8405                           	
  8406  1168                     l11947:	
  8407                           ;lcd.c: 88: TRISD = 0b00000000;
  8408  1168  1683               	bsf	status, 5	;RP0=1, select bank1
  8409  1169  1303               	bcf	status, 6	;RP1=0, select bank1
  8410  116A  0188               	clrf	(136)^080h	;volatile
  8411                           	line	89
  8412                           	
  8413  116B                     l11949:	
  8414                           ;lcd.c: 89: TRISE = 0b00000000;
  8415  116B  0189               	clrf	(137)^080h	;volatile
  8416                           	line	92
  8417                           	
  8418  116C                     l11951:	
  8419                           ;lcd.c: 92: lcd_write_control(0b00000001);
  8420  116C  3001               	movlw	(01h)
  8421  116D  160A  158A  270C   	fcall	_lcd_write_control
              160A  118A         
  8422                           	line	93
  8423                           	
  8424  1172                     l11953:	
  8425                           ;lcd.c: 93: lcd_write_control(0b00111000);
  8426  1172  3038               	movlw	(038h)
  8427  1173  160A  158A  270C   	fcall	_lcd_write_control
              160A  118A         
  8428                           	line	94
  8429                           	
  8430  1178                     l11955:	
  8431                           ;lcd.c: 94: lcd_write_control(0b00001100);
  8432  1178  300C               	movlw	(0Ch)
  8433  1179  160A  158A  270C   	fcall	_lcd_write_control
              160A  118A         
  8434                           	line	95
  8435                           	
  8436  117E                     l11957:	
  8437                           ;lcd.c: 95: lcd_write_control(0b00000110);
  8438  117E  3006               	movlw	(06h)
  8439  117F  160A  158A  270C   	fcall	_lcd_write_control
              160A  118A         
  8440                           	line	96
  8441                           	
  8442  1184                     l11959:	
  8443                           ;lcd.c: 96: lcd_write_control(0b00000010);
  8444  1184  3002               	movlw	(02h)
  8445  1185  160A  158A  270C   	fcall	_lcd_write_control
              160A  118A         
  8446                           	line	98
  8447                           	
  8448  118A                     l2153:	
  8449  118A  0008               	return
  8450                           	opt stack 0
  8451                           GLOBAL	__end_of_lcd_init
  8452  118B                     	__end_of_lcd_init:
  8453 ;; =============== function _lcd_init ends ============
  8454                           
  8455                           	signat	_lcd_init,88
  8456                           	global	_lcd_write_1_digit_bcd
  8457                           psect	text2221,local,class=CODE,delta=2
  8458                           global __ptext2221
  8459  1EBA                     __ptext2221:
  8460                           
  8461 ;; *************** function _lcd_write_1_digit_bcd *****************
  8462 ;; Defined at:
  8463 ;;		line 44 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\lcd.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  data            1    wreg     unsigned char 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  data            1   13[BANK0 ] unsigned char 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;		None               void
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0, pclath, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8477 ;;      Params:         0       0       0       0       0
  8478 ;;      Locals:         0       1       0       0       0
  8479 ;;      Temps:          0       0       0       0       0
  8480 ;;      Totals:         0       1       0       0       0
  8481 ;;Total ram usage:        1 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    3
  8484 ;; This function calls:
  8485 ;;		_lcd_write_data
  8486 ;; This function is called by:
  8487 ;;		_findFinalDestination
  8488 ;;		_lookForVictim
  8489 ;;		_updateLocation
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           psect	text2221
  8493                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\lcd.c"
  8494                           	line	44
  8495                           	global	__size_of_lcd_write_1_digit_bcd
  8496  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  8497                           	
  8498  1EBA                     _lcd_write_1_digit_bcd:	
  8499                           	opt	stack 3
  8500                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  8501                           ;lcd_write_1_digit_bcd@data stored from wreg
  8502  1EBA  1283               	bcf	status, 5	;RP0=0, select bank0
  8503  1EBB  1303               	bcf	status, 6	;RP1=0, select bank0
  8504  1EBC  00AD               	movwf	(lcd_write_1_digit_bcd@data)
  8505                           	line	45
  8506                           	
  8507  1EBD                     l11939:	
  8508                           ;lcd.c: 45: lcd_write_data(data + 48);
  8509  1EBD  082D               	movf	(lcd_write_1_digit_bcd@data),w
  8510  1EBE  3E30               	addlw	030h
  8511  1EBF  160A  158A  26F9   	fcall	_lcd_write_data
              160A  158A         
  8512                           	line	46
  8513                           	
  8514  1EC4                     l2141:	
  8515  1EC4  0008               	return
  8516                           	opt stack 0
  8517                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  8518  1EC5                     	__end_of_lcd_write_1_digit_bcd:
  8519 ;; =============== function _lcd_write_1_digit_bcd ends ============
  8520                           
  8521                           	signat	_lcd_write_1_digit_bcd,4216
  8522                           	global	_lcd_set_cursor
  8523                           psect	text2222,local,class=CODE,delta=2
  8524                           global __ptext2222
  8525  1EAF                     __ptext2222:
  8526                           
  8527 ;; *************** function _lcd_set_cursor *****************
  8528 ;; Defined at:
  8529 ;;		line 32 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\lcd.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;  address         1    wreg     unsigned char 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;  address         1   13[BANK0 ] unsigned char 
  8534 ;; Return value:  Size  Location     Type
  8535 ;;		None               void
  8536 ;; Registers used:
  8537 ;;		wreg, status,2, status,0, pclath, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8543 ;;      Params:         0       0       0       0       0
  8544 ;;      Locals:         0       1       0       0       0
  8545 ;;      Temps:          0       0       0       0       0
  8546 ;;      Totals:         0       1       0       0       0
  8547 ;;Total ram usage:        1 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:    3
  8550 ;; This function calls:
  8551 ;;		_lcd_write_control
  8552 ;; This function is called by:
  8553 ;;		_findFinalDestination
  8554 ;;		_goBackward
  8555 ;;		_goForward
  8556 ;;		_goLeft
  8557 ;;		_goReverse
  8558 ;;		_goRight
  8559 ;;		_checkForFinalDestination
  8560 ;;		_lookForVictim
  8561 ;;		_findWalls
  8562 ;;		_updateLocation
  8563 ;;		_main
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           psect	text2222
  8567                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\lcd.c"
  8568                           	line	32
  8569                           	global	__size_of_lcd_set_cursor
  8570  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  8571                           	
  8572  1EAF                     _lcd_set_cursor:	
  8573                           	opt	stack 3
  8574                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  8575                           ;lcd_set_cursor@address stored from wreg
  8576  1EAF  1283               	bcf	status, 5	;RP0=0, select bank0
  8577  1EB0  1303               	bcf	status, 6	;RP1=0, select bank0
  8578  1EB1  00AD               	movwf	(lcd_set_cursor@address)
  8579                           	line	33
  8580                           	
  8581  1EB2                     l11935:	
  8582                           ;lcd.c: 33: address |= 0b10000000;
  8583  1EB2  17AD               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  8584                           	line	34
  8585                           	
  8586  1EB3                     l11937:	
  8587                           ;lcd.c: 34: lcd_write_control(address);
  8588  1EB3  082D               	movf	(lcd_set_cursor@address),w
  8589  1EB4  160A  158A  270C   	fcall	_lcd_write_control
              160A  158A         
  8590                           	line	35
  8591                           	
  8592  1EB9                     l2132:	
  8593  1EB9  0008               	return
  8594                           	opt stack 0
  8595                           GLOBAL	__end_of_lcd_set_cursor
  8596  1EBA                     	__end_of_lcd_set_cursor:
  8597 ;; =============== function _lcd_set_cursor ends ============
  8598                           
  8599                           	signat	_lcd_set_cursor,4216
  8600                           	global	_EEPROMToSerial
  8601                           psect	text2223,local,class=CODE,delta=2
  8602                           global __ptext2223
  8603  0867                     __ptext2223:
  8604                           
  8605 ;; *************** function _EEPROMToSerial *****************
  8606 ;; Defined at:
  8607 ;;		line 149 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\eeprom.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;		None
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  transferDone    1   20[BANK0 ] unsigned char 
  8612 ;; Return value:  Size  Location     Type
  8613 ;;		None               void
  8614 ;; Registers used:
  8615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8621 ;;      Params:         0       0       0       0       0
  8622 ;;      Locals:         0       1       0       0       0
  8623 ;;      Temps:          0       3       0       0       0
  8624 ;;      Totals:         0       4       0       0       0
  8625 ;;Total ram usage:        4 bytes
  8626 ;; Hardware stack levels used:    1
  8627 ;; Hardware stack levels required when called:    4
  8628 ;; This function calls:
  8629 ;;		_readEEPROM
  8630 ;;		_ser_putch
  8631 ;; This function is called by:
  8632 ;;		_main
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           psect	text2223
  8636                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\eeprom.c"
  8637                           	line	149
  8638                           	global	__size_of_EEPROMToSerial
  8639  007C                     	__size_of_EEPROMToSerial	equ	__end_of_EEPROMToSerial-_EEPROMToSerial
  8640                           	
  8641  0867                     _EEPROMToSerial:	
  8642                           	opt	stack 3
  8643                           ; Regs used in _EEPROMToSerial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8644                           	line	150
  8645                           	
  8646  0867                     l11909:	
  8647                           ;eeprom.c: 150: char transferDone = 0;
  8648  0867  1283               	bcf	status, 5	;RP0=0, select bank0
  8649  0868  1303               	bcf	status, 6	;RP1=0, select bank0
  8650  0869  01B4               	clrf	(EEPROMToSerial@transferDone)
  8651                           	line	151
  8652                           ;eeprom.c: 151: addressCurrent = 0;
  8653  086A  01DF               	clrf	(_addressCurrent)
  8654                           	line	152
  8655                           	
  8656  086B                     l11911:	
  8657                           ;eeprom.c: 152: addressCount = readEEPROM(0,0);
  8658  086B  01AB               	clrf	(?_readEEPROM)
  8659  086C  3000               	movlw	(0)
  8660  086D  160A  118A  233B   	fcall	_readEEPROM
              120A  158A         
  8661  0872  1283               	bcf	status, 5	;RP0=0, select bank0
  8662  0873  1303               	bcf	status, 6	;RP1=0, select bank0
  8663  0874  00B1               	movwf	(??_EEPROMToSerial+0)+0
  8664  0875  0831               	movf	(??_EEPROMToSerial+0)+0,w
  8665  0876  00DE               	movwf	(_addressCount)
  8666                           	line	153
  8667                           	
  8668  0877                     l11913:	
  8669                           ;eeprom.c: 153: _delay((unsigned long)((100)*(20000000/4000.0)));
  8670                           	opt asmopt_off
  8671  0877  3003               movlw  3
  8672  0878  00B3               movwf	((??_EEPROMToSerial+0)+0+2),f
  8673  0879  3088               movlw	136
  8674  087A  00B2               movwf	((??_EEPROMToSerial+0)+0+1),f
  8675  087B  3056               	movlw	86
  8676  087C  00B1               movwf	((??_EEPROMToSerial+0)+0),f
  8677  087D                     u7887:
  8678  087D  0BB1               	decfsz	((??_EEPROMToSerial+0)+0),f
  8679  087E  287D               	goto	u7887
  8680  087F  0BB2               	decfsz	((??_EEPROMToSerial+0)+0+1),f
  8681  0880  287D               	goto	u7887
  8682  0881  0BB3               	decfsz	((??_EEPROMToSerial+0)+0+2),f
  8683  0882  287D               	goto	u7887
  8684                           opt asmopt_on
  8685                           
  8686                           	line	155
  8687                           	
  8688  0883                     l11915:	
  8689                           ;eeprom.c: 155: ser_putch(254);
  8690  0883  30FE               	movlw	(0FEh)
  8691  0884  160A  158A  27DF   	fcall	_ser_putch
              120A  158A         
  8692                           	line	157
  8693                           ;eeprom.c: 157: while(!transferDone && addressCount > 0)
  8694  0889  28BA               	goto	l1433
  8695                           	
  8696  088A                     l1434:	
  8697                           	line	159
  8698                           	
  8699  088A                     l11917:	
  8700                           ;eeprom.c: 158: {
  8701                           ;eeprom.c: 159: ser_putch(readEEPROM(0,1 + addressCurrent));
  8702  088A  1283               	bcf	status, 5	;RP0=0, select bank0
  8703  088B  1303               	bcf	status, 6	;RP1=0, select bank0
  8704  088C  085F               	movf	(_addressCurrent),w
  8705  088D  3E01               	addlw	01h
  8706  088E  00B1               	movwf	(??_EEPROMToSerial+0)+0
  8707  088F  0831               	movf	(??_EEPROMToSerial+0)+0,w
  8708  0890  00AB               	movwf	(?_readEEPROM)
  8709  0891  3000               	movlw	(0)
  8710  0892  160A  118A  233B   	fcall	_readEEPROM
              120A  158A         
  8711  0897  160A  158A  27DF   	fcall	_ser_putch
              120A  158A         
  8712                           	line	160
  8713                           	
  8714  089C                     l11919:	
  8715                           ;eeprom.c: 160: _delay((unsigned long)((100)*(20000000/4000.0)));
  8716                           	opt asmopt_off
  8717  089C  3003               movlw  3
  8718  089D  1283               	bcf	status, 5	;RP0=0, select bank0
  8719  089E  1303               	bcf	status, 6	;RP1=0, select bank0
  8720  089F  00B3               movwf	((??_EEPROMToSerial+0)+0+2),f
  8721  08A0  3088               movlw	136
  8722  08A1  00B2               movwf	((??_EEPROMToSerial+0)+0+1),f
  8723  08A2  3056               	movlw	86
  8724  08A3  00B1               movwf	((??_EEPROMToSerial+0)+0),f
  8725  08A4                     u7897:
  8726  08A4  0BB1               	decfsz	((??_EEPROMToSerial+0)+0),f
  8727  08A5  28A4               	goto	u7897
  8728  08A6  0BB2               	decfsz	((??_EEPROMToSerial+0)+0+1),f
  8729  08A7  28A4               	goto	u7897
  8730  08A8  0BB3               	decfsz	((??_EEPROMToSerial+0)+0+2),f
  8731  08A9  28A4               	goto	u7897
  8732                           opt asmopt_on
  8733                           
  8734                           	line	161
  8735                           	
  8736  08AA                     l11921:	
  8737                           ;eeprom.c: 161: addressCurrent ++;
  8738  08AA  3001               	movlw	(01h)
  8739  08AB  1283               	bcf	status, 5	;RP0=0, select bank0
  8740  08AC  1303               	bcf	status, 6	;RP1=0, select bank0
  8741  08AD  00B1               	movwf	(??_EEPROMToSerial+0)+0
  8742  08AE  0831               	movf	(??_EEPROMToSerial+0)+0,w
  8743  08AF  07DF               	addwf	(_addressCurrent),f
  8744                           	line	162
  8745                           	
  8746  08B0                     l11923:	
  8747                           ;eeprom.c: 162: if(addressCurrent >= (addressCount))
  8748  08B0  085E               	movf	(_addressCount),w
  8749  08B1  025F               	subwf	(_addressCurrent),w
  8750  08B2  1C03               	skipc
  8751  08B3  28B5               	goto	u6911
  8752  08B4  28B6               	goto	u6910
  8753  08B5                     u6911:
  8754  08B5  28BA               	goto	l1433
  8755  08B6                     u6910:
  8756                           	line	164
  8757                           	
  8758  08B6                     l11925:	
  8759                           ;eeprom.c: 163: {
  8760                           ;eeprom.c: 164: transferDone = 1;
  8761  08B6  01B4               	clrf	(EEPROMToSerial@transferDone)
  8762  08B7  1403               	bsf	status,0
  8763  08B8  0DB4               	rlf	(EEPROMToSerial@transferDone),f
  8764  08B9  28BA               	goto	l1433
  8765                           	line	165
  8766                           	
  8767  08BA                     l1435:	
  8768                           	line	166
  8769                           	
  8770  08BA                     l1433:	
  8771                           	line	157
  8772  08BA  1283               	bcf	status, 5	;RP0=0, select bank0
  8773  08BB  1303               	bcf	status, 6	;RP1=0, select bank0
  8774  08BC  08B4               	movf	(EEPROMToSerial@transferDone),f
  8775  08BD  1D03               	skipz
  8776  08BE  28C0               	goto	u6921
  8777  08BF  28C1               	goto	u6920
  8778  08C0                     u6921:
  8779  08C0  28C8               	goto	l11929
  8780  08C1                     u6920:
  8781                           	
  8782  08C1                     l11927:	
  8783  08C1  08DE               	movf	(_addressCount),f
  8784  08C2  1D03               	skipz
  8785  08C3  28C5               	goto	u6931
  8786  08C4  28C6               	goto	u6930
  8787  08C5                     u6931:
  8788  08C5  288A               	goto	l11917
  8789  08C6                     u6930:
  8790  08C6  28C8               	goto	l11929
  8791                           	
  8792  08C7                     l1437:	
  8793  08C7  28C8               	goto	l11929
  8794                           	
  8795  08C8                     l1438:	
  8796                           	line	168
  8797                           	
  8798  08C8                     l11929:	
  8799                           ;eeprom.c: 165: }
  8800                           ;eeprom.c: 166: }
  8801                           ;eeprom.c: 168: ser_putch(255);
  8802  08C8  30FF               	movlw	(0FFh)
  8803  08C9  160A  158A  27DF   	fcall	_ser_putch
              120A  158A         
  8804                           	line	169
  8805                           	
  8806  08CE                     l11931:	
  8807                           ;eeprom.c: 169: _delay((unsigned long)((100)*(20000000/4000.0)));
  8808                           	opt asmopt_off
  8809  08CE  3003               movlw  3
  8810  08CF  1283               	bcf	status, 5	;RP0=0, select bank0
  8811  08D0  1303               	bcf	status, 6	;RP1=0, select bank0
  8812  08D1  00B3               movwf	((??_EEPROMToSerial+0)+0+2),f
  8813  08D2  3088               movlw	136
  8814  08D3  00B2               movwf	((??_EEPROMToSerial+0)+0+1),f
  8815  08D4  3056               	movlw	86
  8816  08D5  00B1               movwf	((??_EEPROMToSerial+0)+0),f
  8817  08D6                     u7907:
  8818  08D6  0BB1               	decfsz	((??_EEPROMToSerial+0)+0),f
  8819  08D7  28D6               	goto	u7907
  8820  08D8  0BB2               	decfsz	((??_EEPROMToSerial+0)+0+1),f
  8821  08D9  28D6               	goto	u7907
  8822  08DA  0BB3               	decfsz	((??_EEPROMToSerial+0)+0+2),f
  8823  08DB  28D6               	goto	u7907
  8824                           opt asmopt_on
  8825                           
  8826                           	line	170
  8827                           	
  8828  08DC                     l11933:	
  8829                           ;eeprom.c: 170: ser_putch(255);
  8830  08DC  30FF               	movlw	(0FFh)
  8831  08DD  160A  158A  27DF   	fcall	_ser_putch
              120A  158A         
  8832                           	line	171
  8833                           	
  8834  08E2                     l1439:	
  8835  08E2  0008               	return
  8836                           	opt stack 0
  8837                           GLOBAL	__end_of_EEPROMToSerial
  8838  08E3                     	__end_of_EEPROMToSerial:
  8839 ;; =============== function _EEPROMToSerial ends ============
  8840                           
  8841                           	signat	_EEPROMToSerial,88
  8842                           	global	_addNewData
  8843                           psect	text2224,local,class=CODE,delta=2
  8844                           global __ptext2224
  8845  1FA1                     __ptext2224:
  8846                           
  8847 ;; *************** function _addNewData *****************
  8848 ;; Defined at:
  8849 ;;		line 94 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\eeprom.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  data            1    wreg     unsigned char 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  data            1   18[BANK0 ] unsigned char 
  8854 ;; Return value:  Size  Location     Type
  8855 ;;		None               void
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0, pclath, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8863 ;;      Params:         0       0       0       0       0
  8864 ;;      Locals:         0       1       0       0       0
  8865 ;;      Temps:          0       1       0       0       0
  8866 ;;      Totals:         0       2       0       0       0
  8867 ;;Total ram usage:        2 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:    4
  8870 ;; This function calls:
  8871 ;;		_writeEEPROM
  8872 ;; This function is called by:
  8873 ;;		_updateMapData
  8874 ;;		_writeEEPROMTestData
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           psect	text2224
  8878                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\eeprom.c"
  8879                           	line	94
  8880                           	global	__size_of_addNewData
  8881  001E                     	__size_of_addNewData	equ	__end_of_addNewData-_addNewData
  8882                           	
  8883  1FA1                     _addNewData:	
  8884                           	opt	stack 2
  8885                           ; Regs used in _addNewData: [wreg+status,2+status,0+pclath+cstack]
  8886                           ;addNewData@data stored from wreg
  8887  1FA1  1283               	bcf	status, 5	;RP0=0, select bank0
  8888  1FA2  1303               	bcf	status, 6	;RP1=0, select bank0
  8889  1FA3  00B2               	movwf	(addNewData@data)
  8890                           	line	95
  8891                           	
  8892  1FA4                     l11903:	
  8893                           ;eeprom.c: 95: writeEEPROM(data,0,addressCount + 1);
  8894  1FA4  01AB               	clrf	(?_writeEEPROM)
  8895  1FA5  085E               	movf	(_addressCount),w
  8896  1FA6  3E01               	addlw	01h
  8897  1FA7  00B1               	movwf	(??_addNewData+0)+0
  8898  1FA8  0831               	movf	(??_addNewData+0)+0,w
  8899  1FA9  00AC               	movwf	0+(?_writeEEPROM)+01h
  8900  1FAA  0832               	movf	(addNewData@data),w
  8901  1FAB  160A  118A  243C   	fcall	_writeEEPROM
              160A  158A         
  8902                           	line	96
  8903                           	
  8904  1FB0                     l11905:	
  8905                           ;eeprom.c: 96: addressCount ++;
  8906  1FB0  3001               	movlw	(01h)
  8907  1FB1  1283               	bcf	status, 5	;RP0=0, select bank0
  8908  1FB2  1303               	bcf	status, 6	;RP1=0, select bank0
  8909  1FB3  00B1               	movwf	(??_addNewData+0)+0
  8910  1FB4  0831               	movf	(??_addNewData+0)+0,w
  8911  1FB5  07DE               	addwf	(_addressCount),f
  8912                           	line	97
  8913                           	
  8914  1FB6                     l11907:	
  8915                           ;eeprom.c: 97: writeEEPROM(addressCount,0,0);
  8916  1FB6  01AB               	clrf	(?_writeEEPROM)
  8917  1FB7  01AC               	clrf	0+(?_writeEEPROM)+01h
  8918  1FB8  085E               	movf	(_addressCount),w
  8919  1FB9  160A  118A  243C   	fcall	_writeEEPROM
              160A  158A         
  8920                           	line	98
  8921                           	
  8922  1FBE                     l1424:	
  8923  1FBE  0008               	return
  8924                           	opt stack 0
  8925                           GLOBAL	__end_of_addNewData
  8926  1FBF                     	__end_of_addNewData:
  8927 ;; =============== function _addNewData ends ============
  8928                           
  8929                           	signat	_addNewData,4216
  8930                           	global	_lcd_write_string
  8931                           psect	text2225,local,class=CODE,delta=2
  8932                           global __ptext2225
  8933  1075                     __ptext2225:
  8934                           
  8935 ;; *************** function _lcd_write_string *****************
  8936 ;; Defined at:
  8937 ;;		line 38 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\lcd.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;  s               1    wreg     PTR const unsigned char 
  8940 ;;		 -> STR_4(17), STR_3(17), STR_2(14), STR_1(15), 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  8943 ;;		 -> STR_4(17), STR_3(17), STR_2(14), STR_1(15), 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;		None               void
  8946 ;; Registers used:
  8947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8953 ;;      Params:         0       0       0       0       0
  8954 ;;      Locals:         0       1       0       0       0
  8955 ;;      Temps:          0       1       0       0       0
  8956 ;;      Totals:         0       2       0       0       0
  8957 ;;Total ram usage:        2 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    3
  8960 ;; This function calls:
  8961 ;;		_lcd_write_data
  8962 ;; This function is called by:
  8963 ;;		_main
  8964 ;;		_testEEPROM
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           psect	text2225
  8968                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\lcd.c"
  8969                           	line	38
  8970                           	global	__size_of_lcd_write_string
  8971  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  8972                           	
  8973  1075                     _lcd_write_string:	
  8974                           	opt	stack 4
  8975                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8976                           ;lcd_write_string@s stored from wreg
  8977  1075  1283               	bcf	status, 5	;RP0=0, select bank0
  8978  1076  1303               	bcf	status, 6	;RP1=0, select bank0
  8979  1077  00AE               	movwf	(lcd_write_string@s)
  8980                           	line	40
  8981                           	
  8982  1078                     l11895:	
  8983                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  8984  1078  288C               	goto	l11901
  8985                           	
  8986  1079                     l2136:	
  8987                           	
  8988  1079                     l11897:	
  8989  1079  082E               	movf	(lcd_write_string@s),w
  8990  107A  0084               	movwf	fsr0
  8991  107B  120A  118A  2015   	fcall	stringdir
              160A  118A         
  8992  1080  160A  158A  26F9   	fcall	_lcd_write_data
              160A  118A         
  8993                           	
  8994  1085                     l11899:	
  8995  1085  3001               	movlw	(01h)
  8996  1086  1283               	bcf	status, 5	;RP0=0, select bank0
  8997  1087  1303               	bcf	status, 6	;RP1=0, select bank0
  8998  1088  00AD               	movwf	(??_lcd_write_string+0)+0
  8999  1089  082D               	movf	(??_lcd_write_string+0)+0,w
  9000  108A  07AE               	addwf	(lcd_write_string@s),f
  9001  108B  288C               	goto	l11901
  9002                           	
  9003  108C                     l2135:	
  9004                           	
  9005  108C                     l11901:	
  9006  108C  082E               	movf	(lcd_write_string@s),w
  9007  108D  0084               	movwf	fsr0
  9008  108E  120A  118A  2015   	fcall	stringdir
              160A  118A         
  9009  1093  3800               	iorlw	0
  9010  1094  1D03               	skipz
  9011  1095  2897               	goto	u6901
  9012  1096  2898               	goto	u6900
  9013  1097                     u6901:
  9014  1097  2879               	goto	l11897
  9015  1098                     u6900:
  9016  1098  2899               	goto	l2138
  9017                           	
  9018  1099                     l2137:	
  9019                           	line	41
  9020                           	
  9021  1099                     l2138:	
  9022  1099  0008               	return
  9023                           	opt stack 0
  9024                           GLOBAL	__end_of_lcd_write_string
  9025  109A                     	__end_of_lcd_write_string:
  9026 ;; =============== function _lcd_write_string ends ============
  9027                           
  9028                           	signat	_lcd_write_string,4216
  9029                           	global	_adc_read_channel
  9030                           psect	text2226,local,class=CODE,delta=2
  9031                           global __ptext2226
  9032  13B9                     __ptext2226:
  9033                           
  9034 ;; *************** function _adc_read_channel *****************
  9035 ;; Defined at:
  9036 ;;		line 7 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv
       0.8\COMPETITIONv0.8\adc.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  channel         1    wreg     unsigned char 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  channel         1   40[BANK0 ] unsigned char 
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  2   37[BANK0 ] int 
  9043 ;; Registers used:
  9044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9050 ;;      Params:         0       2       0       0       0
  9051 ;;      Locals:         0       1       0       0       0
  9052 ;;      Temps:          0       1       0       0       0
  9053 ;;      Totals:         0       4       0       0       0
  9054 ;;Total ram usage:        4 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; Hardware stack levels required when called:    4
  9057 ;; This function calls:
  9058 ;;		_adc_read
  9059 ;; This function is called by:
  9060 ;;		_readIR
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           psect	text2226
  9064                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\adc.c"
  9065                           	line	7
  9066                           	global	__size_of_adc_read_channel
  9067  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  9068                           	
  9069  13B9                     _adc_read_channel:	
  9070                           	opt	stack 1
  9071                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9072                           ;adc_read_channel@channel stored from wreg
  9073  13B9  1283               	bcf	status, 5	;RP0=0, select bank0
  9074  13BA  1303               	bcf	status, 6	;RP1=0, select bank0
  9075  13BB  00C8               	movwf	(adc_read_channel@channel)
  9076                           	line	8
  9077                           	
  9078  13BC                     l10461:	
  9079                           ;adc.c: 8: switch(channel)
  9080  13BC  2BD6               	goto	l10469
  9081                           	line	10
  9082                           ;adc.c: 9: {
  9083                           ;adc.c: 10: case 0:
  9084                           	
  9085  13BD                     l690:	
  9086                           	line	11
  9087                           ;adc.c: 11: CHS0 = 0;
  9088  13BD  119F               	bcf	(251/8),(251)&7
  9089                           	line	12
  9090                           ;adc.c: 12: CHS1 = 0;
  9091  13BE  121F               	bcf	(252/8),(252)&7
  9092                           	line	13
  9093                           ;adc.c: 13: CHS2 = 0;
  9094  13BF  129F               	bcf	(253/8),(253)&7
  9095                           	line	14
  9096                           ;adc.c: 14: break;
  9097  13C0  2BE7               	goto	l10471
  9098                           	line	15
  9099                           ;adc.c: 15: case 1:
  9100                           	
  9101  13C1                     l692:	
  9102                           	line	16
  9103                           ;adc.c: 16: CHS0 = 1;
  9104  13C1  159F               	bsf	(251/8),(251)&7
  9105                           	line	17
  9106                           ;adc.c: 17: CHS1 = 0;
  9107  13C2  121F               	bcf	(252/8),(252)&7
  9108                           	line	18
  9109                           ;adc.c: 18: CHS2 = 0;
  9110  13C3  129F               	bcf	(253/8),(253)&7
  9111                           	line	19
  9112                           ;adc.c: 19: break;
  9113  13C4  2BE7               	goto	l10471
  9114                           	line	20
  9115                           ;adc.c: 20: case 2:
  9116                           	
  9117  13C5                     l693:	
  9118                           	line	21
  9119                           ;adc.c: 21: CHS0 = 0;
  9120  13C5  119F               	bcf	(251/8),(251)&7
  9121                           	line	22
  9122                           ;adc.c: 22: CHS1 = 1;
  9123  13C6  161F               	bsf	(252/8),(252)&7
  9124                           	line	23
  9125                           ;adc.c: 23: CHS2 = 0;
  9126  13C7  129F               	bcf	(253/8),(253)&7
  9127                           	line	24
  9128                           ;adc.c: 24: break;
  9129  13C8  2BE7               	goto	l10471
  9130                           	line	25
  9131                           ;adc.c: 25: case 3:
  9132                           	
  9133  13C9                     l694:	
  9134                           	line	26
  9135                           ;adc.c: 26: CHS0 = 1;
  9136  13C9  159F               	bsf	(251/8),(251)&7
  9137                           	line	27
  9138                           ;adc.c: 27: CHS1 = 1;
  9139  13CA  161F               	bsf	(252/8),(252)&7
  9140                           	line	28
  9141                           ;adc.c: 28: CHS2 = 0;
  9142  13CB  129F               	bcf	(253/8),(253)&7
  9143                           	line	29
  9144                           ;adc.c: 29: break;
  9145  13CC  2BE7               	goto	l10471
  9146                           	line	30
  9147                           ;adc.c: 30: case 4:
  9148                           	
  9149  13CD                     l695:	
  9150                           	line	31
  9151                           ;adc.c: 31: CHS0 = 0;
  9152  13CD  119F               	bcf	(251/8),(251)&7
  9153                           	line	32
  9154                           ;adc.c: 32: CHS1 = 0;
  9155  13CE  121F               	bcf	(252/8),(252)&7
  9156                           	line	33
  9157                           ;adc.c: 33: CHS2 = 1;
  9158  13CF  169F               	bsf	(253/8),(253)&7
  9159                           	line	34
  9160                           ;adc.c: 34: break;
  9161  13D0  2BE7               	goto	l10471
  9162                           	line	37
  9163                           ;adc.c: 37: default:
  9164                           	
  9165  13D1                     l696:	
  9166                           	line	38
  9167                           	
  9168  13D1                     l10463:	
  9169                           ;adc.c: 38: return 0;
  9170  13D1  01C5               	clrf	(?_adc_read_channel)
  9171  13D2  01C6               	clrf	(?_adc_read_channel+1)
  9172  13D3  2BF9               	goto	l697
  9173                           	
  9174  13D4                     l10465:	
  9175  13D4  2BF9               	goto	l697
  9176                           	line	39
  9177                           	
  9178  13D5                     l10467:	
  9179                           ;adc.c: 39: }
  9180  13D5  2BE7               	goto	l10471
  9181                           	line	8
  9182                           	
  9183  13D6                     l689:	
  9184                           	
  9185  13D6                     l10469:	
  9186  13D6  0848               	movf	(adc_read_channel@channel),w
  9187                           	; Switch size 1, requested type "space"
  9188                           ; Number of cases is 5, Range of values is 0 to 4
  9189                           ; switch strategies available:
  9190                           ; Name         Instructions Cycles
  9191                           ; simple_byte           16     9 (average)
  9192                           ; direct_byte           23     8 (fixed)
  9193                           ; jumptable            260     6 (fixed)
  9194                           ; rangetable             9     6 (fixed)
  9195                           ; spacedrange           16     9 (fixed)
  9196                           ; locatedrange           5     3 (fixed)
  9197                           ;	Chosen strategy is simple_byte
  9198                           
  9199                           	opt asmopt_off
  9200  13D7  3A00               	xorlw	0^0	; case 0
  9201  13D8  1903               	skipnz
  9202  13D9  2BBD               	goto	l690
  9203  13DA  3A01               	xorlw	1^0	; case 1
  9204  13DB  1903               	skipnz
  9205  13DC  2BC1               	goto	l692
  9206  13DD  3A03               	xorlw	2^1	; case 2
  9207  13DE  1903               	skipnz
  9208  13DF  2BC5               	goto	l693
  9209  13E0  3A01               	xorlw	3^2	; case 3
  9210  13E1  1903               	skipnz
  9211  13E2  2BC9               	goto	l694
  9212  13E3  3A07               	xorlw	4^3	; case 4
  9213  13E4  1903               	skipnz
  9214  13E5  2BCD               	goto	l695
  9215  13E6  2BD1               	goto	l10463
  9216                           	opt asmopt_on
  9217                           
  9218                           	line	39
  9219                           	
  9220  13E7                     l691:	
  9221                           	line	41
  9222                           	
  9223  13E7                     l10471:	
  9224                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9225                           	opt asmopt_off
  9226  13E7  3053               movlw	83
  9227  13E8  00C7               movwf	(??_adc_read_channel+0)+0,f
  9228  13E9                     u7917:
  9229  13E9  0BC7               decfsz	(??_adc_read_channel+0)+0,f
  9230  13EA  2BE9               	goto	u7917
  9231                           opt asmopt_on
  9232                           
  9233                           	line	43
  9234                           	
  9235  13EB                     l10473:	
  9236                           ;adc.c: 43: return adc_read();
  9237  13EB  160A  118A  22FC   	fcall	_adc_read
              160A  118A         
  9238  13F0  1283               	bcf	status, 5	;RP0=0, select bank0
  9239  13F1  1303               	bcf	status, 6	;RP1=0, select bank0
  9240  13F2  083A               	movf	(1+(?_adc_read)),w
  9241  13F3  01C6               	clrf	(?_adc_read_channel+1)
  9242  13F4  07C6               	addwf	(?_adc_read_channel+1)
  9243  13F5  0839               	movf	(0+(?_adc_read)),w
  9244  13F6  01C5               	clrf	(?_adc_read_channel)
  9245  13F7  07C5               	addwf	(?_adc_read_channel)
  9246                           
  9247  13F8  2BF9               	goto	l697
  9248                           	
  9249  13F9                     l10475:	
  9250                           	line	45
  9251                           	
  9252  13F9                     l697:	
  9253  13F9  0008               	return
  9254                           	opt stack 0
  9255                           GLOBAL	__end_of_adc_read_channel
  9256  13FA                     	__end_of_adc_read_channel:
  9257 ;; =============== function _adc_read_channel ends ============
  9258                           
  9259                           	signat	_adc_read_channel,4218
  9260                           	global	___lbtoft
  9261                           psect	text2227,local,class=CODE,delta=2
  9262                           global __ptext2227
  9263  100F                     __ptext2227:
  9264                           
  9265 ;; *************** function ___lbtoft *****************
  9266 ;; Defined at:
  9267 ;;		line 28 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\lbtoft.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  c               1    wreg     unsigned char 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  c               1   39[BANK0 ] unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  3   32[BANK0 ] float 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0, pclath, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9281 ;;      Params:         0       3       0       0       0
  9282 ;;      Locals:         0       1       0       0       0
  9283 ;;      Temps:          0       4       0       0       0
  9284 ;;      Totals:         0       8       0       0       0
  9285 ;;Total ram usage:        8 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    3
  9288 ;; This function calls:
  9289 ;;		___ftpack
  9290 ;; This function is called by:
  9291 ;;		_goParallel
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           psect	text2227
  9295                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\lbtoft.c"
  9296                           	line	28
  9297                           	global	__size_of___lbtoft
  9298  0021                     	__size_of___lbtoft	equ	__end_of___lbtoft-___lbtoft
  9299                           	
  9300  100F                     ___lbtoft:	
  9301                           	opt	stack 3
  9302                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  9303                           ;___lbtoft@c stored from wreg
  9304  100F  1283               	bcf	status, 5	;RP0=0, select bank0
  9305  1010  1303               	bcf	status, 6	;RP1=0, select bank0
  9306  1011  00C7               	movwf	(___lbtoft@c)
  9307                           	line	29
  9308                           	
  9309  1012                     l11891:	
  9310  1012  0847               	movf	(___lbtoft@c),w
  9311  1013  00C3               	movwf	((??___lbtoft+0)+0)
  9312  1014  01C4               	clrf	((??___lbtoft+0)+0+1)
  9313  1015  01C5               	clrf	((??___lbtoft+0)+0+2)
  9314  1016  0843               	movf	0+(??___lbtoft+0)+0,w
  9315  1017  00AA               	movwf	(?___ftpack)
  9316  1018  0844               	movf	1+(??___lbtoft+0)+0,w
  9317  1019  00AB               	movwf	(?___ftpack+1)
  9318  101A  0845               	movf	2+(??___lbtoft+0)+0,w
  9319  101B  00AC               	movwf	(?___ftpack+2)
  9320  101C  308E               	movlw	(08Eh)
  9321  101D  00C6               	movwf	(??___lbtoft+3)+0
  9322  101E  0846               	movf	(??___lbtoft+3)+0,w
  9323  101F  00AD               	movwf	0+(?___ftpack)+03h
  9324  1020  01AE               	clrf	0+(?___ftpack)+04h
  9325  1021  120A  118A  277C   	fcall	___ftpack
              160A  118A         
  9326  1026  1283               	bcf	status, 5	;RP0=0, select bank0
  9327  1027  1303               	bcf	status, 6	;RP1=0, select bank0
  9328  1028  082A               	movf	(0+(?___ftpack)),w
  9329  1029  00C0               	movwf	(?___lbtoft)
  9330  102A  082B               	movf	(1+(?___ftpack)),w
  9331  102B  00C1               	movwf	(?___lbtoft+1)
  9332  102C  082C               	movf	(2+(?___ftpack)),w
  9333  102D  00C2               	movwf	(?___lbtoft+2)
  9334  102E  282F               	goto	l6976
  9335                           	
  9336  102F                     l11893:	
  9337                           	line	30
  9338                           	
  9339  102F                     l6976:	
  9340  102F  0008               	return
  9341                           	opt stack 0
  9342                           GLOBAL	__end_of___lbtoft
  9343  1030                     	__end_of___lbtoft:
  9344 ;; =============== function ___lbtoft ends ============
  9345                           
  9346                           	signat	___lbtoft,4219
  9347                           	global	___ftmul
  9348                           psect	text2228,local,class=CODE,delta=2
  9349                           global __ptext2228
  9350  0B73                     __ptext2228:
  9351                           
  9352 ;; *************** function ___ftmul *****************
  9353 ;; Defined at:
  9354 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\ftmul.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  f1              3   40[BANK0 ] float 
  9357 ;;  f2              3   43[BANK0 ] float 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  f3_as_produc    3   51[BANK0 ] unsigned um
  9360 ;;  sign            1   55[BANK0 ] unsigned char 
  9361 ;;  cntr            1   54[BANK0 ] unsigned char 
  9362 ;;  exp             1   50[BANK0 ] unsigned char 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  3   40[BANK0 ] float 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0, pclath, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9372 ;;      Params:         0       6       0       0       0
  9373 ;;      Locals:         0       6       0       0       0
  9374 ;;      Temps:          0       4       0       0       0
  9375 ;;      Totals:         0      16       0       0       0
  9376 ;;Total ram usage:       16 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    3
  9379 ;; This function calls:
  9380 ;;		___ftpack
  9381 ;; This function is called by:
  9382 ;;		_goParallel
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           psect	text2228
  9386                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\ftmul.c"
  9387                           	line	52
  9388                           	global	__size_of___ftmul
  9389  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  9390                           	
  9391  0B73                     ___ftmul:	
  9392                           	opt	stack 3
  9393                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9394                           	line	56
  9395                           	
  9396  0B73                     l11841:	
  9397  0B73  1283               	bcf	status, 5	;RP0=0, select bank0
  9398  0B74  1303               	bcf	status, 6	;RP1=0, select bank0
  9399  0B75  0848               	movf	(___ftmul@f1),w
  9400  0B76  00CE               	movwf	((??___ftmul+0)+0)
  9401  0B77  0849               	movf	(___ftmul@f1+1),w
  9402  0B78  00CF               	movwf	((??___ftmul+0)+0+1)
  9403  0B79  084A               	movf	(___ftmul@f1+2),w
  9404  0B7A  00D0               	movwf	((??___ftmul+0)+0+2)
  9405  0B7B  1003               	clrc
  9406  0B7C  0D4F               	rlf	(??___ftmul+0)+1,w
  9407  0B7D  0D50               	rlf	(??___ftmul+0)+2,w
  9408  0B7E  00D1               	movwf	(??___ftmul+3)+0
  9409  0B7F  0851               	movf	(??___ftmul+3)+0,w
  9410  0B80  00D2               	movwf	(___ftmul@exp)
  9411  0B81  08D2               	movf	((___ftmul@exp)),f
  9412  0B82  1D03               	skipz
  9413  0B83  2B85               	goto	u6761
  9414  0B84  2B86               	goto	u6760
  9415  0B85                     u6761:
  9416  0B85  2B8E               	goto	l11847
  9417  0B86                     u6760:
  9418                           	line	57
  9419                           	
  9420  0B86                     l11843:	
  9421  0B86  3000               	movlw	0x0
  9422  0B87  00C8               	movwf	(?___ftmul)
  9423  0B88  3000               	movlw	0x0
  9424  0B89  00C9               	movwf	(?___ftmul+1)
  9425  0B8A  3000               	movlw	0x0
  9426  0B8B  00CA               	movwf	(?___ftmul+2)
  9427  0B8C  2C60               	goto	l6950
  9428                           	
  9429  0B8D                     l11845:	
  9430  0B8D  2C60               	goto	l6950
  9431                           	
  9432  0B8E                     l6949:	
  9433                           	line	58
  9434                           	
  9435  0B8E                     l11847:	
  9436  0B8E  084B               	movf	(___ftmul@f2),w
  9437  0B8F  00CE               	movwf	((??___ftmul+0)+0)
  9438  0B90  084C               	movf	(___ftmul@f2+1),w
  9439  0B91  00CF               	movwf	((??___ftmul+0)+0+1)
  9440  0B92  084D               	movf	(___ftmul@f2+2),w
  9441  0B93  00D0               	movwf	((??___ftmul+0)+0+2)
  9442  0B94  1003               	clrc
  9443  0B95  0D4F               	rlf	(??___ftmul+0)+1,w
  9444  0B96  0D50               	rlf	(??___ftmul+0)+2,w
  9445  0B97  00D1               	movwf	(??___ftmul+3)+0
  9446  0B98  0851               	movf	(??___ftmul+3)+0,w
  9447  0B99  00D7               	movwf	(___ftmul@sign)
  9448  0B9A  08D7               	movf	((___ftmul@sign)),f
  9449  0B9B  1D03               	skipz
  9450  0B9C  2B9E               	goto	u6771
  9451  0B9D  2B9F               	goto	u6770
  9452  0B9E                     u6771:
  9453  0B9E  2BA7               	goto	l11853
  9454  0B9F                     u6770:
  9455                           	line	59
  9456                           	
  9457  0B9F                     l11849:	
  9458  0B9F  3000               	movlw	0x0
  9459  0BA0  00C8               	movwf	(?___ftmul)
  9460  0BA1  3000               	movlw	0x0
  9461  0BA2  00C9               	movwf	(?___ftmul+1)
  9462  0BA3  3000               	movlw	0x0
  9463  0BA4  00CA               	movwf	(?___ftmul+2)
  9464  0BA5  2C60               	goto	l6950
  9465                           	
  9466  0BA6                     l11851:	
  9467  0BA6  2C60               	goto	l6950
  9468                           	
  9469  0BA7                     l6951:	
  9470                           	line	60
  9471                           	
  9472  0BA7                     l11853:	
  9473  0BA7  0857               	movf	(___ftmul@sign),w
  9474  0BA8  3E7B               	addlw	07Bh
  9475  0BA9  00CE               	movwf	(??___ftmul+0)+0
  9476  0BAA  084E               	movf	(??___ftmul+0)+0,w
  9477  0BAB  07D2               	addwf	(___ftmul@exp),f
  9478                           	line	61
  9479  0BAC  0848               	movf	(___ftmul@f1),w
  9480  0BAD  00CE               	movwf	((??___ftmul+0)+0)
  9481  0BAE  0849               	movf	(___ftmul@f1+1),w
  9482  0BAF  00CF               	movwf	((??___ftmul+0)+0+1)
  9483  0BB0  084A               	movf	(___ftmul@f1+2),w
  9484  0BB1  00D0               	movwf	((??___ftmul+0)+0+2)
  9485  0BB2  3010               	movlw	010h
  9486  0BB3                     u6785:
  9487  0BB3  1003               	clrc
  9488  0BB4  0CD0               	rrf	(??___ftmul+0)+2,f
  9489  0BB5  0CCF               	rrf	(??___ftmul+0)+1,f
  9490  0BB6  0CCE               	rrf	(??___ftmul+0)+0,f
  9491  0BB7                     u6780:
  9492  0BB7  3EFF               	addlw	-1
  9493  0BB8  1D03               	skipz
  9494  0BB9  2BB3               	goto	u6785
  9495  0BBA  084E               	movf	0+(??___ftmul+0)+0,w
  9496  0BBB  00D1               	movwf	(??___ftmul+3)+0
  9497  0BBC  0851               	movf	(??___ftmul+3)+0,w
  9498  0BBD  00D7               	movwf	(___ftmul@sign)
  9499                           	line	62
  9500  0BBE  084B               	movf	(___ftmul@f2),w
  9501  0BBF  00CE               	movwf	((??___ftmul+0)+0)
  9502  0BC0  084C               	movf	(___ftmul@f2+1),w
  9503  0BC1  00CF               	movwf	((??___ftmul+0)+0+1)
  9504  0BC2  084D               	movf	(___ftmul@f2+2),w
  9505  0BC3  00D0               	movwf	((??___ftmul+0)+0+2)
  9506  0BC4  3010               	movlw	010h
  9507  0BC5                     u6795:
  9508  0BC5  1003               	clrc
  9509  0BC6  0CD0               	rrf	(??___ftmul+0)+2,f
  9510  0BC7  0CCF               	rrf	(??___ftmul+0)+1,f
  9511  0BC8  0CCE               	rrf	(??___ftmul+0)+0,f
  9512  0BC9                     u6790:
  9513  0BC9  3EFF               	addlw	-1
  9514  0BCA  1D03               	skipz
  9515  0BCB  2BC5               	goto	u6795
  9516  0BCC  084E               	movf	0+(??___ftmul+0)+0,w
  9517  0BCD  00D1               	movwf	(??___ftmul+3)+0
  9518  0BCE  0851               	movf	(??___ftmul+3)+0,w
  9519  0BCF  06D7               	xorwf	(___ftmul@sign),f
  9520                           	line	63
  9521  0BD0  3080               	movlw	(080h)
  9522  0BD1  00CE               	movwf	(??___ftmul+0)+0
  9523  0BD2  084E               	movf	(??___ftmul+0)+0,w
  9524  0BD3  05D7               	andwf	(___ftmul@sign),f
  9525                           	line	64
  9526                           	
  9527  0BD4                     l11855:	
  9528  0BD4  17C9               	bsf	(___ftmul@f1)+(15/8),(15)&7
  9529                           	line	66
  9530                           	
  9531  0BD5                     l11857:	
  9532  0BD5  17CC               	bsf	(___ftmul@f2)+(15/8),(15)&7
  9533                           	line	67
  9534                           	
  9535  0BD6                     l11859:	
  9536  0BD6  30FF               	movlw	0FFh
  9537  0BD7  05CB               	andwf	(___ftmul@f2),f
  9538  0BD8  30FF               	movlw	0FFh
  9539  0BD9  05CC               	andwf	(___ftmul@f2+1),f
  9540  0BDA  3000               	movlw	0
  9541  0BDB  05CD               	andwf	(___ftmul@f2+2),f
  9542                           	line	68
  9543                           	
  9544  0BDC                     l11861:	
  9545  0BDC  3000               	movlw	0
  9546  0BDD  00D3               	movwf	(___ftmul@f3_as_product)
  9547  0BDE  3000               	movlw	0
  9548  0BDF  00D4               	movwf	(___ftmul@f3_as_product+1)
  9549  0BE0  3000               	movlw	0
  9550  0BE1  00D5               	movwf	(___ftmul@f3_as_product+2)
  9551                           	line	69
  9552                           	
  9553  0BE2                     l11863:	
  9554  0BE2  3007               	movlw	(07h)
  9555  0BE3  00CE               	movwf	(??___ftmul+0)+0
  9556  0BE4  084E               	movf	(??___ftmul+0)+0,w
  9557  0BE5  00D6               	movwf	(___ftmul@cntr)
  9558  0BE6  2BE7               	goto	l11865
  9559                           	line	70
  9560                           	
  9561  0BE7                     l6952:	
  9562                           	line	71
  9563                           	
  9564  0BE7                     l11865:	
  9565  0BE7  1C48               	btfss	(___ftmul@f1),(0)&7
  9566  0BE8  2BEA               	goto	u6801
  9567  0BE9  2BEB               	goto	u6800
  9568  0BEA                     u6801:
  9569  0BEA  2BFC               	goto	l11869
  9570  0BEB                     u6800:
  9571                           	line	72
  9572                           	
  9573  0BEB                     l11867:	
  9574  0BEB  084B               	movf	(___ftmul@f2),w
  9575  0BEC  07D3               	addwf	(___ftmul@f3_as_product),f
  9576  0BED  084C               	movf	(___ftmul@f2+1),w
  9577  0BEE  1103               	clrz
  9578  0BEF  1803               	skipnc
  9579  0BF0  0A4C               	incf	(___ftmul@f2+1),w
  9580  0BF1  1903               	skipnz
  9581  0BF2  2BF4               	goto	u6811
  9582  0BF3  07D4               	addwf	(___ftmul@f3_as_product+1),f
  9583  0BF4                     u6811:
  9584  0BF4  084D               	movf	(___ftmul@f2+2),w
  9585  0BF5  1103               	clrz
  9586  0BF6  1803               	skipnc
  9587  0BF7  0A4D               	incf	(___ftmul@f2+2),w
  9588  0BF8  1903               	skipnz
  9589  0BF9  2BFB               	goto	u6812
  9590  0BFA  07D5               	addwf	(___ftmul@f3_as_product+2),f
  9591  0BFB                     u6812:
  9592                           
  9593  0BFB  2BFC               	goto	l11869
  9594                           	
  9595  0BFC                     l6953:	
  9596                           	line	73
  9597                           	
  9598  0BFC                     l11869:	
  9599  0BFC  3001               	movlw	01h
  9600  0BFD                     u6825:
  9601  0BFD  1003               	clrc
  9602  0BFE  0CCA               	rrf	(___ftmul@f1+2),f
  9603  0BFF  0CC9               	rrf	(___ftmul@f1+1),f
  9604  0C00  0CC8               	rrf	(___ftmul@f1),f
  9605  0C01  3EFF               	addlw	-1
  9606  0C02  1D03               	skipz
  9607  0C03  2BFD               	goto	u6825
  9608                           
  9609                           	line	74
  9610                           	
  9611  0C04                     l11871:	
  9612  0C04  3001               	movlw	01h
  9613  0C05                     u6835:
  9614  0C05  1003               	clrc
  9615  0C06  0DCB               	rlf	(___ftmul@f2),f
  9616  0C07  0DCC               	rlf	(___ftmul@f2+1),f
  9617  0C08  0DCD               	rlf	(___ftmul@f2+2),f
  9618  0C09  3EFF               	addlw	-1
  9619  0C0A  1D03               	skipz
  9620  0C0B  2C05               	goto	u6835
  9621                           	line	75
  9622                           	
  9623  0C0C                     l11873:	
  9624  0C0C  3001               	movlw	low(01h)
  9625  0C0D  02D6               	subwf	(___ftmul@cntr),f
  9626  0C0E  1D03               	btfss	status,2
  9627  0C0F  2C11               	goto	u6841
  9628  0C10  2C12               	goto	u6840
  9629  0C11                     u6841:
  9630  0C11  2BE7               	goto	l11865
  9631  0C12                     u6840:
  9632  0C12  2C13               	goto	l11875
  9633                           	
  9634  0C13                     l6954:	
  9635                           	line	76
  9636                           	
  9637  0C13                     l11875:	
  9638  0C13  3009               	movlw	(09h)
  9639  0C14  00CE               	movwf	(??___ftmul+0)+0
  9640  0C15  084E               	movf	(??___ftmul+0)+0,w
  9641  0C16  00D6               	movwf	(___ftmul@cntr)
  9642  0C17  2C18               	goto	l11877
  9643                           	line	77
  9644                           	
  9645  0C18                     l6955:	
  9646                           	line	78
  9647                           	
  9648  0C18                     l11877:	
  9649  0C18  1C48               	btfss	(___ftmul@f1),(0)&7
  9650  0C19  2C1B               	goto	u6851
  9651  0C1A  2C1C               	goto	u6850
  9652  0C1B                     u6851:
  9653  0C1B  2C2D               	goto	l11881
  9654  0C1C                     u6850:
  9655                           	line	79
  9656                           	
  9657  0C1C                     l11879:	
  9658  0C1C  084B               	movf	(___ftmul@f2),w
  9659  0C1D  07D3               	addwf	(___ftmul@f3_as_product),f
  9660  0C1E  084C               	movf	(___ftmul@f2+1),w
  9661  0C1F  1103               	clrz
  9662  0C20  1803               	skipnc
  9663  0C21  0A4C               	incf	(___ftmul@f2+1),w
  9664  0C22  1903               	skipnz
  9665  0C23  2C25               	goto	u6861
  9666  0C24  07D4               	addwf	(___ftmul@f3_as_product+1),f
  9667  0C25                     u6861:
  9668  0C25  084D               	movf	(___ftmul@f2+2),w
  9669  0C26  1103               	clrz
  9670  0C27  1803               	skipnc
  9671  0C28  0A4D               	incf	(___ftmul@f2+2),w
  9672  0C29  1903               	skipnz
  9673  0C2A  2C2C               	goto	u6862
  9674  0C2B  07D5               	addwf	(___ftmul@f3_as_product+2),f
  9675  0C2C                     u6862:
  9676                           
  9677  0C2C  2C2D               	goto	l11881
  9678                           	
  9679  0C2D                     l6956:	
  9680                           	line	80
  9681                           	
  9682  0C2D                     l11881:	
  9683  0C2D  3001               	movlw	01h
  9684  0C2E                     u6875:
  9685  0C2E  1003               	clrc
  9686  0C2F  0CCA               	rrf	(___ftmul@f1+2),f
  9687  0C30  0CC9               	rrf	(___ftmul@f1+1),f
  9688  0C31  0CC8               	rrf	(___ftmul@f1),f
  9689  0C32  3EFF               	addlw	-1
  9690  0C33  1D03               	skipz
  9691  0C34  2C2E               	goto	u6875
  9692                           
  9693                           	line	81
  9694                           	
  9695  0C35                     l11883:	
  9696  0C35  3001               	movlw	01h
  9697  0C36                     u6885:
  9698  0C36  1003               	clrc
  9699  0C37  0CD5               	rrf	(___ftmul@f3_as_product+2),f
  9700  0C38  0CD4               	rrf	(___ftmul@f3_as_product+1),f
  9701  0C39  0CD3               	rrf	(___ftmul@f3_as_product),f
  9702  0C3A  3EFF               	addlw	-1
  9703  0C3B  1D03               	skipz
  9704  0C3C  2C36               	goto	u6885
  9705                           
  9706                           	line	82
  9707                           	
  9708  0C3D                     l11885:	
  9709  0C3D  3001               	movlw	low(01h)
  9710  0C3E  02D6               	subwf	(___ftmul@cntr),f
  9711  0C3F  1D03               	btfss	status,2
  9712  0C40  2C42               	goto	u6891
  9713  0C41  2C43               	goto	u6890
  9714  0C42                     u6891:
  9715  0C42  2C18               	goto	l11877
  9716  0C43                     u6890:
  9717  0C43  2C44               	goto	l11887
  9718                           	
  9719  0C44                     l6957:	
  9720                           	line	83
  9721                           	
  9722  0C44                     l11887:	
  9723  0C44  0853               	movf	(___ftmul@f3_as_product),w
  9724  0C45  00AA               	movwf	(?___ftpack)
  9725  0C46  0854               	movf	(___ftmul@f3_as_product+1),w
  9726  0C47  00AB               	movwf	(?___ftpack+1)
  9727  0C48  0855               	movf	(___ftmul@f3_as_product+2),w
  9728  0C49  00AC               	movwf	(?___ftpack+2)
  9729  0C4A  0852               	movf	(___ftmul@exp),w
  9730  0C4B  00CE               	movwf	(??___ftmul+0)+0
  9731  0C4C  084E               	movf	(??___ftmul+0)+0,w
  9732  0C4D  00AD               	movwf	0+(?___ftpack)+03h
  9733  0C4E  0857               	movf	(___ftmul@sign),w
  9734  0C4F  00CF               	movwf	(??___ftmul+1)+0
  9735  0C50  084F               	movf	(??___ftmul+1)+0,w
  9736  0C51  00AE               	movwf	0+(?___ftpack)+04h
  9737  0C52  120A  118A  277C   	fcall	___ftpack
              120A  158A         
  9738  0C57  1283               	bcf	status, 5	;RP0=0, select bank0
  9739  0C58  1303               	bcf	status, 6	;RP1=0, select bank0
  9740  0C59  082A               	movf	(0+(?___ftpack)),w
  9741  0C5A  00C8               	movwf	(?___ftmul)
  9742  0C5B  082B               	movf	(1+(?___ftpack)),w
  9743  0C5C  00C9               	movwf	(?___ftmul+1)
  9744  0C5D  082C               	movf	(2+(?___ftpack)),w
  9745  0C5E  00CA               	movwf	(?___ftmul+2)
  9746  0C5F  2C60               	goto	l6950
  9747                           	
  9748  0C60                     l11889:	
  9749                           	line	84
  9750                           	
  9751  0C60                     l6950:	
  9752  0C60  0008               	return
  9753                           	opt stack 0
  9754                           GLOBAL	__end_of___ftmul
  9755  0C61                     	__end_of___ftmul:
  9756 ;; =============== function ___ftmul ends ============
  9757                           
  9758                           	signat	___ftmul,8315
  9759                           	global	___ftadd
  9760                           psect	text2229,local,class=CODE,delta=2
  9761                           global __ptext2229
  9762  05EF                     __ptext2229:
  9763                           
  9764 ;; *************** function ___ftadd *****************
  9765 ;; Defined at:
  9766 ;;		line 87 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\ftadd.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;  f1              3    0[BANK1 ] float 
  9769 ;;  f2              3    3[BANK1 ] float 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;  exp1            1    8[BANK1 ] unsigned char 
  9772 ;;  exp2            1    7[BANK1 ] unsigned char 
  9773 ;;  sign            1    6[BANK1 ] unsigned char 
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  3    0[BANK1 ] float 
  9776 ;; Registers used:
  9777 ;;		wreg, status,2, status,0, pclath, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9783 ;;      Params:         0       0       6       0       0
  9784 ;;      Locals:         0       0       3       0       0
  9785 ;;      Temps:          0       4       0       0       0
  9786 ;;      Totals:         0       4       9       0       0
  9787 ;;Total ram usage:       13 bytes
  9788 ;; Hardware stack levels used:    1
  9789 ;; Hardware stack levels required when called:    3
  9790 ;; This function calls:
  9791 ;;		___ftpack
  9792 ;; This function is called by:
  9793 ;;		_goParallel
  9794 ;;		___ftsub
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           psect	text2229
  9798                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\ftadd.c"
  9799                           	line	87
  9800                           	global	__size_of___ftadd
  9801  018D                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  9802                           	
  9803  05EF                     ___ftadd:	
  9804                           	opt	stack 3
  9805                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9806                           	line	90
  9807                           	
  9808  05EF                     l11771:	
  9809  05EF  1683               	bsf	status, 5	;RP0=1, select bank1
  9810  05F0  1303               	bcf	status, 6	;RP1=0, select bank1
  9811  05F1  084E               	movf	(___ftadd@f1)^080h,w
  9812  05F2  1283               	bcf	status, 5	;RP0=0, select bank0
  9813  05F3  1303               	bcf	status, 6	;RP1=0, select bank0
  9814  05F4  00D8               	movwf	((??___ftadd+0)+0)
  9815  05F5  1683               	bsf	status, 5	;RP0=1, select bank1
  9816  05F6  1303               	bcf	status, 6	;RP1=0, select bank1
  9817  05F7  084F               	movf	(___ftadd@f1+1)^080h,w
  9818  05F8  1283               	bcf	status, 5	;RP0=0, select bank0
  9819  05F9  1303               	bcf	status, 6	;RP1=0, select bank0
  9820  05FA  00D9               	movwf	((??___ftadd+0)+0+1)
  9821  05FB  1683               	bsf	status, 5	;RP0=1, select bank1
  9822  05FC  1303               	bcf	status, 6	;RP1=0, select bank1
  9823  05FD  0850               	movf	(___ftadd@f1+2)^080h,w
  9824  05FE  1283               	bcf	status, 5	;RP0=0, select bank0
  9825  05FF  1303               	bcf	status, 6	;RP1=0, select bank0
  9826  0600  00DA               	movwf	((??___ftadd+0)+0+2)
  9827  0601  1003               	clrc
  9828  0602  0D59               	rlf	(??___ftadd+0)+1,w
  9829  0603  0D5A               	rlf	(??___ftadd+0)+2,w
  9830  0604  00DB               	movwf	(??___ftadd+3)+0
  9831  0605  085B               	movf	(??___ftadd+3)+0,w
  9832  0606  1683               	bsf	status, 5	;RP0=1, select bank1
  9833  0607  1303               	bcf	status, 6	;RP1=0, select bank1
  9834  0608  00D6               	movwf	(___ftadd@exp1)^080h
  9835                           	line	91
  9836  0609  0851               	movf	(___ftadd@f2)^080h,w
  9837  060A  1283               	bcf	status, 5	;RP0=0, select bank0
  9838  060B  1303               	bcf	status, 6	;RP1=0, select bank0
  9839  060C  00D8               	movwf	((??___ftadd+0)+0)
  9840  060D  1683               	bsf	status, 5	;RP0=1, select bank1
  9841  060E  1303               	bcf	status, 6	;RP1=0, select bank1
  9842  060F  0852               	movf	(___ftadd@f2+1)^080h,w
  9843  0610  1283               	bcf	status, 5	;RP0=0, select bank0
  9844  0611  1303               	bcf	status, 6	;RP1=0, select bank0
  9845  0612  00D9               	movwf	((??___ftadd+0)+0+1)
  9846  0613  1683               	bsf	status, 5	;RP0=1, select bank1
  9847  0614  1303               	bcf	status, 6	;RP1=0, select bank1
  9848  0615  0853               	movf	(___ftadd@f2+2)^080h,w
  9849  0616  1283               	bcf	status, 5	;RP0=0, select bank0
  9850  0617  1303               	bcf	status, 6	;RP1=0, select bank0
  9851  0618  00DA               	movwf	((??___ftadd+0)+0+2)
  9852  0619  1003               	clrc
  9853  061A  0D59               	rlf	(??___ftadd+0)+1,w
  9854  061B  0D5A               	rlf	(??___ftadd+0)+2,w
  9855  061C  00DB               	movwf	(??___ftadd+3)+0
  9856  061D  085B               	movf	(??___ftadd+3)+0,w
  9857  061E  1683               	bsf	status, 5	;RP0=1, select bank1
  9858  061F  1303               	bcf	status, 6	;RP1=0, select bank1
  9859  0620  00D5               	movwf	(___ftadd@exp2)^080h
  9860                           	line	92
  9861                           	
  9862  0621                     l11773:	
  9863  0621  0856               	movf	(___ftadd@exp1)^080h,w
  9864  0622  1D03               	skipz
  9865  0623  2E25               	goto	u6520
  9866  0624  2E38               	goto	l11779
  9867  0625                     u6520:
  9868                           	
  9869  0625                     l11775:	
  9870  0625  0855               	movf	(___ftadd@exp2)^080h,w
  9871  0626  0256               	subwf	(___ftadd@exp1)^080h,w
  9872  0627  1803               	skipnc
  9873  0628  2E2A               	goto	u6531
  9874  0629  2E2B               	goto	u6530
  9875  062A                     u6531:
  9876  062A  2E42               	goto	l11783
  9877  062B                     u6530:
  9878                           	
  9879  062B                     l11777:	
  9880  062B  0356               	decf	(___ftadd@exp1)^080h,w
  9881  062C  3AFF               	xorlw	0ffh
  9882  062D  0755               	addwf	(___ftadd@exp2)^080h,w
  9883  062E  1283               	bcf	status, 5	;RP0=0, select bank0
  9884  062F  1303               	bcf	status, 6	;RP1=0, select bank0
  9885  0630  00D8               	movwf	(??___ftadd+0)+0
  9886  0631  3019               	movlw	(019h)
  9887  0632  0258               	subwf	0+(??___ftadd+0)+0,w
  9888  0633  1C03               	skipc
  9889  0634  2E36               	goto	u6541
  9890  0635  2E37               	goto	u6540
  9891  0636                     u6541:
  9892  0636  2E42               	goto	l11783
  9893  0637                     u6540:
  9894  0637  2E38               	goto	l11779
  9895                           	
  9896  0638                     l6897:	
  9897                           	line	93
  9898                           	
  9899  0638                     l11779:	
  9900  0638  1683               	bsf	status, 5	;RP0=1, select bank1
  9901  0639  1303               	bcf	status, 6	;RP1=0, select bank1
  9902  063A  0851               	movf	(___ftadd@f2)^080h,w
  9903  063B  00CE               	movwf	(?___ftadd)^080h
  9904  063C  0852               	movf	(___ftadd@f2+1)^080h,w
  9905  063D  00CF               	movwf	(?___ftadd+1)^080h
  9906  063E  0853               	movf	(___ftadd@f2+2)^080h,w
  9907  063F  00D0               	movwf	(?___ftadd+2)^080h
  9908  0640  2F7B               	goto	l6898
  9909                           	
  9910  0641                     l11781:	
  9911  0641  2F7B               	goto	l6898
  9912                           	
  9913  0642                     l6895:	
  9914                           	line	94
  9915                           	
  9916  0642                     l11783:	
  9917  0642  1683               	bsf	status, 5	;RP0=1, select bank1
  9918  0643  1303               	bcf	status, 6	;RP1=0, select bank1
  9919  0644  0855               	movf	(___ftadd@exp2)^080h,w
  9920  0645  1D03               	skipz
  9921  0646  2E48               	goto	u6550
  9922  0647  2E5A               	goto	l6901
  9923  0648                     u6550:
  9924                           	
  9925  0648                     l11785:	
  9926  0648  0856               	movf	(___ftadd@exp1)^080h,w
  9927  0649  0255               	subwf	(___ftadd@exp2)^080h,w
  9928  064A  1803               	skipnc
  9929  064B  2E4D               	goto	u6561
  9930  064C  2E4E               	goto	u6560
  9931  064D                     u6561:
  9932  064D  2E5B               	goto	l11789
  9933  064E                     u6560:
  9934                           	
  9935  064E                     l11787:	
  9936  064E  0355               	decf	(___ftadd@exp2)^080h,w
  9937  064F  3AFF               	xorlw	0ffh
  9938  0650  0756               	addwf	(___ftadd@exp1)^080h,w
  9939  0651  1283               	bcf	status, 5	;RP0=0, select bank0
  9940  0652  1303               	bcf	status, 6	;RP1=0, select bank0
  9941  0653  00D8               	movwf	(??___ftadd+0)+0
  9942  0654  3019               	movlw	(019h)
  9943  0655  0258               	subwf	0+(??___ftadd+0)+0,w
  9944  0656  1C03               	skipc
  9945  0657  2E59               	goto	u6571
  9946  0658  2E5A               	goto	u6570
  9947  0659                     u6571:
  9948  0659  2E5B               	goto	l11789
  9949  065A                     u6570:
  9950                           	
  9951  065A                     l6901:	
  9952                           	line	95
  9953  065A  2F7B               	goto	l6898
  9954                           	
  9955  065B                     l6899:	
  9956                           	line	96
  9957                           	
  9958  065B                     l11789:	
  9959  065B  3006               	movlw	(06h)
  9960  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  9961  065D  00D8               	movwf	(??___ftadd+0)+0
  9962  065E  0858               	movf	(??___ftadd+0)+0,w
  9963  065F  1683               	bsf	status, 5	;RP0=1, select bank1
  9964  0660  1303               	bcf	status, 6	;RP1=0, select bank1
  9965  0661  00D4               	movwf	(___ftadd@sign)^080h
  9966                           	line	97
  9967                           	
  9968  0662                     l11791:	
  9969  0662  1FD0               	btfss	(___ftadd@f1+2)^080h,(23)&7
  9970  0663  2E65               	goto	u6581
  9971  0664  2E66               	goto	u6580
  9972  0665                     u6581:
  9973  0665  2E67               	goto	l6902
  9974  0666                     u6580:
  9975                           	line	98
  9976                           	
  9977  0666                     l11793:	
  9978  0666  17D4               	bsf	(___ftadd@sign)^080h+(7/8),(7)&7
  9979                           	
  9980  0667                     l6902:	
  9981                           	line	99
  9982  0667  1FD3               	btfss	(___ftadd@f2+2)^080h,(23)&7
  9983  0668  2E6A               	goto	u6591
  9984  0669  2E6B               	goto	u6590
  9985  066A                     u6591:
  9986  066A  2E6C               	goto	l6903
  9987  066B                     u6590:
  9988                           	line	100
  9989                           	
  9990  066B                     l11795:	
  9991  066B  1754               	bsf	(___ftadd@sign)^080h+(6/8),(6)&7
  9992                           	
  9993  066C                     l6903:	
  9994                           	line	101
  9995  066C  17CF               	bsf	(___ftadd@f1)^080h+(15/8),(15)&7
  9996                           	line	102
  9997                           	
  9998  066D                     l11797:	
  9999  066D  30FF               	movlw	0FFh
 10000  066E  05CE               	andwf	(___ftadd@f1)^080h,f
 10001  066F  30FF               	movlw	0FFh
 10002  0670  05CF               	andwf	(___ftadd@f1+1)^080h,f
 10003  0671  3000               	movlw	0
 10004  0672  05D0               	andwf	(___ftadd@f1+2)^080h,f
 10005                           	line	103
 10006                           	
 10007  0673                     l11799:	
 10008  0673  17D2               	bsf	(___ftadd@f2)^080h+(15/8),(15)&7
 10009                           	line	104
 10010  0674  30FF               	movlw	0FFh
 10011  0675  05D1               	andwf	(___ftadd@f2)^080h,f
 10012  0676  30FF               	movlw	0FFh
 10013  0677  05D2               	andwf	(___ftadd@f2+1)^080h,f
 10014  0678  3000               	movlw	0
 10015  0679  05D3               	andwf	(___ftadd@f2+2)^080h,f
 10016                           	line	106
 10017  067A  0855               	movf	(___ftadd@exp2)^080h,w
 10018  067B  0256               	subwf	(___ftadd@exp1)^080h,w
 10019  067C  1803               	skipnc
 10020  067D  2E7F               	goto	u6601
 10021  067E  2E80               	goto	u6600
 10022  067F                     u6601:
 10023  067F  2EB5               	goto	l11811
 10024  0680                     u6600:
 10025  0680  2E81               	goto	l11801
 10026                           	line	109
 10027                           	
 10028  0681                     l6905:	
 10029                           	line	110
 10030                           	
 10031  0681                     l11801:	
 10032  0681  3001               	movlw	01h
 10033  0682                     u6615:
 10034  0682  1003               	clrc
 10035  0683  0DD1               	rlf	(___ftadd@f2)^080h,f
 10036  0684  0DD2               	rlf	(___ftadd@f2+1)^080h,f
 10037  0685  0DD3               	rlf	(___ftadd@f2+2)^080h,f
 10038  0686  3EFF               	addlw	-1
 10039  0687  1D03               	skipz
 10040  0688  2E82               	goto	u6615
 10041                           	line	111
 10042  0689  3001               	movlw	low(01h)
 10043  068A  02D5               	subwf	(___ftadd@exp2)^080h,f
 10044                           	line	112
 10045                           	
 10046  068B                     l11803:	
 10047  068B  0855               	movf	(___ftadd@exp2)^080h,w
 10048  068C  0656               	xorwf	(___ftadd@exp1)^080h,w
 10049  068D  1903               	skipnz
 10050  068E  2E90               	goto	u6621
 10051  068F  2E91               	goto	u6620
 10052  0690                     u6621:
 10053  0690  2EAD               	goto	l11809
 10054  0691                     u6620:
 10055                           	
 10056  0691                     l11805:	
 10057  0691  3001               	movlw	low(01h)
 10058  0692  02D4               	subwf	(___ftadd@sign)^080h,f
 10059  0693  0854               	movf	((___ftadd@sign)^080h),w
 10060  0694  3907               	andlw	07h
 10061  0695  1D03               	btfss	status,2
 10062  0696  2E98               	goto	u6631
 10063  0697  2E99               	goto	u6630
 10064  0698                     u6631:
 10065  0698  2E81               	goto	l11801
 10066  0699                     u6630:
 10067  0699  2EAD               	goto	l11809
 10068                           	
 10069  069A                     l6907:	
 10070  069A  2EAD               	goto	l11809
 10071                           	
 10072  069B                     l6908:	
 10073                           	line	113
 10074  069B  2EAD               	goto	l11809
 10075                           	
 10076  069C                     l6910:	
 10077                           	line	114
 10078                           	
 10079  069C                     l11807:	
 10080  069C  3001               	movlw	01h
 10081  069D                     u6645:
 10082  069D  1003               	clrc
 10083  069E  0CD0               	rrf	(___ftadd@f1+2)^080h,f
 10084  069F  0CCF               	rrf	(___ftadd@f1+1)^080h,f
 10085  06A0  0CCE               	rrf	(___ftadd@f1)^080h,f
 10086  06A1  3EFF               	addlw	-1
 10087  06A2  1D03               	skipz
 10088  06A3  2E9D               	goto	u6645
 10089                           
 10090                           	line	115
 10091  06A4  3001               	movlw	(01h)
 10092  06A5  1283               	bcf	status, 5	;RP0=0, select bank0
 10093  06A6  1303               	bcf	status, 6	;RP1=0, select bank0
 10094  06A7  00D8               	movwf	(??___ftadd+0)+0
 10095  06A8  0858               	movf	(??___ftadd+0)+0,w
 10096  06A9  1683               	bsf	status, 5	;RP0=1, select bank1
 10097  06AA  1303               	bcf	status, 6	;RP1=0, select bank1
 10098  06AB  07D6               	addwf	(___ftadd@exp1)^080h,f
 10099  06AC  2EAD               	goto	l11809
 10100                           	line	116
 10101                           	
 10102  06AD                     l6909:	
 10103                           	line	113
 10104                           	
 10105  06AD                     l11809:	
 10106  06AD  0856               	movf	(___ftadd@exp1)^080h,w
 10107  06AE  0655               	xorwf	(___ftadd@exp2)^080h,w
 10108  06AF  1D03               	skipz
 10109  06B0  2EB2               	goto	u6651
 10110  06B1  2EB3               	goto	u6650
 10111  06B2                     u6651:
 10112  06B2  2E9C               	goto	l11807
 10113  06B3                     u6650:
 10114  06B3  2EF0               	goto	l6912
 10115                           	
 10116  06B4                     l6911:	
 10117                           	line	117
 10118  06B4  2EF0               	goto	l6912
 10119                           	
 10120  06B5                     l6904:	
 10121                           	
 10122  06B5                     l11811:	
 10123  06B5  0856               	movf	(___ftadd@exp1)^080h,w
 10124  06B6  0255               	subwf	(___ftadd@exp2)^080h,w
 10125  06B7  1803               	skipnc
 10126  06B8  2EBA               	goto	u6661
 10127  06B9  2EBB               	goto	u6660
 10128  06BA                     u6661:
 10129  06BA  2EF0               	goto	l6912
 10130  06BB                     u6660:
 10131  06BB  2EBC               	goto	l11813
 10132                           	line	120
 10133                           	
 10134  06BC                     l6914:	
 10135                           	line	121
 10136                           	
 10137  06BC                     l11813:	
 10138  06BC  3001               	movlw	01h
 10139  06BD                     u6675:
 10140  06BD  1003               	clrc
 10141  06BE  0DCE               	rlf	(___ftadd@f1)^080h,f
 10142  06BF  0DCF               	rlf	(___ftadd@f1+1)^080h,f
 10143  06C0  0DD0               	rlf	(___ftadd@f1+2)^080h,f
 10144  06C1  3EFF               	addlw	-1
 10145  06C2  1D03               	skipz
 10146  06C3  2EBD               	goto	u6675
 10147                           	line	122
 10148  06C4  3001               	movlw	low(01h)
 10149  06C5  02D6               	subwf	(___ftadd@exp1)^080h,f
 10150                           	line	123
 10151                           	
 10152  06C6                     l11815:	
 10153  06C6  0855               	movf	(___ftadd@exp2)^080h,w
 10154  06C7  0656               	xorwf	(___ftadd@exp1)^080h,w
 10155  06C8  1903               	skipnz
 10156  06C9  2ECB               	goto	u6681
 10157  06CA  2ECC               	goto	u6680
 10158  06CB                     u6681:
 10159  06CB  2EE8               	goto	l11821
 10160  06CC                     u6680:
 10161                           	
 10162  06CC                     l11817:	
 10163  06CC  3001               	movlw	low(01h)
 10164  06CD  02D4               	subwf	(___ftadd@sign)^080h,f
 10165  06CE  0854               	movf	((___ftadd@sign)^080h),w
 10166  06CF  3907               	andlw	07h
 10167  06D0  1D03               	btfss	status,2
 10168  06D1  2ED3               	goto	u6691
 10169  06D2  2ED4               	goto	u6690
 10170  06D3                     u6691:
 10171  06D3  2EBC               	goto	l11813
 10172  06D4                     u6690:
 10173  06D4  2EE8               	goto	l11821
 10174                           	
 10175  06D5                     l6916:	
 10176  06D5  2EE8               	goto	l11821
 10177                           	
 10178  06D6                     l6917:	
 10179                           	line	124
 10180  06D6  2EE8               	goto	l11821
 10181                           	
 10182  06D7                     l6919:	
 10183                           	line	125
 10184                           	
 10185  06D7                     l11819:	
 10186  06D7  3001               	movlw	01h
 10187  06D8                     u6705:
 10188  06D8  1003               	clrc
 10189  06D9  0CD3               	rrf	(___ftadd@f2+2)^080h,f
 10190  06DA  0CD2               	rrf	(___ftadd@f2+1)^080h,f
 10191  06DB  0CD1               	rrf	(___ftadd@f2)^080h,f
 10192  06DC  3EFF               	addlw	-1
 10193  06DD  1D03               	skipz
 10194  06DE  2ED8               	goto	u6705
 10195                           
 10196                           	line	126
 10197  06DF  3001               	movlw	(01h)
 10198  06E0  1283               	bcf	status, 5	;RP0=0, select bank0
 10199  06E1  1303               	bcf	status, 6	;RP1=0, select bank0
 10200  06E2  00D8               	movwf	(??___ftadd+0)+0
 10201  06E3  0858               	movf	(??___ftadd+0)+0,w
 10202  06E4  1683               	bsf	status, 5	;RP0=1, select bank1
 10203  06E5  1303               	bcf	status, 6	;RP1=0, select bank1
 10204  06E6  07D5               	addwf	(___ftadd@exp2)^080h,f
 10205  06E7  2EE8               	goto	l11821
 10206                           	line	127
 10207                           	
 10208  06E8                     l6918:	
 10209                           	line	124
 10210                           	
 10211  06E8                     l11821:	
 10212  06E8  0856               	movf	(___ftadd@exp1)^080h,w
 10213  06E9  0655               	xorwf	(___ftadd@exp2)^080h,w
 10214  06EA  1D03               	skipz
 10215  06EB  2EED               	goto	u6711
 10216  06EC  2EEE               	goto	u6710
 10217  06ED                     u6711:
 10218  06ED  2ED7               	goto	l11819
 10219  06EE                     u6710:
 10220  06EE  2EF0               	goto	l6912
 10221                           	
 10222  06EF                     l6920:	
 10223  06EF  2EF0               	goto	l6912
 10224                           	line	128
 10225                           	
 10226  06F0                     l6913:	
 10227                           	line	129
 10228                           	
 10229  06F0                     l6912:	
 10230  06F0  1FD4               	btfss	(___ftadd@sign)^080h,(7)&7
 10231  06F1  2EF3               	goto	u6721
 10232  06F2  2EF4               	goto	u6720
 10233  06F3                     u6721:
 10234  06F3  2F05               	goto	l11825
 10235  06F4                     u6720:
 10236                           	line	131
 10237                           	
 10238  06F4                     l11823:	
 10239  06F4  30FF               	movlw	0FFh
 10240  06F5  06CE               	xorwf	(___ftadd@f1)^080h,f
 10241  06F6  30FF               	movlw	0FFh
 10242  06F7  06CF               	xorwf	(___ftadd@f1+1)^080h,f
 10243  06F8  30FF               	movlw	0FFh
 10244  06F9  06D0               	xorwf	(___ftadd@f1+2)^080h,f
 10245                           	line	132
 10246  06FA  3001               	movlw	01h
 10247  06FB  07CE               	addwf	(___ftadd@f1)^080h,f
 10248  06FC  3000               	movlw	0
 10249  06FD  1803               	skipnc
 10250  06FE  3001               movlw 1
 10251  06FF  07CF               	addwf	(___ftadd@f1+1)^080h,f
 10252  0700  3000               	movlw	0
 10253  0701  1803               	skipnc
 10254  0702  3001               movlw 1
 10255  0703  07D0               	addwf	(___ftadd@f1+2)^080h,f
 10256  0704  2F05               	goto	l11825
 10257                           	line	133
 10258                           	
 10259  0705                     l6921:	
 10260                           	line	134
 10261                           	
 10262  0705                     l11825:	
 10263  0705  1F54               	btfss	(___ftadd@sign)^080h,(6)&7
 10264  0706  2F08               	goto	u6731
 10265  0707  2F09               	goto	u6730
 10266  0708                     u6731:
 10267  0708  2F1A               	goto	l11829
 10268  0709                     u6730:
 10269                           	line	136
 10270                           	
 10271  0709                     l11827:	
 10272  0709  30FF               	movlw	0FFh
 10273  070A  06D1               	xorwf	(___ftadd@f2)^080h,f
 10274  070B  30FF               	movlw	0FFh
 10275  070C  06D2               	xorwf	(___ftadd@f2+1)^080h,f
 10276  070D  30FF               	movlw	0FFh
 10277  070E  06D3               	xorwf	(___ftadd@f2+2)^080h,f
 10278                           	line	137
 10279  070F  3001               	movlw	01h
 10280  0710  07D1               	addwf	(___ftadd@f2)^080h,f
 10281  0711  3000               	movlw	0
 10282  0712  1803               	skipnc
 10283  0713  3001               movlw 1
 10284  0714  07D2               	addwf	(___ftadd@f2+1)^080h,f
 10285  0715  3000               	movlw	0
 10286  0716  1803               	skipnc
 10287  0717  3001               movlw 1
 10288  0718  07D3               	addwf	(___ftadd@f2+2)^080h,f
 10289  0719  2F1A               	goto	l11829
 10290                           	line	138
 10291                           	
 10292  071A                     l6922:	
 10293                           	line	139
 10294                           	
 10295  071A                     l11829:	
 10296  071A  01D4               	clrf	(___ftadd@sign)^080h
 10297                           	line	140
 10298  071B  084E               	movf	(___ftadd@f1)^080h,w
 10299  071C  07D1               	addwf	(___ftadd@f2)^080h,f
 10300  071D  084F               	movf	(___ftadd@f1+1)^080h,w
 10301  071E  1103               	clrz
 10302  071F  1803               	skipnc
 10303  0720  0A4F               	incf	(___ftadd@f1+1)^080h,w
 10304  0721  1903               	skipnz
 10305  0722  2F24               	goto	u6741
 10306  0723  07D2               	addwf	(___ftadd@f2+1)^080h,f
 10307  0724                     u6741:
 10308  0724  0850               	movf	(___ftadd@f1+2)^080h,w
 10309  0725  1103               	clrz
 10310  0726  1803               	skipnc
 10311  0727  0A50               	incf	(___ftadd@f1+2)^080h,w
 10312  0728  1903               	skipnz
 10313  0729  2F2B               	goto	u6742
 10314  072A  07D3               	addwf	(___ftadd@f2+2)^080h,f
 10315  072B                     u6742:
 10316                           
 10317                           	line	141
 10318                           	
 10319  072B                     l11831:	
 10320  072B  1FD3               	btfss	(___ftadd@f2+2)^080h,(23)&7
 10321  072C  2F2E               	goto	u6751
 10322  072D  2F2F               	goto	u6750
 10323  072E                     u6751:
 10324  072E  2F43               	goto	l11837
 10325  072F                     u6750:
 10326                           	line	142
 10327                           	
 10328  072F                     l11833:	
 10329  072F  30FF               	movlw	0FFh
 10330  0730  06D1               	xorwf	(___ftadd@f2)^080h,f
 10331  0731  30FF               	movlw	0FFh
 10332  0732  06D2               	xorwf	(___ftadd@f2+1)^080h,f
 10333  0733  30FF               	movlw	0FFh
 10334  0734  06D3               	xorwf	(___ftadd@f2+2)^080h,f
 10335                           	line	143
 10336  0735  3001               	movlw	01h
 10337  0736  07D1               	addwf	(___ftadd@f2)^080h,f
 10338  0737  3000               	movlw	0
 10339  0738  1803               	skipnc
 10340  0739  3001               movlw 1
 10341  073A  07D2               	addwf	(___ftadd@f2+1)^080h,f
 10342  073B  3000               	movlw	0
 10343  073C  1803               	skipnc
 10344  073D  3001               movlw 1
 10345  073E  07D3               	addwf	(___ftadd@f2+2)^080h,f
 10346                           	line	144
 10347                           	
 10348  073F                     l11835:	
 10349  073F  01D4               	clrf	(___ftadd@sign)^080h
 10350  0740  1403               	bsf	status,0
 10351  0741  0DD4               	rlf	(___ftadd@sign)^080h,f
 10352  0742  2F43               	goto	l11837
 10353                           	line	145
 10354                           	
 10355  0743                     l6923:	
 10356                           	line	146
 10357                           	
 10358  0743                     l11837:	
 10359  0743  0851               	movf	(___ftadd@f2)^080h,w
 10360  0744  1283               	bcf	status, 5	;RP0=0, select bank0
 10361  0745  1303               	bcf	status, 6	;RP1=0, select bank0
 10362  0746  00AA               	movwf	(?___ftpack)
 10363  0747  1683               	bsf	status, 5	;RP0=1, select bank1
 10364  0748  1303               	bcf	status, 6	;RP1=0, select bank1
 10365  0749  0852               	movf	(___ftadd@f2+1)^080h,w
 10366  074A  1283               	bcf	status, 5	;RP0=0, select bank0
 10367  074B  1303               	bcf	status, 6	;RP1=0, select bank0
 10368  074C  00AB               	movwf	(?___ftpack+1)
 10369  074D  1683               	bsf	status, 5	;RP0=1, select bank1
 10370  074E  1303               	bcf	status, 6	;RP1=0, select bank1
 10371  074F  0853               	movf	(___ftadd@f2+2)^080h,w
 10372  0750  1283               	bcf	status, 5	;RP0=0, select bank0
 10373  0751  1303               	bcf	status, 6	;RP1=0, select bank0
 10374  0752  00AC               	movwf	(?___ftpack+2)
 10375  0753  1683               	bsf	status, 5	;RP0=1, select bank1
 10376  0754  1303               	bcf	status, 6	;RP1=0, select bank1
 10377  0755  0856               	movf	(___ftadd@exp1)^080h,w
 10378  0756  1283               	bcf	status, 5	;RP0=0, select bank0
 10379  0757  1303               	bcf	status, 6	;RP1=0, select bank0
 10380  0758  00D8               	movwf	(??___ftadd+0)+0
 10381  0759  0858               	movf	(??___ftadd+0)+0,w
 10382  075A  00AD               	movwf	0+(?___ftpack)+03h
 10383  075B  1683               	bsf	status, 5	;RP0=1, select bank1
 10384  075C  1303               	bcf	status, 6	;RP1=0, select bank1
 10385  075D  0854               	movf	(___ftadd@sign)^080h,w
 10386  075E  1283               	bcf	status, 5	;RP0=0, select bank0
 10387  075F  1303               	bcf	status, 6	;RP1=0, select bank0
 10388  0760  00D9               	movwf	(??___ftadd+1)+0
 10389  0761  0859               	movf	(??___ftadd+1)+0,w
 10390  0762  00AE               	movwf	0+(?___ftpack)+04h
 10391  0763  120A  118A  277C   	fcall	___ftpack
              120A  118A         
 10392  0768  1283               	bcf	status, 5	;RP0=0, select bank0
 10393  0769  1303               	bcf	status, 6	;RP1=0, select bank0
 10394  076A  082A               	movf	(0+(?___ftpack)),w
 10395  076B  1683               	bsf	status, 5	;RP0=1, select bank1
 10396  076C  1303               	bcf	status, 6	;RP1=0, select bank1
 10397  076D  00CE               	movwf	(?___ftadd)^080h
 10398  076E  1283               	bcf	status, 5	;RP0=0, select bank0
 10399  076F  1303               	bcf	status, 6	;RP1=0, select bank0
 10400  0770  082B               	movf	(1+(?___ftpack)),w
 10401  0771  1683               	bsf	status, 5	;RP0=1, select bank1
 10402  0772  1303               	bcf	status, 6	;RP1=0, select bank1
 10403  0773  00CF               	movwf	(?___ftadd+1)^080h
 10404  0774  1283               	bcf	status, 5	;RP0=0, select bank0
 10405  0775  1303               	bcf	status, 6	;RP1=0, select bank0
 10406  0776  082C               	movf	(2+(?___ftpack)),w
 10407  0777  1683               	bsf	status, 5	;RP0=1, select bank1
 10408  0778  1303               	bcf	status, 6	;RP1=0, select bank1
 10409  0779  00D0               	movwf	(?___ftadd+2)^080h
 10410  077A  2F7B               	goto	l6898
 10411                           	
 10412  077B                     l11839:	
 10413                           	line	148
 10414                           	
 10415  077B                     l6898:	
 10416  077B  0008               	return
 10417                           	opt stack 0
 10418                           GLOBAL	__end_of___ftadd
 10419  077C                     	__end_of___ftadd:
 10420 ;; =============== function ___ftadd ends ============
 10421                           
 10422                           	signat	___ftadd,8315
 10423                           	global	_initIRobot
 10424                           psect	text2230,local,class=CODE,delta=2
 10425                           global __ptext2230
 10426  1F4D                     __ptext2230:
 10427                           
 10428 ;; *************** function _initIRobot *****************
 10429 ;; Defined at:
 10430 ;;		line 147 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;		None
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;		None               void
 10437 ;; Registers used:
 10438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10444 ;;      Params:         0       0       0       0       0
 10445 ;;      Locals:         0       0       0       0       0
 10446 ;;      Temps:          0       3       0       0       0
 10447 ;;      Totals:         0       3       0       0       0
 10448 ;;Total ram usage:        3 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:    3
 10451 ;; This function calls:
 10452 ;;		_ser_putch
 10453 ;; This function is called by:
 10454 ;;		_init
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           psect	text2230
 10458                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
 10459                           	line	147
 10460                           	global	__size_of_initIRobot
 10461  001B                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
 10462                           	
 10463  1F4D                     _initIRobot:	
 10464                           	opt	stack 3
 10465                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10466                           	line	148
 10467                           	
 10468  1F4D                     l11765:	
 10469                           ;main.c: 148: _delay((unsigned long)((100)*(20000000/4000.0)));
 10470                           	opt asmopt_off
 10471  1F4D  3003               movlw  3
 10472  1F4E  1283               	bcf	status, 5	;RP0=0, select bank0
 10473  1F4F  1303               	bcf	status, 6	;RP1=0, select bank0
 10474  1F50  00AE               movwf	((??_initIRobot+0)+0+2),f
 10475  1F51  3088               movlw	136
 10476  1F52  00AD               movwf	((??_initIRobot+0)+0+1),f
 10477  1F53  3056               	movlw	86
 10478  1F54  00AC               movwf	((??_initIRobot+0)+0),f
 10479  1F55                     u7927:
 10480  1F55  0BAC               	decfsz	((??_initIRobot+0)+0),f
 10481  1F56  2F55               	goto	u7927
 10482  1F57  0BAD               	decfsz	((??_initIRobot+0)+0+1),f
 10483  1F58  2F55               	goto	u7927
 10484  1F59  0BAE               	decfsz	((??_initIRobot+0)+0+2),f
 10485  1F5A  2F55               	goto	u7927
 10486                           opt asmopt_on
 10487                           
 10488                           	line	149
 10489                           	
 10490  1F5B                     l11767:	
 10491                           ;main.c: 149: ser_putch(128);
 10492  1F5B  3080               	movlw	(080h)
 10493  1F5C  160A  158A  27DF   	fcall	_ser_putch
              160A  158A         
 10494                           	line	150
 10495                           	
 10496  1F61                     l11769:	
 10497                           ;main.c: 150: ser_putch(132);
 10498  1F61  3084               	movlw	(084h)
 10499  1F62  160A  158A  27DF   	fcall	_ser_putch
              160A  158A         
 10500                           	line	151
 10501                           	
 10502  1F67                     l6723:	
 10503  1F67  0008               	return
 10504                           	opt stack 0
 10505                           GLOBAL	__end_of_initIRobot
 10506  1F68                     	__end_of_initIRobot:
 10507 ;; =============== function _initIRobot ends ============
 10508                           
 10509                           	signat	_initIRobot,88
 10510                           	global	_waitFor
 10511                           psect	text2231,local,class=CODE,delta=2
 10512                           global __ptext2231
 10513  110F                     __ptext2231:
 10514                           
 10515 ;; *************** function _waitFor *****************
 10516 ;; Defined at:
 10517 ;;		line 252 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  type            1    wreg     unsigned char 
 10520 ;;  highByte        1   12[BANK0 ] unsigned char 
 10521 ;;  lowByte         1   13[BANK0 ] unsigned char 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  type            1   17[BANK0 ] unsigned char 
 10524 ;; Return value:  Size  Location     Type
 10525 ;;		None               void
 10526 ;; Registers used:
 10527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10533 ;;      Params:         0       2       0       0       0
 10534 ;;      Locals:         0       1       0       0       0
 10535 ;;      Temps:          0       3       0       0       0
 10536 ;;      Totals:         0       6       0       0       0
 10537 ;;Total ram usage:        6 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; Hardware stack levels required when called:    3
 10540 ;; This function calls:
 10541 ;;		_ser_putch
 10542 ;; This function is called by:
 10543 ;;		_goReverse
 10544 ;;		_turnAround
 10545 ;;		_turnLeft90
 10546 ;;		_turnRight90
 10547 ;;		_goParallel
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           psect	text2231
 10551                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
 10552                           	line	252
 10553                           	global	__size_of_waitFor
 10554  0028                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
 10555                           	
 10556  110F                     _waitFor:	
 10557                           	opt	stack 1
 10558                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10559                           ;waitFor@type stored from wreg
 10560  110F  1283               	bcf	status, 5	;RP0=0, select bank0
 10561  1110  1303               	bcf	status, 6	;RP1=0, select bank0
 10562  1111  00B1               	movwf	(waitFor@type)
 10563                           	line	253
 10564                           	
 10565  1112                     l11757:	
 10566                           ;drive.c: 253: _delay((unsigned long)((100)*(20000000/4000.0)));
 10567                           	opt asmopt_off
 10568  1112  3003               movlw  3
 10569  1113  00B0               movwf	((??_waitFor+0)+0+2),f
 10570  1114  3088               movlw	136
 10571  1115  00AF               movwf	((??_waitFor+0)+0+1),f
 10572  1116  3056               	movlw	86
 10573  1117  00AE               movwf	((??_waitFor+0)+0),f
 10574  1118                     u7937:
 10575  1118  0BAE               	decfsz	((??_waitFor+0)+0),f
 10576  1119  2918               	goto	u7937
 10577  111A  0BAF               	decfsz	((??_waitFor+0)+0+1),f
 10578  111B  2918               	goto	u7937
 10579  111C  0BB0               	decfsz	((??_waitFor+0)+0+2),f
 10580  111D  2918               	goto	u7937
 10581                           opt asmopt_on
 10582                           
 10583                           	line	254
 10584                           	
 10585  111E                     l11759:	
 10586                           ;drive.c: 254: ser_putch(type);
 10587  111E  1283               	bcf	status, 5	;RP0=0, select bank0
 10588  111F  1303               	bcf	status, 6	;RP1=0, select bank0
 10589  1120  0831               	movf	(waitFor@type),w
 10590  1121  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10591                           	line	255
 10592                           	
 10593  1126                     l11761:	
 10594                           ;drive.c: 255: ser_putch(highByte);
 10595  1126  1283               	bcf	status, 5	;RP0=0, select bank0
 10596  1127  1303               	bcf	status, 6	;RP1=0, select bank0
 10597  1128  082C               	movf	(waitFor@highByte),w
 10598  1129  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10599                           	line	256
 10600                           	
 10601  112E                     l11763:	
 10602                           ;drive.c: 256: ser_putch(lowByte);
 10603  112E  1283               	bcf	status, 5	;RP0=0, select bank0
 10604  112F  1303               	bcf	status, 6	;RP1=0, select bank0
 10605  1130  082D               	movf	(waitFor@lowByte),w
 10606  1131  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10607                           	line	257
 10608                           	
 10609  1136                     l5884:	
 10610  1136  0008               	return
 10611                           	opt stack 0
 10612                           GLOBAL	__end_of_waitFor
 10613  1137                     	__end_of_waitFor:
 10614 ;; =============== function _waitFor ends ============
 10615                           
 10616                           	signat	_waitFor,12408
 10617                           	global	_drive
 10618                           psect	text2232,local,class=CODE,delta=2
 10619                           global __ptext2232
 10620  1217                     __ptext2232:
 10621                           
 10622 ;; *************** function _drive *****************
 10623 ;; Defined at:
 10624 ;;		line 21 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\drive.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  highByteSpee    1    wreg     unsigned char 
 10627 ;;  lowByteSpeed    1   12[BANK0 ] unsigned char 
 10628 ;;  highByteRadi    1   13[BANK0 ] unsigned char 
 10629 ;;  lowByteRadiu    1   14[BANK0 ] unsigned char 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;  highByteSpee    1   18[BANK0 ] unsigned char 
 10632 ;; Return value:  Size  Location     Type
 10633 ;;		None               void
 10634 ;; Registers used:
 10635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10641 ;;      Params:         0       3       0       0       0
 10642 ;;      Locals:         0       1       0       0       0
 10643 ;;      Temps:          0       3       0       0       0
 10644 ;;      Totals:         0       7       0       0       0
 10645 ;;Total ram usage:        7 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:    3
 10648 ;; This function calls:
 10649 ;;		_ser_putch
 10650 ;; This function is called by:
 10651 ;;		_driveForDistance
 10652 ;;		_goReverse
 10653 ;;		_turnAround
 10654 ;;		_turnLeft90
 10655 ;;		_turnRight90
 10656 ;;		_frontWallCorrect
 10657 ;;		_goParallel
 10658 ;;		_checkIfHome
 10659 ;;		_main
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           psect	text2232
 10663                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
 10664                           	line	21
 10665                           	global	__size_of_drive
 10666  0036                     	__size_of_drive	equ	__end_of_drive-_drive
 10667                           	
 10668  1217                     _drive:	
 10669                           	opt	stack 3
 10670                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10671                           ;drive@highByteSpeed stored from wreg
 10672  1217  1283               	bcf	status, 5	;RP0=0, select bank0
 10673  1218  1303               	bcf	status, 6	;RP1=0, select bank0
 10674  1219  00B2               	movwf	(drive@highByteSpeed)
 10675                           	line	22
 10676                           	
 10677  121A                     l11745:	
 10678                           ;drive.c: 22: _delay((unsigned long)((100)*(20000000/4000.0)));
 10679                           	opt asmopt_off
 10680  121A  3003               movlw  3
 10681  121B  00B1               movwf	((??_drive+0)+0+2),f
 10682  121C  3088               movlw	136
 10683  121D  00B0               movwf	((??_drive+0)+0+1),f
 10684  121E  3056               	movlw	86
 10685  121F  00AF               movwf	((??_drive+0)+0),f
 10686  1220                     u7947:
 10687  1220  0BAF               	decfsz	((??_drive+0)+0),f
 10688  1221  2A20               	goto	u7947
 10689  1222  0BB0               	decfsz	((??_drive+0)+0+1),f
 10690  1223  2A20               	goto	u7947
 10691  1224  0BB1               	decfsz	((??_drive+0)+0+2),f
 10692  1225  2A20               	goto	u7947
 10693                           opt asmopt_on
 10694                           
 10695                           	line	23
 10696                           	
 10697  1226                     l11747:	
 10698                           ;drive.c: 23: ser_putch(137);
 10699  1226  3089               	movlw	(089h)
 10700  1227  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10701                           	line	24
 10702                           	
 10703  122C                     l11749:	
 10704                           ;drive.c: 24: ser_putch(highByteSpeed);
 10705  122C  1283               	bcf	status, 5	;RP0=0, select bank0
 10706  122D  1303               	bcf	status, 6	;RP1=0, select bank0
 10707  122E  0832               	movf	(drive@highByteSpeed),w
 10708  122F  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10709                           	line	25
 10710                           	
 10711  1234                     l11751:	
 10712                           ;drive.c: 25: ser_putch(lowByteSpeed);
 10713  1234  1283               	bcf	status, 5	;RP0=0, select bank0
 10714  1235  1303               	bcf	status, 6	;RP1=0, select bank0
 10715  1236  082C               	movf	(drive@lowByteSpeed),w
 10716  1237  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10717                           	line	26
 10718                           	
 10719  123C                     l11753:	
 10720                           ;drive.c: 26: ser_putch(highByteRadius);
 10721  123C  1283               	bcf	status, 5	;RP0=0, select bank0
 10722  123D  1303               	bcf	status, 6	;RP1=0, select bank0
 10723  123E  082D               	movf	(drive@highByteRadius),w
 10724  123F  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10725                           	line	27
 10726                           	
 10727  1244                     l11755:	
 10728                           ;drive.c: 27: ser_putch(lowByteRadius);
 10729  1244  1283               	bcf	status, 5	;RP0=0, select bank0
 10730  1245  1303               	bcf	status, 6	;RP1=0, select bank0
 10731  1246  082E               	movf	(drive@lowByteRadius),w
 10732  1247  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 10733                           	line	28
 10734                           	
 10735  124C                     l5816:	
 10736  124C  0008               	return
 10737                           	opt stack 0
 10738                           GLOBAL	__end_of_drive
 10739  124D                     	__end_of_drive:
 10740 ;; =============== function _drive ends ============
 10741                           
 10742                           	signat	_drive,16504
 10743                           	global	_rotateIR
 10744                           psect	text2233,local,class=CODE,delta=2
 10745                           global __ptext2233
 10746  11E4                     __ptext2233:
 10747                           
 10748 ;; *************** function _rotateIR *****************
 10749 ;; Defined at:
 10750 ;;		line 39 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\ir.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  steps           1    wreg     unsigned char 
 10753 ;;  direction       1   10[BANK0 ] unsigned char 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;  steps           1   13[BANK0 ] unsigned char 
 10756 ;;  stepNum         1   14[BANK0 ] unsigned char 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;		None               void
 10759 ;; Registers used:
 10760 ;;		wreg, status,2, status,0
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10766 ;;      Params:         0       1       0       0       0
 10767 ;;      Locals:         0       2       0       0       0
 10768 ;;      Temps:          0       2       0       0       0
 10769 ;;      Totals:         0       5       0       0       0
 10770 ;;Total ram usage:        5 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:    2
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		_frontWallCorrect
 10777 ;;		_findWalls
 10778 ;;		_goParallel
 10779 ;;		_main
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           psect	text2233
 10783                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ir.c"
 10784                           	line	39
 10785                           	global	__size_of_rotateIR
 10786  0033                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
 10787                           	
 10788  11E4                     _rotateIR:	
 10789                           	opt	stack 4
 10790                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
 10791                           ;rotateIR@steps stored from wreg
 10792  11E4  1283               	bcf	status, 5	;RP0=0, select bank0
 10793  11E5  1303               	bcf	status, 6	;RP1=0, select bank0
 10794  11E6  00AD               	movwf	(rotateIR@steps)
 10795                           	line	40
 10796                           	
 10797  11E7                     l11731:	
 10798                           ;ir.c: 40: PORTC |= 0b00000011;
 10799  11E7  3003               	movlw	(03h)
 10800  11E8  00AB               	movwf	(??_rotateIR+0)+0
 10801  11E9  082B               	movf	(??_rotateIR+0)+0,w
 10802  11EA  0487               	iorwf	(7),f	;volatile
 10803                           	line	41
 10804                           	
 10805  11EB                     l11733:	
 10806                           ;ir.c: 41: SSPBUF = direction;
 10807  11EB  082A               	movf	(rotateIR@direction),w
 10808  11EC  0093               	movwf	(19)	;volatile
 10809                           	line	44
 10810                           ;ir.c: 44: for (char stepNum = 1; stepNum <= steps; ++stepNum)
 10811  11ED  01AE               	clrf	(rotateIR@stepNum)
 10812  11EE  1403               	bsf	status,0
 10813  11EF  0DAE               	rlf	(rotateIR@stepNum),f
 10814  11F0  2A05               	goto	l5084
 10815                           	line	45
 10816                           	
 10817  11F1                     l5085:	
 10818                           	line	46
 10819                           ;ir.c: 45: {
 10820                           ;ir.c: 46: PORTC |= 0b00000100;
 10821  11F1  1507               	bsf	(7)+(2/8),(2)&7	;volatile
 10822                           	line	47
 10823                           	
 10824  11F2                     l11735:	
 10825                           ;ir.c: 47: PORTC &= 0b11111011;
 10826  11F2  30FB               	movlw	(0FBh)
 10827  11F3  00AB               	movwf	(??_rotateIR+0)+0
 10828  11F4  082B               	movf	(??_rotateIR+0)+0,w
 10829  11F5  0587               	andwf	(7),f	;volatile
 10830                           	line	48
 10831                           	
 10832  11F6                     l11737:	
 10833                           ;ir.c: 48: _delay((unsigned long)((20)*(20000000/4000.0)));
 10834                           	opt asmopt_off
 10835  11F6  3082               movlw	130
 10836  11F7  00AC               movwf	((??_rotateIR+0)+0+1),f
 10837  11F8  30DD               	movlw	221
 10838  11F9  00AB               movwf	((??_rotateIR+0)+0),f
 10839  11FA                     u7957:
 10840  11FA  0BAB               	decfsz	((??_rotateIR+0)+0),f
 10841  11FB  29FA               	goto	u7957
 10842  11FC  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
 10843  11FD  29FA               	goto	u7957
 10844  11FE  29FF               	nop2
 10845                           opt asmopt_on
 10846                           
 10847                           	line	44
 10848                           	
 10849  11FF                     l11739:	
 10850  11FF  3001               	movlw	(01h)
 10851  1200  1283               	bcf	status, 5	;RP0=0, select bank0
 10852  1201  1303               	bcf	status, 6	;RP1=0, select bank0
 10853  1202  00AB               	movwf	(??_rotateIR+0)+0
 10854  1203  082B               	movf	(??_rotateIR+0)+0,w
 10855  1204  07AE               	addwf	(rotateIR@stepNum),f
 10856                           	
 10857  1205                     l5084:	
 10858  1205  082E               	movf	(rotateIR@stepNum),w
 10859  1206  022D               	subwf	(rotateIR@steps),w
 10860  1207  1803               	skipnc
 10861  1208  2A0A               	goto	u6511
 10862  1209  2A0B               	goto	u6510
 10863  120A                     u6511:
 10864  120A  29F1               	goto	l5085
 10865  120B                     u6510:
 10866  120B  2A0C               	goto	l11741
 10867                           	
 10868  120C                     l5086:	
 10869                           	line	51
 10870                           	
 10871  120C                     l11741:	
 10872                           ;ir.c: 49: }
 10873                           ;ir.c: 51: SSPBUF = 0b00000000;
 10874  120C  0193               	clrf	(19)	;volatile
 10875                           	line	52
 10876                           	
 10877  120D                     l11743:	
 10878                           ;ir.c: 52: _delay((unsigned long)((20)*(20000000/4000.0)));
 10879                           	opt asmopt_off
 10880  120D  3082               movlw	130
 10881  120E  00AC               movwf	((??_rotateIR+0)+0+1),f
 10882  120F  30DD               	movlw	221
 10883  1210  00AB               movwf	((??_rotateIR+0)+0),f
 10884  1211                     u7967:
 10885  1211  0BAB               	decfsz	((??_rotateIR+0)+0),f
 10886  1212  2A11               	goto	u7967
 10887  1213  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
 10888  1214  2A11               	goto	u7967
 10889  1215  2A16               	nop2
 10890                           opt asmopt_on
 10891                           
 10892                           	line	54
 10893                           	
 10894  1216                     l5087:	
 10895  1216  0008               	return
 10896                           	opt stack 0
 10897                           GLOBAL	__end_of_rotateIR
 10898  1217                     	__end_of_rotateIR:
 10899 ;; =============== function _rotateIR ends ============
 10900                           
 10901                           	signat	_rotateIR,8312
 10902                           	global	_convert
 10903                           psect	text2234,local,class=CODE,delta=2
 10904                           global __ptext2234
 10905  0267                     __ptext2234:
 10906                           
 10907 ;; *************** function _convert *****************
 10908 ;; Defined at:
 10909 ;;		line 11 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\ir.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;  adc_value       2   33[BANK0 ] int 
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  2   33[BANK0 ] int 
 10916 ;; Registers used:
 10917 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10923 ;;      Params:         0       2       0       0       0
 10924 ;;      Locals:         0       0       0       0       0
 10925 ;;      Temps:          0       2       0       0       0
 10926 ;;      Totals:         0       4       0       0       0
 10927 ;;Total ram usage:        4 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    3
 10930 ;; This function calls:
 10931 ;;		___wmul
 10932 ;;		___awdiv
 10933 ;; This function is called by:
 10934 ;;		_readIR
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           psect	text2234
 10938                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ir.c"
 10939                           	line	11
 10940                           	global	__size_of_convert
 10941  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
 10942                           	
 10943  0267                     _convert:	
 10944                           	opt	stack 2
 10945                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10946                           	line	12
 10947                           	
 10948  0267                     l11671:	
 10949                           ;ir.c: 12: if(adc_value < 82)
 10950  0267  1283               	bcf	status, 5	;RP0=0, select bank0
 10951  0268  1303               	bcf	status, 6	;RP1=0, select bank0
 10952  0269  0842               	movf	(convert@adc_value+1),w
 10953  026A  3A80               	xorlw	80h
 10954  026B  00FF               	movwf	btemp+1
 10955  026C  3080               	movlw	(high(052h))^80h
 10956  026D  027F               	subwf	btemp+1,w
 10957  026E  1D03               	skipz
 10958  026F  2A72               	goto	u6445
 10959  0270  3052               	movlw	low(052h)
 10960  0271  0241               	subwf	(convert@adc_value),w
 10961  0272                     u6445:
 10962                           
 10963  0272  1803               	skipnc
 10964  0273  2A75               	goto	u6441
 10965  0274  2A76               	goto	u6440
 10966  0275                     u6441:
 10967  0275  2A7F               	goto	l11679
 10968  0276                     u6440:
 10969                           	line	13
 10970                           	
 10971  0276                     l11673:	
 10972                           ;ir.c: 13: return 999;
 10973  0276  30E7               	movlw	low(03E7h)
 10974  0277  1283               	bcf	status, 5	;RP0=0, select bank0
 10975  0278  1303               	bcf	status, 6	;RP1=0, select bank0
 10976  0279  00C1               	movwf	(?_convert)
 10977  027A  3003               	movlw	high(03E7h)
 10978  027B  00C2               	movwf	((?_convert))+1
 10979  027C  2C35               	goto	l5065
 10980                           	
 10981  027D                     l11675:	
 10982  027D  2C35               	goto	l5065
 10983                           	
 10984  027E                     l11677:	
 10985  027E  2C35               	goto	l5065
 10986                           	line	14
 10987                           	
 10988  027F                     l5064:	
 10989                           	
 10990  027F                     l11679:	
 10991                           ;ir.c: 14: else if(adc_value < 133)
 10992  027F  1283               	bcf	status, 5	;RP0=0, select bank0
 10993  0280  1303               	bcf	status, 6	;RP1=0, select bank0
 10994  0281  0842               	movf	(convert@adc_value+1),w
 10995  0282  3A80               	xorlw	80h
 10996  0283  00FF               	movwf	btemp+1
 10997  0284  3080               	movlw	(high(085h))^80h
 10998  0285  027F               	subwf	btemp+1,w
 10999  0286  1D03               	skipz
 11000  0287  2A8A               	goto	u6455
 11001  0288  3085               	movlw	low(085h)
 11002  0289  0241               	subwf	(convert@adc_value),w
 11003  028A                     u6455:
 11004                           
 11005  028A  1803               	skipnc
 11006  028B  2A8D               	goto	u6451
 11007  028C  2A8E               	goto	u6450
 11008  028D                     u6451:
 11009  028D  2AC6               	goto	l11687
 11010  028E                     u6450:
 11011                           	line	15
 11012                           	
 11013  028E                     l11681:	
 11014                           ;ir.c: 15: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
 11015  028E  3033               	movlw	low(033h)
 11016  028F  1283               	bcf	status, 5	;RP0=0, select bank0
 11017  0290  1303               	bcf	status, 6	;RP1=0, select bank0
 11018  0291  00B0               	movwf	(?___awdiv)
 11019  0292  3000               	movlw	high(033h)
 11020  0293  00B1               	movwf	((?___awdiv))+1
 11021  0294  0941               	comf	(convert@adc_value),w
 11022  0295  00C3               	movwf	(??_convert+0)+0
 11023  0296  0942               	comf	(convert@adc_value+1),w
 11024  0297  00C4               	movwf	((??_convert+0)+0+1)
 11025  0298  0AC3               	incf	(??_convert+0)+0,f
 11026  0299  1903               	skipnz
 11027  029A  0AC4               	incf	((??_convert+0)+0+1),f
 11028  029B  0843               	movf	0+(??_convert+0)+0,w
 11029  029C  3E85               	addlw	low(085h)
 11030  029D  00AA               	movwf	(?___wmul)
 11031  029E  0844               	movf	1+(??_convert+0)+0,w
 11032  029F  1803               	skipnc
 11033  02A0  3E01               	addlw	1
 11034  02A1  3E00               	addlw	high(085h)
 11035  02A2  00AB               	movwf	1+(?___wmul)
 11036  02A3  3032               	movlw	low(032h)
 11037  02A4  00AC               	movwf	0+(?___wmul)+02h
 11038  02A5  3000               	movlw	high(032h)
 11039  02A6  00AD               	movwf	(0+(?___wmul)+02h)+1
 11040  02A7  160A  118A  218B   	fcall	___wmul
              120A  118A         
 11041  02AC  1283               	bcf	status, 5	;RP0=0, select bank0
 11042  02AD  1303               	bcf	status, 6	;RP1=0, select bank0
 11043  02AE  082B               	movf	(1+(?___wmul)),w
 11044  02AF  01B3               	clrf	1+(?___awdiv)+02h
 11045  02B0  07B3               	addwf	1+(?___awdiv)+02h
 11046  02B1  082A               	movf	(0+(?___wmul)),w
 11047  02B2  01B2               	clrf	0+(?___awdiv)+02h
 11048  02B3  07B2               	addwf	0+(?___awdiv)+02h
 11049                           
 11050  02B4  160A  118A  278A   	fcall	___awdiv
              120A  118A         
 11051  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
 11052  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
 11053  02BB  0830               	movf	(0+(?___awdiv)),w
 11054  02BC  3E61               	addlw	low(061h)
 11055  02BD  00C1               	movwf	(?_convert)
 11056  02BE  0831               	movf	(1+(?___awdiv)),w
 11057  02BF  1803               	skipnc
 11058  02C0  3E01               	addlw	1
 11059  02C1  3E00               	addlw	high(061h)
 11060  02C2  00C2               	movwf	1+(?_convert)
 11061  02C3  2C35               	goto	l5065
 11062                           	
 11063  02C4                     l11683:	
 11064  02C4  2C35               	goto	l5065
 11065                           	
 11066  02C5                     l11685:	
 11067  02C5  2C35               	goto	l5065
 11068                           	line	16
 11069                           	
 11070  02C6                     l5067:	
 11071                           	
 11072  02C6                     l11687:	
 11073                           ;ir.c: 16: else if(adc_value < 184)
 11074  02C6  1283               	bcf	status, 5	;RP0=0, select bank0
 11075  02C7  1303               	bcf	status, 6	;RP1=0, select bank0
 11076  02C8  0842               	movf	(convert@adc_value+1),w
 11077  02C9  3A80               	xorlw	80h
 11078  02CA  00FF               	movwf	btemp+1
 11079  02CB  3080               	movlw	(high(0B8h))^80h
 11080  02CC  027F               	subwf	btemp+1,w
 11081  02CD  1D03               	skipz
 11082  02CE  2AD1               	goto	u6465
 11083  02CF  30B8               	movlw	low(0B8h)
 11084  02D0  0241               	subwf	(convert@adc_value),w
 11085  02D1                     u6465:
 11086                           
 11087  02D1  1803               	skipnc
 11088  02D2  2AD4               	goto	u6461
 11089  02D3  2AD5               	goto	u6460
 11090  02D4                     u6461:
 11091  02D4  2B0D               	goto	l11695
 11092  02D5                     u6460:
 11093                           	line	17
 11094                           	
 11095  02D5                     l11689:	
 11096                           ;ir.c: 17: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
 11097  02D5  3033               	movlw	low(033h)
 11098  02D6  1283               	bcf	status, 5	;RP0=0, select bank0
 11099  02D7  1303               	bcf	status, 6	;RP1=0, select bank0
 11100  02D8  00B0               	movwf	(?___awdiv)
 11101  02D9  3000               	movlw	high(033h)
 11102  02DA  00B1               	movwf	((?___awdiv))+1
 11103  02DB  0941               	comf	(convert@adc_value),w
 11104  02DC  00C3               	movwf	(??_convert+0)+0
 11105  02DD  0942               	comf	(convert@adc_value+1),w
 11106  02DE  00C4               	movwf	((??_convert+0)+0+1)
 11107  02DF  0AC3               	incf	(??_convert+0)+0,f
 11108  02E0  1903               	skipnz
 11109  02E1  0AC4               	incf	((??_convert+0)+0+1),f
 11110  02E2  0843               	movf	0+(??_convert+0)+0,w
 11111  02E3  3EB8               	addlw	low(0B8h)
 11112  02E4  00AA               	movwf	(?___wmul)
 11113  02E5  0844               	movf	1+(??_convert+0)+0,w
 11114  02E6  1803               	skipnc
 11115  02E7  3E01               	addlw	1
 11116  02E8  3E00               	addlw	high(0B8h)
 11117  02E9  00AB               	movwf	1+(?___wmul)
 11118  02EA  301E               	movlw	low(01Eh)
 11119  02EB  00AC               	movwf	0+(?___wmul)+02h
 11120  02EC  3000               	movlw	high(01Eh)
 11121  02ED  00AD               	movwf	(0+(?___wmul)+02h)+1
 11122  02EE  160A  118A  218B   	fcall	___wmul
              120A  118A         
 11123  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
 11124  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
 11125  02F5  082B               	movf	(1+(?___wmul)),w
 11126  02F6  01B3               	clrf	1+(?___awdiv)+02h
 11127  02F7  07B3               	addwf	1+(?___awdiv)+02h
 11128  02F8  082A               	movf	(0+(?___wmul)),w
 11129  02F9  01B2               	clrf	0+(?___awdiv)+02h
 11130  02FA  07B2               	addwf	0+(?___awdiv)+02h
 11131                           
 11132  02FB  160A  118A  278A   	fcall	___awdiv
              120A  118A         
 11133  0300  1283               	bcf	status, 5	;RP0=0, select bank0
 11134  0301  1303               	bcf	status, 6	;RP1=0, select bank0
 11135  0302  0830               	movf	(0+(?___awdiv)),w
 11136  0303  3E43               	addlw	low(043h)
 11137  0304  00C1               	movwf	(?_convert)
 11138  0305  0831               	movf	(1+(?___awdiv)),w
 11139  0306  1803               	skipnc
 11140  0307  3E01               	addlw	1
 11141  0308  3E00               	addlw	high(043h)
 11142  0309  00C2               	movwf	1+(?_convert)
 11143  030A  2C35               	goto	l5065
 11144                           	
 11145  030B                     l11691:	
 11146  030B  2C35               	goto	l5065
 11147                           	
 11148  030C                     l11693:	
 11149  030C  2C35               	goto	l5065
 11150                           	line	18
 11151                           	
 11152  030D                     l5069:	
 11153                           	
 11154  030D                     l11695:	
 11155                           ;ir.c: 18: else if(adc_value < 256)
 11156  030D  1283               	bcf	status, 5	;RP0=0, select bank0
 11157  030E  1303               	bcf	status, 6	;RP1=0, select bank0
 11158  030F  0842               	movf	(convert@adc_value+1),w
 11159  0310  3A80               	xorlw	80h
 11160  0311  00FF               	movwf	btemp+1
 11161  0312  3081               	movlw	(high(0100h))^80h
 11162  0313  027F               	subwf	btemp+1,w
 11163  0314  1D03               	skipz
 11164  0315  2B18               	goto	u6475
 11165  0316  3000               	movlw	low(0100h)
 11166  0317  0241               	subwf	(convert@adc_value),w
 11167  0318                     u6475:
 11168                           
 11169  0318  1803               	skipnc
 11170  0319  2B1B               	goto	u6471
 11171  031A  2B1C               	goto	u6470
 11172  031B                     u6471:
 11173  031B  2B54               	goto	l11703
 11174  031C                     u6470:
 11175                           	line	19
 11176                           	
 11177  031C                     l11697:	
 11178                           ;ir.c: 19: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
 11179  031C  3048               	movlw	low(048h)
 11180  031D  1283               	bcf	status, 5	;RP0=0, select bank0
 11181  031E  1303               	bcf	status, 6	;RP1=0, select bank0
 11182  031F  00B0               	movwf	(?___awdiv)
 11183  0320  3000               	movlw	high(048h)
 11184  0321  00B1               	movwf	((?___awdiv))+1
 11185  0322  0941               	comf	(convert@adc_value),w
 11186  0323  00C3               	movwf	(??_convert+0)+0
 11187  0324  0942               	comf	(convert@adc_value+1),w
 11188  0325  00C4               	movwf	((??_convert+0)+0+1)
 11189  0326  0AC3               	incf	(??_convert+0)+0,f
 11190  0327  1903               	skipnz
 11191  0328  0AC4               	incf	((??_convert+0)+0+1),f
 11192  0329  0843               	movf	0+(??_convert+0)+0,w
 11193  032A  3E00               	addlw	low(0100h)
 11194  032B  00AA               	movwf	(?___wmul)
 11195  032C  0844               	movf	1+(??_convert+0)+0,w
 11196  032D  1803               	skipnc
 11197  032E  3E01               	addlw	1
 11198  032F  3E01               	addlw	high(0100h)
 11199  0330  00AB               	movwf	1+(?___wmul)
 11200  0331  3014               	movlw	low(014h)
 11201  0332  00AC               	movwf	0+(?___wmul)+02h
 11202  0333  3000               	movlw	high(014h)
 11203  0334  00AD               	movwf	(0+(?___wmul)+02h)+1
 11204  0335  160A  118A  218B   	fcall	___wmul
              120A  118A         
 11205  033A  1283               	bcf	status, 5	;RP0=0, select bank0
 11206  033B  1303               	bcf	status, 6	;RP1=0, select bank0
 11207  033C  082B               	movf	(1+(?___wmul)),w
 11208  033D  01B3               	clrf	1+(?___awdiv)+02h
 11209  033E  07B3               	addwf	1+(?___awdiv)+02h
 11210  033F  082A               	movf	(0+(?___wmul)),w
 11211  0340  01B2               	clrf	0+(?___awdiv)+02h
 11212  0341  07B2               	addwf	0+(?___awdiv)+02h
 11213                           
 11214  0342  160A  118A  278A   	fcall	___awdiv
              120A  118A         
 11215  0347  1283               	bcf	status, 5	;RP0=0, select bank0
 11216  0348  1303               	bcf	status, 6	;RP1=0, select bank0
 11217  0349  0830               	movf	(0+(?___awdiv)),w
 11218  034A  3E2E               	addlw	low(02Eh)
 11219  034B  00C1               	movwf	(?_convert)
 11220  034C  0831               	movf	(1+(?___awdiv)),w
 11221  034D  1803               	skipnc
 11222  034E  3E01               	addlw	1
 11223  034F  3E00               	addlw	high(02Eh)
 11224  0350  00C2               	movwf	1+(?_convert)
 11225  0351  2C35               	goto	l5065
 11226                           	
 11227  0352                     l11699:	
 11228  0352  2C35               	goto	l5065
 11229                           	
 11230  0353                     l11701:	
 11231  0353  2C35               	goto	l5065
 11232                           	line	20
 11233                           	
 11234  0354                     l5071:	
 11235                           	
 11236  0354                     l11703:	
 11237                           ;ir.c: 20: else if(adc_value < 317)
 11238  0354  1283               	bcf	status, 5	;RP0=0, select bank0
 11239  0355  1303               	bcf	status, 6	;RP1=0, select bank0
 11240  0356  0842               	movf	(convert@adc_value+1),w
 11241  0357  3A80               	xorlw	80h
 11242  0358  00FF               	movwf	btemp+1
 11243  0359  3081               	movlw	(high(013Dh))^80h
 11244  035A  027F               	subwf	btemp+1,w
 11245  035B  1D03               	skipz
 11246  035C  2B5F               	goto	u6485
 11247  035D  303D               	movlw	low(013Dh)
 11248  035E  0241               	subwf	(convert@adc_value),w
 11249  035F                     u6485:
 11250                           
 11251  035F  1803               	skipnc
 11252  0360  2B62               	goto	u6481
 11253  0361  2B63               	goto	u6480
 11254  0362                     u6481:
 11255  0362  2B9B               	goto	l11711
 11256  0363                     u6480:
 11257                           	line	21
 11258                           	
 11259  0363                     l11705:	
 11260                           ;ir.c: 21: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
 11261  0363  303D               	movlw	low(03Dh)
 11262  0364  1283               	bcf	status, 5	;RP0=0, select bank0
 11263  0365  1303               	bcf	status, 6	;RP1=0, select bank0
 11264  0366  00B0               	movwf	(?___awdiv)
 11265  0367  3000               	movlw	high(03Dh)
 11266  0368  00B1               	movwf	((?___awdiv))+1
 11267  0369  0941               	comf	(convert@adc_value),w
 11268  036A  00C3               	movwf	(??_convert+0)+0
 11269  036B  0942               	comf	(convert@adc_value+1),w
 11270  036C  00C4               	movwf	((??_convert+0)+0+1)
 11271  036D  0AC3               	incf	(??_convert+0)+0,f
 11272  036E  1903               	skipnz
 11273  036F  0AC4               	incf	((??_convert+0)+0+1),f
 11274  0370  0843               	movf	0+(??_convert+0)+0,w
 11275  0371  3E3D               	addlw	low(013Dh)
 11276  0372  00AA               	movwf	(?___wmul)
 11277  0373  0844               	movf	1+(??_convert+0)+0,w
 11278  0374  1803               	skipnc
 11279  0375  3E01               	addlw	1
 11280  0376  3E01               	addlw	high(013Dh)
 11281  0377  00AB               	movwf	1+(?___wmul)
 11282  0378  300A               	movlw	low(0Ah)
 11283  0379  00AC               	movwf	0+(?___wmul)+02h
 11284  037A  3000               	movlw	high(0Ah)
 11285  037B  00AD               	movwf	(0+(?___wmul)+02h)+1
 11286  037C  160A  118A  218B   	fcall	___wmul
              120A  118A         
 11287  0381  1283               	bcf	status, 5	;RP0=0, select bank0
 11288  0382  1303               	bcf	status, 6	;RP1=0, select bank0
 11289  0383  082B               	movf	(1+(?___wmul)),w
 11290  0384  01B3               	clrf	1+(?___awdiv)+02h
 11291  0385  07B3               	addwf	1+(?___awdiv)+02h
 11292  0386  082A               	movf	(0+(?___wmul)),w
 11293  0387  01B2               	clrf	0+(?___awdiv)+02h
 11294  0388  07B2               	addwf	0+(?___awdiv)+02h
 11295                           
 11296  0389  160A  118A  278A   	fcall	___awdiv
              120A  118A         
 11297  038E  1283               	bcf	status, 5	;RP0=0, select bank0
 11298  038F  1303               	bcf	status, 6	;RP1=0, select bank0
 11299  0390  0830               	movf	(0+(?___awdiv)),w
 11300  0391  3E25               	addlw	low(025h)
 11301  0392  00C1               	movwf	(?_convert)
 11302  0393  0831               	movf	(1+(?___awdiv)),w
 11303  0394  1803               	skipnc
 11304  0395  3E01               	addlw	1
 11305  0396  3E00               	addlw	high(025h)
 11306  0397  00C2               	movwf	1+(?_convert)
 11307  0398  2C35               	goto	l5065
 11308                           	
 11309  0399                     l11707:	
 11310  0399  2C35               	goto	l5065
 11311                           	
 11312  039A                     l11709:	
 11313  039A  2C35               	goto	l5065
 11314                           	line	22
 11315                           	
 11316  039B                     l5073:	
 11317                           	
 11318  039B                     l11711:	
 11319                           ;ir.c: 22: else if(adc_value < 410)
 11320  039B  1283               	bcf	status, 5	;RP0=0, select bank0
 11321  039C  1303               	bcf	status, 6	;RP1=0, select bank0
 11322  039D  0842               	movf	(convert@adc_value+1),w
 11323  039E  3A80               	xorlw	80h
 11324  039F  00FF               	movwf	btemp+1
 11325  03A0  3081               	movlw	(high(019Ah))^80h
 11326  03A1  027F               	subwf	btemp+1,w
 11327  03A2  1D03               	skipz
 11328  03A3  2BA6               	goto	u6495
 11329  03A4  309A               	movlw	low(019Ah)
 11330  03A5  0241               	subwf	(convert@adc_value),w
 11331  03A6                     u6495:
 11332                           
 11333  03A6  1803               	skipnc
 11334  03A7  2BA9               	goto	u6491
 11335  03A8  2BAA               	goto	u6490
 11336  03A9                     u6491:
 11337  03A9  2BE2               	goto	l11719
 11338  03AA                     u6490:
 11339                           	line	23
 11340                           	
 11341  03AA                     l11713:	
 11342                           ;ir.c: 23: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
 11343  03AA  305D               	movlw	low(05Dh)
 11344  03AB  1283               	bcf	status, 5	;RP0=0, select bank0
 11345  03AC  1303               	bcf	status, 6	;RP1=0, select bank0
 11346  03AD  00B0               	movwf	(?___awdiv)
 11347  03AE  3000               	movlw	high(05Dh)
 11348  03AF  00B1               	movwf	((?___awdiv))+1
 11349  03B0  0941               	comf	(convert@adc_value),w
 11350  03B1  00C3               	movwf	(??_convert+0)+0
 11351  03B2  0942               	comf	(convert@adc_value+1),w
 11352  03B3  00C4               	movwf	((??_convert+0)+0+1)
 11353  03B4  0AC3               	incf	(??_convert+0)+0,f
 11354  03B5  1903               	skipnz
 11355  03B6  0AC4               	incf	((??_convert+0)+0+1),f
 11356  03B7  0843               	movf	0+(??_convert+0)+0,w
 11357  03B8  3E9A               	addlw	low(019Ah)
 11358  03B9  00AA               	movwf	(?___wmul)
 11359  03BA  0844               	movf	1+(??_convert+0)+0,w
 11360  03BB  1803               	skipnc
 11361  03BC  3E01               	addlw	1
 11362  03BD  3E01               	addlw	high(019Ah)
 11363  03BE  00AB               	movwf	1+(?___wmul)
 11364  03BF  300A               	movlw	low(0Ah)
 11365  03C0  00AC               	movwf	0+(?___wmul)+02h
 11366  03C1  3000               	movlw	high(0Ah)
 11367  03C2  00AD               	movwf	(0+(?___wmul)+02h)+1
 11368  03C3  160A  118A  218B   	fcall	___wmul
              120A  118A         
 11369  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
 11370  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
 11371  03CA  082B               	movf	(1+(?___wmul)),w
 11372  03CB  01B3               	clrf	1+(?___awdiv)+02h
 11373  03CC  07B3               	addwf	1+(?___awdiv)+02h
 11374  03CD  082A               	movf	(0+(?___wmul)),w
 11375  03CE  01B2               	clrf	0+(?___awdiv)+02h
 11376  03CF  07B2               	addwf	0+(?___awdiv)+02h
 11377                           
 11378  03D0  160A  118A  278A   	fcall	___awdiv
              120A  118A         
 11379  03D5  1283               	bcf	status, 5	;RP0=0, select bank0
 11380  03D6  1303               	bcf	status, 6	;RP1=0, select bank0
 11381  03D7  0830               	movf	(0+(?___awdiv)),w
 11382  03D8  3E1C               	addlw	low(01Ch)
 11383  03D9  00C1               	movwf	(?_convert)
 11384  03DA  0831               	movf	(1+(?___awdiv)),w
 11385  03DB  1803               	skipnc
 11386  03DC  3E01               	addlw	1
 11387  03DD  3E00               	addlw	high(01Ch)
 11388  03DE  00C2               	movwf	1+(?_convert)
 11389  03DF  2C35               	goto	l5065
 11390                           	
 11391  03E0                     l11715:	
 11392  03E0  2C35               	goto	l5065
 11393                           	
 11394  03E1                     l11717:	
 11395  03E1  2C35               	goto	l5065
 11396                           	line	24
 11397                           	
 11398  03E2                     l5075:	
 11399                           	
 11400  03E2                     l11719:	
 11401                           ;ir.c: 24: else if(adc_value < 522)
 11402  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
 11403  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
 11404  03E4  0842               	movf	(convert@adc_value+1),w
 11405  03E5  3A80               	xorlw	80h
 11406  03E6  00FF               	movwf	btemp+1
 11407  03E7  3082               	movlw	(high(020Ah))^80h
 11408  03E8  027F               	subwf	btemp+1,w
 11409  03E9  1D03               	skipz
 11410  03EA  2BED               	goto	u6505
 11411  03EB  300A               	movlw	low(020Ah)
 11412  03EC  0241               	subwf	(convert@adc_value),w
 11413  03ED                     u6505:
 11414                           
 11415  03ED  1803               	skipnc
 11416  03EE  2BF0               	goto	u6501
 11417  03EF  2BF1               	goto	u6500
 11418  03F0                     u6501:
 11419  03F0  2C29               	goto	l11727
 11420  03F1                     u6500:
 11421                           	line	25
 11422                           	
 11423  03F1                     l11721:	
 11424                           ;ir.c: 25: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
 11425  03F1  3070               	movlw	low(070h)
 11426  03F2  1283               	bcf	status, 5	;RP0=0, select bank0
 11427  03F3  1303               	bcf	status, 6	;RP1=0, select bank0
 11428  03F4  00B0               	movwf	(?___awdiv)
 11429  03F5  3000               	movlw	high(070h)
 11430  03F6  00B1               	movwf	((?___awdiv))+1
 11431  03F7  0941               	comf	(convert@adc_value),w
 11432  03F8  00C3               	movwf	(??_convert+0)+0
 11433  03F9  0942               	comf	(convert@adc_value+1),w
 11434  03FA  00C4               	movwf	((??_convert+0)+0+1)
 11435  03FB  0AC3               	incf	(??_convert+0)+0,f
 11436  03FC  1903               	skipnz
 11437  03FD  0AC4               	incf	((??_convert+0)+0+1),f
 11438  03FE  0843               	movf	0+(??_convert+0)+0,w
 11439  03FF  3E0A               	addlw	low(020Ah)
 11440  0400  00AA               	movwf	(?___wmul)
 11441  0401  0844               	movf	1+(??_convert+0)+0,w
 11442  0402  1803               	skipnc
 11443  0403  3E01               	addlw	1
 11444  0404  3E02               	addlw	high(020Ah)
 11445  0405  00AB               	movwf	1+(?___wmul)
 11446  0406  300A               	movlw	low(0Ah)
 11447  0407  00AC               	movwf	0+(?___wmul)+02h
 11448  0408  3000               	movlw	high(0Ah)
 11449  0409  00AD               	movwf	(0+(?___wmul)+02h)+1
 11450  040A  160A  118A  218B   	fcall	___wmul
              120A  118A         
 11451  040F  1283               	bcf	status, 5	;RP0=0, select bank0
 11452  0410  1303               	bcf	status, 6	;RP1=0, select bank0
 11453  0411  082B               	movf	(1+(?___wmul)),w
 11454  0412  01B3               	clrf	1+(?___awdiv)+02h
 11455  0413  07B3               	addwf	1+(?___awdiv)+02h
 11456  0414  082A               	movf	(0+(?___wmul)),w
 11457  0415  01B2               	clrf	0+(?___awdiv)+02h
 11458  0416  07B2               	addwf	0+(?___awdiv)+02h
 11459                           
 11460  0417  160A  118A  278A   	fcall	___awdiv
              120A  118A         
 11461  041C  1283               	bcf	status, 5	;RP0=0, select bank0
 11462  041D  1303               	bcf	status, 6	;RP1=0, select bank0
 11463  041E  0830               	movf	(0+(?___awdiv)),w
 11464  041F  3E12               	addlw	low(012h)
 11465  0420  00C1               	movwf	(?_convert)
 11466  0421  0831               	movf	(1+(?___awdiv)),w
 11467  0422  1803               	skipnc
 11468  0423  3E01               	addlw	1
 11469  0424  3E00               	addlw	high(012h)
 11470  0425  00C2               	movwf	1+(?_convert)
 11471  0426  2C35               	goto	l5065
 11472                           	
 11473  0427                     l11723:	
 11474  0427  2C35               	goto	l5065
 11475                           	
 11476  0428                     l11725:	
 11477  0428  2C35               	goto	l5065
 11478                           	line	26
 11479                           	
 11480  0429                     l5077:	
 11481                           	
 11482  0429                     l11727:	
 11483                           ;ir.c: 26: else return 0;
 11484  0429  1283               	bcf	status, 5	;RP0=0, select bank0
 11485  042A  1303               	bcf	status, 6	;RP1=0, select bank0
 11486  042B  01C1               	clrf	(?_convert)
 11487  042C  01C2               	clrf	(?_convert+1)
 11488  042D  2C35               	goto	l5065
 11489                           	
 11490  042E                     l11729:	
 11491  042E  2C35               	goto	l5065
 11492                           	
 11493  042F                     l5078:	
 11494  042F  2C35               	goto	l5065
 11495                           	
 11496  0430                     l5076:	
 11497  0430  2C35               	goto	l5065
 11498                           	
 11499  0431                     l5074:	
 11500  0431  2C35               	goto	l5065
 11501                           	
 11502  0432                     l5072:	
 11503  0432  2C35               	goto	l5065
 11504                           	
 11505  0433                     l5070:	
 11506  0433  2C35               	goto	l5065
 11507                           	
 11508  0434                     l5068:	
 11509  0434  2C35               	goto	l5065
 11510                           	
 11511  0435                     l5066:	
 11512                           	line	27
 11513                           	
 11514  0435                     l5065:	
 11515  0435  0008               	return
 11516                           	opt stack 0
 11517                           GLOBAL	__end_of_convert
 11518  0436                     	__end_of_convert:
 11519 ;; =============== function _convert ends ============
 11520                           
 11521                           	signat	_convert,4218
 11522                           	global	_play_iCreate_song
 11523                           psect	text2235,local,class=CODE,delta=2
 11524                           global __ptext2235
 11525  1EE7                     __ptext2235:
 11526                           
 11527 ;; *************** function _play_iCreate_song *****************
 11528 ;; Defined at:
 11529 ;;		line 25 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\songs.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;  song            1    wreg     unsigned char 
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;  song            1   12[BANK0 ] unsigned char 
 11534 ;; Return value:  Size  Location     Type
 11535 ;;		None               void
 11536 ;; Registers used:
 11537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11543 ;;      Params:         0       0       0       0       0
 11544 ;;      Locals:         0       1       0       0       0
 11545 ;;      Temps:          0       0       0       0       0
 11546 ;;      Totals:         0       1       0       0       0
 11547 ;;Total ram usage:        1 bytes
 11548 ;; Hardware stack levels used:    1
 11549 ;; Hardware stack levels required when called:    3
 11550 ;; This function calls:
 11551 ;;		_ser_putch
 11552 ;; This function is called by:
 11553 ;;		_checkForFinalDestination
 11554 ;;		_lookForVictim
 11555 ;;		_findWalls
 11556 ;;		_checkIfHome
 11557 ;;		_main
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           psect	text2235
 11561                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\songs.c"
 11562                           	line	25
 11563                           	global	__size_of_play_iCreate_song
 11564  0012                     	__size_of_play_iCreate_song	equ	__end_of_play_iCreate_song-_play_iCreate_song
 11565                           	
 11566  1EE7                     _play_iCreate_song:	
 11567                           	opt	stack 3
 11568                           ; Regs used in _play_iCreate_song: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11569                           ;play_iCreate_song@song stored from wreg
 11570  1EE7  1283               	bcf	status, 5	;RP0=0, select bank0
 11571  1EE8  1303               	bcf	status, 6	;RP1=0, select bank0
 11572  1EE9  00AC               	movwf	(play_iCreate_song@song)
 11573                           	line	26
 11574                           	
 11575  1EEA                     l11669:	
 11576                           ;songs.c: 26: ser_putch(141);
 11577  1EEA  308D               	movlw	(08Dh)
 11578  1EEB  160A  158A  27DF   	fcall	_ser_putch
              160A  158A         
 11579                           	line	27
 11580                           ;songs.c: 27: ser_putch(song);
 11581  1EF0  1283               	bcf	status, 5	;RP0=0, select bank0
 11582  1EF1  1303               	bcf	status, 6	;RP1=0, select bank0
 11583  1EF2  082C               	movf	(play_iCreate_song@song),w
 11584  1EF3  160A  158A  27DF   	fcall	_ser_putch
              160A  158A         
 11585                           	line	28
 11586                           	
 11587  1EF8                     l4372:	
 11588  1EF8  0008               	return
 11589                           	opt stack 0
 11590                           GLOBAL	__end_of_play_iCreate_song
 11591  1EF9                     	__end_of_play_iCreate_song:
 11592 ;; =============== function _play_iCreate_song ends ============
 11593                           
 11594                           	signat	_play_iCreate_song,4216
 11595                           	global	_ser_putArr
 11596                           psect	text2236,local,class=CODE,delta=2
 11597                           global __ptext2236
 11598  124D                     __ptext2236:
 11599                           
 11600 ;; *************** function _ser_putArr *****************
 11601 ;; Defined at:
 11602 ;;		line 73 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\ser.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;  array           2   12[BANK0 ] PTR unsigned char 
 11605 ;;		 -> beep(5), champions(21), lookingForU2(29), superMarioBros(25), 
 11606 ;;		 -> finalCountdown(27), 
 11607 ;;  length          2   14[BANK0 ] int 
 11608 ;; Auto vars:     Size  Location     Type
 11609 ;;  i               2   19[BANK0 ] int 
 11610 ;; Return value:  Size  Location     Type
 11611 ;;		None               void
 11612 ;; Registers used:
 11613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11619 ;;      Params:         0       4       0       0       0
 11620 ;;      Locals:         0       2       0       0       0
 11621 ;;      Temps:          0       3       0       0       0
 11622 ;;      Totals:         0       9       0       0       0
 11623 ;;Total ram usage:        9 bytes
 11624 ;; Hardware stack levels used:    1
 11625 ;; Hardware stack levels required when called:    3
 11626 ;; This function calls:
 11627 ;;		_ser_putch
 11628 ;; This function is called by:
 11629 ;;		_initSongs
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           psect	text2236
 11633                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ser.c"
 11634                           	line	73
 11635                           	global	__size_of_ser_putArr
 11636  0039                     	__size_of_ser_putArr	equ	__end_of_ser_putArr-_ser_putArr
 11637                           	
 11638  124D                     _ser_putArr:	
 11639                           	opt	stack 2
 11640                           ; Regs used in _ser_putArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11641                           	line	74
 11642                           	
 11643  124D                     l11661:	
 11644                           ;ser.c: 74: for(int i =0; i< length; i++)
 11645  124D  1283               	bcf	status, 5	;RP0=0, select bank0
 11646  124E  1303               	bcf	status, 6	;RP1=0, select bank0
 11647  124F  01B3               	clrf	(ser_putArr@i)
 11648  1250  01B4               	clrf	(ser_putArr@i+1)
 11649  1251  2A76               	goto	l11667
 11650                           	line	75
 11651                           	
 11652  1252                     l3643:	
 11653                           	line	76
 11654                           	
 11655  1252                     l11663:	
 11656                           ;ser.c: 75: {
 11657                           ;ser.c: 76: ser_putch(array[i]);
 11658  1252  1283               	bcf	status, 5	;RP0=0, select bank0
 11659  1253  1303               	bcf	status, 6	;RP1=0, select bank0
 11660  1254  0833               	movf	(ser_putArr@i),w
 11661  1255  072C               	addwf	(ser_putArr@array),w
 11662  1256  00B1               	movwf	(??_ser_putArr+1)+0
 11663  1257  082D               	movf	(ser_putArr@array+1),w
 11664  1258  00B0               	movwf	(??_ser_putArr+0)+0
 11665  1259  1803               	skipnc
 11666  125A  0AB0               	incf	(??_ser_putArr+0)+0,f
 11667  125B  1FB3               	btfss	(ser_putArr@i),7
 11668  125C  2A5E               	goto	u6420
 11669  125D  03B0               	decf	(??_ser_putArr+0)+0,f
 11670  125E                     u6420:
 11671  125E  1283               	bcf	status, 5	;RP0=0, select bank0
 11672  125F  1303               	bcf	status, 6	;RP1=0, select bank0
 11673  1260  0830               	movf	(??_ser_putArr+0)+0,w
 11674  1261  00B2               	movwf	0+((??_ser_putArr+1)+0)+1
 11675  1262  0831               	movf	0+(??_ser_putArr+1)+0,w
 11676  1263  0084               	movwf	fsr0
 11677  1264  1783               	bsf	status,7
 11678  1265  1C32               	btfss	1+(??_ser_putArr+1)+0,0
 11679  1266  1383               	bcf	status,7
 11680  1267  0800               	movf	indf,w
 11681  1268  160A  158A  27DF   	fcall	_ser_putch
              160A  118A         
 11682                           	line	74
 11683                           	
 11684  126D                     l11665:	
 11685  126D  3001               	movlw	low(01h)
 11686  126E  1283               	bcf	status, 5	;RP0=0, select bank0
 11687  126F  1303               	bcf	status, 6	;RP1=0, select bank0
 11688  1270  07B3               	addwf	(ser_putArr@i),f
 11689  1271  1803               	skipnc
 11690  1272  0AB4               	incf	(ser_putArr@i+1),f
 11691  1273  3000               	movlw	high(01h)
 11692  1274  07B4               	addwf	(ser_putArr@i+1),f
 11693  1275  2A76               	goto	l11667
 11694                           	
 11695  1276                     l3642:	
 11696                           	
 11697  1276                     l11667:	
 11698  1276  0834               	movf	(ser_putArr@i+1),w
 11699  1277  3A80               	xorlw	80h
 11700  1278  00B0               	movwf	(??_ser_putArr+0)+0
 11701  1279  082F               	movf	(ser_putArr@length+1),w
 11702  127A  3A80               	xorlw	80h
 11703  127B  0230               	subwf	(??_ser_putArr+0)+0,w
 11704  127C  1D03               	skipz
 11705  127D  2A80               	goto	u6435
 11706  127E  082E               	movf	(ser_putArr@length),w
 11707  127F  0233               	subwf	(ser_putArr@i),w
 11708  1280                     u6435:
 11709                           
 11710  1280  1C03               	skipc
 11711  1281  2A83               	goto	u6431
 11712  1282  2A84               	goto	u6430
 11713  1283                     u6431:
 11714  1283  2A52               	goto	l11663
 11715  1284                     u6430:
 11716  1284  2A85               	goto	l3645
 11717                           	
 11718  1285                     l3644:	
 11719                           	line	78
 11720                           	
 11721  1285                     l3645:	
 11722  1285  0008               	return
 11723                           	opt stack 0
 11724                           GLOBAL	__end_of_ser_putArr
 11725  1286                     	__end_of_ser_putArr:
 11726 ;; =============== function _ser_putArr ends ============
 11727                           
 11728                           	signat	_ser_putArr,8312
 11729                           	global	_ser_getch
 11730                           psect	text2237,local,class=CODE,delta=2
 11731                           global __ptext2237
 11732  1030                     __ptext2237:
 11733                           
 11734 ;; *************** function _ser_getch *****************
 11735 ;; Defined at:
 11736 ;;		line 58 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\ser.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;		None
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;  c               1   11[BANK0 ] unsigned char 
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      unsigned char 
 11743 ;; Registers used:
 11744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11750 ;;      Params:         0       0       0       0       0
 11751 ;;      Locals:         0       1       0       0       0
 11752 ;;      Temps:          0       1       0       0       0
 11753 ;;      Totals:         0       2       0       0       0
 11754 ;;Total ram usage:        2 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    3
 11757 ;; This function calls:
 11758 ;;		_ser_isrx
 11759 ;; This function is called by:
 11760 ;;		_driveForDistance
 11761 ;;		_lookForVictim
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           psect	text2237
 11765                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ser.c"
 11766                           	line	58
 11767                           	global	__size_of_ser_getch
 11768  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
 11769                           	
 11770  1030                     _ser_getch:	
 11771                           	opt	stack 2
 11772                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11773                           	line	61
 11774                           	
 11775  1030                     l11645:	
 11776                           ;ser.c: 59: unsigned char c;
 11777                           ;ser.c: 61: while (ser_isrx()==0)
 11778  1030  2832               	goto	l11647
 11779                           	
 11780  1031                     l3637:	
 11781                           	line	62
 11782                           ;ser.c: 62: continue;
 11783  1031  2832               	goto	l11647
 11784                           	
 11785  1032                     l3636:	
 11786                           	line	61
 11787                           	
 11788  1032                     l11647:	
 11789  1032  160A  158A  2736   	fcall	_ser_isrx
              160A  118A         
 11790  1037  1C03               	btfss	status,0
 11791  1038  283A               	goto	u6411
 11792  1039  283B               	goto	u6410
 11793  103A                     u6411:
 11794  103A  2832               	goto	l11647
 11795  103B                     u6410:
 11796                           	
 11797  103B                     l3638:	
 11798                           	line	64
 11799                           ;ser.c: 64: GIE=0;
 11800  103B  138B               	bcf	(95/8),(95)&7
 11801                           	line	65
 11802                           	
 11803  103C                     l11649:	
 11804                           ;ser.c: 65: c=rxfifo[rxoptr];
 11805  103C  0879               	movf	(_rxoptr),w
 11806  103D  3EA0               	addlw	_rxfifo&0ffh
 11807  103E  0084               	movwf	fsr0
 11808  103F  1383               	bcf	status, 7	;select IRP bank1
 11809  1040  0800               	movf	indf,w
 11810  1041  1283               	bcf	status, 5	;RP0=0, select bank0
 11811  1042  1303               	bcf	status, 6	;RP1=0, select bank0
 11812  1043  00AA               	movwf	(??_ser_getch+0)+0
 11813  1044  082A               	movf	(??_ser_getch+0)+0,w
 11814  1045  00AB               	movwf	(ser_getch@c)
 11815                           	line	66
 11816                           	
 11817  1046                     l11651:	
 11818                           ;ser.c: 66: ++rxoptr;
 11819  1046  3001               	movlw	(01h)
 11820  1047  00AA               	movwf	(??_ser_getch+0)+0
 11821  1048  082A               	movf	(??_ser_getch+0)+0,w
 11822  1049  07F9               	addwf	(_rxoptr),f	;volatile
 11823                           	line	67
 11824                           	
 11825  104A                     l11653:	
 11826                           ;ser.c: 67: rxoptr &= (16-1);
 11827  104A  300F               	movlw	(0Fh)
 11828  104B  00AA               	movwf	(??_ser_getch+0)+0
 11829  104C  082A               	movf	(??_ser_getch+0)+0,w
 11830  104D  05F9               	andwf	(_rxoptr),f	;volatile
 11831                           	line	68
 11832                           	
 11833  104E                     l11655:	
 11834                           ;ser.c: 68: GIE=1;
 11835  104E  178B               	bsf	(95/8),(95)&7
 11836                           	line	69
 11837                           	
 11838  104F                     l11657:	
 11839                           ;ser.c: 69: return c;
 11840  104F  082B               	movf	(ser_getch@c),w
 11841  1050  2851               	goto	l3639
 11842                           	
 11843  1051                     l11659:	
 11844                           	line	70
 11845                           	
 11846  1051                     l3639:	
 11847  1051  0008               	return
 11848                           	opt stack 0
 11849                           GLOBAL	__end_of_ser_getch
 11850  1052                     	__end_of_ser_getch:
 11851 ;; =============== function _ser_getch ends ============
 11852                           
 11853                           	signat	_ser_getch,89
 11854                           	global	_lcd_write_data
 11855                           psect	text2238,local,class=CODE,delta=2
 11856                           global __ptext2238
 11857  1EF9                     __ptext2238:
 11858                           
 11859 ;; *************** function _lcd_write_data *****************
 11860 ;; Defined at:
 11861 ;;		line 20 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\lcd.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  databyte        1    wreg     unsigned char 
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;  databyte        1   12[BANK0 ] unsigned char 
 11866 ;; Return value:  Size  Location     Type
 11867 ;;		None               void
 11868 ;; Registers used:
 11869 ;;		wreg
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11875 ;;      Params:         0       0       0       0       0
 11876 ;;      Locals:         0       1       0       0       0
 11877 ;;      Temps:          0       2       0       0       0
 11878 ;;      Totals:         0       3       0       0       0
 11879 ;;Total ram usage:        3 bytes
 11880 ;; Hardware stack levels used:    1
 11881 ;; Hardware stack levels required when called:    2
 11882 ;; This function calls:
 11883 ;;		Nothing
 11884 ;; This function is called by:
 11885 ;;		_lcd_write_string
 11886 ;;		_lcd_write_1_digit_bcd
 11887 ;;		_goBackward
 11888 ;;		_goForward
 11889 ;;		_goLeft
 11890 ;;		_goReverse
 11891 ;;		_goRight
 11892 ;;		_checkForFinalDestination
 11893 ;;		_lookForVictim
 11894 ;;		_findWalls
 11895 ;;		_updateLocation
 11896 ;;		_main
 11897 ;;		_lcd_write_3_digit_bcd
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           psect	text2238
 11901                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\lcd.c"
 11902                           	line	20
 11903                           	global	__size_of_lcd_write_data
 11904  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
 11905                           	
 11906  1EF9                     _lcd_write_data:	
 11907                           	opt	stack 3
 11908                           ; Regs used in _lcd_write_data: [wreg]
 11909                           ;lcd_write_data@databyte stored from wreg
 11910  1EF9  1283               	bcf	status, 5	;RP0=0, select bank0
 11911  1EFA  1303               	bcf	status, 6	;RP1=0, select bank0
 11912  1EFB  00AC               	movwf	(lcd_write_data@databyte)
 11913                           	line	21
 11914                           	
 11915  1EFC                     l11637:	
 11916                           ;lcd.c: 21: RE2 = 0;
 11917  1EFC  1109               	bcf	(74/8),(74)&7
 11918                           	line	22
 11919                           ;lcd.c: 22: RE1 = 0;
 11920  1EFD  1089               	bcf	(73/8),(73)&7
 11921                           	line	23
 11922                           ;lcd.c: 23: RE0 = 1;
 11923  1EFE  1409               	bsf	(72/8),(72)&7
 11924                           	line	24
 11925                           	
 11926  1EFF                     l11639:	
 11927                           ;lcd.c: 24: PORTD = databyte;
 11928  1EFF  082C               	movf	(lcd_write_data@databyte),w
 11929  1F00  0088               	movwf	(8)	;volatile
 11930                           	line	25
 11931                           	
 11932  1F01                     l11641:	
 11933                           ;lcd.c: 25: RE2 = 1;
 11934  1F01  1509               	bsf	(74/8),(74)&7
 11935                           	line	26
 11936                           	
 11937  1F02                     l11643:	
 11938                           ;lcd.c: 26: RE2 = 0;
 11939  1F02  1109               	bcf	(74/8),(74)&7
 11940                           	line	27
 11941                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
 11942                           	opt asmopt_off
 11943  1F03  3007               movlw	7
 11944  1F04  00AB               movwf	((??_lcd_write_data+0)+0+1),f
 11945  1F05  307D               	movlw	125
 11946  1F06  00AA               movwf	((??_lcd_write_data+0)+0),f
 11947  1F07                     u7977:
 11948  1F07  0BAA               	decfsz	((??_lcd_write_data+0)+0),f
 11949  1F08  2F07               	goto	u7977
 11950  1F09  0BAB               	decfsz	((??_lcd_write_data+0)+0+1),f
 11951  1F0A  2F07               	goto	u7977
 11952                           opt asmopt_on
 11953                           
 11954                           	line	28
 11955                           	
 11956  1F0B                     l2129:	
 11957  1F0B  0008               	return
 11958                           	opt stack 0
 11959                           GLOBAL	__end_of_lcd_write_data
 11960  1F0C                     	__end_of_lcd_write_data:
 11961 ;; =============== function _lcd_write_data ends ============
 11962                           
 11963                           	signat	_lcd_write_data,4216
 11964                           	global	_lcd_write_control
 11965                           psect	text2239,local,class=CODE,delta=2
 11966                           global __ptext2239
 11967  1F0C                     __ptext2239:
 11968                           
 11969 ;; *************** function _lcd_write_control *****************
 11970 ;; Defined at:
 11971 ;;		line 8 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv
       0.8\COMPETITIONv0.8\lcd.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;  databyte        1    wreg     unsigned char 
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;  databyte        1   12[BANK0 ] unsigned char 
 11976 ;; Return value:  Size  Location     Type
 11977 ;;		None               void
 11978 ;; Registers used:
 11979 ;;		wreg
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11985 ;;      Params:         0       0       0       0       0
 11986 ;;      Locals:         0       1       0       0       0
 11987 ;;      Temps:          0       2       0       0       0
 11988 ;;      Totals:         0       3       0       0       0
 11989 ;;Total ram usage:        3 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; Hardware stack levels required when called:    2
 11992 ;; This function calls:
 11993 ;;		Nothing
 11994 ;; This function is called by:
 11995 ;;		_lcd_set_cursor
 11996 ;;		_lcd_init
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           psect	text2239
 12000                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\lcd.c"
 12001                           	line	8
 12002                           	global	__size_of_lcd_write_control
 12003  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
 12004                           	
 12005  1F0C                     _lcd_write_control:	
 12006                           	opt	stack 3
 12007                           ; Regs used in _lcd_write_control: [wreg]
 12008                           ;lcd_write_control@databyte stored from wreg
 12009  1F0C  1283               	bcf	status, 5	;RP0=0, select bank0
 12010  1F0D  1303               	bcf	status, 6	;RP1=0, select bank0
 12011  1F0E  00AC               	movwf	(lcd_write_control@databyte)
 12012                           	line	9
 12013                           	
 12014  1F0F                     l11629:	
 12015                           ;lcd.c: 9: RE2 = 0;
 12016  1F0F  1109               	bcf	(74/8),(74)&7
 12017                           	line	10
 12018                           ;lcd.c: 10: RE1 = 0;
 12019  1F10  1089               	bcf	(73/8),(73)&7
 12020                           	line	11
 12021                           ;lcd.c: 11: RE0 = 0;
 12022  1F11  1009               	bcf	(72/8),(72)&7
 12023                           	line	12
 12024                           	
 12025  1F12                     l11631:	
 12026                           ;lcd.c: 12: PORTD = databyte;
 12027  1F12  082C               	movf	(lcd_write_control@databyte),w
 12028  1F13  0088               	movwf	(8)	;volatile
 12029                           	line	13
 12030                           	
 12031  1F14                     l11633:	
 12032                           ;lcd.c: 13: RE2 = 1;
 12033  1F14  1509               	bsf	(74/8),(74)&7
 12034                           	line	14
 12035                           	
 12036  1F15                     l11635:	
 12037                           ;lcd.c: 14: RE2 = 0;
 12038  1F15  1109               	bcf	(74/8),(74)&7
 12039                           	line	15
 12040                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
 12041                           	opt asmopt_off
 12042  1F16  300D               movlw	13
 12043  1F17  00AB               movwf	((??_lcd_write_control+0)+0+1),f
 12044  1F18  30FB               	movlw	251
 12045  1F19  00AA               movwf	((??_lcd_write_control+0)+0),f
 12046  1F1A                     u7987:
 12047  1F1A  0BAA               	decfsz	((??_lcd_write_control+0)+0),f
 12048  1F1B  2F1A               	goto	u7987
 12049  1F1C  0BAB               	decfsz	((??_lcd_write_control+0)+0+1),f
 12050  1F1D  2F1A               	goto	u7987
 12051  1F1E  2F1F               	nop2
 12052                           opt asmopt_on
 12053                           
 12054                           	line	16
 12055                           	
 12056  1F1F                     l2126:	
 12057  1F1F  0008               	return
 12058                           	opt stack 0
 12059                           GLOBAL	__end_of_lcd_write_control
 12060  1F20                     	__end_of_lcd_write_control:
 12061 ;; =============== function _lcd_write_control ends ============
 12062                           
 12063                           	signat	_lcd_write_control,4216
 12064                           	global	_readEEPROM
 12065                           psect	text2240,local,class=CODE,delta=2
 12066                           global __ptext2240
 12067  133B                     __ptext2240:
 12068                           
 12069 ;; *************** function _readEEPROM *****************
 12070 ;; Defined at:
 12071 ;;		line 50 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\eeprom.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  addressH        1    wreg     unsigned char 
 12074 ;;  addressL        1   11[BANK0 ] unsigned char 
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;  addressH        1   15[BANK0 ] unsigned char 
 12077 ;;  returnData      1   16[BANK0 ] unsigned char 
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      unsigned char 
 12080 ;; Registers used:
 12081 ;;		wreg, status,2, status,0, pclath, cstack
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12087 ;;      Params:         0       1       0       0       0
 12088 ;;      Locals:         0       2       0       0       0
 12089 ;;      Temps:          0       3       0       0       0
 12090 ;;      Totals:         0       6       0       0       0
 12091 ;;Total ram usage:        6 bytes
 12092 ;; Hardware stack levels used:    1
 12093 ;; Hardware stack levels required when called:    3
 12094 ;; This function calls:
 12095 ;;		_initEEPROMMode
 12096 ;;		_writeSPIByte
 12097 ;; This function is called by:
 12098 ;;		_EEPROMToSerial
 12099 ;;		_testEEPROM
 12100 ;; This function uses a non-reentrant model
 12101 ;;
 12102                           psect	text2240
 12103                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\eeprom.c"
 12104                           	line	50
 12105                           	global	__size_of_readEEPROM
 12106  003F                     	__size_of_readEEPROM	equ	__end_of_readEEPROM-_readEEPROM
 12107                           	
 12108  133B                     _readEEPROM:	
 12109                           	opt	stack 3
 12110                           ; Regs used in _readEEPROM: [wreg+status,2+status,0+pclath+cstack]
 12111                           ;readEEPROM@addressH stored from wreg
 12112  133B  1283               	bcf	status, 5	;RP0=0, select bank0
 12113  133C  1303               	bcf	status, 6	;RP1=0, select bank0
 12114  133D  00AF               	movwf	(readEEPROM@addressH)
 12115                           	line	51
 12116                           	
 12117  133E                     l11611:	
 12118                           ;eeprom.c: 51: _delay((unsigned long)((100)*(20000000/4000.0)));
 12119                           	opt asmopt_off
 12120  133E  3003               movlw  3
 12121  133F  00AE               movwf	((??_readEEPROM+0)+0+2),f
 12122  1340  3088               movlw	136
 12123  1341  00AD               movwf	((??_readEEPROM+0)+0+1),f
 12124  1342  3056               	movlw	86
 12125  1343  00AC               movwf	((??_readEEPROM+0)+0),f
 12126  1344                     u7997:
 12127  1344  0BAC               	decfsz	((??_readEEPROM+0)+0),f
 12128  1345  2B44               	goto	u7997
 12129  1346  0BAD               	decfsz	((??_readEEPROM+0)+0+1),f
 12130  1347  2B44               	goto	u7997
 12131  1348  0BAE               	decfsz	((??_readEEPROM+0)+0+2),f
 12132  1349  2B44               	goto	u7997
 12133                           opt asmopt_on
 12134                           
 12135                           	line	52
 12136                           	
 12137  134A                     l11613:	
 12138                           ;eeprom.c: 52: initEEPROMMode();
 12139  134A  160A  158A  269D   	fcall	_initEEPROMMode
              160A  118A         
 12140                           	line	53
 12141                           	
 12142  134F                     l11615:	
 12143                           ;eeprom.c: 53: unsigned char returnData = 0;
 12144  134F  1283               	bcf	status, 5	;RP0=0, select bank0
 12145  1350  1303               	bcf	status, 6	;RP1=0, select bank0
 12146  1351  01B0               	clrf	(readEEPROM@returnData)
 12147                           	line	55
 12148                           	
 12149  1352                     l11617:	
 12150                           ;eeprom.c: 55: writeSPIByte(3);
 12151  1352  3003               	movlw	(03h)
 12152  1353  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12153                           	line	57
 12154                           	
 12155  1358                     l11619:	
 12156                           ;eeprom.c: 57: writeSPIByte(addressH);
 12157  1358  1283               	bcf	status, 5	;RP0=0, select bank0
 12158  1359  1303               	bcf	status, 6	;RP1=0, select bank0
 12159  135A  082F               	movf	(readEEPROM@addressH),w
 12160  135B  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12161                           	line	59
 12162                           	
 12163  1360                     l11621:	
 12164                           ;eeprom.c: 59: writeSPIByte(addressL);
 12165  1360  1283               	bcf	status, 5	;RP0=0, select bank0
 12166  1361  1303               	bcf	status, 6	;RP1=0, select bank0
 12167  1362  082B               	movf	(readEEPROM@addressL),w
 12168  1363  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12169                           	line	62
 12170                           	
 12171  1368                     l11623:	
 12172                           ;eeprom.c: 62: SSPIF = 0;
 12173  1368  1283               	bcf	status, 5	;RP0=0, select bank0
 12174  1369  1303               	bcf	status, 6	;RP1=0, select bank0
 12175  136A  118C               	bcf	(99/8),(99)&7
 12176                           	line	63
 12177                           ;eeprom.c: 63: SSPBUF = 0xFF;
 12178  136B  30FF               	movlw	(0FFh)
 12179  136C  0093               	movwf	(19)	;volatile
 12180                           	line	64
 12181                           ;eeprom.c: 64: while (!SSPIF);
 12182  136D  2B6E               	goto	l1413
 12183                           	
 12184  136E                     l1414:	
 12185                           	
 12186  136E                     l1413:	
 12187  136E  1D8C               	btfss	(99/8),(99)&7
 12188  136F  2B71               	goto	u6401
 12189  1370  2B72               	goto	u6400
 12190  1371                     u6401:
 12191  1371  2B6E               	goto	l1413
 12192  1372                     u6400:
 12193  1372  2B73               	goto	l11625
 12194                           	
 12195  1373                     l1415:	
 12196                           	line	65
 12197                           	
 12198  1373                     l11625:	
 12199                           ;eeprom.c: 65: returnData = SSPBUF;
 12200  1373  0813               	movf	(19),w	;volatile
 12201  1374  00AC               	movwf	(??_readEEPROM+0)+0
 12202  1375  082C               	movf	(??_readEEPROM+0)+0,w
 12203  1376  00B0               	movwf	(readEEPROM@returnData)
 12204                           	line	67
 12205                           ;eeprom.c: 67: return returnData;
 12206  1377  0830               	movf	(readEEPROM@returnData),w
 12207  1378  2B79               	goto	l1416
 12208                           	
 12209  1379                     l11627:	
 12210                           	line	68
 12211                           	
 12212  1379                     l1416:	
 12213  1379  0008               	return
 12214                           	opt stack 0
 12215                           GLOBAL	__end_of_readEEPROM
 12216  137A                     	__end_of_readEEPROM:
 12217 ;; =============== function _readEEPROM ends ============
 12218                           
 12219                           	signat	_readEEPROM,8313
 12220                           	global	_writeEEPROM
 12221                           psect	text2241,local,class=CODE,delta=2
 12222                           global __ptext2241
 12223  143C                     __ptext2241:
 12224                           
 12225 ;; *************** function _writeEEPROM *****************
 12226 ;; Defined at:
 12227 ;;		line 27 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\eeprom.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;  data            1    wreg     unsigned char 
 12230 ;;  addressH        1   11[BANK0 ] unsigned char 
 12231 ;;  addressL        1   12[BANK0 ] unsigned char 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;  data            1   16[BANK0 ] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;		None               void
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0, pclath, cstack
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12243 ;;      Params:         0       2       0       0       0
 12244 ;;      Locals:         0       1       0       0       0
 12245 ;;      Temps:          0       3       0       0       0
 12246 ;;      Totals:         0       6       0       0       0
 12247 ;;Total ram usage:        6 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    3
 12250 ;; This function calls:
 12251 ;;		_initEEPROMMode
 12252 ;;		_writeSPIByte
 12253 ;; This function is called by:
 12254 ;;		_addNewData
 12255 ;;		_testEEPROM
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           psect	text2241
 12259                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\eeprom.c"
 12260                           	line	27
 12261                           	global	__size_of_writeEEPROM
 12262  0043                     	__size_of_writeEEPROM	equ	__end_of_writeEEPROM-_writeEEPROM
 12263                           	
 12264  143C                     _writeEEPROM:	
 12265                           	opt	stack 2
 12266                           ; Regs used in _writeEEPROM: [wreg+status,2+status,0+pclath+cstack]
 12267                           ;writeEEPROM@data stored from wreg
 12268                           	line	29
 12269  143C  1283               	bcf	status, 5	;RP0=0, select bank0
 12270  143D  1303               	bcf	status, 6	;RP1=0, select bank0
 12271  143E  00B0               	movwf	(writeEEPROM@data)
 12272                           	
 12273  143F                     l11593:	
 12274                           ;eeprom.c: 29: _delay((unsigned long)((100)*(20000000/4000.0)));
 12275                           	opt asmopt_off
 12276  143F  3003               movlw  3
 12277  1440  00AF               movwf	((??_writeEEPROM+0)+0+2),f
 12278  1441  3088               movlw	136
 12279  1442  00AE               movwf	((??_writeEEPROM+0)+0+1),f
 12280  1443  3056               	movlw	86
 12281  1444  00AD               movwf	((??_writeEEPROM+0)+0),f
 12282  1445                     u8007:
 12283  1445  0BAD               	decfsz	((??_writeEEPROM+0)+0),f
 12284  1446  2C45               	goto	u8007
 12285  1447  0BAE               	decfsz	((??_writeEEPROM+0)+0+1),f
 12286  1448  2C45               	goto	u8007
 12287  1449  0BAF               	decfsz	((??_writeEEPROM+0)+0+2),f
 12288  144A  2C45               	goto	u8007
 12289                           opt asmopt_on
 12290                           
 12291                           	line	30
 12292                           	
 12293  144B                     l11595:	
 12294                           ;eeprom.c: 30: initEEPROMMode();
 12295  144B  160A  158A  269D   	fcall	_initEEPROMMode
              160A  118A         
 12296                           	line	32
 12297                           	
 12298  1450                     l11597:	
 12299                           ;eeprom.c: 32: writeSPIByte(6);
 12300  1450  3006               	movlw	(06h)
 12301  1451  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12302                           	line	33
 12303                           	
 12304  1456                     l11599:	
 12305                           ;eeprom.c: 33: initEEPROMMode();
 12306  1456  160A  158A  269D   	fcall	_initEEPROMMode
              160A  118A         
 12307                           	line	36
 12308                           	
 12309  145B                     l11601:	
 12310                           ;eeprom.c: 36: writeSPIByte(2);
 12311  145B  3002               	movlw	(02h)
 12312  145C  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12313                           	line	39
 12314                           	
 12315  1461                     l11603:	
 12316                           ;eeprom.c: 39: writeSPIByte(addressH);
 12317  1461  1283               	bcf	status, 5	;RP0=0, select bank0
 12318  1462  1303               	bcf	status, 6	;RP1=0, select bank0
 12319  1463  082B               	movf	(writeEEPROM@addressH),w
 12320  1464  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12321                           	line	42
 12322                           	
 12323  1469                     l11605:	
 12324                           ;eeprom.c: 42: writeSPIByte(addressL);
 12325  1469  1283               	bcf	status, 5	;RP0=0, select bank0
 12326  146A  1303               	bcf	status, 6	;RP1=0, select bank0
 12327  146B  082C               	movf	(writeEEPROM@addressL),w
 12328  146C  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12329                           	line	45
 12330                           	
 12331  1471                     l11607:	
 12332                           ;eeprom.c: 45: writeSPIByte(data);
 12333  1471  1283               	bcf	status, 5	;RP0=0, select bank0
 12334  1472  1303               	bcf	status, 6	;RP1=0, select bank0
 12335  1473  0830               	movf	(writeEEPROM@data),w
 12336  1474  160A  118A  2002   	fcall	_writeSPIByte
              160A  118A         
 12337                           	line	46
 12338                           	
 12339  1479                     l11609:	
 12340                           ;eeprom.c: 46: initEEPROMMode();
 12341  1479  160A  158A  269D   	fcall	_initEEPROMMode
              160A  118A         
 12342                           	line	47
 12343                           	
 12344  147E                     l1410:	
 12345  147E  0008               	return
 12346                           	opt stack 0
 12347                           GLOBAL	__end_of_writeEEPROM
 12348  147F                     	__end_of_writeEEPROM:
 12349 ;; =============== function _writeEEPROM ends ============
 12350                           
 12351                           	signat	_writeEEPROM,12408
 12352                           	global	_init_adc
 12353                           psect	text2242,local,class=CODE,delta=2
 12354                           global __ptext2242
 12355  1F20                     __ptext2242:
 12356                           
 12357 ;; *************** function _init_adc *****************
 12358 ;; Defined at:
 12359 ;;		line 48 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\adc.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;		None               void
 12366 ;; Registers used:
 12367 ;;		wreg, status,2
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12373 ;;      Params:         0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0
 12375 ;;      Temps:          0       1       0       0       0
 12376 ;;      Totals:         0       1       0       0       0
 12377 ;;Total ram usage:        1 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    2
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_init
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           psect	text2242
 12387                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\adc.c"
 12388                           	line	48
 12389                           	global	__size_of_init_adc
 12390  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 12391                           	
 12392  1F20                     _init_adc:	
 12393                           	opt	stack 4
 12394                           ; Regs used in _init_adc: [wreg+status,2]
 12395                           	line	50
 12396                           	
 12397  1F20                     l11583:	
 12398                           ;adc.c: 50: PORTA = 0;
 12399  1F20  1283               	bcf	status, 5	;RP0=0, select bank0
 12400  1F21  1303               	bcf	status, 6	;RP1=0, select bank0
 12401  1F22  0185               	clrf	(5)	;volatile
 12402                           	line	51
 12403                           	
 12404  1F23                     l11585:	
 12405                           ;adc.c: 51: TRISA = 0b00111111;
 12406  1F23  303F               	movlw	(03Fh)
 12407  1F24  1683               	bsf	status, 5	;RP0=1, select bank1
 12408  1F25  1303               	bcf	status, 6	;RP1=0, select bank1
 12409  1F26  0085               	movwf	(133)^080h	;volatile
 12410                           	line	54
 12411                           	
 12412  1F27                     l11587:	
 12413                           ;adc.c: 54: ADCON0 = 0b10100001;
 12414  1F27  30A1               	movlw	(0A1h)
 12415  1F28  1283               	bcf	status, 5	;RP0=0, select bank0
 12416  1F29  1303               	bcf	status, 6	;RP1=0, select bank0
 12417  1F2A  009F               	movwf	(31)	;volatile
 12418                           	line	55
 12419                           	
 12420  1F2B                     l11589:	
 12421                           ;adc.c: 55: ADCON1 = 0b00000010;
 12422  1F2B  3002               	movlw	(02h)
 12423  1F2C  1683               	bsf	status, 5	;RP0=1, select bank1
 12424  1F2D  1303               	bcf	status, 6	;RP1=0, select bank1
 12425  1F2E  009F               	movwf	(159)^080h	;volatile
 12426                           	line	57
 12427                           	
 12428  1F2F                     l11591:	
 12429                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
 12430                           	opt asmopt_off
 12431  1F2F  3053               movlw	83
 12432  1F30  1283               	bcf	status, 5	;RP0=0, select bank0
 12433  1F31  1303               	bcf	status, 6	;RP1=0, select bank0
 12434  1F32  00AA               movwf	(??_init_adc+0)+0,f
 12435  1F33                     u8017:
 12436  1F33  0BAA               decfsz	(??_init_adc+0)+0,f
 12437  1F34  2F33               	goto	u8017
 12438                           opt asmopt_on
 12439                           
 12440                           	line	58
 12441                           	
 12442  1F35                     l700:	
 12443  1F35  0008               	return
 12444                           	opt stack 0
 12445                           GLOBAL	__end_of_init_adc
 12446  1F36                     	__end_of_init_adc:
 12447 ;; =============== function _init_adc ends ============
 12448                           
 12449                           	signat	_init_adc,88
 12450                           	global	_adc_read
 12451                           psect	text2243,local,class=CODE,delta=2
 12452                           global __ptext2243
 12453  12FC                     __ptext2243:
 12454                           
 12455 ;; *************** function _adc_read *****************
 12456 ;; Defined at:
 12457 ;;		line 62 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\adc.c"
 12458 ;; Parameters:    Size  Location     Type
 12459 ;;		None
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;  adc_value       2   31[BANK0 ] volatile int 
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  2   25[BANK0 ] int 
 12464 ;; Registers used:
 12465 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12466 ;; Tracked objects:
 12467 ;;		On entry : 0/0
 12468 ;;		On exit  : 0/0
 12469 ;;		Unchanged: 0/0
 12470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12471 ;;      Params:         0       2       0       0       0
 12472 ;;      Locals:         0       2       0       0       0
 12473 ;;      Temps:          0       4       0       0       0
 12474 ;;      Totals:         0       8       0       0       0
 12475 ;;Total ram usage:        8 bytes
 12476 ;; Hardware stack levels used:    1
 12477 ;; Hardware stack levels required when called:    3
 12478 ;; This function calls:
 12479 ;;		___awdiv
 12480 ;; This function is called by:
 12481 ;;		_adc_read_channel
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           psect	text2243
 12485                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\adc.c"
 12486                           	line	62
 12487                           	global	__size_of_adc_read
 12488  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 12489                           	
 12490  12FC                     _adc_read:	
 12491                           	opt	stack 1
 12492                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12493                           	line	65
 12494                           	
 12495  12FC                     l10139:	
 12496                           ;adc.c: 63: volatile int adc_value;
 12497                           ;adc.c: 65: ADRESH = 0;
 12498  12FC  1283               	bcf	status, 5	;RP0=0, select bank0
 12499  12FD  1303               	bcf	status, 6	;RP1=0, select bank0
 12500  12FE  019E               	clrf	(30)	;volatile
 12501                           	line	66
 12502                           ;adc.c: 66: ADRESL = 0;
 12503  12FF  1683               	bsf	status, 5	;RP0=1, select bank1
 12504  1300  1303               	bcf	status, 6	;RP1=0, select bank1
 12505  1301  019E               	clrf	(158)^080h	;volatile
 12506                           	line	68
 12507                           	
 12508  1302                     l10141:	
 12509                           ;adc.c: 68: GO = 1;
 12510  1302  1283               	bcf	status, 5	;RP0=0, select bank0
 12511  1303  1303               	bcf	status, 6	;RP1=0, select bank0
 12512  1304  151F               	bsf	(250/8),(250)&7
 12513                           	line	69
 12514                           ;adc.c: 69: while(GO) continue;
 12515  1305  2B06               	goto	l703
 12516                           	
 12517  1306                     l704:	
 12518                           	
 12519  1306                     l703:	
 12520  1306  191F               	btfsc	(250/8),(250)&7
 12521  1307  2B09               	goto	u4431
 12522  1308  2B0A               	goto	u4430
 12523  1309                     u4431:
 12524  1309  2B06               	goto	l703
 12525  130A                     u4430:
 12526  130A  2B0B               	goto	l10143
 12527                           	
 12528  130B                     l705:	
 12529                           	line	75
 12530                           	
 12531  130B                     l10143:	
 12532                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
 12533  130B  3040               	movlw	low(040h)
 12534  130C  00B0               	movwf	(?___awdiv)
 12535  130D  3000               	movlw	high(040h)
 12536  130E  00B1               	movwf	((?___awdiv))+1
 12537  130F  1683               	bsf	status, 5	;RP0=1, select bank1
 12538  1310  1303               	bcf	status, 6	;RP1=0, select bank1
 12539  1311  081E               	movf	(158)^080h,w	;volatile
 12540  1312  1283               	bcf	status, 5	;RP0=0, select bank0
 12541  1313  1303               	bcf	status, 6	;RP1=0, select bank0
 12542  1314  00BB               	movwf	(??_adc_read+0)+0
 12543  1315  01BC               	clrf	(??_adc_read+0)+0+1
 12544  1316  083B               	movf	0+(??_adc_read+0)+0,w
 12545  1317  00B2               	movwf	0+(?___awdiv)+02h
 12546  1318  083C               	movf	1+(??_adc_read+0)+0,w
 12547  1319  00B3               	movwf	1+(?___awdiv)+02h
 12548  131A  160A  118A  278A   	fcall	___awdiv
              160A  118A         
 12549  131F  1283               	bcf	status, 5	;RP0=0, select bank0
 12550  1320  1303               	bcf	status, 6	;RP1=0, select bank0
 12551  1321  081E               	movf	(30),w	;volatile
 12552  1322  00BD               	movwf	(??_adc_read+2)+0
 12553  1323  01BE               	clrf	(??_adc_read+2)+0+1
 12554  1324  3002               	movlw	02h
 12555  1325  00FF               	movwf	btemp+1
 12556  1326                     u4445:
 12557  1326  1003               	clrc
 12558  1327  0DBD               	rlf	(??_adc_read+2)+0,f
 12559  1328  0DBE               	rlf	(??_adc_read+2)+1,f
 12560  1329  0BFF               	decfsz	btemp+1,f
 12561  132A  2B26               	goto	u4445
 12562  132B  0830               	movf	(0+(?___awdiv)),w
 12563  132C  073D               	addwf	0+(??_adc_read+2)+0,w
 12564  132D  00BF               	movwf	(adc_read@adc_value)	;volatile
 12565  132E  0831               	movf	(1+(?___awdiv)),w
 12566  132F  1803               	skipnc
 12567  1330  0A31               	incf	(1+(?___awdiv)),w
 12568  1331  073E               	addwf	1+(??_adc_read+2)+0,w
 12569  1332  00C0               	movwf	1+(adc_read@adc_value)	;volatile
 12570                           	line	77
 12571                           	
 12572  1333                     l10145:	
 12573                           ;adc.c: 77: return (adc_value);
 12574  1333  0840               	movf	(adc_read@adc_value+1),w	;volatile
 12575  1334  01BA               	clrf	(?_adc_read+1)
 12576  1335  07BA               	addwf	(?_adc_read+1)
 12577  1336  083F               	movf	(adc_read@adc_value),w	;volatile
 12578  1337  01B9               	clrf	(?_adc_read)
 12579  1338  07B9               	addwf	(?_adc_read)
 12580                           
 12581  1339  2B3A               	goto	l706
 12582                           	
 12583  133A                     l10147:	
 12584                           	line	78
 12585                           	
 12586  133A                     l706:	
 12587  133A  0008               	return
 12588                           	opt stack 0
 12589                           GLOBAL	__end_of_adc_read
 12590  133B                     	__end_of_adc_read:
 12591 ;; =============== function _adc_read ends ============
 12592                           
 12593                           	signat	_adc_read,90
 12594                           	global	___awdiv
 12595                           psect	text2244,local,class=CODE,delta=2
 12596                           global __ptext2244
 12597  178A                     __ptext2244:
 12598                           
 12599 ;; *************** function ___awdiv *****************
 12600 ;; Defined at:
 12601 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\awdiv.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;  divisor         2   16[BANK0 ] int 
 12604 ;;  dividend        2   18[BANK0 ] int 
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;  quotient        2   23[BANK0 ] int 
 12607 ;;  sign            1   22[BANK0 ] unsigned char 
 12608 ;;  counter         1   21[BANK0 ] unsigned char 
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  2   16[BANK0 ] int 
 12611 ;; Registers used:
 12612 ;;		wreg, status,2, status,0
 12613 ;; Tracked objects:
 12614 ;;		On entry : 0/0
 12615 ;;		On exit  : 0/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12618 ;;      Params:         0       4       0       0       0
 12619 ;;      Locals:         0       4       0       0       0
 12620 ;;      Temps:          0       1       0       0       0
 12621 ;;      Totals:         0       9       0       0       0
 12622 ;;Total ram usage:        9 bytes
 12623 ;; Hardware stack levels used:    1
 12624 ;; Hardware stack levels required when called:    2
 12625 ;; This function calls:
 12626 ;;		Nothing
 12627 ;; This function is called by:
 12628 ;;		_adc_read
 12629 ;;		_convert
 12630 ;; This function uses a non-reentrant model
 12631 ;;
 12632                           psect	text2244
 12633                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\awdiv.c"
 12634                           	line	5
 12635                           	global	__size_of___awdiv
 12636  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 12637                           	
 12638  178A                     ___awdiv:	
 12639                           	opt	stack 2
 12640                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12641                           	line	9
 12642                           	
 12643  178A                     l10053:	
 12644  178A  1283               	bcf	status, 5	;RP0=0, select bank0
 12645  178B  1303               	bcf	status, 6	;RP1=0, select bank0
 12646  178C  01B6               	clrf	(___awdiv@sign)
 12647                           	line	10
 12648  178D  1FB1               	btfss	(___awdiv@divisor+1),7
 12649  178E  2F90               	goto	u4271
 12650  178F  2F91               	goto	u4270
 12651  1790                     u4271:
 12652  1790  2F9A               	goto	l10057
 12653  1791                     u4270:
 12654                           	line	11
 12655                           	
 12656  1791                     l10055:	
 12657  1791  09B0               	comf	(___awdiv@divisor),f
 12658  1792  09B1               	comf	(___awdiv@divisor+1),f
 12659  1793  0AB0               	incf	(___awdiv@divisor),f
 12660  1794  1903               	skipnz
 12661  1795  0AB1               	incf	(___awdiv@divisor+1),f
 12662                           	line	12
 12663  1796  01B6               	clrf	(___awdiv@sign)
 12664  1797  1403               	bsf	status,0
 12665  1798  0DB6               	rlf	(___awdiv@sign),f
 12666  1799  2F9A               	goto	l10057
 12667                           	line	13
 12668                           	
 12669  179A                     l6991:	
 12670                           	line	14
 12671                           	
 12672  179A                     l10057:	
 12673  179A  1FB3               	btfss	(___awdiv@dividend+1),7
 12674  179B  2F9D               	goto	u4281
 12675  179C  2F9E               	goto	u4280
 12676  179D                     u4281:
 12677  179D  2FA8               	goto	l10063
 12678  179E                     u4280:
 12679                           	line	15
 12680                           	
 12681  179E                     l10059:	
 12682  179E  09B2               	comf	(___awdiv@dividend),f
 12683  179F  09B3               	comf	(___awdiv@dividend+1),f
 12684  17A0  0AB2               	incf	(___awdiv@dividend),f
 12685  17A1  1903               	skipnz
 12686  17A2  0AB3               	incf	(___awdiv@dividend+1),f
 12687                           	line	16
 12688                           	
 12689  17A3                     l10061:	
 12690  17A3  3001               	movlw	(01h)
 12691  17A4  00B4               	movwf	(??___awdiv+0)+0
 12692  17A5  0834               	movf	(??___awdiv+0)+0,w
 12693  17A6  06B6               	xorwf	(___awdiv@sign),f
 12694  17A7  2FA8               	goto	l10063
 12695                           	line	17
 12696                           	
 12697  17A8                     l6992:	
 12698                           	line	18
 12699                           	
 12700  17A8                     l10063:	
 12701  17A8  01B7               	clrf	(___awdiv@quotient)
 12702  17A9  01B8               	clrf	(___awdiv@quotient+1)
 12703                           	line	19
 12704                           	
 12705  17AA                     l10065:	
 12706  17AA  0831               	movf	(___awdiv@divisor+1),w
 12707  17AB  0430               	iorwf	(___awdiv@divisor),w
 12708  17AC  1903               	skipnz
 12709  17AD  2FAF               	goto	u4291
 12710  17AE  2FB0               	goto	u4290
 12711  17AF                     u4291:
 12712  17AF  2FEE               	goto	l10085
 12713  17B0                     u4290:
 12714                           	line	20
 12715                           	
 12716  17B0                     l10067:	
 12717  17B0  01B5               	clrf	(___awdiv@counter)
 12718  17B1  1403               	bsf	status,0
 12719  17B2  0DB5               	rlf	(___awdiv@counter),f
 12720                           	line	21
 12721  17B3  2FC0               	goto	l10073
 12722                           	
 12723  17B4                     l6995:	
 12724                           	line	22
 12725                           	
 12726  17B4                     l10069:	
 12727  17B4  3001               	movlw	01h
 12728                           	
 12729  17B5                     u4305:
 12730  17B5  1003               	clrc
 12731  17B6  0DB0               	rlf	(___awdiv@divisor),f
 12732  17B7  0DB1               	rlf	(___awdiv@divisor+1),f
 12733  17B8  3EFF               	addlw	-1
 12734  17B9  1D03               	skipz
 12735  17BA  2FB5               	goto	u4305
 12736                           	line	23
 12737                           	
 12738  17BB                     l10071:	
 12739  17BB  3001               	movlw	(01h)
 12740  17BC  00B4               	movwf	(??___awdiv+0)+0
 12741  17BD  0834               	movf	(??___awdiv+0)+0,w
 12742  17BE  07B5               	addwf	(___awdiv@counter),f
 12743  17BF  2FC0               	goto	l10073
 12744                           	line	24
 12745                           	
 12746  17C0                     l6994:	
 12747                           	line	21
 12748                           	
 12749  17C0                     l10073:	
 12750  17C0  1FB1               	btfss	(___awdiv@divisor+1),(15)&7
 12751  17C1  2FC3               	goto	u4311
 12752  17C2  2FC4               	goto	u4310
 12753  17C3                     u4311:
 12754  17C3  2FB4               	goto	l10069
 12755  17C4                     u4310:
 12756  17C4  2FC6               	goto	l10075
 12757                           	
 12758  17C5                     l6996:	
 12759  17C5  2FC6               	goto	l10075
 12760                           	line	25
 12761                           	
 12762  17C6                     l6997:	
 12763                           	line	26
 12764                           	
 12765  17C6                     l10075:	
 12766  17C6  3001               	movlw	01h
 12767                           	
 12768  17C7                     u4325:
 12769  17C7  1003               	clrc
 12770  17C8  0DB7               	rlf	(___awdiv@quotient),f
 12771  17C9  0DB8               	rlf	(___awdiv@quotient+1),f
 12772  17CA  3EFF               	addlw	-1
 12773  17CB  1D03               	skipz
 12774  17CC  2FC7               	goto	u4325
 12775                           	line	27
 12776  17CD  0831               	movf	(___awdiv@divisor+1),w
 12777  17CE  0233               	subwf	(___awdiv@dividend+1),w
 12778  17CF  1D03               	skipz
 12779  17D0  2FD3               	goto	u4335
 12780  17D1  0830               	movf	(___awdiv@divisor),w
 12781  17D2  0232               	subwf	(___awdiv@dividend),w
 12782  17D3                     u4335:
 12783  17D3  1C03               	skipc
 12784  17D4  2FD6               	goto	u4331
 12785  17D5  2FD7               	goto	u4330
 12786  17D6                     u4331:
 12787  17D6  2FDF               	goto	l10081
 12788  17D7                     u4330:
 12789                           	line	28
 12790                           	
 12791  17D7                     l10077:	
 12792  17D7  0830               	movf	(___awdiv@divisor),w
 12793  17D8  02B2               	subwf	(___awdiv@dividend),f
 12794  17D9  0831               	movf	(___awdiv@divisor+1),w
 12795  17DA  1C03               	skipc
 12796  17DB  03B3               	decf	(___awdiv@dividend+1),f
 12797  17DC  02B3               	subwf	(___awdiv@dividend+1),f
 12798                           	line	29
 12799                           	
 12800  17DD                     l10079:	
 12801  17DD  1437               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 12802  17DE  2FDF               	goto	l10081
 12803                           	line	30
 12804                           	
 12805  17DF                     l6998:	
 12806                           	line	31
 12807                           	
 12808  17DF                     l10081:	
 12809  17DF  3001               	movlw	01h
 12810                           	
 12811  17E0                     u4345:
 12812  17E0  1003               	clrc
 12813  17E1  0CB1               	rrf	(___awdiv@divisor+1),f
 12814  17E2  0CB0               	rrf	(___awdiv@divisor),f
 12815  17E3  3EFF               	addlw	-1
 12816  17E4  1D03               	skipz
 12817  17E5  2FE0               	goto	u4345
 12818                           	line	32
 12819                           	
 12820  17E6                     l10083:	
 12821  17E6  3001               	movlw	low(01h)
 12822  17E7  02B5               	subwf	(___awdiv@counter),f
 12823  17E8  1D03               	btfss	status,2
 12824  17E9  2FEB               	goto	u4351
 12825  17EA  2FEC               	goto	u4350
 12826  17EB                     u4351:
 12827  17EB  2FC6               	goto	l10075
 12828  17EC                     u4350:
 12829  17EC  2FEE               	goto	l10085
 12830                           	
 12831  17ED                     l6999:	
 12832  17ED  2FEE               	goto	l10085
 12833                           	line	33
 12834                           	
 12835  17EE                     l6993:	
 12836                           	line	34
 12837                           	
 12838  17EE                     l10085:	
 12839  17EE  0836               	movf	(___awdiv@sign),w
 12840  17EF  1D03               	skipz
 12841  17F0  2FF2               	goto	u4360
 12842  17F1  2FF8               	goto	l10089
 12843  17F2                     u4360:
 12844                           	line	35
 12845                           	
 12846  17F2                     l10087:	
 12847  17F2  09B7               	comf	(___awdiv@quotient),f
 12848  17F3  09B8               	comf	(___awdiv@quotient+1),f
 12849  17F4  0AB7               	incf	(___awdiv@quotient),f
 12850  17F5  1903               	skipnz
 12851  17F6  0AB8               	incf	(___awdiv@quotient+1),f
 12852  17F7  2FF8               	goto	l10089
 12853                           	
 12854  17F8                     l7000:	
 12855                           	line	36
 12856                           	
 12857  17F8                     l10089:	
 12858  17F8  0838               	movf	(___awdiv@quotient+1),w
 12859  17F9  01B1               	clrf	(?___awdiv+1)
 12860  17FA  07B1               	addwf	(?___awdiv+1)
 12861  17FB  0837               	movf	(___awdiv@quotient),w
 12862  17FC  01B0               	clrf	(?___awdiv)
 12863  17FD  07B0               	addwf	(?___awdiv)
 12864                           
 12865  17FE  2FFF               	goto	l7001
 12866                           	
 12867  17FF                     l10091:	
 12868                           	line	37
 12869                           	
 12870  17FF                     l7001:	
 12871  17FF  0008               	return
 12872                           	opt stack 0
 12873                           GLOBAL	__end_of___awdiv
 12874  1800                     	__end_of___awdiv:
 12875 ;; =============== function ___awdiv ends ============
 12876                           
 12877                           	signat	___awdiv,8314
 12878                           	global	___fttol
 12879                           psect	text2245,local,class=CODE,delta=2
 12880                           global __ptext2245
 12881  0A12                     __ptext2245:
 12882                           
 12883 ;; *************** function ___fttol *****************
 12884 ;; Defined at:
 12885 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\fttol.c"
 12886 ;; Parameters:    Size  Location     Type
 12887 ;;  f1              3   18[BANK0 ] float 
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;  lval            4   27[BANK0 ] unsigned long 
 12890 ;;  exp1            1   31[BANK0 ] unsigned char 
 12891 ;;  sign1           1   26[BANK0 ] unsigned char 
 12892 ;; Return value:  Size  Location     Type
 12893 ;;                  4   18[BANK0 ] long 
 12894 ;; Registers used:
 12895 ;;		wreg, status,2, status,0
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12901 ;;      Params:         0       4       0       0       0
 12902 ;;      Locals:         0       6       0       0       0
 12903 ;;      Temps:          0       4       0       0       0
 12904 ;;      Totals:         0      14       0       0       0
 12905 ;;Total ram usage:       14 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; Hardware stack levels required when called:    2
 12908 ;; This function calls:
 12909 ;;		Nothing
 12910 ;; This function is called by:
 12911 ;;		_goParallel
 12912 ;; This function uses a non-reentrant model
 12913 ;;
 12914                           psect	text2245
 12915                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\fttol.c"
 12916                           	line	45
 12917                           	global	__size_of___fttol
 12918  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 12919                           	
 12920  0A12                     ___fttol:	
 12921                           	opt	stack 4
 12922                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 12923                           	line	49
 12924                           	
 12925  0A12                     l9993:	
 12926  0A12  1283               	bcf	status, 5	;RP0=0, select bank0
 12927  0A13  1303               	bcf	status, 6	;RP1=0, select bank0
 12928  0A14  0832               	movf	(___fttol@f1),w
 12929  0A15  00B6               	movwf	((??___fttol+0)+0)
 12930  0A16  0833               	movf	(___fttol@f1+1),w
 12931  0A17  00B7               	movwf	((??___fttol+0)+0+1)
 12932  0A18  0834               	movf	(___fttol@f1+2),w
 12933  0A19  00B8               	movwf	((??___fttol+0)+0+2)
 12934  0A1A  1003               	clrc
 12935  0A1B  0D37               	rlf	(??___fttol+0)+1,w
 12936  0A1C  0D38               	rlf	(??___fttol+0)+2,w
 12937  0A1D  00B9               	movwf	(??___fttol+3)+0
 12938  0A1E  0839               	movf	(??___fttol+3)+0,w
 12939  0A1F  00BF               	movwf	(___fttol@exp1)
 12940  0A20  08BF               	movf	((___fttol@exp1)),f
 12941  0A21  1D03               	skipz
 12942  0A22  2A24               	goto	u4151
 12943  0A23  2A25               	goto	u4150
 12944  0A24                     u4151:
 12945  0A24  2A2F               	goto	l9999
 12946  0A25                     u4150:
 12947                           	line	50
 12948                           	
 12949  0A25                     l9995:	
 12950  0A25  3000               	movlw	0
 12951  0A26  00B5               	movwf	(?___fttol+3)
 12952  0A27  3000               	movlw	0
 12953  0A28  00B4               	movwf	(?___fttol+2)
 12954  0A29  3000               	movlw	0
 12955  0A2A  00B3               	movwf	(?___fttol+1)
 12956  0A2B  3000               	movlw	0
 12957  0A2C  00B2               	movwf	(?___fttol)
 12958                           
 12959  0A2D  2AB7               	goto	l6961
 12960                           	
 12961  0A2E                     l9997:	
 12962  0A2E  2AB7               	goto	l6961
 12963                           	
 12964  0A2F                     l6960:	
 12965                           	line	51
 12966                           	
 12967  0A2F                     l9999:	
 12968  0A2F  0832               	movf	(___fttol@f1),w
 12969  0A30  00B6               	movwf	((??___fttol+0)+0)
 12970  0A31  0833               	movf	(___fttol@f1+1),w
 12971  0A32  00B7               	movwf	((??___fttol+0)+0+1)
 12972  0A33  0834               	movf	(___fttol@f1+2),w
 12973  0A34  00B8               	movwf	((??___fttol+0)+0+2)
 12974  0A35  3017               	movlw	017h
 12975  0A36                     u4165:
 12976  0A36  1003               	clrc
 12977  0A37  0CB8               	rrf	(??___fttol+0)+2,f
 12978  0A38  0CB7               	rrf	(??___fttol+0)+1,f
 12979  0A39  0CB6               	rrf	(??___fttol+0)+0,f
 12980  0A3A                     u4160:
 12981  0A3A  3EFF               	addlw	-1
 12982  0A3B  1D03               	skipz
 12983  0A3C  2A36               	goto	u4165
 12984  0A3D  0836               	movf	0+(??___fttol+0)+0,w
 12985  0A3E  00B9               	movwf	(??___fttol+3)+0
 12986  0A3F  0839               	movf	(??___fttol+3)+0,w
 12987  0A40  00BA               	movwf	(___fttol@sign1)
 12988                           	line	52
 12989                           	
 12990  0A41                     l10001:	
 12991  0A41  17B3               	bsf	(___fttol@f1)+(15/8),(15)&7
 12992                           	line	53
 12993                           	
 12994  0A42                     l10003:	
 12995  0A42  30FF               	movlw	0FFh
 12996  0A43  05B2               	andwf	(___fttol@f1),f
 12997  0A44  30FF               	movlw	0FFh
 12998  0A45  05B3               	andwf	(___fttol@f1+1),f
 12999  0A46  3000               	movlw	0
 13000  0A47  05B4               	andwf	(___fttol@f1+2),f
 13001                           	line	54
 13002                           	
 13003  0A48                     l10005:	
 13004  0A48  0832               	movf	(___fttol@f1),w
 13005  0A49  00BB               	movwf	(___fttol@lval)
 13006  0A4A  0833               	movf	(___fttol@f1+1),w
 13007  0A4B  00BC               	movwf	((___fttol@lval))+1
 13008  0A4C  0834               	movf	(___fttol@f1+2),w
 13009  0A4D  00BD               	movwf	((___fttol@lval))+2
 13010  0A4E  01BE               	clrf	((___fttol@lval))+3
 13011                           	line	55
 13012                           	
 13013  0A4F                     l10007:	
 13014  0A4F  308E               	movlw	low(08Eh)
 13015  0A50  02BF               	subwf	(___fttol@exp1),f
 13016                           	line	56
 13017                           	
 13018  0A51                     l10009:	
 13019  0A51  1FBF               	btfss	(___fttol@exp1),7
 13020  0A52  2A54               	goto	u4171
 13021  0A53  2A55               	goto	u4170
 13022  0A54                     u4171:
 13023  0A54  2A7A               	goto	l10019
 13024  0A55                     u4170:
 13025                           	line	57
 13026                           	
 13027  0A55                     l10011:	
 13028  0A55  083F               	movf	(___fttol@exp1),w
 13029  0A56  3A80               	xorlw	80h
 13030  0A57  3E8F               	addlw	-((-15)^80h)
 13031  0A58  1803               	skipnc
 13032  0A59  2A5B               	goto	u4181
 13033  0A5A  2A5C               	goto	u4180
 13034  0A5B                     u4181:
 13035  0A5B  2A67               	goto	l10017
 13036  0A5C                     u4180:
 13037                           	line	58
 13038                           	
 13039  0A5C                     l10013:	
 13040  0A5C  3000               	movlw	0
 13041  0A5D  00B5               	movwf	(?___fttol+3)
 13042  0A5E  3000               	movlw	0
 13043  0A5F  00B4               	movwf	(?___fttol+2)
 13044  0A60  3000               	movlw	0
 13045  0A61  00B3               	movwf	(?___fttol+1)
 13046  0A62  3000               	movlw	0
 13047  0A63  00B2               	movwf	(?___fttol)
 13048                           
 13049  0A64  2AB7               	goto	l6961
 13050                           	
 13051  0A65                     l10015:	
 13052  0A65  2AB7               	goto	l6961
 13053                           	
 13054  0A66                     l6963:	
 13055  0A66  2A67               	goto	l10017
 13056                           	line	59
 13057                           	
 13058  0A67                     l6964:	
 13059                           	line	60
 13060                           	
 13061  0A67                     l10017:	
 13062  0A67  3001               	movlw	01h
 13063  0A68                     u4195:
 13064  0A68  1003               	clrc
 13065  0A69  0CBE               	rrf	(___fttol@lval+3),f
 13066  0A6A  0CBD               	rrf	(___fttol@lval+2),f
 13067  0A6B  0CBC               	rrf	(___fttol@lval+1),f
 13068  0A6C  0CBB               	rrf	(___fttol@lval),f
 13069  0A6D  3EFF               	addlw	-1
 13070  0A6E  1D03               	skipz
 13071  0A6F  2A68               	goto	u4195
 13072                           
 13073                           	line	61
 13074  0A70  3001               	movlw	(01h)
 13075  0A71  00B6               	movwf	(??___fttol+0)+0
 13076  0A72  0836               	movf	(??___fttol+0)+0,w
 13077  0A73  07BF               	addwf	(___fttol@exp1),f
 13078  0A74  1D03               	btfss	status,2
 13079  0A75  2A77               	goto	u4201
 13080  0A76  2A78               	goto	u4200
 13081  0A77                     u4201:
 13082  0A77  2A67               	goto	l10017
 13083  0A78                     u4200:
 13084  0A78  2A9E               	goto	l10029
 13085                           	
 13086  0A79                     l6965:	
 13087                           	line	62
 13088  0A79  2A9E               	goto	l10029
 13089                           	
 13090  0A7A                     l6962:	
 13091                           	line	63
 13092                           	
 13093  0A7A                     l10019:	
 13094  0A7A  3018               	movlw	(018h)
 13095  0A7B  023F               	subwf	(___fttol@exp1),w
 13096  0A7C  1C03               	skipc
 13097  0A7D  2A7F               	goto	u4211
 13098  0A7E  2A80               	goto	u4210
 13099  0A7F                     u4211:
 13100  0A7F  2A97               	goto	l10027
 13101  0A80                     u4210:
 13102                           	line	64
 13103                           	
 13104  0A80                     l10021:	
 13105  0A80  3000               	movlw	0
 13106  0A81  00B5               	movwf	(?___fttol+3)
 13107  0A82  3000               	movlw	0
 13108  0A83  00B4               	movwf	(?___fttol+2)
 13109  0A84  3000               	movlw	0
 13110  0A85  00B3               	movwf	(?___fttol+1)
 13111  0A86  3000               	movlw	0
 13112  0A87  00B2               	movwf	(?___fttol)
 13113                           
 13114  0A88  2AB7               	goto	l6961
 13115                           	
 13116  0A89                     l10023:	
 13117  0A89  2AB7               	goto	l6961
 13118                           	
 13119  0A8A                     l6967:	
 13120                           	line	65
 13121  0A8A  2A97               	goto	l10027
 13122                           	
 13123  0A8B                     l6969:	
 13124                           	line	66
 13125                           	
 13126  0A8B                     l10025:	
 13127  0A8B  3001               	movlw	01h
 13128  0A8C  00B6               	movwf	(??___fttol+0)+0
 13129  0A8D                     u4225:
 13130  0A8D  1003               	clrc
 13131  0A8E  0DBB               	rlf	(___fttol@lval),f
 13132  0A8F  0DBC               	rlf	(___fttol@lval+1),f
 13133  0A90  0DBD               	rlf	(___fttol@lval+2),f
 13134  0A91  0DBE               	rlf	(___fttol@lval+3),f
 13135  0A92  0BB6               	decfsz	(??___fttol+0)+0
 13136  0A93  2A8D               	goto	u4225
 13137                           	line	67
 13138  0A94  3001               	movlw	low(01h)
 13139  0A95  02BF               	subwf	(___fttol@exp1),f
 13140  0A96  2A97               	goto	l10027
 13141                           	line	68
 13142                           	
 13143  0A97                     l6968:	
 13144                           	line	65
 13145                           	
 13146  0A97                     l10027:	
 13147  0A97  08BF               	movf	(___fttol@exp1),f
 13148  0A98  1D03               	skipz
 13149  0A99  2A9B               	goto	u4231
 13150  0A9A  2A9C               	goto	u4230
 13151  0A9B                     u4231:
 13152  0A9B  2A8B               	goto	l10025
 13153  0A9C                     u4230:
 13154  0A9C  2A9E               	goto	l10029
 13155                           	
 13156  0A9D                     l6970:	
 13157  0A9D  2A9E               	goto	l10029
 13158                           	line	69
 13159                           	
 13160  0A9E                     l6966:	
 13161                           	line	70
 13162                           	
 13163  0A9E                     l10029:	
 13164  0A9E  083A               	movf	(___fttol@sign1),w
 13165  0A9F  1D03               	skipz
 13166  0AA0  2AA2               	goto	u4240
 13167  0AA1  2AAE               	goto	l10033
 13168  0AA2                     u4240:
 13169                           	line	71
 13170                           	
 13171  0AA2                     l10031:	
 13172  0AA2  09BB               	comf	(___fttol@lval),f
 13173  0AA3  09BC               	comf	(___fttol@lval+1),f
 13174  0AA4  09BD               	comf	(___fttol@lval+2),f
 13175  0AA5  09BE               	comf	(___fttol@lval+3),f
 13176  0AA6  0ABB               	incf	(___fttol@lval),f
 13177  0AA7  1903               	skipnz
 13178  0AA8  0ABC               	incf	(___fttol@lval+1),f
 13179  0AA9  1903               	skipnz
 13180  0AAA  0ABD               	incf	(___fttol@lval+2),f
 13181  0AAB  1903               	skipnz
 13182  0AAC  0ABE               	incf	(___fttol@lval+3),f
 13183  0AAD  2AAE               	goto	l10033
 13184                           	
 13185  0AAE                     l6971:	
 13186                           	line	72
 13187                           	
 13188  0AAE                     l10033:	
 13189  0AAE  083E               	movf	(___fttol@lval+3),w
 13190  0AAF  00B5               	movwf	(?___fttol+3)
 13191  0AB0  083D               	movf	(___fttol@lval+2),w
 13192  0AB1  00B4               	movwf	(?___fttol+2)
 13193  0AB2  083C               	movf	(___fttol@lval+1),w
 13194  0AB3  00B3               	movwf	(?___fttol+1)
 13195  0AB4  083B               	movf	(___fttol@lval),w
 13196  0AB5  00B2               	movwf	(?___fttol)
 13197                           
 13198  0AB6  2AB7               	goto	l6961
 13199                           	
 13200  0AB7                     l10035:	
 13201                           	line	73
 13202                           	
 13203  0AB7                     l6961:	
 13204  0AB7  0008               	return
 13205                           	opt stack 0
 13206                           GLOBAL	__end_of___fttol
 13207  0AB8                     	__end_of___fttol:
 13208 ;; =============== function ___fttol ends ============
 13209                           
 13210                           	signat	___fttol,4220
 13211                           	global	___ftpack
 13212                           psect	text2246,local,class=CODE,delta=2
 13213                           global __ptext2246
 13214  077C                     __ptext2246:
 13215                           
 13216 ;; *************** function ___ftpack *****************
 13217 ;; Defined at:
 13218 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\float.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;  arg             3   10[BANK0 ] unsigned um
 13221 ;;  exp             1   13[BANK0 ] unsigned char 
 13222 ;;  sign            1   14[BANK0 ] unsigned char 
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;		None
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  3   10[BANK0 ] float 
 13227 ;; Registers used:
 13228 ;;		wreg, status,2, status,0
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13234 ;;      Params:         0       5       0       0       0
 13235 ;;      Locals:         0       0       0       0       0
 13236 ;;      Temps:          0       3       0       0       0
 13237 ;;      Totals:         0       8       0       0       0
 13238 ;;Total ram usage:        8 bytes
 13239 ;; Hardware stack levels used:    1
 13240 ;; Hardware stack levels required when called:    2
 13241 ;; This function calls:
 13242 ;;		Nothing
 13243 ;; This function is called by:
 13244 ;;		___ftadd
 13245 ;;		___ftmul
 13246 ;;		___lbtoft
 13247 ;;		___ftdiv
 13248 ;;		___abtoft
 13249 ;;		___awtoft
 13250 ;;		___lwtoft
 13251 ;;		___altoft
 13252 ;;		___lltoft
 13253 ;;		___attoft
 13254 ;;		___lttoft
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           psect	text2246
 13258                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\float.c"
 13259                           	line	63
 13260                           	global	__size_of___ftpack
 13261  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 13262                           	
 13263  077C                     ___ftpack:	
 13264                           	opt	stack 3
 13265                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 13266                           	line	64
 13267                           	
 13268  077C                     l11447:	
 13269  077C  1283               	bcf	status, 5	;RP0=0, select bank0
 13270  077D  1303               	bcf	status, 6	;RP1=0, select bank0
 13271  077E  082D               	movf	(___ftpack@exp),w
 13272  077F  1D03               	skipz
 13273  0780  2F82               	goto	u6130
 13274  0781  2F8A               	goto	l11451
 13275  0782                     u6130:
 13276                           	
 13277  0782                     l11449:	
 13278  0782  082C               	movf	(___ftpack@arg+2),w
 13279  0783  042B               	iorwf	(___ftpack@arg+1),w
 13280  0784  042A               	iorwf	(___ftpack@arg),w
 13281  0785  1D03               	skipz
 13282  0786  2F88               	goto	u6141
 13283  0787  2F89               	goto	u6140
 13284  0788                     u6141:
 13285  0788  2FA0               	goto	l11457
 13286  0789                     u6140:
 13287  0789  2F8A               	goto	l11451
 13288                           	
 13289  078A                     l7185:	
 13290                           	line	65
 13291                           	
 13292  078A                     l11451:	
 13293  078A  3000               	movlw	0x0
 13294  078B  00AA               	movwf	(?___ftpack)
 13295  078C  3000               	movlw	0x0
 13296  078D  00AB               	movwf	(?___ftpack+1)
 13297  078E  3000               	movlw	0x0
 13298  078F  00AC               	movwf	(?___ftpack+2)
 13299  0790  2FF8               	goto	l7186
 13300                           	
 13301  0791                     l11453:	
 13302  0791  2FF8               	goto	l7186
 13303                           	
 13304  0792                     l7183:	
 13305                           	line	66
 13306  0792  2FA0               	goto	l11457
 13307                           	
 13308  0793                     l7188:	
 13309                           	line	67
 13310                           	
 13311  0793                     l11455:	
 13312  0793  3001               	movlw	(01h)
 13313  0794  00AF               	movwf	(??___ftpack+0)+0
 13314  0795  082F               	movf	(??___ftpack+0)+0,w
 13315  0796  07AD               	addwf	(___ftpack@exp),f
 13316                           	line	68
 13317  0797  3001               	movlw	01h
 13318  0798                     u6155:
 13319  0798  1003               	clrc
 13320  0799  0CAC               	rrf	(___ftpack@arg+2),f
 13321  079A  0CAB               	rrf	(___ftpack@arg+1),f
 13322  079B  0CAA               	rrf	(___ftpack@arg),f
 13323  079C  3EFF               	addlw	-1
 13324  079D  1D03               	skipz
 13325  079E  2F98               	goto	u6155
 13326                           
 13327  079F  2FA0               	goto	l11457
 13328                           	line	69
 13329                           	
 13330  07A0                     l7187:	
 13331                           	line	66
 13332                           	
 13333  07A0                     l11457:	
 13334  07A0  30FE               	movlw	low highword(0FE0000h)
 13335  07A1  052C               	andwf	(___ftpack@arg+2),w
 13336  07A2  1D03               	btfss	status,2
 13337  07A3  2FA5               	goto	u6161
 13338  07A4  2FA6               	goto	u6160
 13339  07A5                     u6161:
 13340  07A5  2F93               	goto	l11455
 13341  07A6                     u6160:
 13342  07A6  2FBE               	goto	l7190
 13343                           	
 13344  07A7                     l7189:	
 13345                           	line	70
 13346  07A7  2FBE               	goto	l7190
 13347                           	
 13348  07A8                     l7191:	
 13349                           	line	71
 13350                           	
 13351  07A8                     l11459:	
 13352  07A8  3001               	movlw	(01h)
 13353  07A9  00AF               	movwf	(??___ftpack+0)+0
 13354  07AA  082F               	movf	(??___ftpack+0)+0,w
 13355  07AB  07AD               	addwf	(___ftpack@exp),f
 13356                           	line	72
 13357                           	
 13358  07AC                     l11461:	
 13359  07AC  3001               	movlw	01h
 13360  07AD  07AA               	addwf	(___ftpack@arg),f
 13361  07AE  3000               	movlw	0
 13362  07AF  1803               	skipnc
 13363  07B0  3001               movlw 1
 13364  07B1  07AB               	addwf	(___ftpack@arg+1),f
 13365  07B2  3000               	movlw	0
 13366  07B3  1803               	skipnc
 13367  07B4  3001               movlw 1
 13368  07B5  07AC               	addwf	(___ftpack@arg+2),f
 13369                           	line	73
 13370                           	
 13371  07B6                     l11463:	
 13372  07B6  3001               	movlw	01h
 13373  07B7                     u6175:
 13374  07B7  1003               	clrc
 13375  07B8  0CAC               	rrf	(___ftpack@arg+2),f
 13376  07B9  0CAB               	rrf	(___ftpack@arg+1),f
 13377  07BA  0CAA               	rrf	(___ftpack@arg),f
 13378  07BB  3EFF               	addlw	-1
 13379  07BC  1D03               	skipz
 13380  07BD  2FB7               	goto	u6175
 13381                           
 13382                           	line	74
 13383                           	
 13384  07BE                     l7190:	
 13385                           	line	70
 13386  07BE  30FF               	movlw	low highword(0FF0000h)
 13387  07BF  052C               	andwf	(___ftpack@arg+2),w
 13388  07C0  1D03               	btfss	status,2
 13389  07C1  2FC3               	goto	u6181
 13390  07C2  2FC4               	goto	u6180
 13391  07C3                     u6181:
 13392  07C3  2FA8               	goto	l11459
 13393  07C4                     u6180:
 13394  07C4  2FD1               	goto	l11467
 13395                           	
 13396  07C5                     l7192:	
 13397                           	line	75
 13398  07C5  2FD1               	goto	l11467
 13399                           	
 13400  07C6                     l7194:	
 13401                           	line	76
 13402                           	
 13403  07C6                     l11465:	
 13404  07C6  3001               	movlw	low(01h)
 13405  07C7  02AD               	subwf	(___ftpack@exp),f
 13406                           	line	77
 13407  07C8  3001               	movlw	01h
 13408  07C9                     u6195:
 13409  07C9  1003               	clrc
 13410  07CA  0DAA               	rlf	(___ftpack@arg),f
 13411  07CB  0DAB               	rlf	(___ftpack@arg+1),f
 13412  07CC  0DAC               	rlf	(___ftpack@arg+2),f
 13413  07CD  3EFF               	addlw	-1
 13414  07CE  1D03               	skipz
 13415  07CF  2FC9               	goto	u6195
 13416  07D0  2FD1               	goto	l11467
 13417                           	line	78
 13418                           	
 13419  07D1                     l7193:	
 13420                           	line	75
 13421                           	
 13422  07D1                     l11467:	
 13423  07D1  1FAB               	btfss	(___ftpack@arg+1),(15)&7
 13424  07D2  2FD4               	goto	u6201
 13425  07D3  2FD5               	goto	u6200
 13426  07D4                     u6201:
 13427  07D4  2FC6               	goto	l11465
 13428  07D5                     u6200:
 13429                           	
 13430  07D5                     l7195:	
 13431                           	line	79
 13432  07D5  182D               	btfsc	(___ftpack@exp),(0)&7
 13433  07D6  2FD8               	goto	u6211
 13434  07D7  2FD9               	goto	u6210
 13435  07D8                     u6211:
 13436  07D8  2FDF               	goto	l7196
 13437  07D9                     u6210:
 13438                           	line	80
 13439                           	
 13440  07D9                     l11469:	
 13441  07D9  30FF               	movlw	0FFh
 13442  07DA  05AA               	andwf	(___ftpack@arg),f
 13443  07DB  307F               	movlw	07Fh
 13444  07DC  05AB               	andwf	(___ftpack@arg+1),f
 13445  07DD  30FF               	movlw	0FFh
 13446  07DE  05AC               	andwf	(___ftpack@arg+2),f
 13447                           	
 13448  07DF                     l7196:	
 13449                           	line	81
 13450  07DF  1003               	clrc
 13451  07E0  0CAD               	rrf	(___ftpack@exp),f
 13452                           
 13453                           	line	82
 13454                           	
 13455  07E1                     l11471:	
 13456  07E1  082D               	movf	(___ftpack@exp),w
 13457  07E2  00AF               	movwf	((??___ftpack+0)+0)
 13458  07E3  01B0               	clrf	((??___ftpack+0)+0+1)
 13459  07E4  01B1               	clrf	((??___ftpack+0)+0+2)
 13460  07E5  3010               	movlw	010h
 13461  07E6                     u6225:
 13462  07E6  1003               	clrc
 13463  07E7  0DAF               	rlf	(??___ftpack+0)+0,f
 13464  07E8  0DB0               	rlf	(??___ftpack+0)+1,f
 13465  07E9  0DB1               	rlf	(??___ftpack+0)+2,f
 13466  07EA                     u6220:
 13467  07EA  3EFF               	addlw	-1
 13468  07EB  1D03               	skipz
 13469  07EC  2FE6               	goto	u6225
 13470  07ED  082F               	movf	0+(??___ftpack+0)+0,w
 13471  07EE  04AA               	iorwf	(___ftpack@arg),f
 13472  07EF  0830               	movf	1+(??___ftpack+0)+0,w
 13473  07F0  04AB               	iorwf	(___ftpack@arg+1),f
 13474  07F1  0831               	movf	2+(??___ftpack+0)+0,w
 13475  07F2  04AC               	iorwf	(___ftpack@arg+2),f
 13476                           	line	83
 13477                           	
 13478  07F3                     l11473:	
 13479  07F3  082E               	movf	(___ftpack@sign),w
 13480  07F4  1D03               	skipz
 13481  07F5  2FF7               	goto	u6230
 13482  07F6  2FF8               	goto	l7197
 13483  07F7                     u6230:
 13484                           	line	84
 13485                           	
 13486  07F7                     l11475:	
 13487  07F7  17AC               	bsf	(___ftpack@arg)+(23/8),(23)&7
 13488                           	
 13489  07F8                     l7197:	
 13490                           	line	85
 13491                           	line	86
 13492                           	
 13493  07F8                     l7186:	
 13494  07F8  0008               	return
 13495                           	opt stack 0
 13496                           GLOBAL	__end_of___ftpack
 13497  07F9                     	__end_of___ftpack:
 13498 ;; =============== function ___ftpack ends ============
 13499                           
 13500                           	signat	___ftpack,12411
 13501                           	global	___wmul
 13502                           psect	text2247,local,class=CODE,delta=2
 13503                           global __ptext2247
 13504  118B                     __ptext2247:
 13505                           
 13506 ;; *************** function ___wmul *****************
 13507 ;; Defined at:
 13508 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\wmul.c"
 13509 ;; Parameters:    Size  Location     Type
 13510 ;;  multiplier      2   10[BANK0 ] unsigned int 
 13511 ;;  multiplicand    2   12[BANK0 ] unsigned int 
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;  product         2   14[BANK0 ] unsigned int 
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  2   10[BANK0 ] unsigned int 
 13516 ;; Registers used:
 13517 ;;		wreg, status,2, status,0
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13523 ;;      Params:         0       4       0       0       0
 13524 ;;      Locals:         0       2       0       0       0
 13525 ;;      Temps:          0       0       0       0       0
 13526 ;;      Totals:         0       6       0       0       0
 13527 ;;Total ram usage:        6 bytes
 13528 ;; Hardware stack levels used:    1
 13529 ;; Hardware stack levels required when called:    2
 13530 ;; This function calls:
 13531 ;;		Nothing
 13532 ;; This function is called by:
 13533 ;;		_convert
 13534 ;; This function uses a non-reentrant model
 13535 ;;
 13536                           psect	text2247
 13537                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\wmul.c"
 13538                           	line	3
 13539                           	global	__size_of___wmul
 13540  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 13541                           	
 13542  118B                     ___wmul:	
 13543                           	opt	stack 2
 13544                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13545                           	line	4
 13546                           	
 13547  118B                     l11435:	
 13548  118B  1283               	bcf	status, 5	;RP0=0, select bank0
 13549  118C  1303               	bcf	status, 6	;RP1=0, select bank0
 13550  118D  01AE               	clrf	(___wmul@product)
 13551  118E  01AF               	clrf	(___wmul@product+1)
 13552  118F  2990               	goto	l11437
 13553                           	line	6
 13554                           	
 13555  1190                     l6851:	
 13556                           	line	7
 13557                           	
 13558  1190                     l11437:	
 13559  1190  1C2A               	btfss	(___wmul@multiplier),(0)&7
 13560  1191  2993               	goto	u6091
 13561  1192  2994               	goto	u6090
 13562  1193                     u6091:
 13563  1193  299A               	goto	l6852
 13564  1194                     u6090:
 13565                           	line	8
 13566                           	
 13567  1194                     l11439:	
 13568  1194  082C               	movf	(___wmul@multiplicand),w
 13569  1195  07AE               	addwf	(___wmul@product),f
 13570  1196  1803               	skipnc
 13571  1197  0AAF               	incf	(___wmul@product+1),f
 13572  1198  082D               	movf	(___wmul@multiplicand+1),w
 13573  1199  07AF               	addwf	(___wmul@product+1),f
 13574                           	
 13575  119A                     l6852:	
 13576                           	line	9
 13577  119A  3001               	movlw	01h
 13578                           	
 13579  119B                     u6105:
 13580  119B  1003               	clrc
 13581  119C  0DAC               	rlf	(___wmul@multiplicand),f
 13582  119D  0DAD               	rlf	(___wmul@multiplicand+1),f
 13583  119E  3EFF               	addlw	-1
 13584  119F  1D03               	skipz
 13585  11A0  299B               	goto	u6105
 13586                           	line	10
 13587                           	
 13588  11A1                     l11441:	
 13589  11A1  3001               	movlw	01h
 13590                           	
 13591  11A2                     u6115:
 13592  11A2  1003               	clrc
 13593  11A3  0CAB               	rrf	(___wmul@multiplier+1),f
 13594  11A4  0CAA               	rrf	(___wmul@multiplier),f
 13595  11A5  3EFF               	addlw	-1
 13596  11A6  1D03               	skipz
 13597  11A7  29A2               	goto	u6115
 13598                           	line	11
 13599  11A8  082B               	movf	((___wmul@multiplier+1)),w
 13600  11A9  042A               	iorwf	((___wmul@multiplier)),w
 13601  11AA  1D03               	skipz
 13602  11AB  29AD               	goto	u6121
 13603  11AC  29AE               	goto	u6120
 13604  11AD                     u6121:
 13605  11AD  2990               	goto	l11437
 13606  11AE                     u6120:
 13607  11AE  29AF               	goto	l11443
 13608                           	
 13609  11AF                     l6853:	
 13610                           	line	12
 13611                           	
 13612  11AF                     l11443:	
 13613  11AF  082F               	movf	(___wmul@product+1),w
 13614  11B0  01AB               	clrf	(?___wmul+1)
 13615  11B1  07AB               	addwf	(?___wmul+1)
 13616  11B2  082E               	movf	(___wmul@product),w
 13617  11B3  01AA               	clrf	(?___wmul)
 13618  11B4  07AA               	addwf	(?___wmul)
 13619                           
 13620  11B5  29B6               	goto	l6854
 13621                           	
 13622  11B6                     l11445:	
 13623                           	line	13
 13624                           	
 13625  11B6                     l6854:	
 13626  11B6  0008               	return
 13627                           	opt stack 0
 13628                           GLOBAL	__end_of___wmul
 13629  11B7                     	__end_of___wmul:
 13630 ;; =============== function ___wmul ends ============
 13631                           
 13632                           	signat	___wmul,8314
 13633                           	global	_updateNode
 13634                           psect	text2248,local,class=CODE,delta=2
 13635                           global __ptext2248
 13636  13FA                     __ptext2248:
 13637                           
 13638 ;; *************** function _updateNode *****************
 13639 ;; Defined at:
 13640 ;;		line 309 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
 13641 ;; Parameters:    Size  Location     Type
 13642 ;;		None
 13643 ;; Auto vars:     Size  Location     Type
 13644 ;;		None
 13645 ;; Return value:  Size  Location     Type
 13646 ;;		None               void
 13647 ;; Registers used:
 13648 ;;		wreg, status,2, status,0
 13649 ;; Tracked objects:
 13650 ;;		On entry : 0/0
 13651 ;;		On exit  : 0/0
 13652 ;;		Unchanged: 0/0
 13653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13654 ;;      Params:         0       0       0       0       0
 13655 ;;      Locals:         0       0       0       0       0
 13656 ;;      Temps:          0       1       0       0       0
 13657 ;;      Totals:         0       1       0       0       0
 13658 ;;Total ram usage:        1 bytes
 13659 ;; Hardware stack levels used:    1
 13660 ;; Hardware stack levels required when called:    2
 13661 ;; This function calls:
 13662 ;;		Nothing
 13663 ;; This function is called by:
 13664 ;;		_main
 13665 ;; This function uses a non-reentrant model
 13666 ;;
 13667                           psect	text2248
 13668                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
 13669                           	line	309
 13670                           	global	__size_of_updateNode
 13671  0042                     	__size_of_updateNode	equ	__end_of_updateNode-_updateNode
 13672                           	
 13673  13FA                     _updateNode:	
 13674                           	opt	stack 5
 13675                           ; Regs used in _updateNode: [wreg+status,2+status,0]
 13676                           	line	310
 13677                           	
 13678  13FA                     l11417:	
 13679                           ;main.c: 310: if((xCoord == 2) && (yCoord == 2))
 13680  13FA  1283               	bcf	status, 5	;RP0=0, select bank0
 13681  13FB  1303               	bcf	status, 6	;RP1=0, select bank0
 13682  13FC  0864               	movf	(_xCoord),w	;volatile
 13683  13FD  3A02               	xorlw	02h
 13684  13FE  1D03               	skipz
 13685  13FF  2C01               	goto	u6031
 13686  1400  2C02               	goto	u6030
 13687  1401                     u6031:
 13688  1401  2C0E               	goto	l11423
 13689  1402                     u6030:
 13690                           	
 13691  1402                     l11419:	
 13692  1402  0865               	movf	(_yCoord),w	;volatile
 13693  1403  3A02               	xorlw	02h
 13694  1404  1D03               	skipz
 13695  1405  2C07               	goto	u6041
 13696  1406  2C08               	goto	u6040
 13697  1407                     u6041:
 13698  1407  2C0E               	goto	l11423
 13699  1408                     u6040:
 13700                           	line	311
 13701                           	
 13702  1408                     l11421:	
 13703                           ;main.c: 311: node = 1;
 13704  1408  1683               	bsf	status, 5	;RP0=1, select bank1
 13705  1409  1303               	bcf	status, 6	;RP1=0, select bank1
 13706  140A  01C8               	clrf	(_node)^080h	;volatile
 13707  140B  1403               	bsf	status,0
 13708  140C  0DC8               	rlf	(_node)^080h,f	;volatile
 13709  140D  2C3B               	goto	l6780
 13710                           	line	312
 13711                           	
 13712  140E                     l6774:	
 13713                           	
 13714  140E                     l11423:	
 13715                           ;main.c: 312: else if((xCoord == 4) && (yCoord == 2))
 13716  140E  1283               	bcf	status, 5	;RP0=0, select bank0
 13717  140F  0864               	movf	(_xCoord),w	;volatile
 13718  1410  3A04               	xorlw	04h
 13719  1411  1D03               	skipz
 13720  1412  2C14               	goto	u6051
 13721  1413  2C15               	goto	u6050
 13722  1414                     u6051:
 13723  1414  2C22               	goto	l11429
 13724  1415                     u6050:
 13725                           	
 13726  1415                     l11425:	
 13727  1415  0865               	movf	(_yCoord),w	;volatile
 13728  1416  3A02               	xorlw	02h
 13729  1417  1D03               	skipz
 13730  1418  2C1A               	goto	u6061
 13731  1419  2C1B               	goto	u6060
 13732  141A                     u6061:
 13733  141A  2C22               	goto	l11429
 13734  141B                     u6060:
 13735                           	line	313
 13736                           	
 13737  141B                     l11427:	
 13738                           ;main.c: 313: node = 2;
 13739  141B  3002               	movlw	(02h)
 13740  141C  00AA               	movwf	(??_updateNode+0)+0
 13741  141D  082A               	movf	(??_updateNode+0)+0,w
 13742  141E  1683               	bsf	status, 5	;RP0=1, select bank1
 13743  141F  1303               	bcf	status, 6	;RP1=0, select bank1
 13744  1420  00C8               	movwf	(_node)^080h	;volatile
 13745  1421  2C3B               	goto	l6780
 13746                           	line	314
 13747                           	
 13748  1422                     l6776:	
 13749                           	
 13750  1422                     l11429:	
 13751                           ;main.c: 314: else if((xCoord == 2) && (yCoord == 0))
 13752  1422  1283               	bcf	status, 5	;RP0=0, select bank0
 13753  1423  0864               	movf	(_xCoord),w	;volatile
 13754  1424  3A02               	xorlw	02h
 13755  1425  1D03               	skipz
 13756  1426  2C28               	goto	u6071
 13757  1427  2C29               	goto	u6070
 13758  1428                     u6071:
 13759  1428  2C35               	goto	l6778
 13760  1429                     u6070:
 13761                           	
 13762  1429                     l11431:	
 13763  1429  08E5               	movf	(_yCoord),f
 13764  142A  1D03               	skipz	;volatile
 13765  142B  2C2D               	goto	u6081
 13766  142C  2C2E               	goto	u6080
 13767  142D                     u6081:
 13768  142D  2C35               	goto	l6778
 13769  142E                     u6080:
 13770                           	line	315
 13771                           	
 13772  142E                     l11433:	
 13773                           ;main.c: 315: node = 3;
 13774  142E  3003               	movlw	(03h)
 13775  142F  00AA               	movwf	(??_updateNode+0)+0
 13776  1430  082A               	movf	(??_updateNode+0)+0,w
 13777  1431  1683               	bsf	status, 5	;RP0=1, select bank1
 13778  1432  1303               	bcf	status, 6	;RP1=0, select bank1
 13779  1433  00C8               	movwf	(_node)^080h	;volatile
 13780  1434  2C3B               	goto	l6780
 13781                           	line	316
 13782                           	
 13783  1435                     l6778:	
 13784                           	line	317
 13785                           ;main.c: 316: else
 13786                           ;main.c: 317: node = 0;
 13787  1435  1683               	bsf	status, 5	;RP0=1, select bank1
 13788  1436  1303               	bcf	status, 6	;RP1=0, select bank1
 13789  1437  01C8               	clrf	(_node)^080h	;volatile
 13790  1438  2C3B               	goto	l6780
 13791                           	
 13792  1439                     l6779:	
 13793  1439  2C3B               	goto	l6780
 13794                           	
 13795  143A                     l6777:	
 13796  143A  2C3B               	goto	l6780
 13797                           	
 13798  143B                     l6775:	
 13799                           	line	318
 13800                           	
 13801  143B                     l6780:	
 13802  143B  0008               	return
 13803                           	opt stack 0
 13804                           GLOBAL	__end_of_updateNode
 13805  143C                     	__end_of_updateNode:
 13806 ;; =============== function _updateNode ends ============
 13807                           
 13808                           	signat	_updateNode,88
 13809                           	global	_getSuccessfulDrive
 13810                           psect	text2249,local,class=CODE,delta=2
 13811                           global __ptext2249
 13812  1EA5                     __ptext2249:
 13813                           
 13814 ;; *************** function _getSuccessfulDrive *****************
 13815 ;; Defined at:
 13816 ;;		line 146 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;		None
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;		None
 13821 ;; Return value:  Size  Location     Type
 13822 ;;		None               void
 13823 ;; Registers used:
 13824 ;;		status,2, status,0
 13825 ;; Tracked objects:
 13826 ;;		On entry : 0/0
 13827 ;;		On exit  : 0/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13830 ;;      Params:         0       0       0       0       0
 13831 ;;      Locals:         0       0       0       0       0
 13832 ;;      Temps:          0       0       0       0       0
 13833 ;;      Totals:         0       0       0       0       0
 13834 ;;Total ram usage:        0 bytes
 13835 ;; Hardware stack levels used:    1
 13836 ;; Hardware stack levels required when called:    2
 13837 ;; This function calls:
 13838 ;;		Nothing
 13839 ;; This function is called by:
 13840 ;;		_main
 13841 ;; This function uses a non-reentrant model
 13842 ;;
 13843                           psect	text2249
 13844                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
 13845                           	line	146
 13846                           	global	__size_of_getSuccessfulDrive
 13847  000A                     	__size_of_getSuccessfulDrive	equ	__end_of_getSuccessfulDrive-_getSuccessfulDrive
 13848                           	
 13849  1EA5                     _getSuccessfulDrive:	
 13850                           	opt	stack 5
 13851                           ; Regs used in _getSuccessfulDrive: [status]
 13852                           	line	147
 13853                           	
 13854  1EA5                     l11409:	
 13855                           ;drive.c: 147: return successfulDrive;
 13856  1EA5  19F1               	btfsc	(_successfulDrive/8),(_successfulDrive)&7
 13857  1EA6  2EA8               	goto	u6021
 13858  1EA7  2EA9               	goto	u6020
 13859  1EA8                     u6021:
 13860  1EA8  2EAB               	goto	l11413
 13861  1EA9                     u6020:
 13862                           	
 13863  1EA9                     l11411:	
 13864  1EA9  1003               	clrc
 13865                           	
 13866  1EAA  2EAE               	goto	l5846
 13867                           	
 13868  1EAB                     l11173:	
 13869                           	
 13870  1EAB                     l11413:	
 13871  1EAB  1403               	setc
 13872                           	
 13873  1EAC  2EAE               	goto	l5846
 13874                           	
 13875  1EAD                     l11175:	
 13876  1EAD  2EAE               	goto	l5846
 13877                           	
 13878  1EAE                     l11415:	
 13879                           	line	148
 13880                           	
 13881  1EAE                     l5846:	
 13882  1EAE  0008               	return
 13883                           	opt stack 0
 13884                           GLOBAL	__end_of_getSuccessfulDrive
 13885  1EAF                     	__end_of_getSuccessfulDrive:
 13886 ;; =============== function _getSuccessfulDrive ends ============
 13887                           
 13888                           	signat	_getSuccessfulDrive,88
 13889                           	global	_getSomethingInTheWay
 13890                           psect	text2250,local,class=CODE,delta=2
 13891                           global __ptext2250
 13892  1E98                     __ptext2250:
 13893                           
 13894 ;; *************** function _getSomethingInTheWay *****************
 13895 ;; Defined at:
 13896 ;;		line 140 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;		None
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;		None
 13901 ;; Return value:  Size  Location     Type
 13902 ;;                  1    wreg      enum E1103
 13903 ;; Registers used:
 13904 ;;		wreg
 13905 ;; Tracked objects:
 13906 ;;		On entry : 0/0
 13907 ;;		On exit  : 0/0
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13910 ;;      Params:         0       0       0       0       0
 13911 ;;      Locals:         0       0       0       0       0
 13912 ;;      Temps:          0       0       0       0       0
 13913 ;;      Totals:         0       0       0       0       0
 13914 ;;Total ram usage:        0 bytes
 13915 ;; Hardware stack levels used:    1
 13916 ;; Hardware stack levels required when called:    2
 13917 ;; This function calls:
 13918 ;;		Nothing
 13919 ;; This function is called by:
 13920 ;;		_goToNextCell
 13921 ;; This function uses a non-reentrant model
 13922 ;;
 13923                           psect	text2250
 13924                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
 13925                           	line	140
 13926                           	global	__size_of_getSomethingInTheWay
 13927  0005                     	__size_of_getSomethingInTheWay	equ	__end_of_getSomethingInTheWay-_getSomethingInTheWay
 13928                           	
 13929  1E98                     _getSomethingInTheWay:	
 13930                           	opt	stack 4
 13931                           ; Regs used in _getSomethingInTheWay: [wreg]
 13932                           	line	141
 13933                           	
 13934  1E98                     l11405:	
 13935                           ;drive.c: 141: return somethingInTheWay;
 13936  1E98  1683               	bsf	status, 5	;RP0=1, select bank1
 13937  1E99  1303               	bcf	status, 6	;RP1=0, select bank1
 13938  1E9A  0866               	movf	(_somethingInTheWay)^080h,w	;volatile
 13939  1E9B  2E9C               	goto	l5843
 13940                           	
 13941  1E9C                     l11407:	
 13942                           	line	142
 13943                           	
 13944  1E9C                     l5843:	
 13945  1E9C  0008               	return
 13946                           	opt stack 0
 13947                           GLOBAL	__end_of_getSomethingInTheWay
 13948  1E9D                     	__end_of_getSomethingInTheWay:
 13949 ;; =============== function _getSomethingInTheWay ends ============
 13950                           
 13951                           	signat	_getSomethingInTheWay,89
 13952                           	global	_getOrientation
 13953                           psect	text2251,local,class=CODE,delta=2
 13954                           global __ptext2251
 13955  1E93                     __ptext2251:
 13956                           
 13957 ;; *************** function _getOrientation *****************
 13958 ;; Defined at:
 13959 ;;		line 135 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
 13960 ;; Parameters:    Size  Location     Type
 13961 ;;		None
 13962 ;; Auto vars:     Size  Location     Type
 13963 ;;		None
 13964 ;; Return value:  Size  Location     Type
 13965 ;;                  1    wreg      enum E1109
 13966 ;; Registers used:
 13967 ;;		wreg
 13968 ;; Tracked objects:
 13969 ;;		On entry : 0/0
 13970 ;;		On exit  : 0/0
 13971 ;;		Unchanged: 0/0
 13972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13973 ;;      Params:         0       0       0       0       0
 13974 ;;      Locals:         0       0       0       0       0
 13975 ;;      Temps:          0       0       0       0       0
 13976 ;;      Totals:         0       0       0       0       0
 13977 ;;Total ram usage:        0 bytes
 13978 ;; Hardware stack levels used:    1
 13979 ;; Hardware stack levels required when called:    2
 13980 ;; This function calls:
 13981 ;;		Nothing
 13982 ;; This function is called by:
 13983 ;;		_updateLocation
 13984 ;;		_main
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           psect	text2251
 13988                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
 13989                           	line	135
 13990                           	global	__size_of_getOrientation
 13991  0005                     	__size_of_getOrientation	equ	__end_of_getOrientation-_getOrientation
 13992                           	
 13993  1E93                     _getOrientation:	
 13994                           	opt	stack 4
 13995                           ; Regs used in _getOrientation: [wreg]
 13996                           	line	136
 13997                           	
 13998  1E93                     l11401:	
 13999                           ;drive.c: 136: return currentOrientation;
 14000  1E93  1283               	bcf	status, 5	;RP0=0, select bank0
 14001  1E94  1303               	bcf	status, 6	;RP1=0, select bank0
 14002  1E95  0860               	movf	(_currentOrientation),w	;volatile
 14003  1E96  2E97               	goto	l5840
 14004                           	
 14005  1E97                     l11403:	
 14006                           	line	137
 14007                           	
 14008  1E97                     l5840:	
 14009  1E97  0008               	return
 14010                           	opt stack 0
 14011                           GLOBAL	__end_of_getOrientation
 14012  1E98                     	__end_of_getOrientation:
 14013 ;; =============== function _getOrientation ends ============
 14014                           
 14015                           	signat	_getOrientation,89
 14016                           	global	_getCurrentY
 14017                           psect	text2252,local,class=CODE,delta=2
 14018                           global __ptext2252
 14019  1E8E                     __ptext2252:
 14020                           
 14021 ;; *************** function _getCurrentY *****************
 14022 ;; Defined at:
 14023 ;;		line 465 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;		None
 14026 ;; Auto vars:     Size  Location     Type
 14027 ;;		None
 14028 ;; Return value:  Size  Location     Type
 14029 ;;                  1    wreg      unsigned char 
 14030 ;; Registers used:
 14031 ;;		wreg
 14032 ;; Tracked objects:
 14033 ;;		On entry : 0/0
 14034 ;;		On exit  : 0/0
 14035 ;;		Unchanged: 0/0
 14036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14037 ;;      Params:         0       0       0       0       0
 14038 ;;      Locals:         0       0       0       0       0
 14039 ;;      Temps:          0       0       0       0       0
 14040 ;;      Totals:         0       0       0       0       0
 14041 ;;Total ram usage:        0 bytes
 14042 ;; Hardware stack levels used:    1
 14043 ;; Hardware stack levels required when called:    2
 14044 ;; This function calls:
 14045 ;;		Nothing
 14046 ;; This function is called by:
 14047 ;;		_driveForDistance
 14048 ;;		_goForward
 14049 ;;		_turnLeft90
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           psect	text2252
 14053                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
 14054                           	line	465
 14055                           	global	__size_of_getCurrentY
 14056  0005                     	__size_of_getCurrentY	equ	__end_of_getCurrentY-_getCurrentY
 14057                           	
 14058  1E8E                     _getCurrentY:	
 14059                           	opt	stack 3
 14060                           ; Regs used in _getCurrentY: [wreg]
 14061                           	line	466
 14062                           	
 14063  1E8E                     l11397:	
 14064                           ;main.c: 466: return yCoord;
 14065  1E8E  1283               	bcf	status, 5	;RP0=0, select bank0
 14066  1E8F  1303               	bcf	status, 6	;RP1=0, select bank0
 14067  1E90  0865               	movf	(_yCoord),w	;volatile
 14068  1E91  2E92               	goto	l6842
 14069                           	
 14070  1E92                     l11399:	
 14071                           	line	467
 14072                           	
 14073  1E92                     l6842:	
 14074  1E92  0008               	return
 14075                           	opt stack 0
 14076                           GLOBAL	__end_of_getCurrentY
 14077  1E93                     	__end_of_getCurrentY:
 14078 ;; =============== function _getCurrentY ends ============
 14079                           
 14080                           	signat	_getCurrentY,89
 14081                           	global	_getCurrentX
 14082                           psect	text2253,local,class=CODE,delta=2
 14083                           global __ptext2253
 14084  1E89                     __ptext2253:
 14085                           
 14086 ;; *************** function _getCurrentX *****************
 14087 ;; Defined at:
 14088 ;;		line 460 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\main.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;		None
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;		None
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  1    wreg      unsigned char 
 14095 ;; Registers used:
 14096 ;;		wreg
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14102 ;;      Params:         0       0       0       0       0
 14103 ;;      Locals:         0       0       0       0       0
 14104 ;;      Temps:          0       0       0       0       0
 14105 ;;      Totals:         0       0       0       0       0
 14106 ;;Total ram usage:        0 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; Hardware stack levels required when called:    2
 14109 ;; This function calls:
 14110 ;;		Nothing
 14111 ;; This function is called by:
 14112 ;;		_driveForDistance
 14113 ;;		_goForward
 14114 ;;		_turnLeft90
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           psect	text2253
 14118                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
 14119                           	line	460
 14120                           	global	__size_of_getCurrentX
 14121  0005                     	__size_of_getCurrentX	equ	__end_of_getCurrentX-_getCurrentX
 14122                           	
 14123  1E89                     _getCurrentX:	
 14124                           	opt	stack 3
 14125                           ; Regs used in _getCurrentX: [wreg]
 14126                           	line	461
 14127                           	
 14128  1E89                     l11393:	
 14129                           ;main.c: 461: return xCoord;
 14130  1E89  1283               	bcf	status, 5	;RP0=0, select bank0
 14131  1E8A  1303               	bcf	status, 6	;RP1=0, select bank0
 14132  1E8B  0864               	movf	(_xCoord),w	;volatile
 14133  1E8C  2E8D               	goto	l6839
 14134                           	
 14135  1E8D                     l11395:	
 14136                           	line	462
 14137                           	
 14138  1E8D                     l6839:	
 14139  1E8D  0008               	return
 14140                           	opt stack 0
 14141                           GLOBAL	__end_of_getCurrentX
 14142  1E8E                     	__end_of_getCurrentX:
 14143 ;; =============== function _getCurrentX ends ============
 14144                           
 14145                           	signat	_getCurrentX,89
 14146                           	global	_updateOrientation
 14147                           psect	text2254,local,class=CODE,delta=2
 14148                           global __ptext2254
 14149  1EC5                     __ptext2254:
 14150                           
 14151 ;; *************** function _updateOrientation *****************
 14152 ;; Defined at:
 14153 ;;		line 245 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\drive.c"
 14154 ;; Parameters:    Size  Location     Type
 14155 ;;  moved           1    wreg     enum E1103
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;  moved           1   11[BANK0 ] enum E1103
 14158 ;; Return value:  Size  Location     Type
 14159 ;;		None               void
 14160 ;; Registers used:
 14161 ;;		wreg, status,2, status,0
 14162 ;; Tracked objects:
 14163 ;;		On entry : 0/0
 14164 ;;		On exit  : 0/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14167 ;;      Params:         0       0       0       0       0
 14168 ;;      Locals:         0       1       0       0       0
 14169 ;;      Temps:          0       1       0       0       0
 14170 ;;      Totals:         0       2       0       0       0
 14171 ;;Total ram usage:        2 bytes
 14172 ;; Hardware stack levels used:    1
 14173 ;; Hardware stack levels required when called:    2
 14174 ;; This function calls:
 14175 ;;		Nothing
 14176 ;; This function is called by:
 14177 ;;		_driveForDistance
 14178 ;;		_goBackward
 14179 ;;		_goLeft
 14180 ;;		_goRight
 14181 ;; This function uses a non-reentrant model
 14182 ;;
 14183                           psect	text2254
 14184                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\drive.c"
 14185                           	line	245
 14186                           	global	__size_of_updateOrientation
 14187  0011                     	__size_of_updateOrientation	equ	__end_of_updateOrientation-_updateOrientation
 14188                           	
 14189  1EC5                     _updateOrientation:	
 14190                           	opt	stack 3
 14191                           ; Regs used in _updateOrientation: [wreg+status,2+status,0]
 14192                           ;updateOrientation@moved stored from wreg
 14193  1EC5  1283               	bcf	status, 5	;RP0=0, select bank0
 14194  1EC6  1303               	bcf	status, 6	;RP1=0, select bank0
 14195  1EC7  00AB               	movwf	(updateOrientation@moved)
 14196                           	line	246
 14197                           	
 14198  1EC8                     l11387:	
 14199                           ;drive.c: 246: currentOrientation += moved;
 14200  1EC8  082B               	movf	(updateOrientation@moved),w	;volatile
 14201  1EC9  00AA               	movwf	(??_updateOrientation+0)+0
 14202  1ECA  082A               	movf	(??_updateOrientation+0)+0,w
 14203  1ECB  07E0               	addwf	(_currentOrientation),f	;volatile
 14204                           	line	247
 14205                           	
 14206  1ECC                     l11389:	
 14207                           ;drive.c: 247: if(currentOrientation >= 4)
 14208  1ECC  3004               	movlw	(04h)
 14209  1ECD  0260               	subwf	(_currentOrientation),w	;volatile
 14210  1ECE  1C03               	skipc
 14211  1ECF  2ED1               	goto	u6011
 14212  1ED0  2ED2               	goto	u6010
 14213  1ED1                     u6011:
 14214  1ED1  2ED5               	goto	l5881
 14215  1ED2                     u6010:
 14216                           	line	248
 14217                           	
 14218  1ED2                     l11391:	
 14219                           ;drive.c: 248: currentOrientation -= 4;
 14220  1ED2  3004               	movlw	low(04h)
 14221  1ED3  02E0               	subwf	(_currentOrientation),f	;volatile
 14222  1ED4  2ED5               	goto	l5881
 14223                           	
 14224  1ED5                     l5880:	
 14225                           	line	249
 14226                           	
 14227  1ED5                     l5881:	
 14228  1ED5  0008               	return
 14229                           	opt stack 0
 14230                           GLOBAL	__end_of_updateOrientation
 14231  1ED6                     	__end_of_updateOrientation:
 14232 ;; =============== function _updateOrientation ends ============
 14233                           
 14234                           	signat	_updateOrientation,4216
 14235                           	global	_ser_init
 14236                           psect	text2255,local,class=CODE,delta=2
 14237                           global __ptext2255
 14238  10E7                     __ptext2255:
 14239                           
 14240 ;; *************** function _ser_init *****************
 14241 ;; Defined at:
 14242 ;;		line 124 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\ser.c"
 14243 ;; Parameters:    Size  Location     Type
 14244 ;;		None
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;		None
 14247 ;; Return value:  Size  Location     Type
 14248 ;;		None               void
 14249 ;; Registers used:
 14250 ;;		wreg, status,2, status,0
 14251 ;; Tracked objects:
 14252 ;;		On entry : 0/0
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14256 ;;      Params:         0       0       0       0       0
 14257 ;;      Locals:         0       0       0       0       0
 14258 ;;      Temps:          0       1       0       0       0
 14259 ;;      Totals:         0       1       0       0       0
 14260 ;;Total ram usage:        1 bytes
 14261 ;; Hardware stack levels used:    1
 14262 ;; Hardware stack levels required when called:    2
 14263 ;; This function calls:
 14264 ;;		Nothing
 14265 ;; This function is called by:
 14266 ;;		_init
 14267 ;; This function uses a non-reentrant model
 14268 ;;
 14269                           psect	text2255
 14270                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ser.c"
 14271                           	line	124
 14272                           	global	__size_of_ser_init
 14273  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 14274                           	
 14275  10E7                     _ser_init:	
 14276                           	opt	stack 4
 14277                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 14278                           	line	125
 14279                           	
 14280  10E7                     l11361:	
 14281                           ;ser.c: 125: TRISC |= 0b10000000;
 14282  10E7  1683               	bsf	status, 5	;RP0=1, select bank1
 14283  10E8  1303               	bcf	status, 6	;RP1=0, select bank1
 14284  10E9  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 14285                           	line	126
 14286                           	
 14287  10EA                     l11363:	
 14288                           ;ser.c: 126: TRISC &= 0b10111111;
 14289  10EA  30BF               	movlw	(0BFh)
 14290  10EB  1283               	bcf	status, 5	;RP0=0, select bank0
 14291  10EC  1303               	bcf	status, 6	;RP1=0, select bank0
 14292  10ED  00AA               	movwf	(??_ser_init+0)+0
 14293  10EE  082A               	movf	(??_ser_init+0)+0,w
 14294  10EF  1683               	bsf	status, 5	;RP0=1, select bank1
 14295  10F0  1303               	bcf	status, 6	;RP1=0, select bank1
 14296  10F1  0587               	andwf	(135)^080h,f	;volatile
 14297                           	line	127
 14298                           	
 14299  10F2                     l11365:	
 14300                           ;ser.c: 127: BRGH=1;
 14301  10F2  1518               	bsf	(1218/8)^080h,(1218)&7
 14302                           	line	129
 14303                           	
 14304  10F3                     l11367:	
 14305                           ;ser.c: 129: SPBRG=20;
 14306  10F3  3014               	movlw	(014h)
 14307  10F4  0099               	movwf	(153)^080h	;volatile
 14308                           	line	132
 14309                           	
 14310  10F5                     l11369:	
 14311                           ;ser.c: 132: TX9=0;
 14312  10F5  1318               	bcf	(1222/8)^080h,(1222)&7
 14313                           	line	133
 14314                           	
 14315  10F6                     l11371:	
 14316                           ;ser.c: 133: RX9=0;
 14317  10F6  1283               	bcf	status, 5	;RP0=0, select bank0
 14318  10F7  1303               	bcf	status, 6	;RP1=0, select bank0
 14319  10F8  1318               	bcf	(198/8),(198)&7
 14320                           	line	135
 14321                           	
 14322  10F9                     l11373:	
 14323                           ;ser.c: 135: SYNC=0;
 14324  10F9  1683               	bsf	status, 5	;RP0=1, select bank1
 14325  10FA  1303               	bcf	status, 6	;RP1=0, select bank1
 14326  10FB  1218               	bcf	(1220/8)^080h,(1220)&7
 14327                           	line	136
 14328                           	
 14329  10FC                     l11375:	
 14330                           ;ser.c: 136: SPEN=1;
 14331  10FC  1283               	bcf	status, 5	;RP0=0, select bank0
 14332  10FD  1303               	bcf	status, 6	;RP1=0, select bank0
 14333  10FE  1798               	bsf	(199/8),(199)&7
 14334                           	line	137
 14335                           	
 14336  10FF                     l11377:	
 14337                           ;ser.c: 137: CREN=1;
 14338  10FF  1618               	bsf	(196/8),(196)&7
 14339                           	line	138
 14340                           	
 14341  1100                     l11379:	
 14342                           ;ser.c: 138: TXIE=0;
 14343  1100  1683               	bsf	status, 5	;RP0=1, select bank1
 14344  1101  1303               	bcf	status, 6	;RP1=0, select bank1
 14345  1102  120C               	bcf	(1124/8)^080h,(1124)&7
 14346                           	line	139
 14347                           	
 14348  1103                     l11381:	
 14349                           ;ser.c: 139: RCIE=1;
 14350  1103  168C               	bsf	(1125/8)^080h,(1125)&7
 14351                           	line	140
 14352                           	
 14353  1104                     l11383:	
 14354                           ;ser.c: 140: TXEN=1;
 14355  1104  1698               	bsf	(1221/8)^080h,(1221)&7
 14356                           	line	143
 14357                           	
 14358  1105                     l11385:	
 14359                           ;ser.c: 143: rxiptr=rxoptr=txiptr=txoptr=0;
 14360  1105  3000               	movlw	(0)
 14361  1106  00FB               	movwf	(_txoptr)	;volatile
 14362  1107  00FA               	movwf	(_txiptr)	;volatile
 14363  1108  00F9               	movwf	(_rxoptr)	;volatile
 14364  1109  1283               	bcf	status, 5	;RP0=0, select bank0
 14365  110A  1303               	bcf	status, 6	;RP1=0, select bank0
 14366  110B  00AA               	movwf	(??_ser_init+0)+0
 14367  110C  082A               	movf	(??_ser_init+0)+0,w
 14368  110D  00F8               	movwf	(_rxiptr)	;volatile
 14369                           	line	144
 14370                           	
 14371  110E                     l3673:	
 14372  110E  0008               	return
 14373                           	opt stack 0
 14374                           GLOBAL	__end_of_ser_init
 14375  110F                     	__end_of_ser_init:
 14376 ;; =============== function _ser_init ends ============
 14377                           
 14378                           	signat	_ser_init,88
 14379                           	global	_ser_isrx
 14380                           psect	text2256,local,class=CODE,delta=2
 14381                           global __ptext2256
 14382  1F36                     __ptext2256:
 14383                           
 14384 ;; *************** function _ser_isrx *****************
 14385 ;; Defined at:
 14386 ;;		line 48 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\ser.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;		None
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;		None
 14391 ;; Return value:  Size  Location     Type
 14392 ;;		None               void
 14393 ;; Registers used:
 14394 ;;		wreg, status,2, status,0
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14400 ;;      Params:         0       0       0       0       0
 14401 ;;      Locals:         0       0       0       0       0
 14402 ;;      Temps:          0       0       0       0       0
 14403 ;;      Totals:         0       0       0       0       0
 14404 ;;Total ram usage:        0 bytes
 14405 ;; Hardware stack levels used:    1
 14406 ;; Hardware stack levels required when called:    2
 14407 ;; This function calls:
 14408 ;;		Nothing
 14409 ;; This function is called by:
 14410 ;;		_ser_getch
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           psect	text2256
 14414                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ser.c"
 14415                           	line	48
 14416                           	global	__size_of_ser_isrx
 14417  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 14418                           	
 14419  1F36                     _ser_isrx:	
 14420                           	opt	stack 2
 14421                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 14422                           	line	49
 14423                           	
 14424  1F36                     l11313:	
 14425                           ;ser.c: 49: if(OERR) {
 14426  1F36  1283               	bcf	status, 5	;RP0=0, select bank0
 14427  1F37  1303               	bcf	status, 6	;RP1=0, select bank0
 14428  1F38  1C98               	btfss	(193/8),(193)&7
 14429  1F39  2F3B               	goto	u5941
 14430  1F3A  2F3C               	goto	u5940
 14431  1F3B                     u5941:
 14432  1F3B  2F41               	goto	l11321
 14433  1F3C                     u5940:
 14434                           	line	50
 14435                           	
 14436  1F3C                     l11315:	
 14437                           ;ser.c: 50: CREN = 0;
 14438  1F3C  1218               	bcf	(196/8),(196)&7
 14439                           	line	51
 14440                           ;ser.c: 51: CREN = 1;
 14441  1F3D  1618               	bsf	(196/8),(196)&7
 14442                           	line	52
 14443                           	
 14444  1F3E                     l11317:	
 14445                           ;ser.c: 52: return 0;
 14446  1F3E  1003               	clrc
 14447                           	
 14448  1F3F  2F4C               	goto	l3633
 14449                           	
 14450  1F40                     l11319:	
 14451  1F40  2F4C               	goto	l3633
 14452                           	line	53
 14453                           	
 14454  1F41                     l3632:	
 14455                           	line	54
 14456                           	
 14457  1F41                     l11321:	
 14458                           ;ser.c: 53: }
 14459                           ;ser.c: 54: return (rxiptr!=rxoptr);
 14460  1F41  0878               	movf	(_rxiptr),w	;volatile
 14461  1F42  0679               	xorwf	(_rxoptr),w	;volatile
 14462  1F43  1D03               	skipz
 14463  1F44  2F46               	goto	u5951
 14464  1F45  2F47               	goto	u5950
 14465  1F46                     u5951:
 14466  1F46  2F49               	goto	l11325
 14467  1F47                     u5950:
 14468                           	
 14469  1F47                     l11323:	
 14470  1F47  1003               	clrc
 14471                           	
 14472  1F48  2F4C               	goto	l3633
 14473                           	
 14474  1F49                     l11169:	
 14475                           	
 14476  1F49                     l11325:	
 14477  1F49  1403               	setc
 14478                           	
 14479  1F4A  2F4C               	goto	l3633
 14480                           	
 14481  1F4B                     l11171:	
 14482  1F4B  2F4C               	goto	l3633
 14483                           	
 14484  1F4C                     l11327:	
 14485                           	line	55
 14486                           	
 14487  1F4C                     l3633:	
 14488  1F4C  0008               	return
 14489                           	opt stack 0
 14490                           GLOBAL	__end_of_ser_isrx
 14491  1F4D                     	__end_of_ser_isrx:
 14492 ;; =============== function _ser_isrx ends ============
 14493                           
 14494                           	signat	_ser_isrx,88
 14495                           	global	_getVictimZone
 14496                           psect	text2257,local,class=CODE,delta=2
 14497                           global __ptext2257
 14498  0977                     __ptext2257:
 14499                           
 14500 ;; *************** function _getVictimZone *****************
 14501 ;; Defined at:
 14502 ;;		line 157 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\map.c"
 14503 ;; Parameters:    Size  Location     Type
 14504 ;;  victimX         1    wreg     unsigned char 
 14505 ;;  victimY         1   10[BANK0 ] unsigned char 
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;  victimX         1   12[BANK0 ] unsigned char 
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  1    wreg      unsigned char 
 14510 ;; Registers used:
 14511 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14517 ;;      Params:         0       1       0       0       0
 14518 ;;      Locals:         0       1       0       0       0
 14519 ;;      Temps:          0       1       0       0       0
 14520 ;;      Totals:         0       3       0       0       0
 14521 ;;Total ram usage:        3 bytes
 14522 ;; Hardware stack levels used:    1
 14523 ;; Hardware stack levels required when called:    2
 14524 ;; This function calls:
 14525 ;;		Nothing
 14526 ;; This function is called by:
 14527 ;;		_lookForVictim
 14528 ;; This function uses a non-reentrant model
 14529 ;;
 14530                           psect	text2257
 14531                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
 14532                           	line	157
 14533                           	global	__size_of_getVictimZone
 14534  009B                     	__size_of_getVictimZone	equ	__end_of_getVictimZone-_getVictimZone
 14535                           	
 14536  0977                     _getVictimZone:	
 14537                           	opt	stack 4
 14538                           ; Regs used in _getVictimZone: [wreg-fsr0h+status,2+status,0]
 14539                           ;getVictimZone@victimX stored from wreg
 14540  0977  1283               	bcf	status, 5	;RP0=0, select bank0
 14541  0978  1303               	bcf	status, 6	;RP1=0, select bank0
 14542  0979  00AC               	movwf	(getVictimZone@victimX)
 14543                           	line	163
 14544                           	
 14545  097A                     l11265:	
 14546                           ;map.c: 163: switch (victimX)
 14547  097A  29FC               	goto	l11307
 14548                           	line	165
 14549                           ;map.c: 164: {
 14550                           ;map.c: 165: case 0:
 14551                           	
 14552  097B                     l2900:	
 14553                           	line	166
 14554                           ;map.c: 166: switch (victimY)
 14555  097B  298D               	goto	l11273
 14556                           	line	168
 14557                           ;map.c: 167: {
 14558                           ;map.c: 168: case 0:
 14559                           	
 14560  097C                     l2902:	
 14561                           	line	169
 14562                           	
 14563  097C                     l11267:	
 14564                           ;map.c: 169: vicZone = 4;
 14565  097C  3004               	movlw	(04h)
 14566  097D  00AB               	movwf	(??_getVictimZone+0)+0
 14567  097E  082B               	movf	(??_getVictimZone+0)+0,w
 14568  097F  1683               	bsf	status, 5	;RP0=1, select bank1
 14569  0980  1303               	bcf	status, 6	;RP1=0, select bank1
 14570  0981  00CC               	movwf	(_vicZone)^080h
 14571                           	line	170
 14572                           ;map.c: 170: break;
 14573  0982  2A0D               	goto	l11309
 14574                           	line	171
 14575                           ;map.c: 171: case 1:
 14576                           	
 14577  0983                     l2904:	
 14578                           	line	172
 14579                           	
 14580  0983                     l11269:	
 14581                           ;map.c: 172: vicZone = 4;
 14582  0983  3004               	movlw	(04h)
 14583  0984  1283               	bcf	status, 5	;RP0=0, select bank0
 14584  0985  00AB               	movwf	(??_getVictimZone+0)+0
 14585  0986  082B               	movf	(??_getVictimZone+0)+0,w
 14586  0987  1683               	bsf	status, 5	;RP0=1, select bank1
 14587  0988  1303               	bcf	status, 6	;RP1=0, select bank1
 14588  0989  00CC               	movwf	(_vicZone)^080h
 14589                           	line	173
 14590                           ;map.c: 173: break;
 14591  098A  2A0D               	goto	l11309
 14592                           	line	178
 14593                           ;map.c: 178: default:
 14594                           	
 14595  098B                     l2905:	
 14596                           	line	179
 14597                           ;map.c: 179: break;
 14598  098B  2A0D               	goto	l11309
 14599                           	line	180
 14600                           	
 14601  098C                     l11271:	
 14602                           ;map.c: 180: }
 14603  098C  2A0D               	goto	l11309
 14604                           	line	166
 14605                           	
 14606  098D                     l2901:	
 14607                           	
 14608  098D                     l11273:	
 14609  098D  1283               	bcf	status, 5	;RP0=0, select bank0
 14610  098E  082A               	movf	(getVictimZone@victimY),w
 14611                           	; Switch size 1, requested type "space"
 14612                           ; Number of cases is 2, Range of values is 0 to 1
 14613                           ; switch strategies available:
 14614                           ; Name         Instructions Cycles
 14615                           ; simple_byte            7     4 (average)
 14616                           ; direct_byte           14     8 (fixed)
 14617                           ; jumptable            260     6 (fixed)
 14618                           ; rangetable             6     6 (fixed)
 14619                           ; spacedrange           10     9 (fixed)
 14620                           ; locatedrange           2     3 (fixed)
 14621                           ;	Chosen strategy is simple_byte
 14622                           
 14623                           	opt asmopt_off
 14624  098F  3A00               	xorlw	0^0	; case 0
 14625  0990  1903               	skipnz
 14626  0991  297C               	goto	l11267
 14627  0992  3A01               	xorlw	1^0	; case 1
 14628  0993  1903               	skipnz
 14629  0994  2983               	goto	l11269
 14630  0995  2A0D               	goto	l11309
 14631                           	opt asmopt_on
 14632                           
 14633                           	line	180
 14634                           	
 14635  0996                     l2903:	
 14636                           	line	181
 14637                           ;map.c: 181: break;
 14638  0996  2A0D               	goto	l11309
 14639                           	line	183
 14640                           ;map.c: 183: case 1:
 14641                           	
 14642  0997                     l2907:	
 14643                           	line	184
 14644                           ;map.c: 184: switch (victimY)
 14645  0997  29A9               	goto	l11281
 14646                           	line	186
 14647                           ;map.c: 185: {
 14648                           ;map.c: 186: case 0:
 14649                           	
 14650  0998                     l2909:	
 14651                           	line	187
 14652                           	
 14653  0998                     l11275:	
 14654                           ;map.c: 187: vicZone = 4;
 14655  0998  3004               	movlw	(04h)
 14656  0999  00AB               	movwf	(??_getVictimZone+0)+0
 14657  099A  082B               	movf	(??_getVictimZone+0)+0,w
 14658  099B  1683               	bsf	status, 5	;RP0=1, select bank1
 14659  099C  1303               	bcf	status, 6	;RP1=0, select bank1
 14660  099D  00CC               	movwf	(_vicZone)^080h
 14661                           	line	188
 14662                           ;map.c: 188: break;
 14663  099E  2A0D               	goto	l11309
 14664                           	line	189
 14665                           ;map.c: 189: case 1:
 14666                           	
 14667  099F                     l2911:	
 14668                           	line	190
 14669                           	
 14670  099F                     l11277:	
 14671                           ;map.c: 190: vicZone = 4;
 14672  099F  3004               	movlw	(04h)
 14673  09A0  1283               	bcf	status, 5	;RP0=0, select bank0
 14674  09A1  00AB               	movwf	(??_getVictimZone+0)+0
 14675  09A2  082B               	movf	(??_getVictimZone+0)+0,w
 14676  09A3  1683               	bsf	status, 5	;RP0=1, select bank1
 14677  09A4  1303               	bcf	status, 6	;RP1=0, select bank1
 14678  09A5  00CC               	movwf	(_vicZone)^080h
 14679                           	line	191
 14680                           ;map.c: 191: break;
 14681  09A6  2A0D               	goto	l11309
 14682                           	line	196
 14683                           ;map.c: 196: default:
 14684                           	
 14685  09A7                     l2912:	
 14686                           	line	197
 14687                           ;map.c: 197: break;
 14688  09A7  2A0D               	goto	l11309
 14689                           	line	198
 14690                           	
 14691  09A8                     l11279:	
 14692                           ;map.c: 198: }
 14693  09A8  2A0D               	goto	l11309
 14694                           	line	184
 14695                           	
 14696  09A9                     l2908:	
 14697                           	
 14698  09A9                     l11281:	
 14699  09A9  1283               	bcf	status, 5	;RP0=0, select bank0
 14700  09AA  082A               	movf	(getVictimZone@victimY),w
 14701                           	; Switch size 1, requested type "space"
 14702                           ; Number of cases is 2, Range of values is 0 to 1
 14703                           ; switch strategies available:
 14704                           ; Name         Instructions Cycles
 14705                           ; simple_byte            7     4 (average)
 14706                           ; direct_byte           14     8 (fixed)
 14707                           ; jumptable            260     6 (fixed)
 14708                           ; rangetable             6     6 (fixed)
 14709                           ; spacedrange           10     9 (fixed)
 14710                           ; locatedrange           2     3 (fixed)
 14711                           ;	Chosen strategy is simple_byte
 14712                           
 14713                           	opt asmopt_off
 14714  09AB  3A00               	xorlw	0^0	; case 0
 14715  09AC  1903               	skipnz
 14716  09AD  2998               	goto	l11275
 14717  09AE  3A01               	xorlw	1^0	; case 1
 14718  09AF  1903               	skipnz
 14719  09B0  299F               	goto	l11277
 14720  09B1  2A0D               	goto	l11309
 14721                           	opt asmopt_on
 14722                           
 14723                           	line	198
 14724                           	
 14725  09B2                     l2910:	
 14726                           	line	199
 14727                           ;map.c: 199: break;
 14728  09B2  2A0D               	goto	l11309
 14729                           	line	201
 14730                           ;map.c: 201: case 2:
 14731                           	
 14732  09B3                     l2913:	
 14733                           	line	202
 14734                           ;map.c: 202: switch (victimY)
 14735  09B3  29C3               	goto	l11289
 14736                           	line	206
 14737                           ;map.c: 203: {
 14738                           ;map.c: 206: case 1:
 14739                           	
 14740  09B4                     l2915:	
 14741                           	line	207
 14742                           	
 14743  09B4                     l11283:	
 14744                           ;map.c: 207: vicZone = 3;
 14745  09B4  3003               	movlw	(03h)
 14746  09B5  00AB               	movwf	(??_getVictimZone+0)+0
 14747  09B6  082B               	movf	(??_getVictimZone+0)+0,w
 14748  09B7  1683               	bsf	status, 5	;RP0=1, select bank1
 14749  09B8  1303               	bcf	status, 6	;RP1=0, select bank1
 14750  09B9  00CC               	movwf	(_vicZone)^080h
 14751                           	line	208
 14752                           ;map.c: 208: break;
 14753  09BA  2A0D               	goto	l11309
 14754                           	line	211
 14755                           ;map.c: 211: case 3:
 14756                           	
 14757  09BB                     l2917:	
 14758                           	line	212
 14759                           	
 14760  09BB                     l11285:	
 14761                           ;map.c: 212: vicZone = 1;
 14762  09BB  1683               	bsf	status, 5	;RP0=1, select bank1
 14763  09BC  1303               	bcf	status, 6	;RP1=0, select bank1
 14764  09BD  01CC               	clrf	(_vicZone)^080h
 14765  09BE  1403               	bsf	status,0
 14766  09BF  0DCC               	rlf	(_vicZone)^080h,f
 14767                           	line	213
 14768                           ;map.c: 213: break;
 14769  09C0  2A0D               	goto	l11309
 14770                           	line	214
 14771                           ;map.c: 214: default:
 14772                           	
 14773  09C1                     l2918:	
 14774                           	line	215
 14775                           ;map.c: 215: break;
 14776  09C1  2A0D               	goto	l11309
 14777                           	line	216
 14778                           	
 14779  09C2                     l11287:	
 14780                           ;map.c: 216: }
 14781  09C2  2A0D               	goto	l11309
 14782                           	line	202
 14783                           	
 14784  09C3                     l2914:	
 14785                           	
 14786  09C3                     l11289:	
 14787  09C3  1283               	bcf	status, 5	;RP0=0, select bank0
 14788  09C4  082A               	movf	(getVictimZone@victimY),w
 14789                           	; Switch size 1, requested type "space"
 14790                           ; Number of cases is 2, Range of values is 1 to 3
 14791                           ; switch strategies available:
 14792                           ; Name         Instructions Cycles
 14793                           ; simple_byte            7     4 (average)
 14794                           ; direct_byte           20    11 (fixed)
 14795                           ; jumptable            263     9 (fixed)
 14796                           ;	Chosen strategy is simple_byte
 14797                           
 14798                           	opt asmopt_off
 14799  09C5  3A01               	xorlw	1^0	; case 1
 14800  09C6  1903               	skipnz
 14801  09C7  29B4               	goto	l11283
 14802  09C8  3A02               	xorlw	3^1	; case 3
 14803  09C9  1903               	skipnz
 14804  09CA  29BB               	goto	l11285
 14805  09CB  2A0D               	goto	l11309
 14806                           	opt asmopt_on
 14807                           
 14808                           	line	216
 14809                           	
 14810  09CC                     l2916:	
 14811                           	line	217
 14812                           ;map.c: 217: break;
 14813  09CC  2A0D               	goto	l11309
 14814                           	line	219
 14815                           ;map.c: 219: case 3:
 14816                           	
 14817  09CD                     l2919:	
 14818                           	line	220
 14819                           ;map.c: 220: switch (victimY)
 14820  09CD  29DF               	goto	l11297
 14821                           	line	224
 14822                           ;map.c: 221: {
 14823                           ;map.c: 224: case 1:
 14824                           	
 14825  09CE                     l2921:	
 14826                           	line	225
 14827                           	
 14828  09CE                     l11291:	
 14829                           ;map.c: 225: vicZone = 3;
 14830  09CE  3003               	movlw	(03h)
 14831  09CF  00AB               	movwf	(??_getVictimZone+0)+0
 14832  09D0  082B               	movf	(??_getVictimZone+0)+0,w
 14833  09D1  1683               	bsf	status, 5	;RP0=1, select bank1
 14834  09D2  1303               	bcf	status, 6	;RP1=0, select bank1
 14835  09D3  00CC               	movwf	(_vicZone)^080h
 14836                           	line	226
 14837                           ;map.c: 226: break;
 14838  09D4  2A0D               	goto	l11309
 14839                           	line	229
 14840                           ;map.c: 229: case 3:
 14841                           	
 14842  09D5                     l2923:	
 14843                           	line	230
 14844                           	
 14845  09D5                     l11293:	
 14846                           ;map.c: 230: vicZone = 2;
 14847  09D5  3002               	movlw	(02h)
 14848  09D6  1283               	bcf	status, 5	;RP0=0, select bank0
 14849  09D7  00AB               	movwf	(??_getVictimZone+0)+0
 14850  09D8  082B               	movf	(??_getVictimZone+0)+0,w
 14851  09D9  1683               	bsf	status, 5	;RP0=1, select bank1
 14852  09DA  1303               	bcf	status, 6	;RP1=0, select bank1
 14853  09DB  00CC               	movwf	(_vicZone)^080h
 14854                           	line	231
 14855                           ;map.c: 231: break;
 14856  09DC  2A0D               	goto	l11309
 14857                           	line	232
 14858                           ;map.c: 232: default:
 14859                           	
 14860  09DD                     l2924:	
 14861                           	line	233
 14862                           ;map.c: 233: break;
 14863  09DD  2A0D               	goto	l11309
 14864                           	line	234
 14865                           	
 14866  09DE                     l11295:	
 14867                           ;map.c: 234: }
 14868  09DE  2A0D               	goto	l11309
 14869                           	line	220
 14870                           	
 14871  09DF                     l2920:	
 14872                           	
 14873  09DF                     l11297:	
 14874  09DF  1283               	bcf	status, 5	;RP0=0, select bank0
 14875  09E0  082A               	movf	(getVictimZone@victimY),w
 14876                           	; Switch size 1, requested type "space"
 14877                           ; Number of cases is 2, Range of values is 1 to 3
 14878                           ; switch strategies available:
 14879                           ; Name         Instructions Cycles
 14880                           ; simple_byte            7     4 (average)
 14881                           ; direct_byte           20    11 (fixed)
 14882                           ; jumptable            263     9 (fixed)
 14883                           ;	Chosen strategy is simple_byte
 14884                           
 14885                           	opt asmopt_off
 14886  09E1  3A01               	xorlw	1^0	; case 1
 14887  09E2  1903               	skipnz
 14888  09E3  29CE               	goto	l11291
 14889  09E4  3A02               	xorlw	3^1	; case 3
 14890  09E5  1903               	skipnz
 14891  09E6  29D5               	goto	l11293
 14892  09E7  2A0D               	goto	l11309
 14893                           	opt asmopt_on
 14894                           
 14895                           	line	234
 14896                           	
 14897  09E8                     l2922:	
 14898                           	line	235
 14899                           ;map.c: 235: break;
 14900  09E8  2A0D               	goto	l11309
 14901                           	line	237
 14902                           ;map.c: 237: case 4:
 14903                           	
 14904  09E9                     l2925:	
 14905                           	line	238
 14906                           ;map.c: 238: switch (victimY)
 14907  09E9  29F3               	goto	l11303
 14908                           	line	246
 14909                           ;map.c: 239: {
 14910                           ;map.c: 246: case 3:
 14911                           	
 14912  09EA                     l2927:	
 14913                           	line	247
 14914                           	
 14915  09EA                     l11299:	
 14916                           ;map.c: 247: vicZone = 2;
 14917  09EA  3002               	movlw	(02h)
 14918  09EB  00AB               	movwf	(??_getVictimZone+0)+0
 14919  09EC  082B               	movf	(??_getVictimZone+0)+0,w
 14920  09ED  1683               	bsf	status, 5	;RP0=1, select bank1
 14921  09EE  1303               	bcf	status, 6	;RP1=0, select bank1
 14922  09EF  00CC               	movwf	(_vicZone)^080h
 14923                           	line	248
 14924                           ;map.c: 248: break;
 14925  09F0  2A0D               	goto	l11309
 14926                           	line	249
 14927                           ;map.c: 249: default:
 14928                           	
 14929  09F1                     l2929:	
 14930                           	line	250
 14931                           ;map.c: 250: break;
 14932  09F1  2A0D               	goto	l11309
 14933                           	line	251
 14934                           	
 14935  09F2                     l11301:	
 14936                           ;map.c: 251: }
 14937  09F2  2A0D               	goto	l11309
 14938                           	line	238
 14939                           	
 14940  09F3                     l2926:	
 14941                           	
 14942  09F3                     l11303:	
 14943  09F3  1283               	bcf	status, 5	;RP0=0, select bank0
 14944  09F4  082A               	movf	(getVictimZone@victimY),w
 14945                           	; Switch size 1, requested type "space"
 14946                           ; Number of cases is 1, Range of values is 3 to 3
 14947                           ; switch strategies available:
 14948                           ; Name         Instructions Cycles
 14949                           ; simple_byte            4     3 (average)
 14950                           ; direct_byte           14    11 (fixed)
 14951                           ; jumptable            263     9 (fixed)
 14952                           ;	Chosen strategy is simple_byte
 14953                           
 14954                           	opt asmopt_off
 14955  09F5  3A03               	xorlw	3^0	; case 3
 14956  09F6  1903               	skipnz
 14957  09F7  29EA               	goto	l11299
 14958  09F8  2A0D               	goto	l11309
 14959                           	opt asmopt_on
 14960                           
 14961                           	line	251
 14962                           	
 14963  09F9                     l2928:	
 14964                           	line	252
 14965                           ;map.c: 252: break;
 14966  09F9  2A0D               	goto	l11309
 14967                           	line	254
 14968                           ;map.c: 254: default:
 14969                           	
 14970  09FA                     l2930:	
 14971                           	line	255
 14972                           ;map.c: 255: break;
 14973  09FA  2A0D               	goto	l11309
 14974                           	line	256
 14975                           	
 14976  09FB                     l11305:	
 14977                           ;map.c: 256: }
 14978  09FB  2A0D               	goto	l11309
 14979                           	line	163
 14980                           	
 14981  09FC                     l2899:	
 14982                           	
 14983  09FC                     l11307:	
 14984  09FC  082C               	movf	(getVictimZone@victimX),w
 14985                           	; Switch size 1, requested type "space"
 14986                           ; Number of cases is 5, Range of values is 0 to 4
 14987                           ; switch strategies available:
 14988                           ; Name         Instructions Cycles
 14989                           ; simple_byte           16     9 (average)
 14990                           ; direct_byte           23     8 (fixed)
 14991                           ; jumptable            260     6 (fixed)
 14992                           ; rangetable             9     6 (fixed)
 14993                           ; spacedrange           16     9 (fixed)
 14994                           ; locatedrange           5     3 (fixed)
 14995                           ;	Chosen strategy is simple_byte
 14996                           
 14997                           	opt asmopt_off
 14998  09FD  3A00               	xorlw	0^0	; case 0
 14999  09FE  1903               	skipnz
 15000  09FF  298D               	goto	l11273
 15001  0A00  3A01               	xorlw	1^0	; case 1
 15002  0A01  1903               	skipnz
 15003  0A02  29A9               	goto	l11281
 15004  0A03  3A03               	xorlw	2^1	; case 2
 15005  0A04  1903               	skipnz
 15006  0A05  29C3               	goto	l11289
 15007  0A06  3A01               	xorlw	3^2	; case 3
 15008  0A07  1903               	skipnz
 15009  0A08  29DF               	goto	l11297
 15010  0A09  3A07               	xorlw	4^3	; case 4
 15011  0A0A  1903               	skipnz
 15012  0A0B  29F3               	goto	l11303
 15013  0A0C  2A0D               	goto	l11309
 15014                           	opt asmopt_on
 15015                           
 15016                           	line	256
 15017                           	
 15018  0A0D                     l2906:	
 15019                           	line	258
 15020                           	
 15021  0A0D                     l11309:	
 15022                           ;map.c: 258: return vicZone;
 15023  0A0D  1683               	bsf	status, 5	;RP0=1, select bank1
 15024  0A0E  1303               	bcf	status, 6	;RP1=0, select bank1
 15025  0A0F  084C               	movf	(_vicZone)^080h,w
 15026  0A10  2A11               	goto	l2931
 15027                           	
 15028  0A11                     l11311:	
 15029                           	line	259
 15030                           	
 15031  0A11                     l2931:	
 15032  0A11  0008               	return
 15033                           	opt stack 0
 15034                           GLOBAL	__end_of_getVictimZone
 15035  0A12                     	__end_of_getVictimZone:
 15036 ;; =============== function _getVictimZone ends ============
 15037                           
 15038                           	signat	_getVictimZone,8313
 15039                           	global	_getFinalY
 15040                           psect	text2258,local,class=CODE,delta=2
 15041                           global __ptext2258
 15042  1E84                     __ptext2258:
 15043                           
 15044 ;; *************** function _getFinalY *****************
 15045 ;; Defined at:
 15046 ;;		line 152 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\map.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;		None
 15049 ;; Auto vars:     Size  Location     Type
 15050 ;;		None
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  1    wreg      unsigned char 
 15053 ;; Registers used:
 15054 ;;		wreg
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/0
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15060 ;;      Params:         0       0       0       0       0
 15061 ;;      Locals:         0       0       0       0       0
 15062 ;;      Temps:          0       0       0       0       0
 15063 ;;      Totals:         0       0       0       0       0
 15064 ;;Total ram usage:        0 bytes
 15065 ;; Hardware stack levels used:    1
 15066 ;; Hardware stack levels required when called:    2
 15067 ;; This function calls:
 15068 ;;		Nothing
 15069 ;; This function is called by:
 15070 ;;		_checkForFinalDestination
 15071 ;; This function uses a non-reentrant model
 15072 ;;
 15073                           psect	text2258
 15074                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
 15075                           	line	152
 15076                           	global	__size_of_getFinalY
 15077  0005                     	__size_of_getFinalY	equ	__end_of_getFinalY-_getFinalY
 15078                           	
 15079  1E84                     _getFinalY:	
 15080                           	opt	stack 4
 15081                           ; Regs used in _getFinalY: [wreg]
 15082                           	line	153
 15083                           	
 15084  1E84                     l11261:	
 15085                           ;map.c: 153: return finalY;
 15086  1E84  1683               	bsf	status, 5	;RP0=1, select bank1
 15087  1E85  1303               	bcf	status, 6	;RP1=0, select bank1
 15088  1E86  0865               	movf	(_finalY)^080h,w
 15089  1E87  2E88               	goto	l2896
 15090                           	
 15091  1E88                     l11263:	
 15092                           	line	154
 15093                           	
 15094  1E88                     l2896:	
 15095  1E88  0008               	return
 15096                           	opt stack 0
 15097                           GLOBAL	__end_of_getFinalY
 15098  1E89                     	__end_of_getFinalY:
 15099 ;; =============== function _getFinalY ends ============
 15100                           
 15101                           	signat	_getFinalY,89
 15102                           	global	_getFinalX
 15103                           psect	text2259,local,class=CODE,delta=2
 15104                           global __ptext2259
 15105  1E7F                     __ptext2259:
 15106                           
 15107 ;; *************** function _getFinalX *****************
 15108 ;; Defined at:
 15109 ;;		line 147 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIO
       Nv0.8\COMPETITIONv0.8\map.c"
 15110 ;; Parameters:    Size  Location     Type
 15111 ;;		None
 15112 ;; Auto vars:     Size  Location     Type
 15113 ;;		None
 15114 ;; Return value:  Size  Location     Type
 15115 ;;                  1    wreg      unsigned char 
 15116 ;; Registers used:
 15117 ;;		wreg
 15118 ;; Tracked objects:
 15119 ;;		On entry : 0/0
 15120 ;;		On exit  : 0/0
 15121 ;;		Unchanged: 0/0
 15122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15123 ;;      Params:         0       0       0       0       0
 15124 ;;      Locals:         0       0       0       0       0
 15125 ;;      Temps:          0       0       0       0       0
 15126 ;;      Totals:         0       0       0       0       0
 15127 ;;Total ram usage:        0 bytes
 15128 ;; Hardware stack levels used:    1
 15129 ;; Hardware stack levels required when called:    2
 15130 ;; This function calls:
 15131 ;;		Nothing
 15132 ;; This function is called by:
 15133 ;;		_checkForFinalDestination
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           psect	text2259
 15137                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\map.c"
 15138                           	line	147
 15139                           	global	__size_of_getFinalX
 15140  0005                     	__size_of_getFinalX	equ	__end_of_getFinalX-_getFinalX
 15141                           	
 15142  1E7F                     _getFinalX:	
 15143                           	opt	stack 4
 15144                           ; Regs used in _getFinalX: [wreg]
 15145                           	line	148
 15146                           	
 15147  1E7F                     l11257:	
 15148                           ;map.c: 148: return finalX;
 15149  1E7F  1283               	bcf	status, 5	;RP0=0, select bank0
 15150  1E80  1303               	bcf	status, 6	;RP1=0, select bank0
 15151  1E81  0863               	movf	(_finalX),w
 15152  1E82  2E83               	goto	l2893
 15153                           	
 15154  1E83                     l11259:	
 15155                           	line	149
 15156                           	
 15157  1E83                     l2893:	
 15158  1E83  0008               	return
 15159                           	opt stack 0
 15160                           GLOBAL	__end_of_getFinalX
 15161  1E84                     	__end_of_getFinalX:
 15162 ;; =============== function _getFinalX ends ============
 15163                           
 15164                           	signat	_getFinalX,89
 15165                           	global	_ser_putch
 15166                           psect	text2260,local,class=CODE,delta=2
 15167                           global __ptext2260
 15168  1FDF                     __ptext2260:
 15169                           
 15170 ;; *************** function _ser_putch *****************
 15171 ;; Defined at:
 15172 ;;		line 81 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\ser.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;  c               1    wreg     unsigned char 
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;  c               1   11[BANK0 ] unsigned char 
 15177 ;; Return value:  Size  Location     Type
 15178 ;;		None               void
 15179 ;; Registers used:
 15180 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15186 ;;      Params:         0       0       0       0       0
 15187 ;;      Locals:         0       1       0       0       0
 15188 ;;      Temps:          0       1       0       0       0
 15189 ;;      Totals:         0       2       0       0       0
 15190 ;;Total ram usage:        2 bytes
 15191 ;; Hardware stack levels used:    1
 15192 ;; Hardware stack levels required when called:    2
 15193 ;; This function calls:
 15194 ;;		Nothing
 15195 ;; This function is called by:
 15196 ;;		_EEPROMToSerial
 15197 ;;		_ser_putArr
 15198 ;;		_play_iCreate_song
 15199 ;;		_drive
 15200 ;;		_driveForDistance
 15201 ;;		_waitFor
 15202 ;;		_initIRobot
 15203 ;;		_lookForVictim
 15204 ;;		_ser_puts
 15205 ;;		_ser_puts2
 15206 ;;		_ser_puthex
 15207 ;; This function uses a non-reentrant model
 15208 ;;
 15209                           psect	text2260
 15210                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\ser.c"
 15211                           	line	81
 15212                           	global	__size_of_ser_putch
 15213  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 15214                           	
 15215  1FDF                     _ser_putch:	
 15216                           	opt	stack 3
 15217                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 15218                           ;ser_putch@c stored from wreg
 15219  1FDF  1283               	bcf	status, 5	;RP0=0, select bank0
 15220  1FE0  1303               	bcf	status, 6	;RP1=0, select bank0
 15221  1FE1  00AB               	movwf	(ser_putch@c)
 15222                           	line	82
 15223                           	
 15224  1FE2                     l11229:	
 15225                           ;ser.c: 82: while (((txiptr+1) & (16-1))==txoptr)
 15226  1FE2  2FE4               	goto	l11231
 15227                           	
 15228  1FE3                     l3649:	
 15229                           	line	83
 15230                           ;ser.c: 83: continue;
 15231  1FE3  2FE4               	goto	l11231
 15232                           	
 15233  1FE4                     l3648:	
 15234                           	line	82
 15235                           	
 15236  1FE4                     l11231:	
 15237  1FE4  087A               	movf	(_txiptr),w	;volatile
 15238  1FE5  3E01               	addlw	01h
 15239  1FE6  390F               	andlw	0Fh
 15240  1FE7  067B               	xorwf	(_txoptr),w	;volatile
 15241  1FE8  1903               	skipnz
 15242  1FE9  2FEB               	goto	u5911
 15243  1FEA  2FEC               	goto	u5910
 15244  1FEB                     u5911:
 15245  1FEB  2FE4               	goto	l11231
 15246  1FEC                     u5910:
 15247                           	
 15248  1FEC                     l3650:	
 15249                           	line	84
 15250                           ;ser.c: 84: GIE=0;
 15251  1FEC  138B               	bcf	(95/8),(95)&7
 15252                           	line	85
 15253                           	
 15254  1FED                     l11233:	
 15255                           ;ser.c: 85: txfifo[txiptr] = c;
 15256  1FED  082B               	movf	(ser_putch@c),w
 15257  1FEE  00AA               	movwf	(??_ser_putch+0)+0
 15258  1FEF  087A               	movf	(_txiptr),w
 15259  1FF0  3EB0               	addlw	_txfifo&0ffh
 15260  1FF1  0084               	movwf	fsr0
 15261  1FF2  082A               	movf	(??_ser_putch+0)+0,w
 15262  1FF3  1383               	bcf	status, 7	;select IRP bank1
 15263  1FF4  0080               	movwf	indf
 15264                           	line	86
 15265                           	
 15266  1FF5                     l11235:	
 15267                           ;ser.c: 86: txiptr=(txiptr+1) & (16-1);
 15268  1FF5  087A               	movf	(_txiptr),w	;volatile
 15269  1FF6  3E01               	addlw	01h
 15270  1FF7  390F               	andlw	0Fh
 15271  1FF8  00AA               	movwf	(??_ser_putch+0)+0
 15272  1FF9  082A               	movf	(??_ser_putch+0)+0,w
 15273  1FFA  00FA               	movwf	(_txiptr)	;volatile
 15274                           	line	87
 15275                           	
 15276  1FFB                     l11237:	
 15277                           ;ser.c: 87: TXIE=1;
 15278  1FFB  1683               	bsf	status, 5	;RP0=1, select bank1
 15279  1FFC  1303               	bcf	status, 6	;RP1=0, select bank1
 15280  1FFD  160C               	bsf	(1124/8)^080h,(1124)&7
 15281                           	line	88
 15282                           	
 15283  1FFE                     l11239:	
 15284                           ;ser.c: 88: GIE=1;
 15285  1FFE  178B               	bsf	(95/8),(95)&7
 15286                           	line	89
 15287                           	
 15288  1FFF                     l3651:	
 15289  1FFF  0008               	return
 15290                           	opt stack 0
 15291                           GLOBAL	__end_of_ser_putch
 15292  2000                     	__end_of_ser_putch:
 15293 ;; =============== function _ser_putch ends ============
 15294                           
 15295                           	signat	_ser_putch,4216
 15296                           	global	_initEEPROMMode
 15297                           psect	text2261,local,class=CODE,delta=2
 15298                           global __ptext2261
 15299  1E9D                     __ptext2261:
 15300                           
 15301 ;; *************** function _initEEPROMMode *****************
 15302 ;; Defined at:
 15303 ;;		line 21 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\eeprom.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;		None               void
 15310 ;; Registers used:
 15311 ;;		wreg, status,2, status,0
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15317 ;;      Params:         0       0       0       0       0
 15318 ;;      Locals:         0       0       0       0       0
 15319 ;;      Temps:          0       1       0       0       0
 15320 ;;      Totals:         0       1       0       0       0
 15321 ;;Total ram usage:        1 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    2
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_writeEEPROM
 15328 ;;		_readEEPROM
 15329 ;; This function uses a non-reentrant model
 15330 ;;
 15331                           psect	text2261
 15332                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\eeprom.c"
 15333                           	line	21
 15334                           	global	__size_of_initEEPROMMode
 15335  0008                     	__size_of_initEEPROMMode	equ	__end_of_initEEPROMMode-_initEEPROMMode
 15336                           	
 15337  1E9D                     _initEEPROMMode:	
 15338                           	opt	stack 2
 15339                           ; Regs used in _initEEPROMMode: [wreg+status,2+status,0]
 15340                           	line	22
 15341                           	
 15342  1E9D                     l11205:	
 15343                           ;eeprom.c: 22: PORTC &= 0b11111100;
 15344  1E9D  30FC               	movlw	(0FCh)
 15345  1E9E  1283               	bcf	status, 5	;RP0=0, select bank0
 15346  1E9F  1303               	bcf	status, 6	;RP1=0, select bank0
 15347  1EA0  00AA               	movwf	(??_initEEPROMMode+0)+0
 15348  1EA1  082A               	movf	(??_initEEPROMMode+0)+0,w
 15349  1EA2  0587               	andwf	(7),f	;volatile
 15350                           	line	23
 15351                           	
 15352  1EA3                     l11207:	
 15353                           ;eeprom.c: 23: PORTC |= 0b00000010;
 15354  1EA3  1487               	bsf	(7)+(1/8),(1)&7	;volatile
 15355                           	line	24
 15356                           	
 15357  1EA4                     l1407:	
 15358  1EA4  0008               	return
 15359                           	opt stack 0
 15360                           GLOBAL	__end_of_initEEPROMMode
 15361  1EA5                     	__end_of_initEEPROMMode:
 15362 ;; =============== function _initEEPROMMode ends ============
 15363                           
 15364                           	signat	_initEEPROMMode,88
 15365                           	global	_writeSPIByte
 15366                           psect	text2262,local,class=CODE,delta=2
 15367                           global __ptext2262
 15368  1002                     __ptext2262:
 15369                           
 15370 ;; *************** function _writeSPIByte *****************
 15371 ;; Defined at:
 15372 ;;		line 14 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\eeprom.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;  data            1    wreg     unsigned char 
 15375 ;; Auto vars:     Size  Location     Type
 15376 ;;  data            1   10[BANK0 ] unsigned char 
 15377 ;; Return value:  Size  Location     Type
 15378 ;;		None               void
 15379 ;; Registers used:
 15380 ;;		wreg
 15381 ;; Tracked objects:
 15382 ;;		On entry : 0/0
 15383 ;;		On exit  : 0/0
 15384 ;;		Unchanged: 0/0
 15385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15386 ;;      Params:         0       0       0       0       0
 15387 ;;      Locals:         0       1       0       0       0
 15388 ;;      Temps:          0       0       0       0       0
 15389 ;;      Totals:         0       1       0       0       0
 15390 ;;Total ram usage:        1 bytes
 15391 ;; Hardware stack levels used:    1
 15392 ;; Hardware stack levels required when called:    2
 15393 ;; This function calls:
 15394 ;;		Nothing
 15395 ;; This function is called by:
 15396 ;;		_writeEEPROM
 15397 ;;		_readEEPROM
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           psect	text2262
 15401                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\eeprom.c"
 15402                           	line	14
 15403                           	global	__size_of_writeSPIByte
 15404  000D                     	__size_of_writeSPIByte	equ	__end_of_writeSPIByte-_writeSPIByte
 15405                           	
 15406  1002                     _writeSPIByte:	
 15407                           	opt	stack 2
 15408                           ; Regs used in _writeSPIByte: [wreg]
 15409                           ;writeSPIByte@data stored from wreg
 15410  1002  1283               	bcf	status, 5	;RP0=0, select bank0
 15411  1003  1303               	bcf	status, 6	;RP1=0, select bank0
 15412  1004  00AA               	movwf	(writeSPIByte@data)
 15413                           	line	15
 15414                           	
 15415  1005                     l11201:	
 15416                           ;eeprom.c: 15: SSPIF = 0;
 15417  1005  118C               	bcf	(99/8),(99)&7
 15418                           	line	16
 15419                           	
 15420  1006                     l11203:	
 15421                           ;eeprom.c: 16: SSPBUF = data;
 15422  1006  082A               	movf	(writeSPIByte@data),w
 15423  1007  0093               	movwf	(19)	;volatile
 15424                           	line	17
 15425                           ;eeprom.c: 17: while(!SSPIF);
 15426  1008  2809               	goto	l1401
 15427                           	
 15428  1009                     l1402:	
 15429                           	
 15430  1009                     l1401:	
 15431  1009  1D8C               	btfss	(99/8),(99)&7
 15432  100A  280C               	goto	u5881
 15433  100B  280D               	goto	u5880
 15434  100C                     u5881:
 15435  100C  2809               	goto	l1401
 15436  100D                     u5880:
 15437  100D  280E               	goto	l1404
 15438                           	
 15439  100E                     l1403:	
 15440                           	line	18
 15441                           	
 15442  100E                     l1404:	
 15443  100E  0008               	return
 15444                           	opt stack 0
 15445                           GLOBAL	__end_of_writeSPIByte
 15446  100F                     	__end_of_writeSPIByte:
 15447 ;; =============== function _writeSPIByte ends ============
 15448                           
 15449                           	signat	_writeSPIByte,4216
 15450                           	global	_isr1
 15451                           psect	text2263,local,class=CODE,delta=2
 15452                           global __ptext2263
 15453  0C61                     __ptext2263:
 15454                           
 15455 ;; *************** function _isr1 *****************
 15456 ;; Defined at:
 15457 ;;		line 62 in file "C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITION
       v0.8\COMPETITIONv0.8\main.c"
 15458 ;; Parameters:    Size  Location     Type
 15459 ;;		None
 15460 ;; Auto vars:     Size  Location     Type
 15461 ;;		None
 15462 ;; Return value:  Size  Location     Type
 15463 ;;		None               void
 15464 ;; Registers used:
 15465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/0
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15471 ;;      Params:         0       0       0       0       0
 15472 ;;      Locals:         0       0       0       0       0
 15473 ;;      Temps:          0      10       0       0       0
 15474 ;;      Totals:         0      10       0       0       0
 15475 ;;Total ram usage:       10 bytes
 15476 ;; Hardware stack levels used:    1
 15477 ;; Hardware stack levels required when called:    1
 15478 ;; This function calls:
 15479 ;;		___lwmod
 15480 ;; This function is called by:
 15481 ;;		Interrupt level 1
 15482 ;; This function uses a non-reentrant model
 15483 ;;
 15484                           psect	text2263
 15485                           	file	"C:\Documents and Settings\Administrator\My Documents\Dropbox\Mechatronics 2\COMPE
                                 TITION\COMPETITIONv0.8\COMPETITIONv0.8\main.c"
 15486                           	line	62
 15487                           	global	__size_of_isr1
 15488  0112                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 15489                           	
 15490  0C61                     _isr1:	
 15491                           	opt	stack 0
 15492                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15493                           psect	intentry,class=CODE,delta=2
 15494                           global __pintentry
 15495  0004                     __pintentry:
 15496                           global interrupt_function
 15497  0004                     interrupt_function:
 15498                           	global saved_w
 15499  007E                     	saved_w	set	btemp+0
 15500  0004  00FE               	movwf	saved_w
 15501  0005  0E03               	swapf	status,w
 15502  0006  1283               	bcf	status, 5	;RP0=0, select bank0
 15503  0007  1303               	bcf	status, 6	;RP1=0, select bank0
 15504  0008  00A6               	movwf	(??_isr1+6)
 15505  0009  0804               	movf	fsr0,w
 15506  000A  00A7               	movwf	(??_isr1+7)
 15507  000B  080A               	movf	pclath,w
 15508  000C  00A8               	movwf	(??_isr1+8)
 15509  000D  087F               	movf	btemp+1,w
 15510  000E  00A9               	movwf	(??_isr1+9)
 15511  000F  120A  158A  2C61   	ljmp	_isr1
 15512                           psect	text2263
 15513                           	line	64
 15514                           	
 15515  0C61                     i1l9803:	
 15516                           ;main.c: 64: if(TMR0IF)
 15517  0C61  1D0B               	btfss	(90/8),(90)&7
 15518  0C62  2C64               	goto	u368_21
 15519  0C63  2C65               	goto	u368_20
 15520  0C64                     u368_21:
 15521  0C64  2D67               	goto	i1l6717
 15522  0C65                     u368_20:
 15523                           	line	66
 15524                           	
 15525  0C65                     i1l9805:	
 15526                           ;main.c: 65: {
 15527                           ;main.c: 66: TMR0IF = 0;
 15528  0C65  110B               	bcf	(90/8),(90)&7
 15529                           	line	67
 15530                           	
 15531  0C66                     i1l9807:	
 15532                           ;main.c: 67: TMR0 = 100;
 15533  0C66  3064               	movlw	(064h)
 15534  0C67  0081               	movwf	(1)	;volatile
 15535                           	line	69
 15536                           ;main.c: 69: RTC_Counter++;
 15537  0C68  3001               	movlw	low(01h)
 15538  0C69  07DC               	addwf	(_RTC_Counter),f	;volatile
 15539  0C6A  1803               	skipnc
 15540  0C6B  0ADD               	incf	(_RTC_Counter+1),f	;volatile
 15541  0C6C  3000               	movlw	high(01h)
 15542  0C6D  07DD               	addwf	(_RTC_Counter+1),f	;volatile
 15543                           	line	71
 15544                           	
 15545  0C6E                     i1l9809:	
 15546                           ;main.c: 71: RTC_FLAG_1MS = 1;
 15547  0C6E  14F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 15548                           	line	73
 15549                           	
 15550  0C6F                     i1l9811:	
 15551                           ;main.c: 73: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
 15552  0C6F  300A               	movlw	low(0Ah)
 15553  0C70  00F2               	movwf	(?___lwmod)
 15554  0C71  3000               	movlw	high(0Ah)
 15555  0C72  00F3               	movwf	((?___lwmod))+1
 15556  0C73  085D               	movf	(_RTC_Counter+1),w	;volatile
 15557  0C74  01F5               	clrf	1+(?___lwmod)+02h
 15558  0C75  07F5               	addwf	1+(?___lwmod)+02h
 15559  0C76  085C               	movf	(_RTC_Counter),w	;volatile
 15560  0C77  01F4               	clrf	0+(?___lwmod)+02h
 15561  0C78  07F4               	addwf	0+(?___lwmod)+02h
 15562                           
 15563  0C79  160A  118A  247F   	fcall	___lwmod
              120A  158A         
 15564  0C7E  0873               	movf	((1+(?___lwmod))),w
 15565  0C7F  0472               	iorwf	((0+(?___lwmod))),w
 15566  0C80  1D03               	skipz
 15567  0C81  2C83               	goto	u369_21
 15568  0C82  2C84               	goto	u369_20
 15569  0C83                     u369_21:
 15570  0C83  2C86               	goto	i1l9815
 15571  0C84                     u369_20:
 15572                           	
 15573  0C84                     i1l9813:	
 15574  0C84  1470               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
 15575  0C85  2C86               	goto	i1l9815
 15576                           	
 15577  0C86                     i1l6704:	
 15578                           	line	74
 15579                           	
 15580  0C86                     i1l9815:	
 15581                           ;main.c: 74: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
 15582  0C86  3032               	movlw	low(032h)
 15583  0C87  00F2               	movwf	(?___lwmod)
 15584  0C88  3000               	movlw	high(032h)
 15585  0C89  00F3               	movwf	((?___lwmod))+1
 15586  0C8A  1283               	bcf	status, 5	;RP0=0, select bank0
 15587  0C8B  1303               	bcf	status, 6	;RP1=0, select bank0
 15588  0C8C  085D               	movf	(_RTC_Counter+1),w	;volatile
 15589  0C8D  01F5               	clrf	1+(?___lwmod)+02h
 15590  0C8E  07F5               	addwf	1+(?___lwmod)+02h
 15591  0C8F  085C               	movf	(_RTC_Counter),w	;volatile
 15592  0C90  01F4               	clrf	0+(?___lwmod)+02h
 15593  0C91  07F4               	addwf	0+(?___lwmod)+02h
 15594                           
 15595  0C92  160A  118A  247F   	fcall	___lwmod
              120A  158A         
 15596  0C97  0873               	movf	((1+(?___lwmod))),w
 15597  0C98  0472               	iorwf	((0+(?___lwmod))),w
 15598  0C99  1D03               	skipz
 15599  0C9A  2C9C               	goto	u370_21
 15600  0C9B  2C9D               	goto	u370_20
 15601  0C9C                     u370_21:
 15602  0C9C  2C9F               	goto	i1l9819
 15603  0C9D                     u370_20:
 15604                           	
 15605  0C9D                     i1l9817:	
 15606  0C9D  15F0               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
 15607  0C9E  2C9F               	goto	i1l9819
 15608                           	
 15609  0C9F                     i1l6705:	
 15610                           	line	75
 15611                           	
 15612  0C9F                     i1l9819:	
 15613                           ;main.c: 75: if(RTC_Counter % 500 == 0)
 15614  0C9F  30F4               	movlw	low(01F4h)
 15615  0CA0  00F2               	movwf	(?___lwmod)
 15616  0CA1  3001               	movlw	high(01F4h)
 15617  0CA2  00F3               	movwf	((?___lwmod))+1
 15618  0CA3  1283               	bcf	status, 5	;RP0=0, select bank0
 15619  0CA4  1303               	bcf	status, 6	;RP1=0, select bank0
 15620  0CA5  085D               	movf	(_RTC_Counter+1),w	;volatile
 15621  0CA6  01F5               	clrf	1+(?___lwmod)+02h
 15622  0CA7  07F5               	addwf	1+(?___lwmod)+02h
 15623  0CA8  085C               	movf	(_RTC_Counter),w	;volatile
 15624  0CA9  01F4               	clrf	0+(?___lwmod)+02h
 15625  0CAA  07F4               	addwf	0+(?___lwmod)+02h
 15626                           
 15627  0CAB  160A  118A  247F   	fcall	___lwmod
              120A  158A         
 15628                           	line	78
 15629                           ;main.c: 76: {
 15630                           	
 15631  0CB0                     i1l6706:	
 15632                           	line	80
 15633                           ;main.c: 78: }
 15634                           ;main.c: 80: if(!RB0)
 15635  0CB0  1283               	bcf	status, 5	;RP0=0, select bank0
 15636  0CB1  1303               	bcf	status, 6	;RP1=0, select bank0
 15637  0CB2  1806               	btfsc	(48/8),(48)&7
 15638  0CB3  2CB5               	goto	u371_21
 15639  0CB4  2CB6               	goto	u371_20
 15640  0CB5                     u371_21:
 15641  0CB5  2CE0               	goto	i1l6707
 15642  0CB6                     u371_20:
 15643                           	line	82
 15644                           	
 15645  0CB6                     i1l9821:	
 15646                           ;main.c: 81: {
 15647                           ;main.c: 82: start.debounceCount++;
 15648  0CB6  3001               	movlw	(01h)
 15649  0CB7  00A0               	movwf	(??_isr1+0)+0
 15650  0CB8  0820               	movf	(??_isr1+0)+0,w
 15651  0CB9  1683               	bsf	status, 5	;RP0=1, select bank1
 15652  0CBA  1303               	bcf	status, 6	;RP1=0, select bank1
 15653  0CBB  07C5               	addwf	0+(_start)^080h+02h,f
 15654                           	line	83
 15655                           	
 15656  0CBC                     i1l9823:	
 15657                           ;main.c: 83: if(start.debounceCount >= 10 & start.released)
 15658  0CBC  0844               	movf	0+(_start)^080h+01h,w
 15659  0CBD  1283               	bcf	status, 5	;RP0=0, select bank0
 15660  0CBE  1303               	bcf	status, 6	;RP1=0, select bank0
 15661  0CBF  00A0               	movwf	(??_isr1+0)+0
 15662  0CC0  01A1               	clrf	(??_isr1+0)+0+1
 15663  0CC1  300A               	movlw	(0Ah)
 15664  0CC2  1683               	bsf	status, 5	;RP0=1, select bank1
 15665  0CC3  1303               	bcf	status, 6	;RP1=0, select bank1
 15666  0CC4  0245               	subwf	0+(_start)^080h+02h,w
 15667  0CC5  3000               	movlw	0
 15668  0CC6  1803               	skipnc
 15669  0CC7  3001               	movlw	1
 15670  0CC8  1283               	bcf	status, 5	;RP0=0, select bank0
 15671  0CC9  1303               	bcf	status, 6	;RP1=0, select bank0
 15672  0CCA  00A2               	movwf	(??_isr1+2)+0
 15673  0CCB  01A3               	clrf	(??_isr1+2)+0+1
 15674  0CCC  0820               	movf	0+(??_isr1+0)+0,w
 15675  0CCD  0522               	andwf	0+(??_isr1+2)+0,w
 15676  0CCE  00A4               	movwf	(??_isr1+4)+0
 15677  0CCF  0821               	movf	1+(??_isr1+0)+0,w
 15678  0CD0  0523               	andwf	1+(??_isr1+2)+0,w
 15679  0CD1  00A5               	movwf	1+(??_isr1+4)+0
 15680  0CD2  0825               	movf	1+(??_isr1+4)+0,w
 15681  0CD3  0424               	iorwf	0+(??_isr1+4)+0,w
 15682  0CD4  1903               	skipnz
 15683  0CD5  2CD7               	goto	u372_21
 15684  0CD6  2CD8               	goto	u372_20
 15685  0CD7                     u372_21:
 15686  0CD7  2CE7               	goto	i1l9831
 15687  0CD8                     u372_20:
 15688                           	line	85
 15689                           	
 15690  0CD8                     i1l9825:	
 15691                           ;main.c: 84: {
 15692                           ;main.c: 85: start.pressed = 1;
 15693  0CD8  1683               	bsf	status, 5	;RP0=1, select bank1
 15694  0CD9  1303               	bcf	status, 6	;RP1=0, select bank1
 15695  0CDA  01C3               	clrf	(_start)^080h
 15696  0CDB  1403               	bsf	status,0
 15697  0CDC  0DC3               	rlf	(_start)^080h,f
 15698                           	line	86
 15699                           	
 15700  0CDD                     i1l9827:	
 15701                           ;main.c: 86: start.released = 0;
 15702  0CDD  01C4               	clrf	0+(_start)^080h+01h
 15703  0CDE  2CE7               	goto	i1l9831
 15704                           	line	87
 15705                           	
 15706  0CDF                     i1l6708:	
 15707                           	line	88
 15708                           ;main.c: 87: }
 15709                           ;main.c: 88: }
 15710  0CDF  2CE7               	goto	i1l9831
 15711                           	line	89
 15712                           	
 15713  0CE0                     i1l6707:	
 15714                           	line	91
 15715                           ;main.c: 89: else
 15716                           ;main.c: 90: {
 15717                           ;main.c: 91: start.debounceCount = 0;
 15718  0CE0  1683               	bsf	status, 5	;RP0=1, select bank1
 15719  0CE1  1303               	bcf	status, 6	;RP1=0, select bank1
 15720  0CE2  01C5               	clrf	0+(_start)^080h+02h
 15721                           	line	92
 15722                           	
 15723  0CE3                     i1l9829:	
 15724                           ;main.c: 92: start.released = 1;
 15725  0CE3  01C4               	clrf	0+(_start)^080h+01h
 15726  0CE4  1403               	bsf	status,0
 15727  0CE5  0DC4               	rlf	0+(_start)^080h+01h,f
 15728  0CE6  2CE7               	goto	i1l9831
 15729                           	line	93
 15730                           	
 15731  0CE7                     i1l6709:	
 15732                           	line	95
 15733                           	
 15734  0CE7                     i1l9831:	
 15735                           ;main.c: 93: }
 15736                           ;main.c: 95: if(!RB1)
 15737  0CE7  1283               	bcf	status, 5	;RP0=0, select bank0
 15738  0CE8  1886               	btfsc	(49/8),(49)&7
 15739  0CE9  2CEB               	goto	u373_21
 15740  0CEA  2CEC               	goto	u373_20
 15741  0CEB                     u373_21:
 15742  0CEB  2D16               	goto	i1l6710
 15743  0CEC                     u373_20:
 15744                           	line	97
 15745                           	
 15746  0CEC                     i1l9833:	
 15747                           ;main.c: 96: {
 15748                           ;main.c: 97: eeprom.debounceCount++;
 15749  0CEC  3001               	movlw	(01h)
 15750  0CED  00A0               	movwf	(??_isr1+0)+0
 15751  0CEE  0820               	movf	(??_isr1+0)+0,w
 15752  0CEF  1683               	bsf	status, 5	;RP0=1, select bank1
 15753  0CF0  1303               	bcf	status, 6	;RP1=0, select bank1
 15754  0CF1  07C2               	addwf	0+(_eeprom)^080h+02h,f
 15755                           	line	98
 15756                           	
 15757  0CF2                     i1l9835:	
 15758                           ;main.c: 98: if(eeprom.debounceCount >= 10 & eeprom.released)
 15759  0CF2  0841               	movf	0+(_eeprom)^080h+01h,w
 15760  0CF3  1283               	bcf	status, 5	;RP0=0, select bank0
 15761  0CF4  1303               	bcf	status, 6	;RP1=0, select bank0
 15762  0CF5  00A0               	movwf	(??_isr1+0)+0
 15763  0CF6  01A1               	clrf	(??_isr1+0)+0+1
 15764  0CF7  300A               	movlw	(0Ah)
 15765  0CF8  1683               	bsf	status, 5	;RP0=1, select bank1
 15766  0CF9  1303               	bcf	status, 6	;RP1=0, select bank1
 15767  0CFA  0242               	subwf	0+(_eeprom)^080h+02h,w
 15768  0CFB  3000               	movlw	0
 15769  0CFC  1803               	skipnc
 15770  0CFD  3001               	movlw	1
 15771  0CFE  1283               	bcf	status, 5	;RP0=0, select bank0
 15772  0CFF  1303               	bcf	status, 6	;RP1=0, select bank0
 15773  0D00  00A2               	movwf	(??_isr1+2)+0
 15774  0D01  01A3               	clrf	(??_isr1+2)+0+1
 15775  0D02  0820               	movf	0+(??_isr1+0)+0,w
 15776  0D03  0522               	andwf	0+(??_isr1+2)+0,w
 15777  0D04  00A4               	movwf	(??_isr1+4)+0
 15778  0D05  0821               	movf	1+(??_isr1+0)+0,w
 15779  0D06  0523               	andwf	1+(??_isr1+2)+0,w
 15780  0D07  00A5               	movwf	1+(??_isr1+4)+0
 15781  0D08  0825               	movf	1+(??_isr1+4)+0,w
 15782  0D09  0424               	iorwf	0+(??_isr1+4)+0,w
 15783  0D0A  1903               	skipnz
 15784  0D0B  2D0D               	goto	u374_21
 15785  0D0C  2D0E               	goto	u374_20
 15786  0D0D                     u374_21:
 15787  0D0D  2D1D               	goto	i1l9843
 15788  0D0E                     u374_20:
 15789                           	line	100
 15790                           	
 15791  0D0E                     i1l9837:	
 15792                           ;main.c: 99: {
 15793                           ;main.c: 100: eeprom.pressed = 1;
 15794  0D0E  1683               	bsf	status, 5	;RP0=1, select bank1
 15795  0D0F  1303               	bcf	status, 6	;RP1=0, select bank1
 15796  0D10  01C0               	clrf	(_eeprom)^080h
 15797  0D11  1403               	bsf	status,0
 15798  0D12  0DC0               	rlf	(_eeprom)^080h,f
 15799                           	line	101
 15800                           	
 15801  0D13                     i1l9839:	
 15802                           ;main.c: 101: eeprom.released = 0;
 15803  0D13  01C1               	clrf	0+(_eeprom)^080h+01h
 15804  0D14  2D1D               	goto	i1l9843
 15805                           	line	102
 15806                           	
 15807  0D15                     i1l6711:	
 15808                           	line	103
 15809                           ;main.c: 102: }
 15810                           ;main.c: 103: }
 15811  0D15  2D1D               	goto	i1l9843
 15812                           	line	104
 15813                           	
 15814  0D16                     i1l6710:	
 15815                           	line	106
 15816                           ;main.c: 104: else
 15817                           ;main.c: 105: {
 15818                           ;main.c: 106: eeprom.debounceCount = 0;
 15819  0D16  1683               	bsf	status, 5	;RP0=1, select bank1
 15820  0D17  1303               	bcf	status, 6	;RP1=0, select bank1
 15821  0D18  01C2               	clrf	0+(_eeprom)^080h+02h
 15822                           	line	107
 15823                           	
 15824  0D19                     i1l9841:	
 15825                           ;main.c: 107: eeprom.released = 1;
 15826  0D19  01C1               	clrf	0+(_eeprom)^080h+01h
 15827  0D1A  1403               	bsf	status,0
 15828  0D1B  0DC1               	rlf	0+(_eeprom)^080h+01h,f
 15829  0D1C  2D1D               	goto	i1l9843
 15830                           	line	108
 15831                           	
 15832  0D1D                     i1l6712:	
 15833                           	line	110
 15834                           	
 15835  0D1D                     i1l9843:	
 15836                           ;main.c: 108: }
 15837                           ;main.c: 110: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 15838  0D1D  1283               	bcf	status, 5	;RP0=0, select bank0
 15839  0D1E  1E8C               	btfss	(101/8),(101)&7
 15840  0D1F  2D21               	goto	u375_21
 15841  0D20  2D22               	goto	u375_20
 15842  0D21                     u375_21:
 15843  0D21  2D40               	goto	i1l9853
 15844  0D22                     u375_20:
 15845                           	
 15846  0D22                     i1l9845:	
 15847  0D22  081A               	movf	(26),w	;volatile
 15848  0D23  00A0               	movwf	(??_isr1+0)+0
 15849  0D24  0878               	movf	(_rxiptr),w
 15850  0D25  3EA0               	addlw	_rxfifo&0ffh
 15851  0D26  0084               	movwf	fsr0
 15852  0D27  0820               	movf	(??_isr1+0)+0,w
 15853  0D28  1383               	bcf	status, 7	;select IRP bank1
 15854  0D29  0080               	movwf	indf
 15855                           	
 15856  0D2A                     i1l9847:	
 15857  0D2A  0878               	movf	(_rxiptr),w	;volatile
 15858  0D2B  3E01               	addlw	01h
 15859  0D2C  390F               	andlw	0Fh
 15860  0D2D  00A0               	movwf	(??_isr1+0)+0
 15861  0D2E  0820               	movf	(??_isr1+0)+0,w
 15862  0D2F  1683               	bsf	status, 5	;RP0=1, select bank1
 15863  0D30  1303               	bcf	status, 6	;RP1=0, select bank1
 15864  0D31  00C9               	movwf	(_ser_tmp)^080h
 15865                           	
 15866  0D32                     i1l9849:	
 15867  0D32  0849               	movf	(_ser_tmp)^080h,w
 15868  0D33  0679               	xorwf	(_rxoptr),w	;volatile
 15869  0D34  1903               	skipnz
 15870  0D35  2D37               	goto	u376_21
 15871  0D36  2D38               	goto	u376_20
 15872  0D37                     u376_21:
 15873  0D37  2D40               	goto	i1l9853
 15874  0D38                     u376_20:
 15875                           	
 15876  0D38                     i1l9851:	
 15877  0D38  0849               	movf	(_ser_tmp)^080h,w
 15878  0D39  1283               	bcf	status, 5	;RP0=0, select bank0
 15879  0D3A  1303               	bcf	status, 6	;RP1=0, select bank0
 15880  0D3B  00A0               	movwf	(??_isr1+0)+0
 15881  0D3C  0820               	movf	(??_isr1+0)+0,w
 15882  0D3D  00F8               	movwf	(_rxiptr)	;volatile
 15883  0D3E  2D40               	goto	i1l9853
 15884                           	
 15885  0D3F                     i1l6714:	
 15886  0D3F  2D40               	goto	i1l9853
 15887                           	
 15888  0D40                     i1l6713:	
 15889                           	
 15890  0D40                     i1l9853:	
 15891  0D40  1283               	bcf	status, 5	;RP0=0, select bank0
 15892  0D41  1E0C               	btfss	(100/8),(100)&7
 15893  0D42  2D44               	goto	u377_21
 15894  0D43  2D45               	goto	u377_20
 15895  0D44                     u377_21:
 15896  0D44  2D67               	goto	i1l6717
 15897  0D45                     u377_20:
 15898                           	
 15899  0D45                     i1l9855:	
 15900  0D45  1683               	bsf	status, 5	;RP0=1, select bank1
 15901  0D46  1303               	bcf	status, 6	;RP1=0, select bank1
 15902  0D47  1E0C               	btfss	(1124/8)^080h,(1124)&7
 15903  0D48  2D4A               	goto	u378_21
 15904  0D49  2D4B               	goto	u378_20
 15905  0D4A                     u378_21:
 15906  0D4A  2D67               	goto	i1l6717
 15907  0D4B                     u378_20:
 15908                           	
 15909  0D4B                     i1l9857:	
 15910  0D4B  087B               	movf	(_txoptr),w
 15911  0D4C  3EB0               	addlw	_txfifo&0ffh
 15912  0D4D  0084               	movwf	fsr0
 15913  0D4E  1383               	bcf	status, 7	;select IRP bank1
 15914  0D4F  0800               	movf	indf,w
 15915  0D50  1283               	bcf	status, 5	;RP0=0, select bank0
 15916  0D51  1303               	bcf	status, 6	;RP1=0, select bank0
 15917  0D52  0099               	movwf	(25)	;volatile
 15918                           	
 15919  0D53                     i1l9859:	
 15920  0D53  3001               	movlw	(01h)
 15921  0D54  00A0               	movwf	(??_isr1+0)+0
 15922  0D55  0820               	movf	(??_isr1+0)+0,w
 15923  0D56  07FB               	addwf	(_txoptr),f	;volatile
 15924                           	
 15925  0D57                     i1l9861:	
 15926  0D57  300F               	movlw	(0Fh)
 15927  0D58  00A0               	movwf	(??_isr1+0)+0
 15928  0D59  0820               	movf	(??_isr1+0)+0,w
 15929  0D5A  05FB               	andwf	(_txoptr),f	;volatile
 15930                           	
 15931  0D5B                     i1l9863:	
 15932  0D5B  087B               	movf	(_txoptr),w	;volatile
 15933  0D5C  067A               	xorwf	(_txiptr),w	;volatile
 15934  0D5D  1D03               	skipz
 15935  0D5E  2D60               	goto	u379_21
 15936  0D5F  2D61               	goto	u379_20
 15937  0D60                     u379_21:
 15938  0D60  2D67               	goto	i1l6717
 15939  0D61                     u379_20:
 15940                           	
 15941  0D61                     i1l9865:	
 15942  0D61  1683               	bsf	status, 5	;RP0=1, select bank1
 15943  0D62  1303               	bcf	status, 6	;RP1=0, select bank1
 15944  0D63  120C               	bcf	(1124/8)^080h,(1124)&7
 15945  0D64  2D67               	goto	i1l6717
 15946                           	
 15947  0D65                     i1l6716:	
 15948  0D65  2D67               	goto	i1l6717
 15949                           	
 15950  0D66                     i1l6715:	
 15951  0D66  2D67               	goto	i1l6717
 15952                           	line	111
 15953                           	
 15954  0D67                     i1l6703:	
 15955                           	line	112
 15956                           	
 15957  0D67                     i1l6717:	
 15958  0D67  1283               	bcf	status, 5	;RP0=0, select bank0
 15959  0D68  0829               	movf	(??_isr1+9),w
 15960  0D69  00FF               	movwf	btemp+1
 15961  0D6A  0828               	movf	(??_isr1+8),w
 15962  0D6B  008A               	movwf	pclath
 15963  0D6C  0827               	movf	(??_isr1+7),w
 15964  0D6D  0084               	movwf	fsr0
 15965  0D6E  0E26               	swapf	(??_isr1+6)^00h,w
 15966  0D6F  0083               	movwf	status
 15967  0D70  0EFE               	swapf	saved_w,f
 15968  0D71  0E7E               	swapf	saved_w,w
 15969  0D72  0009               	retfie
 15970                           	opt stack 0
 15971                           GLOBAL	__end_of_isr1
 15972  0D73                     	__end_of_isr1:
 15973 ;; =============== function _isr1 ends ============
 15974                           
 15975                           	signat	_isr1,88
 15976                           	global	___lwmod
 15977                           psect	text2264,local,class=CODE,delta=2
 15978                           global __ptext2264
 15979  147F                     __ptext2264:
 15980                           
 15981 ;; *************** function ___lwmod *****************
 15982 ;; Defined at:
 15983 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwmod.c"
 15984 ;; Parameters:    Size  Location     Type
 15985 ;;  divisor         2    0[COMMON] unsigned int 
 15986 ;;  dividend        2    2[COMMON] unsigned int 
 15987 ;; Auto vars:     Size  Location     Type
 15988 ;;  counter         1    5[COMMON] unsigned char 
 15989 ;; Return value:  Size  Location     Type
 15990 ;;                  2    0[COMMON] unsigned int 
 15991 ;; Registers used:
 15992 ;;		wreg, status,2, status,0
 15993 ;; Tracked objects:
 15994 ;;		On entry : 0/0
 15995 ;;		On exit  : 0/0
 15996 ;;		Unchanged: 0/0
 15997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15998 ;;      Params:         4       0       0       0       0
 15999 ;;      Locals:         1       0       0       0       0
 16000 ;;      Temps:          1       0       0       0       0
 16001 ;;      Totals:         6       0       0       0       0
 16002 ;;Total ram usage:        6 bytes
 16003 ;; Hardware stack levels used:    1
 16004 ;; This function calls:
 16005 ;;		Nothing
 16006 ;; This function is called by:
 16007 ;;		_isr1
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           psect	text2264
 16011                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwmod.c"
 16012                           	line	5
 16013                           	global	__size_of___lwmod
 16014  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 16015                           	
 16016  147F                     ___lwmod:	
 16017                           	opt	stack 0
 16018                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16019                           	line	8
 16020                           	
 16021  147F                     i1l9897:	
 16022  147F  0873               	movf	(___lwmod@divisor+1),w
 16023  1480  0472               	iorwf	(___lwmod@divisor),w
 16024  1481  1903               	skipnz
 16025  1482  2C84               	goto	u390_21
 16026  1483  2C85               	goto	u390_20
 16027  1484                     u390_21:
 16028  1484  2CBB               	goto	i1l9915
 16029  1485                     u390_20:
 16030                           	line	9
 16031                           	
 16032  1485                     i1l9899:	
 16033  1485  01F7               	clrf	(___lwmod@counter)
 16034  1486  1403               	bsf	status,0
 16035  1487  0DF7               	rlf	(___lwmod@counter),f
 16036                           	line	10
 16037  1488  2C95               	goto	i1l9905
 16038                           	
 16039  1489                     i1l6869:	
 16040                           	line	11
 16041                           	
 16042  1489                     i1l9901:	
 16043  1489  3001               	movlw	01h
 16044                           	
 16045  148A                     u391_25:
 16046  148A  1003               	clrc
 16047  148B  0DF2               	rlf	(___lwmod@divisor),f
 16048  148C  0DF3               	rlf	(___lwmod@divisor+1),f
 16049  148D  3EFF               	addlw	-1
 16050  148E  1D03               	skipz
 16051  148F  2C8A               	goto	u391_25
 16052                           	line	12
 16053                           	
 16054  1490                     i1l9903:	
 16055  1490  3001               	movlw	(01h)
 16056  1491  00F6               	movwf	(??___lwmod+0)+0
 16057  1492  0876               	movf	(??___lwmod+0)+0,w
 16058  1493  07F7               	addwf	(___lwmod@counter),f
 16059  1494  2C95               	goto	i1l9905
 16060                           	line	13
 16061                           	
 16062  1495                     i1l6868:	
 16063                           	line	10
 16064                           	
 16065  1495                     i1l9905:	
 16066  1495  1FF3               	btfss	(___lwmod@divisor+1),(15)&7
 16067  1496  2C98               	goto	u392_21
 16068  1497  2C99               	goto	u392_20
 16069  1498                     u392_21:
 16070  1498  2C89               	goto	i1l9901
 16071  1499                     u392_20:
 16072  1499  2C9B               	goto	i1l9907
 16073                           	
 16074  149A                     i1l6870:	
 16075  149A  2C9B               	goto	i1l9907
 16076                           	line	14
 16077                           	
 16078  149B                     i1l6871:	
 16079                           	line	15
 16080                           	
 16081  149B                     i1l9907:	
 16082  149B  0873               	movf	(___lwmod@divisor+1),w
 16083  149C  0275               	subwf	(___lwmod@dividend+1),w
 16084  149D  1D03               	skipz
 16085  149E  2CA1               	goto	u393_25
 16086  149F  0872               	movf	(___lwmod@divisor),w
 16087  14A0  0274               	subwf	(___lwmod@dividend),w
 16088  14A1                     u393_25:
 16089  14A1  1C03               	skipc
 16090  14A2  2CA4               	goto	u393_21
 16091  14A3  2CA5               	goto	u393_20
 16092  14A4                     u393_21:
 16093  14A4  2CAC               	goto	i1l9911
 16094  14A5                     u393_20:
 16095                           	line	16
 16096                           	
 16097  14A5                     i1l9909:	
 16098  14A5  0872               	movf	(___lwmod@divisor),w
 16099  14A6  02F4               	subwf	(___lwmod@dividend),f
 16100  14A7  0873               	movf	(___lwmod@divisor+1),w
 16101  14A8  1C03               	skipc
 16102  14A9  03F5               	decf	(___lwmod@dividend+1),f
 16103  14AA  02F5               	subwf	(___lwmod@dividend+1),f
 16104  14AB  2CAC               	goto	i1l9911
 16105                           	
 16106  14AC                     i1l6872:	
 16107                           	line	17
 16108                           	
 16109  14AC                     i1l9911:	
 16110  14AC  3001               	movlw	01h
 16111                           	
 16112  14AD                     u394_25:
 16113  14AD  1003               	clrc
 16114  14AE  0CF3               	rrf	(___lwmod@divisor+1),f
 16115  14AF  0CF2               	rrf	(___lwmod@divisor),f
 16116  14B0  3EFF               	addlw	-1
 16117  14B1  1D03               	skipz
 16118  14B2  2CAD               	goto	u394_25
 16119                           	line	18
 16120                           	
 16121  14B3                     i1l9913:	
 16122  14B3  3001               	movlw	low(01h)
 16123  14B4  02F7               	subwf	(___lwmod@counter),f
 16124  14B5  1D03               	btfss	status,2
 16125  14B6  2CB8               	goto	u395_21
 16126  14B7  2CB9               	goto	u395_20
 16127  14B8                     u395_21:
 16128  14B8  2C9B               	goto	i1l9907
 16129  14B9                     u395_20:
 16130  14B9  2CBB               	goto	i1l9915
 16131                           	
 16132  14BA                     i1l6873:	
 16133  14BA  2CBB               	goto	i1l9915
 16134                           	line	19
 16135                           	
 16136  14BB                     i1l6867:	
 16137                           	line	20
 16138                           	
 16139  14BB                     i1l9915:	
 16140  14BB  0875               	movf	(___lwmod@dividend+1),w
 16141  14BC  01F3               	clrf	(?___lwmod+1)
 16142  14BD  07F3               	addwf	(?___lwmod+1)
 16143  14BE  0874               	movf	(___lwmod@dividend),w
 16144  14BF  01F2               	clrf	(?___lwmod)
 16145  14C0  07F2               	addwf	(?___lwmod)
 16146                           
 16147  14C1  2CC2               	goto	i1l6874
 16148                           	
 16149  14C2                     i1l9917:	
 16150                           	line	21
 16151                           	
 16152  14C2                     i1l6874:	
 16153  14C2  0008               	return
 16154                           	opt stack 0
 16155                           GLOBAL	__end_of___lwmod
 16156  14C3                     	__end_of___lwmod:
 16157 ;; =============== function ___lwmod ends ============
 16158                           
 16159                           	signat	___lwmod,8314
 16160                           psect	text2265,local,class=CODE,delta=2
 16161                           global __ptext2265
 16162  0000                     __ptext2265:
 16163                           	global	btemp
 16164  007E                     	btemp set 07Eh
 16165                           
 16166                           	DABS	1,126,2	;btemp
 16167                           	global	wtemp0
 16168  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Wed May 29 18:34:28 2013

               __end_of_lookForVictim 0867             __end_of_lcd_write_control 1F20  
           __end_of_updateOrientation 1ED6                                     pc 0002  
                                  _GO 00FA                          ___awdiv@sign 0036  
                                  fsr 0004                   ___wmul@multiplicand 002C  
                    ??_getOrientation 002A                    readEEPROM@addressH 002F  
                  readEEPROM@addressL 002B                          ___ftadd@exp1 00D6  
                        ___ftadd@exp2 00D5                          ___ftadd@sign 00D4  
                                 l700 1F35                                   l703 1306  
                                 l704 1306                                   l705 130B  
                                 l706 133A                                   l690 13BD  
                                 l691 13E7                                   l692 13C1  
                                 l693 13C5                                   l694 13C9  
                                 l695 13CD                                   l696 13D1  
                                 l689 13D6                                   l697 13F9  
                                 _GIE 005F                                   _RB0 0030  
                                 _RB1 0031                                   _RE0 0048  
                                 _RE1 0049                                   _RE2 004A  
                        _stepPosition 00CA                                   _RX9 00C6  
                                 _TX9 04C6                       ??_getVictimZone 002B  
                                 fsr0 0004                                   indf 0000  
                  drive@highByteSpeed 0032               __size_of_EEPROMToSerial 007C  
           lcd_write_1_digit_bcd@data 002D                       ?_lcd_set_cursor 0072  
              __end_of_updateLocation 178A                                  l1401 1009  
                                l1402 1009                                  l1410 147E  
                                l1403 100E                                  l1404 100E  
                                l2132 1EB9                                  l1413 136E  
                                l2141 1EC4                                  l1414 136E  
                                l2126 1F1F                                  l1430 1677  
                                l1407 1EA4                                  l1415 1373  
                                l2135 108C                                  l1416 1379  
                                l2136 1079                                  l1424 1FBE  
                                l2129 1F0B                                  l2137 1099  
                                l1433 08BA                                  l2153 118A  
                                l2138 1099                                  l1434 088A  
                                l1435 08BA                                  l1437 08C7  
                                l1438 08C8                                  l1439 08E2  
                                l2900 097B                                  l2901 098D  
                                l2910 09B2                                  l2902 097C  
                                l5070 0433                                  l2911 099F  
                                l2903 0996                                  l5071 0354  
                                l2920 09DF                                  l2912 09A7  
                                l2904 0983                                  l3632 1F41  
                                l7000 17F8                                  l5072 0432  
                                l5064 027F                                  l2921 09CE  
                                l2913 09B3                                  l2905 098B  
                                l3633 1F4C                                  l7001 17FF  
                                l5073 039B                                  l5065 0435  
                                l5081 1074                                  l3650 1FEC  
                                l2906 0A0D                                  l2930 09FA  
                                l2922 09E8                                  l2914 09C3  
                                l3642 1276                                  l5066 0435  
                                l5074 0431                                  l2850 0D91  
                                l3651 1FFF                                  l2931 0A11  
                                l2923 09D5                                  l2915 09B4  
                                l2907 0997                                  l3643 1252  
                                l5075 03E2                                  l5067 02C6  
                                l2851 0D78                                  l2924 09DD  
                                l2916 09CC                                  l2908 09A9  
                                l3636 1032                                  l3644 1285  
                                l4372 1EF8                                  l5068 0434  
                                l5076 0430                                  l5084 1205  
                                l2860 0DD7                                  l2852 0D9D  
                                l2925 09E9                                  l2917 09BB  
                                l2909 0998                                  l3637 1031  
                                l3645 1285                                  l5077 0429  
                                l5069 030D                                  l5085 11F1  
                                l2861 0DA6                                  l2853 0D7F  
                                l2926 09F3                                  l2918 09C1  
                                l3638 103B                                  l5078 042F  
                                l5086 120C                                  l2870 0DE9  
                                l2862 0DB0                                  l2854 0D87  
                                l2927 09EA                                  l2919 09CD  
                                l3639 1051                                  l5087 1216  
                                l4375 162A                                  l2871 0DF4  
                                l2863 0DBB                                  l2855 0D8F  
                                l3648 1FE4                                  l2928 09F9  
                                l2856 0E88                                  l2848 0E77  
                                l2880 0E37                                  l2872 0E06  
                                l2864 0DC6                                  l3649 1FE3  
                                l2929 09F1                                  l3673 110E  
                                l2881 0E65                                  l2873 0E07  
                                l2865 0DD8                                  l2857 0D9E  
                                l2849 0D77                                  l2890 0EA4  
                                l2882 0E38                                  l2874 0E16  
                                l2866 0E09                                  l2858 0DC8  
                                l2883 0E74                                  l2875 0E2D  
                                l2867 0DD9                                  l2859 0D9F  
                                l2884 0E40                                  l2876 0E17  
                                l2868 0DE8                                  l2893 1E83  
                                l2885 0E4B                                  l2877 0E36  
                                l2869 0E15                                  l2886 0E5D  
                                l2878 0E1F                                  l2887 0E5E  
                                l2879 0E2B                                  l2896 1E88  
                                l2888 0E63                                  l2889 0E75  
                                l2899 09FC                                  l5820 044E  
                                l5821 0515                                  l7190 07BE  
                                l5830 0590                                  l5822 04C7  
                                l7191 07A8                                  l7183 0792  
                                l5831 0570                                  l5823 04C6  
                                l5840 1E97                                  l7192 07C5  
                                l5816 124C                                  l6720 12BF  
                                l5832 058E                                  l5824 04C5  
                                l6800 020C                                  l7193 07D1  
                                l7185 078A                                  l5833 058A  
                                l5825 0514                                  l6801 0150  
                                l7194 07C6                                  l7186 07F8  
                                l6730 0866                                  l5834 058E  
                                l5826 04F4                                  l6802 021C  
                                l6810 0191                                  l5843 1E9C  
                                l7195 07D5                                  l7187 07A0  
                                l6723 1F67                                  l6731 0845  
                                l5819 05E9                                  l5835 05E8  
                                l5827 0512                                  l6811 0192  
                                l6803 0156                                  l7196 07DF  
                                l7188 0793                                  l6732 0865  
                                l5836 05EE                                  l5828 050E  
                                l5852 115F                                  l5860 10BF  
                                l6740 093C                                  l6820 0203  
                                l6812 01C7                                  l6804 018B  
                                l7197 07F8                                  l7189 07A7  
                                l6901 065A                                  l6733 0866  
                                l5837 05EE                                  l5829 0512  
                                l6741 0964                                  l6821 01E0  
                                l6813 01A4                                  l6805 0168  
                                l5846 1EAE                                  l6910 069C  
                                l6902 0667                                  l6726 11E3  
                                l6750 0FAD                                  l6742 096A  
                                l6830 0264                                  l6822 0202  
                                l6814 01C6                                  l6806 018A  
                                l6911 06B4                                  l6903 066C  
                                l5863 1595                                  l6727 11E3  
                                l6751 0FFF                                  l5855 12EF  
                                l6743 0976                                  l6831 0264  
                                l6823 01F0                                  l6815 01B4  
                                l6807 0178                                  l5880 1ED5  
                                l6920 06EF                                  l6904 06B5  
                                l6912 06F0                                  l5872 16FA  
                                l6752 0FFF                                  l5856 12FB  
                                l6736 08FF                                  l6760 1505  
                                l6824 0201                                  l6816 01C5  
                                l6808 0189                                  l5881 1ED5  
                                l6921 0705                                  l6913 06F0  
                                l6905 0681                                  l5873 1707  
                                l5857 12FB                                  l6737 0905  
                                l6761 1507                                  l6825 0200  
                                l6817 01C4                                  l6809 0188  
                                l6842 1E92                                  l6922 071A  
                                l6914 06BC                                  l5874 1721  
                                l6770 1759                                  l5890 0B0E  
                                l6834 1F80                                  l6746 0EC6  
                                l5866 10E6                                  l6738 092B  
                                l6826 0209                                  l6818 01CD  
                                l6851 1190                                  l6923 0743  
                                l6907 069A                                  l6771 1789  
                                l5891 0B66                                  l6835 1F83  
                                l6747 0F18                                  l6739 0936  
                                l6755 14D7                                  l6827 020A  
                                l6819 01CE                                  l6780 143B  
                                l6852 119A                                  l5884 1136  
                                l6916 06D5                                  l6908 069B  
                                l6764 175B                                  l5892 0B65  
                                l6836 1F83                                  l6748 0EF4  
                                l6756 1507                                  l6828 025D  
                                l6853 11AF                                  l6917 06D6  
                                l6909 06AD                                  l5877 13B8  
                                l5869 154E                                  l6765 1729  
                                l5893 0B49                                  l6749 0F95  
                                l6757 14EB                                  l6829 0256  
                                l6774 140E                                  l6854 11B6  
                                l6918 06E8                                  l6950 0C60  
                                l6766 176D                                  l5894 0B3B  
                                l6758 1506                                  l6790 00F5  
                                l6839 1E8D                                  l6775 143B  
                                l6919 06D7                                  l6951 0BA7  
                                l6783 1FDE                                  l6767 1736  
                                l5895 0B59                                  l5887 0B1A  
                                l6759 14FF                                  l6791 00B5  
                                l6776 1422                                  l6960 0A2F  
                                l6952 0BE7                                  l6784 1FDE  
                                l6768 1741                                  l5896 0B72  
                                l5888 0AFE                                  l6792 00D3  
                                l6777 143A                                  l6961 0AB7  
                                l6953 0BFC                                  l6769 174E  
                                l5889 0AF0                                  l6793 00C3  
                                l6778 1435                                  l6970 0A9D  
                                l6962 0A7A                                  l6954 0C13  
                                l6794 00D2                                  l6779 1439  
                                l6971 0AAE                                  l6963 0A66  
                                l6955 0C18                                  l6787 025F  
                                l6795 00D1                                  l6964 0A67  
                                l6956 0C2D                                  l6796 025E  
                                l6788 0083                                  l6965 0A79  
                                l6957 0C44                                  l6949 0B8E  
                                l6797 012A                                  l6789 0096  
                                l6966 0A9E                                  l6798 0139  
                                l6967 0A8A                                  l6991 179A  
                                l6895 0642                                  l6799 0149  
                                l6968 0A97                                  l6992 17A8  
                                l6976 102F                                  l6969 0A8B  
                                l6993 17EE                                  l6897 0638  
                                l6994 17C0                                  l6898 077B  
                                l6995 17B4                                  l6899 065B  
                                l6996 17C5                                  l6997 17C6  
                                l6998 17DF                                  _CHS0 00FB  
                                l6999 17ED                                  _CHS1 00FC  
                                _CHS2 00FD                                  STR_1 003D  
                                STR_2 004C                                  STR_3 001B  
                                STR_4 002C                                  l9993 0A12  
                                l9995 0A25                                  l9997 0A2E  
                                l9999 0A2F                                  _BRGH 04C2  
                                _CREN 00C4                        ?_updateMapData 0033  
                                u4200 0A78                                  u4201 0A77  
                                u4210 0A80                                  u4211 0A7F  
                                u4230 0A9C                                  u4150 0A25  
                                u4310 17C4                                  u4231 0A9B  
                                u4151 0A24                                  u4311 17C3  
           updateMapData@completeData 003B                                  u4240 0AA2  
                                u4160 0A3A                                  u4225 0A8D  
                                u4305 17B5                                  u6010 1ED2  
                                u4170 0A55                                  u4330 17D7  
                                u6011 1ED1                                  u4171 0A54  
                                u4331 17D6                                  u6020 1EA9  
                                u4180 0A5C                                  u6021 1EA8  
                                u4181 0A5B                                  u4165 0A36  
                                u4325 17C7                                  u6030 1402  
                                u4350 17EC                                  u4270 1791  
                                u4430 130A                                  u6031 1401  
                                u4351 17EB                                  u4335 17D3  
                                u4271 1790                                  u4431 1309  
                                u6040 1408                                  u6120 11AE  
                                u6200 07D5                                  u4360 17F2  
                                u4280 179E                                  u6041 1407  
                                u6121 11AD                                  u6105 119B  
                                u6201 07D4                                  u4345 17E0  
                                u4281 179D                                  u6050 1415  
                                u6210 07D9                                  u6130 0782  
                                u4290 17B0                                  u6051 1414  
                                u6115 11A2                                  u6211 07D8  
                                u4195 0A68                                  u4291 17AF  
                                _PEIE 005E                                  u6060 141B  
                                u6220 07EA                                  u6140 0789  
                                u7020 0DDE                                  u7100 045D  
                                u6061 141A                                  u6141 0788  
                                u4445 1326                                  u7005 1656  
                                u7021 0DDD                                  u7101 045C  
                                u6070 1429                                  u6230 07F7  
                                u7030 0DFB                                  u7110 0478  
                                u6071 1428                                  u7015 1663  
                                u7031 0DFA                                  u7111 0477  
                                u6080 142E                                  u6160 07A6  
                                u6400 1372                                  u7040 0E52  
                                u7200 05D2                                  u7120 0493  
                                u6081 142D                                  u6225 07E6  
                                u6161 07A5                                  u6401 1371  
                                u7041 0E51                                  u7201 05D1  
                                u7121 0492                                  u7105 0459  
                                u6090 1194                                  u6410 103B  
                                u7050 11C3                                  u7210 05ED  
                                u7130 04AE                                  u6091 1193  
                                u6155 0798                                  u6411 103A  
                                u7051 11C2                                  u7211 05EC  
                                u7131 04AD                                  _RCIE 0465  
                                u6180 07C4                                  u6420 125E  
                                u6500 03F1                                  u7060 11CF  
                                u7140 04CD                                  u7220 0ADE  
                                u7300 0F8C                                  _RCIF 0065  
                                u6181 07C3                                  u6501 03F0  
                                u7061 11CE                                  u7205 05CE  
                                u7141 04CC                                  u7221 0ADD  
                                u7301 0F8B                                  u6430 1284  
                                u6510 120B                                  u7070 0825  
                                u7150 04E3                                  u7230 0B0D  
                                u7310 0FA2                                  u6175 07B7  
                                u8007 1445                                  u6431 1283  
                                u6511 120A                                  u7071 0824  
                                u7151 04E2                                  u7231 0B0C  
                                u7311 0FA1                                  u6440 0276  
                                u6600 0680                                  u6520 0625  
                                u7080 082B                                  u7160 04FC  
                                u7240 0B29                                  u7320 0FBC  
                                u8017 1F33                                  u6505 03ED  
                                u6441 0275                                  u6601 067F  
                                u7081 082A                                  u7161 04FB  
                                u7241 0B28                                  u7225 0ADA  
                                u7321 0FBB                                  u6450 028E  
                                u6530 062B                                  u7090 082F  
                                u7170 0531                                  u7250 0B58  
                                u7330 0FCB                                  u7410 0924  
                                u6195 07C9                                  u6435 1280  
                                u6451 028D                                  u6531 062A  
                                u7091 082E                                  u7171 0530  
                                u7251 0B57                                  u7235 0B09  
                                u7331 0FCA                                  u7315 0F9E  
                                u7411 0923                                  u6460 02D5  
                                u6620 0691                                  u6540 0637  
                                u7180 055F                                  u7260 1F7C  
                                u7340 12D9                                  u7420 092A  
                                u7404 091C                                  u7500 14E5  
                                u6461 02D4                                  u6445 0272  
                                u6621 0690                                  u6541 0636  
                                u7181 055E                                  u7245 0B25  
                                u7261 1F7B                                  u7325 0FB8  
                                u7341 12D8                                  u7421 0929  
                                u7501 14E4                                  u5910 1FEC  
                                u6470 031C                                  u6710 06EE  
                                u6630 0699                                  u6550 0648  
                                u7190 0578                                  u7270 0EC4  
                                u7350 12E3                                  u7430 092F  
                                u7510 14EF                                  u5911 1FEB  
                                u6471 031B                                  u6455 028A  
                                u6711 06ED                                  u6631 0698  
                                u6615 0682                                  u7191 0577  
                                u7255 0B54                                  u7335 0FC7  
                                u7271 0EC3                                  u7351 12E2  
                                u7431 092E                                  u7511 14EE  
                                u6480 0363                                  u6720 06F4  
                                u6560 064E                                  u6800 0BEB  
                                u7280 0EE7                                  u7440 0952  
                                u7360 08F3                                  u7520 14F9  
                                u7600 00B9                                  u6481 0362  
                                u6465 02D1                                  u6721 06F3  
                                u6705 06D8                                  u6561 064D  
                                u6801 0BEA                                  u7265 1F78  
                                u7281 0EE6                                  u7441 0950  
                                u7361 08F1                                  u7521 14F8  
                                u7601 00B8                                  u6490 03AA  
                                u6730 0709                                  u6650 06B3  
                                u6570 065A                                  u7290 0F17  
                                u7610 00BD                                  u7530 0089  
                                _OERR 00C1                                  u6491 03A9  
                                u6475 0318                                  u6731 0708  
                                u6651 06B2                                  u6571 0659  
                                u6811 0BF4                                  u7291 0F16  
                                u7275 0EC0                                  u7611 00BC  
                                u5940 1F3C                                  u6660 06BB  
                                u6580 0666                                  u6812 0BFB  
                                u6900 1098                                  u7460 0957  
                                u7380 08F8                                  u7700 0172  
                                u7620 00C7                                  u7540 008D  
                                u5941 1F3B                                  u6485 035F  
                                u6741 0724                                  u6661 06BA  
                                u6645 069D                                  u6581 0665  
                                u6901 1097                                  u7285 0EE3  
                                u7461 0956                                  u7381 08F7  
                                u7701 0171                                  u7621 00C6  
                                u7541 008C                                  u5950 1F47  
                                u6750 072F                                  u6742 072B  
                                u6590 066B                                  u6910 08B6  
                                u7454 0953                                  u7390 091B  
                                u7374 08F4                                  u7470 14C7  
                                u7710 0182                                  u7630 00CB  
                                u7550 009A                                  u5951 1F46  
                                u6495 03A6                                  u6751 072E  
                                u6591 066A                                  u6911 08B5  
                                u7295 0F13                                  u7391 0919  
                                u7471 14C6                                  u7711 0181  
                                u7631 00CA                                  u5880 100D  
                                u6680 06CC                                  u6840 0C12  
                                u6760 0B86                                  u6920 08C1  
                                u7480 14D1                                  u7800 022B  
                                u7720 0196                                  u7640 00FB  
                                u7560 009E                                  u5881 100C  
                                u6681 06CB                                  u6841 0C11  
                                u6825 0BFD                                  u6761 0B85  
                                u6921 08C0                                  u7481 14D0  
                                u7801 022A                                  u7721 0195  
                                u7561 009D                                  u6690 06D4  
                                u6850 0C1C                                  u6770 0B9F  
                                u6930 08C6                                  u7490 14DB  
                                u7810 0251                                  u7730 019E  
                                u7650 00FF                                  u7570 00A7  
                                u6691 06D3                                  u6675 06BD  
                                u6851 0C1B                                  u6835 0C05  
                                u6771 0B9E                                  u6931 08C5  
                                u7491 14DA                                  u7811 0250  
                                u7731 019D                                  u7651 00FE  
                                u7571 00A6                                  u6780 0BB7  
                                u6940 16E2                                  u7820 0263  
                                u7740 01AE                                  u7660 0124  
                                u7580 00AB                                  u6861 0C25  
                                u6941 16E1                                  u7821 0262  
                                u7741 01AD                                  u7661 0123  
                                u7581 00AA                                  u6862 0C2C  
                                u6790 0BC9                                  u6950 16EC  
                                u7750 01BE                                  u7670 0143  
                                u7590 00AF                                  u6951 16EB  
                                u7751 01BD                                  u7671 0142  
                                u7591 00AE                                  u6960 1FC7  
                                u7760 01D2                                  u7680 015A  
                                u6785 0BB3                                  u6961 1FC6  
                                u7761 01D1                                  u7681 0159  
                                u6890 0C43                                  u6970 1FCD  
                                u7770 01DA                                  u7690 0162  
                                u6891 0C42                                  u6875 0C2E  
                                u6795 0BC5                                  u7907 08D6  
                                u6971 1FCC                                  u7771 01D9  
                                u7691 0161                                  u7780 01EA  
                                u6885 0C36                                  u7917 13E9  
                                u7837 158F                                  u7781 01E9  
                                u7790 01FA                                  u7927 1F55  
                                u7847 1538                                  u7791 01F9  
                                u7937 1118                                  u7857 1547  
                                u6985 163C                                  u7947 1220  
                                u7867 171A                                  u6995 1649  
                                u7957 11FA                                  u7877 13B1  
                                u7967 1211                                  u7887 087D  
                                u7977 1F07                                  u7897 08A4  
                                u7987 1F1A                                  u7997 1344  
                                _TMR0 0001                                  _SPEN 00C7  
                                _TXIE 0464                                  _TXEN 04C5  
                                _TXIF 0064                                  _SYNC 04C4  
              __end_of_lcd_write_data 1F0C                                  _beep 00E7  
                                _isr1 0C61                                  _main 005A  
                                _home 0386                          ___ftpack@arg 002A  
                                _init 1286                                  _node 00C8  
                        ___ftpack@exp 002D                   drive@highByteRadius 002D  
                                btemp 007E                                  start 0012  
              ??_findFinalDestination 0030                       rotateIR@stepNum 002E  
                        ___ftmul@cntr 0056                           _writeEEPROM 143C  
                        ___ftmul@sign 0057                 _lcd_write_1_digit_bcd 1EBA  
                        ___fttol@exp1 003F                     ?_driveForDistance 0036  
                        ___fttol@lval 003B                           _turnRight90 137A  
                               l10001 0A41                                 l10011 0A55  
                               l10003 0A42                                 l10021 0A80  
                               l10013 0A5C                                 l10005 0A48  
                               l10031 0AA2                                 l10023 0A89  
                               l10015 0A65                                 l10007 0A4F  
                               l10033 0AAE                                 l10025 0A8B  
                               l10017 0A67                                 l10009 0A51  
                               l10035 0AB7                                 l10027 0A97  
                               l10019 0A7A                                 l10029 0A9E  
                               l10061 17A3                                 l10053 178A  
                               l10141 1302                                 l10071 17BB  
                               l10063 17A8                                 l10055 1791  
                               l10143 130B                                 l11201 1005  
                               l10081 17DF                                 l10073 17C0  
                               l10065 17AA                                 l10057 179A  
                               l10145 1333                                 l12001 0D79  
                               l11203 1006                                 l10091 17FF  
                               l10083 17E6                                 l10075 17C6  
                               l10067 17B0                                 l10059 179E  
                               l10147 133A                                 l10139 12FC  
                               l12011 0D9F                                 l12003 0D80  
                               l11205 1E9D                                 l11301 09F2  
                               l10077 17D7                                 l10069 17B4  
                               l10085 17EE                                 l12021 0DBB  
                               l12013 0DA2                                 l12005 0D88  
                               l12101 1290                                 l11207 1EA3  
                               l11231 1FE4                                 l11311 0A11  
                               l11303 09F3                                 l10087 17F2  
                               l10079 17DD                                 l12031 0DDE  
                               l12023 0DBF                                 l12015 0DA6  
                               l12007 0D90                                 l12111 12A1  
                               l12103 1295                                 l11233 1FED  
                               l11305 09FB                                 l11321 1F41  
                               l11313 1F36                                 l11401 1E93  
                               l10089 17F8                                 l12041 0DFB  
                               l12033 0DE2                                 l12025 0DC7  
                               l12017 0DB0                                 l12009 0D91  
                               l12121 12AF                                 l12113 12A3  
                               l12105 129A                                 l12201 0478  
                               l11235 1FF5                                 l11307 09FC  
                               l11171 1F4B                                 l11323 1F47  
                               l11315 1F3C                                 l11403 1E97  
                               l11411 1EA9                                 l12051 0E1F  
                               l12043 0E08                                 l12035 0DE9  
                               l12019 0DB4                                 l12027 0DC8  
                               l12123 12B0                                 l12115 12A7  
                               l12107 129E                                 l12131 11C3  
                               l12203 048E                                 l12211 04C7  
                               l11237 1FFB                                 l11229 1FE2  
                               l11261 1E84                                 l11309 0A0D  
                               l11325 1F49                                 l11317 1F3E  
                               l11405 1E98                                 l11173 1EAB  
                               l11413 1EAB                                 l11421 1408  
                               l10461 13BC                                 l12061 0E40  
                               l12053 0E2C                                 l12037 0DEE  
                               l12029 0DD9                                 l12045 0E09  
                               l12125 12B5                                 l12117 12AB  
                               l12109 12A0                                 l12133 11CF  
                               l12141 0809                                 l12221 04ED  
                               l12213 04CD                                 l12205 0493  
                               l12301 1F7E                                 l11239 1FFE  
                               l11263 1E88                                 l11271 098C  
                               l11327 1F4C                                 l11319 1F40  
                               l11407 1E9C                                 l11415 1EAE  
                               l11175 1EAD                                 l11431 1429  
                               l11423 140E                                 l10463 13D1  
                               l10471 13E7                                 l12063 0E45  
                               l12071 0E65                                 l12047 0E17  
                               l12055 0E2D                                 l12039 0DF4  
                               l12127 12BA                                 l12119 12AE  
                               l12135 11D5                                 l12151 0835  
                               l12143 081F                                 l12223 04F4  
                               l12215 04DB                                 l12207 04A9  
                               l12231 0515                                 l12303 1F7F  
                               l12311 0EAD                                 l11257 1E7F  
                               l11281 09A9                                 l11273 098D  
                               l11265 097A                                 l11169 1F49  
                               l11361 10E7                                 l11409 1EA5  
                               l11433 142E                                 l11425 1415  
                               l11417 13FA                                 l11441 11A1  
                               l11601 145B                                 l10473 13EB  
                               l10465 13D4                                 l12073 0E76  
                               l12065 0E4B                                 l12057 0E38  
                               l12049 0E1B                                 l12081 106D  
                               l12137 11D6                                 l12129 11B7  
                               l12161 085C                                 l12153 0838  
                               l12145 0825                                 l12241 0564  
                               l12233 052B                                 l12225 04FC  
                               l12217 04E3                                 l12209 04AE  
                               l12305 1F80                                 l12321 0ED9  
                               l12313 0EB3                                 l12401 08F4  
                  ??_driveForDistance 0038                                 l11259 1E83  
                               l11291 09CE                                 l11283 09B4  
                               l11275 0998                                 l11267 097C  
                               l11371 10F6                                 l11363 10EA  
                               l11427 141B                                 l11419 1402  
                               l11443 11AF                                 l11435 118B  
                               l11451 078A                                 l11603 1461  
                               l11611 133E                                 l10475 13F9  
                               l10467 13D5                                 l12067 0E52  
                               l12059 0E3C                                 l12075 0E77  
                               l12083 1074                                 l12091 157C  
                               l12139 11DC                                 l12155 083E  
                               l12147 082B                                 l12171 173A  
                               l12163 1722                                 l12251 0583  
                               l12243 0569                                 l12235 0531  
                               l12227 0502                                 l12219 04E8  
                               l12307 1F82                                 l12331 0F0A  
                               l12323 0EE7                                 l12315 0EB7  
                               l12411 0924                                 l12403 08F8  
                               l11293 09D5                                 l11285 09BB  
                               l11277 099F                                 l11269 0983  
                               l11381 1103                                 l11373 10F9  
                               l11365 10F2                                 l11429 1422  
                               l11445 11B6                                 l11437 1190  
                               l11461 07AC                                 l11453 0791  
                               l11605 1469                                 l11621 1360  
                               l11613 134A                                 l11701 0353  
                               l10469 13D6                                 l12069 0E64  
                               l12077 0E88                                 l12093 1587  
                               l12085 154F                                 l12149 082F  
                               l12157 0845                                 l12181 175A  
                               l12173 1741                                 l12165 1729  
                               l12261 05D2                                 l12245 0570  
                               l12237 0557                                 l12253 0590  
                               l12229 0507                                 l12341 0F8C  
                               l12325 0EED                                 l12317 0EC5  
                               l12333 0F18                                 l12309 0EA5  
                               l12421 0953                                 l12413 092A  
                               l12405 08FF                                 l12501 0120  
                               l11295 09DE                                 l11287 09C2  
                               l11279 09A8                                 l11383 1104  
                               l11375 10FC                                 l11367 10F3  
                               l11391 1ED2                                 l11439 1194  
                               l11471 07E1                                 l11463 07B6  
                               l11455 0793                                 l11447 077C  
                               l11607 1471                                 l11623 1368  
                               l11615 134F                                 l11631 1F12  
                               l11711 039B                                 l11703 0354  
                               l12079 1052                                 l12087 155B  
                               l12095 1286                                 l12159 0856  
                               l12175 1747                                 l12167 172F  
                               l12183 175B                                 l12263 05DD  
                               l12255 05B0                                 l12247 0578  
                               l12239 055F                                 l12191 043D  
                               l12271 0AB8                                 l12351 0FBC  
                               l12343 0F95                                 l12335 0F83  
                               l12327 0EF4                                 l12319 0EC6  
                               l12423 0957                                 l12415 092F  
                               l12407 0911                                 l12431 14C7  
                               l12511 0143                                 l12503 0124  
                               l11297 09DF                                 l11289 09C3  
                               l11385 1105                                 l11377 10FF  
                               l11369 10F5                                 l11393 1E89  
                               l11473 07F3                                 l11465 07C6  
                               l11457 07A0                                 l11449 0782  
                               l11609 1479                                 l11625 1373  
                               l11617 1352                                 l11633 1F14  
                               l11641 1F01                                 l11721 03F1  
                               l11713 03AA                                 l11705 0363  
                               l11801 0681                                 l12089 156C  
                               l12097 1289                                 l12177 174E  
                               l12169 1736                                 l12185 176D  
                               l12265 05DE                                 l12257 05BE  
                               l12249 057E                                 l12193 044C  
                               l12281 0AFE                                 l12273 0AC4  
                               l12353 0FCB                                 l12345 0FA2  
                               l12337 0F84                                 l12329 0F02  
                               l12361 114E                                 l12425 095D  
                               l12417 0936                                 l12409 091C  
                               l12441 14F9                                 l12433 14D1  
                               l12521 0168                                 l12513 0149  
                               l12505 012A                                 l11299 09EA  
                               l11379 1100                                 l11387 1EC8  
                               l11395 1E8D                                 l11475 07F7  
                               l11467 07D1                                 l11459 07A8  
                               l11627 1379                                 l11619 1358  
                               l11635 1F15                                 l11643 1F02  
                               l11651 1046                                 l11723 0427  
                               l11715 03E0                                 l11707 0399  
                               l11731 11E7                                 l11803 068B  
                               l11811 06B5                                 l12099 128C  
                               l12179 1752                                 l12267 05DF  
                               l12259 05C4                                 l12195 044E  
                               l12187 0436                                 l12291 0B49  
                               l12283 0B0E                                 l12275 0AD1  
                               l12347 0FA7                                 l12339 0F88  
                               l12363 1159                                 l12355 1137  
                               l12371 12D9                                 l12427 0964  
                               l12419 0948                                 l12443 14FF  
                               l12435 14DB                                 l12531 0196  
                               l12523 0172                                 l12515 0150  
                               l12507 0139                                 l12451 007C  
                               l11389 1ECC                                 l11397 1E8E  
                               l11469 07D9                                 l11629 1F0F  
                               l11637 1EFC                                 l11653 104A  
                               l11645 1030                                 l11661 124D  
                               l11725 0428                                 l11717 03E1  
                               l11709 039A                                 l11741 120C  
                               l11733 11EB                                 l11821 06E8  
                               l11813 06BC                                 l11805 0691  
                               l11901 108C                                 l12197 045D  
                               l12269 05E9                                 l12189 043C  
                               l12293 0B59                                 l12277 0ADE  
                               l12285 0B1A                                 l12349 0FAD  
                               l12357 1143                                 l12373 12E3  
                               l12365 12C0                                 l12381 10AB  
                               l12437 14E5                                 l12429 14C3  
                               l12541 01BE                                 l12533 019E  
                               l12525 0178                                 l12517 015A  
                               l12509 013F                                 l12461 0096  
                               l12453 0083                                 l12445 005A  
                               l11399 1E92                                 l11591 1F2F  
                               l11583 1F20                                 l11639 1EFF  
                               l11655 104E                                 l11647 1032  
                               l11663 1252                                 l11727 0429  
                               l11719 03E2                                 l11671 0267  
                               l11743 120D                                 l11735 11F2  
                               l11751 1234                                 l11831 072B  
                               l11823 06F4                                 l11815 06C6  
                               l11807 069C                                 l11903 1FA4  
                               l11911 086B                                 l12199 0473  
                               l12287 0B29                                 l12295 0B66  
                               l12279 0AF0                                 l12359 1148  
                               l12375 12EF                                 l12367 12CC  
                               l12383 10B1                                 l12391 10D1  
                               l12439 14EF                                 l12551 01EA  
                               l12535 01A4                                 l12543 01C7  
                               l12527 0182                                 l12519 0162  
                               l12471 00AB                                 l12463 009A  
                               l12455 0089                                 l12447 006A  
                               l11585 1F23                                 l11593 143F  
                               l11657 104F                                 l11649 103C  
                               l11665 126D                                 l11729 042E  
                               l11681 028E                                 l11673 0276  
                               l11737 11F6                                 l11753 123C  
                               l11745 121A                                 l11761 1126  
                               l11833 072F                                 l11825 0705  
                               l11817 06CC                                 l11809 06AD  
                               l11841 0B73                                 l11905 1FB0  
                               l11921 08AA                                 l11913 0877  
                               l12289 0B3B                                 l12297 1F68  
                               l12369 12CF                                 l12385 10B6  
                               l12377 109A                                 l12393 10D7  
                               l12553 01F0                                 l12545 01D2  
                               l12537 01AE                                 l12529 018B  
                               l12561 020C                                 l12481 00CB  
                               l12473 00AF                                 l12465 009E  
                               l12457 008D                                 l12449 0070  
                               l11587 1F27                                 l11595 144B  
                               l11659 1051                                 l11667 1276  
                               l11691 030B                                 l11683 02C4  
                               l11675 027D                                 l11739 11FF  
                               l11755 1244                                 l11747 1226  
                               l11763 112E                                 l11835 073F  
                               l11827 0709                                 l11819 06D7  
                               l11771 05EF                                 l11851 0BA6  
                               l11843 0B86                                 l11907 1FB6  
                               l11931 08CE                                 l11923 08B0  
                               l11915 0883                                 l12299 1F7C  
                               l12379 10A6                                 l12395 10DD  
                               l12387 10C0                                 l12571 0248  
                               l12555 01FA                                 l12547 01DA  
                               l12539 01B4                                 l12563 021C  
                               l12475 00B9                                 l12483 00D3  
                               l12467 00A3                                 l12491 00F5  
                               l12459 0092                                 l11589 1F2B  
                               l11597 1450                                 l11669 1EEA  
                               l11693 030C                                 l11685 02C5  
                               l11677 027E                                 l11749 122C  
                               l11757 1112                                 l11765 1F4D  
                               l11837 0743                                 l11829 071A  
                               l11781 0641                                 l11773 0621  
                               l11861 0BDC                                 l11853 0BA7  
                               l11845 0B8D                                 l11933 08DC  
                               l11925 08B6                                 l11917 088A  
                               l11909 0867                                 l11941 1160  
                               l12389 10CC                                 l12397 08E3  
                               l12573 024D                                 l12565 0222  
                               l12549 01E0                                 l12557 0203  
                               l12493 00FB                                 l12485 00D4  
                               l12477 00BD                                 l12469 00A7  
                               l11599 1456                                 l11695 030D  
                               l11687 02C6                                 l11679 027F  
                               l11759 111E                                 l11767 1F5B  
                               l11839 077B                                 l11791 0662  
                               l11783 0642                                 l11775 0625  
                               l11871 0C04                                 l11863 0BE2  
                               l11855 0BD4                                 l11847 0B8E  
                               l11927 08C1                                 l11919 089C  
                               l11935 1EB2                                 l11951 116C  
                               l11943 1164                                 l12399 08E9  
                               l12575 0251                                 l12567 022B  
                               l12559 020B                                 l12495 00FF  
                               l12487 00DA                                 l12479 00C7  
                               l11697 031C                                 l11689 02D5  
                               l11769 1F61                                 l11793 0666  
                               l11785 0648                                 l11777 062B  
                               l11881 0C2D                                 l11873 0C0C  
                               l11865 0BE7                                 l11857 0BD5  
                               l11849 0B9F                                 l11929 08C8  
                               l11937 1EB3                                 l11953 1172  
                               l11945 1167                                 l11961 15DF  
                               l12569 0243                                 l12497 0115  
                               l12489 00E6                                 l12577 025F  
                               l11699 0352                                 l11795 066B  
                               l11787 064E                                 l11779 0638  
                               l11883 0C35                                 l11875 0C13  
                               l11867 0BEB                                 l11859 0BD6  
                               l11891 1012                                 l11939 1EBD  
                               l11955 1178                                 l11947 1168  
                               l11963 137A                                 l11971 16E2  
                               l12499 011A                                 l11797 066D  
                               l11789 065B                                 l11885 0C3D  
                               l11877 0C18                                 l11869 0BFC  
                               l11893 102F                                 l11957 117E  
                               l11949 116B                                 l11965 13A9  
                               l11973 16EC                                 l11981 1530  
                               l11799 0673                                 l11887 0C44  
                               l11879 0C1C                                 l11895 1078  
                               l11959 1184                                 l11975 16FA  
                               l11967 16C8                                 l11983 153F  
                               l11991 1FDC                                 l11889 0C60  
                               l11897 1079                                 l11977 1712  
                               l11969 16D8                                 l11985 1FBF  
                               l11993 162E                                 l11899 1085  
                               l11979 1508                                 l11987 1FC7  
                               l11995 162F                                 l11989 1FCD  
                               l11997 1671                                 l11999 0D76  
                               ?_isr1 0072                                 ?_main 0072  
                               ?_init 0072                       __end_of___awdiv 1800  
                __size_of_checkIfHome 0020                       __end_of___ftadd 077C  
                     __end_of___ftmul 0C61                       ___awdiv@divisor 0030  
                     __end_of___fttol 0AB8                       __end_of___lwmod 14C3  
                     ___awdiv@counter 0035                                 _RCREG 001A  
                               _SPBRG 0099                                 _PORTA 0005  
                               _PORTC 0007                                 _PORTD 0008  
                               _PORTE 0009                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                                 _TRISE 0089  
                               _SSPIF 0063         __size_of_getSomethingInTheWay 0005  
                               _TXREG 0019                lcd_write_data@databyte 002C  
                     __end_of_goRight 10E7  findFinalDestination@robotOrientation 002F  
                  _getSuccessfulDrive 1EA5                       __end_of_convert 0436  
                               _drive 1217                       ?_updateLocation 0072  
                               _ready 0389                 __size_of_writeSPIByte 000D  
                       ___ftpack@sign 002E                                 _start 00C3  
                      __pbitbssCOMMON 0380                       __end_of_waitFor 1137  
                               pclath 000A                   ?_getSuccessfulDrive 0072  
                     ?_lcd_write_data 0072                     ?_adc_read_channel 0045  
                     _successfulDrive 038B                                 status 0003  
                               wtemp0 007E                     ?_frontWallCorrect 0072  
                  ??_adc_read_channel 0047                  __end_of_goToNextCell 1508  
                  ??_frontWallCorrect 004D                        _initEEPROMMode 1E9D  
          __size_of_lcd_write_control 0014                          __end_of_isr1 0D73  
                        __end_of_main 0267                          __end_of_init 12C0  
          __size_of_updateOrientation 0011                  ??_getSuccessfulDrive 002A  
                              ??_isr1 0020                                ??_main 00E4  
                       ___fttol@sign1 003A                                ??_init 0035  
                        _writeSPIByte 1002                  __size_of_getCurrentX 0005  
                __size_of_getCurrentY 0005                       ??_updateMapData 0038  
                 writeEEPROM@addressH 002B                   writeEEPROM@addressL 002C  
                              _ADCON0 001F                                _ADCON1 009F  
                              ?_drive 002C                                _ADRESH 001E  
                              _ADRESL 009E      findFinalDestination@virtualWallX 0031  
    findFinalDestination@virtualWallY 002E                      ___awdiv@dividend 0032  
                    __end_of___ftpack 07F9                      __end_of___lbtoft 1030  
                    __end_of_adc_read 133B                                i1l6710 0D16  
                              i1l6703 0D67                                i1l6711 0D15  
                              i1l6712 0D1D                                i1l6704 0C86  
                              i1l6713 0D40                                i1l6705 0C9F  
                              i1l6714 0D3F                                i1l6706 0CB0  
                              i1l6715 0D66                                i1l6707 0CE0  
                              i1l6716 0D65                                i1l6708 0CDF  
                              i1l6709 0CE7                                i1l6717 0D67  
                              i1l6870 149A                                i1l6871 149B  
                              i1l6872 14AC                                i1l6873 14BA  
                              i1l6874 14C2                                i1l6867 14BB  
                              i1l6868 1495                                i1l6869 1489  
                              i1l9811 0C6F                                i1l9803 0C61  
                              i1l9901 1489                                i1l9821 0CB6  
                              i1l9813 0C84                                i1l9805 0C65  
                              i1l9911 14AC                                i1l9903 1490  
                              i1l9831 0CE7                                i1l9823 0CBC  
                              i1l9815 0C86                                i1l9807 0C66  
                              i1l9913 14B3                                i1l9905 1495  
                              i1l9841 0D19                                i1l9833 0CEC  
                              i1l9825 0CD8                                i1l9817 0C9D  
                              i1l9809 0C6E                                i1l9907 149B  
                              i1l9915 14BB                                i1l9851 0D38  
                              i1l9843 0D1D                                i1l9835 0CF2  
                              i1l9827 0CDD                                i1l9819 0C9F  
                              i1l9917 14C2                                i1l9909 14A5  
                              i1l9861 0D57                                i1l9845 0D22  
                              i1l9853 0D40                                i1l9837 0D0E  
                              i1l9829 0CE3                                i1l9863 0D5B  
                              i1l9855 0D45                                i1l9847 0D2A  
                              i1l9839 0D13                                i1l9865 0D61  
                              i1l9857 0D4B                                i1l9849 0D32  
                              i1l9859 0D53                                i1l9897 147F  
                              i1l9899 1485                          _addressCount 005E  
                              u370_20 0C9D                                u370_21 0C9C  
                              u371_20 0CB6                                u371_21 0CB5  
                              u372_20 0CD8                                u372_21 0CD7  
                              u373_20 0CEC                                u373_21 0CEB  
                              u390_20 1485                                u374_20 0D0E  
                              u390_21 1484                                u374_21 0D0D  
                              u375_20 0D22                                u375_21 0D21  
                              u391_25 148A                                u392_20 1499  
                              u376_20 0D38                                u368_20 0C65  
                              u392_21 1498                                u376_21 0D37  
                              u368_21 0C64                                u393_20 14A5  
                              u377_20 0D45                                u369_20 0C84  
                              u393_21 14A4                                u377_21 0D44  
                              u369_21 0C83                                u393_25 14A1  
                              u378_20 0D4B                                u378_21 0D4A  
                              u394_25 14AD                                u395_20 14B9  
                              u379_20 0D61                                u395_21 14B8  
                              u379_21 0D60                                _TMR0IE 005D  
                              _TMR0IF 005A                                _SSPCON 0014  
                              _SSPBUF 0013                      convert@adc_value 0041  
                   rotateIR@direction 002A                __end_of_initEEPROMMode 1EA5  
                    writeSPIByte@data 002A         goParallel@angleParallelToWall 00E2  
              ?_lcd_write_1_digit_bcd 0072                      __end_of_findWall 1F84  
                    __end_of_lcd_init 118B                                ___wmul 118B  
                           ??___awdiv 0034                             ??___ftadd 0058  
                              _goLeft 109A                             ??___ftmul 004E  
                           ??___fttol 0036                                _finalX 0063  
                              _finalY 00E5                             ??___lwmod 0076  
                              _eeprom 00C0                                _xCoord 0064  
                              _yCoord 0065                                _readIR 1052  
                    __end_of_init_adc 1F36                      ___awdiv@quotient 0037  
            __end_of_lcd_write_string 109A                                _moving 0388  
                           ??_goRight 0042                                _rxfifo 00A0  
                              clrloop 0802                                _txfifo 00B0  
                              _rxiptr 0078            frontWallCorrect@distToWall 004F  
                              _rxoptr 0079                                _txiptr 007A  
               ___ftmul@f3_as_product 0053                             ??_convert 0043  
                              _txoptr 007B                      __end_of_ser_init 110F  
                    __end_of_ser_isrx 1F4D                                saved_w 007E  
                      _EEPROMToSerial 0867                             ??_waitFor 002E  
                    __end_of_rotateIR 1217                  readEEPROM@returnData 0030  
                   lcd_write_string@s 002E                            ___ftadd@f1 00CE  
                          _addNewData 1FA1                            ___ftadd@f2 00D1  
                     ?_initEEPROMMode 0072                       writeEEPROM@data 0030  
               play_iCreate_song@song 002C                            ___lbtoft@c 0047  
                          ___ftmul@f1 0048                            ___ftmul@f2 004B  
                       rotateIR@steps 002D                            ___fttol@f1 0032  
                      __pcstackCOMMON 0072                          __pidataBANK0 1E7C  
                        __pidataBANK1 07F9                          __pidataBANK2 1F84  
                        __pidataBANK3 1596                         __end_of_drive 124D  
                      goParallel@step 00E0                     _play_iCreate_song 1EE7  
                  __size_of_goForward 003C                    __size_of_getFinalX 0005  
                  __size_of_getFinalY 0005                __end_of_EEPROMToSerial 08E3  
                    ??_lcd_set_cursor 002D                    __size_of_goReverse 0047  
                  ?_play_iCreate_song 0072                    __size_of_findWalls 0094  
                          _goBackward 1137                               ??_drive 002F  
                 ??_play_iCreate_song 002C                            __pbssBANK0 005C  
                          __pbssBANK1 00A0                 __size_of_goToNextCell 0045  
                  __size_of_initSongs 004C                     drive@lowByteSpeed 002C  
                          __pmaintext 005A                          ?_writeEEPROM 002B  
                          _goParallel 0EA5                               ?___wmul 002A  
                             ?_goLeft 0072                            __pintentry 0004  
               goParallel@stepsToWall 00D9             __end_of_play_iCreate_song 1EF9  
                             ?_readIR 0049                          ?_turnRight90 0072  
                          __ptext2200 109A                            __ptext2201 12C0  
                          __ptext2210 1286                            __ptext2202 1137  
                          __ptext2211 154F                            __ptext2203 0EA5  
                          __ptext2220 1160                            __ptext2212 1052  
                          __ptext2204 1F68                            __ptext2221 1EBA  
                          __ptext2213 0D73                            __ptext2205 0AB8  
                          __ptext2230 1F4D                            __ptext2222 1EAF  
                          __ptext2214 162B                            __ptext2206 0436  
                          __ptext2231 110F                            __ptext2223 0867  
                          __ptext2215 1FBF                            __ptext2207 1722  
                          __ptext2240 133B                            __ptext2232 1217  
                          __ptext2224 1FA1                            __ptext2216 1508  
                          __ptext2208 0809                            __ptext2241 143C  
                          __ptext2233 11E4                            __ptext2225 1075  
                          __ptext2217 16C8                            __ptext2209 11B7  
                          __ptext2250 1E98                            __ptext2242 1F20  
                          __ptext2234 0267                            __ptext2226 13B9  
                          __ptext2218 137A                            __ptext2251 1E93  
                          __ptext2243 12FC                            __ptext2235 1EE7  
                          __ptext2227 100F                            __ptext2219 15DF  
                          __ptext2260 1FDF                            __ptext2252 1E8E  
                          __ptext2244 178A                            __ptext2236 124D  
                          __ptext2228 0B73                            __ptext2261 1E9D  
                          __ptext2253 1E89                            __ptext2245 0A12  
                          __ptext2237 1030                            __ptext2229 05EF  
                          __ptext2262 1002                            __ptext2254 1EC5  
                          __ptext2246 077C                            __ptext2238 1EF9  
                          __ptext2263 0C61                            __ptext2255 10E7  
                          __ptext2247 118B                            __ptext2239 1F0C  
                          __ptext2264 147F                            __ptext2256 1F36  
                          __ptext2248 13FA                            __ptext2265 0000  
                          __ptext2257 0977                            __ptext2249 1EA5  
                          __ptext2258 1E84                            __ptext2259 1E7F  
                          __ptext2197 14C3                            __ptext2198 08E3  
                          __ptext2199 10C0                    __size_of_ser_getch 0022  
                           ?___ftpack 002A                             ?___lbtoft 0040  
                           ?_adc_read 0039                    __size_of_ser_putch 0021  
            _checkForFinalDestination 11B7                       ?_EEPROMToSerial 0072  
                    ??_updateLocation 002E                 __end_of_getVictimZone 0A12  
                        _goToNextCell 14C3                      ??_lcd_write_data 002A  
                           ?_findWall 0072             __size_of_driveForDistance 01B9  
                      waitFor@lowByte 002D                __size_of_lookForVictim 005E  
                           ?_lcd_init 0072                               _SSPSTAT 0094  
                  goParallel@distance 00DE                             ?_init_adc 0072  
                         ?_addNewData 0072                     __end_of_goForward 12FC  
                          _readEEPROM 133B                     __end_of_getFinalX 1E84  
                   __end_of_getFinalY 1E89          __end_of_getSomethingInTheWay 1E9D  
                   __end_of_goReverse 1596                            _initIRobot 1F4D  
                   __end_of_findWalls 0977                             ?_ser_init 0072  
                           ?_ser_isrx 0072         __size_of_findFinalDestination 0132  
                             ___awdiv 178A                               ___ftadd 05EF  
          goParallel@shortestDistance 00DA                             ?_rotateIR 002A  
                     __size_of___wmul 002C                               ___ftmul 0B73  
                             ___fttol 0A12                         ??_checkIfHome 0033  
                             ___lwmod 147F                       __size_of_goLeft 0026  
                     __size_of_readIR 0023             __size_of_adc_read_channel 0041  
                          ??___ftpack 002F                            ??___lbtoft 0043  
                             _goRight 10C0                            ??_adc_read 003B  
           __size_of_frontWallCorrect 00BB                               _convert 0267  
                         waitFor@type 0031                     __end_of_initSongs 162B  
        driveForDistance@moveDistance 0036                               _waitFor 110F  
                             _ser_tmp 00C9                               _vicZone 00CC  
                         ?_goBackward 0072                               _wayWent 00CD  
                 driveForDistance@low 003F                           ser_putArr@i 0033  
                          ??_findWall 004D               __size_of_getOrientation 0005  
                          ??_lcd_init 002D                  end_of_initialization 16C4  
                   __end_of_ser_getch 1052                               init_ram 1EDA  
                      _superMarioBros 01AB                            ??_init_adc 002A  
             ??_lcd_write_1_digit_bcd 002D                     __end_of_ser_putch 2000  
                          ??_ser_init 002A                            ??_ser_isrx 002A  
                          _ser_putArr 124D                           ?_goParallel 0072  
                       _lookForVictim 0809                            ??_rotateIR 002B  
          __size_of_play_iCreate_song 0012           __size_of_getSuccessfulDrive 000A  
                   ?_lcd_write_string 0072                         ??_getCurrentX 002A  
                       ??_getCurrentY 002A                   __size_of_addNewData 001E  
                          _victimZone 0062                    ??_lcd_write_string 002D  
                 __end_of_checkIfHome 1FDF                     adc_read@adc_value 003F  
                          _updateNode 13FA                 __end_of_updateMapData 1678  
                    ??_initEEPROMMode 002A                           ?_readEEPROM 002B  
                         ?_initIRobot 0072                           ___ftmul@exp 0052  
                          _turnLeft90 16C8                        ?_lookForVictim 0072  
                          _turnAround 1508                   __size_of_goBackward 0029  
                __size_of_writeEEPROM 0043                        __end_of___wmul 11B7  
                      __end_of_goLeft 10C0                        __end_of_readIR 1075  
                __size_of_turnRight90 003F            EEPROMToSerial@transferDone 0034  
                _getSomethingInTheWay 1E98                   start_initialization 1678  
                 __end_of_getCurrentX 1E8E                   __end_of_getCurrentY 1E93  
                    _driveForDistance 0436                   __size_of_goParallel 015B  
         driveForDistance@virtualWall 0040                 lcd_set_cursor@address 002D  
                         ?_ser_putArr 002C            ??_checkForFinalDestination 002E  
                      _RTC_FLAG_500MS 0382                              ??___wmul 002E  
                            ??_goLeft 0042                      ??_EEPROMToSerial 0031  
                         __pdataBANK0 0063                           __pdataBANK1 00E5  
                         __pdataBANK2 0110                           __pdataBANK3 0190  
                         _checkIfHome 1FBF                              ??_readIR 004B  
                    _adc_read_channel 13B9                      _frontWallCorrect 0AB8  
               ?_getSomethingInTheWay 0072                   __size_of_readEEPROM 003F  
                   __size_of___ftpack 007D                     __size_of___lbtoft 0021  
                   __size_of_adc_read 003F                           __pbssCOMMON 0078  
                         ?_updateNode 0072                         __pcstackBANK0 0020  
                       __pcstackBANK1 00CE                   __size_of_initIRobot 001B  
                      _getOrientation 1E93                     _somethingInTheWay 00E6  
                   __size_of_findWall 001C                     __size_of_lcd_init 002B  
                  drive@lowByteRadius 002E                          ??_addNewData 0031  
                      addNewData@data 0032                             _champions 01C4  
                   __size_of_init_adc 0016                       ??_lookForVictim 002E  
                           _goForward 12C0                           ?_turnLeft90 0072  
                           _getFinalX 1E7F                             _getFinalY 1E84  
                         ?_turnAround 0072                              ?___awdiv 0030  
                            ?___ftadd 00CE                             _goReverse 154F  
                            ?___ftmul 0048                     __size_of_ser_init 0028  
                            ?___fttol 0032                     __size_of_ser_isrx 0017  
                            ?___lwmod 0072                             _findWalls 08E3  
                           __pstrings 0015                     __size_of_rotateIR 0033  
                            ?_goRight 0072                           _getCurrentX 1E89  
                       ?_writeSPIByte 0072                           _getCurrentY 1E8E  
                            ?_convert 0041                        _finalCountdown 0190  
                  __end_of_addNewData 1FBF                             _goingHome 0385  
              __end_of_getOrientation 1E98          __end_of_findFinalDestination 0EA5  
                            ?_waitFor 002C                          ??_goBackward 0042  
                          ser_getch@c 002B                             _initSongs 15DF  
                 __size_of_ser_putArr 0039                        __size_of_drive 0036  
                           _frontWall 0384               __size_of_lcd_set_cursor 000B  
                   interrupt_function 0004                        ___wmul@product 002E  
                          ser_putch@c 002B        __size_of_lcd_write_1_digit_bcd 000B  
       __end_of_lcd_write_1_digit_bcd 1EC5                       waitFor@highByte 002C  
                           _rightWall 038A                        _addressCurrent 005F  
                           _ser_getch 1030                            ?_goForward 0072  
                        ??_goParallel 00D7                             _ser_putch 1FDF  
                          ?_getFinalX 0072                            ?_getFinalY 0072  
                 __size_of_updateNode 0042                __size_of_getVictimZone 009B  
                          ?_goReverse 0072                     updateMapData@move 0037  
                  __end_of_goBackward 1160                            ?_findWalls 0072  
               driveForDistance@cliff 0041                        ??_writeSPIByte 002A  
                         __stringbase 001A                ??_getSomethingInTheWay 002A  
                   ___wmul@multiplier 002A                       ?_getOrientation 0072  
                          ?_initSongs 0072                   __size_of_turnLeft90 005A  
                 __size_of_turnAround 0047                    __end_of_goParallel 1000  
             __size_of_updateLocation 0068             __size_of_lcd_write_string 0025  
                 lookForVictim@victim 0030                          ??_readEEPROM 002C  
                        ??_initIRobot 002C               __size_of_lcd_write_data 0013  
                          ?_ser_getch 0072      __end_of_checkForFinalDestination 11E4  
                        _lookingForU2 0110                            ?_ser_putch 0072  
             adc_read_channel@channel 0048                         _RTC_FLAG_10MS 0380  
                       _RTC_FLAG_50MS 0383                             init_fetch 1ED6  
            __end_of_driveForDistance 05EF            __end_of_getSuccessfulDrive 1EAF  
                    __size_of___awdiv 0076                      __size_of___ftadd 018D  
                  _currentOrientation 0060                      __size_of___ftmul 00EE  
                    __size_of___fttol 00A6                      __size_of___lwmod 0044  
                            ___ftpack 077C                              ___lbtoft 100F  
                getVictimZone@victimX 002C                  getVictimZone@victimY 002A  
                            _adc_read 12FC                      __size_of_goRight 0027  
                    __size_of_convert 01CF                    __end_of_readEEPROM 137A  
                  __end_of_initIRobot 1F68                         _getVictimZone 0977  
                    __size_of_waitFor 0028                              _findWall 1F68  
                            _lcd_init 1160                              _leftWall 0387  
            __end_of_adc_read_channel 13FA             lcd_write_control@databyte 002C  
                            _lastMove 0061                              _init_adc 1F20  
                       __size_of_isr1 0112                         __size_of_main 020D  
                       __size_of_init 003A              __end_of_frontWallCorrect 0B73  
                            clear_ram 0801               goParallel@angleHighByte 00DC  
                       ??_writeEEPROM 002D                              _ser_init 10E7  
                         ??_goForward 0042                          ??_ser_putArr 0030  
                            _ser_isrx 1F36                           ??_getFinalX 002A  
                         ??_getFinalY 002A                  _findFinalDestination 0D73  
                driveForDistance@high 003E                           ??_goReverse 0033  
                            _rotateIR 11E4                           ??_findWalls 004D  
                        ?_checkIfHome 0072                         ??_turnRight90 0033  
               updateMapData@virtualE 0034                 updateMapData@virtualN 0035  
               updateMapData@virtualS 0033                 updateMapData@virtualW 003A  
              __size_of_updateMapData 004D                              readIR@cm 004B  
                        ??_updateNode 002A                         ?_goToNextCell 0072  
                      ?_getVictimZone 002A         driveForDistance@deltaDistance 003A  
                        _RTC_FLAG_1MS 0381                           ??_initSongs 0035  
                  __end_of_ser_putArr 1286                              intlevel1 0000  
                      _lcd_set_cursor 1EAF                      ___lwmod@dividend 0074  
                __end_of_writeSPIByte 100F                             stringcode 0015  
                         ??_ser_getch 002A                          ??_turnLeft90 0033  
               ?_findFinalDestination 002E                           ??_ser_putch 002A  
                        ??_turnAround 0033                  _stepsToPerpendicular 00CB  
             __size_of_initEEPROMMode 0008                    __end_of_updateNode 143C  
              goParallel@angleLowByte 00DD                     _lcd_write_control 1F0C  
                   _updateOrientation 1EC5                   __end_of_writeEEPROM 147F  
                  ?_lcd_write_control 0072                updateOrientation@moved 002B  
                        ?_getCurrentX 0072                          ?_getCurrentY 0072  
                          _OPTION_REG 0081                    ?_updateOrientation 0072  
                     ___lwmod@divisor 0072                        ??_goToNextCell 0043  
                     ___lwmod@counter 0077                   __end_of_turnRight90 13B9  
                            stringdir 0015              driveForDistance@distance 003C  
                            stringtab 0015     __size_of_checkForFinalDestination 002D  
                       _closestObject 00C6             ?_checkForFinalDestination 0072  
                 updateMapData@victim 0036                   ??_lcd_write_control 002A  
              __end_of_lcd_set_cursor 1EBA                   ??_updateOrientation 002A  
                  __end_of_turnLeft90 1722                    __end_of_turnAround 154F  
                      _updateLocation 1722                      _lcd_write_string 1075  
                       _updateMapData 162B                           _RTC_Counter 005C  
                      _lcd_write_data 1EF9                       ser_putArr@array 002C  
                    ser_putArr@length 002E  
