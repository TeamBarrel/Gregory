

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Mon May 27 22:17:38 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COM
                                 PETITIONv0.7\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COM
                                 PETITIONv0.7\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_lcd_set_cursor
    49                           	FNCALL	_main,_lcd_write_string
    50                           	FNCALL	_main,_findWalls
    51                           	FNCALL	_main,_turnAround
    52                           	FNCALL	_main,_turnLeft90
    53                           	FNCALL	_main,_turnRight90
    54                           	FNCALL	_main,_lcd_write_data
    55                           	FNCALL	_main,_play_iCreate_song
    56                           	FNCALL	_main,_rotateIR
    57                           	FNCALL	_main,_checkForFinalDestination
    58                           	FNCALL	_main,_lookForVictim
    59                           	FNCALL	_main,_goParallel
    60                           	FNCALL	_main,_frontWallCorrect
    61                           	FNCALL	_main,_goToNextCell
    62                           	FNCALL	_main,_goRight
    63                           	FNCALL	_main,_getOrientation
    64                           	FNCALL	_main,_goForward
    65                           	FNCALL	_main,_goLeft
    66                           	FNCALL	_main,_getSuccessfulDrive
    67                           	FNCALL	_main,_updateLocation
    68                           	FNCALL	_main,_updateNode
    69                           	FNCALL	_main,_checkIfHome
    70                           	FNCALL	_goToNextCell,_getSomethingInTheWay
    71                           	FNCALL	_goToNextCell,_goLeft
    72                           	FNCALL	_goToNextCell,_goForward
    73                           	FNCALL	_goToNextCell,_goRight
    74                           	FNCALL	_goToNextCell,_goBackward
    75                           	FNCALL	_findWalls,_lcd_set_cursor
    76                           	FNCALL	_findWalls,_findWall
    77                           	FNCALL	_findWalls,_lcd_write_data
    78                           	FNCALL	_findWalls,_rotateIR
    79                           	FNCALL	_goRight,_lcd_set_cursor
    80                           	FNCALL	_goRight,_lcd_write_data
    81                           	FNCALL	_goRight,_turnRight90
    82                           	FNCALL	_goRight,_updateOrientation
    83                           	FNCALL	_goRight,_driveForDistance
    84                           	FNCALL	_goLeft,_lcd_set_cursor
    85                           	FNCALL	_goLeft,_lcd_write_data
    86                           	FNCALL	_goLeft,_turnLeft90
    87                           	FNCALL	_goLeft,_updateOrientation
    88                           	FNCALL	_goLeft,_driveForDistance
    89                           	FNCALL	_goForward,_lcd_set_cursor
    90                           	FNCALL	_goForward,_lcd_write_data
    91                           	FNCALL	_goForward,_driveForDistance
    92                           	FNCALL	_goBackward,_lcd_set_cursor
    93                           	FNCALL	_goBackward,_lcd_write_data
    94                           	FNCALL	_goBackward,_turnAround
    95                           	FNCALL	_goBackward,_updateOrientation
    96                           	FNCALL	_goBackward,_driveForDistance
    97                           	FNCALL	_goParallel,_readIR
    98                           	FNCALL	_goParallel,_rotateIR
    99                           	FNCALL	_goParallel,___lbtoft
   100                           	FNCALL	_goParallel,___ftmul
   101                           	FNCALL	_goParallel,___ftadd
   102                           	FNCALL	_goParallel,___fttol
   103                           	FNCALL	_goParallel,_drive
   104                           	FNCALL	_goParallel,_waitFor
   105                           	FNCALL	_findWall,_readIR
   106                           	FNCALL	_frontWallCorrect,_rotateIR
   107                           	FNCALL	_frontWallCorrect,_readIR
   108                           	FNCALL	_frontWallCorrect,_drive
   109                           	FNCALL	_driveForDistance,_drive
   110                           	FNCALL	_driveForDistance,_ser_putch
   111                           	FNCALL	_driveForDistance,_ser_getch
   112                           	FNCALL	_driveForDistance,_goReverse
   113                           	FNCALL	_driveForDistance,_turnRight90
   114                           	FNCALL	_driveForDistance,_updateOrientation
   115                           	FNCALL	_driveForDistance,_turnLeft90
   116                           	FNCALL	_driveForDistance,_getCurrentY
   117                           	FNCALL	_driveForDistance,_getCurrentX
   118                           	FNCALL	_driveForDistance,_findFinalDestination
   119                           	FNCALL	_updateLocation,_lcd_set_cursor
   120                           	FNCALL	_updateLocation,_lcd_write_data
   121                           	FNCALL	_updateLocation,_getOrientation
   122                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
   123                           	FNCALL	_lookForVictim,_ser_putch
   124                           	FNCALL	_lookForVictim,_ser_getch
   125                           	FNCALL	_lookForVictim,_play_iCreate_song
   126                           	FNCALL	_lookForVictim,_lcd_set_cursor
   127                           	FNCALL	_lookForVictim,_lcd_write_data
   128                           	FNCALL	_lookForVictim,_getVictimZone
   129                           	FNCALL	_lookForVictim,_lcd_write_1_digit_bcd
   130                           	FNCALL	_checkForFinalDestination,_getFinalX
   131                           	FNCALL	_checkForFinalDestination,_getFinalY
   132                           	FNCALL	_checkForFinalDestination,_play_iCreate_song
   133                           	FNCALL	_checkForFinalDestination,_lcd_set_cursor
   134                           	FNCALL	_checkForFinalDestination,_lcd_write_data
   135                           	FNCALL	_init,_init_adc
   136                           	FNCALL	_init,_lcd_init
   137                           	FNCALL	_init,_ser_init
   138                           	FNCALL	_init,_initIRobot
   139                           	FNCALL	_init,_initSongs
   140                           	FNCALL	_goReverse,_lcd_set_cursor
   141                           	FNCALL	_goReverse,_lcd_write_data
   142                           	FNCALL	_goReverse,_drive
   143                           	FNCALL	_goReverse,_waitFor
   144                           	FNCALL	_readIR,_adc_read_channel
   145                           	FNCALL	_readIR,_convert
   146                           	FNCALL	_findFinalDestination,_lcd_set_cursor
   147                           	FNCALL	_findFinalDestination,_lcd_write_1_digit_bcd
   148                           	FNCALL	_checkIfHome,_drive
   149                           	FNCALL	_checkIfHome,_play_iCreate_song
   150                           	FNCALL	_turnAround,_drive
   151                           	FNCALL	_turnAround,_waitFor
   152                           	FNCALL	_turnLeft90,_drive
   153                           	FNCALL	_turnLeft90,_waitFor
   154                           	FNCALL	_turnRight90,_drive
   155                           	FNCALL	_turnRight90,_waitFor
   156                           	FNCALL	_initSongs,_ser_putArr
   157                           	FNCALL	_lcd_init,_lcd_write_control
   158                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
   159                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   160                           	FNCALL	_lcd_write_string,_lcd_write_data
   161                           	FNCALL	_adc_read_channel,_adc_read
   162                           	FNCALL	___lbtoft,___ftpack
   163                           	FNCALL	___ftmul,___ftpack
   164                           	FNCALL	___ftadd,___ftpack
   165                           	FNCALL	_initIRobot,_ser_putch
   166                           	FNCALL	_waitFor,_ser_putch
   167                           	FNCALL	_drive,_ser_putch
   168                           	FNCALL	_convert,___wmul
   169                           	FNCALL	_convert,___awdiv
   170                           	FNCALL	_play_iCreate_song,_ser_putch
   171                           	FNCALL	_ser_putArr,_ser_putch
   172                           	FNCALL	_ser_getch,_ser_isrx
   173                           	FNCALL	_adc_read,___awdiv
   174                           	FNROOT	_main
   175                           	FNCALL	_isr1,___lwmod
   176                           	FNCALL	intlevel1,_isr1
   177                           	global	intlevel1
   178                           	FNROOT	intlevel1
   179                           	global	_finalX
   180                           	global	_xCoord
   181                           	global	_yCoord
   182                           	global	_finalY
   183                           	global	_somethingInTheWay
   184                           	global	_lookingForU2
   185                           	global	_finalCountdown
   186                           	global	_superMarioBros
   187                           	global	_champions
   188                           	global	_beep
   189                           psect	idataBANK0,class=CODE,space=0,delta=2
   190                           global __pidataBANK0
   191  07FC                     __pidataBANK0:
   192                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
   193                           	line	7
   194                           
   195                           ;initializer for _finalX
   196  07FC  3403               	retlw	03h
   197                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
   198                           	line	51
   199                           
   200                           ;initializer for _xCoord
   201  07FD  3401               	retlw	01h
   202                           	line	52
   203                           
   204                           ;initializer for _yCoord
   205  07FE  3403               	retlw	03h
   206                           psect	idataBANK1,class=CODE,space=0,delta=2
   207                           global __pidataBANK1
   208  1127                     __pidataBANK1:
   209                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
   210                           	line	8
   211                           
   212                           ;initializer for _finalY
   213  1127  3401               	retlw	01h
   214                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
   215                           	line	14
   216                           
   217                           ;initializer for _somethingInTheWay
   218  1128  3402               	retlw	02h
   219                           psect	idataBANK2,class=CODE,space=0,delta=2
   220                           global __pidataBANK2
   221  1231                     __pidataBANK2:
   222                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
   223                           	line	11
   224                           
   225                           ;initializer for _lookingForU2
   226  1231  348C               	retlw	08Ch
   227  1232  3402               	retlw	02h
   228  1233  340D               	retlw	0Dh
   229  1234  3448               	retlw	048h
   230  1235  341C               	retlw	01Ch
   231  1236  3448               	retlw	048h
   232  1237  341C               	retlw	01Ch
   233  1238  344F               	retlw	04Fh
   234  1239  3440               	retlw	040h
   235  123A  3480               	retlw	080h
   236  123B  3410               	retlw	010h
   237  123C  344D               	retlw	04Dh
   238  123D  341C               	retlw	01Ch
   239  123E  344C               	retlw	04Ch
   240  123F  341C               	retlw	01Ch
   241  1240  3448               	retlw	048h
   242  1241  3440               	retlw	040h
   243  1242  3480               	retlw	080h
   244  1243  3410               	retlw	010h
   245  1244  3445               	retlw	045h
   246  1245  341C               	retlw	01Ch
   247  1246  3445               	retlw	045h
   248  1247  341C               	retlw	01Ch
   249  1248  3445               	retlw	045h
   250  1249  341C               	retlw	01Ch
   251  124A  3448               	retlw	048h
   252  124B  341C               	retlw	01Ch
   253  124C  3448               	retlw	048h
   254  124D  3440               	retlw	040h
   255                           psect	idataBANK3,class=CODE,space=0,delta=2
   256                           global __pidataBANK3
   257  176B                     __pidataBANK3:
   258                           	line	12
   259                           
   260                           ;initializer for _finalCountdown
   261  176B  348C               	retlw	08Ch
   262  176C  3403               	retlw	03h
   263  176D  340C               	retlw	0Ch
   264  176E  3449               	retlw	049h
   265  176F  3408               	retlw	08h
   266  1770  3447               	retlw	047h
   267  1771  3408               	retlw	08h
   268  1772  3449               	retlw	049h
   269  1773  3420               	retlw	020h
   270  1774  3442               	retlw	042h
   271  1775  3440               	retlw	040h
   272  1776  3480               	retlw	080h
   273  1777  3420               	retlw	020h
   274  1778  344A               	retlw	04Ah
   275  1779  3408               	retlw	08h
   276  177A  3449               	retlw	049h
   277  177B  3408               	retlw	08h
   278  177C  344A               	retlw	04Ah
   279  177D  3408               	retlw	08h
   280  177E  3480               	retlw	080h
   281  177F  340C               	retlw	0Ch
   282  1780  3449               	retlw	049h
   283  1781  3406               	retlw	06h
   284  1782  3480               	retlw	080h
   285  1783  340C               	retlw	0Ch
   286  1784  3447               	retlw	047h
   287  1785  3430               	retlw	030h
   288                           	line	10
   289                           
   290                           ;initializer for _superMarioBros
   291  1786  348C               	retlw	08Ch
   292  1787  3401               	retlw	01h
   293  1788  340B               	retlw	0Bh
   294  1789  344C               	retlw	04Ch
   295  178A  3408               	retlw	08h
   296  178B  3480               	retlw	080h
   297  178C  3404               	retlw	04h
   298  178D  344C               	retlw	04Ch
   299  178E  3410               	retlw	010h
   300  178F  3480               	retlw	080h
   301  1790  3404               	retlw	04h
   302  1791  344C               	retlw	04Ch
   303  1792  3410               	retlw	010h
   304  1793  3480               	retlw	080h
   305  1794  3404               	retlw	04h
   306  1795  3448               	retlw	048h
   307  1796  3408               	retlw	08h
   308  1797  344C               	retlw	04Ch
   309  1798  3410               	retlw	010h
   310  1799  344F               	retlw	04Fh
   311  179A  3420               	retlw	020h
   312  179B  3480               	retlw	080h
   313  179C  3408               	retlw	08h
   314  179D  3443               	retlw	043h
   315  179E  3410               	retlw	010h
   316                           	line	13
   317                           
   318                           ;initializer for _champions
   319  179F  348C               	retlw	08Ch
   320  17A0  3404               	retlw	04h
   321  17A1  3409               	retlw	09h
   322  17A2  344A               	retlw	04Ah
   323  17A3  3440               	retlw	040h
   324  17A4  3449               	retlw	049h
   325  17A5  3410               	retlw	010h
   326  17A6  344A               	retlw	04Ah
   327  17A7  3410               	retlw	010h
   328  17A8  3449               	retlw	049h
   329  17A9  3430               	retlw	030h
   330  17AA  3445               	retlw	045h
   331  17AB  3430               	retlw	030h
   332  17AC  3480               	retlw	080h
   333  17AD  3420               	retlw	020h
   334  17AE  3442               	retlw	042h
   335  17AF  341C               	retlw	01Ch
   336  17B0  3447               	retlw	047h
   337  17B1  3420               	retlw	020h
   338  17B2  3442               	retlw	042h
   339  17B3  3430               	retlw	030h
   340                           psect	idataBANK1
   341                           	line	14
   342                           
   343                           ;initializer for _beep
   344  1129  348C               	retlw	08Ch
   345  112A  3405               	retlw	05h
   346  112B  3401               	retlw	01h
   347  112C  3448               	retlw	048h
   348  112D  3404               	retlw	04h
   349                           	global	_RTC_Counter
   350                           	global	_addressCount
   351                           	global	_addressCurrent
   352                           	global	_currentOrientation
   353                           	global	_lastMove
   354                           	global	_victimZone
   355                           	global	_rxiptr
   356                           	global	_rxoptr
   357                           	global	_txiptr
   358                           	global	_txoptr
   359                           	global	_RTC_FLAG_10MS
   360                           	global	_RTC_FLAG_1MS
   361                           	global	_RTC_FLAG_500MS
   362                           	global	_RTC_FLAG_50MS
   363                           	global	_frontWall
   364                           	global	_goingHome
   365                           	global	_home
   366                           	global	_leftWall
   367                           	global	_moving
   368                           	global	_ready
   369                           	global	_rightWall
   370                           	global	_successfulDrive
   371                           	global	_rxfifo
   372                           	global	_txfifo
   373                           	global	_start
   374                           	global	_closestObject
   375                           	global	_node
   376                           	global	_ser_tmp
   377                           	global	_stepPosition
   378                           	global	_stepsToPerpendicular
   379                           	global	_vicZone
   380                           	global	_wayWent
   381                           	global	_ADCON0
   382  001F                     _ADCON0	set	31
   383                           	global	_ADRESH
   384  001E                     _ADRESH	set	30
   385                           	global	_PORTA
   386  0005                     _PORTA	set	5
   387                           	global	_PORTC
   388  0007                     _PORTC	set	7
   389                           	global	_PORTD
   390  0008                     _PORTD	set	8
   391                           	global	_PORTE
   392  0009                     _PORTE	set	9
   393                           	global	_RCREG
   394  001A                     _RCREG	set	26
   395                           	global	_SSPBUF
   396  0013                     _SSPBUF	set	19
   397                           	global	_SSPCON
   398  0014                     _SSPCON	set	20
   399                           	global	_TMR0
   400  0001                     _TMR0	set	1
   401                           	global	_TXREG
   402  0019                     _TXREG	set	25
   403                           	global	_CARRY
   404  0018                     _CARRY	set	24
   405                           	global	_CHS0
   406  00FB                     _CHS0	set	251
   407                           	global	_CHS1
   408  00FC                     _CHS1	set	252
   409                           	global	_CHS2
   410  00FD                     _CHS2	set	253
   411                           	global	_CREN
   412  00C4                     _CREN	set	196
   413                           	global	_GIE
   414  005F                     _GIE	set	95
   415                           	global	_GO
   416  00FA                     _GO	set	250
   417                           	global	_OERR
   418  00C1                     _OERR	set	193
   419                           	global	_PEIE
   420  005E                     _PEIE	set	94
   421                           	global	_RB0
   422  0030                     _RB0	set	48
   423                           	global	_RCIF
   424  0065                     _RCIF	set	101
   425                           	global	_RE0
   426  0048                     _RE0	set	72
   427                           	global	_RE1
   428  0049                     _RE1	set	73
   429                           	global	_RE2
   430  004A                     _RE2	set	74
   431                           	global	_RX9
   432  00C6                     _RX9	set	198
   433                           	global	_SPEN
   434  00C7                     _SPEN	set	199
   435                           	global	_SSPIF
   436  0063                     _SSPIF	set	99
   437                           	global	_TMR0IE
   438  005D                     _TMR0IE	set	93
   439                           	global	_TMR0IF
   440  005A                     _TMR0IF	set	90
   441                           	global	_TXIF
   442  0064                     _TXIF	set	100
   443                           	global	_ADCON1
   444  009F                     _ADCON1	set	159
   445                           	global	_ADRESL
   446  009E                     _ADRESL	set	158
   447                           	global	_OPTION_REG
   448  0081                     _OPTION_REG	set	129
   449                           	global	_SPBRG
   450  0099                     _SPBRG	set	153
   451                           	global	_SSPSTAT
   452  0094                     _SSPSTAT	set	148
   453                           	global	_TRISA
   454  0085                     _TRISA	set	133
   455                           	global	_TRISB
   456  0086                     _TRISB	set	134
   457                           	global	_TRISC
   458  0087                     _TRISC	set	135
   459                           	global	_TRISD
   460  0088                     _TRISD	set	136
   461                           	global	_TRISE
   462  0089                     _TRISE	set	137
   463                           	global	_BRGH
   464  04C2                     _BRGH	set	1218
   465                           	global	_RCIE
   466  0465                     _RCIE	set	1125
   467                           	global	_SYNC
   468  04C4                     _SYNC	set	1220
   469                           	global	_TX9
   470  04C6                     _TX9	set	1222
   471                           	global	_TXEN
   472  04C5                     _TXEN	set	1221
   473                           	global	_TXIE
   474  0464                     _TXIE	set	1124
   475                           	global	_EEADR
   476  010D                     _EEADR	set	269
   477                           	global	_EEDATA
   478  010C                     _EEDATA	set	268
   479                           	global	_EECON1
   480  018C                     _EECON1	set	396
   481                           	global	_EECON2
   482  018D                     _EECON2	set	397
   483                           	global	_RD
   484  0C60                     _RD	set	3168
   485                           	global	_WR
   486  0C61                     _WR	set	3169
   487                           	global	_WREN
   488  0C62                     _WREN	set	3170
   489                           psect	strings,class=STRING,delta=2
   490                           global __pstrings
   491  1000                     __pstrings:
   492                           ;	global	stringdir,stringtab,__stringbase
   493  1000                     stringtab:
   494                           ;	String table - string pointers are 1 byte each
   495  1000                     stringcode:stringdir:
      + 1000                     stringdir:	
   496  1000  3010               movlw high(stringdir)
   497  1001  008A               movwf pclath
   498  1002  0804               movf fsr,w
   499  1003  0A84               incf fsr
   500  1004  0782               	addwf pc
   501  1005                     __stringbase:
   502  1005  3400               	retlw	0
   503                           psect	strings
   504                           	
   505  1006                     STR_3:	
   506  1006  3428               	retlw	40	;'('
   507  1007  342D               	retlw	45	;'-'
   508  1008  342C               	retlw	44	;','
   509  1009  342D               	retlw	45	;'-'
   510  100A  3429               	retlw	41	;')'
   511  100B  3420               	retlw	32	;' '
   512  100C  342D               	retlw	45	;'-'
   513  100D  3420               	retlw	32	;' '
   514  100E  342D               	retlw	45	;'-'
   515  100F  342D               	retlw	45	;'-'
   516  1010  3420               	retlw	32	;' '
   517  1011  342D               	retlw	45	;'-'
   518  1012  342D               	retlw	45	;'-'
   519  1013  342D               	retlw	45	;'-'
   520  1014  3420               	retlw	32	;' '
   521  1015  342D               	retlw	45	;'-'
   522  1016  3400               	retlw	0
   523                           psect	strings
   524                           	
   525  1017                     STR_4:	
   526  1017  342D               	retlw	45	;'-'
   527  1018  3420               	retlw	32	;' '
   528  1019  342D               	retlw	45	;'-'
   529  101A  3420               	retlw	32	;' '
   530  101B  342D               	retlw	45	;'-'
   531  101C  3420               	retlw	32	;' '
   532  101D  3428               	retlw	40	;'('
   533  101E  3433               	retlw	51	;'3'
   534  101F  342C               	retlw	44	;','
   535  1020  3431               	retlw	49	;'1'
   536  1021  3429               	retlw	41	;')'
   537  1022  3420               	retlw	32	;' '
   538  1023  3447               	retlw	71	;'G'
   539  1024  3452               	retlw	82	;'R'
   540  1025  3445               	retlw	69	;'E'
   541  1026  3447               	retlw	71	;'G'
   542  1027  3400               	retlw	0
   543                           psect	strings
   544                           	
   545  1028                     STR_1:	
   546  1028  3445               	retlw	69	;'E'
   547  1029  3445               	retlw	69	;'E'
   548  102A  3450               	retlw	80	;'P'
   549  102B  3452               	retlw	82	;'R'
   550  102C  344F               	retlw	79	;'O'
   551  102D  344D               	retlw	77	;'M'
   552  102E  3420               	retlw	32	;' '
   553  102F  3453               	retlw	83	;'S'
   554  1030  3475               	retlw	117	;'u'
   555  1031  3463               	retlw	99	;'c'
   556  1032  3463               	retlw	99	;'c'
   557  1033  3465               	retlw	101	;'e'
   558  1034  3473               	retlw	115	;'s'
   559  1035  3473               	retlw	115	;'s'
   560  1036  3400               	retlw	0
   561                           psect	strings
   562                           	
   563  1037                     STR_2:	
   564  1037  3445               	retlw	69	;'E'
   565  1038  3445               	retlw	69	;'E'
   566  1039  3450               	retlw	80	;'P'
   567  103A  3452               	retlw	82	;'R'
   568  103B  344F               	retlw	79	;'O'
   569  103C  344D               	retlw	77	;'M'
   570  103D  3420               	retlw	32	;' '
   571  103E  3446               	retlw	70	;'F'
   572  103F  3461               	retlw	97	;'a'
   573  1040  3469               	retlw	105	;'i'
   574  1041  346C               	retlw	108	;'l'
   575  1042  3465               	retlw	101	;'e'
   576  1043  3464               	retlw	100	;'d'
   577  1044  3400               	retlw	0
   578                           psect	strings
   579                           	file	"COMPETITIONv0.7.as"
   580                           	line	#
   581                           psect cinit,class=CODE,delta=2
   582                           global start_initialization
   583  0823                     start_initialization:
   584                           
   585                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   586                           global __pbitbssCOMMON
   587  0380                     __pbitbssCOMMON:
   588  0380                     _RTC_FLAG_10MS:
   589  0380                            ds      1
   590                           
   591  0381                     _RTC_FLAG_1MS:
   592  0381                            ds      1
   593                           
   594  0382                     _RTC_FLAG_500MS:
   595  0382                            ds      1
   596                           
   597  0383                     _RTC_FLAG_50MS:
   598  0383                            ds      1
   599                           
   600  0384                     _frontWall:
   601  0384                            ds      1
   602                           
   603  0385                     _goingHome:
   604  0385                            ds      1
   605                           
   606  0386                     _home:
   607  0386                            ds      1
   608                           
   609  0387                     _leftWall:
   610  0387                            ds      1
   611                           
   612  0388                     _moving:
   613  0388                            ds      1
   614                           
   615  0389                     _ready:
   616  0389                            ds      1
   617                           
   618  038A                     _rightWall:
   619  038A                            ds      1
   620                           
   621  038B                     _successfulDrive:
   622  038B                            ds      1
   623                           
   624                           psect	bssCOMMON,class=COMMON,space=1
   625                           global __pbssCOMMON
   626  0078                     __pbssCOMMON:
   627  0078                     _rxiptr:
   628  0078                            ds      1
   629                           
   630  0079                     _rxoptr:
   631  0079                            ds      1
   632                           
   633  007A                     _txiptr:
   634  007A                            ds      1
   635                           
   636  007B                     _txoptr:
   637  007B                            ds      1
   638                           
   639                           psect	bssBANK0,class=BANK0,space=1
   640                           global __pbssBANK0
   641  005C                     __pbssBANK0:
   642  005C                     _RTC_Counter:
   643  005C                            ds      2
   644                           
   645  005E                     _addressCount:
   646  005E                            ds      1
   647                           
   648  005F                     _addressCurrent:
   649  005F                            ds      1
   650                           
   651  0060                     _currentOrientation:
   652  0060                            ds      1
   653                           
   654  0061                     _lastMove:
   655  0061                            ds      1
   656                           
   657  0062                     _victimZone:
   658  0062                            ds      1
   659                           
   660                           psect	dataBANK0,class=BANK0,space=1
   661                           global __pdataBANK0
   662  0063                     __pdataBANK0:
   663                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
   664                           	line	7
   665  0063                     _finalX:
   666  0063                            ds      1
   667                           
   668                           psect	dataBANK0
   669                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
   670                           	line	51
   671  0064                     _xCoord:
   672  0064                            ds      1
   673                           
   674                           psect	dataBANK0
   675                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
   676                           	line	52
   677  0065                     _yCoord:
   678  0065                            ds      1
   679                           
   680                           psect	bssBANK1,class=BANK1,space=1
   681                           global __pbssBANK1
   682  00A0                     __pbssBANK1:
   683  00A0                     _rxfifo:
   684  00A0                            ds      16
   685                           
   686  00B0                     _txfifo:
   687  00B0                            ds      16
   688                           
   689  00C0                     _start:
   690  00C0                            ds      3
   691                           
   692  00C3                     _closestObject:
   693  00C3                            ds      2
   694                           
   695  00C5                     _node:
   696  00C5                            ds      1
   697                           
   698  00C6                     _ser_tmp:
   699  00C6                            ds      1
   700                           
   701  00C7                     _stepPosition:
   702  00C7                            ds      1
   703                           
   704  00C8                     _stepsToPerpendicular:
   705  00C8                            ds      1
   706                           
   707  00C9                     _vicZone:
   708  00C9                            ds      1
   709                           
   710  00CA                     _wayWent:
   711  00CA                            ds      1
   712                           
   713                           psect	dataBANK1,class=BANK1,space=1
   714                           global __pdataBANK1
   715  00E2                     __pdataBANK1:
   716                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
   717                           	line	8
   718  00E2                     _finalY:
   719  00E2                            ds      1
   720                           
   721                           psect	dataBANK1
   722                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
   723                           	line	14
   724  00E3                     _somethingInTheWay:
   725  00E3                            ds      1
   726                           
   727                           psect	dataBANK1
   728                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
   729  00E4                     _beep:
   730  00E4                            ds      5
   731                           
   732                           psect	dataBANK3,class=BANK3,space=1
   733                           global __pdataBANK3
   734  0190                     __pdataBANK3:
   735                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
   736                           	line	12
   737  0190                     _finalCountdown:
   738  0190                            ds      27
   739                           
   740                           psect	dataBANK3
   741                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
   742                           	line	10
   743  01AB                     _superMarioBros:
   744  01AB                            ds      25
   745                           
   746                           psect	dataBANK3
   747                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
   748                           	line	13
   749  01C4                     _champions:
   750  01C4                            ds      21
   751                           
   752                           psect	dataBANK2,class=BANK2,space=1
   753                           global __pdataBANK2
   754  0110                     __pdataBANK2:
   755                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
   756                           	line	11
   757  0110                     _lookingForU2:
   758  0110                            ds      29
   759                           
   760                           psect clrtext,class=CODE,delta=2
   761                           global clear_ram
   762                           ;	Called with FSR containing the base address, and
   763                           ;	W with the last address+1
   764  112E                     clear_ram:
   765  112E  0064               	clrwdt			;clear the watchdog before getting into this loop
   766  112F                     clrloop:
   767  112F  0180               	clrf	indf		;clear RAM location pointed to by FSR
   768  1130  0A84               	incf	fsr,f		;increment pointer
   769  1131  0604               	xorwf	fsr,w		;XOR with final address
   770  1132  1903               	btfsc	status,2	;have we reached the end yet?
   771  1133  3400               	retlw	0		;all done for this memory range, return
   772  1134  0604               	xorwf	fsr,w		;XOR again to restore value
   773  1135  292F               	goto	clrloop		;do the next byte
   774                           
   775                           ; Clear objects allocated to BITCOMMON
   776                           psect cinit,class=CODE,delta=2
   777  0823  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   778  0824  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   779                           ; Clear objects allocated to COMMON
   780                           psect cinit,class=CODE,delta=2
   781  0825  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   782  0826  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   783  0827  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   784  0828  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   785                           ; Clear objects allocated to BANK0
   786                           psect cinit,class=CODE,delta=2
   787  0829  01DC               	clrf	((__pbssBANK0)+0)&07Fh
   788  082A  01DD               	clrf	((__pbssBANK0)+1)&07Fh
   789  082B  01DE               	clrf	((__pbssBANK0)+2)&07Fh
   790  082C  01DF               	clrf	((__pbssBANK0)+3)&07Fh
   791  082D  01E0               	clrf	((__pbssBANK0)+4)&07Fh
   792  082E  01E1               	clrf	((__pbssBANK0)+5)&07Fh
   793  082F  01E2               	clrf	((__pbssBANK0)+6)&07Fh
   794                           ; Clear objects allocated to BANK1
   795                           psect cinit,class=CODE,delta=2
   796  0830  1383               	bcf	status, 7	;select IRP bank0
   797  0831  30A0               	movlw	low(__pbssBANK1)
   798  0832  0084               	movwf	fsr
   799  0833  30CB               	movlw	low((__pbssBANK1)+02Bh)
   800  0834  160A  118A  212E   	fcall	clear_ram
              120A  158A         
   801                           global btemp
   802                           psect inittext,class=CODE,delta=2
   803                           global init_fetch,btemp
   804                           ;	Called with low address in FSR and high address in W
   805  118C                     init_fetch:
   806  118C  087E               	movf btemp,w
   807  118D  008A               	movwf pclath
   808  118E  087F               	movf btemp+1,w
   809  118F  0082               	movwf pc
   810                           global init_ram
   811                           ;Called with:
   812                           ;	high address of idata address in btemp 
   813                           ;	low address of idata address in btemp+1 
   814                           ;	low address of data in FSR
   815                           ;	high address + 1 of data in btemp-1
   816  1190                     init_ram:
   817  1190  160A  118A  218C   	fcall init_fetch
              160A  118A         
   818  1195  0080               	movwf indf,f
   819  1196  0A84               	incf fsr,f
   820  1197  0804               	movf fsr,w
   821  1198  067D               	xorwf btemp-1,w
   822  1199  1903               	btfsc status,2
   823  119A  3400               	retlw 0
   824  119B  0AFF               	incf btemp+1,f
   825  119C  1903               	btfsc status,2
   826  119D  0AFE               	incf btemp,f
   827  119E  2990               	goto init_ram
   828                           ; Initialize objects allocated to BANK3
   829                           psect cinit,class=CODE,delta=2
   830                           global init_ram, __pidataBANK3
   831  0839  1783               	bsf	status, 7	;select IRP bank2
   832  083A  30D9               	movlw low(__pdataBANK3+73)
   833  083B  00FD               	movwf btemp-1,f
   834  083C  3017               	movlw high(__pidataBANK3)
   835  083D  00FE               	movwf btemp,f
   836  083E  306B               	movlw low(__pidataBANK3)
   837  083F  00FF               	movwf btemp+1,f
   838  0840  3090               	movlw low(__pdataBANK3)
   839  0841  0084               	movwf fsr,f
   840  0842  160A  118A  2190   	fcall init_ram
              120A  158A         
   841                           ; Initialize objects allocated to BANK2
   842                           psect cinit,class=CODE,delta=2
   843                           global init_ram, __pidataBANK2
   844  0847  302D               	movlw low(__pdataBANK2+29)
   845  0848  00FD               	movwf btemp-1,f
   846  0849  3012               	movlw high(__pidataBANK2)
   847  084A  00FE               	movwf btemp,f
   848  084B  3031               	movlw low(__pidataBANK2)
   849  084C  00FF               	movwf btemp+1,f
   850  084D  3010               	movlw low(__pdataBANK2)
   851  084E  0084               	movwf fsr,f
   852  084F  160A  118A  2190   	fcall init_ram
              120A  158A         
   853                           ; Initialize objects allocated to BANK1
   854                           psect cinit,class=CODE,delta=2
   855                           global init_ram, __pidataBANK1
   856  0854  1383               	bcf	status, 7	;select IRP bank0
   857  0855  30E9               	movlw low(__pdataBANK1+7)
   858  0856  00FD               	movwf btemp-1,f
   859  0857  3011               	movlw high(__pidataBANK1)
   860  0858  00FE               	movwf btemp,f
   861  0859  3027               	movlw low(__pidataBANK1)
   862  085A  00FF               	movwf btemp+1,f
   863  085B  30E2               	movlw low(__pdataBANK1)
   864  085C  0084               	movwf fsr,f
   865  085D  160A  118A  2190   	fcall init_ram
              120A  158A         
   866                           ; Initialize objects allocated to BANK0
   867                           psect cinit,class=CODE,delta=2
   868                           global init_ram, __pidataBANK0
   869  0862  3066               	movlw low(__pdataBANK0+3)
   870  0863  00FD               	movwf btemp-1,f
   871  0864  3007               	movlw high(__pidataBANK0)
   872  0865  00FE               	movwf btemp,f
   873  0866  30FC               	movlw low(__pidataBANK0)
   874  0867  00FF               	movwf btemp+1,f
   875  0868  3063               	movlw low(__pdataBANK0)
   876  0869  0084               	movwf fsr,f
   877  086A  160A  118A  2190   	fcall init_ram
              120A  158A         
   878                           psect cinit,class=CODE,delta=2
   879                           global end_of_initialization
   880                           
   881                           ;End of C runtime variable initialization code
   882                           
   883  086F                     end_of_initialization:
   884  086F  0183               clrf status
   885  0870  120A  118A  2815   ljmp _main	;jump to C main() function
   886                           psect	cstackBANK1,class=BANK1,space=1
   887                           global __pcstackBANK1
   888  00CB                     __pcstackBANK1:
   889                           	global	?___ftadd
   890  00CB                     ?___ftadd:	; 3 bytes @ 0x0
   891                           	global	___ftadd@f1
   892  00CB                     ___ftadd@f1:	; 3 bytes @ 0x0
   893  00CB                     	ds	3
   894                           	global	___ftadd@f2
   895  00CE                     ___ftadd@f2:	; 3 bytes @ 0x3
   896  00CE                     	ds	3
   897                           	global	___ftadd@sign
   898  00D1                     ___ftadd@sign:	; 1 bytes @ 0x6
   899  00D1                     	ds	1
   900                           	global	___ftadd@exp2
   901  00D2                     ___ftadd@exp2:	; 1 bytes @ 0x7
   902  00D2                     	ds	1
   903                           	global	___ftadd@exp1
   904  00D3                     ___ftadd@exp1:	; 1 bytes @ 0x8
   905  00D3                     	ds	1
   906                           	global	??_goParallel
   907  00D4                     ??_goParallel:	; 0 bytes @ 0x9
   908  00D4                     	ds	2
   909                           	global	goParallel@stepsToWall
   910  00D6                     goParallel@stepsToWall:	; 1 bytes @ 0xB
   911  00D6                     	ds	1
   912                           	global	goParallel@shortestDistance
   913  00D7                     goParallel@shortestDistance:	; 2 bytes @ 0xC
   914  00D7                     	ds	2
   915                           	global	goParallel@angleHighByte
   916  00D9                     goParallel@angleHighByte:	; 1 bytes @ 0xE
   917  00D9                     	ds	1
   918                           	global	goParallel@angleLowByte
   919  00DA                     goParallel@angleLowByte:	; 1 bytes @ 0xF
   920  00DA                     	ds	1
   921                           	global	goParallel@distance
   922  00DB                     goParallel@distance:	; 2 bytes @ 0x10
   923  00DB                     	ds	2
   924                           	global	goParallel@step
   925  00DD                     goParallel@step:	; 2 bytes @ 0x12
   926  00DD                     	ds	2
   927                           	global	goParallel@angleParallelToWall
   928  00DF                     goParallel@angleParallelToWall:	; 2 bytes @ 0x14
   929  00DF                     	ds	2
   930                           	global	??_main
   931  00E1                     ??_main:	; 0 bytes @ 0x16
   932  00E1                     	ds	1
   933                           psect	cstackCOMMON,class=COMMON,space=1
   934                           global __pcstackCOMMON
   935  0072                     __pcstackCOMMON:
   936                           	global	?_lcd_write_string
   937  0072                     ?_lcd_write_string:	; 0 bytes @ 0x0
   938                           	global	?_ser_putch
   939  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   940                           	global	?_goReverse
   941  0072                     ?_goReverse:	; 0 bytes @ 0x0
   942                           	global	?_turnRight90
   943  0072                     ?_turnRight90:	; 0 bytes @ 0x0
   944                           	global	?_updateOrientation
   945  0072                     ?_updateOrientation:	; 0 bytes @ 0x0
   946                           	global	?_turnLeft90
   947  0072                     ?_turnLeft90:	; 0 bytes @ 0x0
   948                           	global	?_turnAround
   949  0072                     ?_turnAround:	; 0 bytes @ 0x0
   950                           	global	?_initIRobot
   951  0072                     ?_initIRobot:	; 0 bytes @ 0x0
   952                           	global	?_findWall
   953  0072                     ?_findWall:	; 1 bit 
   954                           	global	?_init_adc
   955  0072                     ?_init_adc:	; 0 bytes @ 0x0
   956                           	global	?_lcd_write_control
   957  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   958                           	global	?_lcd_write_data
   959  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   960                           	global	?_lcd_set_cursor
   961  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   962                           	global	?_lcd_write_1_digit_bcd
   963  0072                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
   964                           	global	?_lcd_init
   965  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   966                           	global	?_ser_isrx
   967  0072                     ?_ser_isrx:	; 1 bit 
   968                           	global	?_ser_init
   969  0072                     ?_ser_init:	; 0 bytes @ 0x0
   970                           	global	?_play_iCreate_song
   971  0072                     ?_play_iCreate_song:	; 0 bytes @ 0x0
   972                           	global	?_initSongs
   973  0072                     ?_initSongs:	; 0 bytes @ 0x0
   974                           	global	?_getSuccessfulDrive
   975  0072                     ?_getSuccessfulDrive:	; 1 bit 
   976                           	global	?_goBackward
   977  0072                     ?_goBackward:	; 0 bytes @ 0x0
   978                           	global	?_goForward
   979  0072                     ?_goForward:	; 0 bytes @ 0x0
   980                           	global	?_goLeft
   981  0072                     ?_goLeft:	; 0 bytes @ 0x0
   982                           	global	?_goRight
   983  0072                     ?_goRight:	; 0 bytes @ 0x0
   984                           	global	?_frontWallCorrect
   985  0072                     ?_frontWallCorrect:	; 0 bytes @ 0x0
   986                           	global	?_isr1
   987  0072                     ?_isr1:	; 0 bytes @ 0x0
   988                           	global	?_init
   989  0072                     ?_init:	; 0 bytes @ 0x0
   990                           	global	?_checkForFinalDestination
   991  0072                     ?_checkForFinalDestination:	; 0 bytes @ 0x0
   992                           	global	?_lookForVictim
   993  0072                     ?_lookForVictim:	; 0 bytes @ 0x0
   994                           	global	?_findWalls
   995  0072                     ?_findWalls:	; 0 bytes @ 0x0
   996                           	global	?_goParallel
   997  0072                     ?_goParallel:	; 0 bytes @ 0x0
   998                           	global	?_goToNextCell
   999  0072                     ?_goToNextCell:	; 0 bytes @ 0x0
  1000                           	global	?_updateLocation
  1001  0072                     ?_updateLocation:	; 0 bytes @ 0x0
  1002                           	global	?_updateNode
  1003  0072                     ?_updateNode:	; 0 bytes @ 0x0
  1004                           	global	?_checkIfHome
  1005  0072                     ?_checkIfHome:	; 0 bytes @ 0x0
  1006                           	global	?_main
  1007  0072                     ?_main:	; 0 bytes @ 0x0
  1008                           	global	?_getCurrentX
  1009  0072                     ?_getCurrentX:	; 1 bytes @ 0x0
  1010                           	global	?_getCurrentY
  1011  0072                     ?_getCurrentY:	; 1 bytes @ 0x0
  1012                           	global	?_getFinalX
  1013  0072                     ?_getFinalX:	; 1 bytes @ 0x0
  1014                           	global	?_getFinalY
  1015  0072                     ?_getFinalY:	; 1 bytes @ 0x0
  1016                           	global	?_ser_getch
  1017  0072                     ?_ser_getch:	; 1 bytes @ 0x0
  1018                           	global	?_getOrientation
  1019  0072                     ?_getOrientation:	; 1 bytes @ 0x0
  1020                           	global	?_getSomethingInTheWay
  1021  0072                     ?_getSomethingInTheWay:	; 1 bytes @ 0x0
  1022                           	global	?___lwmod
  1023  0072                     ?___lwmod:	; 2 bytes @ 0x0
  1024                           	global	___lwmod@divisor
  1025  0072                     ___lwmod@divisor:	; 2 bytes @ 0x0
  1026  0072                     	ds	2
  1027                           	global	___lwmod@dividend
  1028  0074                     ___lwmod@dividend:	; 2 bytes @ 0x2
  1029  0074                     	ds	2
  1030                           	global	??___lwmod
  1031  0076                     ??___lwmod:	; 0 bytes @ 0x4
  1032  0076                     	ds	1
  1033                           	global	___lwmod@counter
  1034  0077                     ___lwmod@counter:	; 1 bytes @ 0x5
  1035  0077                     	ds	1
  1036                           psect	cstackBANK0,class=BANK0,space=1
  1037                           global __pcstackBANK0
  1038  0020                     __pcstackBANK0:
  1039                           	global	??_isr1
  1040  0020                     ??_isr1:	; 0 bytes @ 0x0
  1041  0020                     	ds	10
  1042                           	global	??_ser_putch
  1043  002A                     ??_ser_putch:	; 0 bytes @ 0xA
  1044                           	global	??_updateOrientation
  1045  002A                     ??_updateOrientation:	; 0 bytes @ 0xA
  1046                           	global	??_getCurrentX
  1047  002A                     ??_getCurrentX:	; 0 bytes @ 0xA
  1048                           	global	??_getCurrentY
  1049  002A                     ??_getCurrentY:	; 0 bytes @ 0xA
  1050                           	global	??_init_adc
  1051  002A                     ??_init_adc:	; 0 bytes @ 0xA
  1052                           	global	??_lcd_write_control
  1053  002A                     ??_lcd_write_control:	; 0 bytes @ 0xA
  1054                           	global	??_lcd_write_data
  1055  002A                     ??_lcd_write_data:	; 0 bytes @ 0xA
  1056                           	global	??_getFinalX
  1057  002A                     ??_getFinalX:	; 0 bytes @ 0xA
  1058                           	global	??_getFinalY
  1059  002A                     ??_getFinalY:	; 0 bytes @ 0xA
  1060                           	global	??_ser_isrx
  1061  002A                     ??_ser_isrx:	; 0 bytes @ 0xA
  1062                           	global	??_ser_getch
  1063  002A                     ??_ser_getch:	; 0 bytes @ 0xA
  1064                           	global	??_ser_init
  1065  002A                     ??_ser_init:	; 0 bytes @ 0xA
  1066                           	global	?_rotateIR
  1067  002A                     ?_rotateIR:	; 0 bytes @ 0xA
  1068                           	global	??_getOrientation
  1069  002A                     ??_getOrientation:	; 0 bytes @ 0xA
  1070                           	global	??_getSomethingInTheWay
  1071  002A                     ??_getSomethingInTheWay:	; 0 bytes @ 0xA
  1072                           	global	??_getSuccessfulDrive
  1073  002A                     ??_getSuccessfulDrive:	; 0 bytes @ 0xA
  1074                           	global	??_updateNode
  1075  002A                     ??_updateNode:	; 0 bytes @ 0xA
  1076                           	global	?_getVictimZone
  1077  002A                     ?_getVictimZone:	; 1 bytes @ 0xA
  1078                           	global	?___wmul
  1079  002A                     ?___wmul:	; 2 bytes @ 0xA
  1080                           	global	?___ftpack
  1081  002A                     ?___ftpack:	; 3 bytes @ 0xA
  1082                           	global	getVictimZone@victimY
  1083  002A                     getVictimZone@victimY:	; 1 bytes @ 0xA
  1084                           	global	rotateIR@direction
  1085  002A                     rotateIR@direction:	; 1 bytes @ 0xA
  1086                           	global	___wmul@multiplier
  1087  002A                     ___wmul@multiplier:	; 2 bytes @ 0xA
  1088                           	global	___ftpack@arg
  1089  002A                     ___ftpack@arg:	; 3 bytes @ 0xA
  1090  002A                     	ds	1
  1091                           	global	??_getVictimZone
  1092  002B                     ??_getVictimZone:	; 0 bytes @ 0xB
  1093                           	global	??_rotateIR
  1094  002B                     ??_rotateIR:	; 0 bytes @ 0xB
  1095                           	global	ser_getch@c
  1096  002B                     ser_getch@c:	; 1 bytes @ 0xB
  1097                           	global	ser_putch@c
  1098  002B                     ser_putch@c:	; 1 bytes @ 0xB
  1099                           	global	updateOrientation@moved
  1100  002B                     updateOrientation@moved:	; 1 bytes @ 0xB
  1101  002B                     	ds	1
  1102                           	global	?_waitFor
  1103  002C                     ?_waitFor:	; 0 bytes @ 0xC
  1104                           	global	??_initIRobot
  1105  002C                     ??_initIRobot:	; 0 bytes @ 0xC
  1106                           	global	?_ser_putArr
  1107  002C                     ?_ser_putArr:	; 0 bytes @ 0xC
  1108                           	global	??_play_iCreate_song
  1109  002C                     ??_play_iCreate_song:	; 0 bytes @ 0xC
  1110                           	global	?_drive
  1111  002C                     ?_drive:	; 0 bytes @ 0xC
  1112                           	global	lcd_write_control@databyte
  1113  002C                     lcd_write_control@databyte:	; 1 bytes @ 0xC
  1114                           	global	lcd_write_data@databyte
  1115  002C                     lcd_write_data@databyte:	; 1 bytes @ 0xC
  1116                           	global	getVictimZone@victimX
  1117  002C                     getVictimZone@victimX:	; 1 bytes @ 0xC
  1118                           	global	play_iCreate_song@song
  1119  002C                     play_iCreate_song@song:	; 1 bytes @ 0xC
  1120                           	global	drive@lowByteSpeed
  1121  002C                     drive@lowByteSpeed:	; 1 bytes @ 0xC
  1122                           	global	waitFor@highByte
  1123  002C                     waitFor@highByte:	; 1 bytes @ 0xC
  1124                           	global	ser_putArr@array
  1125  002C                     ser_putArr@array:	; 2 bytes @ 0xC
  1126                           	global	___wmul@multiplicand
  1127  002C                     ___wmul@multiplicand:	; 2 bytes @ 0xC
  1128  002C                     	ds	1
  1129                           	global	??_lcd_write_string
  1130  002D                     ??_lcd_write_string:	; 0 bytes @ 0xD
  1131                           	global	??_lcd_set_cursor
  1132  002D                     ??_lcd_set_cursor:	; 0 bytes @ 0xD
  1133                           	global	??_lcd_write_1_digit_bcd
  1134  002D                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0xD
  1135                           	global	??_lcd_init
  1136  002D                     ??_lcd_init:	; 0 bytes @ 0xD
  1137                           	global	lcd_set_cursor@address
  1138  002D                     lcd_set_cursor@address:	; 1 bytes @ 0xD
  1139                           	global	lcd_write_1_digit_bcd@data
  1140  002D                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0xD
  1141                           	global	rotateIR@steps
  1142  002D                     rotateIR@steps:	; 1 bytes @ 0xD
  1143                           	global	drive@highByteRadius
  1144  002D                     drive@highByteRadius:	; 1 bytes @ 0xD
  1145                           	global	waitFor@lowByte
  1146  002D                     waitFor@lowByte:	; 1 bytes @ 0xD
  1147                           	global	___ftpack@exp
  1148  002D                     ___ftpack@exp:	; 1 bytes @ 0xD
  1149  002D                     	ds	1
  1150                           	global	??_waitFor
  1151  002E                     ??_waitFor:	; 0 bytes @ 0xE
  1152                           	global	?_findFinalDestination
  1153  002E                     ?_findFinalDestination:	; 0 bytes @ 0xE
  1154                           	global	??_checkForFinalDestination
  1155  002E                     ??_checkForFinalDestination:	; 0 bytes @ 0xE
  1156                           	global	??_lookForVictim
  1157  002E                     ??_lookForVictim:	; 0 bytes @ 0xE
  1158                           	global	??_updateLocation
  1159  002E                     ??_updateLocation:	; 0 bytes @ 0xE
  1160                           	global	??___wmul
  1161  002E                     ??___wmul:	; 0 bytes @ 0xE
  1162                           	global	lcd_write_string@s
  1163  002E                     lcd_write_string@s:	; 1 bytes @ 0xE
  1164                           	global	findFinalDestination@virtualWallY
  1165  002E                     findFinalDestination@virtualWallY:	; 1 bytes @ 0xE
  1166                           	global	rotateIR@stepNum
  1167  002E                     rotateIR@stepNum:	; 1 bytes @ 0xE
  1168                           	global	drive@lowByteRadius
  1169  002E                     drive@lowByteRadius:	; 1 bytes @ 0xE
  1170                           	global	___ftpack@sign
  1171  002E                     ___ftpack@sign:	; 1 bytes @ 0xE
  1172                           	global	ser_putArr@length
  1173  002E                     ser_putArr@length:	; 2 bytes @ 0xE
  1174                           	global	___wmul@product
  1175  002E                     ___wmul@product:	; 2 bytes @ 0xE
  1176  002E                     	ds	1
  1177                           	global	??___ftpack
  1178  002F                     ??___ftpack:	; 0 bytes @ 0xF
  1179                           	global	??_drive
  1180  002F                     ??_drive:	; 0 bytes @ 0xF
  1181                           	global	findFinalDestination@robotOrientation
  1182  002F                     findFinalDestination@robotOrientation:	; 1 bytes @ 0xF
  1183  002F                     	ds	1
  1184                           	global	??_findFinalDestination
  1185  0030                     ??_findFinalDestination:	; 0 bytes @ 0x10
  1186                           	global	??_ser_putArr
  1187  0030                     ??_ser_putArr:	; 0 bytes @ 0x10
  1188                           	global	?___awdiv
  1189  0030                     ?___awdiv:	; 2 bytes @ 0x10
  1190                           	global	lookForVictim@victim
  1191  0030                     lookForVictim@victim:	; 1 bytes @ 0x10
  1192                           	global	___awdiv@divisor
  1193  0030                     ___awdiv@divisor:	; 2 bytes @ 0x10
  1194  0030                     	ds	1
  1195                           	global	findFinalDestination@virtualWallX
  1196  0031                     findFinalDestination@virtualWallX:	; 1 bytes @ 0x11
  1197                           	global	waitFor@type
  1198  0031                     waitFor@type:	; 1 bytes @ 0x11
  1199  0031                     	ds	1
  1200                           	global	?___fttol
  1201  0032                     ?___fttol:	; 4 bytes @ 0x12
  1202                           	global	drive@highByteSpeed
  1203  0032                     drive@highByteSpeed:	; 1 bytes @ 0x12
  1204                           	global	___awdiv@dividend
  1205  0032                     ___awdiv@dividend:	; 2 bytes @ 0x12
  1206                           	global	___fttol@f1
  1207  0032                     ___fttol@f1:	; 3 bytes @ 0x12
  1208  0032                     	ds	1
  1209                           	global	??_goReverse
  1210  0033                     ??_goReverse:	; 0 bytes @ 0x13
  1211                           	global	??_turnRight90
  1212  0033                     ??_turnRight90:	; 0 bytes @ 0x13
  1213                           	global	??_turnLeft90
  1214  0033                     ??_turnLeft90:	; 0 bytes @ 0x13
  1215                           	global	??_turnAround
  1216  0033                     ??_turnAround:	; 0 bytes @ 0x13
  1217                           	global	??_checkIfHome
  1218  0033                     ??_checkIfHome:	; 0 bytes @ 0x13
  1219                           	global	ser_putArr@i
  1220  0033                     ser_putArr@i:	; 2 bytes @ 0x13
  1221  0033                     	ds	1
  1222                           	global	??___awdiv
  1223  0034                     ??___awdiv:	; 0 bytes @ 0x14
  1224  0034                     	ds	1
  1225                           	global	??_initSongs
  1226  0035                     ??_initSongs:	; 0 bytes @ 0x15
  1227                           	global	??_init
  1228  0035                     ??_init:	; 0 bytes @ 0x15
  1229                           	global	___awdiv@counter
  1230  0035                     ___awdiv@counter:	; 1 bytes @ 0x15
  1231  0035                     	ds	1
  1232                           	global	?_driveForDistance
  1233  0036                     ?_driveForDistance:	; 0 bytes @ 0x16
  1234                           	global	??___fttol
  1235  0036                     ??___fttol:	; 0 bytes @ 0x16
  1236                           	global	___awdiv@sign
  1237  0036                     ___awdiv@sign:	; 1 bytes @ 0x16
  1238                           	global	driveForDistance@moveDistance
  1239  0036                     driveForDistance@moveDistance:	; 2 bytes @ 0x16
  1240  0036                     	ds	1
  1241                           	global	___awdiv@quotient
  1242  0037                     ___awdiv@quotient:	; 2 bytes @ 0x17
  1243  0037                     	ds	1
  1244                           	global	??_driveForDistance
  1245  0038                     ??_driveForDistance:	; 0 bytes @ 0x18
  1246  0038                     	ds	1
  1247                           	global	?_adc_read
  1248  0039                     ?_adc_read:	; 2 bytes @ 0x19
  1249  0039                     	ds	1
  1250                           	global	___fttol@sign1
  1251  003A                     ___fttol@sign1:	; 1 bytes @ 0x1A
  1252                           	global	driveForDistance@deltaDistance
  1253  003A                     driveForDistance@deltaDistance:	; 2 bytes @ 0x1A
  1254  003A                     	ds	1
  1255                           	global	??_adc_read
  1256  003B                     ??_adc_read:	; 0 bytes @ 0x1B
  1257                           	global	___fttol@lval
  1258  003B                     ___fttol@lval:	; 4 bytes @ 0x1B
  1259  003B                     	ds	1
  1260                           	global	driveForDistance@distance
  1261  003C                     driveForDistance@distance:	; 2 bytes @ 0x1C
  1262  003C                     	ds	2
  1263                           	global	driveForDistance@high
  1264  003E                     driveForDistance@high:	; 1 bytes @ 0x1E
  1265  003E                     	ds	1
  1266                           	global	driveForDistance@low
  1267  003F                     driveForDistance@low:	; 1 bytes @ 0x1F
  1268                           	global	___fttol@exp1
  1269  003F                     ___fttol@exp1:	; 1 bytes @ 0x1F
  1270                           	global	adc_read@adc_value
  1271  003F                     adc_read@adc_value:	; 2 bytes @ 0x1F
  1272  003F                     	ds	1
  1273                           	global	?___lbtoft
  1274  0040                     ?___lbtoft:	; 3 bytes @ 0x20
  1275                           	global	driveForDistance@virtualWall
  1276  0040                     driveForDistance@virtualWall:	; 1 bytes @ 0x20
  1277  0040                     	ds	1
  1278                           	global	?_convert
  1279  0041                     ?_convert:	; 2 bytes @ 0x21
  1280                           	global	driveForDistance@cliff
  1281  0041                     driveForDistance@cliff:	; 1 bytes @ 0x21
  1282                           	global	convert@adc_value
  1283  0041                     convert@adc_value:	; 2 bytes @ 0x21
  1284  0041                     	ds	1
  1285                           	global	??_goBackward
  1286  0042                     ??_goBackward:	; 0 bytes @ 0x22
  1287                           	global	??_goForward
  1288  0042                     ??_goForward:	; 0 bytes @ 0x22
  1289                           	global	??_goLeft
  1290  0042                     ??_goLeft:	; 0 bytes @ 0x22
  1291                           	global	??_goRight
  1292  0042                     ??_goRight:	; 0 bytes @ 0x22
  1293  0042                     	ds	1
  1294                           	global	??_convert
  1295  0043                     ??_convert:	; 0 bytes @ 0x23
  1296                           	global	??_goToNextCell
  1297  0043                     ??_goToNextCell:	; 0 bytes @ 0x23
  1298                           	global	??___lbtoft
  1299  0043                     ??___lbtoft:	; 0 bytes @ 0x23
  1300  0043                     	ds	2
  1301                           	global	?_adc_read_channel
  1302  0045                     ?_adc_read_channel:	; 2 bytes @ 0x25
  1303  0045                     	ds	2
  1304                           	global	??_adc_read_channel
  1305  0047                     ??_adc_read_channel:	; 0 bytes @ 0x27
  1306                           	global	___lbtoft@c
  1307  0047                     ___lbtoft@c:	; 1 bytes @ 0x27
  1308  0047                     	ds	1
  1309                           	global	?___ftmul
  1310  0048                     ?___ftmul:	; 3 bytes @ 0x28
  1311                           	global	adc_read_channel@channel
  1312  0048                     adc_read_channel@channel:	; 1 bytes @ 0x28
  1313                           	global	___ftmul@f1
  1314  0048                     ___ftmul@f1:	; 3 bytes @ 0x28
  1315  0048                     	ds	1
  1316                           	global	?_readIR
  1317  0049                     ?_readIR:	; 2 bytes @ 0x29
  1318  0049                     	ds	2
  1319                           	global	??_readIR
  1320  004B                     ??_readIR:	; 0 bytes @ 0x2B
  1321                           	global	readIR@cm
  1322  004B                     readIR@cm:	; 2 bytes @ 0x2B
  1323                           	global	___ftmul@f2
  1324  004B                     ___ftmul@f2:	; 3 bytes @ 0x2B
  1325  004B                     	ds	2
  1326                           	global	??_findWall
  1327  004D                     ??_findWall:	; 0 bytes @ 0x2D
  1328                           	global	??_frontWallCorrect
  1329  004D                     ??_frontWallCorrect:	; 0 bytes @ 0x2D
  1330                           	global	??_findWalls
  1331  004D                     ??_findWalls:	; 0 bytes @ 0x2D
  1332  004D                     	ds	1
  1333                           	global	??___ftmul
  1334  004E                     ??___ftmul:	; 0 bytes @ 0x2E
  1335  004E                     	ds	1
  1336                           	global	frontWallCorrect@distToWall
  1337  004F                     frontWallCorrect@distToWall:	; 2 bytes @ 0x2F
  1338  004F                     	ds	3
  1339                           	global	___ftmul@exp
  1340  0052                     ___ftmul@exp:	; 1 bytes @ 0x32
  1341  0052                     	ds	1
  1342                           	global	___ftmul@f3_as_product
  1343  0053                     ___ftmul@f3_as_product:	; 3 bytes @ 0x33
  1344  0053                     	ds	3
  1345                           	global	___ftmul@cntr
  1346  0056                     ___ftmul@cntr:	; 1 bytes @ 0x36
  1347  0056                     	ds	1
  1348                           	global	___ftmul@sign
  1349  0057                     ___ftmul@sign:	; 1 bytes @ 0x37
  1350  0057                     	ds	1
  1351                           	global	??___ftadd
  1352  0058                     ??___ftadd:	; 0 bytes @ 0x38
  1353  0058                     	ds	4
  1354 ;;Data sizes: Strings 63, constant 0, data 112, bss 54, persistent 0 stack 0
  1355 ;;Auto spaces:   Size  Autos    Used
  1356 ;; COMMON          14      6      12
  1357 ;; BANK0           80     60      70
  1358 ;; BANK1           80     23      73
  1359 ;; BANK3           96      0      73
  1360 ;; BANK2           96      0      29
  1361                           
  1362 ;;
  1363 ;; Pointer list with targets:
  1364                           
  1365 ;; ?___lbtoft	float  size(1) Largest target is 0
  1366 ;;
  1367 ;; ?___ftpack	float  size(1) Largest target is 0
  1368 ;;
  1369 ;; ?___fttol	long  size(1) Largest target is 0
  1370 ;;
  1371 ;; ?___ftmul	float  size(1) Largest target is 0
  1372 ;;
  1373 ;; ?___ftadd	float  size(1) Largest target is 0
  1374 ;;
  1375 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1376 ;;
  1377 ;; ?_readIR	int  size(1) Largest target is 0
  1378 ;;
  1379 ;; ?_convert	int  size(1) Largest target is 2
  1380 ;;		 -> convert@adc_value(BANK0[2]), 
  1381 ;;
  1382 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1383 ;;
  1384 ;; ?_adc_read	int  size(1) Largest target is 0
  1385 ;;
  1386 ;; ?___awdiv	int  size(1) Largest target is 0
  1387 ;;
  1388 ;; ?_adc_read_channel	int  size(1) Largest target is 0
  1389 ;;
  1390 ;; ser_putArr@array	PTR unsigned char  size(2) Largest target is 29
  1391 ;;		 -> beep(BANK1[5]), champions(BANK3[21]), lookingForU2(BANK2[29]), superMarioBros(BANK3[25]), 
  1392 ;;		 -> finalCountdown(BANK3[27]), 
  1393 ;;
  1394 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 17
  1395 ;;		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[14]), STR_1(CODE[15]), 
  1396 ;;
  1397                           
  1398                           
  1399 ;;
  1400 ;; Critical Paths under _main in COMMON
  1401 ;;
  1402 ;;   None.
  1403 ;;
  1404 ;; Critical Paths under _isr1 in COMMON
  1405 ;;
  1406 ;;   _isr1->___lwmod
  1407 ;;
  1408 ;; Critical Paths under _main in BANK0
  1409 ;;
  1410 ;;   _goToNextCell->_goRight
  1411 ;;   _goToNextCell->_goBackward
  1412 ;;   _goRight->_driveForDistance
  1413 ;;   _goLeft->_driveForDistance
  1414 ;;   _goForward->_driveForDistance
  1415 ;;   _goBackward->_driveForDistance
  1416 ;;   _goParallel->___ftadd
  1417 ;;   _findWall->_readIR
  1418 ;;   _frontWallCorrect->_readIR
  1419 ;;   _driveForDistance->_goReverse
  1420 ;;   _driveForDistance->_turnRight90
  1421 ;;   _driveForDistance->_turnLeft90
  1422 ;;   _updateLocation->_lcd_set_cursor
  1423 ;;   _updateLocation->_lcd_write_1_digit_bcd
  1424 ;;   _lookForVictim->_lcd_set_cursor
  1425 ;;   _lookForVictim->_lcd_write_1_digit_bcd
  1426 ;;   _checkForFinalDestination->_lcd_set_cursor
  1427 ;;   _goReverse->_drive
  1428 ;;   _readIR->_adc_read_channel
  1429 ;;   _findFinalDestination->_lcd_set_cursor
  1430 ;;   _findFinalDestination->_lcd_write_1_digit_bcd
  1431 ;;   _checkIfHome->_drive
  1432 ;;   _turnAround->_drive
  1433 ;;   _turnLeft90->_drive
  1434 ;;   _turnRight90->_drive
  1435 ;;   _initSongs->_ser_putArr
  1436 ;;   _lcd_init->_lcd_write_control
  1437 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
  1438 ;;   _lcd_set_cursor->_lcd_write_control
  1439 ;;   _lcd_write_string->_lcd_write_data
  1440 ;;   _adc_read_channel->_convert
  1441 ;;   ___lbtoft->___fttol
  1442 ;;   ___ftmul->___lbtoft
  1443 ;;   ___ftadd->___ftmul
  1444 ;;   _initIRobot->_ser_putch
  1445 ;;   _waitFor->_ser_putch
  1446 ;;   _drive->_ser_putch
  1447 ;;   _convert->_adc_read
  1448 ;;   _play_iCreate_song->_ser_putch
  1449 ;;   _ser_putArr->_ser_putch
  1450 ;;   _adc_read->___awdiv
  1451 ;;   ___awdiv->___wmul
  1452 ;;   ___fttol->___ftpack
  1453 ;;
  1454 ;; Critical Paths under _isr1 in BANK0
  1455 ;;
  1456 ;;   None.
  1457 ;;
  1458 ;; Critical Paths under _main in BANK1
  1459 ;;
  1460 ;;   _main->_goParallel
  1461 ;;   _goParallel->___ftadd
  1462 ;;
  1463 ;; Critical Paths under _isr1 in BANK1
  1464 ;;
  1465 ;;   None.
  1466 ;;
  1467 ;; Critical Paths under _main in BANK3
  1468 ;;
  1469 ;;   None.
  1470 ;;
  1471 ;; Critical Paths under _isr1 in BANK3
  1472 ;;
  1473 ;;   None.
  1474 ;;
  1475 ;; Critical Paths under _main in BANK2
  1476 ;;
  1477 ;;   None.
  1478 ;;
  1479 ;; Critical Paths under _isr1 in BANK2
  1480 ;;
  1481 ;;   None.
  1482                           
  1483 ;;
  1484 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1485 ;;
  1486                           
  1487 ;;
  1488 ;;Call Graph Tables:
  1489 ;;
  1490 ;; ---------------------------------------------------------------------------------
  1491 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1492 ;; ---------------------------------------------------------------------------------
  1493 ;; (0) _main                                                 1     1      0   26617
  1494 ;;                                             22 BANK1      1     1      0
  1495 ;;                               _init
  1496 ;;                              _drive
  1497 ;;                     _lcd_set_cursor
  1498 ;;                   _lcd_write_string
  1499 ;;                          _findWalls
  1500 ;;                         _turnAround
  1501 ;;                         _turnLeft90
  1502 ;;                        _turnRight90
  1503 ;;                     _lcd_write_data
  1504 ;;                  _play_iCreate_song
  1505 ;;                           _rotateIR
  1506 ;;           _checkForFinalDestination
  1507 ;;                      _lookForVictim
  1508 ;;                         _goParallel
  1509 ;;                   _frontWallCorrect
  1510 ;;                       _goToNextCell
  1511 ;;                            _goRight
  1512 ;;                     _getOrientation
  1513 ;;                          _goForward
  1514 ;;                             _goLeft
  1515 ;;                 _getSuccessfulDrive
  1516 ;;                     _updateLocation
  1517 ;;                         _updateNode
  1518 ;;                        _checkIfHome
  1519 ;; ---------------------------------------------------------------------------------
  1520 ;; (1) _goToNextCell                                         0     0      0    9170
  1521 ;;               _getSomethingInTheWay
  1522 ;;                             _goLeft
  1523 ;;                          _goForward
  1524 ;;                            _goRight
  1525 ;;                         _goBackward
  1526 ;; ---------------------------------------------------------------------------------
  1527 ;; (1) _findWalls                                            1     1      0    1413
  1528 ;;                                             45 BANK0      1     1      0
  1529 ;;                     _lcd_set_cursor
  1530 ;;                           _findWall
  1531 ;;                     _lcd_write_data
  1532 ;;                           _rotateIR
  1533 ;; ---------------------------------------------------------------------------------
  1534 ;; (1) _goRight                                              1     1      0    2370
  1535 ;;                                             34 BANK0      1     1      0
  1536 ;;                     _lcd_set_cursor
  1537 ;;                     _lcd_write_data
  1538 ;;                        _turnRight90
  1539 ;;                  _updateOrientation
  1540 ;;                   _driveForDistance
  1541 ;; ---------------------------------------------------------------------------------
  1542 ;; (1) _goLeft                                               0     0      0    2370
  1543 ;;                     _lcd_set_cursor
  1544 ;;                     _lcd_write_data
  1545 ;;                         _turnLeft90
  1546 ;;                  _updateOrientation
  1547 ;;                   _driveForDistance
  1548 ;; ---------------------------------------------------------------------------------
  1549 ;; (1) _goForward                                            0     0      0    2060
  1550 ;;                     _lcd_set_cursor
  1551 ;;                     _lcd_write_data
  1552 ;;                   _driveForDistance
  1553 ;; ---------------------------------------------------------------------------------
  1554 ;; (2) _goBackward                                           1     1      0    2370
  1555 ;;                                             34 BANK0      1     1      0
  1556 ;;                     _lcd_set_cursor
  1557 ;;                     _lcd_write_data
  1558 ;;                         _turnAround
  1559 ;;                  _updateOrientation
  1560 ;;                   _driveForDistance
  1561 ;; ---------------------------------------------------------------------------------
  1562 ;; (1) _goParallel                                          13    13      0    5060
  1563 ;;                                              9 BANK1     13    13      0
  1564 ;;                             _readIR
  1565 ;;                           _rotateIR
  1566 ;;                           ___lbtoft
  1567 ;;                            ___ftmul
  1568 ;;                            ___ftadd
  1569 ;;                            ___fttol
  1570 ;;                              _drive
  1571 ;;                            _waitFor
  1572 ;; ---------------------------------------------------------------------------------
  1573 ;; (2) _findWall                                             0     0      0    1218
  1574 ;;                             _readIR
  1575 ;; ---------------------------------------------------------------------------------
  1576 ;; (1) _frontWallCorrect                                     4     4      0    1537
  1577 ;;                                             45 BANK0      4     4      0
  1578 ;;                           _rotateIR
  1579 ;;                             _readIR
  1580 ;;                              _drive
  1581 ;; ---------------------------------------------------------------------------------
  1582 ;; (2) _driveForDistance                                    12    10      2    1964
  1583 ;;                                             22 BANK0     12    10      2
  1584 ;;                              _drive
  1585 ;;                          _ser_putch
  1586 ;;                          _ser_getch
  1587 ;;                          _goReverse
  1588 ;;                        _turnRight90
  1589 ;;                  _updateOrientation
  1590 ;;                         _turnLeft90
  1591 ;;                        _getCurrentY
  1592 ;;                        _getCurrentX
  1593 ;;               _findFinalDestination
  1594 ;; ---------------------------------------------------------------------------------
  1595 ;; (1) _updateLocation                                       1     1      0     158
  1596 ;;                                             14 BANK0      1     1      0
  1597 ;;                     _lcd_set_cursor
  1598 ;;                     _lcd_write_data
  1599 ;;                     _getOrientation
  1600 ;;              _lcd_write_1_digit_bcd
  1601 ;; ---------------------------------------------------------------------------------
  1602 ;; (1) _lookForVictim                                        3     3      0     536
  1603 ;;                                             14 BANK0      3     3      0
  1604 ;;                          _ser_putch
  1605 ;;                          _ser_getch
  1606 ;;                  _play_iCreate_song
  1607 ;;                     _lcd_set_cursor
  1608 ;;                     _lcd_write_data
  1609 ;;                      _getVictimZone
  1610 ;;              _lcd_write_1_digit_bcd
  1611 ;; ---------------------------------------------------------------------------------
  1612 ;; (1) _checkForFinalDestination                             0     0      0     158
  1613 ;;                          _getFinalX
  1614 ;;                          _getFinalY
  1615 ;;                  _play_iCreate_song
  1616 ;;                     _lcd_set_cursor
  1617 ;;                     _lcd_write_data
  1618 ;; ---------------------------------------------------------------------------------
  1619 ;; (1) _init                                                 0     0      0     223
  1620 ;;                           _init_adc
  1621 ;;                           _lcd_init
  1622 ;;                           _ser_init
  1623 ;;                         _initIRobot
  1624 ;;                          _initSongs
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (3) _goReverse                                            3     3      0     375
  1627 ;;                                             19 BANK0      3     3      0
  1628 ;;                     _lcd_set_cursor
  1629 ;;                     _lcd_write_data
  1630 ;;                              _drive
  1631 ;;                            _waitFor
  1632 ;; ---------------------------------------------------------------------------------
  1633 ;; (2) _readIR                                               4     2      2    1218
  1634 ;;                                             41 BANK0      4     2      2
  1635 ;;                   _adc_read_channel
  1636 ;;                            _convert
  1637 ;; ---------------------------------------------------------------------------------
  1638 ;; (3) _findFinalDestination                                 4     2      2     406
  1639 ;;                                             14 BANK0      4     2      2
  1640 ;;                     _lcd_set_cursor
  1641 ;;              _lcd_write_1_digit_bcd
  1642 ;;                        _getCurrentY (ARG)
  1643 ;;                        _getCurrentX (ARG)
  1644 ;; ---------------------------------------------------------------------------------
  1645 ;; (1) _checkIfHome                                          0     0      0     217
  1646 ;;                              _drive
  1647 ;;                  _play_iCreate_song
  1648 ;; ---------------------------------------------------------------------------------
  1649 ;; (3) _turnAround                                           3     3      0     279
  1650 ;;                                             19 BANK0      3     3      0
  1651 ;;                              _drive
  1652 ;;                            _waitFor
  1653 ;; ---------------------------------------------------------------------------------
  1654 ;; (3) _turnLeft90                                           3     3      0     279
  1655 ;;                                             19 BANK0      3     3      0
  1656 ;;                              _drive
  1657 ;;                            _waitFor
  1658 ;; ---------------------------------------------------------------------------------
  1659 ;; (3) _turnRight90                                          3     3      0     279
  1660 ;;                                             19 BANK0      3     3      0
  1661 ;;                              _drive
  1662 ;;                            _waitFor
  1663 ;; ---------------------------------------------------------------------------------
  1664 ;; (2) _initSongs                                            0     0      0     161
  1665 ;;                         _ser_putArr
  1666 ;; ---------------------------------------------------------------------------------
  1667 ;; (2) _lcd_init                                             0     0      0      31
  1668 ;;                  _lcd_write_control
  1669 ;; ---------------------------------------------------------------------------------
  1670 ;; (2) _lcd_write_1_digit_bcd                                1     1      0      62
  1671 ;;                                             13 BANK0      1     1      0
  1672 ;;                     _lcd_write_data
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (2) _lcd_set_cursor                                       1     1      0      65
  1675 ;;                                             13 BANK0      1     1      0
  1676 ;;                  _lcd_write_control
  1677 ;; ---------------------------------------------------------------------------------
  1678 ;; (1) _lcd_write_string                                     2     2      0      96
  1679 ;;                                             13 BANK0      2     2      0
  1680 ;;                     _lcd_write_data
  1681 ;; ---------------------------------------------------------------------------------
  1682 ;; (3) _adc_read_channel                                     4     2      2     345
  1683 ;;                                             37 BANK0      4     2      2
  1684 ;;                           _adc_read
  1685 ;;                            _convert (ARG)
  1686 ;; ---------------------------------------------------------------------------------
  1687 ;; (2) ___lbtoft                                             8     5      3     343
  1688 ;;                                             32 BANK0      8     5      3
  1689 ;;                           ___ftpack
  1690 ;;                            ___fttol (ARG)
  1691 ;; ---------------------------------------------------------------------------------
  1692 ;; (2) ___ftmul                                             16    10      6     800
  1693 ;;                                             40 BANK0     16    10      6
  1694 ;;                           ___ftpack
  1695 ;;                           ___lbtoft (ARG)
  1696 ;;                            ___fttol (ARG)
  1697 ;; ---------------------------------------------------------------------------------
  1698 ;; (2) ___ftadd                                             13     7      6    1537
  1699 ;;                                             56 BANK0      4     4      0
  1700 ;;                                              0 BANK1      9     3      6
  1701 ;;                           ___ftpack
  1702 ;;                            ___ftmul (ARG)
  1703 ;;                           ___lbtoft (ARG)
  1704 ;;                            ___fttol (ARG)
  1705 ;; ---------------------------------------------------------------------------------
  1706 ;; (2) _initIRobot                                           3     3      0      31
  1707 ;;                                             12 BANK0      3     3      0
  1708 ;;                          _ser_putch
  1709 ;; ---------------------------------------------------------------------------------
  1710 ;; (4) _waitFor                                              6     4      2     124
  1711 ;;                                             12 BANK0      6     4      2
  1712 ;;                          _ser_putch
  1713 ;; ---------------------------------------------------------------------------------
  1714 ;; (2) _drive                                                7     4      3     155
  1715 ;;                                             12 BANK0      7     4      3
  1716 ;;                          _ser_putch
  1717 ;; ---------------------------------------------------------------------------------
  1718 ;; (2) _rotateIR                                             5     4      1      99
  1719 ;;                                             10 BANK0      5     4      1
  1720 ;; ---------------------------------------------------------------------------------
  1721 ;; (3) _convert                                              4     2      2     839
  1722 ;;                                             33 BANK0      4     2      2
  1723 ;;                             ___wmul
  1724 ;;                            ___awdiv
  1725 ;;                           _adc_read (ARG)
  1726 ;; ---------------------------------------------------------------------------------
  1727 ;; (2) _play_iCreate_song                                    1     1      0      62
  1728 ;;                                             12 BANK0      1     1      0
  1729 ;;                          _ser_putch
  1730 ;; ---------------------------------------------------------------------------------
  1731 ;; (3) _ser_putArr                                           9     5      4     161
  1732 ;;                                             12 BANK0      9     5      4
  1733 ;;                          _ser_putch
  1734 ;; ---------------------------------------------------------------------------------
  1735 ;; (3) _ser_getch                                            2     2      0      34
  1736 ;;                                             10 BANK0      2     2      0
  1737 ;;                           _ser_isrx
  1738 ;; ---------------------------------------------------------------------------------
  1739 ;; (3) _lcd_write_data                                       3     3      0      31
  1740 ;;                                             10 BANK0      3     3      0
  1741 ;; ---------------------------------------------------------------------------------
  1742 ;; (3) _lcd_write_control                                    3     3      0      31
  1743 ;;                                             10 BANK0      3     3      0
  1744 ;; ---------------------------------------------------------------------------------
  1745 ;; (2) _init_adc                                             1     1      0       0
  1746 ;;                                             10 BANK0      1     1      0
  1747 ;; ---------------------------------------------------------------------------------
  1748 ;; (4) _adc_read                                             8     6      2     323
  1749 ;;                                             25 BANK0      8     6      2
  1750 ;;                            ___awdiv
  1751 ;; ---------------------------------------------------------------------------------
  1752 ;; (4) ___awdiv                                              9     5      4     300
  1753 ;;                                             16 BANK0      9     5      4
  1754 ;;                             ___wmul (ARG)
  1755 ;; ---------------------------------------------------------------------------------
  1756 ;; (2) ___fttol                                             14    10      4     252
  1757 ;;                                             18 BANK0     14    10      4
  1758 ;;                           ___ftpack (ARG)
  1759 ;; ---------------------------------------------------------------------------------
  1760 ;; (3) ___ftpack                                             8     3      5     312
  1761 ;;                                             10 BANK0      8     3      5
  1762 ;; ---------------------------------------------------------------------------------
  1763 ;; (4) ___wmul                                               6     2      4     136
  1764 ;;                                             10 BANK0      6     2      4
  1765 ;; ---------------------------------------------------------------------------------
  1766 ;; (1) _updateNode                                           1     1      0       0
  1767 ;;                                             10 BANK0      1     1      0
  1768 ;; ---------------------------------------------------------------------------------
  1769 ;; (1) _getSuccessfulDrive                                   0     0      0       0
  1770 ;; ---------------------------------------------------------------------------------
  1771 ;; (2) _getSomethingInTheWay                                 0     0      0       0
  1772 ;; ---------------------------------------------------------------------------------
  1773 ;; (2) _getOrientation                                       0     0      0       0
  1774 ;; ---------------------------------------------------------------------------------
  1775 ;; (3) _getCurrentY                                          0     0      0       0
  1776 ;; ---------------------------------------------------------------------------------
  1777 ;; (3) _getCurrentX                                          0     0      0       0
  1778 ;; ---------------------------------------------------------------------------------
  1779 ;; (3) _updateOrientation                                    2     2      0      31
  1780 ;;                                             10 BANK0      2     2      0
  1781 ;; ---------------------------------------------------------------------------------
  1782 ;; (2) _ser_init                                             1     1      0       0
  1783 ;;                                             10 BANK0      1     1      0
  1784 ;; ---------------------------------------------------------------------------------
  1785 ;; (4) _ser_isrx                                             0     0      0       0
  1786 ;; ---------------------------------------------------------------------------------
  1787 ;; (2) _getVictimZone                                        3     2      1     186
  1788 ;;                                             10 BANK0      3     2      1
  1789 ;; ---------------------------------------------------------------------------------
  1790 ;; (2) _getFinalY                                            0     0      0       0
  1791 ;; ---------------------------------------------------------------------------------
  1792 ;; (2) _getFinalX                                            0     0      0       0
  1793 ;; ---------------------------------------------------------------------------------
  1794 ;; (3) _ser_putch                                            2     2      0      31
  1795 ;;                                             10 BANK0      2     2      0
  1796 ;; ---------------------------------------------------------------------------------
  1797 ;; Estimated maximum stack depth 4
  1798 ;; ---------------------------------------------------------------------------------
  1799 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1800 ;; ---------------------------------------------------------------------------------
  1801 ;; (7) _isr1                                                10    10      0     159
  1802 ;;                                              0 BANK0     10    10      0
  1803 ;;                            ___lwmod
  1804 ;; ---------------------------------------------------------------------------------
  1805 ;; (8) ___lwmod                                              6     2      4     159
  1806 ;;                                              0 COMMON     6     2      4
  1807 ;; ---------------------------------------------------------------------------------
  1808 ;; Estimated maximum stack depth 8
  1809 ;; ---------------------------------------------------------------------------------
  1810                           
  1811 ;; Call Graph Graphs:
  1812                           
  1813 ;; _main (ROOT)
  1814 ;;   _init
  1815 ;;     _init_adc
  1816 ;;     _lcd_init
  1817 ;;       _lcd_write_control
  1818 ;;     _ser_init
  1819 ;;     _initIRobot
  1820 ;;       _ser_putch
  1821 ;;     _initSongs
  1822 ;;       _ser_putArr
  1823 ;;         _ser_putch
  1824 ;;   _drive
  1825 ;;     _ser_putch
  1826 ;;   _lcd_set_cursor
  1827 ;;     _lcd_write_control
  1828 ;;   _lcd_write_string
  1829 ;;     _lcd_write_data
  1830 ;;   _findWalls
  1831 ;;     _lcd_set_cursor
  1832 ;;       _lcd_write_control
  1833 ;;     _findWall
  1834 ;;       _readIR
  1835 ;;         _adc_read_channel
  1836 ;;           _adc_read
  1837 ;;             ___awdiv
  1838 ;;               ___wmul (ARG)
  1839 ;;           _convert (ARG)
  1840 ;;             ___wmul
  1841 ;;             ___awdiv
  1842 ;;               ___wmul (ARG)
  1843 ;;             _adc_read (ARG)
  1844 ;;               ___awdiv
  1845 ;;                 ___wmul (ARG)
  1846 ;;         _convert
  1847 ;;           ___wmul
  1848 ;;           ___awdiv
  1849 ;;             ___wmul (ARG)
  1850 ;;           _adc_read (ARG)
  1851 ;;             ___awdiv
  1852 ;;               ___wmul (ARG)
  1853 ;;     _lcd_write_data
  1854 ;;     _rotateIR
  1855 ;;   _turnAround
  1856 ;;     _drive
  1857 ;;       _ser_putch
  1858 ;;     _waitFor
  1859 ;;       _ser_putch
  1860 ;;   _turnLeft90
  1861 ;;     _drive
  1862 ;;       _ser_putch
  1863 ;;     _waitFor
  1864 ;;       _ser_putch
  1865 ;;   _turnRight90
  1866 ;;     _drive
  1867 ;;       _ser_putch
  1868 ;;     _waitFor
  1869 ;;       _ser_putch
  1870 ;;   _lcd_write_data
  1871 ;;   _play_iCreate_song
  1872 ;;     _ser_putch
  1873 ;;   _rotateIR
  1874 ;;   _checkForFinalDestination
  1875 ;;     _getFinalX
  1876 ;;     _getFinalY
  1877 ;;     _play_iCreate_song
  1878 ;;       _ser_putch
  1879 ;;     _lcd_set_cursor
  1880 ;;       _lcd_write_control
  1881 ;;     _lcd_write_data
  1882 ;;   _lookForVictim
  1883 ;;     _ser_putch
  1884 ;;     _ser_getch
  1885 ;;       _ser_isrx
  1886 ;;     _play_iCreate_song
  1887 ;;       _ser_putch
  1888 ;;     _lcd_set_cursor
  1889 ;;       _lcd_write_control
  1890 ;;     _lcd_write_data
  1891 ;;     _getVictimZone
  1892 ;;     _lcd_write_1_digit_bcd
  1893 ;;       _lcd_write_data
  1894 ;;   _goParallel
  1895 ;;     _readIR
  1896 ;;       _adc_read_channel
  1897 ;;         _adc_read
  1898 ;;           ___awdiv
  1899 ;;             ___wmul (ARG)
  1900 ;;         _convert (ARG)
  1901 ;;           ___wmul
  1902 ;;           ___awdiv
  1903 ;;             ___wmul (ARG)
  1904 ;;           _adc_read (ARG)
  1905 ;;             ___awdiv
  1906 ;;               ___wmul (ARG)
  1907 ;;       _convert
  1908 ;;         ___wmul
  1909 ;;         ___awdiv
  1910 ;;           ___wmul (ARG)
  1911 ;;         _adc_read (ARG)
  1912 ;;           ___awdiv
  1913 ;;             ___wmul (ARG)
  1914 ;;     _rotateIR
  1915 ;;     ___lbtoft
  1916 ;;       ___ftpack
  1917 ;;       ___fttol (ARG)
  1918 ;;         ___ftpack (ARG)
  1919 ;;     ___ftmul
  1920 ;;       ___ftpack
  1921 ;;       ___lbtoft (ARG)
  1922 ;;         ___ftpack
  1923 ;;         ___fttol (ARG)
  1924 ;;           ___ftpack (ARG)
  1925 ;;       ___fttol (ARG)
  1926 ;;         ___ftpack (ARG)
  1927 ;;     ___ftadd
  1928 ;;       ___ftpack
  1929 ;;       ___ftmul (ARG)
  1930 ;;         ___ftpack
  1931 ;;         ___lbtoft (ARG)
  1932 ;;           ___ftpack
  1933 ;;           ___fttol (ARG)
  1934 ;;             ___ftpack (ARG)
  1935 ;;         ___fttol (ARG)
  1936 ;;           ___ftpack (ARG)
  1937 ;;       ___lbtoft (ARG)
  1938 ;;         ___ftpack
  1939 ;;         ___fttol (ARG)
  1940 ;;           ___ftpack (ARG)
  1941 ;;       ___fttol (ARG)
  1942 ;;         ___ftpack (ARG)
  1943 ;;     ___fttol
  1944 ;;       ___ftpack (ARG)
  1945 ;;     _drive
  1946 ;;       _ser_putch
  1947 ;;     _waitFor
  1948 ;;       _ser_putch
  1949 ;;   _frontWallCorrect
  1950 ;;     _rotateIR
  1951 ;;     _readIR
  1952 ;;       _adc_read_channel
  1953 ;;         _adc_read
  1954 ;;           ___awdiv
  1955 ;;             ___wmul (ARG)
  1956 ;;         _convert (ARG)
  1957 ;;           ___wmul
  1958 ;;           ___awdiv
  1959 ;;             ___wmul (ARG)
  1960 ;;           _adc_read (ARG)
  1961 ;;             ___awdiv
  1962 ;;               ___wmul (ARG)
  1963 ;;       _convert
  1964 ;;         ___wmul
  1965 ;;         ___awdiv
  1966 ;;           ___wmul (ARG)
  1967 ;;         _adc_read (ARG)
  1968 ;;           ___awdiv
  1969 ;;             ___wmul (ARG)
  1970 ;;     _drive
  1971 ;;       _ser_putch
  1972 ;;   _goToNextCell
  1973 ;;     _getSomethingInTheWay
  1974 ;;     _goLeft
  1975 ;;       _lcd_set_cursor
  1976 ;;         _lcd_write_control
  1977 ;;       _lcd_write_data
  1978 ;;       _turnLeft90
  1979 ;;         _drive
  1980 ;;           _ser_putch
  1981 ;;         _waitFor
  1982 ;;           _ser_putch
  1983 ;;       _updateOrientation
  1984 ;;       _driveForDistance
  1985 ;;         _drive
  1986 ;;           _ser_putch
  1987 ;;         _ser_putch
  1988 ;;         _ser_getch
  1989 ;;           _ser_isrx
  1990 ;;         _goReverse
  1991 ;;           _lcd_set_cursor
  1992 ;;             _lcd_write_control
  1993 ;;           _lcd_write_data
  1994 ;;           _drive
  1995 ;;             _ser_putch
  1996 ;;           _waitFor
  1997 ;;             _ser_putch
  1998 ;;         _turnRight90
  1999 ;;           _drive
  2000 ;;             _ser_putch
  2001 ;;           _waitFor
  2002 ;;             _ser_putch
  2003 ;;         _updateOrientation
  2004 ;;         _turnLeft90
  2005 ;;           _drive
  2006 ;;             _ser_putch
  2007 ;;           _waitFor
  2008 ;;             _ser_putch
  2009 ;;         _getCurrentY
  2010 ;;         _getCurrentX
  2011 ;;         _findFinalDestination
  2012 ;;           _lcd_set_cursor
  2013 ;;             _lcd_write_control
  2014 ;;           _lcd_write_1_digit_bcd
  2015 ;;             _lcd_write_data
  2016 ;;           _getCurrentY (ARG)
  2017 ;;           _getCurrentX (ARG)
  2018 ;;     _goForward
  2019 ;;       _lcd_set_cursor
  2020 ;;         _lcd_write_control
  2021 ;;       _lcd_write_data
  2022 ;;       _driveForDistance
  2023 ;;         _drive
  2024 ;;           _ser_putch
  2025 ;;         _ser_putch
  2026 ;;         _ser_getch
  2027 ;;           _ser_isrx
  2028 ;;         _goReverse
  2029 ;;           _lcd_set_cursor
  2030 ;;             _lcd_write_control
  2031 ;;           _lcd_write_data
  2032 ;;           _drive
  2033 ;;             _ser_putch
  2034 ;;           _waitFor
  2035 ;;             _ser_putch
  2036 ;;         _turnRight90
  2037 ;;           _drive
  2038 ;;             _ser_putch
  2039 ;;           _waitFor
  2040 ;;             _ser_putch
  2041 ;;         _updateOrientation
  2042 ;;         _turnLeft90
  2043 ;;           _drive
  2044 ;;             _ser_putch
  2045 ;;           _waitFor
  2046 ;;             _ser_putch
  2047 ;;         _getCurrentY
  2048 ;;         _getCurrentX
  2049 ;;         _findFinalDestination
  2050 ;;           _lcd_set_cursor
  2051 ;;             _lcd_write_control
  2052 ;;           _lcd_write_1_digit_bcd
  2053 ;;             _lcd_write_data
  2054 ;;           _getCurrentY (ARG)
  2055 ;;           _getCurrentX (ARG)
  2056 ;;     _goRight
  2057 ;;       _lcd_set_cursor
  2058 ;;         _lcd_write_control
  2059 ;;       _lcd_write_data
  2060 ;;       _turnRight90
  2061 ;;         _drive
  2062 ;;           _ser_putch
  2063 ;;         _waitFor
  2064 ;;           _ser_putch
  2065 ;;       _updateOrientation
  2066 ;;       _driveForDistance
  2067 ;;         _drive
  2068 ;;           _ser_putch
  2069 ;;         _ser_putch
  2070 ;;         _ser_getch
  2071 ;;           _ser_isrx
  2072 ;;         _goReverse
  2073 ;;           _lcd_set_cursor
  2074 ;;             _lcd_write_control
  2075 ;;           _lcd_write_data
  2076 ;;           _drive
  2077 ;;             _ser_putch
  2078 ;;           _waitFor
  2079 ;;             _ser_putch
  2080 ;;         _turnRight90
  2081 ;;           _drive
  2082 ;;             _ser_putch
  2083 ;;           _waitFor
  2084 ;;             _ser_putch
  2085 ;;         _updateOrientation
  2086 ;;         _turnLeft90
  2087 ;;           _drive
  2088 ;;             _ser_putch
  2089 ;;           _waitFor
  2090 ;;             _ser_putch
  2091 ;;         _getCurrentY
  2092 ;;         _getCurrentX
  2093 ;;         _findFinalDestination
  2094 ;;           _lcd_set_cursor
  2095 ;;             _lcd_write_control
  2096 ;;           _lcd_write_1_digit_bcd
  2097 ;;             _lcd_write_data
  2098 ;;           _getCurrentY (ARG)
  2099 ;;           _getCurrentX (ARG)
  2100 ;;     _goBackward
  2101 ;;       _lcd_set_cursor
  2102 ;;         _lcd_write_control
  2103 ;;       _lcd_write_data
  2104 ;;       _turnAround
  2105 ;;         _drive
  2106 ;;           _ser_putch
  2107 ;;         _waitFor
  2108 ;;           _ser_putch
  2109 ;;       _updateOrientation
  2110 ;;       _driveForDistance
  2111 ;;         _drive
  2112 ;;           _ser_putch
  2113 ;;         _ser_putch
  2114 ;;         _ser_getch
  2115 ;;           _ser_isrx
  2116 ;;         _goReverse
  2117 ;;           _lcd_set_cursor
  2118 ;;             _lcd_write_control
  2119 ;;           _lcd_write_data
  2120 ;;           _drive
  2121 ;;             _ser_putch
  2122 ;;           _waitFor
  2123 ;;             _ser_putch
  2124 ;;         _turnRight90
  2125 ;;           _drive
  2126 ;;             _ser_putch
  2127 ;;           _waitFor
  2128 ;;             _ser_putch
  2129 ;;         _updateOrientation
  2130 ;;         _turnLeft90
  2131 ;;           _drive
  2132 ;;             _ser_putch
  2133 ;;           _waitFor
  2134 ;;             _ser_putch
  2135 ;;         _getCurrentY
  2136 ;;         _getCurrentX
  2137 ;;         _findFinalDestination
  2138 ;;           _lcd_set_cursor
  2139 ;;             _lcd_write_control
  2140 ;;           _lcd_write_1_digit_bcd
  2141 ;;             _lcd_write_data
  2142 ;;           _getCurrentY (ARG)
  2143 ;;           _getCurrentX (ARG)
  2144 ;;   _goRight
  2145 ;;     _lcd_set_cursor
  2146 ;;       _lcd_write_control
  2147 ;;     _lcd_write_data
  2148 ;;     _turnRight90
  2149 ;;       _drive
  2150 ;;         _ser_putch
  2151 ;;       _waitFor
  2152 ;;         _ser_putch
  2153 ;;     _updateOrientation
  2154 ;;     _driveForDistance
  2155 ;;       _drive
  2156 ;;         _ser_putch
  2157 ;;       _ser_putch
  2158 ;;       _ser_getch
  2159 ;;         _ser_isrx
  2160 ;;       _goReverse
  2161 ;;         _lcd_set_cursor
  2162 ;;           _lcd_write_control
  2163 ;;         _lcd_write_data
  2164 ;;         _drive
  2165 ;;           _ser_putch
  2166 ;;         _waitFor
  2167 ;;           _ser_putch
  2168 ;;       _turnRight90
  2169 ;;         _drive
  2170 ;;           _ser_putch
  2171 ;;         _waitFor
  2172 ;;           _ser_putch
  2173 ;;       _updateOrientation
  2174 ;;       _turnLeft90
  2175 ;;         _drive
  2176 ;;           _ser_putch
  2177 ;;         _waitFor
  2178 ;;           _ser_putch
  2179 ;;       _getCurrentY
  2180 ;;       _getCurrentX
  2181 ;;       _findFinalDestination
  2182 ;;         _lcd_set_cursor
  2183 ;;           _lcd_write_control
  2184 ;;         _lcd_write_1_digit_bcd
  2185 ;;           _lcd_write_data
  2186 ;;         _getCurrentY (ARG)
  2187 ;;         _getCurrentX (ARG)
  2188 ;;   _getOrientation
  2189 ;;   _goForward
  2190 ;;     _lcd_set_cursor
  2191 ;;       _lcd_write_control
  2192 ;;     _lcd_write_data
  2193 ;;     _driveForDistance
  2194 ;;       _drive
  2195 ;;         _ser_putch
  2196 ;;       _ser_putch
  2197 ;;       _ser_getch
  2198 ;;         _ser_isrx
  2199 ;;       _goReverse
  2200 ;;         _lcd_set_cursor
  2201 ;;           _lcd_write_control
  2202 ;;         _lcd_write_data
  2203 ;;         _drive
  2204 ;;           _ser_putch
  2205 ;;         _waitFor
  2206 ;;           _ser_putch
  2207 ;;       _turnRight90
  2208 ;;         _drive
  2209 ;;           _ser_putch
  2210 ;;         _waitFor
  2211 ;;           _ser_putch
  2212 ;;       _updateOrientation
  2213 ;;       _turnLeft90
  2214 ;;         _drive
  2215 ;;           _ser_putch
  2216 ;;         _waitFor
  2217 ;;           _ser_putch
  2218 ;;       _getCurrentY
  2219 ;;       _getCurrentX
  2220 ;;       _findFinalDestination
  2221 ;;         _lcd_set_cursor
  2222 ;;           _lcd_write_control
  2223 ;;         _lcd_write_1_digit_bcd
  2224 ;;           _lcd_write_data
  2225 ;;         _getCurrentY (ARG)
  2226 ;;         _getCurrentX (ARG)
  2227 ;;   _goLeft
  2228 ;;     _lcd_set_cursor
  2229 ;;       _lcd_write_control
  2230 ;;     _lcd_write_data
  2231 ;;     _turnLeft90
  2232 ;;       _drive
  2233 ;;         _ser_putch
  2234 ;;       _waitFor
  2235 ;;         _ser_putch
  2236 ;;     _updateOrientation
  2237 ;;     _driveForDistance
  2238 ;;       _drive
  2239 ;;         _ser_putch
  2240 ;;       _ser_putch
  2241 ;;       _ser_getch
  2242 ;;         _ser_isrx
  2243 ;;       _goReverse
  2244 ;;         _lcd_set_cursor
  2245 ;;           _lcd_write_control
  2246 ;;         _lcd_write_data
  2247 ;;         _drive
  2248 ;;           _ser_putch
  2249 ;;         _waitFor
  2250 ;;           _ser_putch
  2251 ;;       _turnRight90
  2252 ;;         _drive
  2253 ;;           _ser_putch
  2254 ;;         _waitFor
  2255 ;;           _ser_putch
  2256 ;;       _updateOrientation
  2257 ;;       _turnLeft90
  2258 ;;         _drive
  2259 ;;           _ser_putch
  2260 ;;         _waitFor
  2261 ;;           _ser_putch
  2262 ;;       _getCurrentY
  2263 ;;       _getCurrentX
  2264 ;;       _findFinalDestination
  2265 ;;         _lcd_set_cursor
  2266 ;;           _lcd_write_control
  2267 ;;         _lcd_write_1_digit_bcd
  2268 ;;           _lcd_write_data
  2269 ;;         _getCurrentY (ARG)
  2270 ;;         _getCurrentX (ARG)
  2271 ;;   _getSuccessfulDrive
  2272 ;;   _updateLocation
  2273 ;;     _lcd_set_cursor
  2274 ;;       _lcd_write_control
  2275 ;;     _lcd_write_data
  2276 ;;     _getOrientation
  2277 ;;     _lcd_write_1_digit_bcd
  2278 ;;       _lcd_write_data
  2279 ;;   _updateNode
  2280 ;;   _checkIfHome
  2281 ;;     _drive
  2282 ;;       _ser_putch
  2283 ;;     _play_iCreate_song
  2284 ;;       _ser_putch
  2285 ;;
  2286 ;; _isr1 (ROOT)
  2287 ;;   ___lwmod
  2288 ;;
  2289                           
  2290 ;; Address spaces:
  2291                           
  2292 ;;Name               Size   Autos  Total    Cost      Usage
  2293 ;;BANK3               60      0      49       9       76.0%
  2294 ;;BITBANK3            60      0       0       8        0.0%
  2295 ;;SFR3                 0      0       0       4        0.0%
  2296 ;;BITSFR3              0      0       0       4        0.0%
  2297 ;;BANK2               60      0      1D      11       30.2%
  2298 ;;BITBANK2            60      0       0      10        0.0%
  2299 ;;SFR2                 0      0       0       5        0.0%
  2300 ;;BITSFR2              0      0       0       5        0.0%
  2301 ;;SFR1                 0      0       0       2        0.0%
  2302 ;;BITSFR1              0      0       0       2        0.0%
  2303 ;;BANK1               50     17      49       7       91.3%
  2304 ;;BITBANK1            50      0       0       6        0.0%
  2305 ;;CODE                 0      0       0       0        0.0%
  2306 ;;DATA                 0      0     10B      12        0.0%
  2307 ;;ABS                  0      0     101       3        0.0%
  2308 ;;NULL                 0      0       0       0        0.0%
  2309 ;;STACK                0      0       A       2        0.0%
  2310 ;;BANK0               50     3C      46       5       87.5%
  2311 ;;BITBANK0            50      0       0       4        0.0%
  2312 ;;SFR0                 0      0       0       1        0.0%
  2313 ;;BITSFR0              0      0       0       1        0.0%
  2314 ;;COMMON               E      6       C       1       85.7%
  2315 ;;BITCOMMON            E      0       2       0       14.3%
  2316 ;;EEDATA             100      0       0       0        0.0%
  2317                           
  2318                           	global	_main
  2319                           psect	maintext,global,class=CODE,delta=2
  2320                           global __pmaintext
  2321  0015                     __pmaintext:
  2322                           
  2323 ;; *************** function _main *****************
  2324 ;; Defined at:
  2325 ;;		line 308 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 17F/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          0       0       1       0       0
  2342 ;;      Totals:         0       0       1       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels required when called:    8
  2345 ;; This function calls:
  2346 ;;		_init
  2347 ;;		_drive
  2348 ;;		_lcd_set_cursor
  2349 ;;		_lcd_write_string
  2350 ;;		_findWalls
  2351 ;;		_turnAround
  2352 ;;		_turnLeft90
  2353 ;;		_turnRight90
  2354 ;;		_lcd_write_data
  2355 ;;		_play_iCreate_song
  2356 ;;		_rotateIR
  2357 ;;		_checkForFinalDestination
  2358 ;;		_lookForVictim
  2359 ;;		_goParallel
  2360 ;;		_frontWallCorrect
  2361 ;;		_goToNextCell
  2362 ;;		_goRight
  2363 ;;		_getOrientation
  2364 ;;		_goForward
  2365 ;;		_goLeft
  2366 ;;		_getSuccessfulDrive
  2367 ;;		_updateLocation
  2368 ;;		_updateNode
  2369 ;;		_checkIfHome
  2370 ;; This function is called by:
  2371 ;;		Startup code after reset
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           psect	maintext
  2375                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  2376                           	line	308
  2377                           	global	__size_of_main
  2378  01E4                     	__size_of_main	equ	__end_of_main-_main
  2379                           	
  2380  0015                     _main:	
  2381                           	opt	stack 0
  2382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2383                           	line	309
  2384                           	
  2385  0015                     l13000:	
  2386                           ;main.c: 309: init();
  2387  0015  160A  118A  2475   	fcall	_init
              120A  118A         
  2388                           	line	310
  2389                           ;main.c: 310: drive(0, 0, 0, 0);
  2390  001A  1283               	bcf	status, 5	;RP0=0, select bank0
  2391  001B  1303               	bcf	status, 6	;RP1=0, select bank0
  2392  001C  01AC               	clrf	(?_drive)
  2393  001D  01AD               	clrf	0+(?_drive)+01h
  2394  001E  01AE               	clrf	0+(?_drive)+02h
  2395  001F  3000               	movlw	(0)
  2396  0020  160A  118A  24AB   	fcall	_drive
              120A  118A         
  2397                           	line	312
  2398                           	
  2399  0025                     l13002:	
  2400                           ;main.c: 312: lcd_set_cursor(0x00);
  2401  0025  3000               	movlw	(0)
  2402  0026  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  118A         
  2403                           	line	313
  2404                           	
  2405  002B                     l13004:	
  2406                           ;main.c: 313: lcd_write_string("(-,-) - -- --- -");
  2407  002B  3001               	movlw	((STR_3-__stringbase))&0ffh
  2408  002C  160A  118A  22D2   	fcall	_lcd_write_string
              120A  118A         
  2409                           	line	314
  2410                           ;main.c: 314: lcd_set_cursor(0x40);
  2411  0031  3040               	movlw	(040h)
  2412  0032  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  118A         
  2413                           	line	315
  2414                           	
  2415  0037                     l13006:	
  2416                           ;main.c: 315: lcd_write_string("- - - (3,1) GREG");
  2417  0037  3012               	movlw	((STR_4-__stringbase))&0ffh
  2418  0038  160A  118A  22D2   	fcall	_lcd_write_string
              120A  118A         
  2419                           	line	317
  2420                           ;main.c: 317: while(!home)
  2421  003D  29F1               	goto	l13122
  2422                           	
  2423  003E                     l6774:	
  2424                           	line	319
  2425                           	
  2426  003E                     l13008:	
  2427                           ;main.c: 318: {
  2428                           ;main.c: 319: if(start.pressed && ready == 0)
  2429  003E  1683               	bsf	status, 5	;RP0=1, select bank1
  2430  003F  1303               	bcf	status, 6	;RP1=0, select bank1
  2431  0040  0840               	movf	(_start)^080h,w
  2432  0041  1D03               	skipz
  2433  0042  2844               	goto	u7290
  2434  0043  289F               	goto	l13038
  2435  0044                     u7290:
  2436                           	
  2437  0044                     l13010:	
  2438  0044  18F1               	btfsc	(_ready/8),(_ready)&7
  2439  0045  2847               	goto	u7301
  2440  0046  2848               	goto	u7300
  2441  0047                     u7301:
  2442  0047  289F               	goto	l13038
  2443  0048                     u7300:
  2444                           	line	321
  2445                           	
  2446  0048                     l13012:	
  2447                           ;main.c: 320: {
  2448                           ;main.c: 321: findWalls();
  2449  0048  120A  158A  222C   	fcall	_findWalls
              120A  118A         
  2450                           	line	322
  2451                           	
  2452  004D                     l13014:	
  2453                           ;main.c: 322: if(leftWall && rightWall && frontWall)
  2454  004D  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2455  004E  2850               	goto	u7311
  2456  004F  2851               	goto	u7310
  2457  0050                     u7311:
  2458  0050  285F               	goto	l6776
  2459  0051                     u7310:
  2460                           	
  2461  0051                     l13016:	
  2462  0051  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  2463  0052  2854               	goto	u7321
  2464  0053  2855               	goto	u7320
  2465  0054                     u7321:
  2466  0054  285F               	goto	l6776
  2467  0055                     u7320:
  2468                           	
  2469  0055                     l13018:	
  2470  0055  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2471  0056  2858               	goto	u7331
  2472  0057  2859               	goto	u7330
  2473  0058                     u7331:
  2474  0058  285F               	goto	l6776
  2475  0059                     u7330:
  2476                           	line	323
  2477                           	
  2478  0059                     l13020:	
  2479                           ;main.c: 323: turnAround();
  2480  0059  160A  118A  26DD   	fcall	_turnAround
              120A  118A         
  2481  005E  287D               	goto	l13030
  2482                           	line	324
  2483                           	
  2484  005F                     l6776:	
  2485                           ;main.c: 324: else if (rightWall && frontWall)
  2486  005F  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  2487  0060  2862               	goto	u7341
  2488  0061  2863               	goto	u7340
  2489  0062                     u7341:
  2490  0062  286D               	goto	l6778
  2491  0063                     u7340:
  2492                           	
  2493  0063                     l13022:	
  2494  0063  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2495  0064  2866               	goto	u7351
  2496  0065  2867               	goto	u7350
  2497  0066                     u7351:
  2498  0066  286D               	goto	l6778
  2499  0067                     u7350:
  2500                           	line	325
  2501                           	
  2502  0067                     l13024:	
  2503                           ;main.c: 325: turnLeft90();
  2504  0067  160A  118A  24E2   	fcall	_turnLeft90
              120A  118A         
  2505  006C  287D               	goto	l13030
  2506                           	line	326
  2507                           	
  2508  006D                     l6778:	
  2509                           ;main.c: 326: else if(leftWall && frontWall)
  2510  006D  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2511  006E  2870               	goto	u7361
  2512  006F  2871               	goto	u7360
  2513  0070                     u7361:
  2514  0070  287D               	goto	l13030
  2515  0071                     u7360:
  2516                           	
  2517  0071                     l13026:	
  2518  0071  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2519  0072  2874               	goto	u7371
  2520  0073  2875               	goto	u7370
  2521  0074                     u7371:
  2522  0074  287D               	goto	l13030
  2523  0075                     u7370:
  2524                           	line	327
  2525                           	
  2526  0075                     l13028:	
  2527                           ;main.c: 327: turnRight90();
  2528  0075  160A  118A  2592   	fcall	_turnRight90
              120A  118A         
  2529  007A  287D               	goto	l13030
  2530                           	
  2531  007B                     l6780:	
  2532  007B  287D               	goto	l13030
  2533                           	line	328
  2534                           	
  2535  007C                     l6779:	
  2536  007C  287D               	goto	l13030
  2537                           	
  2538  007D                     l6777:	
  2539                           	
  2540  007D                     l13030:	
  2541                           ;main.c: 328: ready = 1;
  2542  007D  14F1               	bsf	(_ready/8),(_ready)&7
  2543                           	line	329
  2544                           	
  2545  007E                     l13032:	
  2546                           ;main.c: 329: lcd_set_cursor(0x06);
  2547  007E  3006               	movlw	(06h)
  2548  007F  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  118A         
  2549                           	line	330
  2550                           	
  2551  0084                     l13034:	
  2552                           ;main.c: 330: lcd_write_data('E');
  2553  0084  3045               	movlw	(045h)
  2554  0085  160A  118A  2179   	fcall	_lcd_write_data
              120A  118A         
  2555                           	line	331
  2556                           ;main.c: 331: play_iCreate_song(1);
  2557  008A  3001               	movlw	(01h)
  2558  008B  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  2559                           	line	332
  2560                           	
  2561  0090                     l13036:	
  2562                           ;main.c: 332: rotateIR(12, 0b00001101);
  2563  0090  300D               	movlw	(0Dh)
  2564  0091  1683               	bsf	status, 5	;RP0=1, select bank1
  2565  0092  1303               	bcf	status, 6	;RP1=0, select bank1
  2566  0093  00E1               	movwf	(??_main+0)^080h+0
  2567  0094  0861               	movf	(??_main+0)^080h+0,w
  2568  0095  1283               	bcf	status, 5	;RP0=0, select bank0
  2569  0096  1303               	bcf	status, 6	;RP1=0, select bank0
  2570  0097  00AA               	movwf	(?_rotateIR)
  2571  0098  300C               	movlw	(0Ch)
  2572  0099  160A  118A  2442   	fcall	_rotateIR
              120A  118A         
  2573  009E  289F               	goto	l13038
  2574                           	line	333
  2575                           	
  2576  009F                     l6775:	
  2577                           	line	335
  2578                           	
  2579  009F                     l13038:	
  2580                           ;main.c: 333: }
  2581                           ;main.c: 335: if(start.pressed && ready == 1)
  2582  009F  1683               	bsf	status, 5	;RP0=1, select bank1
  2583  00A0  1303               	bcf	status, 6	;RP1=0, select bank1
  2584  00A1  0840               	movf	(_start)^080h,w
  2585  00A2  1D03               	skipz
  2586  00A3  28A5               	goto	u7380
  2587  00A4  29F1               	goto	l13122
  2588  00A5                     u7380:
  2589                           	
  2590  00A5                     l13040:	
  2591  00A5  1CF1               	btfss	(_ready/8),(_ready)&7
  2592  00A6  28A8               	goto	u7391
  2593  00A7  28A9               	goto	u7390
  2594  00A8                     u7391:
  2595  00A8  29F1               	goto	l13122
  2596  00A9                     u7390:
  2597                           	line	337
  2598                           	
  2599  00A9                     l13042:	
  2600                           ;main.c: 336: {
  2601                           ;main.c: 337: checkForFinalDestination();
  2602  00A9  160A  118A  2415   	fcall	_checkForFinalDestination
              120A  118A         
  2603                           	line	338
  2604                           ;main.c: 338: play_iCreate_song(5);
  2605  00AE  3005               	movlw	(05h)
  2606  00AF  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  2607                           	line	339
  2608                           ;main.c: 339: lookForVictim();
  2609  00B4  120A  158A  2073   	fcall	_lookForVictim
              120A  118A         
  2610                           	line	340
  2611                           ;main.c: 340: play_iCreate_song(5);
  2612  00B9  3005               	movlw	(05h)
  2613  00BA  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  2614                           	line	341
  2615                           	
  2616  00BF                     l13044:	
  2617                           ;main.c: 341: findWalls();
  2618  00BF  120A  158A  222C   	fcall	_findWalls
              120A  118A         
  2619                           	line	342
  2620                           	
  2621  00C4                     l13046:	
  2622                           ;main.c: 342: play_iCreate_song(5);
  2623  00C4  3005               	movlw	(05h)
  2624  00C5  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  2625                           	line	343
  2626                           	
  2627  00CA                     l13048:	
  2628                           ;main.c: 343: if(leftWall)
  2629  00CA  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2630  00CB  28CD               	goto	u7401
  2631  00CC  28CE               	goto	u7400
  2632  00CD                     u7401:
  2633  00CD  28D4               	goto	l13052
  2634  00CE                     u7400:
  2635                           	line	344
  2636                           	
  2637  00CE                     l13050:	
  2638                           ;main.c: 344: goParallel();
  2639  00CE  120A  158A  26A5   	fcall	_goParallel
              120A  118A         
  2640  00D3  28E3               	goto	l13054
  2641                           	line	345
  2642                           	
  2643  00D4                     l6782:	
  2644                           	line	346
  2645                           	
  2646  00D4                     l13052:	
  2647                           ;main.c: 345: else
  2648                           ;main.c: 346: rotateIR(12, 0b00001101);
  2649  00D4  300D               	movlw	(0Dh)
  2650  00D5  1683               	bsf	status, 5	;RP0=1, select bank1
  2651  00D6  1303               	bcf	status, 6	;RP1=0, select bank1
  2652  00D7  00E1               	movwf	(??_main+0)^080h+0
  2653  00D8  0861               	movf	(??_main+0)^080h+0,w
  2654  00D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2655  00DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2656  00DB  00AA               	movwf	(?_rotateIR)
  2657  00DC  300C               	movlw	(0Ch)
  2658  00DD  160A  118A  2442   	fcall	_rotateIR
              120A  118A         
  2659  00E2  28E3               	goto	l13054
  2660                           	
  2661  00E3                     l6783:	
  2662                           	line	347
  2663                           	
  2664  00E3                     l13054:	
  2665                           ;main.c: 347: play_iCreate_song(5);
  2666  00E3  3005               	movlw	(05h)
  2667  00E4  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  2668                           	line	348
  2669                           	
  2670  00E9                     l13056:	
  2671                           ;main.c: 348: if(frontWall)
  2672  00E9  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2673  00EA  28EC               	goto	u7411
  2674  00EB  28ED               	goto	u7410
  2675  00EC                     u7411:
  2676  00EC  28F3               	goto	l13060
  2677  00ED                     u7410:
  2678                           	line	349
  2679                           	
  2680  00ED                     l13058:	
  2681                           ;main.c: 349: frontWallCorrect();
  2682  00ED  120A  158A  23EC   	fcall	_frontWallCorrect
              120A  118A         
  2683  00F2  28F3               	goto	l13060
  2684                           	
  2685  00F3                     l6784:	
  2686                           	line	350
  2687                           	
  2688  00F3                     l13060:	
  2689                           ;main.c: 350: play_iCreate_song(5);
  2690  00F3  3005               	movlw	(05h)
  2691  00F4  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  2692                           	line	351
  2693                           ;main.c: 351: switch(node)
  2694  00F9  29B6               	goto	l13108
  2695                           	line	353
  2696                           ;main.c: 352: {
  2697                           ;main.c: 353: case 0:
  2698                           	
  2699  00FA                     l6786:	
  2700                           	line	354
  2701                           	
  2702  00FA                     l13062:	
  2703                           ;main.c: 354: goToNextCell();
  2704  00FA  160A  118A  2698   	fcall	_goToNextCell
              120A  118A         
  2705                           	line	355
  2706                           ;main.c: 355: break;
  2707  00FF  29C6               	goto	l13110
  2708                           	line	356
  2709                           ;main.c: 356: case 1:
  2710                           	
  2711  0100                     l6788:	
  2712                           	line	357
  2713                           ;main.c: 357: if (goingHome)
  2714  0100  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  2715  0101  2903               	goto	u7421
  2716  0102  2904               	goto	u7420
  2717  0103                     u7421:
  2718  0103  2935               	goto	l13076
  2719  0104                     u7420:
  2720                           	line	359
  2721                           	
  2722  0104                     l13064:	
  2723                           ;main.c: 358: {
  2724                           ;main.c: 359: if (victimZone == 1)
  2725  0104  1283               	bcf	status, 5	;RP0=0, select bank0
  2726  0105  1303               	bcf	status, 6	;RP1=0, select bank0
  2727  0106  0862               	movf	(_victimZone),w	;volatile
  2728  0107  3A01               	xorlw	01h
  2729  0108  1D03               	skipz
  2730  0109  290B               	goto	u7431
  2731  010A  290C               	goto	u7430
  2732  010B                     u7431:
  2733  010B  2912               	goto	l13068
  2734  010C                     u7430:
  2735                           	line	360
  2736                           	
  2737  010C                     l13066:	
  2738                           ;main.c: 360: goRight();
  2739  010C  160A  118A  231D   	fcall	_goRight
              120A  118A         
  2740  0111  29C6               	goto	l13110
  2741                           	line	361
  2742                           	
  2743  0112                     l6790:	
  2744                           	
  2745  0112                     l13068:	
  2746                           ;main.c: 361: else if (getOrientation() == EAST)
  2747  0112  160A  118A  211D   	fcall	_getOrientation
              120A  118A         
  2748  0117  3A02               	xorlw	02h
  2749  0118  1D03               	skipz
  2750  0119  291B               	goto	u7441
  2751  011A  291C               	goto	u7440
  2752  011B                     u7441:
  2753  011B  2922               	goto	l13072
  2754  011C                     u7440:
  2755                           	line	362
  2756                           	
  2757  011C                     l13070:	
  2758                           ;main.c: 362: goForward();
  2759  011C  160A  118A  21E0   	fcall	_goForward
              120A  118A         
  2760  0121  29C6               	goto	l13110
  2761                           	line	363
  2762                           	
  2763  0122                     l6792:	
  2764                           	
  2765  0122                     l13072:	
  2766                           ;main.c: 363: else if (getOrientation() == SOUTH)
  2767  0122  160A  118A  211D   	fcall	_getOrientation
              120A  118A         
  2768  0127  3A01               	xorlw	01h
  2769  0128  1D03               	skipz
  2770  0129  292B               	goto	u7451
  2771  012A  292C               	goto	u7450
  2772  012B                     u7451:
  2773  012B  29C6               	goto	l13110
  2774  012C                     u7450:
  2775                           	line	364
  2776                           	
  2777  012C                     l13074:	
  2778                           ;main.c: 364: goRight();
  2779  012C  160A  118A  231D   	fcall	_goRight
              120A  118A         
  2780  0131  29C6               	goto	l13110
  2781                           	
  2782  0132                     l6794:	
  2783  0132  29C6               	goto	l13110
  2784                           	line	365
  2785                           	
  2786  0133                     l6793:	
  2787  0133  29C6               	goto	l13110
  2788                           	
  2789  0134                     l6791:	
  2790                           ;main.c: 365: }
  2791  0134  29C6               	goto	l13110
  2792                           	line	366
  2793                           	
  2794  0135                     l6789:	
  2795                           	line	367
  2796                           	
  2797  0135                     l13076:	
  2798                           ;main.c: 366: else
  2799                           ;main.c: 367: goToNextCell();
  2800  0135  160A  118A  2698   	fcall	_goToNextCell
              120A  118A         
  2801  013A  29C6               	goto	l13110
  2802                           	
  2803  013B                     l6795:	
  2804                           	line	368
  2805                           ;main.c: 368: break;
  2806  013B  29C6               	goto	l13110
  2807                           	line	369
  2808                           ;main.c: 369: case 2:
  2809                           	
  2810  013C                     l6796:	
  2811                           	line	370
  2812                           ;main.c: 370: if (goingHome)
  2813  013C  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  2814  013D  293F               	goto	u7461
  2815  013E  2940               	goto	u7460
  2816  013F                     u7461:
  2817  013F  2971               	goto	l13090
  2818  0140                     u7460:
  2819                           	line	372
  2820                           	
  2821  0140                     l13078:	
  2822                           ;main.c: 371: {
  2823                           ;main.c: 372: if (victimZone == 2)
  2824  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  2825  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  2826  0142  0862               	movf	(_victimZone),w	;volatile
  2827  0143  3A02               	xorlw	02h
  2828  0144  1D03               	skipz
  2829  0145  2947               	goto	u7471
  2830  0146  2948               	goto	u7470
  2831  0147                     u7471:
  2832  0147  294E               	goto	l13082
  2833  0148                     u7470:
  2834                           	line	373
  2835                           	
  2836  0148                     l13080:	
  2837                           ;main.c: 373: goForward();
  2838  0148  160A  118A  21E0   	fcall	_goForward
              120A  118A         
  2839  014D  29C6               	goto	l13110
  2840                           	line	374
  2841                           	
  2842  014E                     l6798:	
  2843                           	
  2844  014E                     l13082:	
  2845                           ;main.c: 374: else if (getOrientation() == SOUTH)
  2846  014E  160A  118A  211D   	fcall	_getOrientation
              120A  118A         
  2847  0153  3A01               	xorlw	01h
  2848  0154  1D03               	skipz
  2849  0155  2957               	goto	u7481
  2850  0156  2958               	goto	u7480
  2851  0157                     u7481:
  2852  0157  295E               	goto	l13086
  2853  0158                     u7480:
  2854                           	line	375
  2855                           	
  2856  0158                     l13084:	
  2857                           ;main.c: 375: goRight();
  2858  0158  160A  118A  231D   	fcall	_goRight
              120A  118A         
  2859  015D  29C6               	goto	l13110
  2860                           	line	376
  2861                           	
  2862  015E                     l6800:	
  2863                           	
  2864  015E                     l13086:	
  2865                           ;main.c: 376: else if (getOrientation() == NORTH)
  2866  015E  160A  118A  211D   	fcall	_getOrientation
              120A  118A         
  2867  0163  3A03               	xorlw	03h
  2868  0164  1D03               	skipz
  2869  0165  2967               	goto	u7491
  2870  0166  2968               	goto	u7490
  2871  0167                     u7491:
  2872  0167  29C6               	goto	l13110
  2873  0168                     u7490:
  2874                           	line	377
  2875                           	
  2876  0168                     l13088:	
  2877                           ;main.c: 377: goLeft();
  2878  0168  160A  118A  22F7   	fcall	_goLeft
              120A  118A         
  2879  016D  29C6               	goto	l13110
  2880                           	
  2881  016E                     l6802:	
  2882  016E  29C6               	goto	l13110
  2883                           	line	378
  2884                           	
  2885  016F                     l6801:	
  2886  016F  29C6               	goto	l13110
  2887                           	
  2888  0170                     l6799:	
  2889                           ;main.c: 378: }
  2890  0170  29C6               	goto	l13110
  2891                           	line	379
  2892                           	
  2893  0171                     l6797:	
  2894                           	line	380
  2895                           	
  2896  0171                     l13090:	
  2897                           ;main.c: 379: else
  2898                           ;main.c: 380: goToNextCell();
  2899  0171  160A  118A  2698   	fcall	_goToNextCell
              120A  118A         
  2900  0176  29C6               	goto	l13110
  2901                           	
  2902  0177                     l6803:	
  2903                           	line	381
  2904                           ;main.c: 381: break;
  2905  0177  29C6               	goto	l13110
  2906                           	line	382
  2907                           ;main.c: 382: case 3:
  2908                           	
  2909  0178                     l6804:	
  2910                           	line	383
  2911                           ;main.c: 383: if (goingHome)
  2912  0178  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  2913  0179  297B               	goto	u7501
  2914  017A  297C               	goto	u7500
  2915  017B                     u7501:
  2916  017B  29AD               	goto	l13104
  2917  017C                     u7500:
  2918                           	line	385
  2919                           	
  2920  017C                     l13092:	
  2921                           ;main.c: 384: {
  2922                           ;main.c: 385: if (victimZone == 3)
  2923  017C  1283               	bcf	status, 5	;RP0=0, select bank0
  2924  017D  1303               	bcf	status, 6	;RP1=0, select bank0
  2925  017E  0862               	movf	(_victimZone),w	;volatile
  2926  017F  3A03               	xorlw	03h
  2927  0180  1D03               	skipz
  2928  0181  2983               	goto	u7511
  2929  0182  2984               	goto	u7510
  2930  0183                     u7511:
  2931  0183  298A               	goto	l13096
  2932  0184                     u7510:
  2933                           	line	386
  2934                           	
  2935  0184                     l13094:	
  2936                           ;main.c: 386: goRight();
  2937  0184  160A  118A  231D   	fcall	_goRight
              120A  118A         
  2938  0189  29C6               	goto	l13110
  2939                           	line	387
  2940                           	
  2941  018A                     l6806:	
  2942                           	
  2943  018A                     l13096:	
  2944                           ;main.c: 387: else if (getOrientation() == EAST)
  2945  018A  160A  118A  211D   	fcall	_getOrientation
              120A  118A         
  2946  018F  3A02               	xorlw	02h
  2947  0190  1D03               	skipz
  2948  0191  2993               	goto	u7521
  2949  0192  2994               	goto	u7520
  2950  0193                     u7521:
  2951  0193  299A               	goto	l13100
  2952  0194                     u7520:
  2953                           	line	388
  2954                           	
  2955  0194                     l13098:	
  2956                           ;main.c: 388: goForward();
  2957  0194  160A  118A  21E0   	fcall	_goForward
              120A  118A         
  2958  0199  29C6               	goto	l13110
  2959                           	line	389
  2960                           	
  2961  019A                     l6808:	
  2962                           	
  2963  019A                     l13100:	
  2964                           ;main.c: 389: else if (getOrientation() == SOUTH)
  2965  019A  160A  118A  211D   	fcall	_getOrientation
              120A  118A         
  2966  019F  3A01               	xorlw	01h
  2967  01A0  1D03               	skipz
  2968  01A1  29A3               	goto	u7531
  2969  01A2  29A4               	goto	u7530
  2970  01A3                     u7531:
  2971  01A3  29C6               	goto	l13110
  2972  01A4                     u7530:
  2973                           	line	390
  2974                           	
  2975  01A4                     l13102:	
  2976                           ;main.c: 390: goLeft();
  2977  01A4  160A  118A  22F7   	fcall	_goLeft
              120A  118A         
  2978  01A9  29C6               	goto	l13110
  2979                           	
  2980  01AA                     l6810:	
  2981  01AA  29C6               	goto	l13110
  2982                           	line	391
  2983                           	
  2984  01AB                     l6809:	
  2985  01AB  29C6               	goto	l13110
  2986                           	
  2987  01AC                     l6807:	
  2988                           ;main.c: 391: }
  2989  01AC  29C6               	goto	l13110
  2990                           	line	392
  2991                           	
  2992  01AD                     l6805:	
  2993                           	line	393
  2994                           	
  2995  01AD                     l13104:	
  2996                           ;main.c: 392: else
  2997                           ;main.c: 393: goToNextCell();
  2998  01AD  160A  118A  2698   	fcall	_goToNextCell
              120A  118A         
  2999  01B2  29C6               	goto	l13110
  3000                           	
  3001  01B3                     l6811:	
  3002                           	line	394
  3003                           ;main.c: 394: break;
  3004  01B3  29C6               	goto	l13110
  3005                           	line	395
  3006                           ;main.c: 395: default:
  3007                           	
  3008  01B4                     l6812:	
  3009                           	line	396
  3010                           ;main.c: 396: break;
  3011  01B4  29C6               	goto	l13110
  3012                           	line	397
  3013                           	
  3014  01B5                     l13106:	
  3015                           ;main.c: 397: }
  3016  01B5  29C6               	goto	l13110
  3017                           	line	351
  3018                           	
  3019  01B6                     l6785:	
  3020                           	
  3021  01B6                     l13108:	
  3022  01B6  1683               	bsf	status, 5	;RP0=1, select bank1
  3023  01B7  1303               	bcf	status, 6	;RP1=0, select bank1
  3024  01B8  0845               	movf	(_node)^080h,w	;volatile
  3025                           	; Switch size 1, requested type "space"
  3026                           ; Number of cases is 4, Range of values is 0 to 3
  3027                           ; switch strategies available:
  3028                           ; Name         Instructions Cycles
  3029                           ; simple_byte           13     7 (average)
  3030                           ; direct_byte           20     8 (fixed)
  3031                           ; jumptable            260     6 (fixed)
  3032                           ; rangetable             8     6 (fixed)
  3033                           ; spacedrange           14     9 (fixed)
  3034                           ; locatedrange           4     3 (fixed)
  3035                           ;	Chosen strategy is simple_byte
  3036                           
  3037                           	opt asmopt_off
  3038  01B9  3A00               	xorlw	0^0	; case 0
  3039  01BA  1903               	skipnz
  3040  01BB  28FA               	goto	l13062
  3041  01BC  3A01               	xorlw	1^0	; case 1
  3042  01BD  1903               	skipnz
  3043  01BE  2900               	goto	l6788
  3044  01BF  3A03               	xorlw	2^1	; case 2
  3045  01C0  1903               	skipnz
  3046  01C1  293C               	goto	l6796
  3047  01C2  3A01               	xorlw	3^2	; case 3
  3048  01C3  1903               	skipnz
  3049  01C4  2978               	goto	l6804
  3050  01C5  29C6               	goto	l13110
  3051                           	opt asmopt_on
  3052                           
  3053                           	line	397
  3054                           	
  3055  01C6                     l6787:	
  3056                           	line	398
  3057                           	
  3058  01C6                     l13110:	
  3059                           ;main.c: 398: play_iCreate_song(5);
  3060  01C6  3005               	movlw	(05h)
  3061  01C7  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  3062                           	line	401
  3063                           	
  3064  01CC                     l13112:	
  3065                           ;main.c: 401: if(getSuccessfulDrive())
  3066  01CC  160A  118A  2136   	fcall	_getSuccessfulDrive
              120A  118A         
  3067  01D1  1C03               	btfss	status,0
  3068  01D2  29D4               	goto	u7541
  3069  01D3  29D5               	goto	u7540
  3070  01D4                     u7541:
  3071  01D4  29F1               	goto	l13122
  3072  01D5                     u7540:
  3073                           	line	403
  3074                           	
  3075  01D5                     l13114:	
  3076                           ;main.c: 402: {
  3077                           ;main.c: 403: updateLocation();
  3078  01D5  120A  158A  20D1   	fcall	_updateLocation
              120A  118A         
  3079                           	line	404
  3080                           	
  3081  01DA                     l13116:	
  3082                           ;main.c: 404: updateNode();
  3083  01DA  160A  118A  2612   	fcall	_updateNode
              120A  118A         
  3084                           	line	405
  3085                           	
  3086  01DF                     l13118:	
  3087                           ;main.c: 405: if(goingHome)
  3088  01DF  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3089  01E0  29E2               	goto	u7551
  3090  01E1  29E3               	goto	u7550
  3091  01E2                     u7551:
  3092  01E2  29E8               	goto	l6814
  3093  01E3                     u7550:
  3094                           	line	406
  3095                           	
  3096  01E3                     l13120:	
  3097                           ;main.c: 406: checkIfHome();
  3098  01E3  160A  118A  224E   	fcall	_checkIfHome
              120A  118A         
  3099                           	
  3100  01E8                     l6814:	
  3101                           	line	407
  3102                           ;main.c: 407: play_iCreate_song(5);
  3103  01E8  3005               	movlw	(05h)
  3104  01E9  160A  118A  2167   	fcall	_play_iCreate_song
              120A  118A         
  3105  01EE  29F1               	goto	l13122
  3106                           	line	408
  3107                           	
  3108  01EF                     l6813:	
  3109  01EF  29F1               	goto	l13122
  3110                           	line	409
  3111                           	
  3112  01F0                     l6781:	
  3113  01F0  29F1               	goto	l13122
  3114                           	line	410
  3115                           	
  3116  01F1                     l6773:	
  3117                           	line	317
  3118                           	
  3119  01F1                     l13122:	
  3120  01F1  1F70               	btfss	(_home/8),(_home)&7
  3121  01F2  29F4               	goto	u7561
  3122  01F3  29F5               	goto	u7560
  3123  01F4                     u7561:
  3124  01F4  283E               	goto	l13008
  3125  01F5                     u7560:
  3126  01F5  29F6               	goto	l6816
  3127                           	
  3128  01F6                     l6815:	
  3129                           	line	412
  3130                           	
  3131  01F6                     l6816:	
  3132                           	global	start
  3133  01F6  120A  118A  2812   	ljmp	start
  3134                           	opt stack 0
  3135                           GLOBAL	__end_of_main
  3136  01F9                     	__end_of_main:
  3137 ;; =============== function _main ends ============
  3138                           
  3139                           	signat	_main,88
  3140                           	global	_goToNextCell
  3141                           psect	text1990,local,class=CODE,delta=2
  3142                           global __ptext1990
  3143  1698                     __ptext1990:
  3144                           
  3145 ;; *************** function _goToNextCell *****************
  3146 ;; Defined at:
  3147 ;;		line 241 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0
  3164 ;;      Totals:         0       0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    7
  3168 ;; This function calls:
  3169 ;;		_getSomethingInTheWay
  3170 ;;		_goLeft
  3171 ;;		_goForward
  3172 ;;		_goRight
  3173 ;;		_goBackward
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           psect	text1990
  3179                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  3180                           	line	241
  3181                           	global	__size_of_goToNextCell
  3182  0045                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  3183                           	
  3184  1698                     _goToNextCell:	
  3185                           	opt	stack 0
  3186                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3187                           	line	242
  3188                           	
  3189  1698                     l12984:	
  3190                           ;main.c: 242: if(!leftWall && (getSomethingInTheWay() != LEFT))
  3191  1698  1BF0               	btfsc	(_leftWall/8),(_leftWall)&7
  3192  1699  2E9B               	goto	u7231
  3193  169A  2E9C               	goto	u7230
  3194  169B                     u7231:
  3195  169B  2EAC               	goto	l6741
  3196  169C                     u7230:
  3197                           	
  3198  169C                     l12986:	
  3199  169C  160A  118A  2122   	fcall	_getSomethingInTheWay
              160A  118A         
  3200  16A1  3A01               	xorlw	01h
  3201  16A2  1903               	skipnz
  3202  16A3  2EA5               	goto	u7241
  3203  16A4  2EA6               	goto	u7240
  3204  16A5                     u7241:
  3205  16A5  2EAC               	goto	l6741
  3206  16A6                     u7240:
  3207                           	line	243
  3208                           	
  3209  16A6                     l12988:	
  3210                           ;main.c: 243: goLeft();
  3211  16A6  160A  118A  22F7   	fcall	_goLeft
              160A  118A         
  3212  16AB  2EDC               	goto	l6747
  3213                           	line	244
  3214                           	
  3215  16AC                     l6741:	
  3216                           ;main.c: 244: else if(!frontWall && (getSomethingInTheWay() != FORWARD))
  3217  16AC  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  3218  16AD  2EAF               	goto	u7251
  3219  16AE  2EB0               	goto	u7250
  3220  16AF                     u7251:
  3221  16AF  2EC0               	goto	l6743
  3222  16B0                     u7250:
  3223                           	
  3224  16B0                     l12990:	
  3225  16B0  160A  118A  2122   	fcall	_getSomethingInTheWay
              160A  118A         
  3226  16B5  3A00               	xorlw	0
  3227  16B6  1903               	skipnz
  3228  16B7  2EB9               	goto	u7261
  3229  16B8  2EBA               	goto	u7260
  3230  16B9                     u7261:
  3231  16B9  2EC0               	goto	l6743
  3232  16BA                     u7260:
  3233                           	line	245
  3234                           	
  3235  16BA                     l12992:	
  3236                           ;main.c: 245: goForward();
  3237  16BA  160A  118A  21E0   	fcall	_goForward
              160A  118A         
  3238  16BF  2EDC               	goto	l6747
  3239                           	line	246
  3240                           	
  3241  16C0                     l6743:	
  3242                           ;main.c: 246: else if(!rightWall && (getSomethingInTheWay() != RIGHT))
  3243  16C0  1971               	btfsc	(_rightWall/8),(_rightWall)&7
  3244  16C1  2EC3               	goto	u7271
  3245  16C2  2EC4               	goto	u7270
  3246  16C3                     u7271:
  3247  16C3  2ED4               	goto	l12998
  3248  16C4                     u7270:
  3249                           	
  3250  16C4                     l12994:	
  3251  16C4  160A  118A  2122   	fcall	_getSomethingInTheWay
              160A  118A         
  3252  16C9  3A03               	xorlw	03h
  3253  16CA  1903               	skipnz
  3254  16CB  2ECD               	goto	u7281
  3255  16CC  2ECE               	goto	u7280
  3256  16CD                     u7281:
  3257  16CD  2ED4               	goto	l12998
  3258  16CE                     u7280:
  3259                           	line	247
  3260                           	
  3261  16CE                     l12996:	
  3262                           ;main.c: 247: goRight();
  3263  16CE  160A  118A  231D   	fcall	_goRight
              160A  118A         
  3264  16D3  2EDC               	goto	l6747
  3265                           	line	248
  3266                           	
  3267  16D4                     l6745:	
  3268                           	line	249
  3269                           	
  3270  16D4                     l12998:	
  3271                           ;main.c: 248: else
  3272                           ;main.c: 249: goBackward();
  3273  16D4  160A  118A  2395   	fcall	_goBackward
              160A  118A         
  3274  16D9  2EDC               	goto	l6747
  3275                           	
  3276  16DA                     l6746:	
  3277  16DA  2EDC               	goto	l6747
  3278                           	
  3279  16DB                     l6744:	
  3280  16DB  2EDC               	goto	l6747
  3281                           	
  3282  16DC                     l6742:	
  3283                           	line	250
  3284                           	
  3285  16DC                     l6747:	
  3286  16DC  0008               	return
  3287                           	opt stack 0
  3288                           GLOBAL	__end_of_goToNextCell
  3289  16DD                     	__end_of_goToNextCell:
  3290 ;; =============== function _goToNextCell ends ============
  3291                           
  3292                           	signat	_goToNextCell,88
  3293                           	global	_findWalls
  3294                           psect	text1991,local,class=CODE,delta=2
  3295                           global __ptext1991
  3296  0A2C                     __ptext1991:
  3297                           
  3298 ;; *************** function _findWalls *****************
  3299 ;; Defined at:
  3300 ;;		line 175 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;		None               void
  3307 ;; Registers used:
  3308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0
  3316 ;;      Temps:          0       1       0       0       0
  3317 ;;      Totals:         0       1       0       0       0
  3318 ;;Total ram usage:        1 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    7
  3321 ;; This function calls:
  3322 ;;		_lcd_set_cursor
  3323 ;;		_findWall
  3324 ;;		_lcd_write_data
  3325 ;;		_rotateIR
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           psect	text1991
  3331                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  3332                           	line	175
  3333                           	global	__size_of_findWalls
  3334  007F                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  3335                           	
  3336  0A2C                     _findWalls:	
  3337                           	opt	stack 0
  3338                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3339                           	line	176
  3340                           	
  3341  0A2C                     l12958:	
  3342                           ;main.c: 176: lcd_set_cursor(0x0B);
  3343  0A2C  300B               	movlw	(0Bh)
  3344  0A2D  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  3345                           	line	178
  3346                           	
  3347  0A32                     l12960:	
  3348                           ;main.c: 178: leftWall = findWall();
  3349  0A32  160A  118A  2215   	fcall	_findWall
              120A  158A         
  3350  0A37  1803               	btfsc	status,0
  3351  0A38  2A3A               	goto	u7141
  3352  0A39  2A3C               	goto	u7140
  3353                           	
  3354  0A3A                     u7141:
  3355  0A3A  17F0               	bsf	(_leftWall/8),(_leftWall)&7
  3356  0A3B  2A3D               	goto	u7154
  3357  0A3C                     u7140:
  3358  0A3C  13F0               	bcf	(_leftWall/8),(_leftWall)&7
  3359  0A3D                     u7154:
  3360                           	line	179
  3361                           	
  3362  0A3D                     l12962:	
  3363                           ;main.c: 179: if(leftWall)
  3364  0A3D  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  3365  0A3E  2A40               	goto	u7161
  3366  0A3F  2A41               	goto	u7160
  3367  0A40                     u7161:
  3368  0A40  2A48               	goto	l12966
  3369  0A41                     u7160:
  3370                           	line	180
  3371                           	
  3372  0A41                     l12964:	
  3373                           ;main.c: 180: lcd_write_data('L');
  3374  0A41  304C               	movlw	(04Ch)
  3375  0A42  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  3376  0A47  2A4E               	goto	l6724
  3377                           	line	181
  3378                           	
  3379  0A48                     l6723:	
  3380                           	line	182
  3381                           	
  3382  0A48                     l12966:	
  3383                           ;main.c: 181: else
  3384                           ;main.c: 182: lcd_write_data(' ');
  3385  0A48  3020               	movlw	(020h)
  3386  0A49  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  3387                           	
  3388  0A4E                     l6724:	
  3389                           	line	184
  3390                           ;main.c: 184: rotateIR(24, 0b00001111);
  3391  0A4E  300F               	movlw	(0Fh)
  3392  0A4F  1283               	bcf	status, 5	;RP0=0, select bank0
  3393  0A50  1303               	bcf	status, 6	;RP1=0, select bank0
  3394  0A51  00CD               	movwf	(??_findWalls+0)+0
  3395  0A52  084D               	movf	(??_findWalls+0)+0,w
  3396  0A53  00AA               	movwf	(?_rotateIR)
  3397  0A54  3018               	movlw	(018h)
  3398  0A55  160A  118A  2442   	fcall	_rotateIR
              120A  158A         
  3399                           	line	185
  3400                           	
  3401  0A5A                     l12968:	
  3402                           ;main.c: 185: frontWall = findWall();
  3403  0A5A  160A  118A  2215   	fcall	_findWall
              120A  158A         
  3404  0A5F  1803               	btfsc	status,0
  3405  0A60  2A62               	goto	u7171
  3406  0A61  2A64               	goto	u7170
  3407                           	
  3408  0A62                     u7171:
  3409  0A62  1670               	bsf	(_frontWall/8),(_frontWall)&7
  3410  0A63  2A65               	goto	u7184
  3411  0A64                     u7170:
  3412  0A64  1270               	bcf	(_frontWall/8),(_frontWall)&7
  3413  0A65                     u7184:
  3414                           	line	186
  3415                           	
  3416  0A65                     l12970:	
  3417                           ;main.c: 186: if(frontWall)
  3418  0A65  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  3419  0A66  2A68               	goto	u7191
  3420  0A67  2A69               	goto	u7190
  3421  0A68                     u7191:
  3422  0A68  2A70               	goto	l12974
  3423  0A69                     u7190:
  3424                           	line	187
  3425                           	
  3426  0A69                     l12972:	
  3427                           ;main.c: 187: lcd_write_data('F');
  3428  0A69  3046               	movlw	(046h)
  3429  0A6A  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  3430  0A6F  2A76               	goto	l6726
  3431                           	line	188
  3432                           	
  3433  0A70                     l6725:	
  3434                           	line	189
  3435                           	
  3436  0A70                     l12974:	
  3437                           ;main.c: 188: else
  3438                           ;main.c: 189: lcd_write_data(' ');
  3439  0A70  3020               	movlw	(020h)
  3440  0A71  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  3441                           	
  3442  0A76                     l6726:	
  3443                           	line	191
  3444                           ;main.c: 191: rotateIR(24, 0b00001111);
  3445  0A76  300F               	movlw	(0Fh)
  3446  0A77  1283               	bcf	status, 5	;RP0=0, select bank0
  3447  0A78  1303               	bcf	status, 6	;RP1=0, select bank0
  3448  0A79  00CD               	movwf	(??_findWalls+0)+0
  3449  0A7A  084D               	movf	(??_findWalls+0)+0,w
  3450  0A7B  00AA               	movwf	(?_rotateIR)
  3451  0A7C  3018               	movlw	(018h)
  3452  0A7D  160A  118A  2442   	fcall	_rotateIR
              120A  158A         
  3453                           	line	192
  3454                           	
  3455  0A82                     l12976:	
  3456                           ;main.c: 192: rightWall = findWall();
  3457  0A82  160A  118A  2215   	fcall	_findWall
              120A  158A         
  3458  0A87  1803               	btfsc	status,0
  3459  0A88  2A8A               	goto	u7201
  3460  0A89  2A8C               	goto	u7200
  3461                           	
  3462  0A8A                     u7201:
  3463  0A8A  1571               	bsf	(_rightWall/8),(_rightWall)&7
  3464  0A8B  2A8D               	goto	u7214
  3465  0A8C                     u7200:
  3466  0A8C  1171               	bcf	(_rightWall/8),(_rightWall)&7
  3467  0A8D                     u7214:
  3468                           	line	193
  3469                           	
  3470  0A8D                     l12978:	
  3471                           ;main.c: 193: if(rightWall)
  3472  0A8D  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  3473  0A8E  2A90               	goto	u7221
  3474  0A8F  2A91               	goto	u7220
  3475  0A90                     u7221:
  3476  0A90  2A98               	goto	l12982
  3477  0A91                     u7220:
  3478                           	line	194
  3479                           	
  3480  0A91                     l12980:	
  3481                           ;main.c: 194: lcd_write_data('R');
  3482  0A91  3052               	movlw	(052h)
  3483  0A92  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  3484  0A97  2A9E               	goto	l6728
  3485                           	line	195
  3486                           	
  3487  0A98                     l6727:	
  3488                           	line	196
  3489                           	
  3490  0A98                     l12982:	
  3491                           ;main.c: 195: else
  3492                           ;main.c: 196: lcd_write_data(' ');
  3493  0A98  3020               	movlw	(020h)
  3494  0A99  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  3495                           	
  3496  0A9E                     l6728:	
  3497                           	line	198
  3498                           ;main.c: 198: rotateIR(36, 0b00001101);
  3499  0A9E  300D               	movlw	(0Dh)
  3500  0A9F  1283               	bcf	status, 5	;RP0=0, select bank0
  3501  0AA0  1303               	bcf	status, 6	;RP1=0, select bank0
  3502  0AA1  00CD               	movwf	(??_findWalls+0)+0
  3503  0AA2  084D               	movf	(??_findWalls+0)+0,w
  3504  0AA3  00AA               	movwf	(?_rotateIR)
  3505  0AA4  3024               	movlw	(024h)
  3506  0AA5  160A  118A  2442   	fcall	_rotateIR
              120A  158A         
  3507                           	line	199
  3508                           	
  3509  0AAA                     l6729:	
  3510  0AAA  0008               	return
  3511                           	opt stack 0
  3512                           GLOBAL	__end_of_findWalls
  3513  0AAB                     	__end_of_findWalls:
  3514 ;; =============== function _findWalls ends ============
  3515                           
  3516                           	signat	_findWalls,88
  3517                           	global	_goRight
  3518                           psect	text1992,local,class=CODE,delta=2
  3519                           global __ptext1992
  3520  131D                     __ptext1992:
  3521                           
  3522 ;; *************** function _goRight *****************
  3523 ;; Defined at:
  3524 ;;		line 198 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;		None               void
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3538 ;;      Params:         0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0
  3540 ;;      Temps:          0       1       0       0       0
  3541 ;;      Totals:         0       1       0       0       0
  3542 ;;Total ram usage:        1 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    6
  3545 ;; This function calls:
  3546 ;;		_lcd_set_cursor
  3547 ;;		_lcd_write_data
  3548 ;;		_turnRight90
  3549 ;;		_updateOrientation
  3550 ;;		_driveForDistance
  3551 ;; This function is called by:
  3552 ;;		_goToNextCell
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           psect	text1992
  3557                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  3558                           	line	198
  3559                           	global	__size_of_goRight
  3560  0027                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  3561                           	
  3562  131D                     _goRight:	
  3563                           	opt	stack 1
  3564                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3565                           	line	199
  3566                           	
  3567  131D                     l12948:	
  3568                           ;drive.c: 199: lcd_set_cursor(0x0F);
  3569  131D  300F               	movlw	(0Fh)
  3570  131E  160A  118A  2140   	fcall	_lcd_set_cursor
              160A  118A         
  3571                           	line	200
  3572                           ;drive.c: 200: lcd_write_data('R');
  3573  1323  3052               	movlw	(052h)
  3574  1324  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  3575                           	line	201
  3576                           	
  3577  1329                     l12950:	
  3578                           ;drive.c: 201: turnRight90();
  3579  1329  160A  118A  2592   	fcall	_turnRight90
              160A  118A         
  3580                           	line	202
  3581                           	
  3582  132E                     l12952:	
  3583                           ;drive.c: 202: updateOrientation(RIGHT);
  3584  132E  3003               	movlw	(03h)
  3585  132F  160A  118A  2156   	fcall	_updateOrientation
              160A  118A         
  3586                           	line	203
  3587                           	
  3588  1334                     l12954:	
  3589                           ;drive.c: 203: lastMove = RIGHT;
  3590  1334  3003               	movlw	(03h)
  3591  1335  1283               	bcf	status, 5	;RP0=0, select bank0
  3592  1336  1303               	bcf	status, 6	;RP1=0, select bank0
  3593  1337  00C2               	movwf	(??_goRight+0)+0
  3594  1338  0842               	movf	(??_goRight+0)+0,w
  3595  1339  00E1               	movwf	(_lastMove)	;volatile
  3596                           	line	204
  3597                           	
  3598  133A                     l12956:	
  3599                           ;drive.c: 204: driveForDistance(1000);
  3600  133A  30E8               	movlw	low(03E8h)
  3601  133B  00B6               	movwf	(?_driveForDistance)
  3602  133C  3003               	movlw	high(03E8h)
  3603  133D  00B7               	movwf	((?_driveForDistance))+1
  3604  133E  120A  118A  23C8   	fcall	_driveForDistance
              160A  118A         
  3605                           	line	205
  3606                           	
  3607  1343                     l5864:	
  3608  1343  0008               	return
  3609                           	opt stack 0
  3610                           GLOBAL	__end_of_goRight
  3611  1344                     	__end_of_goRight:
  3612 ;; =============== function _goRight ends ============
  3613                           
  3614                           	signat	_goRight,88
  3615                           	global	_goLeft
  3616                           psect	text1993,local,class=CODE,delta=2
  3617                           global __ptext1993
  3618  12F7                     __ptext1993:
  3619                           
  3620 ;; *************** function _goLeft *****************
  3621 ;; Defined at:
  3622 ;;		line 177 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;		None               void
  3629 ;; Registers used:
  3630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    6
  3643 ;; This function calls:
  3644 ;;		_lcd_set_cursor
  3645 ;;		_lcd_write_data
  3646 ;;		_turnLeft90
  3647 ;;		_updateOrientation
  3648 ;;		_driveForDistance
  3649 ;; This function is called by:
  3650 ;;		_goToNextCell
  3651 ;;		_main
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           psect	text1993
  3655                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  3656                           	line	177
  3657                           	global	__size_of_goLeft
  3658  0026                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  3659                           	
  3660  12F7                     _goLeft:	
  3661                           	opt	stack 1
  3662                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3663                           	line	178
  3664                           	
  3665  12F7                     l12938:	
  3666                           ;drive.c: 178: lcd_set_cursor(0x0F);
  3667  12F7  300F               	movlw	(0Fh)
  3668  12F8  160A  118A  2140   	fcall	_lcd_set_cursor
              160A  118A         
  3669                           	line	179
  3670                           ;drive.c: 179: lcd_write_data('L');
  3671  12FD  304C               	movlw	(04Ch)
  3672  12FE  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  3673                           	line	180
  3674                           	
  3675  1303                     l12940:	
  3676                           ;drive.c: 180: turnLeft90();
  3677  1303  160A  118A  24E2   	fcall	_turnLeft90
              160A  118A         
  3678                           	line	181
  3679                           	
  3680  1308                     l12942:	
  3681                           ;drive.c: 181: updateOrientation(LEFT);
  3682  1308  3001               	movlw	(01h)
  3683  1309  160A  118A  2156   	fcall	_updateOrientation
              160A  118A         
  3684                           	line	182
  3685                           	
  3686  130E                     l12944:	
  3687                           ;drive.c: 182: lastMove = LEFT;
  3688  130E  1283               	bcf	status, 5	;RP0=0, select bank0
  3689  130F  1303               	bcf	status, 6	;RP1=0, select bank0
  3690  1310  01E1               	clrf	(_lastMove)	;volatile
  3691  1311  1403               	bsf	status,0
  3692  1312  0DE1               	rlf	(_lastMove),f	;volatile
  3693                           	line	183
  3694                           	
  3695  1313                     l12946:	
  3696                           ;drive.c: 183: driveForDistance(1000);
  3697  1313  30E8               	movlw	low(03E8h)
  3698  1314  00B6               	movwf	(?_driveForDistance)
  3699  1315  3003               	movlw	high(03E8h)
  3700  1316  00B7               	movwf	((?_driveForDistance))+1
  3701  1317  120A  118A  23C8   	fcall	_driveForDistance
              160A  118A         
  3702                           	line	184
  3703                           	
  3704  131C                     l5858:	
  3705  131C  0008               	return
  3706                           	opt stack 0
  3707                           GLOBAL	__end_of_goLeft
  3708  131D                     	__end_of_goLeft:
  3709 ;; =============== function _goLeft ends ============
  3710                           
  3711                           	signat	_goLeft,88
  3712                           	global	_goForward
  3713                           psect	text1994,local,class=CODE,delta=2
  3714                           global __ptext1994
  3715  11E0                     __ptext1994:
  3716                           
  3717 ;; *************** function _goForward *****************
  3718 ;; Defined at:
  3719 ;;		line 168 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;		None               void
  3726 ;; Registers used:
  3727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    6
  3740 ;; This function calls:
  3741 ;;		_lcd_set_cursor
  3742 ;;		_lcd_write_data
  3743 ;;		_driveForDistance
  3744 ;; This function is called by:
  3745 ;;		_goToNextCell
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           psect	text1994
  3750                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  3751                           	line	168
  3752                           	global	__size_of_goForward
  3753  0019                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  3754                           	
  3755  11E0                     _goForward:	
  3756                           	opt	stack 1
  3757                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3758                           	line	169
  3759                           	
  3760  11E0                     l12932:	
  3761                           ;drive.c: 169: lcd_set_cursor(0x0F);
  3762  11E0  300F               	movlw	(0Fh)
  3763  11E1  160A  118A  2140   	fcall	_lcd_set_cursor
              160A  118A         
  3764                           	line	170
  3765                           ;drive.c: 170: lcd_write_data('F');
  3766  11E6  3046               	movlw	(046h)
  3767  11E7  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  3768                           	line	171
  3769                           	
  3770  11EC                     l12934:	
  3771                           ;drive.c: 171: lastMove = FORWARD;
  3772  11EC  1283               	bcf	status, 5	;RP0=0, select bank0
  3773  11ED  1303               	bcf	status, 6	;RP1=0, select bank0
  3774  11EE  01E1               	clrf	(_lastMove)	;volatile
  3775                           	line	172
  3776                           	
  3777  11EF                     l12936:	
  3778                           ;drive.c: 172: driveForDistance(1000);
  3779  11EF  30E8               	movlw	low(03E8h)
  3780  11F0  00B6               	movwf	(?_driveForDistance)
  3781  11F1  3003               	movlw	high(03E8h)
  3782  11F2  00B7               	movwf	((?_driveForDistance))+1
  3783  11F3  120A  118A  23C8   	fcall	_driveForDistance
              160A  118A         
  3784                           	line	173
  3785                           	
  3786  11F8                     l5855:	
  3787  11F8  0008               	return
  3788                           	opt stack 0
  3789                           GLOBAL	__end_of_goForward
  3790  11F9                     	__end_of_goForward:
  3791 ;; =============== function _goForward ends ============
  3792                           
  3793                           	signat	_goForward,88
  3794                           	global	_goBackward
  3795                           psect	text1995,local,class=CODE,delta=2
  3796                           global __ptext1995
  3797  1395                     __ptext1995:
  3798                           
  3799 ;; *************** function _goBackward *****************
  3800 ;; Defined at:
  3801 ;;		line 157 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;		None               void
  3808 ;; Registers used:
  3809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3815 ;;      Params:         0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0
  3817 ;;      Temps:          0       1       0       0       0
  3818 ;;      Totals:         0       1       0       0       0
  3819 ;;Total ram usage:        1 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    6
  3822 ;; This function calls:
  3823 ;;		_lcd_set_cursor
  3824 ;;		_lcd_write_data
  3825 ;;		_turnAround
  3826 ;;		_updateOrientation
  3827 ;;		_driveForDistance
  3828 ;; This function is called by:
  3829 ;;		_goToNextCell
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           psect	text1995
  3833                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  3834                           	line	157
  3835                           	global	__size_of_goBackward
  3836  0029                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  3837                           	
  3838  1395                     _goBackward:	
  3839                           	opt	stack 0
  3840                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3841                           	line	158
  3842                           	
  3843  1395                     l12922:	
  3844                           ;drive.c: 158: lcd_set_cursor(0x0F);
  3845  1395  300F               	movlw	(0Fh)
  3846  1396  160A  118A  2140   	fcall	_lcd_set_cursor
              160A  118A         
  3847                           	line	159
  3848                           ;drive.c: 159: lcd_write_data('B');
  3849  139B  3042               	movlw	(042h)
  3850  139C  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  3851                           	line	160
  3852                           	
  3853  13A1                     l12924:	
  3854                           ;drive.c: 160: turnAround();
  3855  13A1  160A  118A  26DD   	fcall	_turnAround
              160A  118A         
  3856                           	line	161
  3857                           	
  3858  13A6                     l12926:	
  3859                           ;drive.c: 161: updateOrientation(BACKWARD);
  3860  13A6  3002               	movlw	(02h)
  3861  13A7  160A  118A  2156   	fcall	_updateOrientation
              160A  118A         
  3862                           	line	162
  3863                           	
  3864  13AC                     l12928:	
  3865                           ;drive.c: 162: driveForDistance(1000);
  3866  13AC  30E8               	movlw	low(03E8h)
  3867  13AD  1283               	bcf	status, 5	;RP0=0, select bank0
  3868  13AE  1303               	bcf	status, 6	;RP1=0, select bank0
  3869  13AF  00B6               	movwf	(?_driveForDistance)
  3870  13B0  3003               	movlw	high(03E8h)
  3871  13B1  00B7               	movwf	((?_driveForDistance))+1
  3872  13B2  120A  118A  23C8   	fcall	_driveForDistance
              160A  118A         
  3873                           	line	163
  3874                           	
  3875  13B7                     l12930:	
  3876                           ;drive.c: 163: lastMove = BACKWARD;
  3877  13B7  3002               	movlw	(02h)
  3878  13B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3879  13B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3880  13BA  00C2               	movwf	(??_goBackward+0)+0
  3881  13BB  0842               	movf	(??_goBackward+0)+0,w
  3882  13BC  00E1               	movwf	(_lastMove)	;volatile
  3883                           	line	164
  3884                           	
  3885  13BD                     l5852:	
  3886  13BD  0008               	return
  3887                           	opt stack 0
  3888                           GLOBAL	__end_of_goBackward
  3889  13BE                     	__end_of_goBackward:
  3890 ;; =============== function _goBackward ends ============
  3891                           
  3892                           	signat	_goBackward,88
  3893                           	global	_goParallel
  3894                           psect	text1996,local,class=CODE,delta=2
  3895                           global __ptext1996
  3896  0EA5                     __ptext1996:
  3897                           
  3898 ;; *************** function _goParallel *****************
  3899 ;; Defined at:
  3900 ;;		line 202 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  step            2   18[BANK1 ] int 
  3905 ;;  angleParalle    2   20[BANK1 ] int 
  3906 ;;  distance        2   16[BANK1 ] int 
  3907 ;;  shortestDist    2   12[BANK1 ] int 
  3908 ;;  angleLowByte    1   15[BANK1 ] unsigned char 
  3909 ;;  angleHighByt    1   14[BANK1 ] unsigned char 
  3910 ;;  stepsToWall     1   11[BANK1 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         0       0       0       0       0
  3921 ;;      Locals:         0       0      11       0       0
  3922 ;;      Temps:          0       0       2       0       0
  3923 ;;      Totals:         0       0      13       0       0
  3924 ;;Total ram usage:       13 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    6
  3927 ;; This function calls:
  3928 ;;		_readIR
  3929 ;;		_rotateIR
  3930 ;;		___lbtoft
  3931 ;;		___ftmul
  3932 ;;		___ftadd
  3933 ;;		___fttol
  3934 ;;		_drive
  3935 ;;		_waitFor
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           psect	text1996
  3941                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  3942                           	line	202
  3943                           	global	__size_of_goParallel
  3944  015B                     	__size_of_goParallel	equ	__end_of_goParallel-_goParallel
  3945                           	
  3946  0EA5                     _goParallel:	
  3947                           	opt	stack 1
  3948                           ; Regs used in _goParallel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3949                           	line	203
  3950                           	
  3951  0EA5                     l12876:	
  3952                           ;main.c: 203: PORTC |= 0b00000011;
  3953  0EA5  3003               	movlw	(03h)
  3954  0EA6  1683               	bsf	status, 5	;RP0=1, select bank1
  3955  0EA7  1303               	bcf	status, 6	;RP1=0, select bank1
  3956  0EA8  00D4               	movwf	(??_goParallel+0)^080h+0
  3957  0EA9  0854               	movf	(??_goParallel+0)^080h+0,w
  3958  0EAA  1283               	bcf	status, 5	;RP0=0, select bank0
  3959  0EAB  1303               	bcf	status, 6	;RP1=0, select bank0
  3960  0EAC  0487               	iorwf	(7),f	;volatile
  3961                           	line	205
  3962                           	
  3963  0EAD                     l12878:	
  3964                           ;main.c: 205: int distance, shortestDistance = 999;
  3965  0EAD  30E7               	movlw	low(03E7h)
  3966  0EAE  1683               	bsf	status, 5	;RP0=1, select bank1
  3967  0EAF  1303               	bcf	status, 6	;RP1=0, select bank1
  3968  0EB0  00D7               	movwf	(goParallel@shortestDistance)^080h
  3969  0EB1  3003               	movlw	high(03E7h)
  3970  0EB2  00D8               	movwf	((goParallel@shortestDistance)^080h)+1
  3971                           	line	208
  3972                           	
  3973  0EB3                     l12880:	
  3974                           ;main.c: 206: char stepsToWall;
  3975                           ;main.c: 208: for (int step = -12; step <= 12; step++)
  3976  0EB3  30F4               	movlw	low(-12)
  3977  0EB4  00DD               	movwf	(goParallel@step)^080h
  3978  0EB5  30FF               	movlw	high(-12)
  3979  0EB6  00DE               	movwf	((goParallel@step)^080h)+1
  3980                           	
  3981  0EB7                     l12882:	
  3982  0EB7  085E               	movf	(goParallel@step+1)^080h,w
  3983  0EB8  3A80               	xorlw	80h
  3984  0EB9  00FF               	movwf	btemp+1
  3985  0EBA  3080               	movlw	(high(0Dh))^80h
  3986  0EBB  027F               	subwf	btemp+1,w
  3987  0EBC  1D03               	skipz
  3988  0EBD  2EC0               	goto	u7075
  3989  0EBE  300D               	movlw	low(0Dh)
  3990  0EBF  025D               	subwf	(goParallel@step)^080h,w
  3991  0EC0                     u7075:
  3992                           
  3993  0EC0  1C03               	skipc
  3994  0EC1  2EC3               	goto	u7071
  3995  0EC2  2EC4               	goto	u7070
  3996  0EC3                     u7071:
  3997  0EC3  2EC6               	goto	l12886
  3998  0EC4                     u7070:
  3999  0EC4  2F18               	goto	l12900
  4000                           	
  4001  0EC5                     l12884:	
  4002  0EC5  2F18               	goto	l12900
  4003                           	line	209
  4004                           	
  4005  0EC6                     l6732:	
  4006                           	line	210
  4007                           	
  4008  0EC6                     l12886:	
  4009                           ;main.c: 209: {
  4010                           ;main.c: 210: distance = readIR();
  4011  0EC6  120A  158A  2000   	fcall	_readIR
              120A  158A         
  4012  0ECB  1283               	bcf	status, 5	;RP0=0, select bank0
  4013  0ECC  1303               	bcf	status, 6	;RP1=0, select bank0
  4014  0ECD  084A               	movf	(1+(?_readIR)),w
  4015  0ECE  1683               	bsf	status, 5	;RP0=1, select bank1
  4016  0ECF  1303               	bcf	status, 6	;RP1=0, select bank1
  4017  0ED0  01DC               	clrf	(goParallel@distance+1)^080h
  4018  0ED1  07DC               	addwf	(goParallel@distance+1)^080h
  4019  0ED2  1283               	bcf	status, 5	;RP0=0, select bank0
  4020  0ED3  1303               	bcf	status, 6	;RP1=0, select bank0
  4021  0ED4  0849               	movf	(0+(?_readIR)),w
  4022  0ED5  1683               	bsf	status, 5	;RP0=1, select bank1
  4023  0ED6  1303               	bcf	status, 6	;RP1=0, select bank1
  4024  0ED7  01DB               	clrf	(goParallel@distance)^080h
  4025  0ED8  07DB               	addwf	(goParallel@distance)^080h
  4026                           
  4027                           	line	211
  4028                           	
  4029  0ED9                     l12888:	
  4030                           ;main.c: 211: if(distance < shortestDistance)
  4031  0ED9  085C               	movf	(goParallel@distance+1)^080h,w
  4032  0EDA  3A80               	xorlw	80h
  4033  0EDB  00D4               	movwf	(??_goParallel+0)^080h+0
  4034  0EDC  0858               	movf	(goParallel@shortestDistance+1)^080h,w
  4035  0EDD  3A80               	xorlw	80h
  4036  0EDE  0254               	subwf	(??_goParallel+0)^080h+0,w
  4037  0EDF  1D03               	skipz
  4038  0EE0  2EE3               	goto	u7085
  4039  0EE1  0857               	movf	(goParallel@shortestDistance)^080h,w
  4040  0EE2  025B               	subwf	(goParallel@distance)^080h,w
  4041  0EE3                     u7085:
  4042                           
  4043  0EE3  1803               	skipnc
  4044  0EE4  2EE6               	goto	u7081
  4045  0EE5  2EE7               	goto	u7080
  4046  0EE6                     u7081:
  4047  0EE6  2EF4               	goto	l12894
  4048  0EE7                     u7080:
  4049                           	line	213
  4050                           	
  4051  0EE7                     l12890:	
  4052                           ;main.c: 212: {
  4053                           ;main.c: 213: stepsToWall = step;
  4054  0EE7  1683               	bsf	status, 5	;RP0=1, select bank1
  4055  0EE8  1303               	bcf	status, 6	;RP1=0, select bank1
  4056  0EE9  085D               	movf	(goParallel@step)^080h,w
  4057  0EEA  00D4               	movwf	(??_goParallel+0)^080h+0
  4058  0EEB  0854               	movf	(??_goParallel+0)^080h+0,w
  4059  0EEC  00D6               	movwf	(goParallel@stepsToWall)^080h
  4060                           	line	214
  4061                           	
  4062  0EED                     l12892:	
  4063                           ;main.c: 214: shortestDistance = distance;
  4064  0EED  085C               	movf	(goParallel@distance+1)^080h,w
  4065  0EEE  01D8               	clrf	(goParallel@shortestDistance+1)^080h
  4066  0EEF  07D8               	addwf	(goParallel@shortestDistance+1)^080h
  4067  0EF0  085B               	movf	(goParallel@distance)^080h,w
  4068  0EF1  01D7               	clrf	(goParallel@shortestDistance)^080h
  4069  0EF2  07D7               	addwf	(goParallel@shortestDistance)^080h
  4070                           
  4071  0EF3  2EF4               	goto	l12894
  4072                           	line	215
  4073                           	
  4074  0EF4                     l6734:	
  4075                           	line	216
  4076                           	
  4077  0EF4                     l12894:	
  4078                           ;main.c: 215: }
  4079                           ;main.c: 216: rotateIR(1, 0b00001101);
  4080  0EF4  300D               	movlw	(0Dh)
  4081  0EF5  1683               	bsf	status, 5	;RP0=1, select bank1
  4082  0EF6  1303               	bcf	status, 6	;RP1=0, select bank1
  4083  0EF7  00D4               	movwf	(??_goParallel+0)^080h+0
  4084  0EF8  0854               	movf	(??_goParallel+0)^080h+0,w
  4085  0EF9  1283               	bcf	status, 5	;RP0=0, select bank0
  4086  0EFA  1303               	bcf	status, 6	;RP1=0, select bank0
  4087  0EFB  00AA               	movwf	(?_rotateIR)
  4088  0EFC  3001               	movlw	(01h)
  4089  0EFD  160A  118A  2442   	fcall	_rotateIR
              120A  158A         
  4090                           	line	208
  4091                           	
  4092  0F02                     l12896:	
  4093  0F02  3001               	movlw	low(01h)
  4094  0F03  1683               	bsf	status, 5	;RP0=1, select bank1
  4095  0F04  1303               	bcf	status, 6	;RP1=0, select bank1
  4096  0F05  07DD               	addwf	(goParallel@step)^080h,f
  4097  0F06  1803               	skipnc
  4098  0F07  0ADE               	incf	(goParallel@step+1)^080h,f
  4099  0F08  3000               	movlw	high(01h)
  4100  0F09  07DE               	addwf	(goParallel@step+1)^080h,f
  4101                           	
  4102  0F0A                     l12898:	
  4103  0F0A  085E               	movf	(goParallel@step+1)^080h,w
  4104  0F0B  3A80               	xorlw	80h
  4105  0F0C  00FF               	movwf	btemp+1
  4106  0F0D  3080               	movlw	(high(0Dh))^80h
  4107  0F0E  027F               	subwf	btemp+1,w
  4108  0F0F  1D03               	skipz
  4109  0F10  2F13               	goto	u7095
  4110  0F11  300D               	movlw	low(0Dh)
  4111  0F12  025D               	subwf	(goParallel@step)^080h,w
  4112  0F13                     u7095:
  4113                           
  4114  0F13  1C03               	skipc
  4115  0F14  2F16               	goto	u7091
  4116  0F15  2F17               	goto	u7090
  4117  0F16                     u7091:
  4118  0F16  2EC6               	goto	l12886
  4119  0F17                     u7090:
  4120  0F17  2F18               	goto	l12900
  4121                           	
  4122  0F18                     l6733:	
  4123                           	line	218
  4124                           	
  4125  0F18                     l12900:	
  4126                           ;main.c: 217: }
  4127                           ;main.c: 218: rotateIR(12, 0b00001111);
  4128  0F18  300F               	movlw	(0Fh)
  4129  0F19  1683               	bsf	status, 5	;RP0=1, select bank1
  4130  0F1A  1303               	bcf	status, 6	;RP1=0, select bank1
  4131  0F1B  00D4               	movwf	(??_goParallel+0)^080h+0
  4132  0F1C  0854               	movf	(??_goParallel+0)^080h+0,w
  4133  0F1D  1283               	bcf	status, 5	;RP0=0, select bank0
  4134  0F1E  1303               	bcf	status, 6	;RP1=0, select bank0
  4135  0F1F  00AA               	movwf	(?_rotateIR)
  4136  0F20  300C               	movlw	(0Ch)
  4137  0F21  160A  118A  2442   	fcall	_rotateIR
              120A  158A         
  4138                           	line	220
  4139                           ;main.c: 220: int angleParallelToWall = (int)((stepsToWall*3.75)-6);
  4140  0F26  1683               	bsf	status, 5	;RP0=1, select bank1
  4141  0F27  1303               	bcf	status, 6	;RP1=0, select bank1
  4142  0F28  0856               	movf	(goParallel@stepsToWall)^080h,w
  4143  0F29  160A  118A  228F   	fcall	___lbtoft
              120A  158A         
  4144  0F2E  1283               	bcf	status, 5	;RP0=0, select bank0
  4145  0F2F  1303               	bcf	status, 6	;RP1=0, select bank0
  4146  0F30  0840               	movf	(0+(?___lbtoft)),w
  4147  0F31  00CB               	movwf	0+(?___ftmul)+03h
  4148  0F32  0841               	movf	(1+(?___lbtoft)),w
  4149  0F33  00CC               	movwf	1+(?___ftmul)+03h
  4150  0F34  0842               	movf	(2+(?___lbtoft)),w
  4151  0F35  00CD               	movwf	2+(?___ftmul)+03h
  4152  0F36  3000               	movlw	0x0
  4153  0F37  00C8               	movwf	(?___ftmul)
  4154  0F38  3070               	movlw	0x70
  4155  0F39  00C9               	movwf	(?___ftmul+1)
  4156  0F3A  3040               	movlw	0x40
  4157  0F3B  00CA               	movwf	(?___ftmul+2)
  4158  0F3C  120A  118A  270E   	fcall	___ftmul
              120A  158A         
  4159  0F41  1283               	bcf	status, 5	;RP0=0, select bank0
  4160  0F42  1303               	bcf	status, 6	;RP1=0, select bank0
  4161  0F43  0848               	movf	(0+(?___ftmul)),w
  4162  0F44  1683               	bsf	status, 5	;RP0=1, select bank1
  4163  0F45  1303               	bcf	status, 6	;RP1=0, select bank1
  4164  0F46  00CE               	movwf	0+(?___ftadd)^080h+03h
  4165  0F47  1283               	bcf	status, 5	;RP0=0, select bank0
  4166  0F48  1303               	bcf	status, 6	;RP1=0, select bank0
  4167  0F49  0849               	movf	(1+(?___ftmul)),w
  4168  0F4A  1683               	bsf	status, 5	;RP0=1, select bank1
  4169  0F4B  1303               	bcf	status, 6	;RP1=0, select bank1
  4170  0F4C  00CF               	movwf	1+(?___ftadd)^080h+03h
  4171  0F4D  1283               	bcf	status, 5	;RP0=0, select bank0
  4172  0F4E  1303               	bcf	status, 6	;RP1=0, select bank0
  4173  0F4F  084A               	movf	(2+(?___ftmul)),w
  4174  0F50  1683               	bsf	status, 5	;RP0=1, select bank1
  4175  0F51  1303               	bcf	status, 6	;RP1=0, select bank1
  4176  0F52  00D0               	movwf	2+(?___ftadd)^080h+03h
  4177  0F53  3000               	movlw	0x0
  4178  0F54  00CB               	movwf	(?___ftadd)^080h
  4179  0F55  30C0               	movlw	0xc0
  4180  0F56  00CC               	movwf	(?___ftadd+1)^080h
  4181  0F57  30C0               	movlw	0xc0
  4182  0F58  00CD               	movwf	(?___ftadd+2)^080h
  4183  0F59  120A  118A  2581   	fcall	___ftadd
              120A  158A         
  4184  0F5E  1683               	bsf	status, 5	;RP0=1, select bank1
  4185  0F5F  1303               	bcf	status, 6	;RP1=0, select bank1
  4186  0F60  084B               	movf	(0+(?___ftadd))^080h,w
  4187  0F61  1283               	bcf	status, 5	;RP0=0, select bank0
  4188  0F62  1303               	bcf	status, 6	;RP1=0, select bank0
  4189  0F63  00B2               	movwf	(?___fttol)
  4190  0F64  1683               	bsf	status, 5	;RP0=1, select bank1
  4191  0F65  1303               	bcf	status, 6	;RP1=0, select bank1
  4192  0F66  084C               	movf	(1+(?___ftadd))^080h,w
  4193  0F67  1283               	bcf	status, 5	;RP0=0, select bank0
  4194  0F68  1303               	bcf	status, 6	;RP1=0, select bank0
  4195  0F69  00B3               	movwf	(?___fttol+1)
  4196  0F6A  1683               	bsf	status, 5	;RP0=1, select bank1
  4197  0F6B  1303               	bcf	status, 6	;RP1=0, select bank1
  4198  0F6C  084D               	movf	(2+(?___ftadd))^080h,w
  4199  0F6D  1283               	bcf	status, 5	;RP0=0, select bank0
  4200  0F6E  1303               	bcf	status, 6	;RP1=0, select bank0
  4201  0F6F  00B4               	movwf	(?___fttol+2)
  4202  0F70  120A  158A  2346   	fcall	___fttol
              120A  158A         
  4203  0F75  1283               	bcf	status, 5	;RP0=0, select bank0
  4204  0F76  1303               	bcf	status, 6	;RP1=0, select bank0
  4205  0F77  0833               	movf	1+(((0+(?___fttol)))),w
  4206  0F78  1683               	bsf	status, 5	;RP0=1, select bank1
  4207  0F79  1303               	bcf	status, 6	;RP1=0, select bank1
  4208  0F7A  01E0               	clrf	(goParallel@angleParallelToWall+1)^080h
  4209  0F7B  07E0               	addwf	(goParallel@angleParallelToWall+1)^080h
  4210  0F7C  1283               	bcf	status, 5	;RP0=0, select bank0
  4211  0F7D  1303               	bcf	status, 6	;RP1=0, select bank0
  4212  0F7E  0832               	movf	0+(((0+(?___fttol)))),w
  4213  0F7F  1683               	bsf	status, 5	;RP0=1, select bank1
  4214  0F80  1303               	bcf	status, 6	;RP1=0, select bank1
  4215  0F81  01DF               	clrf	(goParallel@angleParallelToWall)^080h
  4216  0F82  07DF               	addwf	(goParallel@angleParallelToWall)^080h
  4217                           
  4218                           	line	221
  4219                           	
  4220  0F83                     l12902:	
  4221                           ;main.c: 221: char angleHighByte = 0;
  4222  0F83  01D9               	clrf	(goParallel@angleHighByte)^080h
  4223                           	line	222
  4224                           	
  4225  0F84                     l12904:	
  4226                           ;main.c: 222: char angleLowByte = (char) angleParallelToWall;
  4227  0F84  085F               	movf	(goParallel@angleParallelToWall)^080h,w
  4228  0F85  00D4               	movwf	(??_goParallel+0)^080h+0
  4229  0F86  0854               	movf	(??_goParallel+0)^080h+0,w
  4230  0F87  00DA               	movwf	(goParallel@angleLowByte)^080h
  4231                           	line	224
  4232                           	
  4233  0F88                     l12906:	
  4234                           ;main.c: 224: if(angleParallelToWall < 0)
  4235  0F88  1FE0               	btfss	(goParallel@angleParallelToWall+1)^080h,7
  4236  0F89  2F8B               	goto	u7101
  4237  0F8A  2F8C               	goto	u7100
  4238  0F8B                     u7101:
  4239  0F8B  2F95               	goto	l12910
  4240  0F8C                     u7100:
  4241                           	line	225
  4242                           	
  4243  0F8C                     l12908:	
  4244                           ;main.c: 225: angleParallelToWall = 360 + angleParallelToWall;
  4245  0F8C  085F               	movf	(goParallel@angleParallelToWall)^080h,w
  4246  0F8D  3E68               	addlw	low(0168h)
  4247  0F8E  00DF               	movwf	(goParallel@angleParallelToWall)^080h
  4248  0F8F  0860               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4249  0F90  1803               	skipnc
  4250  0F91  3E01               	addlw	1
  4251  0F92  3E01               	addlw	high(0168h)
  4252  0F93  00E0               	movwf	1+(goParallel@angleParallelToWall)^080h
  4253  0F94  2F95               	goto	l12910
  4254                           	
  4255  0F95                     l6735:	
  4256                           	line	227
  4257                           	
  4258  0F95                     l12910:	
  4259                           ;main.c: 227: if(angleParallelToWall > 255)
  4260  0F95  0860               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4261  0F96  3A80               	xorlw	80h
  4262  0F97  00FF               	movwf	btemp+1
  4263  0F98  3081               	movlw	(high(0100h))^80h
  4264  0F99  027F               	subwf	btemp+1,w
  4265  0F9A  1D03               	skipz
  4266  0F9B  2F9E               	goto	u7115
  4267  0F9C  3000               	movlw	low(0100h)
  4268  0F9D  025F               	subwf	(goParallel@angleParallelToWall)^080h,w
  4269  0F9E                     u7115:
  4270                           
  4271  0F9E  1C03               	skipc
  4272  0F9F  2FA1               	goto	u7111
  4273  0FA0  2FA2               	goto	u7110
  4274  0FA1                     u7111:
  4275  0FA1  2FAD               	goto	l12916
  4276  0FA2                     u7110:
  4277                           	line	229
  4278                           	
  4279  0FA2                     l12912:	
  4280                           ;main.c: 228: {
  4281                           ;main.c: 229: angleHighByte = 1;
  4282  0FA2  1683               	bsf	status, 5	;RP0=1, select bank1
  4283  0FA3  1303               	bcf	status, 6	;RP1=0, select bank1
  4284  0FA4  01D9               	clrf	(goParallel@angleHighByte)^080h
  4285  0FA5  1403               	bsf	status,0
  4286  0FA6  0DD9               	rlf	(goParallel@angleHighByte)^080h,f
  4287                           	line	230
  4288                           	
  4289  0FA7                     l12914:	
  4290                           ;main.c: 230: angleLowByte = (char)(angleParallelToWall - 255);
  4291  0FA7  085F               	movf	(goParallel@angleParallelToWall)^080h,w
  4292  0FA8  3E01               	addlw	01h
  4293  0FA9  00D4               	movwf	(??_goParallel+0)^080h+0
  4294  0FAA  0854               	movf	(??_goParallel+0)^080h+0,w
  4295  0FAB  00DA               	movwf	(goParallel@angleLowByte)^080h
  4296  0FAC  2FAD               	goto	l12916
  4297                           	line	231
  4298                           	
  4299  0FAD                     l6736:	
  4300                           	line	232
  4301                           	
  4302  0FAD                     l12916:	
  4303                           ;main.c: 231: }
  4304                           ;main.c: 232: if((angleParallelToWall > 8) && (angleParallelToWall < 352))
  4305  0FAD  1683               	bsf	status, 5	;RP0=1, select bank1
  4306  0FAE  1303               	bcf	status, 6	;RP1=0, select bank1
  4307  0FAF  0860               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4308  0FB0  3A80               	xorlw	80h
  4309  0FB1  00FF               	movwf	btemp+1
  4310  0FB2  3080               	movlw	(high(09h))^80h
  4311  0FB3  027F               	subwf	btemp+1,w
  4312  0FB4  1D03               	skipz
  4313  0FB5  2FB8               	goto	u7125
  4314  0FB6  3009               	movlw	low(09h)
  4315  0FB7  025F               	subwf	(goParallel@angleParallelToWall)^080h,w
  4316  0FB8                     u7125:
  4317                           
  4318  0FB8  1C03               	skipc
  4319  0FB9  2FBB               	goto	u7121
  4320  0FBA  2FBC               	goto	u7120
  4321  0FBB                     u7121:
  4322  0FBB  2FFF               	goto	l6738
  4323  0FBC                     u7120:
  4324                           	
  4325  0FBC                     l12918:	
  4326  0FBC  1683               	bsf	status, 5	;RP0=1, select bank1
  4327  0FBD  1303               	bcf	status, 6	;RP1=0, select bank1
  4328  0FBE  0860               	movf	(goParallel@angleParallelToWall+1)^080h,w
  4329  0FBF  3A80               	xorlw	80h
  4330  0FC0  00FF               	movwf	btemp+1
  4331  0FC1  3081               	movlw	(high(0160h))^80h
  4332  0FC2  027F               	subwf	btemp+1,w
  4333  0FC3  1D03               	skipz
  4334  0FC4  2FC7               	goto	u7135
  4335  0FC5  3060               	movlw	low(0160h)
  4336  0FC6  025F               	subwf	(goParallel@angleParallelToWall)^080h,w
  4337  0FC7                     u7135:
  4338                           
  4339  0FC7  1803               	skipnc
  4340  0FC8  2FCA               	goto	u7131
  4341  0FC9  2FCB               	goto	u7130
  4342  0FCA                     u7131:
  4343  0FCA  2FFF               	goto	l6738
  4344  0FCB                     u7130:
  4345                           	line	234
  4346                           	
  4347  0FCB                     l12920:	
  4348                           ;main.c: 233: {
  4349                           ;main.c: 234: drive(0, 50, 0, 1);
  4350  0FCB  3032               	movlw	(032h)
  4351  0FCC  1683               	bsf	status, 5	;RP0=1, select bank1
  4352  0FCD  1303               	bcf	status, 6	;RP1=0, select bank1
  4353  0FCE  00D4               	movwf	(??_goParallel+0)^080h+0
  4354  0FCF  0854               	movf	(??_goParallel+0)^080h+0,w
  4355  0FD0  1283               	bcf	status, 5	;RP0=0, select bank0
  4356  0FD1  1303               	bcf	status, 6	;RP1=0, select bank0
  4357  0FD2  00AC               	movwf	(?_drive)
  4358  0FD3  01AD               	clrf	0+(?_drive)+01h
  4359  0FD4  01AE               	clrf	0+(?_drive)+02h
  4360  0FD5  1403               	bsf	status,0
  4361  0FD6  0DAE               	rlf	0+(?_drive)+02h,f
  4362  0FD7  3000               	movlw	(0)
  4363  0FD8  160A  118A  24AB   	fcall	_drive
              120A  158A         
  4364                           	line	235
  4365                           ;main.c: 235: waitFor(157,angleHighByte,angleLowByte);
  4366  0FDD  1683               	bsf	status, 5	;RP0=1, select bank1
  4367  0FDE  1303               	bcf	status, 6	;RP1=0, select bank1
  4368  0FDF  0859               	movf	(goParallel@angleHighByte)^080h,w
  4369  0FE0  00D4               	movwf	(??_goParallel+0)^080h+0
  4370  0FE1  0854               	movf	(??_goParallel+0)^080h+0,w
  4371  0FE2  1283               	bcf	status, 5	;RP0=0, select bank0
  4372  0FE3  1303               	bcf	status, 6	;RP1=0, select bank0
  4373  0FE4  00AC               	movwf	(?_waitFor)
  4374  0FE5  1683               	bsf	status, 5	;RP0=1, select bank1
  4375  0FE6  1303               	bcf	status, 6	;RP1=0, select bank1
  4376  0FE7  085A               	movf	(goParallel@angleLowByte)^080h,w
  4377  0FE8  00D5               	movwf	(??_goParallel+1)^080h+0
  4378  0FE9  0855               	movf	(??_goParallel+1)^080h+0,w
  4379  0FEA  1283               	bcf	status, 5	;RP0=0, select bank0
  4380  0FEB  1303               	bcf	status, 6	;RP1=0, select bank0
  4381  0FEC  00AD               	movwf	0+(?_waitFor)+01h
  4382  0FED  309D               	movlw	(09Dh)
  4383  0FEE  160A  118A  236C   	fcall	_waitFor
              120A  158A         
  4384                           	line	236
  4385                           ;main.c: 236: drive(0, 0, 0, 0);
  4386  0FF3  1283               	bcf	status, 5	;RP0=0, select bank0
  4387  0FF4  1303               	bcf	status, 6	;RP1=0, select bank0
  4388  0FF5  01AC               	clrf	(?_drive)
  4389  0FF6  01AD               	clrf	0+(?_drive)+01h
  4390  0FF7  01AE               	clrf	0+(?_drive)+02h
  4391  0FF8  3000               	movlw	(0)
  4392  0FF9  160A  118A  24AB   	fcall	_drive
              120A  158A         
  4393  0FFE  2FFF               	goto	l6738
  4394                           	line	237
  4395                           	
  4396  0FFF                     l6737:	
  4397                           	line	238
  4398                           	
  4399  0FFF                     l6738:	
  4400  0FFF  0008               	return
  4401                           	opt stack 0
  4402                           GLOBAL	__end_of_goParallel
  4403  1000                     	__end_of_goParallel:
  4404 ;; =============== function _goParallel ends ============
  4405                           
  4406                           	signat	_goParallel,88
  4407                           	global	_findWall
  4408                           psect	text1997,local,class=CODE,delta=2
  4409                           global __ptext1997
  4410  1215                     __ptext1997:
  4411                           
  4412 ;; *************** function _findWall *****************
  4413 ;; Defined at:
  4414 ;;		line 418 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;		None               void
  4421 ;; Registers used:
  4422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0
  4431 ;;      Totals:         0       0       0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    6
  4435 ;; This function calls:
  4436 ;;		_readIR
  4437 ;; This function is called by:
  4438 ;;		_findWalls
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           psect	text1997
  4442                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  4443                           	line	418
  4444                           	global	__size_of_findWall
  4445  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  4446                           	
  4447  1215                     _findWall:	
  4448                           	opt	stack 0
  4449                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4450                           	line	419
  4451                           	
  4452  1215                     l12864:	
  4453                           ;main.c: 419: if(readIR() > 100)
  4454  1215  120A  158A  2000   	fcall	_readIR
              160A  118A         
  4455  121A  1283               	bcf	status, 5	;RP0=0, select bank0
  4456  121B  1303               	bcf	status, 6	;RP1=0, select bank0
  4457  121C  084A               	movf	(1+(?_readIR)),w
  4458  121D  3A80               	xorlw	80h
  4459  121E  00FF               	movwf	btemp+1
  4460  121F  3080               	movlw	(high(065h))^80h
  4461  1220  027F               	subwf	btemp+1,w
  4462  1221  1D03               	skipz
  4463  1222  2A25               	goto	u7065
  4464  1223  3065               	movlw	low(065h)
  4465  1224  0249               	subwf	(0+(?_readIR)),w
  4466  1225                     u7065:
  4467                           
  4468  1225  1C03               	skipc
  4469  1226  2A28               	goto	u7061
  4470  1227  2A29               	goto	u7060
  4471  1228                     u7061:
  4472  1228  2A2D               	goto	l12872
  4473  1229                     u7060:
  4474                           	line	420
  4475                           	
  4476  1229                     l12866:	
  4477                           ;main.c: 420: return 0;
  4478  1229  1003               	clrc
  4479                           	
  4480  122A  2A30               	goto	l6820
  4481                           	
  4482  122B                     l12868:	
  4483  122B  2A30               	goto	l6820
  4484                           	
  4485  122C                     l12870:	
  4486  122C  2A30               	goto	l6820
  4487                           	line	421
  4488                           	
  4489  122D                     l6819:	
  4490                           	line	422
  4491                           	
  4492  122D                     l12872:	
  4493                           ;main.c: 421: else
  4494                           ;main.c: 422: return 1;
  4495  122D  1403               	setc
  4496                           	
  4497  122E  2A30               	goto	l6820
  4498                           	
  4499  122F                     l12874:	
  4500  122F  2A30               	goto	l6820
  4501                           	
  4502  1230                     l6821:	
  4503                           	line	423
  4504                           	
  4505  1230                     l6820:	
  4506  1230  0008               	return
  4507                           	opt stack 0
  4508                           GLOBAL	__end_of_findWall
  4509  1231                     	__end_of_findWall:
  4510 ;; =============== function _findWall ends ============
  4511                           
  4512                           	signat	_findWall,88
  4513                           	global	_frontWallCorrect
  4514                           psect	text1998,local,class=CODE,delta=2
  4515                           global __ptext1998
  4516  0BEC                     __ptext1998:
  4517                           
  4518 ;; *************** function _frontWallCorrect *****************
  4519 ;; Defined at:
  4520 ;;		line 265 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  distToWall      2   47[BANK0 ] int 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;		None               void
  4527 ;; Registers used:
  4528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4534 ;;      Params:         0       0       0       0       0
  4535 ;;      Locals:         0       2       0       0       0
  4536 ;;      Temps:          0       2       0       0       0
  4537 ;;      Totals:         0       4       0       0       0
  4538 ;;Total ram usage:        4 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    6
  4541 ;; This function calls:
  4542 ;;		_rotateIR
  4543 ;;		_readIR
  4544 ;;		_drive
  4545 ;; This function is called by:
  4546 ;;		_main
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           psect	text1998
  4550                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  4551                           	line	265
  4552                           	global	__size_of_frontWallCorrect
  4553  00AB                     	__size_of_frontWallCorrect	equ	__end_of_frontWallCorrect-_frontWallCorrect
  4554                           	
  4555  0BEC                     _frontWallCorrect:	
  4556                           	opt	stack 1
  4557                           ; Regs used in _frontWallCorrect: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4558                           	line	266
  4559                           	
  4560  0BEC                     l12842:	
  4561                           ;drive.c: 266: rotateIR(24, 0b00001111);
  4562  0BEC  300F               	movlw	(0Fh)
  4563  0BED  1283               	bcf	status, 5	;RP0=0, select bank0
  4564  0BEE  1303               	bcf	status, 6	;RP1=0, select bank0
  4565  0BEF  00CD               	movwf	(??_frontWallCorrect+0)+0
  4566  0BF0  084D               	movf	(??_frontWallCorrect+0)+0,w
  4567  0BF1  00AA               	movwf	(?_rotateIR)
  4568  0BF2  3018               	movlw	(018h)
  4569  0BF3  160A  118A  2442   	fcall	_rotateIR
              120A  158A         
  4570                           	line	267
  4571                           	
  4572  0BF8                     l12844:	
  4573                           ;drive.c: 267: int distToWall = readIR();
  4574  0BF8  120A  158A  2000   	fcall	_readIR
              120A  158A         
  4575  0BFD  1283               	bcf	status, 5	;RP0=0, select bank0
  4576  0BFE  1303               	bcf	status, 6	;RP1=0, select bank0
  4577  0BFF  084A               	movf	(1+(?_readIR)),w
  4578  0C00  01D0               	clrf	(frontWallCorrect@distToWall+1)
  4579  0C01  07D0               	addwf	(frontWallCorrect@distToWall+1)
  4580  0C02  0849               	movf	(0+(?_readIR)),w
  4581  0C03  01CF               	clrf	(frontWallCorrect@distToWall)
  4582  0C04  07CF               	addwf	(frontWallCorrect@distToWall)
  4583                           
  4584                           	line	268
  4585                           	
  4586  0C05                     l12846:	
  4587                           ;drive.c: 268: if(distToWall < 45)
  4588  0C05  0850               	movf	(frontWallCorrect@distToWall+1),w
  4589  0C06  3A80               	xorlw	80h
  4590  0C07  00FF               	movwf	btemp+1
  4591  0C08  3080               	movlw	(high(02Dh))^80h
  4592  0C09  027F               	subwf	btemp+1,w
  4593  0C0A  1D03               	skipz
  4594  0C0B  2C0E               	goto	u7025
  4595  0C0C  302D               	movlw	low(02Dh)
  4596  0C0D  024F               	subwf	(frontWallCorrect@distToWall),w
  4597  0C0E                     u7025:
  4598                           
  4599  0C0E  1803               	skipnc
  4600  0C0F  2C11               	goto	u7021
  4601  0C10  2C12               	goto	u7020
  4602  0C11                     u7021:
  4603  0C11  2C46               	goto	l12854
  4604  0C12                     u7020:
  4605                           	line	270
  4606                           	
  4607  0C12                     l12848:	
  4608                           ;drive.c: 269: {
  4609                           ;drive.c: 270: drive(255, 125, 128, 0);
  4610  0C12  307D               	movlw	(07Dh)
  4611  0C13  1283               	bcf	status, 5	;RP0=0, select bank0
  4612  0C14  1303               	bcf	status, 6	;RP1=0, select bank0
  4613  0C15  00CD               	movwf	(??_frontWallCorrect+0)+0
  4614  0C16  084D               	movf	(??_frontWallCorrect+0)+0,w
  4615  0C17  00AC               	movwf	(?_drive)
  4616  0C18  3080               	movlw	(080h)
  4617  0C19  00CE               	movwf	(??_frontWallCorrect+1)+0
  4618  0C1A  084E               	movf	(??_frontWallCorrect+1)+0,w
  4619  0C1B  00AD               	movwf	0+(?_drive)+01h
  4620  0C1C  01AE               	clrf	0+(?_drive)+02h
  4621  0C1D  30FF               	movlw	(0FFh)
  4622  0C1E  160A  118A  24AB   	fcall	_drive
              120A  158A         
  4623                           	line	271
  4624                           ;drive.c: 271: while(readIR() < 51){}
  4625  0C23  2C25               	goto	l12850
  4626                           	
  4627  0C24                     l5885:	
  4628  0C24  2C25               	goto	l12850
  4629                           	
  4630  0C25                     l5884:	
  4631                           	
  4632  0C25                     l12850:	
  4633  0C25  120A  158A  2000   	fcall	_readIR
              120A  158A         
  4634  0C2A  1283               	bcf	status, 5	;RP0=0, select bank0
  4635  0C2B  1303               	bcf	status, 6	;RP1=0, select bank0
  4636  0C2C  084A               	movf	(1+(?_readIR)),w
  4637  0C2D  3A80               	xorlw	80h
  4638  0C2E  00FF               	movwf	btemp+1
  4639  0C2F  3080               	movlw	(high(033h))^80h
  4640  0C30  027F               	subwf	btemp+1,w
  4641  0C31  1D03               	skipz
  4642  0C32  2C35               	goto	u7035
  4643  0C33  3033               	movlw	low(033h)
  4644  0C34  0249               	subwf	(0+(?_readIR)),w
  4645  0C35                     u7035:
  4646                           
  4647  0C35  1C03               	skipc
  4648  0C36  2C38               	goto	u7031
  4649  0C37  2C39               	goto	u7030
  4650  0C38                     u7031:
  4651  0C38  2C25               	goto	l12850
  4652  0C39                     u7030:
  4653  0C39  2C3A               	goto	l12852
  4654                           	
  4655  0C3A                     l5886:	
  4656                           	line	272
  4657                           	
  4658  0C3A                     l12852:	
  4659                           ;drive.c: 272: drive(0, 0, 0, 0);
  4660  0C3A  1283               	bcf	status, 5	;RP0=0, select bank0
  4661  0C3B  1303               	bcf	status, 6	;RP1=0, select bank0
  4662  0C3C  01AC               	clrf	(?_drive)
  4663  0C3D  01AD               	clrf	0+(?_drive)+01h
  4664  0C3E  01AE               	clrf	0+(?_drive)+02h
  4665  0C3F  3000               	movlw	(0)
  4666  0C40  160A  118A  24AB   	fcall	_drive
              120A  158A         
  4667                           	line	273
  4668                           ;drive.c: 273: }
  4669  0C45  2C8A               	goto	l12862
  4670                           	line	274
  4671                           	
  4672  0C46                     l5883:	
  4673                           	
  4674  0C46                     l12854:	
  4675                           ;drive.c: 274: else if(distToWall > 55)
  4676  0C46  1283               	bcf	status, 5	;RP0=0, select bank0
  4677  0C47  1303               	bcf	status, 6	;RP1=0, select bank0
  4678  0C48  0850               	movf	(frontWallCorrect@distToWall+1),w
  4679  0C49  3A80               	xorlw	80h
  4680  0C4A  00FF               	movwf	btemp+1
  4681  0C4B  3080               	movlw	(high(038h))^80h
  4682  0C4C  027F               	subwf	btemp+1,w
  4683  0C4D  1D03               	skipz
  4684  0C4E  2C51               	goto	u7045
  4685  0C4F  3038               	movlw	low(038h)
  4686  0C50  024F               	subwf	(frontWallCorrect@distToWall),w
  4687  0C51                     u7045:
  4688                           
  4689  0C51  1C03               	skipc
  4690  0C52  2C54               	goto	u7041
  4691  0C53  2C55               	goto	u7040
  4692  0C54                     u7041:
  4693  0C54  2C8A               	goto	l12862
  4694  0C55                     u7040:
  4695                           	line	276
  4696                           	
  4697  0C55                     l12856:	
  4698                           ;drive.c: 275: {
  4699                           ;drive.c: 276: drive(0, 250, 128, 0);
  4700  0C55  30FA               	movlw	(0FAh)
  4701  0C56  1283               	bcf	status, 5	;RP0=0, select bank0
  4702  0C57  1303               	bcf	status, 6	;RP1=0, select bank0
  4703  0C58  00CD               	movwf	(??_frontWallCorrect+0)+0
  4704  0C59  084D               	movf	(??_frontWallCorrect+0)+0,w
  4705  0C5A  00AC               	movwf	(?_drive)
  4706  0C5B  3080               	movlw	(080h)
  4707  0C5C  00CE               	movwf	(??_frontWallCorrect+1)+0
  4708  0C5D  084E               	movf	(??_frontWallCorrect+1)+0,w
  4709  0C5E  00AD               	movwf	0+(?_drive)+01h
  4710  0C5F  01AE               	clrf	0+(?_drive)+02h
  4711  0C60  3000               	movlw	(0)
  4712  0C61  160A  118A  24AB   	fcall	_drive
              120A  158A         
  4713                           	line	277
  4714                           ;drive.c: 277: while(readIR() > 51){}
  4715  0C66  2C68               	goto	l12858
  4716                           	
  4717  0C67                     l5890:	
  4718  0C67  2C68               	goto	l12858
  4719                           	
  4720  0C68                     l5889:	
  4721                           	
  4722  0C68                     l12858:	
  4723  0C68  120A  158A  2000   	fcall	_readIR
              120A  158A         
  4724  0C6D  1283               	bcf	status, 5	;RP0=0, select bank0
  4725  0C6E  1303               	bcf	status, 6	;RP1=0, select bank0
  4726  0C6F  084A               	movf	(1+(?_readIR)),w
  4727  0C70  3A80               	xorlw	80h
  4728  0C71  00FF               	movwf	btemp+1
  4729  0C72  3080               	movlw	(high(034h))^80h
  4730  0C73  027F               	subwf	btemp+1,w
  4731  0C74  1D03               	skipz
  4732  0C75  2C78               	goto	u7055
  4733  0C76  3034               	movlw	low(034h)
  4734  0C77  0249               	subwf	(0+(?_readIR)),w
  4735  0C78                     u7055:
  4736                           
  4737  0C78  1803               	skipnc
  4738  0C79  2C7B               	goto	u7051
  4739  0C7A  2C7C               	goto	u7050
  4740  0C7B                     u7051:
  4741  0C7B  2C68               	goto	l12858
  4742  0C7C                     u7050:
  4743  0C7C  2C7D               	goto	l12860
  4744                           	
  4745  0C7D                     l5891:	
  4746                           	line	278
  4747                           	
  4748  0C7D                     l12860:	
  4749                           ;drive.c: 278: drive(0, 0, 0, 0);
  4750  0C7D  1283               	bcf	status, 5	;RP0=0, select bank0
  4751  0C7E  1303               	bcf	status, 6	;RP1=0, select bank0
  4752  0C7F  01AC               	clrf	(?_drive)
  4753  0C80  01AD               	clrf	0+(?_drive)+01h
  4754  0C81  01AE               	clrf	0+(?_drive)+02h
  4755  0C82  3000               	movlw	(0)
  4756  0C83  160A  118A  24AB   	fcall	_drive
              120A  158A         
  4757  0C88  2C8A               	goto	l12862
  4758                           	line	279
  4759                           	
  4760  0C89                     l5888:	
  4761  0C89  2C8A               	goto	l12862
  4762                           	line	280
  4763                           	
  4764  0C8A                     l5887:	
  4765                           	
  4766  0C8A                     l12862:	
  4767                           ;drive.c: 279: }
  4768                           ;drive.c: 280: rotateIR(24, 0b00001101);
  4769  0C8A  300D               	movlw	(0Dh)
  4770  0C8B  1283               	bcf	status, 5	;RP0=0, select bank0
  4771  0C8C  1303               	bcf	status, 6	;RP1=0, select bank0
  4772  0C8D  00CD               	movwf	(??_frontWallCorrect+0)+0
  4773  0C8E  084D               	movf	(??_frontWallCorrect+0)+0,w
  4774  0C8F  00AA               	movwf	(?_rotateIR)
  4775  0C90  3018               	movlw	(018h)
  4776  0C91  160A  118A  2442   	fcall	_rotateIR
              120A  158A         
  4777                           	line	281
  4778                           	
  4779  0C96                     l5892:	
  4780  0C96  0008               	return
  4781                           	opt stack 0
  4782                           GLOBAL	__end_of_frontWallCorrect
  4783  0C97                     	__end_of_frontWallCorrect:
  4784 ;; =============== function _frontWallCorrect ends ============
  4785                           
  4786                           	signat	_frontWallCorrect,88
  4787                           	global	_driveForDistance
  4788                           psect	text1999,local,class=CODE,delta=2
  4789                           global __ptext1999
  4790  03C8                     __ptext1999:
  4791                           
  4792 ;; *************** function _driveForDistance *****************
  4793 ;; Defined at:
  4794 ;;		line 31 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\driv
       e.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  moveDistance    2   22[BANK0 ] int 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  distance        2   28[BANK0 ] int 
  4799 ;;  deltaDistanc    2   26[BANK0 ] int 
  4800 ;;  cliff           1   33[BANK0 ] volatile unsigned char 
  4801 ;;  virtualWall     1   32[BANK0 ] volatile unsigned char 
  4802 ;;  low             1   31[BANK0 ] volatile unsigned char 
  4803 ;;  high            1   30[BANK0 ] volatile unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;		None               void
  4806 ;; Registers used:
  4807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         0       2       0       0       0
  4814 ;;      Locals:         0       8       0       0       0
  4815 ;;      Temps:          0       2       0       0       0
  4816 ;;      Totals:         0      12       0       0       0
  4817 ;;Total ram usage:       12 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    5
  4820 ;; This function calls:
  4821 ;;		_drive
  4822 ;;		_ser_putch
  4823 ;;		_ser_getch
  4824 ;;		_goReverse
  4825 ;;		_turnRight90
  4826 ;;		_updateOrientation
  4827 ;;		_turnLeft90
  4828 ;;		_getCurrentY
  4829 ;;		_getCurrentX
  4830 ;;		_findFinalDestination
  4831 ;; This function is called by:
  4832 ;;		_goBackward
  4833 ;;		_goForward
  4834 ;;		_goLeft
  4835 ;;		_goRight
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           psect	text1999
  4839                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  4840                           	line	31
  4841                           	global	__size_of_driveForDistance
  4842  01B9                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  4843                           	
  4844  03C8                     _driveForDistance:	
  4845                           	opt	stack 1
  4846                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4847                           	line	34
  4848                           	
  4849  03C8                     l12758:	
  4850                           ;drive.c: 33: volatile char high, low, cliff, virtualWall;
  4851                           ;drive.c: 34: int deltaDistance = 0;
  4852  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  4853  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  4854  03CA  01BA               	clrf	(driveForDistance@deltaDistance)
  4855  03CB  01BB               	clrf	(driveForDistance@deltaDistance+1)
  4856                           	line	35
  4857                           ;drive.c: 35: int distance = 0;
  4858  03CC  01BC               	clrf	(driveForDistance@distance)
  4859  03CD  01BD               	clrf	(driveForDistance@distance+1)
  4860                           	line	37
  4861                           	
  4862  03CE                     l12760:	
  4863                           ;drive.c: 37: moving = 1;
  4864  03CE  1471               	bsf	(_moving/8),(_moving)&7
  4865                           	line	38
  4866                           	
  4867  03CF                     l12762:	
  4868                           ;drive.c: 38: drive(0, 250, 128, 0);
  4869  03CF  30FA               	movlw	(0FAh)
  4870  03D0  00B8               	movwf	(??_driveForDistance+0)+0
  4871  03D1  0838               	movf	(??_driveForDistance+0)+0,w
  4872  03D2  00AC               	movwf	(?_drive)
  4873  03D3  3080               	movlw	(080h)
  4874  03D4  00B9               	movwf	(??_driveForDistance+1)+0
  4875  03D5  0839               	movf	(??_driveForDistance+1)+0,w
  4876  03D6  00AD               	movwf	0+(?_drive)+01h
  4877  03D7  01AE               	clrf	0+(?_drive)+02h
  4878  03D8  3000               	movlw	(0)
  4879  03D9  160A  118A  24AB   	fcall	_drive
              120A  118A         
  4880                           	line	39
  4881                           	
  4882  03DE                     l12764:	
  4883                           ;drive.c: 39: successfulDrive = 0;
  4884  03DE  11F1               	bcf	(_successfulDrive/8),(_successfulDrive)&7
  4885                           	line	41
  4886                           ;drive.c: 41: while(moving)
  4887  03DF  2D7B               	goto	l12840
  4888                           	
  4889  03E0                     l5820:	
  4890                           	line	43
  4891                           	
  4892  03E0                     l12766:	
  4893                           ;drive.c: 42: {
  4894                           ;drive.c: 43: if(distance >= 100)
  4895  03E0  1283               	bcf	status, 5	;RP0=0, select bank0
  4896  03E1  1303               	bcf	status, 6	;RP1=0, select bank0
  4897  03E2  083D               	movf	(driveForDistance@distance+1),w
  4898  03E3  3A80               	xorlw	80h
  4899  03E4  00FF               	movwf	btemp+1
  4900  03E5  3080               	movlw	(high(064h))^80h
  4901  03E6  027F               	subwf	btemp+1,w
  4902  03E7  1D03               	skipz
  4903  03E8  2BEB               	goto	u6905
  4904  03E9  3064               	movlw	low(064h)
  4905  03EA  023C               	subwf	(driveForDistance@distance),w
  4906  03EB                     u6905:
  4907                           
  4908  03EB  1C03               	skipc
  4909  03EC  2BEE               	goto	u6901
  4910  03ED  2BEF               	goto	u6900
  4911  03EE                     u6901:
  4912  03EE  2CA7               	goto	l12802
  4913  03EF                     u6900:
  4914                           	line	46
  4915                           	
  4916  03EF                     l12768:	
  4917                           ;drive.c: 44: {
  4918                           ;drive.c: 46: ser_putch(142);
  4919  03EF  308E               	movlw	(08Eh)
  4920  03F0  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  4921                           	line	47
  4922                           ;drive.c: 47: ser_putch(10);
  4923  03F5  300A               	movlw	(0Ah)
  4924  03F6  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  4925                           	line	48
  4926                           ;drive.c: 48: cliff = ser_getch();
  4927  03FB  160A  118A  22B0   	fcall	_ser_getch
              120A  118A         
  4928  0400  1283               	bcf	status, 5	;RP0=0, select bank0
  4929  0401  1303               	bcf	status, 6	;RP1=0, select bank0
  4930  0402  00B8               	movwf	(??_driveForDistance+0)+0
  4931  0403  0838               	movf	(??_driveForDistance+0)+0,w
  4932  0404  00C1               	movwf	(driveForDistance@cliff)	;volatile
  4933                           	line	49
  4934                           	
  4935  0405                     l12770:	
  4936                           ;drive.c: 49: if(cliff == 0)
  4937  0405  08C1               	movf	(driveForDistance@cliff),f
  4938  0406  1D03               	skipz	;volatile
  4939  0407  2C09               	goto	u6911
  4940  0408  2C0A               	goto	u6910
  4941  0409                     u6911:
  4942  0409  2C59               	goto	l12782
  4943  040A                     u6910:
  4944                           	line	51
  4945                           	
  4946  040A                     l12772:	
  4947                           ;drive.c: 50: {
  4948                           ;drive.c: 51: ser_putch(142);
  4949  040A  308E               	movlw	(08Eh)
  4950  040B  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  4951                           	line	52
  4952                           ;drive.c: 52: ser_putch(11);
  4953  0410  300B               	movlw	(0Bh)
  4954  0411  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  4955                           	line	53
  4956                           ;drive.c: 53: cliff = ser_getch();
  4957  0416  160A  118A  22B0   	fcall	_ser_getch
              120A  118A         
  4958  041B  1283               	bcf	status, 5	;RP0=0, select bank0
  4959  041C  1303               	bcf	status, 6	;RP1=0, select bank0
  4960  041D  00B8               	movwf	(??_driveForDistance+0)+0
  4961  041E  0838               	movf	(??_driveForDistance+0)+0,w
  4962  041F  00C1               	movwf	(driveForDistance@cliff)	;volatile
  4963                           	line	54
  4964                           	
  4965  0420                     l12774:	
  4966                           ;drive.c: 54: if(cliff == 0)
  4967  0420  08C1               	movf	(driveForDistance@cliff),f
  4968  0421  1D03               	skipz	;volatile
  4969  0422  2C24               	goto	u6921
  4970  0423  2C25               	goto	u6920
  4971  0424                     u6921:
  4972  0424  2C59               	goto	l12782
  4973  0425                     u6920:
  4974                           	line	56
  4975                           	
  4976  0425                     l12776:	
  4977                           ;drive.c: 55: {
  4978                           ;drive.c: 56: ser_putch(142);
  4979  0425  308E               	movlw	(08Eh)
  4980  0426  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  4981                           	line	57
  4982                           ;drive.c: 57: ser_putch(9);
  4983  042B  3009               	movlw	(09h)
  4984  042C  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  4985                           	line	58
  4986                           ;drive.c: 58: cliff = ser_getch();
  4987  0431  160A  118A  22B0   	fcall	_ser_getch
              120A  118A         
  4988  0436  1283               	bcf	status, 5	;RP0=0, select bank0
  4989  0437  1303               	bcf	status, 6	;RP1=0, select bank0
  4990  0438  00B8               	movwf	(??_driveForDistance+0)+0
  4991  0439  0838               	movf	(??_driveForDistance+0)+0,w
  4992  043A  00C1               	movwf	(driveForDistance@cliff)	;volatile
  4993                           	line	59
  4994                           	
  4995  043B                     l12778:	
  4996                           ;drive.c: 59: if(cliff == 0)
  4997  043B  08C1               	movf	(driveForDistance@cliff),f
  4998  043C  1D03               	skipz	;volatile
  4999  043D  2C3F               	goto	u6931
  5000  043E  2C40               	goto	u6930
  5001  043F                     u6931:
  5002  043F  2C59               	goto	l12782
  5003  0440                     u6930:
  5004                           	line	61
  5005                           	
  5006  0440                     l12780:	
  5007                           ;drive.c: 60: {
  5008                           ;drive.c: 61: ser_putch(142);
  5009  0440  308E               	movlw	(08Eh)
  5010  0441  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  5011                           	line	62
  5012                           ;drive.c: 62: ser_putch(12);
  5013  0446  300C               	movlw	(0Ch)
  5014  0447  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  5015                           	line	63
  5016                           ;drive.c: 63: cliff = ser_getch();
  5017  044C  160A  118A  22B0   	fcall	_ser_getch
              120A  118A         
  5018  0451  1283               	bcf	status, 5	;RP0=0, select bank0
  5019  0452  1303               	bcf	status, 6	;RP1=0, select bank0
  5020  0453  00B8               	movwf	(??_driveForDistance+0)+0
  5021  0454  0838               	movf	(??_driveForDistance+0)+0,w
  5022  0455  00C1               	movwf	(driveForDistance@cliff)	;volatile
  5023  0456  2C59               	goto	l12782
  5024                           	line	64
  5025                           	
  5026  0457                     l5824:	
  5027  0457  2C59               	goto	l12782
  5028                           	line	65
  5029                           	
  5030  0458                     l5823:	
  5031  0458  2C59               	goto	l12782
  5032                           	line	66
  5033                           	
  5034  0459                     l5822:	
  5035                           	line	67
  5036                           	
  5037  0459                     l12782:	
  5038                           ;drive.c: 64: }
  5039                           ;drive.c: 65: }
  5040                           ;drive.c: 66: }
  5041                           ;drive.c: 67: if(cliff == 1)
  5042  0459  0841               	movf	(driveForDistance@cliff),w	;volatile
  5043  045A  3A01               	xorlw	01h
  5044  045B  1D03               	skipz
  5045  045C  2C5E               	goto	u6941
  5046  045D  2C5F               	goto	u6940
  5047  045E                     u6941:
  5048  045E  2CA7               	goto	l12802
  5049  045F                     u6940:
  5050                           	line	69
  5051                           	
  5052  045F                     l12784:	
  5053                           ;drive.c: 68: {
  5054                           ;drive.c: 69: drive(0, 0, 0, 0);
  5055  045F  01AC               	clrf	(?_drive)
  5056  0460  01AD               	clrf	0+(?_drive)+01h
  5057  0461  01AE               	clrf	0+(?_drive)+02h
  5058  0462  3000               	movlw	(0)
  5059  0463  160A  118A  24AB   	fcall	_drive
              120A  118A         
  5060                           	line	70
  5061                           ;drive.c: 70: goReverse();
  5062  0468  160A  118A  2724   	fcall	_goReverse
              120A  118A         
  5063                           	line	72
  5064                           	
  5065  046D                     l12786:	
  5066                           ;drive.c: 72: if(lastMove == LEFT)
  5067  046D  1283               	bcf	status, 5	;RP0=0, select bank0
  5068  046E  1303               	bcf	status, 6	;RP1=0, select bank0
  5069  046F  0861               	movf	(_lastMove),w	;volatile
  5070  0470  3A01               	xorlw	01h
  5071  0471  1D03               	skipz
  5072  0472  2C74               	goto	u6951
  5073  0473  2C75               	goto	u6950
  5074  0474                     u6951:
  5075  0474  2C86               	goto	l12794
  5076  0475                     u6950:
  5077                           	line	74
  5078                           	
  5079  0475                     l12788:	
  5080                           ;drive.c: 73: {
  5081                           ;drive.c: 74: somethingInTheWay = LEFT;
  5082  0475  1683               	bsf	status, 5	;RP0=1, select bank1
  5083  0476  1303               	bcf	status, 6	;RP1=0, select bank1
  5084  0477  01E3               	clrf	(_somethingInTheWay)^080h	;volatile
  5085  0478  1403               	bsf	status,0
  5086  0479  0DE3               	rlf	(_somethingInTheWay)^080h,f	;volatile
  5087                           	line	75
  5088                           	
  5089  047A                     l12790:	
  5090                           ;drive.c: 75: turnRight90();
  5091  047A  160A  118A  2592   	fcall	_turnRight90
              120A  118A         
  5092                           	line	76
  5093                           	
  5094  047F                     l12792:	
  5095                           ;drive.c: 76: updateOrientation(RIGHT);
  5096  047F  3003               	movlw	(03h)
  5097  0480  160A  118A  2156   	fcall	_updateOrientation
              120A  118A         
  5098                           	line	77
  5099                           ;drive.c: 77: }
  5100  0485  2CA4               	goto	l5827
  5101                           	line	78
  5102                           	
  5103  0486                     l5826:	
  5104                           	
  5105  0486                     l12794:	
  5106                           ;drive.c: 78: else if (lastMove == RIGHT)
  5107  0486  1283               	bcf	status, 5	;RP0=0, select bank0
  5108  0487  1303               	bcf	status, 6	;RP1=0, select bank0
  5109  0488  0861               	movf	(_lastMove),w	;volatile
  5110  0489  3A03               	xorlw	03h
  5111  048A  1D03               	skipz
  5112  048B  2C8D               	goto	u6961
  5113  048C  2C8E               	goto	u6960
  5114  048D                     u6961:
  5115  048D  2CA0               	goto	l5828
  5116  048E                     u6960:
  5117                           	line	80
  5118                           	
  5119  048E                     l12796:	
  5120                           ;drive.c: 79: {
  5121                           ;drive.c: 80: somethingInTheWay = RIGHT;
  5122  048E  3003               	movlw	(03h)
  5123  048F  00B8               	movwf	(??_driveForDistance+0)+0
  5124  0490  0838               	movf	(??_driveForDistance+0)+0,w
  5125  0491  1683               	bsf	status, 5	;RP0=1, select bank1
  5126  0492  1303               	bcf	status, 6	;RP1=0, select bank1
  5127  0493  00E3               	movwf	(_somethingInTheWay)^080h	;volatile
  5128                           	line	81
  5129                           	
  5130  0494                     l12798:	
  5131                           ;drive.c: 81: turnLeft90();
  5132  0494  160A  118A  24E2   	fcall	_turnLeft90
              120A  118A         
  5133                           	line	82
  5134                           	
  5135  0499                     l12800:	
  5136                           ;drive.c: 82: updateOrientation(LEFT);
  5137  0499  3001               	movlw	(01h)
  5138  049A  160A  118A  2156   	fcall	_updateOrientation
              120A  118A         
  5139                           	line	83
  5140                           ;drive.c: 83: }
  5141  049F  2CA4               	goto	l5827
  5142                           	line	84
  5143                           	
  5144  04A0                     l5828:	
  5145                           	line	85
  5146                           ;drive.c: 84: else
  5147                           ;drive.c: 85: somethingInTheWay = FORWARD;
  5148  04A0  1683               	bsf	status, 5	;RP0=1, select bank1
  5149  04A1  1303               	bcf	status, 6	;RP1=0, select bank1
  5150  04A2  01E3               	clrf	(_somethingInTheWay)^080h	;volatile
  5151  04A3  2CA4               	goto	l5827
  5152                           	
  5153  04A4                     l5829:	
  5154                           	
  5155  04A4                     l5827:	
  5156                           	line	86
  5157                           ;drive.c: 86: moving = 0;
  5158  04A4  1071               	bcf	(_moving/8),(_moving)&7
  5159  04A5  2CA7               	goto	l12802
  5160                           	line	87
  5161                           	
  5162  04A6                     l5825:	
  5163  04A6  2CA7               	goto	l12802
  5164                           	line	88
  5165                           	
  5166  04A7                     l5821:	
  5167                           	line	91
  5168                           	
  5169  04A7                     l12802:	
  5170                           ;drive.c: 87: }
  5171                           ;drive.c: 88: }
  5172                           ;drive.c: 91: ser_putch(142);
  5173  04A7  308E               	movlw	(08Eh)
  5174  04A8  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  5175                           	line	92
  5176                           ;drive.c: 92: ser_putch(13);
  5177  04AD  300D               	movlw	(0Dh)
  5178  04AE  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  5179                           	line	93
  5180                           ;drive.c: 93: virtualWall = ser_getch();
  5181  04B3  160A  118A  22B0   	fcall	_ser_getch
              120A  118A         
  5182  04B8  1283               	bcf	status, 5	;RP0=0, select bank0
  5183  04B9  1303               	bcf	status, 6	;RP1=0, select bank0
  5184  04BA  00B8               	movwf	(??_driveForDistance+0)+0
  5185  04BB  0838               	movf	(??_driveForDistance+0)+0,w
  5186  04BC  00C0               	movwf	(driveForDistance@virtualWall)	;volatile
  5187                           	line	94
  5188                           	
  5189  04BD                     l12804:	
  5190                           ;drive.c: 94: if(virtualWall == 1)
  5191  04BD  0840               	movf	(driveForDistance@virtualWall),w	;volatile
  5192  04BE  3A01               	xorlw	01h
  5193  04BF  1D03               	skipz
  5194  04C0  2CC2               	goto	u6971
  5195  04C1  2CC3               	goto	u6970
  5196  04C2                     u6971:
  5197  04C2  2D22               	goto	l12824
  5198  04C3                     u6970:
  5199                           	line	96
  5200                           	
  5201  04C3                     l12806:	
  5202                           ;drive.c: 95: {
  5203                           ;drive.c: 96: drive(0, 0, 0, 0);
  5204  04C3  01AC               	clrf	(?_drive)
  5205  04C4  01AD               	clrf	0+(?_drive)+01h
  5206  04C5  01AE               	clrf	0+(?_drive)+02h
  5207  04C6  3000               	movlw	(0)
  5208  04C7  160A  118A  24AB   	fcall	_drive
              120A  118A         
  5209                           	line	97
  5210                           ;drive.c: 97: findFinalDestination(getCurrentX(),getCurrentY(), currentOrientation);
  5211  04CC  160A  118A  2118   	fcall	_getCurrentY
              120A  118A         
  5212  04D1  1283               	bcf	status, 5	;RP0=0, select bank0
  5213  04D2  1303               	bcf	status, 6	;RP1=0, select bank0
  5214  04D3  00B8               	movwf	(??_driveForDistance+0)+0
  5215  04D4  0838               	movf	(??_driveForDistance+0)+0,w
  5216  04D5  00AE               	movwf	(?_findFinalDestination)
  5217  04D6  0860               	movf	(_currentOrientation),w	;volatile
  5218  04D7  00B9               	movwf	(??_driveForDistance+1)+0
  5219  04D8  0839               	movf	(??_driveForDistance+1)+0,w
  5220  04D9  00AF               	movwf	0+(?_findFinalDestination)+01h
  5221  04DA  160A  118A  2113   	fcall	_getCurrentX
              120A  118A         
  5222  04DF  120A  158A  2573   	fcall	_findFinalDestination
              120A  118A         
  5223                           	line	98
  5224                           ;drive.c: 98: goReverse();
  5225  04E4  160A  118A  2724   	fcall	_goReverse
              120A  118A         
  5226                           	line	100
  5227                           	
  5228  04E9                     l12808:	
  5229                           ;drive.c: 100: if(lastMove == LEFT)
  5230  04E9  1283               	bcf	status, 5	;RP0=0, select bank0
  5231  04EA  1303               	bcf	status, 6	;RP1=0, select bank0
  5232  04EB  0861               	movf	(_lastMove),w	;volatile
  5233  04EC  3A01               	xorlw	01h
  5234  04ED  1D03               	skipz
  5235  04EE  2CF0               	goto	u6981
  5236  04EF  2CF1               	goto	u6980
  5237  04F0                     u6981:
  5238  04F0  2D02               	goto	l12816
  5239  04F1                     u6980:
  5240                           	line	102
  5241                           	
  5242  04F1                     l12810:	
  5243                           ;drive.c: 101: {
  5244                           ;drive.c: 102: somethingInTheWay = LEFT;
  5245  04F1  1683               	bsf	status, 5	;RP0=1, select bank1
  5246  04F2  1303               	bcf	status, 6	;RP1=0, select bank1
  5247  04F3  01E3               	clrf	(_somethingInTheWay)^080h	;volatile
  5248  04F4  1403               	bsf	status,0
  5249  04F5  0DE3               	rlf	(_somethingInTheWay)^080h,f	;volatile
  5250                           	line	103
  5251                           	
  5252  04F6                     l12812:	
  5253                           ;drive.c: 103: turnRight90();
  5254  04F6  160A  118A  2592   	fcall	_turnRight90
              120A  118A         
  5255                           	line	104
  5256                           	
  5257  04FB                     l12814:	
  5258                           ;drive.c: 104: updateOrientation(RIGHT);
  5259  04FB  3003               	movlw	(03h)
  5260  04FC  160A  118A  2156   	fcall	_updateOrientation
              120A  118A         
  5261                           	line	105
  5262                           ;drive.c: 105: }
  5263  0501  2D20               	goto	l5832
  5264                           	line	106
  5265                           	
  5266  0502                     l5831:	
  5267                           	
  5268  0502                     l12816:	
  5269                           ;drive.c: 106: else if (lastMove == RIGHT)
  5270  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  5271  0503  1303               	bcf	status, 6	;RP1=0, select bank0
  5272  0504  0861               	movf	(_lastMove),w	;volatile
  5273  0505  3A03               	xorlw	03h
  5274  0506  1D03               	skipz
  5275  0507  2D09               	goto	u6991
  5276  0508  2D0A               	goto	u6990
  5277  0509                     u6991:
  5278  0509  2D1C               	goto	l5833
  5279  050A                     u6990:
  5280                           	line	108
  5281                           	
  5282  050A                     l12818:	
  5283                           ;drive.c: 107: {
  5284                           ;drive.c: 108: somethingInTheWay = RIGHT;
  5285  050A  3003               	movlw	(03h)
  5286  050B  00B8               	movwf	(??_driveForDistance+0)+0
  5287  050C  0838               	movf	(??_driveForDistance+0)+0,w
  5288  050D  1683               	bsf	status, 5	;RP0=1, select bank1
  5289  050E  1303               	bcf	status, 6	;RP1=0, select bank1
  5290  050F  00E3               	movwf	(_somethingInTheWay)^080h	;volatile
  5291                           	line	109
  5292                           	
  5293  0510                     l12820:	
  5294                           ;drive.c: 109: turnLeft90();
  5295  0510  160A  118A  24E2   	fcall	_turnLeft90
              120A  118A         
  5296                           	line	110
  5297                           	
  5298  0515                     l12822:	
  5299                           ;drive.c: 110: updateOrientation(LEFT);
  5300  0515  3001               	movlw	(01h)
  5301  0516  160A  118A  2156   	fcall	_updateOrientation
              120A  118A         
  5302                           	line	111
  5303                           ;drive.c: 111: }
  5304  051B  2D20               	goto	l5832
  5305                           	line	112
  5306                           	
  5307  051C                     l5833:	
  5308                           	line	113
  5309                           ;drive.c: 112: else
  5310                           ;drive.c: 113: somethingInTheWay = FORWARD;
  5311  051C  1683               	bsf	status, 5	;RP0=1, select bank1
  5312  051D  1303               	bcf	status, 6	;RP1=0, select bank1
  5313  051E  01E3               	clrf	(_somethingInTheWay)^080h	;volatile
  5314  051F  2D20               	goto	l5832
  5315                           	
  5316  0520                     l5834:	
  5317                           	
  5318  0520                     l5832:	
  5319                           	line	114
  5320                           ;drive.c: 114: moving = 0;
  5321  0520  1071               	bcf	(_moving/8),(_moving)&7
  5322  0521  2D22               	goto	l12824
  5323                           	line	115
  5324                           	
  5325  0522                     l5830:	
  5326                           	line	118
  5327                           	
  5328  0522                     l12824:	
  5329                           ;drive.c: 115: }
  5330                           ;drive.c: 118: ser_putch(142);
  5331  0522  308E               	movlw	(08Eh)
  5332  0523  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  5333                           	line	119
  5334                           ;drive.c: 119: ser_putch(19);
  5335  0528  3013               	movlw	(013h)
  5336  0529  160A  118A  226E   	fcall	_ser_putch
              120A  118A         
  5337                           	line	120
  5338                           ;drive.c: 120: high = ser_getch();
  5339  052E  160A  118A  22B0   	fcall	_ser_getch
              120A  118A         
  5340  0533  1283               	bcf	status, 5	;RP0=0, select bank0
  5341  0534  1303               	bcf	status, 6	;RP1=0, select bank0
  5342  0535  00B8               	movwf	(??_driveForDistance+0)+0
  5343  0536  0838               	movf	(??_driveForDistance+0)+0,w
  5344  0537  00BE               	movwf	(driveForDistance@high)	;volatile
  5345                           	line	121
  5346                           ;drive.c: 121: low = ser_getch();
  5347  0538  160A  118A  22B0   	fcall	_ser_getch
              120A  118A         
  5348  053D  1283               	bcf	status, 5	;RP0=0, select bank0
  5349  053E  1303               	bcf	status, 6	;RP1=0, select bank0
  5350  053F  00B8               	movwf	(??_driveForDistance+0)+0
  5351  0540  0838               	movf	(??_driveForDistance+0)+0,w
  5352  0541  00BF               	movwf	(driveForDistance@low)	;volatile
  5353                           	line	122
  5354                           	
  5355  0542                     l12826:	
  5356                           ;drive.c: 122: deltaDistance = high*256 + low;
  5357  0542  083E               	movf	(driveForDistance@high),w	;volatile
  5358  0543  00B8               	movwf	(??_driveForDistance+0)+0
  5359  0544  01B9               	clrf	(??_driveForDistance+0)+0+1
  5360  0545  0838               	movf	(??_driveForDistance+0)+0,w
  5361  0546  00B9               	movwf	(??_driveForDistance+0)+1
  5362  0547  01B8               	clrf	(??_driveForDistance+0)+0
  5363  0548  083F               	movf	(driveForDistance@low),w	;volatile
  5364  0549  0738               	addwf	0+(??_driveForDistance+0)+0,w
  5365  054A  00BA               	movwf	(driveForDistance@deltaDistance)
  5366  054B  3000               	movlw	0
  5367  054C  1803               	skipnc
  5368  054D  3001               	movlw	1
  5369  054E  0739               	addwf	1+(??_driveForDistance+0)+0,w
  5370  054F  00BB               	movwf	1+(driveForDistance@deltaDistance)
  5371                           	line	123
  5372                           	
  5373  0550                     l12828:	
  5374                           ;drive.c: 123: distance += deltaDistance;
  5375  0550  083A               	movf	(driveForDistance@deltaDistance),w
  5376  0551  07BC               	addwf	(driveForDistance@distance),f
  5377  0552  1803               	skipnc
  5378  0553  0ABD               	incf	(driveForDistance@distance+1),f
  5379  0554  083B               	movf	(driveForDistance@deltaDistance+1),w
  5380  0555  07BD               	addwf	(driveForDistance@distance+1),f
  5381                           	line	124
  5382                           	
  5383  0556                     l12830:	
  5384                           ;drive.c: 124: if(distance >= moveDistance)
  5385  0556  083D               	movf	(driveForDistance@distance+1),w
  5386  0557  3A80               	xorlw	80h
  5387  0558  00B8               	movwf	(??_driveForDistance+0)+0
  5388  0559  0837               	movf	(driveForDistance@moveDistance+1),w
  5389  055A  3A80               	xorlw	80h
  5390  055B  0238               	subwf	(??_driveForDistance+0)+0,w
  5391  055C  1D03               	skipz
  5392  055D  2D60               	goto	u7005
  5393  055E  0836               	movf	(driveForDistance@moveDistance),w
  5394  055F  023C               	subwf	(driveForDistance@distance),w
  5395  0560                     u7005:
  5396                           
  5397  0560  1C03               	skipc
  5398  0561  2D63               	goto	u7001
  5399  0562  2D64               	goto	u7000
  5400  0563                     u7001:
  5401  0563  2D7B               	goto	l12840
  5402  0564                     u7000:
  5403                           	line	126
  5404                           	
  5405  0564                     l12832:	
  5406                           ;drive.c: 125: {
  5407                           ;drive.c: 126: drive(0, 0, 0, 0);
  5408  0564  1283               	bcf	status, 5	;RP0=0, select bank0
  5409  0565  1303               	bcf	status, 6	;RP1=0, select bank0
  5410  0566  01AC               	clrf	(?_drive)
  5411  0567  01AD               	clrf	0+(?_drive)+01h
  5412  0568  01AE               	clrf	0+(?_drive)+02h
  5413  0569  3000               	movlw	(0)
  5414  056A  160A  118A  24AB   	fcall	_drive
              120A  118A         
  5415                           	line	127
  5416                           	
  5417  056F                     l12834:	
  5418                           ;drive.c: 127: successfulDrive = 1;
  5419  056F  15F1               	bsf	(_successfulDrive/8),(_successfulDrive)&7
  5420                           	line	128
  5421                           	
  5422  0570                     l12836:	
  5423                           ;drive.c: 128: moving = 0;
  5424  0570  1071               	bcf	(_moving/8),(_moving)&7
  5425                           	line	129
  5426                           	
  5427  0571                     l12838:	
  5428                           ;drive.c: 129: somethingInTheWay = BACKWARD;
  5429  0571  3002               	movlw	(02h)
  5430  0572  1283               	bcf	status, 5	;RP0=0, select bank0
  5431  0573  1303               	bcf	status, 6	;RP1=0, select bank0
  5432  0574  00B8               	movwf	(??_driveForDistance+0)+0
  5433  0575  0838               	movf	(??_driveForDistance+0)+0,w
  5434  0576  1683               	bsf	status, 5	;RP0=1, select bank1
  5435  0577  1303               	bcf	status, 6	;RP1=0, select bank1
  5436  0578  00E3               	movwf	(_somethingInTheWay)^080h	;volatile
  5437  0579  2D7B               	goto	l12840
  5438                           	line	130
  5439                           	
  5440  057A                     l5835:	
  5441  057A  2D7B               	goto	l12840
  5442                           	line	131
  5443                           	
  5444  057B                     l5819:	
  5445                           	line	41
  5446                           	
  5447  057B                     l12840:	
  5448  057B  1871               	btfsc	(_moving/8),(_moving)&7
  5449  057C  2D7E               	goto	u7011
  5450  057D  2D7F               	goto	u7010
  5451  057E                     u7011:
  5452  057E  2BE0               	goto	l12766
  5453  057F                     u7010:
  5454  057F  2D80               	goto	l5837
  5455                           	
  5456  0580                     l5836:	
  5457                           	line	132
  5458                           	
  5459  0580                     l5837:	
  5460  0580  0008               	return
  5461                           	opt stack 0
  5462                           GLOBAL	__end_of_driveForDistance
  5463  0581                     	__end_of_driveForDistance:
  5464 ;; =============== function _driveForDistance ends ============
  5465                           
  5466                           	signat	_driveForDistance,4216
  5467                           	global	_updateLocation
  5468                           psect	text2000,local,class=CODE,delta=2
  5469                           global __ptext2000
  5470  08D1                     __ptext2000:
  5471                           
  5472 ;; *************** function _updateLocation *****************
  5473 ;; Defined at:
  5474 ;;		line 253 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;		None               void
  5481 ;; Registers used:
  5482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5488 ;;      Params:         0       0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0
  5490 ;;      Temps:          0       1       0       0       0
  5491 ;;      Totals:         0       1       0       0       0
  5492 ;;Total ram usage:        1 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    4
  5495 ;; This function calls:
  5496 ;;		_lcd_set_cursor
  5497 ;;		_lcd_write_data
  5498 ;;		_getOrientation
  5499 ;;		_lcd_write_1_digit_bcd
  5500 ;; This function is called by:
  5501 ;;		_main
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           psect	text2000
  5505                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  5506                           	line	253
  5507                           	global	__size_of_updateLocation
  5508  0068                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  5509                           	
  5510  08D1                     _updateLocation:	
  5511                           	opt	stack 3
  5512                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5513                           	line	254
  5514                           	
  5515  08D1                     l12734:	
  5516                           ;main.c: 254: lcd_set_cursor(0x40);
  5517  08D1  3040               	movlw	(040h)
  5518  08D2  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  5519                           	line	255
  5520                           ;main.c: 255: switch(getOrientation())
  5521  08D7  290A               	goto	l12754
  5522                           	line	257
  5523                           ;main.c: 256: {
  5524                           ;main.c: 257: case NORTH:
  5525                           	
  5526  08D8                     l6751:	
  5527                           	line	258
  5528                           	
  5529  08D8                     l12736:	
  5530                           ;main.c: 258: ++yCoord;
  5531  08D8  3001               	movlw	(01h)
  5532  08D9  1283               	bcf	status, 5	;RP0=0, select bank0
  5533  08DA  1303               	bcf	status, 6	;RP1=0, select bank0
  5534  08DB  00AE               	movwf	(??_updateLocation+0)+0
  5535  08DC  082E               	movf	(??_updateLocation+0)+0,w
  5536  08DD  07E5               	addwf	(_yCoord),f	;volatile
  5537                           	line	259
  5538                           	
  5539  08DE                     l12738:	
  5540                           ;main.c: 259: lcd_write_data('N');
  5541  08DE  304E               	movlw	(04Eh)
  5542  08DF  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  5543                           	line	260
  5544                           ;main.c: 260: break;
  5545  08E4  291C               	goto	l12756
  5546                           	line	261
  5547                           ;main.c: 261: case SOUTH:
  5548                           	
  5549  08E5                     l6753:	
  5550                           	line	262
  5551                           	
  5552  08E5                     l12740:	
  5553                           ;main.c: 262: --yCoord;
  5554  08E5  3001               	movlw	low(01h)
  5555  08E6  1283               	bcf	status, 5	;RP0=0, select bank0
  5556  08E7  1303               	bcf	status, 6	;RP1=0, select bank0
  5557  08E8  02E5               	subwf	(_yCoord),f	;volatile
  5558                           	line	263
  5559                           	
  5560  08E9                     l12742:	
  5561                           ;main.c: 263: lcd_write_data('S');
  5562  08E9  3053               	movlw	(053h)
  5563  08EA  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  5564                           	line	264
  5565                           ;main.c: 264: break;
  5566  08EF  291C               	goto	l12756
  5567                           	line	265
  5568                           ;main.c: 265: case EAST:
  5569                           	
  5570  08F0                     l6754:	
  5571                           	line	266
  5572                           	
  5573  08F0                     l12744:	
  5574                           ;main.c: 266: ++xCoord;
  5575  08F0  3001               	movlw	(01h)
  5576  08F1  1283               	bcf	status, 5	;RP0=0, select bank0
  5577  08F2  1303               	bcf	status, 6	;RP1=0, select bank0
  5578  08F3  00AE               	movwf	(??_updateLocation+0)+0
  5579  08F4  082E               	movf	(??_updateLocation+0)+0,w
  5580  08F5  07E4               	addwf	(_xCoord),f	;volatile
  5581                           	line	267
  5582                           	
  5583  08F6                     l12746:	
  5584                           ;main.c: 267: lcd_write_data('E');
  5585  08F6  3045               	movlw	(045h)
  5586  08F7  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  5587                           	line	268
  5588                           ;main.c: 268: break;
  5589  08FC  291C               	goto	l12756
  5590                           	line	269
  5591                           ;main.c: 269: case WEST:
  5592                           	
  5593  08FD                     l6755:	
  5594                           	line	270
  5595                           	
  5596  08FD                     l12748:	
  5597                           ;main.c: 270: --xCoord;
  5598  08FD  3001               	movlw	low(01h)
  5599  08FE  1283               	bcf	status, 5	;RP0=0, select bank0
  5600  08FF  1303               	bcf	status, 6	;RP1=0, select bank0
  5601  0900  02E4               	subwf	(_xCoord),f	;volatile
  5602                           	line	271
  5603                           	
  5604  0901                     l12750:	
  5605                           ;main.c: 271: lcd_write_data('W');
  5606  0901  3057               	movlw	(057h)
  5607  0902  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  5608                           	line	272
  5609                           ;main.c: 272: break;
  5610  0907  291C               	goto	l12756
  5611                           	line	273
  5612                           ;main.c: 273: default:
  5613                           	
  5614  0908                     l6756:	
  5615                           	line	274
  5616                           ;main.c: 274: break;
  5617  0908  291C               	goto	l12756
  5618                           	line	275
  5619                           	
  5620  0909                     l12752:	
  5621                           ;main.c: 275: }
  5622  0909  291C               	goto	l12756
  5623                           	line	255
  5624                           	
  5625  090A                     l6750:	
  5626                           	
  5627  090A                     l12754:	
  5628  090A  160A  118A  211D   	fcall	_getOrientation
              120A  158A         
  5629                           	; Switch size 1, requested type "space"
  5630                           ; Number of cases is 4, Range of values is 0 to 3
  5631                           ; switch strategies available:
  5632                           ; Name         Instructions Cycles
  5633                           ; simple_byte           13     7 (average)
  5634                           ; direct_byte           20     8 (fixed)
  5635                           ; jumptable            260     6 (fixed)
  5636                           ; rangetable             8     6 (fixed)
  5637                           ; spacedrange           14     9 (fixed)
  5638                           ; locatedrange           4     3 (fixed)
  5639                           ;	Chosen strategy is simple_byte
  5640                           
  5641                           	opt asmopt_off
  5642  090F  3A00               	xorlw	0^0	; case 0
  5643  0910  1903               	skipnz
  5644  0911  28FD               	goto	l12748
  5645  0912  3A01               	xorlw	1^0	; case 1
  5646  0913  1903               	skipnz
  5647  0914  28E5               	goto	l12740
  5648  0915  3A03               	xorlw	2^1	; case 2
  5649  0916  1903               	skipnz
  5650  0917  28F0               	goto	l12744
  5651  0918  3A01               	xorlw	3^2	; case 3
  5652  0919  1903               	skipnz
  5653  091A  28D8               	goto	l12736
  5654  091B  291C               	goto	l12756
  5655                           	opt asmopt_on
  5656                           
  5657                           	line	275
  5658                           	
  5659  091C                     l6752:	
  5660                           	line	277
  5661                           	
  5662  091C                     l12756:	
  5663                           ;main.c: 277: lcd_set_cursor(0x01);
  5664  091C  3001               	movlw	(01h)
  5665  091D  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  5666                           	line	278
  5667                           ;main.c: 278: lcd_write_1_digit_bcd(xCoord);
  5668  0922  1283               	bcf	status, 5	;RP0=0, select bank0
  5669  0923  1303               	bcf	status, 6	;RP1=0, select bank0
  5670  0924  0864               	movf	(_xCoord),w	;volatile
  5671  0925  160A  118A  214B   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  5672                           	line	279
  5673                           ;main.c: 279: lcd_set_cursor(0x03);
  5674  092A  3003               	movlw	(03h)
  5675  092B  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  5676                           	line	280
  5677                           ;main.c: 280: lcd_write_1_digit_bcd(yCoord);
  5678  0930  1283               	bcf	status, 5	;RP0=0, select bank0
  5679  0931  1303               	bcf	status, 6	;RP1=0, select bank0
  5680  0932  0865               	movf	(_yCoord),w	;volatile
  5681  0933  160A  118A  214B   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  5682                           	line	281
  5683                           	
  5684  0938                     l6757:	
  5685  0938  0008               	return
  5686                           	opt stack 0
  5687                           GLOBAL	__end_of_updateLocation
  5688  0939                     	__end_of_updateLocation:
  5689 ;; =============== function _updateLocation ends ============
  5690                           
  5691                           	signat	_updateLocation,88
  5692                           	global	_lookForVictim
  5693                           psect	text2001,local,class=CODE,delta=2
  5694                           global __ptext2001
  5695  0873                     __ptext2001:
  5696                           
  5697 ;; *************** function _lookForVictim *****************
  5698 ;; Defined at:
  5699 ;;		line 150 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  victim          1   16[BANK0 ] unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5713 ;;      Params:         0       0       0       0       0
  5714 ;;      Locals:         0       1       0       0       0
  5715 ;;      Temps:          0       2       0       0       0
  5716 ;;      Totals:         0       3       0       0       0
  5717 ;;Total ram usage:        3 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    4
  5720 ;; This function calls:
  5721 ;;		_ser_putch
  5722 ;;		_ser_getch
  5723 ;;		_play_iCreate_song
  5724 ;;		_lcd_set_cursor
  5725 ;;		_lcd_write_data
  5726 ;;		_getVictimZone
  5727 ;;		_lcd_write_1_digit_bcd
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           psect	text2001
  5733                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  5734                           	line	150
  5735                           	global	__size_of_lookForVictim
  5736  005E                     	__size_of_lookForVictim	equ	__end_of_lookForVictim-_lookForVictim
  5737                           	
  5738  0873                     _lookForVictim:	
  5739                           	opt	stack 3
  5740                           ; Regs used in _lookForVictim: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5741                           	line	151
  5742                           	
  5743  0873                     l12712:	
  5744                           ;main.c: 151: ser_putch(142);
  5745  0873  308E               	movlw	(08Eh)
  5746  0874  160A  118A  226E   	fcall	_ser_putch
              120A  158A         
  5747                           	line	152
  5748                           ;main.c: 152: ser_putch(17);
  5749  0879  3011               	movlw	(011h)
  5750  087A  160A  118A  226E   	fcall	_ser_putch
              120A  158A         
  5751                           	line	153
  5752                           ;main.c: 153: char victim = ser_getch();
  5753  087F  160A  118A  22B0   	fcall	_ser_getch
              120A  158A         
  5754  0884  1283               	bcf	status, 5	;RP0=0, select bank0
  5755  0885  1303               	bcf	status, 6	;RP1=0, select bank0
  5756  0886  00AE               	movwf	(??_lookForVictim+0)+0
  5757  0887  082E               	movf	(??_lookForVictim+0)+0,w
  5758  0888  00B0               	movwf	(lookForVictim@victim)
  5759                           	line	155
  5760                           	
  5761  0889                     l12714:	
  5762                           ;main.c: 155: if(victim > 241 && victim != 255)
  5763  0889  30F2               	movlw	(0F2h)
  5764  088A  0230               	subwf	(lookForVictim@victim),w
  5765  088B  1C03               	skipc
  5766  088C  288E               	goto	u6871
  5767  088D  288F               	goto	u6870
  5768  088E                     u6871:
  5769  088E  28D0               	goto	l6720
  5770  088F                     u6870:
  5771                           	
  5772  088F                     l12716:	
  5773  088F  0830               	movf	(lookForVictim@victim),w
  5774  0890  3AFF               	xorlw	0FFh
  5775  0891  1903               	skipnz
  5776  0892  2894               	goto	u6881
  5777  0893  2895               	goto	u6880
  5778  0894                     u6881:
  5779  0894  28D0               	goto	l6720
  5780  0895                     u6880:
  5781                           	line	157
  5782                           	
  5783  0895                     l12718:	
  5784                           ;main.c: 156: {
  5785                           ;main.c: 157: if(goingHome)
  5786  0895  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  5787  0896  2898               	goto	u6891
  5788  0897  2899               	goto	u6890
  5789  0898                     u6891:
  5790  0898  28AF               	goto	l12728
  5791  0899                     u6890:
  5792                           	line	159
  5793                           	
  5794  0899                     l12720:	
  5795                           ;main.c: 158: {
  5796                           ;main.c: 159: play_iCreate_song(3);
  5797  0899  3003               	movlw	(03h)
  5798  089A  160A  118A  2167   	fcall	_play_iCreate_song
              120A  158A         
  5799                           	line	160
  5800                           	
  5801  089F                     l12722:	
  5802                           ;main.c: 160: victimZone = 0;
  5803  089F  1283               	bcf	status, 5	;RP0=0, select bank0
  5804  08A0  1303               	bcf	status, 6	;RP1=0, select bank0
  5805  08A1  01E2               	clrf	(_victimZone)	;volatile
  5806                           	line	161
  5807                           	
  5808  08A2                     l12724:	
  5809                           ;main.c: 161: lcd_set_cursor(0x09);
  5810  08A2  3009               	movlw	(09h)
  5811  08A3  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  5812                           	line	162
  5813                           	
  5814  08A8                     l12726:	
  5815                           ;main.c: 162: lcd_write_data('V');
  5816  08A8  3056               	movlw	(056h)
  5817  08A9  160A  118A  2179   	fcall	_lcd_write_data
              120A  158A         
  5818                           	line	163
  5819                           ;main.c: 163: }
  5820  08AE  28D0               	goto	l6720
  5821                           	line	164
  5822                           	
  5823  08AF                     l6718:	
  5824                           	line	166
  5825                           	
  5826  08AF                     l12728:	
  5827                           ;main.c: 164: else
  5828                           ;main.c: 165: {
  5829                           ;main.c: 166: victimZone = getVictimZone(xCoord, yCoord);
  5830  08AF  1283               	bcf	status, 5	;RP0=0, select bank0
  5831  08B0  1303               	bcf	status, 6	;RP1=0, select bank0
  5832  08B1  0865               	movf	(_yCoord),w	;volatile
  5833  08B2  00AE               	movwf	(??_lookForVictim+0)+0
  5834  08B3  082E               	movf	(??_lookForVictim+0)+0,w
  5835  08B4  00AA               	movwf	(?_getVictimZone)
  5836  08B5  0864               	movf	(_xCoord),w	;volatile
  5837  08B6  120A  158A  22AB   	fcall	_getVictimZone
              120A  158A         
  5838  08BB  1283               	bcf	status, 5	;RP0=0, select bank0
  5839  08BC  1303               	bcf	status, 6	;RP1=0, select bank0
  5840  08BD  00AF               	movwf	(??_lookForVictim+1)+0
  5841  08BE  082F               	movf	(??_lookForVictim+1)+0,w
  5842  08BF  00E2               	movwf	(_victimZone)	;volatile
  5843                           	line	167
  5844                           	
  5845  08C0                     l12730:	
  5846                           ;main.c: 167: lcd_set_cursor(0x08);
  5847  08C0  3008               	movlw	(08h)
  5848  08C1  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  5849                           	line	168
  5850                           	
  5851  08C6                     l12732:	
  5852                           ;main.c: 168: lcd_write_1_digit_bcd(victimZone);
  5853  08C6  1283               	bcf	status, 5	;RP0=0, select bank0
  5854  08C7  1303               	bcf	status, 6	;RP1=0, select bank0
  5855  08C8  0862               	movf	(_victimZone),w	;volatile
  5856  08C9  160A  118A  214B   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  5857  08CE  28D0               	goto	l6720
  5858                           	line	169
  5859                           	
  5860  08CF                     l6719:	
  5861  08CF  28D0               	goto	l6720
  5862                           	line	170
  5863                           	
  5864  08D0                     l6717:	
  5865                           	line	171
  5866                           	
  5867  08D0                     l6720:	
  5868  08D0  0008               	return
  5869                           	opt stack 0
  5870                           GLOBAL	__end_of_lookForVictim
  5871  08D1                     	__end_of_lookForVictim:
  5872 ;; =============== function _lookForVictim ends ============
  5873                           
  5874                           	signat	_lookForVictim,88
  5875                           	global	_checkForFinalDestination
  5876                           psect	text2002,local,class=CODE,delta=2
  5877                           global __ptext2002
  5878  1415                     __ptext2002:
  5879                           
  5880 ;; *************** function _checkForFinalDestination *****************
  5881 ;; Defined at:
  5882 ;;		line 139 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;		None
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;		None               void
  5889 ;; Registers used:
  5890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0
  5899 ;;      Totals:         0       0       0       0       0
  5900 ;;Total ram usage:        0 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    4
  5903 ;; This function calls:
  5904 ;;		_getFinalX
  5905 ;;		_getFinalY
  5906 ;;		_play_iCreate_song
  5907 ;;		_lcd_set_cursor
  5908 ;;		_lcd_write_data
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           psect	text2002
  5914                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  5915                           	line	139
  5916                           	global	__size_of_checkForFinalDestination
  5917  002D                     	__size_of_checkForFinalDestination	equ	__end_of_checkForFinalDestination-_checkForFinal
                                 Destination
  5918                           	
  5919  1415                     _checkForFinalDestination:	
  5920                           	opt	stack 3
  5921                           ; Regs used in _checkForFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5922                           	line	140
  5923                           	
  5924  1415                     l12700:	
  5925                           ;main.c: 140: if((xCoord == getFinalX()) && (yCoord == getFinalY()))
  5926  1415  160A  118A  2109   	fcall	_getFinalX
              160A  118A         
  5927  141A  1283               	bcf	status, 5	;RP0=0, select bank0
  5928  141B  1303               	bcf	status, 6	;RP1=0, select bank0
  5929  141C  0664               	xorwf	(_xCoord),w	;volatile
  5930  141D  1D03               	skipz
  5931  141E  2C20               	goto	u6851
  5932  141F  2C21               	goto	u6850
  5933  1420                     u6851:
  5934  1420  2C41               	goto	l6714
  5935  1421                     u6850:
  5936                           	
  5937  1421                     l12702:	
  5938  1421  160A  118A  210E   	fcall	_getFinalY
              160A  118A         
  5939  1426  1283               	bcf	status, 5	;RP0=0, select bank0
  5940  1427  1303               	bcf	status, 6	;RP1=0, select bank0
  5941  1428  0665               	xorwf	(_yCoord),w	;volatile
  5942  1429  1D03               	skipz
  5943  142A  2C2C               	goto	u6861
  5944  142B  2C2D               	goto	u6860
  5945  142C                     u6861:
  5946  142C  2C41               	goto	l6714
  5947  142D                     u6860:
  5948                           	line	142
  5949                           	
  5950  142D                     l12704:	
  5951                           ;main.c: 141: {
  5952                           ;main.c: 142: play_iCreate_song(2);
  5953  142D  3002               	movlw	(02h)
  5954  142E  160A  118A  2167   	fcall	_play_iCreate_song
              160A  118A         
  5955                           	line	143
  5956                           	
  5957  1433                     l12706:	
  5958                           ;main.c: 143: goingHome = 1;
  5959  1433  16F0               	bsf	(_goingHome/8),(_goingHome)&7
  5960                           	line	144
  5961                           	
  5962  1434                     l12708:	
  5963                           ;main.c: 144: lcd_set_cursor(0x06);
  5964  1434  3006               	movlw	(06h)
  5965  1435  160A  118A  2140   	fcall	_lcd_set_cursor
              160A  118A         
  5966                           	line	145
  5967                           	
  5968  143A                     l12710:	
  5969                           ;main.c: 145: lcd_write_data('R');
  5970  143A  3052               	movlw	(052h)
  5971  143B  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  5972  1440  2C41               	goto	l6714
  5973                           	line	146
  5974                           	
  5975  1441                     l6713:	
  5976                           	line	147
  5977                           	
  5978  1441                     l6714:	
  5979  1441  0008               	return
  5980                           	opt stack 0
  5981                           GLOBAL	__end_of_checkForFinalDestination
  5982  1442                     	__end_of_checkForFinalDestination:
  5983 ;; =============== function _checkForFinalDestination ends ============
  5984                           
  5985                           	signat	_checkForFinalDestination,88
  5986                           	global	_init
  5987                           psect	text2003,local,class=CODE,delta=2
  5988                           global __ptext2003
  5989  1475                     __ptext2003:
  5990                           
  5991 ;; *************** function _init *****************
  5992 ;; Defined at:
  5993 ;;		line 102 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;		None               void
  6000 ;; Registers used:
  6001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6007 ;;      Params:         0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0
  6010 ;;      Totals:         0       0       0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    5
  6014 ;; This function calls:
  6015 ;;		_init_adc
  6016 ;;		_lcd_init
  6017 ;;		_ser_init
  6018 ;;		_initIRobot
  6019 ;;		_initSongs
  6020 ;; This function is called by:
  6021 ;;		_main
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           psect	text2003
  6025                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  6026                           	line	102
  6027                           	global	__size_of_init
  6028  0036                     	__size_of_init	equ	__end_of_init-_init
  6029                           	
  6030  1475                     _init:	
  6031                           	opt	stack 2
  6032                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6033                           	line	103
  6034                           	
  6035  1475                     l12668:	
  6036                           ;main.c: 103: start.pressed = 0;
  6037  1475  1683               	bsf	status, 5	;RP0=1, select bank1
  6038  1476  1303               	bcf	status, 6	;RP1=0, select bank1
  6039  1477  01C0               	clrf	(_start)^080h
  6040                           	line	104
  6041                           	
  6042  1478                     l12670:	
  6043                           ;main.c: 104: start.released = 1;
  6044  1478  01C1               	clrf	0+(_start)^080h+01h
  6045  1479  1403               	bsf	status,0
  6046  147A  0DC1               	rlf	0+(_start)^080h+01h,f
  6047                           	line	106
  6048                           	
  6049  147B                     l12672:	
  6050                           ;main.c: 106: init_adc();
  6051  147B  160A  118A  21B3   	fcall	_init_adc
              160A  118A         
  6052                           	line	107
  6053                           	
  6054  1480                     l12674:	
  6055                           ;main.c: 107: lcd_init();
  6056  1480  160A  118A  23BE   	fcall	_lcd_init
              160A  118A         
  6057                           	line	109
  6058                           	
  6059  1485                     l12676:	
  6060                           ;main.c: 109: TRISB = 0b00000001;
  6061  1485  3001               	movlw	(01h)
  6062  1486  1683               	bsf	status, 5	;RP0=1, select bank1
  6063  1487  1303               	bcf	status, 6	;RP1=0, select bank1
  6064  1488  0086               	movwf	(134)^080h	;volatile
  6065                           	line	112
  6066                           	
  6067  1489                     l12678:	
  6068                           ;main.c: 112: OPTION_REG = 0b00000100;
  6069  1489  3004               	movlw	(04h)
  6070  148A  0081               	movwf	(129)^080h	;volatile
  6071                           	line	114
  6072                           	
  6073  148B                     l12680:	
  6074                           ;main.c: 114: TMR0IE = 1;
  6075  148B  168B               	bsf	(93/8),(93)&7
  6076                           	line	115
  6077                           	
  6078  148C                     l12682:	
  6079                           ;main.c: 115: SSPSTAT = 0b01000000;
  6080  148C  3040               	movlw	(040h)
  6081  148D  0094               	movwf	(148)^080h	;volatile
  6082                           	line	116
  6083                           	
  6084  148E                     l12684:	
  6085                           ;main.c: 116: SSPCON = 0b00100010;
  6086  148E  3022               	movlw	(022h)
  6087  148F  1283               	bcf	status, 5	;RP0=0, select bank0
  6088  1490  1303               	bcf	status, 6	;RP1=0, select bank0
  6089  1491  0094               	movwf	(20)	;volatile
  6090                           	line	117
  6091                           	
  6092  1492                     l12686:	
  6093                           ;main.c: 117: TRISC = 0b10010000;
  6094  1492  3090               	movlw	(090h)
  6095  1493  1683               	bsf	status, 5	;RP0=1, select bank1
  6096  1494  1303               	bcf	status, 6	;RP1=0, select bank1
  6097  1495  0087               	movwf	(135)^080h	;volatile
  6098                           	line	118
  6099                           	
  6100  1496                     l12688:	
  6101                           ;main.c: 118: PORTC = 0b00000000;
  6102  1496  1283               	bcf	status, 5	;RP0=0, select bank0
  6103  1497  1303               	bcf	status, 6	;RP1=0, select bank0
  6104  1498  0187               	clrf	(7)	;volatile
  6105                           	line	121
  6106                           	
  6107  1499                     l12690:	
  6108                           ;main.c: 121: PEIE = 1;
  6109  1499  170B               	bsf	(94/8),(94)&7
  6110                           	line	122
  6111                           	
  6112  149A                     l12692:	
  6113                           ;main.c: 122: GIE = 1;
  6114  149A  178B               	bsf	(95/8),(95)&7
  6115                           	line	124
  6116                           	
  6117  149B                     l12694:	
  6118                           ;main.c: 124: ser_init();
  6119  149B  160A  118A  2344   	fcall	_ser_init
              160A  118A         
  6120                           	line	125
  6121                           	
  6122  14A0                     l12696:	
  6123                           ;main.c: 125: initIRobot();
  6124  14A0  160A  118A  21F9   	fcall	_initIRobot
              160A  118A         
  6125                           	line	126
  6126                           	
  6127  14A5                     l12698:	
  6128                           ;main.c: 126: initSongs();
  6129  14A5  160A  118A  27B4   	fcall	_initSongs
              160A  118A         
  6130                           	line	127
  6131                           	
  6132  14AA                     l6707:	
  6133  14AA  0008               	return
  6134                           	opt stack 0
  6135                           GLOBAL	__end_of_init
  6136  14AB                     	__end_of_init:
  6137 ;; =============== function _init ends ============
  6138                           
  6139                           	signat	_init,88
  6140                           	global	_goReverse
  6141                           psect	text2004,local,class=CODE,delta=2
  6142                           global __ptext2004
  6143  1724                     __ptext2004:
  6144                           
  6145 ;; *************** function _goReverse *****************
  6146 ;; Defined at:
  6147 ;;		line 187 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;		None               void
  6154 ;; Registers used:
  6155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6161 ;;      Params:         0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0
  6163 ;;      Temps:          0       3       0       0       0
  6164 ;;      Totals:         0       3       0       0       0
  6165 ;;Total ram usage:        3 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    4
  6168 ;; This function calls:
  6169 ;;		_lcd_set_cursor
  6170 ;;		_lcd_write_data
  6171 ;;		_drive
  6172 ;;		_waitFor
  6173 ;; This function is called by:
  6174 ;;		_driveForDistance
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           psect	text2004
  6178                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  6179                           	line	187
  6180                           	global	__size_of_goReverse
  6181  0047                     	__size_of_goReverse	equ	__end_of_goReverse-_goReverse
  6182                           	
  6183  1724                     _goReverse:	
  6184                           	opt	stack 1
  6185                           ; Regs used in _goReverse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6186                           	line	188
  6187                           	
  6188  1724                     l12658:	
  6189                           ;drive.c: 188: lcd_set_cursor(0x0F);
  6190  1724  300F               	movlw	(0Fh)
  6191  1725  160A  118A  2140   	fcall	_lcd_set_cursor
              160A  118A         
  6192                           	line	189
  6193                           ;drive.c: 189: lcd_write_data('!');
  6194  172A  3021               	movlw	(021h)
  6195  172B  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  6196                           	line	190
  6197                           	
  6198  1730                     l12660:	
  6199                           ;drive.c: 190: drive(255, 125, 128, 0);
  6200  1730  307D               	movlw	(07Dh)
  6201  1731  1283               	bcf	status, 5	;RP0=0, select bank0
  6202  1732  1303               	bcf	status, 6	;RP1=0, select bank0
  6203  1733  00B3               	movwf	(??_goReverse+0)+0
  6204  1734  0833               	movf	(??_goReverse+0)+0,w
  6205  1735  00AC               	movwf	(?_drive)
  6206  1736  3080               	movlw	(080h)
  6207  1737  00B4               	movwf	(??_goReverse+1)+0
  6208  1738  0834               	movf	(??_goReverse+1)+0,w
  6209  1739  00AD               	movwf	0+(?_drive)+01h
  6210  173A  01AE               	clrf	0+(?_drive)+02h
  6211  173B  30FF               	movlw	(0FFh)
  6212  173C  160A  118A  24AB   	fcall	_drive
              160A  118A         
  6213                           	line	191
  6214                           	
  6215  1741                     l12662:	
  6216                           ;drive.c: 191: waitFor(156,254,12);
  6217  1741  30FE               	movlw	(0FEh)
  6218  1742  1283               	bcf	status, 5	;RP0=0, select bank0
  6219  1743  1303               	bcf	status, 6	;RP1=0, select bank0
  6220  1744  00B3               	movwf	(??_goReverse+0)+0
  6221  1745  0833               	movf	(??_goReverse+0)+0,w
  6222  1746  00AC               	movwf	(?_waitFor)
  6223  1747  300C               	movlw	(0Ch)
  6224  1748  00B4               	movwf	(??_goReverse+1)+0
  6225  1749  0834               	movf	(??_goReverse+1)+0,w
  6226  174A  00AD               	movwf	0+(?_waitFor)+01h
  6227  174B  309C               	movlw	(09Ch)
  6228  174C  160A  118A  236C   	fcall	_waitFor
              160A  118A         
  6229                           	line	192
  6230                           	
  6231  1751                     l12664:	
  6232                           ;drive.c: 192: drive(0, 0, 0, 0);
  6233  1751  1283               	bcf	status, 5	;RP0=0, select bank0
  6234  1752  1303               	bcf	status, 6	;RP1=0, select bank0
  6235  1753  01AC               	clrf	(?_drive)
  6236  1754  01AD               	clrf	0+(?_drive)+01h
  6237  1755  01AE               	clrf	0+(?_drive)+02h
  6238  1756  3000               	movlw	(0)
  6239  1757  160A  118A  24AB   	fcall	_drive
              160A  118A         
  6240                           	line	193
  6241                           	
  6242  175C                     l12666:	
  6243                           ;drive.c: 193: _delay((unsigned long)((2000)*(20000000/4000.0)));
  6244                           	opt asmopt_off
  6245  175C  3033               movlw  51
  6246  175D  1283               	bcf	status, 5	;RP0=0, select bank0
  6247  175E  1303               	bcf	status, 6	;RP1=0, select bank0
  6248  175F  00B5               movwf	((??_goReverse+0)+0+2),f
  6249  1760  30BC               movlw	188
  6250  1761  00B4               movwf	((??_goReverse+0)+0+1),f
  6251  1762  3010               	movlw	16
  6252  1763  00B3               movwf	((??_goReverse+0)+0),f
  6253  1764                     u7577:
  6254  1764  0BB3               	decfsz	((??_goReverse+0)+0),f
  6255  1765  2F64               	goto	u7577
  6256  1766  0BB4               	decfsz	((??_goReverse+0)+0+1),f
  6257  1767  2F64               	goto	u7577
  6258  1768  0BB5               	decfsz	((??_goReverse+0)+0+2),f
  6259  1769  2F64               	goto	u7577
  6260                           opt asmopt_on
  6261                           
  6262                           	line	194
  6263                           	
  6264  176A                     l5861:	
  6265  176A  0008               	return
  6266                           	opt stack 0
  6267                           GLOBAL	__end_of_goReverse
  6268  176B                     	__end_of_goReverse:
  6269 ;; =============== function _goReverse ends ============
  6270                           
  6271                           	signat	_goReverse,88
  6272                           	global	_readIR
  6273                           psect	text2005,local,class=CODE,delta=2
  6274                           global __ptext2005
  6275  0800                     __ptext2005:
  6276                           
  6277 ;; *************** function _readIR *****************
  6278 ;; Defined at:
  6279 ;;		line 33 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ir.c
       "
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  cm              2   43[BANK0 ] int 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  2   41[BANK0 ] int 
  6286 ;; Registers used:
  6287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6293 ;;      Params:         0       2       0       0       0
  6294 ;;      Locals:         0       2       0       0       0
  6295 ;;      Temps:          0       0       0       0       0
  6296 ;;      Totals:         0       4       0       0       0
  6297 ;;Total ram usage:        4 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    5
  6300 ;; This function calls:
  6301 ;;		_adc_read_channel
  6302 ;;		_convert
  6303 ;; This function is called by:
  6304 ;;		_frontWallCorrect
  6305 ;;		_goParallel
  6306 ;;		_findWall
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           psect	text2005
  6310                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ir.c"
  6311                           	line	33
  6312                           	global	__size_of_readIR
  6313  0023                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  6314                           	
  6315  0800                     _readIR:	
  6316                           	opt	stack 1
  6317                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6318                           	line	34
  6319                           	
  6320  0800                     l12652:	
  6321                           ;ir.c: 34: int cm = convert(adc_read_channel(0));
  6322  0800  3000               	movlw	(0)
  6323  0801  160A  118A  25D1   	fcall	_adc_read_channel
              120A  158A         
  6324  0806  1283               	bcf	status, 5	;RP0=0, select bank0
  6325  0807  1303               	bcf	status, 6	;RP1=0, select bank0
  6326  0808  0846               	movf	(1+(?_adc_read_channel)),w
  6327  0809  01C2               	clrf	(?_convert+1)
  6328  080A  07C2               	addwf	(?_convert+1)
  6329  080B  0845               	movf	(0+(?_adc_read_channel)),w
  6330  080C  01C1               	clrf	(?_convert)
  6331  080D  07C1               	addwf	(?_convert)
  6332                           
  6333  080E  120A  118A  21F9   	fcall	_convert
              120A  158A         
  6334  0813  1283               	bcf	status, 5	;RP0=0, select bank0
  6335  0814  1303               	bcf	status, 6	;RP1=0, select bank0
  6336  0815  0842               	movf	(1+(?_convert)),w
  6337  0816  01CC               	clrf	(readIR@cm+1)
  6338  0817  07CC               	addwf	(readIR@cm+1)
  6339  0818  0841               	movf	(0+(?_convert)),w
  6340  0819  01CB               	clrf	(readIR@cm)
  6341  081A  07CB               	addwf	(readIR@cm)
  6342                           
  6343                           	line	35
  6344                           	
  6345  081B                     l12654:	
  6346                           ;ir.c: 35: return cm;
  6347  081B  084C               	movf	(readIR@cm+1),w
  6348  081C  01CA               	clrf	(?_readIR+1)
  6349  081D  07CA               	addwf	(?_readIR+1)
  6350  081E  084B               	movf	(readIR@cm),w
  6351  081F  01C9               	clrf	(?_readIR)
  6352  0820  07C9               	addwf	(?_readIR)
  6353                           
  6354  0821  2822               	goto	l5081
  6355                           	
  6356  0822                     l12656:	
  6357                           	line	36
  6358                           	
  6359  0822                     l5081:	
  6360  0822  0008               	return
  6361                           	opt stack 0
  6362                           GLOBAL	__end_of_readIR
  6363  0823                     	__end_of_readIR:
  6364 ;; =============== function _readIR ends ============
  6365                           
  6366                           	signat	_readIR,90
  6367                           	global	_findFinalDestination
  6368                           psect	text2006,local,class=CODE,delta=2
  6369                           global __ptext2006
  6370  0D73                     __ptext2006:
  6371                           
  6372 ;; *************** function _findFinalDestination *****************
  6373 ;; Defined at:
  6374 ;;		line 12 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\map.
       c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  virtualWallX    1    wreg     unsigned char 
  6377 ;;  virtualWallY    1   14[BANK0 ] unsigned char 
  6378 ;;  robotOrienta    1   15[BANK0 ] enum E1096
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  virtualWallX    1   17[BANK0 ] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;		None               void
  6383 ;; Registers used:
  6384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         0       2       0       0       0
  6391 ;;      Locals:         0       1       0       0       0
  6392 ;;      Temps:          0       1       0       0       0
  6393 ;;      Totals:         0       4       0       0       0
  6394 ;;Total ram usage:        4 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    4
  6397 ;; This function calls:
  6398 ;;		_lcd_set_cursor
  6399 ;;		_lcd_write_1_digit_bcd
  6400 ;; This function is called by:
  6401 ;;		_driveForDistance
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           psect	text2006
  6405                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
  6406                           	line	12
  6407                           	global	__size_of_findFinalDestination
  6408  0132                     	__size_of_findFinalDestination	equ	__end_of_findFinalDestination-_findFinalDestination
  6409                           	
  6410  0D73                     _findFinalDestination:	
  6411                           	opt	stack 1
  6412                           ; Regs used in _findFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6413                           ;findFinalDestination@virtualWallX stored from wreg
  6414  0D73  1283               	bcf	status, 5	;RP0=0, select bank0
  6415  0D74  1303               	bcf	status, 6	;RP1=0, select bank0
  6416  0D75  00B1               	movwf	(findFinalDestination@virtualWallX)
  6417                           	line	13
  6418                           	
  6419  0D76                     l12572:	
  6420                           ;map.c: 13: switch (virtualWallX)
  6421  0D76  2E77               	goto	l12648
  6422                           	line	15
  6423                           ;map.c: 14: {
  6424                           ;map.c: 15: case 0:
  6425                           	
  6426  0D77                     l2849:	
  6427                           	line	16
  6428                           ;map.c: 16: switch (virtualWallY)
  6429  0D77  2D91               	goto	l12582
  6430                           	line	20
  6431                           ;map.c: 17: {
  6432                           ;map.c: 20: case 1:
  6433                           	
  6434  0D78                     l2851:	
  6435                           	line	21
  6436                           ;map.c: 21: finalX = 0;
  6437  0D78  01E3               	clrf	(_finalX)
  6438                           	line	22
  6439                           	
  6440  0D79                     l12574:	
  6441                           ;map.c: 22: finalY = 1;
  6442  0D79  1683               	bsf	status, 5	;RP0=1, select bank1
  6443  0D7A  1303               	bcf	status, 6	;RP1=0, select bank1
  6444  0D7B  01E2               	clrf	(_finalY)^080h
  6445  0D7C  1403               	bsf	status,0
  6446  0D7D  0DE2               	rlf	(_finalY)^080h,f
  6447                           	line	23
  6448                           ;map.c: 23: break;
  6449  0D7E  2E88               	goto	l12650
  6450                           	line	24
  6451                           ;map.c: 24: case 2:
  6452                           	
  6453  0D7F                     l2853:	
  6454                           	line	25
  6455                           ;map.c: 25: finalX = 0;
  6456  0D7F  01E3               	clrf	(_finalX)
  6457                           	line	26
  6458                           	
  6459  0D80                     l12576:	
  6460                           ;map.c: 26: finalY = 2;
  6461  0D80  3002               	movlw	(02h)
  6462  0D81  00B0               	movwf	(??_findFinalDestination+0)+0
  6463  0D82  0830               	movf	(??_findFinalDestination+0)+0,w
  6464  0D83  1683               	bsf	status, 5	;RP0=1, select bank1
  6465  0D84  1303               	bcf	status, 6	;RP1=0, select bank1
  6466  0D85  00E2               	movwf	(_finalY)^080h
  6467                           	line	27
  6468                           ;map.c: 27: break;
  6469  0D86  2E88               	goto	l12650
  6470                           	line	28
  6471                           ;map.c: 28: case 3:
  6472                           	
  6473  0D87                     l2854:	
  6474                           	line	29
  6475                           ;map.c: 29: finalX = 0;
  6476  0D87  01E3               	clrf	(_finalX)
  6477                           	line	30
  6478                           	
  6479  0D88                     l12578:	
  6480                           ;map.c: 30: finalY = 3;
  6481  0D88  3003               	movlw	(03h)
  6482  0D89  00B0               	movwf	(??_findFinalDestination+0)+0
  6483  0D8A  0830               	movf	(??_findFinalDestination+0)+0,w
  6484  0D8B  1683               	bsf	status, 5	;RP0=1, select bank1
  6485  0D8C  1303               	bcf	status, 6	;RP1=0, select bank1
  6486  0D8D  00E2               	movwf	(_finalY)^080h
  6487                           	line	31
  6488                           ;map.c: 31: break;
  6489  0D8E  2E88               	goto	l12650
  6490                           	line	32
  6491                           ;map.c: 32: default:
  6492                           	
  6493  0D8F                     l2855:	
  6494                           	line	33
  6495                           ;map.c: 33: break;
  6496  0D8F  2E88               	goto	l12650
  6497                           	line	34
  6498                           	
  6499  0D90                     l12580:	
  6500                           ;map.c: 34: }
  6501  0D90  2E88               	goto	l12650
  6502                           	line	16
  6503                           	
  6504  0D91                     l2850:	
  6505                           	
  6506  0D91                     l12582:	
  6507  0D91  1283               	bcf	status, 5	;RP0=0, select bank0
  6508  0D92  082E               	movf	(findFinalDestination@virtualWallY),w
  6509                           	; Switch size 1, requested type "space"
  6510                           ; Number of cases is 3, Range of values is 1 to 3
  6511                           ; switch strategies available:
  6512                           ; Name         Instructions Cycles
  6513                           ; simple_byte           10     6 (average)
  6514                           ; direct_byte           20    11 (fixed)
  6515                           ; jumptable            263     9 (fixed)
  6516                           ;	Chosen strategy is simple_byte
  6517                           
  6518                           	opt asmopt_off
  6519  0D93  3A01               	xorlw	1^0	; case 1
  6520  0D94  1903               	skipnz
  6521  0D95  2D78               	goto	l2851
  6522  0D96  3A03               	xorlw	2^1	; case 2
  6523  0D97  1903               	skipnz
  6524  0D98  2D7F               	goto	l2853
  6525  0D99  3A01               	xorlw	3^2	; case 3
  6526  0D9A  1903               	skipnz
  6527  0D9B  2D87               	goto	l2854
  6528  0D9C  2E88               	goto	l12650
  6529                           	opt asmopt_on
  6530                           
  6531                           	line	34
  6532                           	
  6533  0D9D                     l2852:	
  6534                           	line	35
  6535                           ;map.c: 35: break;
  6536  0D9D  2E88               	goto	l12650
  6537                           	line	37
  6538                           ;map.c: 37: case 1:
  6539                           	
  6540  0D9E                     l2857:	
  6541                           	line	38
  6542                           ;map.c: 38: switch (virtualWallY)
  6543  0D9E  2DC8               	goto	l12600
  6544                           	line	40
  6545                           ;map.c: 39: {
  6546                           ;map.c: 40: case 0:
  6547                           	
  6548  0D9F                     l2859:	
  6549                           	line	41
  6550                           	
  6551  0D9F                     l12584:	
  6552                           ;map.c: 41: finalX = 1;
  6553  0D9F  01E3               	clrf	(_finalX)
  6554  0DA0  1403               	bsf	status,0
  6555  0DA1  0DE3               	rlf	(_finalX),f
  6556                           	line	42
  6557                           	
  6558  0DA2                     l12586:	
  6559                           ;map.c: 42: finalY = 0;
  6560  0DA2  1683               	bsf	status, 5	;RP0=1, select bank1
  6561  0DA3  1303               	bcf	status, 6	;RP1=0, select bank1
  6562  0DA4  01E2               	clrf	(_finalY)^080h
  6563                           	line	43
  6564                           ;map.c: 43: break;
  6565  0DA5  2E88               	goto	l12650
  6566                           	line	44
  6567                           ;map.c: 44: case 1:
  6568                           	
  6569  0DA6                     l2861:	
  6570                           	line	45
  6571                           	
  6572  0DA6                     l12588:	
  6573                           ;map.c: 45: finalX = 1;
  6574  0DA6  1283               	bcf	status, 5	;RP0=0, select bank0
  6575  0DA7  01E3               	clrf	(_finalX)
  6576  0DA8  1403               	bsf	status,0
  6577  0DA9  0DE3               	rlf	(_finalX),f
  6578                           	line	46
  6579                           ;map.c: 46: finalY = 1;
  6580  0DAA  1683               	bsf	status, 5	;RP0=1, select bank1
  6581  0DAB  1303               	bcf	status, 6	;RP1=0, select bank1
  6582  0DAC  01E2               	clrf	(_finalY)^080h
  6583  0DAD  1403               	bsf	status,0
  6584  0DAE  0DE2               	rlf	(_finalY)^080h,f
  6585                           	line	47
  6586                           ;map.c: 47: break;
  6587  0DAF  2E88               	goto	l12650
  6588                           	line	48
  6589                           ;map.c: 48: case 2:
  6590                           	
  6591  0DB0                     l2862:	
  6592                           	line	49
  6593                           	
  6594  0DB0                     l12590:	
  6595                           ;map.c: 49: finalX = 1;
  6596  0DB0  1283               	bcf	status, 5	;RP0=0, select bank0
  6597  0DB1  01E3               	clrf	(_finalX)
  6598  0DB2  1403               	bsf	status,0
  6599  0DB3  0DE3               	rlf	(_finalX),f
  6600                           	line	50
  6601                           	
  6602  0DB4                     l12592:	
  6603                           ;map.c: 50: finalY = 2;
  6604  0DB4  3002               	movlw	(02h)
  6605  0DB5  00B0               	movwf	(??_findFinalDestination+0)+0
  6606  0DB6  0830               	movf	(??_findFinalDestination+0)+0,w
  6607  0DB7  1683               	bsf	status, 5	;RP0=1, select bank1
  6608  0DB8  1303               	bcf	status, 6	;RP1=0, select bank1
  6609  0DB9  00E2               	movwf	(_finalY)^080h
  6610                           	line	51
  6611                           ;map.c: 51: break;
  6612  0DBA  2E88               	goto	l12650
  6613                           	line	52
  6614                           ;map.c: 52: case 3:
  6615                           	
  6616  0DBB                     l2863:	
  6617                           	line	53
  6618                           	
  6619  0DBB                     l12594:	
  6620                           ;map.c: 53: finalX = 1;
  6621  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  6622  0DBC  01E3               	clrf	(_finalX)
  6623  0DBD  1403               	bsf	status,0
  6624  0DBE  0DE3               	rlf	(_finalX),f
  6625                           	line	54
  6626                           	
  6627  0DBF                     l12596:	
  6628                           ;map.c: 54: finalY = 3;
  6629  0DBF  3003               	movlw	(03h)
  6630  0DC0  00B0               	movwf	(??_findFinalDestination+0)+0
  6631  0DC1  0830               	movf	(??_findFinalDestination+0)+0,w
  6632  0DC2  1683               	bsf	status, 5	;RP0=1, select bank1
  6633  0DC3  1303               	bcf	status, 6	;RP1=0, select bank1
  6634  0DC4  00E2               	movwf	(_finalY)^080h
  6635                           	line	55
  6636                           ;map.c: 55: break;
  6637  0DC5  2E88               	goto	l12650
  6638                           	line	56
  6639                           ;map.c: 56: default:
  6640                           	
  6641  0DC6                     l2864:	
  6642                           	line	57
  6643                           ;map.c: 57: break;
  6644  0DC6  2E88               	goto	l12650
  6645                           	line	58
  6646                           	
  6647  0DC7                     l12598:	
  6648                           ;map.c: 58: }
  6649  0DC7  2E88               	goto	l12650
  6650                           	line	38
  6651                           	
  6652  0DC8                     l2858:	
  6653                           	
  6654  0DC8                     l12600:	
  6655  0DC8  1283               	bcf	status, 5	;RP0=0, select bank0
  6656  0DC9  082E               	movf	(findFinalDestination@virtualWallY),w
  6657                           	; Switch size 1, requested type "space"
  6658                           ; Number of cases is 4, Range of values is 0 to 3
  6659                           ; switch strategies available:
  6660                           ; Name         Instructions Cycles
  6661                           ; simple_byte           13     7 (average)
  6662                           ; direct_byte           20     8 (fixed)
  6663                           ; jumptable            260     6 (fixed)
  6664                           ; rangetable             8     6 (fixed)
  6665                           ; spacedrange           14     9 (fixed)
  6666                           ; locatedrange           4     3 (fixed)
  6667                           ;	Chosen strategy is simple_byte
  6668                           
  6669                           	opt asmopt_off
  6670  0DCA  3A00               	xorlw	0^0	; case 0
  6671  0DCB  1903               	skipnz
  6672  0DCC  2D9F               	goto	l12584
  6673  0DCD  3A01               	xorlw	1^0	; case 1
  6674  0DCE  1903               	skipnz
  6675  0DCF  2DA6               	goto	l12588
  6676  0DD0  3A03               	xorlw	2^1	; case 2
  6677  0DD1  1903               	skipnz
  6678  0DD2  2DB0               	goto	l12590
  6679  0DD3  3A01               	xorlw	3^2	; case 3
  6680  0DD4  1903               	skipnz
  6681  0DD5  2DBB               	goto	l12594
  6682  0DD6  2E88               	goto	l12650
  6683                           	opt asmopt_on
  6684                           
  6685                           	line	58
  6686                           	
  6687  0DD7                     l2860:	
  6688                           	line	59
  6689                           ;map.c: 59: break;
  6690  0DD7  2E88               	goto	l12650
  6691                           	line	61
  6692                           ;map.c: 61: case 2:
  6693                           	
  6694  0DD8                     l2865:	
  6695                           	line	62
  6696                           ;map.c: 62: switch (virtualWallY)
  6697  0DD8  2E09               	goto	l12618
  6698                           	line	64
  6699                           ;map.c: 63: {
  6700                           ;map.c: 64: case 0:
  6701                           	
  6702  0DD9                     l2867:	
  6703                           	line	65
  6704                           	
  6705  0DD9                     l12602:	
  6706                           ;map.c: 65: if(robotOrientation == WEST)
  6707  0DD9  08AF               	movf	(findFinalDestination@robotOrientation),f
  6708  0DDA  1D03               	skipz
  6709  0DDB  2DDD               	goto	u6821
  6710  0DDC  2DDE               	goto	u6820
  6711  0DDD                     u6821:
  6712  0DDD  2E88               	goto	l12650
  6713  0DDE                     u6820:
  6714                           	line	67
  6715                           	
  6716  0DDE                     l12604:	
  6717                           ;map.c: 66: {
  6718                           ;map.c: 67: finalX = 3;
  6719  0DDE  3003               	movlw	(03h)
  6720  0DDF  00B0               	movwf	(??_findFinalDestination+0)+0
  6721  0DE0  0830               	movf	(??_findFinalDestination+0)+0,w
  6722  0DE1  00E3               	movwf	(_finalX)
  6723                           	line	68
  6724                           	
  6725  0DE2                     l12606:	
  6726                           ;map.c: 68: finalY = 1;
  6727  0DE2  1683               	bsf	status, 5	;RP0=1, select bank1
  6728  0DE3  1303               	bcf	status, 6	;RP1=0, select bank1
  6729  0DE4  01E2               	clrf	(_finalY)^080h
  6730  0DE5  1403               	bsf	status,0
  6731  0DE6  0DE2               	rlf	(_finalY)^080h,f
  6732  0DE7  2E88               	goto	l12650
  6733                           	line	69
  6734                           	
  6735  0DE8                     l2868:	
  6736                           	line	70
  6737                           ;map.c: 69: }
  6738                           ;map.c: 70: break;
  6739  0DE8  2E88               	goto	l12650
  6740                           	line	71
  6741                           ;map.c: 71: case 1:
  6742                           	
  6743  0DE9                     l2870:	
  6744                           	line	72
  6745                           	
  6746  0DE9                     l12608:	
  6747                           ;map.c: 72: finalX = 2;
  6748  0DE9  3002               	movlw	(02h)
  6749  0DEA  1283               	bcf	status, 5	;RP0=0, select bank0
  6750  0DEB  00B0               	movwf	(??_findFinalDestination+0)+0
  6751  0DEC  0830               	movf	(??_findFinalDestination+0)+0,w
  6752  0DED  00E3               	movwf	(_finalX)
  6753                           	line	73
  6754                           	
  6755  0DEE                     l12610:	
  6756                           ;map.c: 73: finalY = 1;
  6757  0DEE  1683               	bsf	status, 5	;RP0=1, select bank1
  6758  0DEF  1303               	bcf	status, 6	;RP1=0, select bank1
  6759  0DF0  01E2               	clrf	(_finalY)^080h
  6760  0DF1  1403               	bsf	status,0
  6761  0DF2  0DE2               	rlf	(_finalY)^080h,f
  6762                           	line	74
  6763                           ;map.c: 74: break;
  6764  0DF3  2E88               	goto	l12650
  6765                           	line	75
  6766                           ;map.c: 75: case 2:
  6767                           	
  6768  0DF4                     l2871:	
  6769                           	line	76
  6770                           	
  6771  0DF4                     l12612:	
  6772                           ;map.c: 76: if(robotOrientation == EAST)
  6773  0DF4  1283               	bcf	status, 5	;RP0=0, select bank0
  6774  0DF5  082F               	movf	(findFinalDestination@robotOrientation),w
  6775  0DF6  3A02               	xorlw	02h
  6776  0DF7  1D03               	skipz
  6777  0DF8  2DFA               	goto	u6831
  6778  0DF9  2DFB               	goto	u6830
  6779  0DFA                     u6831:
  6780  0DFA  2E88               	goto	l12650
  6781  0DFB                     u6830:
  6782                           	line	78
  6783                           	
  6784  0DFB                     l12614:	
  6785                           ;map.c: 77: {
  6786                           ;map.c: 78: finalX = 2;
  6787  0DFB  3002               	movlw	(02h)
  6788  0DFC  00B0               	movwf	(??_findFinalDestination+0)+0
  6789  0DFD  0830               	movf	(??_findFinalDestination+0)+0,w
  6790  0DFE  00E3               	movwf	(_finalX)
  6791                           	line	79
  6792                           ;map.c: 79: finalY = 2;
  6793  0DFF  3002               	movlw	(02h)
  6794  0E00  00B0               	movwf	(??_findFinalDestination+0)+0
  6795  0E01  0830               	movf	(??_findFinalDestination+0)+0,w
  6796  0E02  1683               	bsf	status, 5	;RP0=1, select bank1
  6797  0E03  1303               	bcf	status, 6	;RP1=0, select bank1
  6798  0E04  00E2               	movwf	(_finalY)^080h
  6799  0E05  2E88               	goto	l12650
  6800                           	line	80
  6801                           	
  6802  0E06                     l2872:	
  6803                           	line	81
  6804                           ;map.c: 80: }
  6805                           ;map.c: 81: break;
  6806  0E06  2E88               	goto	l12650
  6807                           	line	84
  6808                           ;map.c: 84: default:
  6809                           	
  6810  0E07                     l2873:	
  6811                           	line	85
  6812                           ;map.c: 85: break;
  6813  0E07  2E88               	goto	l12650
  6814                           	line	86
  6815                           	
  6816  0E08                     l12616:	
  6817                           ;map.c: 86: }
  6818  0E08  2E88               	goto	l12650
  6819                           	line	62
  6820                           	
  6821  0E09                     l2866:	
  6822                           	
  6823  0E09                     l12618:	
  6824  0E09  1283               	bcf	status, 5	;RP0=0, select bank0
  6825  0E0A  082E               	movf	(findFinalDestination@virtualWallY),w
  6826                           	; Switch size 1, requested type "space"
  6827                           ; Number of cases is 3, Range of values is 0 to 2
  6828                           ; switch strategies available:
  6829                           ; Name         Instructions Cycles
  6830                           ; simple_byte           10     6 (average)
  6831                           ; direct_byte           17     8 (fixed)
  6832                           ; jumptable            260     6 (fixed)
  6833                           ; rangetable             7     6 (fixed)
  6834                           ; spacedrange           12     9 (fixed)
  6835                           ; locatedrange           3     3 (fixed)
  6836                           ;	Chosen strategy is simple_byte
  6837                           
  6838                           	opt asmopt_off
  6839  0E0B  3A00               	xorlw	0^0	; case 0
  6840  0E0C  1903               	skipnz
  6841  0E0D  2DD9               	goto	l12602
  6842  0E0E  3A01               	xorlw	1^0	; case 1
  6843  0E0F  1903               	skipnz
  6844  0E10  2DE9               	goto	l12608
  6845  0E11  3A03               	xorlw	2^1	; case 2
  6846  0E12  1903               	skipnz
  6847  0E13  2DF4               	goto	l12612
  6848  0E14  2E88               	goto	l12650
  6849                           	opt asmopt_on
  6850                           
  6851                           	line	86
  6852                           	
  6853  0E15                     l2869:	
  6854                           	line	87
  6855                           ;map.c: 87: break;
  6856  0E15  2E88               	goto	l12650
  6857                           	line	89
  6858                           ;map.c: 89: case 3:
  6859                           	
  6860  0E16                     l2874:	
  6861                           	line	90
  6862                           ;map.c: 90: switch (virtualWallY)
  6863  0E16  2E2D               	goto	l12628
  6864                           	line	92
  6865                           ;map.c: 91: {
  6866                           ;map.c: 92: case 0:
  6867                           	
  6868  0E17                     l2876:	
  6869                           	line	93
  6870                           	
  6871  0E17                     l12620:	
  6872                           ;map.c: 93: finalX = 3;
  6873  0E17  3003               	movlw	(03h)
  6874  0E18  00B0               	movwf	(??_findFinalDestination+0)+0
  6875  0E19  0830               	movf	(??_findFinalDestination+0)+0,w
  6876  0E1A  00E3               	movwf	(_finalX)
  6877                           	line	94
  6878                           	
  6879  0E1B                     l12622:	
  6880                           ;map.c: 94: finalY = 0;
  6881  0E1B  1683               	bsf	status, 5	;RP0=1, select bank1
  6882  0E1C  1303               	bcf	status, 6	;RP1=0, select bank1
  6883  0E1D  01E2               	clrf	(_finalY)^080h
  6884                           	line	95
  6885                           ;map.c: 95: break;
  6886  0E1E  2E88               	goto	l12650
  6887                           	line	98
  6888                           ;map.c: 98: case 2:
  6889                           	
  6890  0E1F                     l2878:	
  6891                           	line	99
  6892                           	
  6893  0E1F                     l12624:	
  6894                           ;map.c: 99: finalX = 3;
  6895  0E1F  3003               	movlw	(03h)
  6896  0E20  1283               	bcf	status, 5	;RP0=0, select bank0
  6897  0E21  00B0               	movwf	(??_findFinalDestination+0)+0
  6898  0E22  0830               	movf	(??_findFinalDestination+0)+0,w
  6899  0E23  00E3               	movwf	(_finalX)
  6900                           	line	100
  6901                           ;map.c: 100: finalY = 2;
  6902  0E24  3002               	movlw	(02h)
  6903  0E25  00B0               	movwf	(??_findFinalDestination+0)+0
  6904  0E26  0830               	movf	(??_findFinalDestination+0)+0,w
  6905  0E27  1683               	bsf	status, 5	;RP0=1, select bank1
  6906  0E28  1303               	bcf	status, 6	;RP1=0, select bank1
  6907  0E29  00E2               	movwf	(_finalY)^080h
  6908                           	line	101
  6909                           ;map.c: 101: break;
  6910  0E2A  2E88               	goto	l12650
  6911                           	line	104
  6912                           ;map.c: 104: default:
  6913                           	
  6914  0E2B                     l2879:	
  6915                           	line	105
  6916                           ;map.c: 105: break;
  6917  0E2B  2E88               	goto	l12650
  6918                           	line	106
  6919                           	
  6920  0E2C                     l12626:	
  6921                           ;map.c: 106: }
  6922  0E2C  2E88               	goto	l12650
  6923                           	line	90
  6924                           	
  6925  0E2D                     l2875:	
  6926                           	
  6927  0E2D                     l12628:	
  6928  0E2D  1283               	bcf	status, 5	;RP0=0, select bank0
  6929  0E2E  082E               	movf	(findFinalDestination@virtualWallY),w
  6930                           	; Switch size 1, requested type "space"
  6931                           ; Number of cases is 2, Range of values is 0 to 2
  6932                           ; switch strategies available:
  6933                           ; Name         Instructions Cycles
  6934                           ; simple_byte            7     4 (average)
  6935                           ; direct_byte           17     8 (fixed)
  6936                           ; jumptable            260     6 (fixed)
  6937                           ; rangetable             7     6 (fixed)
  6938                           ; spacedrange           12     9 (fixed)
  6939                           ; locatedrange           3     3 (fixed)
  6940                           ;	Chosen strategy is simple_byte
  6941                           
  6942                           	opt asmopt_off
  6943  0E2F  3A00               	xorlw	0^0	; case 0
  6944  0E30  1903               	skipnz
  6945  0E31  2E17               	goto	l12620
  6946  0E32  3A02               	xorlw	2^0	; case 2
  6947  0E33  1903               	skipnz
  6948  0E34  2E1F               	goto	l12624
  6949  0E35  2E88               	goto	l12650
  6950                           	opt asmopt_on
  6951                           
  6952                           	line	106
  6953                           	
  6954  0E36                     l2877:	
  6955                           	line	107
  6956                           ;map.c: 107: break;
  6957  0E36  2E88               	goto	l12650
  6958                           	line	109
  6959                           ;map.c: 109: case 4:
  6960                           	
  6961  0E37                     l2880:	
  6962                           	line	110
  6963                           ;map.c: 110: switch (virtualWallY)
  6964  0E37  2E65               	goto	l12644
  6965                           	line	112
  6966                           ;map.c: 111: {
  6967                           ;map.c: 112: case 0:
  6968                           	
  6969  0E38                     l2882:	
  6970                           	line	113
  6971                           	
  6972  0E38                     l12630:	
  6973                           ;map.c: 113: finalX = 4;
  6974  0E38  3004               	movlw	(04h)
  6975  0E39  00B0               	movwf	(??_findFinalDestination+0)+0
  6976  0E3A  0830               	movf	(??_findFinalDestination+0)+0,w
  6977  0E3B  00E3               	movwf	(_finalX)
  6978                           	line	114
  6979                           	
  6980  0E3C                     l12632:	
  6981                           ;map.c: 114: finalY = 0;
  6982  0E3C  1683               	bsf	status, 5	;RP0=1, select bank1
  6983  0E3D  1303               	bcf	status, 6	;RP1=0, select bank1
  6984  0E3E  01E2               	clrf	(_finalY)^080h
  6985                           	line	115
  6986                           ;map.c: 115: break;
  6987  0E3F  2E88               	goto	l12650
  6988                           	line	116
  6989                           ;map.c: 116: case 1:
  6990                           	
  6991  0E40                     l2884:	
  6992                           	line	117
  6993                           	
  6994  0E40                     l12634:	
  6995                           ;map.c: 117: finalX = 4;
  6996  0E40  3004               	movlw	(04h)
  6997  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  6998  0E42  00B0               	movwf	(??_findFinalDestination+0)+0
  6999  0E43  0830               	movf	(??_findFinalDestination+0)+0,w
  7000  0E44  00E3               	movwf	(_finalX)
  7001                           	line	118
  7002                           	
  7003  0E45                     l12636:	
  7004                           ;map.c: 118: finalY = 1;
  7005  0E45  1683               	bsf	status, 5	;RP0=1, select bank1
  7006  0E46  1303               	bcf	status, 6	;RP1=0, select bank1
  7007  0E47  01E2               	clrf	(_finalY)^080h
  7008  0E48  1403               	bsf	status,0
  7009  0E49  0DE2               	rlf	(_finalY)^080h,f
  7010                           	line	119
  7011                           ;map.c: 119: break;
  7012  0E4A  2E88               	goto	l12650
  7013                           	line	120
  7014                           ;map.c: 120: case 2:
  7015                           	
  7016  0E4B                     l2885:	
  7017                           	line	121
  7018                           	
  7019  0E4B                     l12638:	
  7020                           ;map.c: 121: if (robotOrientation == SOUTH)
  7021  0E4B  1283               	bcf	status, 5	;RP0=0, select bank0
  7022  0E4C  082F               	movf	(findFinalDestination@robotOrientation),w
  7023  0E4D  3A01               	xorlw	01h
  7024  0E4E  1D03               	skipz
  7025  0E4F  2E51               	goto	u6841
  7026  0E50  2E52               	goto	u6840
  7027  0E51                     u6841:
  7028  0E51  2E88               	goto	l12650
  7029  0E52                     u6840:
  7030                           	line	123
  7031                           	
  7032  0E52                     l12640:	
  7033                           ;map.c: 122: {
  7034                           ;map.c: 123: finalX = 4;
  7035  0E52  3004               	movlw	(04h)
  7036  0E53  00B0               	movwf	(??_findFinalDestination+0)+0
  7037  0E54  0830               	movf	(??_findFinalDestination+0)+0,w
  7038  0E55  00E3               	movwf	(_finalX)
  7039                           	line	124
  7040                           ;map.c: 124: finalY = 2;
  7041  0E56  3002               	movlw	(02h)
  7042  0E57  00B0               	movwf	(??_findFinalDestination+0)+0
  7043  0E58  0830               	movf	(??_findFinalDestination+0)+0,w
  7044  0E59  1683               	bsf	status, 5	;RP0=1, select bank1
  7045  0E5A  1303               	bcf	status, 6	;RP1=0, select bank1
  7046  0E5B  00E2               	movwf	(_finalY)^080h
  7047  0E5C  2E88               	goto	l12650
  7048                           	line	125
  7049                           	
  7050  0E5D                     l2886:	
  7051                           	line	126
  7052                           ;map.c: 125: }
  7053                           ;map.c: 126: break;
  7054  0E5D  2E88               	goto	l12650
  7055                           	line	127
  7056                           ;map.c: 127: case 3:
  7057                           	
  7058  0E5E                     l2887:	
  7059                           	line	128
  7060                           ;map.c: 128: finalX = 0;
  7061  0E5E  01E3               	clrf	(_finalX)
  7062                           	line	129
  7063                           ;map.c: 129: finalY = 0;
  7064  0E5F  1683               	bsf	status, 5	;RP0=1, select bank1
  7065  0E60  1303               	bcf	status, 6	;RP1=0, select bank1
  7066  0E61  01E2               	clrf	(_finalY)^080h
  7067                           	line	130
  7068                           ;map.c: 130: break;
  7069  0E62  2E88               	goto	l12650
  7070                           	line	131
  7071                           ;map.c: 131: default:
  7072                           	
  7073  0E63                     l2888:	
  7074                           	line	132
  7075                           ;map.c: 132: break;
  7076  0E63  2E88               	goto	l12650
  7077                           	line	133
  7078                           	
  7079  0E64                     l12642:	
  7080                           ;map.c: 133: }
  7081  0E64  2E88               	goto	l12650
  7082                           	line	110
  7083                           	
  7084  0E65                     l2881:	
  7085                           	
  7086  0E65                     l12644:	
  7087  0E65  1283               	bcf	status, 5	;RP0=0, select bank0
  7088  0E66  082E               	movf	(findFinalDestination@virtualWallY),w
  7089                           	; Switch size 1, requested type "space"
  7090                           ; Number of cases is 4, Range of values is 0 to 3
  7091                           ; switch strategies available:
  7092                           ; Name         Instructions Cycles
  7093                           ; simple_byte           13     7 (average)
  7094                           ; direct_byte           20     8 (fixed)
  7095                           ; jumptable            260     6 (fixed)
  7096                           ; rangetable             8     6 (fixed)
  7097                           ; spacedrange           14     9 (fixed)
  7098                           ; locatedrange           4     3 (fixed)
  7099                           ;	Chosen strategy is simple_byte
  7100                           
  7101                           	opt asmopt_off
  7102  0E67  3A00               	xorlw	0^0	; case 0
  7103  0E68  1903               	skipnz
  7104  0E69  2E38               	goto	l12630
  7105  0E6A  3A01               	xorlw	1^0	; case 1
  7106  0E6B  1903               	skipnz
  7107  0E6C  2E40               	goto	l12634
  7108  0E6D  3A03               	xorlw	2^1	; case 2
  7109  0E6E  1903               	skipnz
  7110  0E6F  2E4B               	goto	l12638
  7111  0E70  3A01               	xorlw	3^2	; case 3
  7112  0E71  1903               	skipnz
  7113  0E72  2E5E               	goto	l2887
  7114  0E73  2E88               	goto	l12650
  7115                           	opt asmopt_on
  7116                           
  7117                           	line	133
  7118                           	
  7119  0E74                     l2883:	
  7120                           	line	134
  7121                           ;map.c: 134: break;
  7122  0E74  2E88               	goto	l12650
  7123                           	line	136
  7124                           ;map.c: 136: default:
  7125                           	
  7126  0E75                     l2889:	
  7127                           	line	137
  7128                           ;map.c: 137: break;
  7129  0E75  2E88               	goto	l12650
  7130                           	line	138
  7131                           	
  7132  0E76                     l12646:	
  7133                           ;map.c: 138: }
  7134  0E76  2E88               	goto	l12650
  7135                           	line	13
  7136                           	
  7137  0E77                     l2848:	
  7138                           	
  7139  0E77                     l12648:	
  7140  0E77  0831               	movf	(findFinalDestination@virtualWallX),w
  7141                           	; Switch size 1, requested type "space"
  7142                           ; Number of cases is 5, Range of values is 0 to 4
  7143                           ; switch strategies available:
  7144                           ; Name         Instructions Cycles
  7145                           ; simple_byte           16     9 (average)
  7146                           ; direct_byte           23     8 (fixed)
  7147                           ; jumptable            260     6 (fixed)
  7148                           ; rangetable             9     6 (fixed)
  7149                           ; spacedrange           16     9 (fixed)
  7150                           ; locatedrange           5     3 (fixed)
  7151                           ;	Chosen strategy is simple_byte
  7152                           
  7153                           	opt asmopt_off
  7154  0E78  3A00               	xorlw	0^0	; case 0
  7155  0E79  1903               	skipnz
  7156  0E7A  2D91               	goto	l12582
  7157  0E7B  3A01               	xorlw	1^0	; case 1
  7158  0E7C  1903               	skipnz
  7159  0E7D  2DC8               	goto	l12600
  7160  0E7E  3A03               	xorlw	2^1	; case 2
  7161  0E7F  1903               	skipnz
  7162  0E80  2E09               	goto	l12618
  7163  0E81  3A01               	xorlw	3^2	; case 3
  7164  0E82  1903               	skipnz
  7165  0E83  2E2D               	goto	l12628
  7166  0E84  3A07               	xorlw	4^3	; case 4
  7167  0E85  1903               	skipnz
  7168  0E86  2E65               	goto	l12644
  7169  0E87  2E88               	goto	l12650
  7170                           	opt asmopt_on
  7171                           
  7172                           	line	138
  7173                           	
  7174  0E88                     l2856:	
  7175                           	line	140
  7176                           	
  7177  0E88                     l12650:	
  7178                           ;map.c: 140: lcd_set_cursor(0x47);
  7179  0E88  3047               	movlw	(047h)
  7180  0E89  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  7181                           	line	141
  7182                           ;map.c: 141: lcd_write_1_digit_bcd(finalX);
  7183  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  7184  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  7185  0E90  0863               	movf	(_finalX),w
  7186  0E91  160A  118A  214B   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  7187                           	line	142
  7188                           ;map.c: 142: lcd_set_cursor(0x49);
  7189  0E96  3049               	movlw	(049h)
  7190  0E97  160A  118A  2140   	fcall	_lcd_set_cursor
              120A  158A         
  7191                           	line	143
  7192                           ;map.c: 143: lcd_write_1_digit_bcd(finalY);
  7193  0E9C  1683               	bsf	status, 5	;RP0=1, select bank1
  7194  0E9D  1303               	bcf	status, 6	;RP1=0, select bank1
  7195  0E9E  0862               	movf	(_finalY)^080h,w
  7196  0E9F  160A  118A  214B   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  7197                           	line	144
  7198                           	
  7199  0EA4                     l2890:	
  7200  0EA4  0008               	return
  7201                           	opt stack 0
  7202                           GLOBAL	__end_of_findFinalDestination
  7203  0EA5                     	__end_of_findFinalDestination:
  7204 ;; =============== function _findFinalDestination ends ============
  7205                           
  7206                           	signat	_findFinalDestination,12408
  7207                           	global	_checkIfHome
  7208                           psect	text2007,local,class=CODE,delta=2
  7209                           global __ptext2007
  7210  124E                     __ptext2007:
  7211                           
  7212 ;; *************** function _checkIfHome *****************
  7213 ;; Defined at:
  7214 ;;		line 296 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7228 ;;      Params:         0       0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0
  7231 ;;      Totals:         0       0       0       0       0
  7232 ;;Total ram usage:        0 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    4
  7235 ;; This function calls:
  7236 ;;		_drive
  7237 ;;		_play_iCreate_song
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           psect	text2007
  7243                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  7244                           	line	296
  7245                           	global	__size_of_checkIfHome
  7246  0020                     	__size_of_checkIfHome	equ	__end_of_checkIfHome-_checkIfHome
  7247                           	
  7248  124E                     _checkIfHome:	
  7249                           	opt	stack 3
  7250                           ; Regs used in _checkIfHome: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7251                           	line	297
  7252                           	
  7253  124E                     l12564:	
  7254                           ;main.c: 297: if((xCoord == 1) && (yCoord == 3))
  7255  124E  1283               	bcf	status, 5	;RP0=0, select bank0
  7256  124F  1303               	bcf	status, 6	;RP1=0, select bank0
  7257  1250  0864               	movf	(_xCoord),w	;volatile
  7258  1251  3A01               	xorlw	01h
  7259  1252  1D03               	skipz
  7260  1253  2A55               	goto	u6801
  7261  1254  2A56               	goto	u6800
  7262  1255                     u6801:
  7263  1255  2A6D               	goto	l6770
  7264  1256                     u6800:
  7265                           	
  7266  1256                     l12566:	
  7267  1256  0865               	movf	(_yCoord),w	;volatile
  7268  1257  3A03               	xorlw	03h
  7269  1258  1D03               	skipz
  7270  1259  2A5B               	goto	u6811
  7271  125A  2A5C               	goto	u6810
  7272  125B                     u6811:
  7273  125B  2A6D               	goto	l6770
  7274  125C                     u6810:
  7275                           	line	299
  7276                           	
  7277  125C                     l12568:	
  7278                           ;main.c: 298: {
  7279                           ;main.c: 299: drive(0, 0, 0, 0);
  7280  125C  01AC               	clrf	(?_drive)
  7281  125D  01AD               	clrf	0+(?_drive)+01h
  7282  125E  01AE               	clrf	0+(?_drive)+02h
  7283  125F  3000               	movlw	(0)
  7284  1260  160A  118A  24AB   	fcall	_drive
              160A  118A         
  7285                           	line	300
  7286                           ;main.c: 300: play_iCreate_song(4);
  7287  1265  3004               	movlw	(04h)
  7288  1266  160A  118A  2167   	fcall	_play_iCreate_song
              160A  118A         
  7289                           	line	301
  7290                           	
  7291  126B                     l12570:	
  7292                           ;main.c: 301: home = 1;
  7293  126B  1770               	bsf	(_home/8),(_home)&7
  7294  126C  2A6D               	goto	l6770
  7295                           	line	302
  7296                           	
  7297  126D                     l6769:	
  7298                           	line	303
  7299                           	
  7300  126D                     l6770:	
  7301  126D  0008               	return
  7302                           	opt stack 0
  7303                           GLOBAL	__end_of_checkIfHome
  7304  126E                     	__end_of_checkIfHome:
  7305 ;; =============== function _checkIfHome ends ============
  7306                           
  7307                           	signat	_checkIfHome,88
  7308                           	global	_turnAround
  7309                           psect	text2008,local,class=CODE,delta=2
  7310                           global __ptext2008
  7311  16DD                     __ptext2008:
  7312                           
  7313 ;; *************** function _turnAround *****************
  7314 ;; Defined at:
  7315 ;;		line 208 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;		None
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;		None               void
  7322 ;; Registers used:
  7323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7329 ;;      Params:         0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0
  7331 ;;      Temps:          0       3       0       0       0
  7332 ;;      Totals:         0       3       0       0       0
  7333 ;;Total ram usage:        3 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; Hardware stack levels required when called:    4
  7336 ;; This function calls:
  7337 ;;		_drive
  7338 ;;		_waitFor
  7339 ;; This function is called by:
  7340 ;;		_goBackward
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           psect	text2008
  7345                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  7346                           	line	208
  7347                           	global	__size_of_turnAround
  7348  0047                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  7349                           	
  7350  16DD                     _turnAround:	
  7351                           	opt	stack 1
  7352                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7353                           	line	209
  7354                           	
  7355  16DD                     l12558:	
  7356                           ;drive.c: 209: drive(0, 50, 0, 1);
  7357  16DD  3032               	movlw	(032h)
  7358  16DE  1283               	bcf	status, 5	;RP0=0, select bank0
  7359  16DF  1303               	bcf	status, 6	;RP1=0, select bank0
  7360  16E0  00B3               	movwf	(??_turnAround+0)+0
  7361  16E1  0833               	movf	(??_turnAround+0)+0,w
  7362  16E2  00AC               	movwf	(?_drive)
  7363  16E3  01AD               	clrf	0+(?_drive)+01h
  7364  16E4  01AE               	clrf	0+(?_drive)+02h
  7365  16E5  1403               	bsf	status,0
  7366  16E6  0DAE               	rlf	0+(?_drive)+02h,f
  7367  16E7  3000               	movlw	(0)
  7368  16E8  160A  118A  24AB   	fcall	_drive
              160A  118A         
  7369                           	line	210
  7370                           ;drive.c: 210: waitFor(157,0,170);
  7371  16ED  1283               	bcf	status, 5	;RP0=0, select bank0
  7372  16EE  1303               	bcf	status, 6	;RP1=0, select bank0
  7373  16EF  01AC               	clrf	(?_waitFor)
  7374  16F0  30AA               	movlw	(0AAh)
  7375  16F1  00B3               	movwf	(??_turnAround+0)+0
  7376  16F2  0833               	movf	(??_turnAround+0)+0,w
  7377  16F3  00AD               	movwf	0+(?_waitFor)+01h
  7378  16F4  309D               	movlw	(09Dh)
  7379  16F5  160A  118A  236C   	fcall	_waitFor
              160A  118A         
  7380                           	line	211
  7381                           ;drive.c: 211: drive(0, 0, 0, 0);
  7382  16FA  1283               	bcf	status, 5	;RP0=0, select bank0
  7383  16FB  1303               	bcf	status, 6	;RP1=0, select bank0
  7384  16FC  01AC               	clrf	(?_drive)
  7385  16FD  01AD               	clrf	0+(?_drive)+01h
  7386  16FE  01AE               	clrf	0+(?_drive)+02h
  7387  16FF  3000               	movlw	(0)
  7388  1700  160A  118A  24AB   	fcall	_drive
              160A  118A         
  7389                           	line	212
  7390                           	
  7391  1705                     l12560:	
  7392                           ;drive.c: 212: _delay((unsigned long)((6000)*(20000000/4000.0)));
  7393                           	opt asmopt_off
  7394  1705  3099               movlw  153
  7395  1706  1283               	bcf	status, 5	;RP0=0, select bank0
  7396  1707  1303               	bcf	status, 6	;RP1=0, select bank0
  7397  1708  00B5               movwf	((??_turnAround+0)+0+2),f
  7398  1709  3032               movlw	50
  7399  170A  00B4               movwf	((??_turnAround+0)+0+1),f
  7400  170B  3038               	movlw	56
  7401  170C  00B3               movwf	((??_turnAround+0)+0),f
  7402  170D                     u7587:
  7403  170D  0BB3               	decfsz	((??_turnAround+0)+0),f
  7404  170E  2F0D               	goto	u7587
  7405  170F  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  7406  1710  2F0D               	goto	u7587
  7407  1711  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  7408  1712  2F0D               	goto	u7587
  7409  1713  2F14               	nop2
  7410                           opt asmopt_on
  7411                           
  7412                           	line	213
  7413                           	
  7414  1714                     l12562:	
  7415                           ;drive.c: 213: _delay((unsigned long)((6000)*(20000000/4000.0)));
  7416                           	opt asmopt_off
  7417  1714  3099               movlw  153
  7418  1715  1283               	bcf	status, 5	;RP0=0, select bank0
  7419  1716  1303               	bcf	status, 6	;RP1=0, select bank0
  7420  1717  00B5               movwf	((??_turnAround+0)+0+2),f
  7421  1718  3032               movlw	50
  7422  1719  00B4               movwf	((??_turnAround+0)+0+1),f
  7423  171A  3038               	movlw	56
  7424  171B  00B3               movwf	((??_turnAround+0)+0),f
  7425  171C                     u7597:
  7426  171C  0BB3               	decfsz	((??_turnAround+0)+0),f
  7427  171D  2F1C               	goto	u7597
  7428  171E  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  7429  171F  2F1C               	goto	u7597
  7430  1720  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  7431  1721  2F1C               	goto	u7597
  7432  1722  2F23               	nop2
  7433                           opt asmopt_on
  7434                           
  7435                           	line	214
  7436                           	
  7437  1723                     l5867:	
  7438  1723  0008               	return
  7439                           	opt stack 0
  7440                           GLOBAL	__end_of_turnAround
  7441  1724                     	__end_of_turnAround:
  7442 ;; =============== function _turnAround ends ============
  7443                           
  7444                           	signat	_turnAround,88
  7445                           	global	_turnLeft90
  7446                           psect	text2009,local,class=CODE,delta=2
  7447                           global __ptext2009
  7448  14E2                     __ptext2009:
  7449                           
  7450 ;; *************** function _turnLeft90 *****************
  7451 ;; Defined at:
  7452 ;;		line 217 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;		None
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;		None               void
  7459 ;; Registers used:
  7460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7466 ;;      Params:         0       0       0       0       0
  7467 ;;      Locals:         0       0       0       0       0
  7468 ;;      Temps:          0       3       0       0       0
  7469 ;;      Totals:         0       3       0       0       0
  7470 ;;Total ram usage:        3 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    4
  7473 ;; This function calls:
  7474 ;;		_drive
  7475 ;;		_waitFor
  7476 ;; This function is called by:
  7477 ;;		_driveForDistance
  7478 ;;		_goLeft
  7479 ;;		_main
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           psect	text2009
  7483                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  7484                           	line	217
  7485                           	global	__size_of_turnLeft90
  7486  0038                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  7487                           	
  7488  14E2                     _turnLeft90:	
  7489                           	opt	stack 1
  7490                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7491                           	line	218
  7492                           	
  7493  14E2                     l12554:	
  7494                           ;drive.c: 218: drive(0, 50, 0, 1);
  7495  14E2  3032               	movlw	(032h)
  7496  14E3  1283               	bcf	status, 5	;RP0=0, select bank0
  7497  14E4  1303               	bcf	status, 6	;RP1=0, select bank0
  7498  14E5  00B3               	movwf	(??_turnLeft90+0)+0
  7499  14E6  0833               	movf	(??_turnLeft90+0)+0,w
  7500  14E7  00AC               	movwf	(?_drive)
  7501  14E8  01AD               	clrf	0+(?_drive)+01h
  7502  14E9  01AE               	clrf	0+(?_drive)+02h
  7503  14EA  1403               	bsf	status,0
  7504  14EB  0DAE               	rlf	0+(?_drive)+02h,f
  7505  14EC  3000               	movlw	(0)
  7506  14ED  160A  118A  24AB   	fcall	_drive
              160A  118A         
  7507                           	line	219
  7508                           ;drive.c: 219: waitFor(157,0,85);
  7509  14F2  1283               	bcf	status, 5	;RP0=0, select bank0
  7510  14F3  1303               	bcf	status, 6	;RP1=0, select bank0
  7511  14F4  01AC               	clrf	(?_waitFor)
  7512  14F5  3055               	movlw	(055h)
  7513  14F6  00B3               	movwf	(??_turnLeft90+0)+0
  7514  14F7  0833               	movf	(??_turnLeft90+0)+0,w
  7515  14F8  00AD               	movwf	0+(?_waitFor)+01h
  7516  14F9  309D               	movlw	(09Dh)
  7517  14FA  160A  118A  236C   	fcall	_waitFor
              160A  118A         
  7518                           	line	220
  7519                           ;drive.c: 220: drive(0, 0, 0, 0);
  7520  14FF  1283               	bcf	status, 5	;RP0=0, select bank0
  7521  1500  1303               	bcf	status, 6	;RP1=0, select bank0
  7522  1501  01AC               	clrf	(?_drive)
  7523  1502  01AD               	clrf	0+(?_drive)+01h
  7524  1503  01AE               	clrf	0+(?_drive)+02h
  7525  1504  3000               	movlw	(0)
  7526  1505  160A  118A  24AB   	fcall	_drive
              160A  118A         
  7527                           	line	221
  7528                           	
  7529  150A                     l12556:	
  7530                           ;drive.c: 221: _delay((unsigned long)((6000)*(20000000/4000.0)));
  7531                           	opt asmopt_off
  7532  150A  3099               movlw  153
  7533  150B  1283               	bcf	status, 5	;RP0=0, select bank0
  7534  150C  1303               	bcf	status, 6	;RP1=0, select bank0
  7535  150D  00B5               movwf	((??_turnLeft90+0)+0+2),f
  7536  150E  3032               movlw	50
  7537  150F  00B4               movwf	((??_turnLeft90+0)+0+1),f
  7538  1510  3038               	movlw	56
  7539  1511  00B3               movwf	((??_turnLeft90+0)+0),f
  7540  1512                     u7607:
  7541  1512  0BB3               	decfsz	((??_turnLeft90+0)+0),f
  7542  1513  2D12               	goto	u7607
  7543  1514  0BB4               	decfsz	((??_turnLeft90+0)+0+1),f
  7544  1515  2D12               	goto	u7607
  7545  1516  0BB5               	decfsz	((??_turnLeft90+0)+0+2),f
  7546  1517  2D12               	goto	u7607
  7547  1518  2D19               	nop2
  7548                           opt asmopt_on
  7549                           
  7550                           	line	222
  7551                           	
  7552  1519                     l5870:	
  7553  1519  0008               	return
  7554                           	opt stack 0
  7555                           GLOBAL	__end_of_turnLeft90
  7556  151A                     	__end_of_turnLeft90:
  7557 ;; =============== function _turnLeft90 ends ============
  7558                           
  7559                           	signat	_turnLeft90,88
  7560                           	global	_turnRight90
  7561                           psect	text2010,local,class=CODE,delta=2
  7562                           global __ptext2010
  7563  1592                     __ptext2010:
  7564                           
  7565 ;; *************** function _turnRight90 *****************
  7566 ;; Defined at:
  7567 ;;		line 225 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;		None               void
  7574 ;; Registers used:
  7575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7581 ;;      Params:         0       0       0       0       0
  7582 ;;      Locals:         0       0       0       0       0
  7583 ;;      Temps:          0       3       0       0       0
  7584 ;;      Totals:         0       3       0       0       0
  7585 ;;Total ram usage:        3 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    4
  7588 ;; This function calls:
  7589 ;;		_drive
  7590 ;;		_waitFor
  7591 ;; This function is called by:
  7592 ;;		_driveForDistance
  7593 ;;		_goRight
  7594 ;;		_main
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           psect	text2010
  7598                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  7599                           	line	225
  7600                           	global	__size_of_turnRight90
  7601  003F                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  7602                           	
  7603  1592                     _turnRight90:	
  7604                           	opt	stack 1
  7605                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7606                           	line	226
  7607                           	
  7608  1592                     l12550:	
  7609                           ;drive.c: 226: drive(0, 50, 255, 255);
  7610  1592  3032               	movlw	(032h)
  7611  1593  1283               	bcf	status, 5	;RP0=0, select bank0
  7612  1594  1303               	bcf	status, 6	;RP1=0, select bank0
  7613  1595  00B3               	movwf	(??_turnRight90+0)+0
  7614  1596  0833               	movf	(??_turnRight90+0)+0,w
  7615  1597  00AC               	movwf	(?_drive)
  7616  1598  30FF               	movlw	(0FFh)
  7617  1599  00B4               	movwf	(??_turnRight90+1)+0
  7618  159A  0834               	movf	(??_turnRight90+1)+0,w
  7619  159B  00AD               	movwf	0+(?_drive)+01h
  7620  159C  30FF               	movlw	(0FFh)
  7621  159D  00B5               	movwf	(??_turnRight90+2)+0
  7622  159E  0835               	movf	(??_turnRight90+2)+0,w
  7623  159F  00AE               	movwf	0+(?_drive)+02h
  7624  15A0  3000               	movlw	(0)
  7625  15A1  160A  118A  24AB   	fcall	_drive
              160A  118A         
  7626                           	line	227
  7627                           ;drive.c: 227: waitFor(157,255,169);
  7628  15A6  30FF               	movlw	(0FFh)
  7629  15A7  1283               	bcf	status, 5	;RP0=0, select bank0
  7630  15A8  1303               	bcf	status, 6	;RP1=0, select bank0
  7631  15A9  00B3               	movwf	(??_turnRight90+0)+0
  7632  15AA  0833               	movf	(??_turnRight90+0)+0,w
  7633  15AB  00AC               	movwf	(?_waitFor)
  7634  15AC  30A9               	movlw	(0A9h)
  7635  15AD  00B4               	movwf	(??_turnRight90+1)+0
  7636  15AE  0834               	movf	(??_turnRight90+1)+0,w
  7637  15AF  00AD               	movwf	0+(?_waitFor)+01h
  7638  15B0  309D               	movlw	(09Dh)
  7639  15B1  160A  118A  236C   	fcall	_waitFor
              160A  118A         
  7640                           	line	228
  7641                           ;drive.c: 228: drive(0, 0, 0, 0);
  7642  15B6  1283               	bcf	status, 5	;RP0=0, select bank0
  7643  15B7  1303               	bcf	status, 6	;RP1=0, select bank0
  7644  15B8  01AC               	clrf	(?_drive)
  7645  15B9  01AD               	clrf	0+(?_drive)+01h
  7646  15BA  01AE               	clrf	0+(?_drive)+02h
  7647  15BB  3000               	movlw	(0)
  7648  15BC  160A  118A  24AB   	fcall	_drive
              160A  118A         
  7649                           	line	229
  7650                           	
  7651  15C1                     l12552:	
  7652                           ;drive.c: 229: _delay((unsigned long)((6000)*(20000000/4000.0)));
  7653                           	opt asmopt_off
  7654  15C1  3099               movlw  153
  7655  15C2  1283               	bcf	status, 5	;RP0=0, select bank0
  7656  15C3  1303               	bcf	status, 6	;RP1=0, select bank0
  7657  15C4  00B5               movwf	((??_turnRight90+0)+0+2),f
  7658  15C5  3032               movlw	50
  7659  15C6  00B4               movwf	((??_turnRight90+0)+0+1),f
  7660  15C7  3038               	movlw	56
  7661  15C8  00B3               movwf	((??_turnRight90+0)+0),f
  7662  15C9                     u7617:
  7663  15C9  0BB3               	decfsz	((??_turnRight90+0)+0),f
  7664  15CA  2DC9               	goto	u7617
  7665  15CB  0BB4               	decfsz	((??_turnRight90+0)+0+1),f
  7666  15CC  2DC9               	goto	u7617
  7667  15CD  0BB5               	decfsz	((??_turnRight90+0)+0+2),f
  7668  15CE  2DC9               	goto	u7617
  7669  15CF  2DD0               	nop2
  7670                           opt asmopt_on
  7671                           
  7672                           	line	230
  7673                           	
  7674  15D0                     l5873:	
  7675  15D0  0008               	return
  7676                           	opt stack 0
  7677                           GLOBAL	__end_of_turnRight90
  7678  15D1                     	__end_of_turnRight90:
  7679 ;; =============== function _turnRight90 ends ============
  7680                           
  7681                           	signat	_turnRight90,88
  7682                           	global	_initSongs
  7683                           psect	text2011,local,class=CODE,delta=2
  7684                           global __ptext2011
  7685  17B4                     __ptext2011:
  7686                           
  7687 ;; *************** function _initSongs *****************
  7688 ;; Defined at:
  7689 ;;		line 31 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\song
       s.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;		None
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;		None
  7694 ;; Return value:  Size  Location     Type
  7695 ;;		None               void
  7696 ;; Registers used:
  7697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7703 ;;      Params:         0       0       0       0       0
  7704 ;;      Locals:         0       0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0
  7706 ;;      Totals:         0       0       0       0       0
  7707 ;;Total ram usage:        0 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    4
  7710 ;; This function calls:
  7711 ;;		_ser_putArr
  7712 ;; This function is called by:
  7713 ;;		_init
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           psect	text2011
  7717                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
  7718                           	line	31
  7719                           	global	__size_of_initSongs
  7720  004C                     	__size_of_initSongs	equ	__end_of_initSongs-_initSongs
  7721                           	
  7722  17B4                     _initSongs:	
  7723                           	opt	stack 2
  7724                           ; Regs used in _initSongs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7725                           	line	32
  7726                           	
  7727  17B4                     l12548:	
  7728                           ;songs.c: 32: ser_putArr(finalCountdown, 27);
  7729  17B4  3090               	movlw	(_finalCountdown&0ffh)
  7730  17B5  1283               	bcf	status, 5	;RP0=0, select bank0
  7731  17B6  1303               	bcf	status, 6	;RP1=0, select bank0
  7732  17B7  00AC               	movwf	(?_ser_putArr)
  7733  17B8  3001               	movlw	(0x3/2)
  7734  17B9  00AD               	movwf	(?_ser_putArr+1)
  7735  17BA  301B               	movlw	low(01Bh)
  7736  17BB  00AE               	movwf	0+(?_ser_putArr)+02h
  7737  17BC  3000               	movlw	high(01Bh)
  7738  17BD  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  7739  17BE  160A  118A  251A   	fcall	_ser_putArr
              160A  118A         
  7740                           	line	33
  7741                           ;songs.c: 33: ser_putArr(superMarioBros, 25);
  7742  17C3  30AB               	movlw	(_superMarioBros&0ffh)
  7743  17C4  1283               	bcf	status, 5	;RP0=0, select bank0
  7744  17C5  1303               	bcf	status, 6	;RP1=0, select bank0
  7745  17C6  00AC               	movwf	(?_ser_putArr)
  7746  17C7  3001               	movlw	(0x3/2)
  7747  17C8  00AD               	movwf	(?_ser_putArr+1)
  7748  17C9  3019               	movlw	low(019h)
  7749  17CA  00AE               	movwf	0+(?_ser_putArr)+02h
  7750  17CB  3000               	movlw	high(019h)
  7751  17CC  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  7752  17CD  160A  118A  251A   	fcall	_ser_putArr
              160A  118A         
  7753                           	line	34
  7754                           ;songs.c: 34: ser_putArr(lookingForU2, 29);
  7755  17D2  3010               	movlw	(_lookingForU2&0ffh)
  7756  17D3  1283               	bcf	status, 5	;RP0=0, select bank0
  7757  17D4  1303               	bcf	status, 6	;RP1=0, select bank0
  7758  17D5  00AC               	movwf	(?_ser_putArr)
  7759  17D6  3001               	movlw	(0x2/2)
  7760  17D7  00AD               	movwf	(?_ser_putArr+1)
  7761  17D8  301D               	movlw	low(01Dh)
  7762  17D9  00AE               	movwf	0+(?_ser_putArr)+02h
  7763  17DA  3000               	movlw	high(01Dh)
  7764  17DB  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  7765  17DC  160A  118A  251A   	fcall	_ser_putArr
              160A  118A         
  7766                           	line	35
  7767                           ;songs.c: 35: ser_putArr(champions, 21);
  7768  17E1  30C4               	movlw	(_champions&0ffh)
  7769  17E2  1283               	bcf	status, 5	;RP0=0, select bank0
  7770  17E3  1303               	bcf	status, 6	;RP1=0, select bank0
  7771  17E4  00AC               	movwf	(?_ser_putArr)
  7772  17E5  3001               	movlw	(0x3/2)
  7773  17E6  00AD               	movwf	(?_ser_putArr+1)
  7774  17E7  3015               	movlw	low(015h)
  7775  17E8  00AE               	movwf	0+(?_ser_putArr)+02h
  7776  17E9  3000               	movlw	high(015h)
  7777  17EA  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  7778  17EB  160A  118A  251A   	fcall	_ser_putArr
              160A  118A         
  7779                           	line	36
  7780                           ;songs.c: 36: ser_putArr(beep, 5);
  7781  17F0  30E4               	movlw	(_beep&0ffh)
  7782  17F1  1283               	bcf	status, 5	;RP0=0, select bank0
  7783  17F2  1303               	bcf	status, 6	;RP1=0, select bank0
  7784  17F3  00AC               	movwf	(?_ser_putArr)
  7785  17F4  3000               	movlw	(0x1/2)
  7786  17F5  00AD               	movwf	(?_ser_putArr+1)
  7787  17F6  3005               	movlw	low(05h)
  7788  17F7  00AE               	movwf	0+(?_ser_putArr)+02h
  7789  17F8  3000               	movlw	high(05h)
  7790  17F9  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  7791  17FA  160A  118A  251A   	fcall	_ser_putArr
              160A  118A         
  7792                           	line	37
  7793                           	
  7794  17FF                     l4375:	
  7795  17FF  0008               	return
  7796                           	opt stack 0
  7797                           GLOBAL	__end_of_initSongs
  7798  1800                     	__end_of_initSongs:
  7799 ;; =============== function _initSongs ends ============
  7800                           
  7801                           	signat	_initSongs,88
  7802                           	global	_lcd_init
  7803                           psect	text2012,local,class=CODE,delta=2
  7804                           global __ptext2012
  7805  13BE                     __ptext2012:
  7806                           
  7807 ;; *************** function _lcd_init *****************
  7808 ;; Defined at:
  7809 ;;		line 78 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\lcd.
       c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;		None
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;		None
  7814 ;; Return value:  Size  Location     Type
  7815 ;;		None               void
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0, pclath, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7823 ;;      Params:         0       0       0       0       0
  7824 ;;      Locals:         0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0
  7826 ;;      Totals:         0       0       0       0       0
  7827 ;;Total ram usage:        0 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    3
  7830 ;; This function calls:
  7831 ;;		_lcd_write_control
  7832 ;; This function is called by:
  7833 ;;		_init
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           psect	text2012
  7837                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\lcd.c"
  7838                           	line	78
  7839                           	global	__size_of_lcd_init
  7840  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7841                           	
  7842  13BE                     _lcd_init:	
  7843                           	opt	stack 3
  7844                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7845                           	line	82
  7846                           	
  7847  13BE                     l12528:	
  7848                           ;lcd.c: 82: ADCON1 = 0b00000010;
  7849  13BE  3002               	movlw	(02h)
  7850  13BF  1683               	bsf	status, 5	;RP0=1, select bank1
  7851  13C0  1303               	bcf	status, 6	;RP1=0, select bank1
  7852  13C1  009F               	movwf	(159)^080h	;volatile
  7853                           	line	85
  7854                           	
  7855  13C2                     l12530:	
  7856                           ;lcd.c: 85: PORTD = 0;
  7857  13C2  1283               	bcf	status, 5	;RP0=0, select bank0
  7858  13C3  1303               	bcf	status, 6	;RP1=0, select bank0
  7859  13C4  0188               	clrf	(8)	;volatile
  7860                           	line	86
  7861                           	
  7862  13C5                     l12532:	
  7863                           ;lcd.c: 86: PORTE = 0;
  7864  13C5  0189               	clrf	(9)	;volatile
  7865                           	line	88
  7866                           	
  7867  13C6                     l12534:	
  7868                           ;lcd.c: 88: TRISD = 0b00000000;
  7869  13C6  1683               	bsf	status, 5	;RP0=1, select bank1
  7870  13C7  1303               	bcf	status, 6	;RP1=0, select bank1
  7871  13C8  0188               	clrf	(136)^080h	;volatile
  7872                           	line	89
  7873                           	
  7874  13C9                     l12536:	
  7875                           ;lcd.c: 89: TRISE = 0b00000000;
  7876  13C9  0189               	clrf	(137)^080h	;volatile
  7877                           	line	92
  7878                           	
  7879  13CA                     l12538:	
  7880                           ;lcd.c: 92: lcd_write_control(0b00000001);
  7881  13CA  3001               	movlw	(01h)
  7882  13CB  160A  118A  219F   	fcall	_lcd_write_control
              160A  118A         
  7883                           	line	93
  7884                           	
  7885  13D0                     l12540:	
  7886                           ;lcd.c: 93: lcd_write_control(0b00111000);
  7887  13D0  3038               	movlw	(038h)
  7888  13D1  160A  118A  219F   	fcall	_lcd_write_control
              160A  118A         
  7889                           	line	94
  7890                           	
  7891  13D6                     l12542:	
  7892                           ;lcd.c: 94: lcd_write_control(0b00001100);
  7893  13D6  300C               	movlw	(0Ch)
  7894  13D7  160A  118A  219F   	fcall	_lcd_write_control
              160A  118A         
  7895                           	line	95
  7896                           	
  7897  13DC                     l12544:	
  7898                           ;lcd.c: 95: lcd_write_control(0b00000110);
  7899  13DC  3006               	movlw	(06h)
  7900  13DD  160A  118A  219F   	fcall	_lcd_write_control
              160A  118A         
  7901                           	line	96
  7902                           	
  7903  13E2                     l12546:	
  7904                           ;lcd.c: 96: lcd_write_control(0b00000010);
  7905  13E2  3002               	movlw	(02h)
  7906  13E3  160A  118A  219F   	fcall	_lcd_write_control
              160A  118A         
  7907                           	line	98
  7908                           	
  7909  13E8                     l2153:	
  7910  13E8  0008               	return
  7911                           	opt stack 0
  7912                           GLOBAL	__end_of_lcd_init
  7913  13E9                     	__end_of_lcd_init:
  7914 ;; =============== function _lcd_init ends ============
  7915                           
  7916                           	signat	_lcd_init,88
  7917                           	global	_lcd_write_1_digit_bcd
  7918                           psect	text2013,local,class=CODE,delta=2
  7919                           global __ptext2013
  7920  114B                     __ptext2013:
  7921                           
  7922 ;; *************** function _lcd_write_1_digit_bcd *****************
  7923 ;; Defined at:
  7924 ;;		line 44 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\lcd.
       c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  data            1    wreg     unsigned char 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;  data            1   13[BANK0 ] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;		None               void
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0, pclath, cstack
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7938 ;;      Params:         0       0       0       0       0
  7939 ;;      Locals:         0       1       0       0       0
  7940 ;;      Temps:          0       0       0       0       0
  7941 ;;      Totals:         0       1       0       0       0
  7942 ;;Total ram usage:        1 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    3
  7945 ;; This function calls:
  7946 ;;		_lcd_write_data
  7947 ;; This function is called by:
  7948 ;;		_findFinalDestination
  7949 ;;		_lookForVictim
  7950 ;;		_updateLocation
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           psect	text2013
  7954                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\lcd.c"
  7955                           	line	44
  7956                           	global	__size_of_lcd_write_1_digit_bcd
  7957  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  7958                           	
  7959  114B                     _lcd_write_1_digit_bcd:	
  7960                           	opt	stack 3
  7961                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  7962                           ;lcd_write_1_digit_bcd@data stored from wreg
  7963  114B  1283               	bcf	status, 5	;RP0=0, select bank0
  7964  114C  1303               	bcf	status, 6	;RP1=0, select bank0
  7965  114D  00AD               	movwf	(lcd_write_1_digit_bcd@data)
  7966                           	line	45
  7967                           	
  7968  114E                     l12526:	
  7969                           ;lcd.c: 45: lcd_write_data(data + 48);
  7970  114E  082D               	movf	(lcd_write_1_digit_bcd@data),w
  7971  114F  3E30               	addlw	030h
  7972  1150  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  7973                           	line	46
  7974                           	
  7975  1155                     l2141:	
  7976  1155  0008               	return
  7977                           	opt stack 0
  7978                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  7979  1156                     	__end_of_lcd_write_1_digit_bcd:
  7980 ;; =============== function _lcd_write_1_digit_bcd ends ============
  7981                           
  7982                           	signat	_lcd_write_1_digit_bcd,4216
  7983                           	global	_lcd_set_cursor
  7984                           psect	text2014,local,class=CODE,delta=2
  7985                           global __ptext2014
  7986  1140                     __ptext2014:
  7987                           
  7988 ;; *************** function _lcd_set_cursor *****************
  7989 ;; Defined at:
  7990 ;;		line 32 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\lcd.
       c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  address         1    wreg     unsigned char 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  address         1   13[BANK0 ] unsigned char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;		None               void
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, status,0, pclath, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8004 ;;      Params:         0       0       0       0       0
  8005 ;;      Locals:         0       1       0       0       0
  8006 ;;      Temps:          0       0       0       0       0
  8007 ;;      Totals:         0       1       0       0       0
  8008 ;;Total ram usage:        1 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    3
  8011 ;; This function calls:
  8012 ;;		_lcd_write_control
  8013 ;; This function is called by:
  8014 ;;		_findFinalDestination
  8015 ;;		_goBackward
  8016 ;;		_goForward
  8017 ;;		_goLeft
  8018 ;;		_goReverse
  8019 ;;		_goRight
  8020 ;;		_checkForFinalDestination
  8021 ;;		_lookForVictim
  8022 ;;		_findWalls
  8023 ;;		_updateLocation
  8024 ;;		_main
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           psect	text2014
  8028                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\lcd.c"
  8029                           	line	32
  8030                           	global	__size_of_lcd_set_cursor
  8031  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  8032                           	
  8033  1140                     _lcd_set_cursor:	
  8034                           	opt	stack 3
  8035                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  8036                           ;lcd_set_cursor@address stored from wreg
  8037  1140  1283               	bcf	status, 5	;RP0=0, select bank0
  8038  1141  1303               	bcf	status, 6	;RP1=0, select bank0
  8039  1142  00AD               	movwf	(lcd_set_cursor@address)
  8040                           	line	33
  8041                           	
  8042  1143                     l12522:	
  8043                           ;lcd.c: 33: address |= 0b10000000;
  8044  1143  17AD               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  8045                           	line	34
  8046                           	
  8047  1144                     l12524:	
  8048                           ;lcd.c: 34: lcd_write_control(address);
  8049  1144  082D               	movf	(lcd_set_cursor@address),w
  8050  1145  160A  118A  219F   	fcall	_lcd_write_control
              160A  118A         
  8051                           	line	35
  8052                           	
  8053  114A                     l2132:	
  8054  114A  0008               	return
  8055                           	opt stack 0
  8056                           GLOBAL	__end_of_lcd_set_cursor
  8057  114B                     	__end_of_lcd_set_cursor:
  8058 ;; =============== function _lcd_set_cursor ends ============
  8059                           
  8060                           	signat	_lcd_set_cursor,4216
  8061                           	global	_lcd_write_string
  8062                           psect	text2015,local,class=CODE,delta=2
  8063                           global __ptext2015
  8064  12D2                     __ptext2015:
  8065                           
  8066 ;; *************** function _lcd_write_string *****************
  8067 ;; Defined at:
  8068 ;;		line 38 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\lcd.
       c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;  s               1    wreg     PTR const unsigned char 
  8071 ;;		 -> STR_4(17), STR_3(17), STR_2(14), STR_1(15), 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  8074 ;;		 -> STR_4(17), STR_3(17), STR_2(14), STR_1(15), 
  8075 ;; Return value:  Size  Location     Type
  8076 ;;		None               void
  8077 ;; Registers used:
  8078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8084 ;;      Params:         0       0       0       0       0
  8085 ;;      Locals:         0       1       0       0       0
  8086 ;;      Temps:          0       1       0       0       0
  8087 ;;      Totals:         0       2       0       0       0
  8088 ;;Total ram usage:        2 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    3
  8091 ;; This function calls:
  8092 ;;		_lcd_write_data
  8093 ;; This function is called by:
  8094 ;;		_main
  8095 ;;		_testEEPROM
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           psect	text2015
  8099                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\lcd.c"
  8100                           	line	38
  8101                           	global	__size_of_lcd_write_string
  8102  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  8103                           	
  8104  12D2                     _lcd_write_string:	
  8105                           	opt	stack 4
  8106                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8107                           ;lcd_write_string@s stored from wreg
  8108  12D2  1283               	bcf	status, 5	;RP0=0, select bank0
  8109  12D3  1303               	bcf	status, 6	;RP1=0, select bank0
  8110  12D4  00AE               	movwf	(lcd_write_string@s)
  8111                           	line	40
  8112                           	
  8113  12D5                     l12514:	
  8114                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  8115  12D5  2AE9               	goto	l12520
  8116                           	
  8117  12D6                     l2136:	
  8118                           	
  8119  12D6                     l12516:	
  8120  12D6  082E               	movf	(lcd_write_string@s),w
  8121  12D7  0084               	movwf	fsr0
  8122  12D8  160A  118A  2000   	fcall	stringdir
              160A  118A         
  8123  12DD  160A  118A  2179   	fcall	_lcd_write_data
              160A  118A         
  8124                           	
  8125  12E2                     l12518:	
  8126  12E2  3001               	movlw	(01h)
  8127  12E3  1283               	bcf	status, 5	;RP0=0, select bank0
  8128  12E4  1303               	bcf	status, 6	;RP1=0, select bank0
  8129  12E5  00AD               	movwf	(??_lcd_write_string+0)+0
  8130  12E6  082D               	movf	(??_lcd_write_string+0)+0,w
  8131  12E7  07AE               	addwf	(lcd_write_string@s),f
  8132  12E8  2AE9               	goto	l12520
  8133                           	
  8134  12E9                     l2135:	
  8135                           	
  8136  12E9                     l12520:	
  8137  12E9  082E               	movf	(lcd_write_string@s),w
  8138  12EA  0084               	movwf	fsr0
  8139  12EB  160A  118A  2000   	fcall	stringdir
              160A  118A         
  8140  12F0  3800               	iorlw	0
  8141  12F1  1D03               	skipz
  8142  12F2  2AF4               	goto	u6791
  8143  12F3  2AF5               	goto	u6790
  8144  12F4                     u6791:
  8145  12F4  2AD6               	goto	l12516
  8146  12F5                     u6790:
  8147  12F5  2AF6               	goto	l2138
  8148                           	
  8149  12F6                     l2137:	
  8150                           	line	41
  8151                           	
  8152  12F6                     l2138:	
  8153  12F6  0008               	return
  8154                           	opt stack 0
  8155                           GLOBAL	__end_of_lcd_write_string
  8156  12F7                     	__end_of_lcd_write_string:
  8157 ;; =============== function _lcd_write_string ends ============
  8158                           
  8159                           	signat	_lcd_write_string,4216
  8160                           	global	_adc_read_channel
  8161                           psect	text2016,local,class=CODE,delta=2
  8162                           global __ptext2016
  8163  15D1                     __ptext2016:
  8164                           
  8165 ;; *************** function _adc_read_channel *****************
  8166 ;; Defined at:
  8167 ;;		line 7 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\adc.c
       "
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;  channel         1    wreg     unsigned char 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  channel         1   40[BANK0 ] unsigned char 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  2   37[BANK0 ] int 
  8174 ;; Registers used:
  8175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8181 ;;      Params:         0       2       0       0       0
  8182 ;;      Locals:         0       1       0       0       0
  8183 ;;      Temps:          0       1       0       0       0
  8184 ;;      Totals:         0       4       0       0       0
  8185 ;;Total ram usage:        4 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    4
  8188 ;; This function calls:
  8189 ;;		_adc_read
  8190 ;; This function is called by:
  8191 ;;		_readIR
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           psect	text2016
  8195                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\adc.c"
  8196                           	line	7
  8197                           	global	__size_of_adc_read_channel
  8198  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8199                           	
  8200  15D1                     _adc_read_channel:	
  8201                           	opt	stack 1
  8202                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8203                           ;adc_read_channel@channel stored from wreg
  8204  15D1  1283               	bcf	status, 5	;RP0=0, select bank0
  8205  15D2  1303               	bcf	status, 6	;RP1=0, select bank0
  8206  15D3  00C8               	movwf	(adc_read_channel@channel)
  8207                           	line	8
  8208                           	
  8209  15D4                     l11178:	
  8210                           ;adc.c: 8: switch(channel)
  8211  15D4  2DEE               	goto	l11186
  8212                           	line	10
  8213                           ;adc.c: 9: {
  8214                           ;adc.c: 10: case 0:
  8215                           	
  8216  15D5                     l690:	
  8217                           	line	11
  8218                           ;adc.c: 11: CHS0 = 0;
  8219  15D5  119F               	bcf	(251/8),(251)&7
  8220                           	line	12
  8221                           ;adc.c: 12: CHS1 = 0;
  8222  15D6  121F               	bcf	(252/8),(252)&7
  8223                           	line	13
  8224                           ;adc.c: 13: CHS2 = 0;
  8225  15D7  129F               	bcf	(253/8),(253)&7
  8226                           	line	14
  8227                           ;adc.c: 14: break;
  8228  15D8  2DFF               	goto	l11188
  8229                           	line	15
  8230                           ;adc.c: 15: case 1:
  8231                           	
  8232  15D9                     l692:	
  8233                           	line	16
  8234                           ;adc.c: 16: CHS0 = 1;
  8235  15D9  159F               	bsf	(251/8),(251)&7
  8236                           	line	17
  8237                           ;adc.c: 17: CHS1 = 0;
  8238  15DA  121F               	bcf	(252/8),(252)&7
  8239                           	line	18
  8240                           ;adc.c: 18: CHS2 = 0;
  8241  15DB  129F               	bcf	(253/8),(253)&7
  8242                           	line	19
  8243                           ;adc.c: 19: break;
  8244  15DC  2DFF               	goto	l11188
  8245                           	line	20
  8246                           ;adc.c: 20: case 2:
  8247                           	
  8248  15DD                     l693:	
  8249                           	line	21
  8250                           ;adc.c: 21: CHS0 = 0;
  8251  15DD  119F               	bcf	(251/8),(251)&7
  8252                           	line	22
  8253                           ;adc.c: 22: CHS1 = 1;
  8254  15DE  161F               	bsf	(252/8),(252)&7
  8255                           	line	23
  8256                           ;adc.c: 23: CHS2 = 0;
  8257  15DF  129F               	bcf	(253/8),(253)&7
  8258                           	line	24
  8259                           ;adc.c: 24: break;
  8260  15E0  2DFF               	goto	l11188
  8261                           	line	25
  8262                           ;adc.c: 25: case 3:
  8263                           	
  8264  15E1                     l694:	
  8265                           	line	26
  8266                           ;adc.c: 26: CHS0 = 1;
  8267  15E1  159F               	bsf	(251/8),(251)&7
  8268                           	line	27
  8269                           ;adc.c: 27: CHS1 = 1;
  8270  15E2  161F               	bsf	(252/8),(252)&7
  8271                           	line	28
  8272                           ;adc.c: 28: CHS2 = 0;
  8273  15E3  129F               	bcf	(253/8),(253)&7
  8274                           	line	29
  8275                           ;adc.c: 29: break;
  8276  15E4  2DFF               	goto	l11188
  8277                           	line	30
  8278                           ;adc.c: 30: case 4:
  8279                           	
  8280  15E5                     l695:	
  8281                           	line	31
  8282                           ;adc.c: 31: CHS0 = 0;
  8283  15E5  119F               	bcf	(251/8),(251)&7
  8284                           	line	32
  8285                           ;adc.c: 32: CHS1 = 0;
  8286  15E6  121F               	bcf	(252/8),(252)&7
  8287                           	line	33
  8288                           ;adc.c: 33: CHS2 = 1;
  8289  15E7  169F               	bsf	(253/8),(253)&7
  8290                           	line	34
  8291                           ;adc.c: 34: break;
  8292  15E8  2DFF               	goto	l11188
  8293                           	line	37
  8294                           ;adc.c: 37: default:
  8295                           	
  8296  15E9                     l696:	
  8297                           	line	38
  8298                           	
  8299  15E9                     l11180:	
  8300                           ;adc.c: 38: return 0;
  8301  15E9  01C5               	clrf	(?_adc_read_channel)
  8302  15EA  01C6               	clrf	(?_adc_read_channel+1)
  8303  15EB  2E11               	goto	l697
  8304                           	
  8305  15EC                     l11182:	
  8306  15EC  2E11               	goto	l697
  8307                           	line	39
  8308                           	
  8309  15ED                     l11184:	
  8310                           ;adc.c: 39: }
  8311  15ED  2DFF               	goto	l11188
  8312                           	line	8
  8313                           	
  8314  15EE                     l689:	
  8315                           	
  8316  15EE                     l11186:	
  8317  15EE  0848               	movf	(adc_read_channel@channel),w
  8318                           	; Switch size 1, requested type "space"
  8319                           ; Number of cases is 5, Range of values is 0 to 4
  8320                           ; switch strategies available:
  8321                           ; Name         Instructions Cycles
  8322                           ; simple_byte           16     9 (average)
  8323                           ; direct_byte           23     8 (fixed)
  8324                           ; jumptable            260     6 (fixed)
  8325                           ; rangetable             9     6 (fixed)
  8326                           ; spacedrange           16     9 (fixed)
  8327                           ; locatedrange           5     3 (fixed)
  8328                           ;	Chosen strategy is simple_byte
  8329                           
  8330                           	opt asmopt_off
  8331  15EF  3A00               	xorlw	0^0	; case 0
  8332  15F0  1903               	skipnz
  8333  15F1  2DD5               	goto	l690
  8334  15F2  3A01               	xorlw	1^0	; case 1
  8335  15F3  1903               	skipnz
  8336  15F4  2DD9               	goto	l692
  8337  15F5  3A03               	xorlw	2^1	; case 2
  8338  15F6  1903               	skipnz
  8339  15F7  2DDD               	goto	l693
  8340  15F8  3A01               	xorlw	3^2	; case 3
  8341  15F9  1903               	skipnz
  8342  15FA  2DE1               	goto	l694
  8343  15FB  3A07               	xorlw	4^3	; case 4
  8344  15FC  1903               	skipnz
  8345  15FD  2DE5               	goto	l695
  8346  15FE  2DE9               	goto	l11180
  8347                           	opt asmopt_on
  8348                           
  8349                           	line	39
  8350                           	
  8351  15FF                     l691:	
  8352                           	line	41
  8353                           	
  8354  15FF                     l11188:	
  8355                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8356                           	opt asmopt_off
  8357  15FF  3053               movlw	83
  8358  1600  00C7               movwf	(??_adc_read_channel+0)+0,f
  8359  1601                     u7627:
  8360  1601  0BC7               decfsz	(??_adc_read_channel+0)+0,f
  8361  1602  2E01               	goto	u7627
  8362                           opt asmopt_on
  8363                           
  8364                           	line	43
  8365                           	
  8366  1603                     l11190:	
  8367                           ;adc.c: 43: return adc_read();
  8368  1603  160A  118A  2553   	fcall	_adc_read
              160A  118A         
  8369  1608  1283               	bcf	status, 5	;RP0=0, select bank0
  8370  1609  1303               	bcf	status, 6	;RP1=0, select bank0
  8371  160A  083A               	movf	(1+(?_adc_read)),w
  8372  160B  01C6               	clrf	(?_adc_read_channel+1)
  8373  160C  07C6               	addwf	(?_adc_read_channel+1)
  8374  160D  0839               	movf	(0+(?_adc_read)),w
  8375  160E  01C5               	clrf	(?_adc_read_channel)
  8376  160F  07C5               	addwf	(?_adc_read_channel)
  8377                           
  8378  1610  2E11               	goto	l697
  8379                           	
  8380  1611                     l11192:	
  8381                           	line	45
  8382                           	
  8383  1611                     l697:	
  8384  1611  0008               	return
  8385                           	opt stack 0
  8386                           GLOBAL	__end_of_adc_read_channel
  8387  1612                     	__end_of_adc_read_channel:
  8388 ;; =============== function _adc_read_channel ends ============
  8389                           
  8390                           	signat	_adc_read_channel,4218
  8391                           	global	___lbtoft
  8392                           psect	text2017,local,class=CODE,delta=2
  8393                           global __ptext2017
  8394  128F                     __ptext2017:
  8395                           
  8396 ;; *************** function ___lbtoft *****************
  8397 ;; Defined at:
  8398 ;;		line 28 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\lbtoft.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  c               1    wreg     unsigned char 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  c               1   39[BANK0 ] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  3   32[BANK0 ] float 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0, pclath, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8412 ;;      Params:         0       3       0       0       0
  8413 ;;      Locals:         0       1       0       0       0
  8414 ;;      Temps:          0       4       0       0       0
  8415 ;;      Totals:         0       8       0       0       0
  8416 ;;Total ram usage:        8 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    3
  8419 ;; This function calls:
  8420 ;;		___ftpack
  8421 ;; This function is called by:
  8422 ;;		_goParallel
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           psect	text2017
  8426                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\lbtoft.c"
  8427                           	line	28
  8428                           	global	__size_of___lbtoft
  8429  0021                     	__size_of___lbtoft	equ	__end_of___lbtoft-___lbtoft
  8430                           	
  8431  128F                     ___lbtoft:	
  8432                           	opt	stack 3
  8433                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8434                           ;___lbtoft@c stored from wreg
  8435  128F  1283               	bcf	status, 5	;RP0=0, select bank0
  8436  1290  1303               	bcf	status, 6	;RP1=0, select bank0
  8437  1291  00C7               	movwf	(___lbtoft@c)
  8438                           	line	29
  8439                           	
  8440  1292                     l12510:	
  8441  1292  0847               	movf	(___lbtoft@c),w
  8442  1293  00C3               	movwf	((??___lbtoft+0)+0)
  8443  1294  01C4               	clrf	((??___lbtoft+0)+0+1)
  8444  1295  01C5               	clrf	((??___lbtoft+0)+0+2)
  8445  1296  0843               	movf	0+(??___lbtoft+0)+0,w
  8446  1297  00AA               	movwf	(?___ftpack)
  8447  1298  0844               	movf	1+(??___lbtoft+0)+0,w
  8448  1299  00AB               	movwf	(?___ftpack+1)
  8449  129A  0845               	movf	2+(??___lbtoft+0)+0,w
  8450  129B  00AC               	movwf	(?___ftpack+2)
  8451  129C  308E               	movlw	(08Eh)
  8452  129D  00C6               	movwf	(??___lbtoft+3)+0
  8453  129E  0846               	movf	(??___lbtoft+3)+0,w
  8454  129F  00AD               	movwf	0+(?___ftpack)+03h
  8455  12A0  01AE               	clrf	0+(?___ftpack)+04h
  8456  12A1  120A  158A  21AF   	fcall	___ftpack
              160A  118A         
  8457  12A6  1283               	bcf	status, 5	;RP0=0, select bank0
  8458  12A7  1303               	bcf	status, 6	;RP1=0, select bank0
  8459  12A8  082A               	movf	(0+(?___ftpack)),w
  8460  12A9  00C0               	movwf	(?___lbtoft)
  8461  12AA  082B               	movf	(1+(?___ftpack)),w
  8462  12AB  00C1               	movwf	(?___lbtoft+1)
  8463  12AC  082C               	movf	(2+(?___ftpack)),w
  8464  12AD  00C2               	movwf	(?___lbtoft+2)
  8465  12AE  2AAF               	goto	l7635
  8466                           	
  8467  12AF                     l12512:	
  8468                           	line	30
  8469                           	
  8470  12AF                     l7635:	
  8471  12AF  0008               	return
  8472                           	opt stack 0
  8473                           GLOBAL	__end_of___lbtoft
  8474  12B0                     	__end_of___lbtoft:
  8475 ;; =============== function ___lbtoft ends ============
  8476                           
  8477                           	signat	___lbtoft,4219
  8478                           	global	___ftmul
  8479                           psect	text2018,local,class=CODE,delta=2
  8480                           global __ptext2018
  8481  070E                     __ptext2018:
  8482                           
  8483 ;; *************** function ___ftmul *****************
  8484 ;; Defined at:
  8485 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  f1              3   40[BANK0 ] float 
  8488 ;;  f2              3   43[BANK0 ] float 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  f3_as_produc    3   51[BANK0 ] unsigned um
  8491 ;;  sign            1   55[BANK0 ] unsigned char 
  8492 ;;  cntr            1   54[BANK0 ] unsigned char 
  8493 ;;  exp             1   50[BANK0 ] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  3   40[BANK0 ] float 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0, pclath, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8503 ;;      Params:         0       6       0       0       0
  8504 ;;      Locals:         0       6       0       0       0
  8505 ;;      Temps:          0       4       0       0       0
  8506 ;;      Totals:         0      16       0       0       0
  8507 ;;Total ram usage:       16 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    3
  8510 ;; This function calls:
  8511 ;;		___ftpack
  8512 ;; This function is called by:
  8513 ;;		_goParallel
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           psect	text2018
  8517                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  8518                           	line	52
  8519                           	global	__size_of___ftmul
  8520  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  8521                           	
  8522  070E                     ___ftmul:	
  8523                           	opt	stack 3
  8524                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8525                           	line	56
  8526                           	
  8527  070E                     l12460:	
  8528  070E  1283               	bcf	status, 5	;RP0=0, select bank0
  8529  070F  1303               	bcf	status, 6	;RP1=0, select bank0
  8530  0710  0848               	movf	(___ftmul@f1),w
  8531  0711  00CE               	movwf	((??___ftmul+0)+0)
  8532  0712  0849               	movf	(___ftmul@f1+1),w
  8533  0713  00CF               	movwf	((??___ftmul+0)+0+1)
  8534  0714  084A               	movf	(___ftmul@f1+2),w
  8535  0715  00D0               	movwf	((??___ftmul+0)+0+2)
  8536  0716  1003               	clrc
  8537  0717  0D4F               	rlf	(??___ftmul+0)+1,w
  8538  0718  0D50               	rlf	(??___ftmul+0)+2,w
  8539  0719  00D1               	movwf	(??___ftmul+3)+0
  8540  071A  0851               	movf	(??___ftmul+3)+0,w
  8541  071B  00D2               	movwf	(___ftmul@exp)
  8542  071C  08D2               	movf	((___ftmul@exp)),f
  8543  071D  1D03               	skipz
  8544  071E  2F20               	goto	u6651
  8545  071F  2F21               	goto	u6650
  8546  0720                     u6651:
  8547  0720  2F29               	goto	l12466
  8548  0721                     u6650:
  8549                           	line	57
  8550                           	
  8551  0721                     l12462:	
  8552  0721  3000               	movlw	0x0
  8553  0722  00C8               	movwf	(?___ftmul)
  8554  0723  3000               	movlw	0x0
  8555  0724  00C9               	movwf	(?___ftmul+1)
  8556  0725  3000               	movlw	0x0
  8557  0726  00CA               	movwf	(?___ftmul+2)
  8558  0727  2FFB               	goto	l7609
  8559                           	
  8560  0728                     l12464:	
  8561  0728  2FFB               	goto	l7609
  8562                           	
  8563  0729                     l7608:	
  8564                           	line	58
  8565                           	
  8566  0729                     l12466:	
  8567  0729  084B               	movf	(___ftmul@f2),w
  8568  072A  00CE               	movwf	((??___ftmul+0)+0)
  8569  072B  084C               	movf	(___ftmul@f2+1),w
  8570  072C  00CF               	movwf	((??___ftmul+0)+0+1)
  8571  072D  084D               	movf	(___ftmul@f2+2),w
  8572  072E  00D0               	movwf	((??___ftmul+0)+0+2)
  8573  072F  1003               	clrc
  8574  0730  0D4F               	rlf	(??___ftmul+0)+1,w
  8575  0731  0D50               	rlf	(??___ftmul+0)+2,w
  8576  0732  00D1               	movwf	(??___ftmul+3)+0
  8577  0733  0851               	movf	(??___ftmul+3)+0,w
  8578  0734  00D7               	movwf	(___ftmul@sign)
  8579  0735  08D7               	movf	((___ftmul@sign)),f
  8580  0736  1D03               	skipz
  8581  0737  2F39               	goto	u6661
  8582  0738  2F3A               	goto	u6660
  8583  0739                     u6661:
  8584  0739  2F42               	goto	l12472
  8585  073A                     u6660:
  8586                           	line	59
  8587                           	
  8588  073A                     l12468:	
  8589  073A  3000               	movlw	0x0
  8590  073B  00C8               	movwf	(?___ftmul)
  8591  073C  3000               	movlw	0x0
  8592  073D  00C9               	movwf	(?___ftmul+1)
  8593  073E  3000               	movlw	0x0
  8594  073F  00CA               	movwf	(?___ftmul+2)
  8595  0740  2FFB               	goto	l7609
  8596                           	
  8597  0741                     l12470:	
  8598  0741  2FFB               	goto	l7609
  8599                           	
  8600  0742                     l7610:	
  8601                           	line	60
  8602                           	
  8603  0742                     l12472:	
  8604  0742  0857               	movf	(___ftmul@sign),w
  8605  0743  3E7B               	addlw	07Bh
  8606  0744  00CE               	movwf	(??___ftmul+0)+0
  8607  0745  084E               	movf	(??___ftmul+0)+0,w
  8608  0746  07D2               	addwf	(___ftmul@exp),f
  8609                           	line	61
  8610  0747  0848               	movf	(___ftmul@f1),w
  8611  0748  00CE               	movwf	((??___ftmul+0)+0)
  8612  0749  0849               	movf	(___ftmul@f1+1),w
  8613  074A  00CF               	movwf	((??___ftmul+0)+0+1)
  8614  074B  084A               	movf	(___ftmul@f1+2),w
  8615  074C  00D0               	movwf	((??___ftmul+0)+0+2)
  8616  074D  3010               	movlw	010h
  8617  074E                     u6675:
  8618  074E  1003               	clrc
  8619  074F  0CD0               	rrf	(??___ftmul+0)+2,f
  8620  0750  0CCF               	rrf	(??___ftmul+0)+1,f
  8621  0751  0CCE               	rrf	(??___ftmul+0)+0,f
  8622  0752                     u6670:
  8623  0752  3EFF               	addlw	-1
  8624  0753  1D03               	skipz
  8625  0754  2F4E               	goto	u6675
  8626  0755  084E               	movf	0+(??___ftmul+0)+0,w
  8627  0756  00D1               	movwf	(??___ftmul+3)+0
  8628  0757  0851               	movf	(??___ftmul+3)+0,w
  8629  0758  00D7               	movwf	(___ftmul@sign)
  8630                           	line	62
  8631  0759  084B               	movf	(___ftmul@f2),w
  8632  075A  00CE               	movwf	((??___ftmul+0)+0)
  8633  075B  084C               	movf	(___ftmul@f2+1),w
  8634  075C  00CF               	movwf	((??___ftmul+0)+0+1)
  8635  075D  084D               	movf	(___ftmul@f2+2),w
  8636  075E  00D0               	movwf	((??___ftmul+0)+0+2)
  8637  075F  3010               	movlw	010h
  8638  0760                     u6685:
  8639  0760  1003               	clrc
  8640  0761  0CD0               	rrf	(??___ftmul+0)+2,f
  8641  0762  0CCF               	rrf	(??___ftmul+0)+1,f
  8642  0763  0CCE               	rrf	(??___ftmul+0)+0,f
  8643  0764                     u6680:
  8644  0764  3EFF               	addlw	-1
  8645  0765  1D03               	skipz
  8646  0766  2F60               	goto	u6685
  8647  0767  084E               	movf	0+(??___ftmul+0)+0,w
  8648  0768  00D1               	movwf	(??___ftmul+3)+0
  8649  0769  0851               	movf	(??___ftmul+3)+0,w
  8650  076A  06D7               	xorwf	(___ftmul@sign),f
  8651                           	line	63
  8652  076B  3080               	movlw	(080h)
  8653  076C  00CE               	movwf	(??___ftmul+0)+0
  8654  076D  084E               	movf	(??___ftmul+0)+0,w
  8655  076E  05D7               	andwf	(___ftmul@sign),f
  8656                           	line	64
  8657                           	
  8658  076F                     l12474:	
  8659  076F  17C9               	bsf	(___ftmul@f1)+(15/8),(15)&7
  8660                           	line	66
  8661                           	
  8662  0770                     l12476:	
  8663  0770  17CC               	bsf	(___ftmul@f2)+(15/8),(15)&7
  8664                           	line	67
  8665                           	
  8666  0771                     l12478:	
  8667  0771  30FF               	movlw	0FFh
  8668  0772  05CB               	andwf	(___ftmul@f2),f
  8669  0773  30FF               	movlw	0FFh
  8670  0774  05CC               	andwf	(___ftmul@f2+1),f
  8671  0775  3000               	movlw	0
  8672  0776  05CD               	andwf	(___ftmul@f2+2),f
  8673                           	line	68
  8674                           	
  8675  0777                     l12480:	
  8676  0777  3000               	movlw	0
  8677  0778  00D3               	movwf	(___ftmul@f3_as_product)
  8678  0779  3000               	movlw	0
  8679  077A  00D4               	movwf	(___ftmul@f3_as_product+1)
  8680  077B  3000               	movlw	0
  8681  077C  00D5               	movwf	(___ftmul@f3_as_product+2)
  8682                           	line	69
  8683                           	
  8684  077D                     l12482:	
  8685  077D  3007               	movlw	(07h)
  8686  077E  00CE               	movwf	(??___ftmul+0)+0
  8687  077F  084E               	movf	(??___ftmul+0)+0,w
  8688  0780  00D6               	movwf	(___ftmul@cntr)
  8689  0781  2F82               	goto	l12484
  8690                           	line	70
  8691                           	
  8692  0782                     l7611:	
  8693                           	line	71
  8694                           	
  8695  0782                     l12484:	
  8696  0782  1C48               	btfss	(___ftmul@f1),(0)&7
  8697  0783  2F85               	goto	u6691
  8698  0784  2F86               	goto	u6690
  8699  0785                     u6691:
  8700  0785  2F97               	goto	l12488
  8701  0786                     u6690:
  8702                           	line	72
  8703                           	
  8704  0786                     l12486:	
  8705  0786  084B               	movf	(___ftmul@f2),w
  8706  0787  07D3               	addwf	(___ftmul@f3_as_product),f
  8707  0788  084C               	movf	(___ftmul@f2+1),w
  8708  0789  1103               	clrz
  8709  078A  1803               	skipnc
  8710  078B  0A4C               	incf	(___ftmul@f2+1),w
  8711  078C  1903               	skipnz
  8712  078D  2F8F               	goto	u6701
  8713  078E  07D4               	addwf	(___ftmul@f3_as_product+1),f
  8714  078F                     u6701:
  8715  078F  084D               	movf	(___ftmul@f2+2),w
  8716  0790  1103               	clrz
  8717  0791  1803               	skipnc
  8718  0792  0A4D               	incf	(___ftmul@f2+2),w
  8719  0793  1903               	skipnz
  8720  0794  2F96               	goto	u6702
  8721  0795  07D5               	addwf	(___ftmul@f3_as_product+2),f
  8722  0796                     u6702:
  8723                           
  8724  0796  2F97               	goto	l12488
  8725                           	
  8726  0797                     l7612:	
  8727                           	line	73
  8728                           	
  8729  0797                     l12488:	
  8730  0797  3001               	movlw	01h
  8731  0798                     u6715:
  8732  0798  1003               	clrc
  8733  0799  0CCA               	rrf	(___ftmul@f1+2),f
  8734  079A  0CC9               	rrf	(___ftmul@f1+1),f
  8735  079B  0CC8               	rrf	(___ftmul@f1),f
  8736  079C  3EFF               	addlw	-1
  8737  079D  1D03               	skipz
  8738  079E  2F98               	goto	u6715
  8739                           
  8740                           	line	74
  8741                           	
  8742  079F                     l12490:	
  8743  079F  3001               	movlw	01h
  8744  07A0                     u6725:
  8745  07A0  1003               	clrc
  8746  07A1  0DCB               	rlf	(___ftmul@f2),f
  8747  07A2  0DCC               	rlf	(___ftmul@f2+1),f
  8748  07A3  0DCD               	rlf	(___ftmul@f2+2),f
  8749  07A4  3EFF               	addlw	-1
  8750  07A5  1D03               	skipz
  8751  07A6  2FA0               	goto	u6725
  8752                           	line	75
  8753                           	
  8754  07A7                     l12492:	
  8755  07A7  3001               	movlw	low(01h)
  8756  07A8  02D6               	subwf	(___ftmul@cntr),f
  8757  07A9  1D03               	btfss	status,2
  8758  07AA  2FAC               	goto	u6731
  8759  07AB  2FAD               	goto	u6730
  8760  07AC                     u6731:
  8761  07AC  2F82               	goto	l12484
  8762  07AD                     u6730:
  8763  07AD  2FAE               	goto	l12494
  8764                           	
  8765  07AE                     l7613:	
  8766                           	line	76
  8767                           	
  8768  07AE                     l12494:	
  8769  07AE  3009               	movlw	(09h)
  8770  07AF  00CE               	movwf	(??___ftmul+0)+0
  8771  07B0  084E               	movf	(??___ftmul+0)+0,w
  8772  07B1  00D6               	movwf	(___ftmul@cntr)
  8773  07B2  2FB3               	goto	l12496
  8774                           	line	77
  8775                           	
  8776  07B3                     l7614:	
  8777                           	line	78
  8778                           	
  8779  07B3                     l12496:	
  8780  07B3  1C48               	btfss	(___ftmul@f1),(0)&7
  8781  07B4  2FB6               	goto	u6741
  8782  07B5  2FB7               	goto	u6740
  8783  07B6                     u6741:
  8784  07B6  2FC8               	goto	l12500
  8785  07B7                     u6740:
  8786                           	line	79
  8787                           	
  8788  07B7                     l12498:	
  8789  07B7  084B               	movf	(___ftmul@f2),w
  8790  07B8  07D3               	addwf	(___ftmul@f3_as_product),f
  8791  07B9  084C               	movf	(___ftmul@f2+1),w
  8792  07BA  1103               	clrz
  8793  07BB  1803               	skipnc
  8794  07BC  0A4C               	incf	(___ftmul@f2+1),w
  8795  07BD  1903               	skipnz
  8796  07BE  2FC0               	goto	u6751
  8797  07BF  07D4               	addwf	(___ftmul@f3_as_product+1),f
  8798  07C0                     u6751:
  8799  07C0  084D               	movf	(___ftmul@f2+2),w
  8800  07C1  1103               	clrz
  8801  07C2  1803               	skipnc
  8802  07C3  0A4D               	incf	(___ftmul@f2+2),w
  8803  07C4  1903               	skipnz
  8804  07C5  2FC7               	goto	u6752
  8805  07C6  07D5               	addwf	(___ftmul@f3_as_product+2),f
  8806  07C7                     u6752:
  8807                           
  8808  07C7  2FC8               	goto	l12500
  8809                           	
  8810  07C8                     l7615:	
  8811                           	line	80
  8812                           	
  8813  07C8                     l12500:	
  8814  07C8  3001               	movlw	01h
  8815  07C9                     u6765:
  8816  07C9  1003               	clrc
  8817  07CA  0CCA               	rrf	(___ftmul@f1+2),f
  8818  07CB  0CC9               	rrf	(___ftmul@f1+1),f
  8819  07CC  0CC8               	rrf	(___ftmul@f1),f
  8820  07CD  3EFF               	addlw	-1
  8821  07CE  1D03               	skipz
  8822  07CF  2FC9               	goto	u6765
  8823                           
  8824                           	line	81
  8825                           	
  8826  07D0                     l12502:	
  8827  07D0  3001               	movlw	01h
  8828  07D1                     u6775:
  8829  07D1  1003               	clrc
  8830  07D2  0CD5               	rrf	(___ftmul@f3_as_product+2),f
  8831  07D3  0CD4               	rrf	(___ftmul@f3_as_product+1),f
  8832  07D4  0CD3               	rrf	(___ftmul@f3_as_product),f
  8833  07D5  3EFF               	addlw	-1
  8834  07D6  1D03               	skipz
  8835  07D7  2FD1               	goto	u6775
  8836                           
  8837                           	line	82
  8838                           	
  8839  07D8                     l12504:	
  8840  07D8  3001               	movlw	low(01h)
  8841  07D9  02D6               	subwf	(___ftmul@cntr),f
  8842  07DA  1D03               	btfss	status,2
  8843  07DB  2FDD               	goto	u6781
  8844  07DC  2FDE               	goto	u6780
  8845  07DD                     u6781:
  8846  07DD  2FB3               	goto	l12496
  8847  07DE                     u6780:
  8848  07DE  2FDF               	goto	l12506
  8849                           	
  8850  07DF                     l7616:	
  8851                           	line	83
  8852                           	
  8853  07DF                     l12506:	
  8854  07DF  0853               	movf	(___ftmul@f3_as_product),w
  8855  07E0  00AA               	movwf	(?___ftpack)
  8856  07E1  0854               	movf	(___ftmul@f3_as_product+1),w
  8857  07E2  00AB               	movwf	(?___ftpack+1)
  8858  07E3  0855               	movf	(___ftmul@f3_as_product+2),w
  8859  07E4  00AC               	movwf	(?___ftpack+2)
  8860  07E5  0852               	movf	(___ftmul@exp),w
  8861  07E6  00CE               	movwf	(??___ftmul+0)+0
  8862  07E7  084E               	movf	(??___ftmul+0)+0,w
  8863  07E8  00AD               	movwf	0+(?___ftpack)+03h
  8864  07E9  0857               	movf	(___ftmul@sign),w
  8865  07EA  00CF               	movwf	(??___ftmul+1)+0
  8866  07EB  084F               	movf	(??___ftmul+1)+0,w
  8867  07EC  00AE               	movwf	0+(?___ftpack)+04h
  8868  07ED  120A  158A  21AF   	fcall	___ftpack
              120A  118A         
  8869  07F2  1283               	bcf	status, 5	;RP0=0, select bank0
  8870  07F3  1303               	bcf	status, 6	;RP1=0, select bank0
  8871  07F4  082A               	movf	(0+(?___ftpack)),w
  8872  07F5  00C8               	movwf	(?___ftmul)
  8873  07F6  082B               	movf	(1+(?___ftpack)),w
  8874  07F7  00C9               	movwf	(?___ftmul+1)
  8875  07F8  082C               	movf	(2+(?___ftpack)),w
  8876  07F9  00CA               	movwf	(?___ftmul+2)
  8877  07FA  2FFB               	goto	l7609
  8878                           	
  8879  07FB                     l12508:	
  8880                           	line	84
  8881                           	
  8882  07FB                     l7609:	
  8883  07FB  0008               	return
  8884                           	opt stack 0
  8885                           GLOBAL	__end_of___ftmul
  8886  07FC                     	__end_of___ftmul:
  8887 ;; =============== function ___ftmul ends ============
  8888                           
  8889                           	signat	___ftmul,8315
  8890                           	global	___ftadd
  8891                           psect	text2019,local,class=CODE,delta=2
  8892                           global __ptext2019
  8893  0581                     __ptext2019:
  8894                           
  8895 ;; *************** function ___ftadd *****************
  8896 ;; Defined at:
  8897 ;;		line 87 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  f1              3    0[BANK1 ] float 
  8900 ;;  f2              3    3[BANK1 ] float 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  exp1            1    8[BANK1 ] unsigned char 
  8903 ;;  exp2            1    7[BANK1 ] unsigned char 
  8904 ;;  sign            1    6[BANK1 ] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  3    0[BANK1 ] float 
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0, pclath, cstack
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8914 ;;      Params:         0       0       6       0       0
  8915 ;;      Locals:         0       0       3       0       0
  8916 ;;      Temps:          0       4       0       0       0
  8917 ;;      Totals:         0       4       9       0       0
  8918 ;;Total ram usage:       13 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    3
  8921 ;; This function calls:
  8922 ;;		___ftpack
  8923 ;; This function is called by:
  8924 ;;		_goParallel
  8925 ;;		___ftsub
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           psect	text2019
  8929                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  8930                           	line	87
  8931                           	global	__size_of___ftadd
  8932  018D                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  8933                           	
  8934  0581                     ___ftadd:	
  8935                           	opt	stack 3
  8936                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8937                           	line	90
  8938                           	
  8939  0581                     l12390:	
  8940  0581  1683               	bsf	status, 5	;RP0=1, select bank1
  8941  0582  1303               	bcf	status, 6	;RP1=0, select bank1
  8942  0583  084B               	movf	(___ftadd@f1)^080h,w
  8943  0584  1283               	bcf	status, 5	;RP0=0, select bank0
  8944  0585  1303               	bcf	status, 6	;RP1=0, select bank0
  8945  0586  00D8               	movwf	((??___ftadd+0)+0)
  8946  0587  1683               	bsf	status, 5	;RP0=1, select bank1
  8947  0588  1303               	bcf	status, 6	;RP1=0, select bank1
  8948  0589  084C               	movf	(___ftadd@f1+1)^080h,w
  8949  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  8950  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  8951  058C  00D9               	movwf	((??___ftadd+0)+0+1)
  8952  058D  1683               	bsf	status, 5	;RP0=1, select bank1
  8953  058E  1303               	bcf	status, 6	;RP1=0, select bank1
  8954  058F  084D               	movf	(___ftadd@f1+2)^080h,w
  8955  0590  1283               	bcf	status, 5	;RP0=0, select bank0
  8956  0591  1303               	bcf	status, 6	;RP1=0, select bank0
  8957  0592  00DA               	movwf	((??___ftadd+0)+0+2)
  8958  0593  1003               	clrc
  8959  0594  0D59               	rlf	(??___ftadd+0)+1,w
  8960  0595  0D5A               	rlf	(??___ftadd+0)+2,w
  8961  0596  00DB               	movwf	(??___ftadd+3)+0
  8962  0597  085B               	movf	(??___ftadd+3)+0,w
  8963  0598  1683               	bsf	status, 5	;RP0=1, select bank1
  8964  0599  1303               	bcf	status, 6	;RP1=0, select bank1
  8965  059A  00D3               	movwf	(___ftadd@exp1)^080h
  8966                           	line	91
  8967  059B  084E               	movf	(___ftadd@f2)^080h,w
  8968  059C  1283               	bcf	status, 5	;RP0=0, select bank0
  8969  059D  1303               	bcf	status, 6	;RP1=0, select bank0
  8970  059E  00D8               	movwf	((??___ftadd+0)+0)
  8971  059F  1683               	bsf	status, 5	;RP0=1, select bank1
  8972  05A0  1303               	bcf	status, 6	;RP1=0, select bank1
  8973  05A1  084F               	movf	(___ftadd@f2+1)^080h,w
  8974  05A2  1283               	bcf	status, 5	;RP0=0, select bank0
  8975  05A3  1303               	bcf	status, 6	;RP1=0, select bank0
  8976  05A4  00D9               	movwf	((??___ftadd+0)+0+1)
  8977  05A5  1683               	bsf	status, 5	;RP0=1, select bank1
  8978  05A6  1303               	bcf	status, 6	;RP1=0, select bank1
  8979  05A7  0850               	movf	(___ftadd@f2+2)^080h,w
  8980  05A8  1283               	bcf	status, 5	;RP0=0, select bank0
  8981  05A9  1303               	bcf	status, 6	;RP1=0, select bank0
  8982  05AA  00DA               	movwf	((??___ftadd+0)+0+2)
  8983  05AB  1003               	clrc
  8984  05AC  0D59               	rlf	(??___ftadd+0)+1,w
  8985  05AD  0D5A               	rlf	(??___ftadd+0)+2,w
  8986  05AE  00DB               	movwf	(??___ftadd+3)+0
  8987  05AF  085B               	movf	(??___ftadd+3)+0,w
  8988  05B0  1683               	bsf	status, 5	;RP0=1, select bank1
  8989  05B1  1303               	bcf	status, 6	;RP1=0, select bank1
  8990  05B2  00D2               	movwf	(___ftadd@exp2)^080h
  8991                           	line	92
  8992                           	
  8993  05B3                     l12392:	
  8994  05B3  0853               	movf	(___ftadd@exp1)^080h,w
  8995  05B4  1D03               	skipz
  8996  05B5  2DB7               	goto	u6410
  8997  05B6  2DCA               	goto	l12398
  8998  05B7                     u6410:
  8999                           	
  9000  05B7                     l12394:	
  9001  05B7  0852               	movf	(___ftadd@exp2)^080h,w
  9002  05B8  0253               	subwf	(___ftadd@exp1)^080h,w
  9003  05B9  1803               	skipnc
  9004  05BA  2DBC               	goto	u6421
  9005  05BB  2DBD               	goto	u6420
  9006  05BC                     u6421:
  9007  05BC  2DD4               	goto	l12402
  9008  05BD                     u6420:
  9009                           	
  9010  05BD                     l12396:	
  9011  05BD  0353               	decf	(___ftadd@exp1)^080h,w
  9012  05BE  3AFF               	xorlw	0ffh
  9013  05BF  0752               	addwf	(___ftadd@exp2)^080h,w
  9014  05C0  1283               	bcf	status, 5	;RP0=0, select bank0
  9015  05C1  1303               	bcf	status, 6	;RP1=0, select bank0
  9016  05C2  00D8               	movwf	(??___ftadd+0)+0
  9017  05C3  3019               	movlw	(019h)
  9018  05C4  0258               	subwf	0+(??___ftadd+0)+0,w
  9019  05C5  1C03               	skipc
  9020  05C6  2DC8               	goto	u6431
  9021  05C7  2DC9               	goto	u6430
  9022  05C8                     u6431:
  9023  05C8  2DD4               	goto	l12402
  9024  05C9                     u6430:
  9025  05C9  2DCA               	goto	l12398
  9026                           	
  9027  05CA                     l7556:	
  9028                           	line	93
  9029                           	
  9030  05CA                     l12398:	
  9031  05CA  1683               	bsf	status, 5	;RP0=1, select bank1
  9032  05CB  1303               	bcf	status, 6	;RP1=0, select bank1
  9033  05CC  084E               	movf	(___ftadd@f2)^080h,w
  9034  05CD  00CB               	movwf	(?___ftadd)^080h
  9035  05CE  084F               	movf	(___ftadd@f2+1)^080h,w
  9036  05CF  00CC               	movwf	(?___ftadd+1)^080h
  9037  05D0  0850               	movf	(___ftadd@f2+2)^080h,w
  9038  05D1  00CD               	movwf	(?___ftadd+2)^080h
  9039  05D2  2F0D               	goto	l7557
  9040                           	
  9041  05D3                     l12400:	
  9042  05D3  2F0D               	goto	l7557
  9043                           	
  9044  05D4                     l7554:	
  9045                           	line	94
  9046                           	
  9047  05D4                     l12402:	
  9048  05D4  1683               	bsf	status, 5	;RP0=1, select bank1
  9049  05D5  1303               	bcf	status, 6	;RP1=0, select bank1
  9050  05D6  0852               	movf	(___ftadd@exp2)^080h,w
  9051  05D7  1D03               	skipz
  9052  05D8  2DDA               	goto	u6440
  9053  05D9  2DEC               	goto	l7560
  9054  05DA                     u6440:
  9055                           	
  9056  05DA                     l12404:	
  9057  05DA  0853               	movf	(___ftadd@exp1)^080h,w
  9058  05DB  0252               	subwf	(___ftadd@exp2)^080h,w
  9059  05DC  1803               	skipnc
  9060  05DD  2DDF               	goto	u6451
  9061  05DE  2DE0               	goto	u6450
  9062  05DF                     u6451:
  9063  05DF  2DED               	goto	l12408
  9064  05E0                     u6450:
  9065                           	
  9066  05E0                     l12406:	
  9067  05E0  0352               	decf	(___ftadd@exp2)^080h,w
  9068  05E1  3AFF               	xorlw	0ffh
  9069  05E2  0753               	addwf	(___ftadd@exp1)^080h,w
  9070  05E3  1283               	bcf	status, 5	;RP0=0, select bank0
  9071  05E4  1303               	bcf	status, 6	;RP1=0, select bank0
  9072  05E5  00D8               	movwf	(??___ftadd+0)+0
  9073  05E6  3019               	movlw	(019h)
  9074  05E7  0258               	subwf	0+(??___ftadd+0)+0,w
  9075  05E8  1C03               	skipc
  9076  05E9  2DEB               	goto	u6461
  9077  05EA  2DEC               	goto	u6460
  9078  05EB                     u6461:
  9079  05EB  2DED               	goto	l12408
  9080  05EC                     u6460:
  9081                           	
  9082  05EC                     l7560:	
  9083                           	line	95
  9084  05EC  2F0D               	goto	l7557
  9085                           	
  9086  05ED                     l7558:	
  9087                           	line	96
  9088                           	
  9089  05ED                     l12408:	
  9090  05ED  3006               	movlw	(06h)
  9091  05EE  1283               	bcf	status, 5	;RP0=0, select bank0
  9092  05EF  00D8               	movwf	(??___ftadd+0)+0
  9093  05F0  0858               	movf	(??___ftadd+0)+0,w
  9094  05F1  1683               	bsf	status, 5	;RP0=1, select bank1
  9095  05F2  1303               	bcf	status, 6	;RP1=0, select bank1
  9096  05F3  00D1               	movwf	(___ftadd@sign)^080h
  9097                           	line	97
  9098                           	
  9099  05F4                     l12410:	
  9100  05F4  1FCD               	btfss	(___ftadd@f1+2)^080h,(23)&7
  9101  05F5  2DF7               	goto	u6471
  9102  05F6  2DF8               	goto	u6470
  9103  05F7                     u6471:
  9104  05F7  2DF9               	goto	l7561
  9105  05F8                     u6470:
  9106                           	line	98
  9107                           	
  9108  05F8                     l12412:	
  9109  05F8  17D1               	bsf	(___ftadd@sign)^080h+(7/8),(7)&7
  9110                           	
  9111  05F9                     l7561:	
  9112                           	line	99
  9113  05F9  1FD0               	btfss	(___ftadd@f2+2)^080h,(23)&7
  9114  05FA  2DFC               	goto	u6481
  9115  05FB  2DFD               	goto	u6480
  9116  05FC                     u6481:
  9117  05FC  2DFE               	goto	l7562
  9118  05FD                     u6480:
  9119                           	line	100
  9120                           	
  9121  05FD                     l12414:	
  9122  05FD  1751               	bsf	(___ftadd@sign)^080h+(6/8),(6)&7
  9123                           	
  9124  05FE                     l7562:	
  9125                           	line	101
  9126  05FE  17CC               	bsf	(___ftadd@f1)^080h+(15/8),(15)&7
  9127                           	line	102
  9128                           	
  9129  05FF                     l12416:	
  9130  05FF  30FF               	movlw	0FFh
  9131  0600  05CB               	andwf	(___ftadd@f1)^080h,f
  9132  0601  30FF               	movlw	0FFh
  9133  0602  05CC               	andwf	(___ftadd@f1+1)^080h,f
  9134  0603  3000               	movlw	0
  9135  0604  05CD               	andwf	(___ftadd@f1+2)^080h,f
  9136                           	line	103
  9137                           	
  9138  0605                     l12418:	
  9139  0605  17CF               	bsf	(___ftadd@f2)^080h+(15/8),(15)&7
  9140                           	line	104
  9141  0606  30FF               	movlw	0FFh
  9142  0607  05CE               	andwf	(___ftadd@f2)^080h,f
  9143  0608  30FF               	movlw	0FFh
  9144  0609  05CF               	andwf	(___ftadd@f2+1)^080h,f
  9145  060A  3000               	movlw	0
  9146  060B  05D0               	andwf	(___ftadd@f2+2)^080h,f
  9147                           	line	106
  9148  060C  0852               	movf	(___ftadd@exp2)^080h,w
  9149  060D  0253               	subwf	(___ftadd@exp1)^080h,w
  9150  060E  1803               	skipnc
  9151  060F  2E11               	goto	u6491
  9152  0610  2E12               	goto	u6490
  9153  0611                     u6491:
  9154  0611  2E47               	goto	l12430
  9155  0612                     u6490:
  9156  0612  2E13               	goto	l12420
  9157                           	line	109
  9158                           	
  9159  0613                     l7564:	
  9160                           	line	110
  9161                           	
  9162  0613                     l12420:	
  9163  0613  3001               	movlw	01h
  9164  0614                     u6505:
  9165  0614  1003               	clrc
  9166  0615  0DCE               	rlf	(___ftadd@f2)^080h,f
  9167  0616  0DCF               	rlf	(___ftadd@f2+1)^080h,f
  9168  0617  0DD0               	rlf	(___ftadd@f2+2)^080h,f
  9169  0618  3EFF               	addlw	-1
  9170  0619  1D03               	skipz
  9171  061A  2E14               	goto	u6505
  9172                           	line	111
  9173  061B  3001               	movlw	low(01h)
  9174  061C  02D2               	subwf	(___ftadd@exp2)^080h,f
  9175                           	line	112
  9176                           	
  9177  061D                     l12422:	
  9178  061D  0852               	movf	(___ftadd@exp2)^080h,w
  9179  061E  0653               	xorwf	(___ftadd@exp1)^080h,w
  9180  061F  1903               	skipnz
  9181  0620  2E22               	goto	u6511
  9182  0621  2E23               	goto	u6510
  9183  0622                     u6511:
  9184  0622  2E3F               	goto	l12428
  9185  0623                     u6510:
  9186                           	
  9187  0623                     l12424:	
  9188  0623  3001               	movlw	low(01h)
  9189  0624  02D1               	subwf	(___ftadd@sign)^080h,f
  9190  0625  0851               	movf	((___ftadd@sign)^080h),w
  9191  0626  3907               	andlw	07h
  9192  0627  1D03               	btfss	status,2
  9193  0628  2E2A               	goto	u6521
  9194  0629  2E2B               	goto	u6520
  9195  062A                     u6521:
  9196  062A  2E13               	goto	l12420
  9197  062B                     u6520:
  9198  062B  2E3F               	goto	l12428
  9199                           	
  9200  062C                     l7566:	
  9201  062C  2E3F               	goto	l12428
  9202                           	
  9203  062D                     l7567:	
  9204                           	line	113
  9205  062D  2E3F               	goto	l12428
  9206                           	
  9207  062E                     l7569:	
  9208                           	line	114
  9209                           	
  9210  062E                     l12426:	
  9211  062E  3001               	movlw	01h
  9212  062F                     u6535:
  9213  062F  1003               	clrc
  9214  0630  0CCD               	rrf	(___ftadd@f1+2)^080h,f
  9215  0631  0CCC               	rrf	(___ftadd@f1+1)^080h,f
  9216  0632  0CCB               	rrf	(___ftadd@f1)^080h,f
  9217  0633  3EFF               	addlw	-1
  9218  0634  1D03               	skipz
  9219  0635  2E2F               	goto	u6535
  9220                           
  9221                           	line	115
  9222  0636  3001               	movlw	(01h)
  9223  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  9224  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  9225  0639  00D8               	movwf	(??___ftadd+0)+0
  9226  063A  0858               	movf	(??___ftadd+0)+0,w
  9227  063B  1683               	bsf	status, 5	;RP0=1, select bank1
  9228  063C  1303               	bcf	status, 6	;RP1=0, select bank1
  9229  063D  07D3               	addwf	(___ftadd@exp1)^080h,f
  9230  063E  2E3F               	goto	l12428
  9231                           	line	116
  9232                           	
  9233  063F                     l7568:	
  9234                           	line	113
  9235                           	
  9236  063F                     l12428:	
  9237  063F  0853               	movf	(___ftadd@exp1)^080h,w
  9238  0640  0652               	xorwf	(___ftadd@exp2)^080h,w
  9239  0641  1D03               	skipz
  9240  0642  2E44               	goto	u6541
  9241  0643  2E45               	goto	u6540
  9242  0644                     u6541:
  9243  0644  2E2E               	goto	l12426
  9244  0645                     u6540:
  9245  0645  2E82               	goto	l7571
  9246                           	
  9247  0646                     l7570:	
  9248                           	line	117
  9249  0646  2E82               	goto	l7571
  9250                           	
  9251  0647                     l7563:	
  9252                           	
  9253  0647                     l12430:	
  9254  0647  0853               	movf	(___ftadd@exp1)^080h,w
  9255  0648  0252               	subwf	(___ftadd@exp2)^080h,w
  9256  0649  1803               	skipnc
  9257  064A  2E4C               	goto	u6551
  9258  064B  2E4D               	goto	u6550
  9259  064C                     u6551:
  9260  064C  2E82               	goto	l7571
  9261  064D                     u6550:
  9262  064D  2E4E               	goto	l12432
  9263                           	line	120
  9264                           	
  9265  064E                     l7573:	
  9266                           	line	121
  9267                           	
  9268  064E                     l12432:	
  9269  064E  3001               	movlw	01h
  9270  064F                     u6565:
  9271  064F  1003               	clrc
  9272  0650  0DCB               	rlf	(___ftadd@f1)^080h,f
  9273  0651  0DCC               	rlf	(___ftadd@f1+1)^080h,f
  9274  0652  0DCD               	rlf	(___ftadd@f1+2)^080h,f
  9275  0653  3EFF               	addlw	-1
  9276  0654  1D03               	skipz
  9277  0655  2E4F               	goto	u6565
  9278                           	line	122
  9279  0656  3001               	movlw	low(01h)
  9280  0657  02D3               	subwf	(___ftadd@exp1)^080h,f
  9281                           	line	123
  9282                           	
  9283  0658                     l12434:	
  9284  0658  0852               	movf	(___ftadd@exp2)^080h,w
  9285  0659  0653               	xorwf	(___ftadd@exp1)^080h,w
  9286  065A  1903               	skipnz
  9287  065B  2E5D               	goto	u6571
  9288  065C  2E5E               	goto	u6570
  9289  065D                     u6571:
  9290  065D  2E7A               	goto	l12440
  9291  065E                     u6570:
  9292                           	
  9293  065E                     l12436:	
  9294  065E  3001               	movlw	low(01h)
  9295  065F  02D1               	subwf	(___ftadd@sign)^080h,f
  9296  0660  0851               	movf	((___ftadd@sign)^080h),w
  9297  0661  3907               	andlw	07h
  9298  0662  1D03               	btfss	status,2
  9299  0663  2E65               	goto	u6581
  9300  0664  2E66               	goto	u6580
  9301  0665                     u6581:
  9302  0665  2E4E               	goto	l12432
  9303  0666                     u6580:
  9304  0666  2E7A               	goto	l12440
  9305                           	
  9306  0667                     l7575:	
  9307  0667  2E7A               	goto	l12440
  9308                           	
  9309  0668                     l7576:	
  9310                           	line	124
  9311  0668  2E7A               	goto	l12440
  9312                           	
  9313  0669                     l7578:	
  9314                           	line	125
  9315                           	
  9316  0669                     l12438:	
  9317  0669  3001               	movlw	01h
  9318  066A                     u6595:
  9319  066A  1003               	clrc
  9320  066B  0CD0               	rrf	(___ftadd@f2+2)^080h,f
  9321  066C  0CCF               	rrf	(___ftadd@f2+1)^080h,f
  9322  066D  0CCE               	rrf	(___ftadd@f2)^080h,f
  9323  066E  3EFF               	addlw	-1
  9324  066F  1D03               	skipz
  9325  0670  2E6A               	goto	u6595
  9326                           
  9327                           	line	126
  9328  0671  3001               	movlw	(01h)
  9329  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  9330  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  9331  0674  00D8               	movwf	(??___ftadd+0)+0
  9332  0675  0858               	movf	(??___ftadd+0)+0,w
  9333  0676  1683               	bsf	status, 5	;RP0=1, select bank1
  9334  0677  1303               	bcf	status, 6	;RP1=0, select bank1
  9335  0678  07D2               	addwf	(___ftadd@exp2)^080h,f
  9336  0679  2E7A               	goto	l12440
  9337                           	line	127
  9338                           	
  9339  067A                     l7577:	
  9340                           	line	124
  9341                           	
  9342  067A                     l12440:	
  9343  067A  0853               	movf	(___ftadd@exp1)^080h,w
  9344  067B  0652               	xorwf	(___ftadd@exp2)^080h,w
  9345  067C  1D03               	skipz
  9346  067D  2E7F               	goto	u6601
  9347  067E  2E80               	goto	u6600
  9348  067F                     u6601:
  9349  067F  2E69               	goto	l12438
  9350  0680                     u6600:
  9351  0680  2E82               	goto	l7571
  9352                           	
  9353  0681                     l7579:	
  9354  0681  2E82               	goto	l7571
  9355                           	line	128
  9356                           	
  9357  0682                     l7572:	
  9358                           	line	129
  9359                           	
  9360  0682                     l7571:	
  9361  0682  1FD1               	btfss	(___ftadd@sign)^080h,(7)&7
  9362  0683  2E85               	goto	u6611
  9363  0684  2E86               	goto	u6610
  9364  0685                     u6611:
  9365  0685  2E97               	goto	l12444
  9366  0686                     u6610:
  9367                           	line	131
  9368                           	
  9369  0686                     l12442:	
  9370  0686  30FF               	movlw	0FFh
  9371  0687  06CB               	xorwf	(___ftadd@f1)^080h,f
  9372  0688  30FF               	movlw	0FFh
  9373  0689  06CC               	xorwf	(___ftadd@f1+1)^080h,f
  9374  068A  30FF               	movlw	0FFh
  9375  068B  06CD               	xorwf	(___ftadd@f1+2)^080h,f
  9376                           	line	132
  9377  068C  3001               	movlw	01h
  9378  068D  07CB               	addwf	(___ftadd@f1)^080h,f
  9379  068E  3000               	movlw	0
  9380  068F  1803               	skipnc
  9381  0690  3001               movlw 1
  9382  0691  07CC               	addwf	(___ftadd@f1+1)^080h,f
  9383  0692  3000               	movlw	0
  9384  0693  1803               	skipnc
  9385  0694  3001               movlw 1
  9386  0695  07CD               	addwf	(___ftadd@f1+2)^080h,f
  9387  0696  2E97               	goto	l12444
  9388                           	line	133
  9389                           	
  9390  0697                     l7580:	
  9391                           	line	134
  9392                           	
  9393  0697                     l12444:	
  9394  0697  1F51               	btfss	(___ftadd@sign)^080h,(6)&7
  9395  0698  2E9A               	goto	u6621
  9396  0699  2E9B               	goto	u6620
  9397  069A                     u6621:
  9398  069A  2EAC               	goto	l12448
  9399  069B                     u6620:
  9400                           	line	136
  9401                           	
  9402  069B                     l12446:	
  9403  069B  30FF               	movlw	0FFh
  9404  069C  06CE               	xorwf	(___ftadd@f2)^080h,f
  9405  069D  30FF               	movlw	0FFh
  9406  069E  06CF               	xorwf	(___ftadd@f2+1)^080h,f
  9407  069F  30FF               	movlw	0FFh
  9408  06A0  06D0               	xorwf	(___ftadd@f2+2)^080h,f
  9409                           	line	137
  9410  06A1  3001               	movlw	01h
  9411  06A2  07CE               	addwf	(___ftadd@f2)^080h,f
  9412  06A3  3000               	movlw	0
  9413  06A4  1803               	skipnc
  9414  06A5  3001               movlw 1
  9415  06A6  07CF               	addwf	(___ftadd@f2+1)^080h,f
  9416  06A7  3000               	movlw	0
  9417  06A8  1803               	skipnc
  9418  06A9  3001               movlw 1
  9419  06AA  07D0               	addwf	(___ftadd@f2+2)^080h,f
  9420  06AB  2EAC               	goto	l12448
  9421                           	line	138
  9422                           	
  9423  06AC                     l7581:	
  9424                           	line	139
  9425                           	
  9426  06AC                     l12448:	
  9427  06AC  01D1               	clrf	(___ftadd@sign)^080h
  9428                           	line	140
  9429  06AD  084B               	movf	(___ftadd@f1)^080h,w
  9430  06AE  07CE               	addwf	(___ftadd@f2)^080h,f
  9431  06AF  084C               	movf	(___ftadd@f1+1)^080h,w
  9432  06B0  1103               	clrz
  9433  06B1  1803               	skipnc
  9434  06B2  0A4C               	incf	(___ftadd@f1+1)^080h,w
  9435  06B3  1903               	skipnz
  9436  06B4  2EB6               	goto	u6631
  9437  06B5  07CF               	addwf	(___ftadd@f2+1)^080h,f
  9438  06B6                     u6631:
  9439  06B6  084D               	movf	(___ftadd@f1+2)^080h,w
  9440  06B7  1103               	clrz
  9441  06B8  1803               	skipnc
  9442  06B9  0A4D               	incf	(___ftadd@f1+2)^080h,w
  9443  06BA  1903               	skipnz
  9444  06BB  2EBD               	goto	u6632
  9445  06BC  07D0               	addwf	(___ftadd@f2+2)^080h,f
  9446  06BD                     u6632:
  9447                           
  9448                           	line	141
  9449                           	
  9450  06BD                     l12450:	
  9451  06BD  1FD0               	btfss	(___ftadd@f2+2)^080h,(23)&7
  9452  06BE  2EC0               	goto	u6641
  9453  06BF  2EC1               	goto	u6640
  9454  06C0                     u6641:
  9455  06C0  2ED5               	goto	l12456
  9456  06C1                     u6640:
  9457                           	line	142
  9458                           	
  9459  06C1                     l12452:	
  9460  06C1  30FF               	movlw	0FFh
  9461  06C2  06CE               	xorwf	(___ftadd@f2)^080h,f
  9462  06C3  30FF               	movlw	0FFh
  9463  06C4  06CF               	xorwf	(___ftadd@f2+1)^080h,f
  9464  06C5  30FF               	movlw	0FFh
  9465  06C6  06D0               	xorwf	(___ftadd@f2+2)^080h,f
  9466                           	line	143
  9467  06C7  3001               	movlw	01h
  9468  06C8  07CE               	addwf	(___ftadd@f2)^080h,f
  9469  06C9  3000               	movlw	0
  9470  06CA  1803               	skipnc
  9471  06CB  3001               movlw 1
  9472  06CC  07CF               	addwf	(___ftadd@f2+1)^080h,f
  9473  06CD  3000               	movlw	0
  9474  06CE  1803               	skipnc
  9475  06CF  3001               movlw 1
  9476  06D0  07D0               	addwf	(___ftadd@f2+2)^080h,f
  9477                           	line	144
  9478                           	
  9479  06D1                     l12454:	
  9480  06D1  01D1               	clrf	(___ftadd@sign)^080h
  9481  06D2  1403               	bsf	status,0
  9482  06D3  0DD1               	rlf	(___ftadd@sign)^080h,f
  9483  06D4  2ED5               	goto	l12456
  9484                           	line	145
  9485                           	
  9486  06D5                     l7582:	
  9487                           	line	146
  9488                           	
  9489  06D5                     l12456:	
  9490  06D5  084E               	movf	(___ftadd@f2)^080h,w
  9491  06D6  1283               	bcf	status, 5	;RP0=0, select bank0
  9492  06D7  1303               	bcf	status, 6	;RP1=0, select bank0
  9493  06D8  00AA               	movwf	(?___ftpack)
  9494  06D9  1683               	bsf	status, 5	;RP0=1, select bank1
  9495  06DA  1303               	bcf	status, 6	;RP1=0, select bank1
  9496  06DB  084F               	movf	(___ftadd@f2+1)^080h,w
  9497  06DC  1283               	bcf	status, 5	;RP0=0, select bank0
  9498  06DD  1303               	bcf	status, 6	;RP1=0, select bank0
  9499  06DE  00AB               	movwf	(?___ftpack+1)
  9500  06DF  1683               	bsf	status, 5	;RP0=1, select bank1
  9501  06E0  1303               	bcf	status, 6	;RP1=0, select bank1
  9502  06E1  0850               	movf	(___ftadd@f2+2)^080h,w
  9503  06E2  1283               	bcf	status, 5	;RP0=0, select bank0
  9504  06E3  1303               	bcf	status, 6	;RP1=0, select bank0
  9505  06E4  00AC               	movwf	(?___ftpack+2)
  9506  06E5  1683               	bsf	status, 5	;RP0=1, select bank1
  9507  06E6  1303               	bcf	status, 6	;RP1=0, select bank1
  9508  06E7  0853               	movf	(___ftadd@exp1)^080h,w
  9509  06E8  1283               	bcf	status, 5	;RP0=0, select bank0
  9510  06E9  1303               	bcf	status, 6	;RP1=0, select bank0
  9511  06EA  00D8               	movwf	(??___ftadd+0)+0
  9512  06EB  0858               	movf	(??___ftadd+0)+0,w
  9513  06EC  00AD               	movwf	0+(?___ftpack)+03h
  9514  06ED  1683               	bsf	status, 5	;RP0=1, select bank1
  9515  06EE  1303               	bcf	status, 6	;RP1=0, select bank1
  9516  06EF  0851               	movf	(___ftadd@sign)^080h,w
  9517  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  9518  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  9519  06F2  00D9               	movwf	(??___ftadd+1)+0
  9520  06F3  0859               	movf	(??___ftadd+1)+0,w
  9521  06F4  00AE               	movwf	0+(?___ftpack)+04h
  9522  06F5  120A  158A  21AF   	fcall	___ftpack
              120A  118A         
  9523  06FA  1283               	bcf	status, 5	;RP0=0, select bank0
  9524  06FB  1303               	bcf	status, 6	;RP1=0, select bank0
  9525  06FC  082A               	movf	(0+(?___ftpack)),w
  9526  06FD  1683               	bsf	status, 5	;RP0=1, select bank1
  9527  06FE  1303               	bcf	status, 6	;RP1=0, select bank1
  9528  06FF  00CB               	movwf	(?___ftadd)^080h
  9529  0700  1283               	bcf	status, 5	;RP0=0, select bank0
  9530  0701  1303               	bcf	status, 6	;RP1=0, select bank0
  9531  0702  082B               	movf	(1+(?___ftpack)),w
  9532  0703  1683               	bsf	status, 5	;RP0=1, select bank1
  9533  0704  1303               	bcf	status, 6	;RP1=0, select bank1
  9534  0705  00CC               	movwf	(?___ftadd+1)^080h
  9535  0706  1283               	bcf	status, 5	;RP0=0, select bank0
  9536  0707  1303               	bcf	status, 6	;RP1=0, select bank0
  9537  0708  082C               	movf	(2+(?___ftpack)),w
  9538  0709  1683               	bsf	status, 5	;RP0=1, select bank1
  9539  070A  1303               	bcf	status, 6	;RP1=0, select bank1
  9540  070B  00CD               	movwf	(?___ftadd+2)^080h
  9541  070C  2F0D               	goto	l7557
  9542                           	
  9543  070D                     l12458:	
  9544                           	line	148
  9545                           	
  9546  070D                     l7557:	
  9547  070D  0008               	return
  9548                           	opt stack 0
  9549                           GLOBAL	__end_of___ftadd
  9550  070E                     	__end_of___ftadd:
  9551 ;; =============== function ___ftadd ends ============
  9552                           
  9553                           	signat	___ftadd,8315
  9554                           	global	_initIRobot
  9555                           psect	text2020,local,class=CODE,delta=2
  9556                           global __ptext2020
  9557  11F9                     __ptext2020:
  9558                           
  9559 ;; *************** function _initIRobot *****************
  9560 ;; Defined at:
  9561 ;;		line 130 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;		None
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;		None
  9566 ;; Return value:  Size  Location     Type
  9567 ;;		None               void
  9568 ;; Registers used:
  9569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9575 ;;      Params:         0       0       0       0       0
  9576 ;;      Locals:         0       0       0       0       0
  9577 ;;      Temps:          0       3       0       0       0
  9578 ;;      Totals:         0       3       0       0       0
  9579 ;;Total ram usage:        3 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:    3
  9582 ;; This function calls:
  9583 ;;		_ser_putch
  9584 ;; This function is called by:
  9585 ;;		_init
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           psect	text2020
  9589                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
  9590                           	line	130
  9591                           	global	__size_of_initIRobot
  9592  001C                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
  9593                           	
  9594  11F9                     _initIRobot:	
  9595                           	opt	stack 3
  9596                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9597                           	line	131
  9598                           	
  9599  11F9                     l12384:	
  9600                           ;main.c: 131: _delay((unsigned long)((100)*(20000000/4000.0)));
  9601                           	opt asmopt_off
  9602  11F9  3003               movlw  3
  9603  11FA  1283               	bcf	status, 5	;RP0=0, select bank0
  9604  11FB  1303               	bcf	status, 6	;RP1=0, select bank0
  9605  11FC  00AE               movwf	((??_initIRobot+0)+0+2),f
  9606  11FD  308A               movlw	138
  9607  11FE  00AD               movwf	((??_initIRobot+0)+0+1),f
  9608  11FF  3056               	movlw	86
  9609  1200  00AC               movwf	((??_initIRobot+0)+0),f
  9610  1201                     u7637:
  9611  1201  0BAC               	decfsz	((??_initIRobot+0)+0),f
  9612  1202  2A01               	goto	u7637
  9613  1203  0BAD               	decfsz	((??_initIRobot+0)+0+1),f
  9614  1204  2A01               	goto	u7637
  9615  1205  0BAE               	decfsz	((??_initIRobot+0)+0+2),f
  9616  1206  2A01               	goto	u7637
  9617  1207  2A08               	nop2
  9618                           opt asmopt_on
  9619                           
  9620                           	line	132
  9621                           	
  9622  1208                     l12386:	
  9623                           ;main.c: 132: ser_putch(128);
  9624  1208  3080               	movlw	(080h)
  9625  1209  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9626                           	line	133
  9627                           	
  9628  120E                     l12388:	
  9629                           ;main.c: 133: ser_putch(132);
  9630  120E  3084               	movlw	(084h)
  9631  120F  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9632                           	line	134
  9633                           	
  9634  1214                     l6710:	
  9635  1214  0008               	return
  9636                           	opt stack 0
  9637                           GLOBAL	__end_of_initIRobot
  9638  1215                     	__end_of_initIRobot:
  9639 ;; =============== function _initIRobot ends ============
  9640                           
  9641                           	signat	_initIRobot,88
  9642                           	global	_waitFor
  9643                           psect	text2021,local,class=CODE,delta=2
  9644                           global __ptext2021
  9645  136C                     __ptext2021:
  9646                           
  9647 ;; *************** function _waitFor *****************
  9648 ;; Defined at:
  9649 ;;		line 240 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  type            1    wreg     unsigned char 
  9652 ;;  highByte        1   12[BANK0 ] unsigned char 
  9653 ;;  lowByte         1   13[BANK0 ] unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  type            1   17[BANK0 ] unsigned char 
  9656 ;; Return value:  Size  Location     Type
  9657 ;;		None               void
  9658 ;; Registers used:
  9659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9665 ;;      Params:         0       2       0       0       0
  9666 ;;      Locals:         0       1       0       0       0
  9667 ;;      Temps:          0       3       0       0       0
  9668 ;;      Totals:         0       6       0       0       0
  9669 ;;Total ram usage:        6 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    3
  9672 ;; This function calls:
  9673 ;;		_ser_putch
  9674 ;; This function is called by:
  9675 ;;		_goReverse
  9676 ;;		_turnAround
  9677 ;;		_turnLeft90
  9678 ;;		_turnRight90
  9679 ;;		_goParallel
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           psect	text2021
  9683                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  9684                           	line	240
  9685                           	global	__size_of_waitFor
  9686  0029                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
  9687                           	
  9688  136C                     _waitFor:	
  9689                           	opt	stack 1
  9690                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9691                           ;waitFor@type stored from wreg
  9692  136C  1283               	bcf	status, 5	;RP0=0, select bank0
  9693  136D  1303               	bcf	status, 6	;RP1=0, select bank0
  9694  136E  00B1               	movwf	(waitFor@type)
  9695                           	line	241
  9696                           	
  9697  136F                     l12376:	
  9698                           ;drive.c: 241: _delay((unsigned long)((100)*(20000000/4000.0)));
  9699                           	opt asmopt_off
  9700  136F  3003               movlw  3
  9701  1370  00B0               movwf	((??_waitFor+0)+0+2),f
  9702  1371  308A               movlw	138
  9703  1372  00AF               movwf	((??_waitFor+0)+0+1),f
  9704  1373  3056               	movlw	86
  9705  1374  00AE               movwf	((??_waitFor+0)+0),f
  9706  1375                     u7647:
  9707  1375  0BAE               	decfsz	((??_waitFor+0)+0),f
  9708  1376  2B75               	goto	u7647
  9709  1377  0BAF               	decfsz	((??_waitFor+0)+0+1),f
  9710  1378  2B75               	goto	u7647
  9711  1379  0BB0               	decfsz	((??_waitFor+0)+0+2),f
  9712  137A  2B75               	goto	u7647
  9713  137B  2B7C               	nop2
  9714                           opt asmopt_on
  9715                           
  9716                           	line	242
  9717                           	
  9718  137C                     l12378:	
  9719                           ;drive.c: 242: ser_putch(type);
  9720  137C  1283               	bcf	status, 5	;RP0=0, select bank0
  9721  137D  1303               	bcf	status, 6	;RP1=0, select bank0
  9722  137E  0831               	movf	(waitFor@type),w
  9723  137F  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9724                           	line	243
  9725                           	
  9726  1384                     l12380:	
  9727                           ;drive.c: 243: ser_putch(highByte);
  9728  1384  1283               	bcf	status, 5	;RP0=0, select bank0
  9729  1385  1303               	bcf	status, 6	;RP1=0, select bank0
  9730  1386  082C               	movf	(waitFor@highByte),w
  9731  1387  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9732                           	line	244
  9733                           	
  9734  138C                     l12382:	
  9735                           ;drive.c: 244: ser_putch(lowByte);
  9736  138C  1283               	bcf	status, 5	;RP0=0, select bank0
  9737  138D  1303               	bcf	status, 6	;RP1=0, select bank0
  9738  138E  082D               	movf	(waitFor@lowByte),w
  9739  138F  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9740                           	line	245
  9741                           	
  9742  1394                     l5880:	
  9743  1394  0008               	return
  9744                           	opt stack 0
  9745                           GLOBAL	__end_of_waitFor
  9746  1395                     	__end_of_waitFor:
  9747 ;; =============== function _waitFor ends ============
  9748                           
  9749                           	signat	_waitFor,12408
  9750                           	global	_drive
  9751                           psect	text2022,local,class=CODE,delta=2
  9752                           global __ptext2022
  9753  14AB                     __ptext2022:
  9754                           
  9755 ;; *************** function _drive *****************
  9756 ;; Defined at:
  9757 ;;		line 21 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\driv
       e.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  highByteSpee    1    wreg     unsigned char 
  9760 ;;  lowByteSpeed    1   12[BANK0 ] unsigned char 
  9761 ;;  highByteRadi    1   13[BANK0 ] unsigned char 
  9762 ;;  lowByteRadiu    1   14[BANK0 ] unsigned char 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  highByteSpee    1   18[BANK0 ] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;		None               void
  9767 ;; Registers used:
  9768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9774 ;;      Params:         0       3       0       0       0
  9775 ;;      Locals:         0       1       0       0       0
  9776 ;;      Temps:          0       3       0       0       0
  9777 ;;      Totals:         0       7       0       0       0
  9778 ;;Total ram usage:        7 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    3
  9781 ;; This function calls:
  9782 ;;		_ser_putch
  9783 ;; This function is called by:
  9784 ;;		_driveForDistance
  9785 ;;		_goReverse
  9786 ;;		_turnAround
  9787 ;;		_turnLeft90
  9788 ;;		_turnRight90
  9789 ;;		_frontWallCorrect
  9790 ;;		_goParallel
  9791 ;;		_checkIfHome
  9792 ;;		_main
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           psect	text2022
  9796                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
  9797                           	line	21
  9798                           	global	__size_of_drive
  9799  0037                     	__size_of_drive	equ	__end_of_drive-_drive
  9800                           	
  9801  14AB                     _drive:	
  9802                           	opt	stack 3
  9803                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9804                           ;drive@highByteSpeed stored from wreg
  9805  14AB  1283               	bcf	status, 5	;RP0=0, select bank0
  9806  14AC  1303               	bcf	status, 6	;RP1=0, select bank0
  9807  14AD  00B2               	movwf	(drive@highByteSpeed)
  9808                           	line	22
  9809                           	
  9810  14AE                     l12364:	
  9811                           ;drive.c: 22: _delay((unsigned long)((100)*(20000000/4000.0)));
  9812                           	opt asmopt_off
  9813  14AE  3003               movlw  3
  9814  14AF  00B1               movwf	((??_drive+0)+0+2),f
  9815  14B0  308A               movlw	138
  9816  14B1  00B0               movwf	((??_drive+0)+0+1),f
  9817  14B2  3056               	movlw	86
  9818  14B3  00AF               movwf	((??_drive+0)+0),f
  9819  14B4                     u7657:
  9820  14B4  0BAF               	decfsz	((??_drive+0)+0),f
  9821  14B5  2CB4               	goto	u7657
  9822  14B6  0BB0               	decfsz	((??_drive+0)+0+1),f
  9823  14B7  2CB4               	goto	u7657
  9824  14B8  0BB1               	decfsz	((??_drive+0)+0+2),f
  9825  14B9  2CB4               	goto	u7657
  9826  14BA  2CBB               	nop2
  9827                           opt asmopt_on
  9828                           
  9829                           	line	23
  9830                           	
  9831  14BB                     l12366:	
  9832                           ;drive.c: 23: ser_putch(137);
  9833  14BB  3089               	movlw	(089h)
  9834  14BC  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9835                           	line	24
  9836                           	
  9837  14C1                     l12368:	
  9838                           ;drive.c: 24: ser_putch(highByteSpeed);
  9839  14C1  1283               	bcf	status, 5	;RP0=0, select bank0
  9840  14C2  1303               	bcf	status, 6	;RP1=0, select bank0
  9841  14C3  0832               	movf	(drive@highByteSpeed),w
  9842  14C4  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9843                           	line	25
  9844                           	
  9845  14C9                     l12370:	
  9846                           ;drive.c: 25: ser_putch(lowByteSpeed);
  9847  14C9  1283               	bcf	status, 5	;RP0=0, select bank0
  9848  14CA  1303               	bcf	status, 6	;RP1=0, select bank0
  9849  14CB  082C               	movf	(drive@lowByteSpeed),w
  9850  14CC  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9851                           	line	26
  9852                           	
  9853  14D1                     l12372:	
  9854                           ;drive.c: 26: ser_putch(highByteRadius);
  9855  14D1  1283               	bcf	status, 5	;RP0=0, select bank0
  9856  14D2  1303               	bcf	status, 6	;RP1=0, select bank0
  9857  14D3  082D               	movf	(drive@highByteRadius),w
  9858  14D4  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9859                           	line	27
  9860                           	
  9861  14D9                     l12374:	
  9862                           ;drive.c: 27: ser_putch(lowByteRadius);
  9863  14D9  1283               	bcf	status, 5	;RP0=0, select bank0
  9864  14DA  1303               	bcf	status, 6	;RP1=0, select bank0
  9865  14DB  082E               	movf	(drive@lowByteRadius),w
  9866  14DC  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
  9867                           	line	28
  9868                           	
  9869  14E1                     l5816:	
  9870  14E1  0008               	return
  9871                           	opt stack 0
  9872                           GLOBAL	__end_of_drive
  9873  14E2                     	__end_of_drive:
  9874 ;; =============== function _drive ends ============
  9875                           
  9876                           	signat	_drive,16504
  9877                           	global	_rotateIR
  9878                           psect	text2023,local,class=CODE,delta=2
  9879                           global __ptext2023
  9880  1442                     __ptext2023:
  9881                           
  9882 ;; *************** function _rotateIR *****************
  9883 ;; Defined at:
  9884 ;;		line 39 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ir.c
       "
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  steps           1    wreg     unsigned char 
  9887 ;;  direction       1   10[BANK0 ] unsigned char 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  steps           1   13[BANK0 ] unsigned char 
  9890 ;;  stepNum         1   14[BANK0 ] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;		None               void
  9893 ;; Registers used:
  9894 ;;		wreg, status,2, status,0
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9900 ;;      Params:         0       1       0       0       0
  9901 ;;      Locals:         0       2       0       0       0
  9902 ;;      Temps:          0       2       0       0       0
  9903 ;;      Totals:         0       5       0       0       0
  9904 ;;Total ram usage:        5 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:    2
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_frontWallCorrect
  9911 ;;		_findWalls
  9912 ;;		_goParallel
  9913 ;;		_main
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           psect	text2023
  9917                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ir.c"
  9918                           	line	39
  9919                           	global	__size_of_rotateIR
  9920  0033                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
  9921                           	
  9922  1442                     _rotateIR:	
  9923                           	opt	stack 4
  9924                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
  9925                           ;rotateIR@steps stored from wreg
  9926  1442  1283               	bcf	status, 5	;RP0=0, select bank0
  9927  1443  1303               	bcf	status, 6	;RP1=0, select bank0
  9928  1444  00AD               	movwf	(rotateIR@steps)
  9929                           	line	40
  9930                           	
  9931  1445                     l12350:	
  9932                           ;ir.c: 40: PORTC |= 0b00000011;
  9933  1445  3003               	movlw	(03h)
  9934  1446  00AB               	movwf	(??_rotateIR+0)+0
  9935  1447  082B               	movf	(??_rotateIR+0)+0,w
  9936  1448  0487               	iorwf	(7),f	;volatile
  9937                           	line	41
  9938                           	
  9939  1449                     l12352:	
  9940                           ;ir.c: 41: SSPBUF = direction;
  9941  1449  082A               	movf	(rotateIR@direction),w
  9942  144A  0093               	movwf	(19)	;volatile
  9943                           	line	44
  9944                           ;ir.c: 44: for (char stepNum = 1; stepNum <= steps; ++stepNum)
  9945  144B  01AE               	clrf	(rotateIR@stepNum)
  9946  144C  1403               	bsf	status,0
  9947  144D  0DAE               	rlf	(rotateIR@stepNum),f
  9948  144E  2C63               	goto	l5084
  9949                           	line	45
  9950                           	
  9951  144F                     l5085:	
  9952                           	line	46
  9953                           ;ir.c: 45: {
  9954                           ;ir.c: 46: PORTC |= 0b00000100;
  9955  144F  1507               	bsf	(7)+(2/8),(2)&7	;volatile
  9956                           	line	47
  9957                           	
  9958  1450                     l12354:	
  9959                           ;ir.c: 47: PORTC &= 0b11111011;
  9960  1450  30FB               	movlw	(0FBh)
  9961  1451  00AB               	movwf	(??_rotateIR+0)+0
  9962  1452  082B               	movf	(??_rotateIR+0)+0,w
  9963  1453  0587               	andwf	(7),f	;volatile
  9964                           	line	48
  9965                           	
  9966  1454                     l12356:	
  9967                           ;ir.c: 48: _delay((unsigned long)((20)*(20000000/4000.0)));
  9968                           	opt asmopt_off
  9969  1454  3082               movlw	130
  9970  1455  00AC               movwf	((??_rotateIR+0)+0+1),f
  9971  1456  30DD               	movlw	221
  9972  1457  00AB               movwf	((??_rotateIR+0)+0),f
  9973  1458                     u7667:
  9974  1458  0BAB               	decfsz	((??_rotateIR+0)+0),f
  9975  1459  2C58               	goto	u7667
  9976  145A  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  9977  145B  2C58               	goto	u7667
  9978  145C  2C5D               	nop2
  9979                           opt asmopt_on
  9980                           
  9981                           	line	44
  9982                           	
  9983  145D                     l12358:	
  9984  145D  3001               	movlw	(01h)
  9985  145E  1283               	bcf	status, 5	;RP0=0, select bank0
  9986  145F  1303               	bcf	status, 6	;RP1=0, select bank0
  9987  1460  00AB               	movwf	(??_rotateIR+0)+0
  9988  1461  082B               	movf	(??_rotateIR+0)+0,w
  9989  1462  07AE               	addwf	(rotateIR@stepNum),f
  9990                           	
  9991  1463                     l5084:	
  9992  1463  082E               	movf	(rotateIR@stepNum),w
  9993  1464  022D               	subwf	(rotateIR@steps),w
  9994  1465  1803               	skipnc
  9995  1466  2C68               	goto	u6401
  9996  1467  2C69               	goto	u6400
  9997  1468                     u6401:
  9998  1468  2C4F               	goto	l5085
  9999  1469                     u6400:
 10000  1469  2C6A               	goto	l12360
 10001                           	
 10002  146A                     l5086:	
 10003                           	line	51
 10004                           	
 10005  146A                     l12360:	
 10006                           ;ir.c: 49: }
 10007                           ;ir.c: 51: SSPBUF = 0b00000000;
 10008  146A  0193               	clrf	(19)	;volatile
 10009                           	line	52
 10010                           	
 10011  146B                     l12362:	
 10012                           ;ir.c: 52: _delay((unsigned long)((20)*(20000000/4000.0)));
 10013                           	opt asmopt_off
 10014  146B  3082               movlw	130
 10015  146C  00AC               movwf	((??_rotateIR+0)+0+1),f
 10016  146D  30DD               	movlw	221
 10017  146E  00AB               movwf	((??_rotateIR+0)+0),f
 10018  146F                     u7677:
 10019  146F  0BAB               	decfsz	((??_rotateIR+0)+0),f
 10020  1470  2C6F               	goto	u7677
 10021  1471  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
 10022  1472  2C6F               	goto	u7677
 10023  1473  2C74               	nop2
 10024                           opt asmopt_on
 10025                           
 10026                           	line	54
 10027                           	
 10028  1474                     l5087:	
 10029  1474  0008               	return
 10030                           	opt stack 0
 10031                           GLOBAL	__end_of_rotateIR
 10032  1475                     	__end_of_rotateIR:
 10033 ;; =============== function _rotateIR ends ============
 10034                           
 10035                           	signat	_rotateIR,8312
 10036                           	global	_convert
 10037                           psect	text2024,local,class=CODE,delta=2
 10038                           global __ptext2024
 10039  01F9                     __ptext2024:
 10040                           
 10041 ;; *************** function _convert *****************
 10042 ;; Defined at:
 10043 ;;		line 11 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ir.c
       "
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  adc_value       2   33[BANK0 ] int 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  2   33[BANK0 ] int 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10057 ;;      Params:         0       2       0       0       0
 10058 ;;      Locals:         0       0       0       0       0
 10059 ;;      Temps:          0       2       0       0       0
 10060 ;;      Totals:         0       4       0       0       0
 10061 ;;Total ram usage:        4 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    3
 10064 ;; This function calls:
 10065 ;;		___wmul
 10066 ;;		___awdiv
 10067 ;; This function is called by:
 10068 ;;		_readIR
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           psect	text2024
 10072                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ir.c"
 10073                           	line	11
 10074                           	global	__size_of_convert
 10075  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
 10076                           	
 10077  01F9                     _convert:	
 10078                           	opt	stack 2
 10079                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10080                           	line	12
 10081                           	
 10082  01F9                     l12290:	
 10083                           ;ir.c: 12: if(adc_value < 82)
 10084  01F9  1283               	bcf	status, 5	;RP0=0, select bank0
 10085  01FA  1303               	bcf	status, 6	;RP1=0, select bank0
 10086  01FB  0842               	movf	(convert@adc_value+1),w
 10087  01FC  3A80               	xorlw	80h
 10088  01FD  00FF               	movwf	btemp+1
 10089  01FE  3080               	movlw	(high(052h))^80h
 10090  01FF  027F               	subwf	btemp+1,w
 10091  0200  1D03               	skipz
 10092  0201  2A04               	goto	u6335
 10093  0202  3052               	movlw	low(052h)
 10094  0203  0241               	subwf	(convert@adc_value),w
 10095  0204                     u6335:
 10096                           
 10097  0204  1803               	skipnc
 10098  0205  2A07               	goto	u6331
 10099  0206  2A08               	goto	u6330
 10100  0207                     u6331:
 10101  0207  2A11               	goto	l12298
 10102  0208                     u6330:
 10103                           	line	13
 10104                           	
 10105  0208                     l12292:	
 10106                           ;ir.c: 13: return 999;
 10107  0208  30E7               	movlw	low(03E7h)
 10108  0209  1283               	bcf	status, 5	;RP0=0, select bank0
 10109  020A  1303               	bcf	status, 6	;RP1=0, select bank0
 10110  020B  00C1               	movwf	(?_convert)
 10111  020C  3003               	movlw	high(03E7h)
 10112  020D  00C2               	movwf	((?_convert))+1
 10113  020E  2BC7               	goto	l5065
 10114                           	
 10115  020F                     l12294:	
 10116  020F  2BC7               	goto	l5065
 10117                           	
 10118  0210                     l12296:	
 10119  0210  2BC7               	goto	l5065
 10120                           	line	14
 10121                           	
 10122  0211                     l5064:	
 10123                           	
 10124  0211                     l12298:	
 10125                           ;ir.c: 14: else if(adc_value < 133)
 10126  0211  1283               	bcf	status, 5	;RP0=0, select bank0
 10127  0212  1303               	bcf	status, 6	;RP1=0, select bank0
 10128  0213  0842               	movf	(convert@adc_value+1),w
 10129  0214  3A80               	xorlw	80h
 10130  0215  00FF               	movwf	btemp+1
 10131  0216  3080               	movlw	(high(085h))^80h
 10132  0217  027F               	subwf	btemp+1,w
 10133  0218  1D03               	skipz
 10134  0219  2A1C               	goto	u6345
 10135  021A  3085               	movlw	low(085h)
 10136  021B  0241               	subwf	(convert@adc_value),w
 10137  021C                     u6345:
 10138                           
 10139  021C  1803               	skipnc
 10140  021D  2A1F               	goto	u6341
 10141  021E  2A20               	goto	u6340
 10142  021F                     u6341:
 10143  021F  2A58               	goto	l12306
 10144  0220                     u6340:
 10145                           	line	15
 10146                           	
 10147  0220                     l12300:	
 10148                           ;ir.c: 15: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
 10149  0220  3033               	movlw	low(033h)
 10150  0221  1283               	bcf	status, 5	;RP0=0, select bank0
 10151  0222  1303               	bcf	status, 6	;RP1=0, select bank0
 10152  0223  00B0               	movwf	(?___awdiv)
 10153  0224  3000               	movlw	high(033h)
 10154  0225  00B1               	movwf	((?___awdiv))+1
 10155  0226  0941               	comf	(convert@adc_value),w
 10156  0227  00C3               	movwf	(??_convert+0)+0
 10157  0228  0942               	comf	(convert@adc_value+1),w
 10158  0229  00C4               	movwf	((??_convert+0)+0+1)
 10159  022A  0AC3               	incf	(??_convert+0)+0,f
 10160  022B  1903               	skipnz
 10161  022C  0AC4               	incf	((??_convert+0)+0+1),f
 10162  022D  0843               	movf	0+(??_convert+0)+0,w
 10163  022E  3E85               	addlw	low(085h)
 10164  022F  00AA               	movwf	(?___wmul)
 10165  0230  0844               	movf	1+(??_convert+0)+0,w
 10166  0231  1803               	skipnc
 10167  0232  3E01               	addlw	1
 10168  0233  3E00               	addlw	high(085h)
 10169  0234  00AB               	movwf	1+(?___wmul)
 10170  0235  3032               	movlw	low(032h)
 10171  0236  00AC               	movwf	0+(?___wmul)+02h
 10172  0237  3000               	movlw	high(032h)
 10173  0238  00AD               	movwf	(0+(?___wmul)+02h)+1
 10174  0239  160A  118A  23E9   	fcall	___wmul
              120A  118A         
 10175  023E  1283               	bcf	status, 5	;RP0=0, select bank0
 10176  023F  1303               	bcf	status, 6	;RP1=0, select bank0
 10177  0240  082B               	movf	(1+(?___wmul)),w
 10178  0241  01B3               	clrf	1+(?___awdiv)+02h
 10179  0242  07B3               	addwf	1+(?___awdiv)+02h
 10180  0243  082A               	movf	(0+(?___wmul)),w
 10181  0244  01B2               	clrf	0+(?___awdiv)+02h
 10182  0245  07B2               	addwf	0+(?___awdiv)+02h
 10183                           
 10184  0246  120A  158A  2139   	fcall	___awdiv
              120A  118A         
 10185  024B  1283               	bcf	status, 5	;RP0=0, select bank0
 10186  024C  1303               	bcf	status, 6	;RP1=0, select bank0
 10187  024D  0830               	movf	(0+(?___awdiv)),w
 10188  024E  3E61               	addlw	low(061h)
 10189  024F  00C1               	movwf	(?_convert)
 10190  0250  0831               	movf	(1+(?___awdiv)),w
 10191  0251  1803               	skipnc
 10192  0252  3E01               	addlw	1
 10193  0253  3E00               	addlw	high(061h)
 10194  0254  00C2               	movwf	1+(?_convert)
 10195  0255  2BC7               	goto	l5065
 10196                           	
 10197  0256                     l12302:	
 10198  0256  2BC7               	goto	l5065
 10199                           	
 10200  0257                     l12304:	
 10201  0257  2BC7               	goto	l5065
 10202                           	line	16
 10203                           	
 10204  0258                     l5067:	
 10205                           	
 10206  0258                     l12306:	
 10207                           ;ir.c: 16: else if(adc_value < 184)
 10208  0258  1283               	bcf	status, 5	;RP0=0, select bank0
 10209  0259  1303               	bcf	status, 6	;RP1=0, select bank0
 10210  025A  0842               	movf	(convert@adc_value+1),w
 10211  025B  3A80               	xorlw	80h
 10212  025C  00FF               	movwf	btemp+1
 10213  025D  3080               	movlw	(high(0B8h))^80h
 10214  025E  027F               	subwf	btemp+1,w
 10215  025F  1D03               	skipz
 10216  0260  2A63               	goto	u6355
 10217  0261  30B8               	movlw	low(0B8h)
 10218  0262  0241               	subwf	(convert@adc_value),w
 10219  0263                     u6355:
 10220                           
 10221  0263  1803               	skipnc
 10222  0264  2A66               	goto	u6351
 10223  0265  2A67               	goto	u6350
 10224  0266                     u6351:
 10225  0266  2A9F               	goto	l12314
 10226  0267                     u6350:
 10227                           	line	17
 10228                           	
 10229  0267                     l12308:	
 10230                           ;ir.c: 17: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
 10231  0267  3033               	movlw	low(033h)
 10232  0268  1283               	bcf	status, 5	;RP0=0, select bank0
 10233  0269  1303               	bcf	status, 6	;RP1=0, select bank0
 10234  026A  00B0               	movwf	(?___awdiv)
 10235  026B  3000               	movlw	high(033h)
 10236  026C  00B1               	movwf	((?___awdiv))+1
 10237  026D  0941               	comf	(convert@adc_value),w
 10238  026E  00C3               	movwf	(??_convert+0)+0
 10239  026F  0942               	comf	(convert@adc_value+1),w
 10240  0270  00C4               	movwf	((??_convert+0)+0+1)
 10241  0271  0AC3               	incf	(??_convert+0)+0,f
 10242  0272  1903               	skipnz
 10243  0273  0AC4               	incf	((??_convert+0)+0+1),f
 10244  0274  0843               	movf	0+(??_convert+0)+0,w
 10245  0275  3EB8               	addlw	low(0B8h)
 10246  0276  00AA               	movwf	(?___wmul)
 10247  0277  0844               	movf	1+(??_convert+0)+0,w
 10248  0278  1803               	skipnc
 10249  0279  3E01               	addlw	1
 10250  027A  3E00               	addlw	high(0B8h)
 10251  027B  00AB               	movwf	1+(?___wmul)
 10252  027C  301E               	movlw	low(01Eh)
 10253  027D  00AC               	movwf	0+(?___wmul)+02h
 10254  027E  3000               	movlw	high(01Eh)
 10255  027F  00AD               	movwf	(0+(?___wmul)+02h)+1
 10256  0280  160A  118A  23E9   	fcall	___wmul
              120A  118A         
 10257  0285  1283               	bcf	status, 5	;RP0=0, select bank0
 10258  0286  1303               	bcf	status, 6	;RP1=0, select bank0
 10259  0287  082B               	movf	(1+(?___wmul)),w
 10260  0288  01B3               	clrf	1+(?___awdiv)+02h
 10261  0289  07B3               	addwf	1+(?___awdiv)+02h
 10262  028A  082A               	movf	(0+(?___wmul)),w
 10263  028B  01B2               	clrf	0+(?___awdiv)+02h
 10264  028C  07B2               	addwf	0+(?___awdiv)+02h
 10265                           
 10266  028D  120A  158A  2139   	fcall	___awdiv
              120A  118A         
 10267  0292  1283               	bcf	status, 5	;RP0=0, select bank0
 10268  0293  1303               	bcf	status, 6	;RP1=0, select bank0
 10269  0294  0830               	movf	(0+(?___awdiv)),w
 10270  0295  3E43               	addlw	low(043h)
 10271  0296  00C1               	movwf	(?_convert)
 10272  0297  0831               	movf	(1+(?___awdiv)),w
 10273  0298  1803               	skipnc
 10274  0299  3E01               	addlw	1
 10275  029A  3E00               	addlw	high(043h)
 10276  029B  00C2               	movwf	1+(?_convert)
 10277  029C  2BC7               	goto	l5065
 10278                           	
 10279  029D                     l12310:	
 10280  029D  2BC7               	goto	l5065
 10281                           	
 10282  029E                     l12312:	
 10283  029E  2BC7               	goto	l5065
 10284                           	line	18
 10285                           	
 10286  029F                     l5069:	
 10287                           	
 10288  029F                     l12314:	
 10289                           ;ir.c: 18: else if(adc_value < 256)
 10290  029F  1283               	bcf	status, 5	;RP0=0, select bank0
 10291  02A0  1303               	bcf	status, 6	;RP1=0, select bank0
 10292  02A1  0842               	movf	(convert@adc_value+1),w
 10293  02A2  3A80               	xorlw	80h
 10294  02A3  00FF               	movwf	btemp+1
 10295  02A4  3081               	movlw	(high(0100h))^80h
 10296  02A5  027F               	subwf	btemp+1,w
 10297  02A6  1D03               	skipz
 10298  02A7  2AAA               	goto	u6365
 10299  02A8  3000               	movlw	low(0100h)
 10300  02A9  0241               	subwf	(convert@adc_value),w
 10301  02AA                     u6365:
 10302                           
 10303  02AA  1803               	skipnc
 10304  02AB  2AAD               	goto	u6361
 10305  02AC  2AAE               	goto	u6360
 10306  02AD                     u6361:
 10307  02AD  2AE6               	goto	l12322
 10308  02AE                     u6360:
 10309                           	line	19
 10310                           	
 10311  02AE                     l12316:	
 10312                           ;ir.c: 19: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
 10313  02AE  3048               	movlw	low(048h)
 10314  02AF  1283               	bcf	status, 5	;RP0=0, select bank0
 10315  02B0  1303               	bcf	status, 6	;RP1=0, select bank0
 10316  02B1  00B0               	movwf	(?___awdiv)
 10317  02B2  3000               	movlw	high(048h)
 10318  02B3  00B1               	movwf	((?___awdiv))+1
 10319  02B4  0941               	comf	(convert@adc_value),w
 10320  02B5  00C3               	movwf	(??_convert+0)+0
 10321  02B6  0942               	comf	(convert@adc_value+1),w
 10322  02B7  00C4               	movwf	((??_convert+0)+0+1)
 10323  02B8  0AC3               	incf	(??_convert+0)+0,f
 10324  02B9  1903               	skipnz
 10325  02BA  0AC4               	incf	((??_convert+0)+0+1),f
 10326  02BB  0843               	movf	0+(??_convert+0)+0,w
 10327  02BC  3E00               	addlw	low(0100h)
 10328  02BD  00AA               	movwf	(?___wmul)
 10329  02BE  0844               	movf	1+(??_convert+0)+0,w
 10330  02BF  1803               	skipnc
 10331  02C0  3E01               	addlw	1
 10332  02C1  3E01               	addlw	high(0100h)
 10333  02C2  00AB               	movwf	1+(?___wmul)
 10334  02C3  3014               	movlw	low(014h)
 10335  02C4  00AC               	movwf	0+(?___wmul)+02h
 10336  02C5  3000               	movlw	high(014h)
 10337  02C6  00AD               	movwf	(0+(?___wmul)+02h)+1
 10338  02C7  160A  118A  23E9   	fcall	___wmul
              120A  118A         
 10339  02CC  1283               	bcf	status, 5	;RP0=0, select bank0
 10340  02CD  1303               	bcf	status, 6	;RP1=0, select bank0
 10341  02CE  082B               	movf	(1+(?___wmul)),w
 10342  02CF  01B3               	clrf	1+(?___awdiv)+02h
 10343  02D0  07B3               	addwf	1+(?___awdiv)+02h
 10344  02D1  082A               	movf	(0+(?___wmul)),w
 10345  02D2  01B2               	clrf	0+(?___awdiv)+02h
 10346  02D3  07B2               	addwf	0+(?___awdiv)+02h
 10347                           
 10348  02D4  120A  158A  2139   	fcall	___awdiv
              120A  118A         
 10349  02D9  1283               	bcf	status, 5	;RP0=0, select bank0
 10350  02DA  1303               	bcf	status, 6	;RP1=0, select bank0
 10351  02DB  0830               	movf	(0+(?___awdiv)),w
 10352  02DC  3E2E               	addlw	low(02Eh)
 10353  02DD  00C1               	movwf	(?_convert)
 10354  02DE  0831               	movf	(1+(?___awdiv)),w
 10355  02DF  1803               	skipnc
 10356  02E0  3E01               	addlw	1
 10357  02E1  3E00               	addlw	high(02Eh)
 10358  02E2  00C2               	movwf	1+(?_convert)
 10359  02E3  2BC7               	goto	l5065
 10360                           	
 10361  02E4                     l12318:	
 10362  02E4  2BC7               	goto	l5065
 10363                           	
 10364  02E5                     l12320:	
 10365  02E5  2BC7               	goto	l5065
 10366                           	line	20
 10367                           	
 10368  02E6                     l5071:	
 10369                           	
 10370  02E6                     l12322:	
 10371                           ;ir.c: 20: else if(adc_value < 317)
 10372  02E6  1283               	bcf	status, 5	;RP0=0, select bank0
 10373  02E7  1303               	bcf	status, 6	;RP1=0, select bank0
 10374  02E8  0842               	movf	(convert@adc_value+1),w
 10375  02E9  3A80               	xorlw	80h
 10376  02EA  00FF               	movwf	btemp+1
 10377  02EB  3081               	movlw	(high(013Dh))^80h
 10378  02EC  027F               	subwf	btemp+1,w
 10379  02ED  1D03               	skipz
 10380  02EE  2AF1               	goto	u6375
 10381  02EF  303D               	movlw	low(013Dh)
 10382  02F0  0241               	subwf	(convert@adc_value),w
 10383  02F1                     u6375:
 10384                           
 10385  02F1  1803               	skipnc
 10386  02F2  2AF4               	goto	u6371
 10387  02F3  2AF5               	goto	u6370
 10388  02F4                     u6371:
 10389  02F4  2B2D               	goto	l12330
 10390  02F5                     u6370:
 10391                           	line	21
 10392                           	
 10393  02F5                     l12324:	
 10394                           ;ir.c: 21: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
 10395  02F5  303D               	movlw	low(03Dh)
 10396  02F6  1283               	bcf	status, 5	;RP0=0, select bank0
 10397  02F7  1303               	bcf	status, 6	;RP1=0, select bank0
 10398  02F8  00B0               	movwf	(?___awdiv)
 10399  02F9  3000               	movlw	high(03Dh)
 10400  02FA  00B1               	movwf	((?___awdiv))+1
 10401  02FB  0941               	comf	(convert@adc_value),w
 10402  02FC  00C3               	movwf	(??_convert+0)+0
 10403  02FD  0942               	comf	(convert@adc_value+1),w
 10404  02FE  00C4               	movwf	((??_convert+0)+0+1)
 10405  02FF  0AC3               	incf	(??_convert+0)+0,f
 10406  0300  1903               	skipnz
 10407  0301  0AC4               	incf	((??_convert+0)+0+1),f
 10408  0302  0843               	movf	0+(??_convert+0)+0,w
 10409  0303  3E3D               	addlw	low(013Dh)
 10410  0304  00AA               	movwf	(?___wmul)
 10411  0305  0844               	movf	1+(??_convert+0)+0,w
 10412  0306  1803               	skipnc
 10413  0307  3E01               	addlw	1
 10414  0308  3E01               	addlw	high(013Dh)
 10415  0309  00AB               	movwf	1+(?___wmul)
 10416  030A  300A               	movlw	low(0Ah)
 10417  030B  00AC               	movwf	0+(?___wmul)+02h
 10418  030C  3000               	movlw	high(0Ah)
 10419  030D  00AD               	movwf	(0+(?___wmul)+02h)+1
 10420  030E  160A  118A  23E9   	fcall	___wmul
              120A  118A         
 10421  0313  1283               	bcf	status, 5	;RP0=0, select bank0
 10422  0314  1303               	bcf	status, 6	;RP1=0, select bank0
 10423  0315  082B               	movf	(1+(?___wmul)),w
 10424  0316  01B3               	clrf	1+(?___awdiv)+02h
 10425  0317  07B3               	addwf	1+(?___awdiv)+02h
 10426  0318  082A               	movf	(0+(?___wmul)),w
 10427  0319  01B2               	clrf	0+(?___awdiv)+02h
 10428  031A  07B2               	addwf	0+(?___awdiv)+02h
 10429                           
 10430  031B  120A  158A  2139   	fcall	___awdiv
              120A  118A         
 10431  0320  1283               	bcf	status, 5	;RP0=0, select bank0
 10432  0321  1303               	bcf	status, 6	;RP1=0, select bank0
 10433  0322  0830               	movf	(0+(?___awdiv)),w
 10434  0323  3E25               	addlw	low(025h)
 10435  0324  00C1               	movwf	(?_convert)
 10436  0325  0831               	movf	(1+(?___awdiv)),w
 10437  0326  1803               	skipnc
 10438  0327  3E01               	addlw	1
 10439  0328  3E00               	addlw	high(025h)
 10440  0329  00C2               	movwf	1+(?_convert)
 10441  032A  2BC7               	goto	l5065
 10442                           	
 10443  032B                     l12326:	
 10444  032B  2BC7               	goto	l5065
 10445                           	
 10446  032C                     l12328:	
 10447  032C  2BC7               	goto	l5065
 10448                           	line	22
 10449                           	
 10450  032D                     l5073:	
 10451                           	
 10452  032D                     l12330:	
 10453                           ;ir.c: 22: else if(adc_value < 410)
 10454  032D  1283               	bcf	status, 5	;RP0=0, select bank0
 10455  032E  1303               	bcf	status, 6	;RP1=0, select bank0
 10456  032F  0842               	movf	(convert@adc_value+1),w
 10457  0330  3A80               	xorlw	80h
 10458  0331  00FF               	movwf	btemp+1
 10459  0332  3081               	movlw	(high(019Ah))^80h
 10460  0333  027F               	subwf	btemp+1,w
 10461  0334  1D03               	skipz
 10462  0335  2B38               	goto	u6385
 10463  0336  309A               	movlw	low(019Ah)
 10464  0337  0241               	subwf	(convert@adc_value),w
 10465  0338                     u6385:
 10466                           
 10467  0338  1803               	skipnc
 10468  0339  2B3B               	goto	u6381
 10469  033A  2B3C               	goto	u6380
 10470  033B                     u6381:
 10471  033B  2B74               	goto	l12338
 10472  033C                     u6380:
 10473                           	line	23
 10474                           	
 10475  033C                     l12332:	
 10476                           ;ir.c: 23: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
 10477  033C  305D               	movlw	low(05Dh)
 10478  033D  1283               	bcf	status, 5	;RP0=0, select bank0
 10479  033E  1303               	bcf	status, 6	;RP1=0, select bank0
 10480  033F  00B0               	movwf	(?___awdiv)
 10481  0340  3000               	movlw	high(05Dh)
 10482  0341  00B1               	movwf	((?___awdiv))+1
 10483  0342  0941               	comf	(convert@adc_value),w
 10484  0343  00C3               	movwf	(??_convert+0)+0
 10485  0344  0942               	comf	(convert@adc_value+1),w
 10486  0345  00C4               	movwf	((??_convert+0)+0+1)
 10487  0346  0AC3               	incf	(??_convert+0)+0,f
 10488  0347  1903               	skipnz
 10489  0348  0AC4               	incf	((??_convert+0)+0+1),f
 10490  0349  0843               	movf	0+(??_convert+0)+0,w
 10491  034A  3E9A               	addlw	low(019Ah)
 10492  034B  00AA               	movwf	(?___wmul)
 10493  034C  0844               	movf	1+(??_convert+0)+0,w
 10494  034D  1803               	skipnc
 10495  034E  3E01               	addlw	1
 10496  034F  3E01               	addlw	high(019Ah)
 10497  0350  00AB               	movwf	1+(?___wmul)
 10498  0351  300A               	movlw	low(0Ah)
 10499  0352  00AC               	movwf	0+(?___wmul)+02h
 10500  0353  3000               	movlw	high(0Ah)
 10501  0354  00AD               	movwf	(0+(?___wmul)+02h)+1
 10502  0355  160A  118A  23E9   	fcall	___wmul
              120A  118A         
 10503  035A  1283               	bcf	status, 5	;RP0=0, select bank0
 10504  035B  1303               	bcf	status, 6	;RP1=0, select bank0
 10505  035C  082B               	movf	(1+(?___wmul)),w
 10506  035D  01B3               	clrf	1+(?___awdiv)+02h
 10507  035E  07B3               	addwf	1+(?___awdiv)+02h
 10508  035F  082A               	movf	(0+(?___wmul)),w
 10509  0360  01B2               	clrf	0+(?___awdiv)+02h
 10510  0361  07B2               	addwf	0+(?___awdiv)+02h
 10511                           
 10512  0362  120A  158A  2139   	fcall	___awdiv
              120A  118A         
 10513  0367  1283               	bcf	status, 5	;RP0=0, select bank0
 10514  0368  1303               	bcf	status, 6	;RP1=0, select bank0
 10515  0369  0830               	movf	(0+(?___awdiv)),w
 10516  036A  3E1C               	addlw	low(01Ch)
 10517  036B  00C1               	movwf	(?_convert)
 10518  036C  0831               	movf	(1+(?___awdiv)),w
 10519  036D  1803               	skipnc
 10520  036E  3E01               	addlw	1
 10521  036F  3E00               	addlw	high(01Ch)
 10522  0370  00C2               	movwf	1+(?_convert)
 10523  0371  2BC7               	goto	l5065
 10524                           	
 10525  0372                     l12334:	
 10526  0372  2BC7               	goto	l5065
 10527                           	
 10528  0373                     l12336:	
 10529  0373  2BC7               	goto	l5065
 10530                           	line	24
 10531                           	
 10532  0374                     l5075:	
 10533                           	
 10534  0374                     l12338:	
 10535                           ;ir.c: 24: else if(adc_value < 522)
 10536  0374  1283               	bcf	status, 5	;RP0=0, select bank0
 10537  0375  1303               	bcf	status, 6	;RP1=0, select bank0
 10538  0376  0842               	movf	(convert@adc_value+1),w
 10539  0377  3A80               	xorlw	80h
 10540  0378  00FF               	movwf	btemp+1
 10541  0379  3082               	movlw	(high(020Ah))^80h
 10542  037A  027F               	subwf	btemp+1,w
 10543  037B  1D03               	skipz
 10544  037C  2B7F               	goto	u6395
 10545  037D  300A               	movlw	low(020Ah)
 10546  037E  0241               	subwf	(convert@adc_value),w
 10547  037F                     u6395:
 10548                           
 10549  037F  1803               	skipnc
 10550  0380  2B82               	goto	u6391
 10551  0381  2B83               	goto	u6390
 10552  0382                     u6391:
 10553  0382  2BBB               	goto	l12346
 10554  0383                     u6390:
 10555                           	line	25
 10556                           	
 10557  0383                     l12340:	
 10558                           ;ir.c: 25: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
 10559  0383  3070               	movlw	low(070h)
 10560  0384  1283               	bcf	status, 5	;RP0=0, select bank0
 10561  0385  1303               	bcf	status, 6	;RP1=0, select bank0
 10562  0386  00B0               	movwf	(?___awdiv)
 10563  0387  3000               	movlw	high(070h)
 10564  0388  00B1               	movwf	((?___awdiv))+1
 10565  0389  0941               	comf	(convert@adc_value),w
 10566  038A  00C3               	movwf	(??_convert+0)+0
 10567  038B  0942               	comf	(convert@adc_value+1),w
 10568  038C  00C4               	movwf	((??_convert+0)+0+1)
 10569  038D  0AC3               	incf	(??_convert+0)+0,f
 10570  038E  1903               	skipnz
 10571  038F  0AC4               	incf	((??_convert+0)+0+1),f
 10572  0390  0843               	movf	0+(??_convert+0)+0,w
 10573  0391  3E0A               	addlw	low(020Ah)
 10574  0392  00AA               	movwf	(?___wmul)
 10575  0393  0844               	movf	1+(??_convert+0)+0,w
 10576  0394  1803               	skipnc
 10577  0395  3E01               	addlw	1
 10578  0396  3E02               	addlw	high(020Ah)
 10579  0397  00AB               	movwf	1+(?___wmul)
 10580  0398  300A               	movlw	low(0Ah)
 10581  0399  00AC               	movwf	0+(?___wmul)+02h
 10582  039A  3000               	movlw	high(0Ah)
 10583  039B  00AD               	movwf	(0+(?___wmul)+02h)+1
 10584  039C  160A  118A  23E9   	fcall	___wmul
              120A  118A         
 10585  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
 10586  03A2  1303               	bcf	status, 6	;RP1=0, select bank0
 10587  03A3  082B               	movf	(1+(?___wmul)),w
 10588  03A4  01B3               	clrf	1+(?___awdiv)+02h
 10589  03A5  07B3               	addwf	1+(?___awdiv)+02h
 10590  03A6  082A               	movf	(0+(?___wmul)),w
 10591  03A7  01B2               	clrf	0+(?___awdiv)+02h
 10592  03A8  07B2               	addwf	0+(?___awdiv)+02h
 10593                           
 10594  03A9  120A  158A  2139   	fcall	___awdiv
              120A  118A         
 10595  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
 10596  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
 10597  03B0  0830               	movf	(0+(?___awdiv)),w
 10598  03B1  3E12               	addlw	low(012h)
 10599  03B2  00C1               	movwf	(?_convert)
 10600  03B3  0831               	movf	(1+(?___awdiv)),w
 10601  03B4  1803               	skipnc
 10602  03B5  3E01               	addlw	1
 10603  03B6  3E00               	addlw	high(012h)
 10604  03B7  00C2               	movwf	1+(?_convert)
 10605  03B8  2BC7               	goto	l5065
 10606                           	
 10607  03B9                     l12342:	
 10608  03B9  2BC7               	goto	l5065
 10609                           	
 10610  03BA                     l12344:	
 10611  03BA  2BC7               	goto	l5065
 10612                           	line	26
 10613                           	
 10614  03BB                     l5077:	
 10615                           	
 10616  03BB                     l12346:	
 10617                           ;ir.c: 26: else return 0;
 10618  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
 10619  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
 10620  03BD  01C1               	clrf	(?_convert)
 10621  03BE  01C2               	clrf	(?_convert+1)
 10622  03BF  2BC7               	goto	l5065
 10623                           	
 10624  03C0                     l12348:	
 10625  03C0  2BC7               	goto	l5065
 10626                           	
 10627  03C1                     l5078:	
 10628  03C1  2BC7               	goto	l5065
 10629                           	
 10630  03C2                     l5076:	
 10631  03C2  2BC7               	goto	l5065
 10632                           	
 10633  03C3                     l5074:	
 10634  03C3  2BC7               	goto	l5065
 10635                           	
 10636  03C4                     l5072:	
 10637  03C4  2BC7               	goto	l5065
 10638                           	
 10639  03C5                     l5070:	
 10640  03C5  2BC7               	goto	l5065
 10641                           	
 10642  03C6                     l5068:	
 10643  03C6  2BC7               	goto	l5065
 10644                           	
 10645  03C7                     l5066:	
 10646                           	line	27
 10647                           	
 10648  03C7                     l5065:	
 10649  03C7  0008               	return
 10650                           	opt stack 0
 10651                           GLOBAL	__end_of_convert
 10652  03C8                     	__end_of_convert:
 10653 ;; =============== function _convert ends ============
 10654                           
 10655                           	signat	_convert,4218
 10656                           	global	_play_iCreate_song
 10657                           psect	text2025,local,class=CODE,delta=2
 10658                           global __ptext2025
 10659  1167                     __ptext2025:
 10660                           
 10661 ;; *************** function _play_iCreate_song *****************
 10662 ;; Defined at:
 10663 ;;		line 25 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\song
       s.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;  song            1    wreg     unsigned char 
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;  song            1   12[BANK0 ] unsigned char 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;		None               void
 10670 ;; Registers used:
 10671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10677 ;;      Params:         0       0       0       0       0
 10678 ;;      Locals:         0       1       0       0       0
 10679 ;;      Temps:          0       0       0       0       0
 10680 ;;      Totals:         0       1       0       0       0
 10681 ;;Total ram usage:        1 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    3
 10684 ;; This function calls:
 10685 ;;		_ser_putch
 10686 ;; This function is called by:
 10687 ;;		_checkForFinalDestination
 10688 ;;		_lookForVictim
 10689 ;;		_checkIfHome
 10690 ;;		_main
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           psect	text2025
 10694                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\songs.c"
 10695                           	line	25
 10696                           	global	__size_of_play_iCreate_song
 10697  0012                     	__size_of_play_iCreate_song	equ	__end_of_play_iCreate_song-_play_iCreate_song
 10698                           	
 10699  1167                     _play_iCreate_song:	
 10700                           	opt	stack 3
 10701                           ; Regs used in _play_iCreate_song: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10702                           ;play_iCreate_song@song stored from wreg
 10703  1167  1283               	bcf	status, 5	;RP0=0, select bank0
 10704  1168  1303               	bcf	status, 6	;RP1=0, select bank0
 10705  1169  00AC               	movwf	(play_iCreate_song@song)
 10706                           	line	26
 10707                           	
 10708  116A                     l12288:	
 10709                           ;songs.c: 26: ser_putch(141);
 10710  116A  308D               	movlw	(08Dh)
 10711  116B  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
 10712                           	line	27
 10713                           ;songs.c: 27: ser_putch(song);
 10714  1170  1283               	bcf	status, 5	;RP0=0, select bank0
 10715  1171  1303               	bcf	status, 6	;RP1=0, select bank0
 10716  1172  082C               	movf	(play_iCreate_song@song),w
 10717  1173  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
 10718                           	line	28
 10719                           	
 10720  1178                     l4372:	
 10721  1178  0008               	return
 10722                           	opt stack 0
 10723                           GLOBAL	__end_of_play_iCreate_song
 10724  1179                     	__end_of_play_iCreate_song:
 10725 ;; =============== function _play_iCreate_song ends ============
 10726                           
 10727                           	signat	_play_iCreate_song,4216
 10728                           	global	_ser_putArr
 10729                           psect	text2026,local,class=CODE,delta=2
 10730                           global __ptext2026
 10731  151A                     __ptext2026:
 10732                           
 10733 ;; *************** function _ser_putArr *****************
 10734 ;; Defined at:
 10735 ;;		line 73 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ser.
       c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  array           2   12[BANK0 ] PTR unsigned char 
 10738 ;;		 -> beep(5), champions(21), lookingForU2(29), superMarioBros(25), 
 10739 ;;		 -> finalCountdown(27), 
 10740 ;;  length          2   14[BANK0 ] int 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;  i               2   19[BANK0 ] int 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;		None               void
 10745 ;; Registers used:
 10746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10752 ;;      Params:         0       4       0       0       0
 10753 ;;      Locals:         0       2       0       0       0
 10754 ;;      Temps:          0       3       0       0       0
 10755 ;;      Totals:         0       9       0       0       0
 10756 ;;Total ram usage:        9 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    3
 10759 ;; This function calls:
 10760 ;;		_ser_putch
 10761 ;; This function is called by:
 10762 ;;		_initSongs
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           psect	text2026
 10766                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ser.c"
 10767                           	line	73
 10768                           	global	__size_of_ser_putArr
 10769  0039                     	__size_of_ser_putArr	equ	__end_of_ser_putArr-_ser_putArr
 10770                           	
 10771  151A                     _ser_putArr:	
 10772                           	opt	stack 2
 10773                           ; Regs used in _ser_putArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10774                           	line	74
 10775                           	
 10776  151A                     l12280:	
 10777                           ;ser.c: 74: for(int i =0; i< length; i++)
 10778  151A  1283               	bcf	status, 5	;RP0=0, select bank0
 10779  151B  1303               	bcf	status, 6	;RP1=0, select bank0
 10780  151C  01B3               	clrf	(ser_putArr@i)
 10781  151D  01B4               	clrf	(ser_putArr@i+1)
 10782  151E  2D43               	goto	l12286
 10783                           	line	75
 10784                           	
 10785  151F                     l3643:	
 10786                           	line	76
 10787                           	
 10788  151F                     l12282:	
 10789                           ;ser.c: 75: {
 10790                           ;ser.c: 76: ser_putch(array[i]);
 10791  151F  1283               	bcf	status, 5	;RP0=0, select bank0
 10792  1520  1303               	bcf	status, 6	;RP1=0, select bank0
 10793  1521  0833               	movf	(ser_putArr@i),w
 10794  1522  072C               	addwf	(ser_putArr@array),w
 10795  1523  00B1               	movwf	(??_ser_putArr+1)+0
 10796  1524  082D               	movf	(ser_putArr@array+1),w
 10797  1525  00B0               	movwf	(??_ser_putArr+0)+0
 10798  1526  1803               	skipnc
 10799  1527  0AB0               	incf	(??_ser_putArr+0)+0,f
 10800  1528  1FB3               	btfss	(ser_putArr@i),7
 10801  1529  2D2B               	goto	u6310
 10802  152A  03B0               	decf	(??_ser_putArr+0)+0,f
 10803  152B                     u6310:
 10804  152B  1283               	bcf	status, 5	;RP0=0, select bank0
 10805  152C  1303               	bcf	status, 6	;RP1=0, select bank0
 10806  152D  0830               	movf	(??_ser_putArr+0)+0,w
 10807  152E  00B2               	movwf	0+((??_ser_putArr+1)+0)+1
 10808  152F  0831               	movf	0+(??_ser_putArr+1)+0,w
 10809  1530  0084               	movwf	fsr0
 10810  1531  1783               	bsf	status,7
 10811  1532  1C32               	btfss	1+(??_ser_putArr+1)+0,0
 10812  1533  1383               	bcf	status,7
 10813  1534  0800               	movf	indf,w
 10814  1535  160A  118A  226E   	fcall	_ser_putch
              160A  118A         
 10815                           	line	74
 10816                           	
 10817  153A                     l12284:	
 10818  153A  3001               	movlw	low(01h)
 10819  153B  1283               	bcf	status, 5	;RP0=0, select bank0
 10820  153C  1303               	bcf	status, 6	;RP1=0, select bank0
 10821  153D  07B3               	addwf	(ser_putArr@i),f
 10822  153E  1803               	skipnc
 10823  153F  0AB4               	incf	(ser_putArr@i+1),f
 10824  1540  3000               	movlw	high(01h)
 10825  1541  07B4               	addwf	(ser_putArr@i+1),f
 10826  1542  2D43               	goto	l12286
 10827                           	
 10828  1543                     l3642:	
 10829                           	
 10830  1543                     l12286:	
 10831  1543  0834               	movf	(ser_putArr@i+1),w
 10832  1544  3A80               	xorlw	80h
 10833  1545  00B0               	movwf	(??_ser_putArr+0)+0
 10834  1546  082F               	movf	(ser_putArr@length+1),w
 10835  1547  3A80               	xorlw	80h
 10836  1548  0230               	subwf	(??_ser_putArr+0)+0,w
 10837  1549  1D03               	skipz
 10838  154A  2D4D               	goto	u6325
 10839  154B  082E               	movf	(ser_putArr@length),w
 10840  154C  0233               	subwf	(ser_putArr@i),w
 10841  154D                     u6325:
 10842                           
 10843  154D  1C03               	skipc
 10844  154E  2D50               	goto	u6321
 10845  154F  2D51               	goto	u6320
 10846  1550                     u6321:
 10847  1550  2D1F               	goto	l12282
 10848  1551                     u6320:
 10849  1551  2D52               	goto	l3645
 10850                           	
 10851  1552                     l3644:	
 10852                           	line	78
 10853                           	
 10854  1552                     l3645:	
 10855  1552  0008               	return
 10856                           	opt stack 0
 10857                           GLOBAL	__end_of_ser_putArr
 10858  1553                     	__end_of_ser_putArr:
 10859 ;; =============== function _ser_putArr ends ============
 10860                           
 10861                           	signat	_ser_putArr,8312
 10862                           	global	_ser_getch
 10863                           psect	text2027,local,class=CODE,delta=2
 10864                           global __ptext2027
 10865  12B0                     __ptext2027:
 10866                           
 10867 ;; *************** function _ser_getch *****************
 10868 ;; Defined at:
 10869 ;;		line 58 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ser.
       c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;		None
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;  c               1   11[BANK0 ] unsigned char 
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  1    wreg      unsigned char 
 10876 ;; Registers used:
 10877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10883 ;;      Params:         0       0       0       0       0
 10884 ;;      Locals:         0       1       0       0       0
 10885 ;;      Temps:          0       1       0       0       0
 10886 ;;      Totals:         0       2       0       0       0
 10887 ;;Total ram usage:        2 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; Hardware stack levels required when called:    3
 10890 ;; This function calls:
 10891 ;;		_ser_isrx
 10892 ;; This function is called by:
 10893 ;;		_driveForDistance
 10894 ;;		_lookForVictim
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           psect	text2027
 10898                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ser.c"
 10899                           	line	58
 10900                           	global	__size_of_ser_getch
 10901  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
 10902                           	
 10903  12B0                     _ser_getch:	
 10904                           	opt	stack 2
 10905                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10906                           	line	61
 10907                           	
 10908  12B0                     l12264:	
 10909                           ;ser.c: 59: unsigned char c;
 10910                           ;ser.c: 61: while (ser_isrx()==0)
 10911  12B0  2AB2               	goto	l12266
 10912                           	
 10913  12B1                     l3637:	
 10914                           	line	62
 10915                           ;ser.c: 62: continue;
 10916  12B1  2AB2               	goto	l12266
 10917                           	
 10918  12B2                     l3636:	
 10919                           	line	61
 10920                           	
 10921  12B2                     l12266:	
 10922  12B2  160A  118A  21C9   	fcall	_ser_isrx
              160A  118A         
 10923  12B7  1C03               	btfss	status,0
 10924  12B8  2ABA               	goto	u6301
 10925  12B9  2ABB               	goto	u6300
 10926  12BA                     u6301:
 10927  12BA  2AB2               	goto	l12266
 10928  12BB                     u6300:
 10929                           	
 10930  12BB                     l3638:	
 10931                           	line	64
 10932                           ;ser.c: 64: GIE=0;
 10933  12BB  138B               	bcf	(95/8),(95)&7
 10934                           	line	65
 10935                           	
 10936  12BC                     l12268:	
 10937                           ;ser.c: 65: c=rxfifo[rxoptr];
 10938  12BC  0879               	movf	(_rxoptr),w
 10939  12BD  3EA0               	addlw	_rxfifo&0ffh
 10940  12BE  0084               	movwf	fsr0
 10941  12BF  1383               	bcf	status, 7	;select IRP bank1
 10942  12C0  0800               	movf	indf,w
 10943  12C1  1283               	bcf	status, 5	;RP0=0, select bank0
 10944  12C2  1303               	bcf	status, 6	;RP1=0, select bank0
 10945  12C3  00AA               	movwf	(??_ser_getch+0)+0
 10946  12C4  082A               	movf	(??_ser_getch+0)+0,w
 10947  12C5  00AB               	movwf	(ser_getch@c)
 10948                           	line	66
 10949                           	
 10950  12C6                     l12270:	
 10951                           ;ser.c: 66: ++rxoptr;
 10952  12C6  3001               	movlw	(01h)
 10953  12C7  00AA               	movwf	(??_ser_getch+0)+0
 10954  12C8  082A               	movf	(??_ser_getch+0)+0,w
 10955  12C9  07F9               	addwf	(_rxoptr),f	;volatile
 10956                           	line	67
 10957                           	
 10958  12CA                     l12272:	
 10959                           ;ser.c: 67: rxoptr &= (16-1);
 10960  12CA  300F               	movlw	(0Fh)
 10961  12CB  00AA               	movwf	(??_ser_getch+0)+0
 10962  12CC  082A               	movf	(??_ser_getch+0)+0,w
 10963  12CD  05F9               	andwf	(_rxoptr),f	;volatile
 10964                           	line	68
 10965                           	
 10966  12CE                     l12274:	
 10967                           ;ser.c: 68: GIE=1;
 10968  12CE  178B               	bsf	(95/8),(95)&7
 10969                           	line	69
 10970                           	
 10971  12CF                     l12276:	
 10972                           ;ser.c: 69: return c;
 10973  12CF  082B               	movf	(ser_getch@c),w
 10974  12D0  2AD1               	goto	l3639
 10975                           	
 10976  12D1                     l12278:	
 10977                           	line	70
 10978                           	
 10979  12D1                     l3639:	
 10980  12D1  0008               	return
 10981                           	opt stack 0
 10982                           GLOBAL	__end_of_ser_getch
 10983  12D2                     	__end_of_ser_getch:
 10984 ;; =============== function _ser_getch ends ============
 10985                           
 10986                           	signat	_ser_getch,89
 10987                           	global	_lcd_write_data
 10988                           psect	text2028,local,class=CODE,delta=2
 10989                           global __ptext2028
 10990  1179                     __ptext2028:
 10991                           
 10992 ;; *************** function _lcd_write_data *****************
 10993 ;; Defined at:
 10994 ;;		line 20 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\lcd.
       c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;  databyte        1    wreg     unsigned char 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  databyte        1   12[BANK0 ] unsigned char 
 10999 ;; Return value:  Size  Location     Type
 11000 ;;		None               void
 11001 ;; Registers used:
 11002 ;;		wreg
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11008 ;;      Params:         0       0       0       0       0
 11009 ;;      Locals:         0       1       0       0       0
 11010 ;;      Temps:          0       2       0       0       0
 11011 ;;      Totals:         0       3       0       0       0
 11012 ;;Total ram usage:        3 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    2
 11015 ;; This function calls:
 11016 ;;		Nothing
 11017 ;; This function is called by:
 11018 ;;		_lcd_write_string
 11019 ;;		_lcd_write_1_digit_bcd
 11020 ;;		_goBackward
 11021 ;;		_goForward
 11022 ;;		_goLeft
 11023 ;;		_goReverse
 11024 ;;		_goRight
 11025 ;;		_checkForFinalDestination
 11026 ;;		_lookForVictim
 11027 ;;		_findWalls
 11028 ;;		_updateLocation
 11029 ;;		_main
 11030 ;;		_lcd_write_3_digit_bcd
 11031 ;; This function uses a non-reentrant model
 11032 ;;
 11033                           psect	text2028
 11034                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\lcd.c"
 11035                           	line	20
 11036                           	global	__size_of_lcd_write_data
 11037  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
 11038                           	
 11039  1179                     _lcd_write_data:	
 11040                           	opt	stack 3
 11041                           ; Regs used in _lcd_write_data: [wreg]
 11042                           ;lcd_write_data@databyte stored from wreg
 11043  1179  1283               	bcf	status, 5	;RP0=0, select bank0
 11044  117A  1303               	bcf	status, 6	;RP1=0, select bank0
 11045  117B  00AC               	movwf	(lcd_write_data@databyte)
 11046                           	line	21
 11047                           	
 11048  117C                     l12256:	
 11049                           ;lcd.c: 21: RE2 = 0;
 11050  117C  1109               	bcf	(74/8),(74)&7
 11051                           	line	22
 11052                           ;lcd.c: 22: RE1 = 0;
 11053  117D  1089               	bcf	(73/8),(73)&7
 11054                           	line	23
 11055                           ;lcd.c: 23: RE0 = 1;
 11056  117E  1409               	bsf	(72/8),(72)&7
 11057                           	line	24
 11058                           	
 11059  117F                     l12258:	
 11060                           ;lcd.c: 24: PORTD = databyte;
 11061  117F  082C               	movf	(lcd_write_data@databyte),w
 11062  1180  0088               	movwf	(8)	;volatile
 11063                           	line	25
 11064                           	
 11065  1181                     l12260:	
 11066                           ;lcd.c: 25: RE2 = 1;
 11067  1181  1509               	bsf	(74/8),(74)&7
 11068                           	line	26
 11069                           	
 11070  1182                     l12262:	
 11071                           ;lcd.c: 26: RE2 = 0;
 11072  1182  1109               	bcf	(74/8),(74)&7
 11073                           	line	27
 11074                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
 11075                           	opt asmopt_off
 11076  1183  3007               movlw	7
 11077  1184  00AB               movwf	((??_lcd_write_data+0)+0+1),f
 11078  1185  307D               	movlw	125
 11079  1186  00AA               movwf	((??_lcd_write_data+0)+0),f
 11080  1187                     u7687:
 11081  1187  0BAA               	decfsz	((??_lcd_write_data+0)+0),f
 11082  1188  2987               	goto	u7687
 11083  1189  0BAB               	decfsz	((??_lcd_write_data+0)+0+1),f
 11084  118A  2987               	goto	u7687
 11085                           opt asmopt_on
 11086                           
 11087                           	line	28
 11088                           	
 11089  118B                     l2129:	
 11090  118B  0008               	return
 11091                           	opt stack 0
 11092                           GLOBAL	__end_of_lcd_write_data
 11093  118C                     	__end_of_lcd_write_data:
 11094 ;; =============== function _lcd_write_data ends ============
 11095                           
 11096                           	signat	_lcd_write_data,4216
 11097                           	global	_lcd_write_control
 11098                           psect	text2029,local,class=CODE,delta=2
 11099                           global __ptext2029
 11100  119F                     __ptext2029:
 11101                           
 11102 ;; *************** function _lcd_write_control *****************
 11103 ;; Defined at:
 11104 ;;		line 8 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\lcd.c
       "
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  databyte        1    wreg     unsigned char 
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;  databyte        1   12[BANK0 ] unsigned char 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;		None               void
 11111 ;; Registers used:
 11112 ;;		wreg
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11118 ;;      Params:         0       0       0       0       0
 11119 ;;      Locals:         0       1       0       0       0
 11120 ;;      Temps:          0       2       0       0       0
 11121 ;;      Totals:         0       3       0       0       0
 11122 ;;Total ram usage:        3 bytes
 11123 ;; Hardware stack levels used:    1
 11124 ;; Hardware stack levels required when called:    2
 11125 ;; This function calls:
 11126 ;;		Nothing
 11127 ;; This function is called by:
 11128 ;;		_lcd_set_cursor
 11129 ;;		_lcd_init
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           psect	text2029
 11133                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\lcd.c"
 11134                           	line	8
 11135                           	global	__size_of_lcd_write_control
 11136  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
 11137                           	
 11138  119F                     _lcd_write_control:	
 11139                           	opt	stack 3
 11140                           ; Regs used in _lcd_write_control: [wreg]
 11141                           ;lcd_write_control@databyte stored from wreg
 11142  119F  1283               	bcf	status, 5	;RP0=0, select bank0
 11143  11A0  1303               	bcf	status, 6	;RP1=0, select bank0
 11144  11A1  00AC               	movwf	(lcd_write_control@databyte)
 11145                           	line	9
 11146                           	
 11147  11A2                     l12248:	
 11148                           ;lcd.c: 9: RE2 = 0;
 11149  11A2  1109               	bcf	(74/8),(74)&7
 11150                           	line	10
 11151                           ;lcd.c: 10: RE1 = 0;
 11152  11A3  1089               	bcf	(73/8),(73)&7
 11153                           	line	11
 11154                           ;lcd.c: 11: RE0 = 0;
 11155  11A4  1009               	bcf	(72/8),(72)&7
 11156                           	line	12
 11157                           	
 11158  11A5                     l12250:	
 11159                           ;lcd.c: 12: PORTD = databyte;
 11160  11A5  082C               	movf	(lcd_write_control@databyte),w
 11161  11A6  0088               	movwf	(8)	;volatile
 11162                           	line	13
 11163                           	
 11164  11A7                     l12252:	
 11165                           ;lcd.c: 13: RE2 = 1;
 11166  11A7  1509               	bsf	(74/8),(74)&7
 11167                           	line	14
 11168                           	
 11169  11A8                     l12254:	
 11170                           ;lcd.c: 14: RE2 = 0;
 11171  11A8  1109               	bcf	(74/8),(74)&7
 11172                           	line	15
 11173                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
 11174                           	opt asmopt_off
 11175  11A9  300D               movlw	13
 11176  11AA  00AB               movwf	((??_lcd_write_control+0)+0+1),f
 11177  11AB  30FB               	movlw	251
 11178  11AC  00AA               movwf	((??_lcd_write_control+0)+0),f
 11179  11AD                     u7697:
 11180  11AD  0BAA               	decfsz	((??_lcd_write_control+0)+0),f
 11181  11AE  29AD               	goto	u7697
 11182  11AF  0BAB               	decfsz	((??_lcd_write_control+0)+0+1),f
 11183  11B0  29AD               	goto	u7697
 11184  11B1  29B2               	nop2
 11185                           opt asmopt_on
 11186                           
 11187                           	line	16
 11188                           	
 11189  11B2                     l2126:	
 11190  11B2  0008               	return
 11191                           	opt stack 0
 11192                           GLOBAL	__end_of_lcd_write_control
 11193  11B3                     	__end_of_lcd_write_control:
 11194 ;; =============== function _lcd_write_control ends ============
 11195                           
 11196                           	signat	_lcd_write_control,4216
 11197                           	global	_init_adc
 11198                           psect	text2030,local,class=CODE,delta=2
 11199                           global __ptext2030
 11200  11B3                     __ptext2030:
 11201                           
 11202 ;; *************** function _init_adc *****************
 11203 ;; Defined at:
 11204 ;;		line 48 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\adc.
       c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;		None
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;		None
 11209 ;; Return value:  Size  Location     Type
 11210 ;;		None               void
 11211 ;; Registers used:
 11212 ;;		wreg, status,2
 11213 ;; Tracked objects:
 11214 ;;		On entry : 0/0
 11215 ;;		On exit  : 0/0
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11218 ;;      Params:         0       0       0       0       0
 11219 ;;      Locals:         0       0       0       0       0
 11220 ;;      Temps:          0       1       0       0       0
 11221 ;;      Totals:         0       1       0       0       0
 11222 ;;Total ram usage:        1 bytes
 11223 ;; Hardware stack levels used:    1
 11224 ;; Hardware stack levels required when called:    2
 11225 ;; This function calls:
 11226 ;;		Nothing
 11227 ;; This function is called by:
 11228 ;;		_init
 11229 ;; This function uses a non-reentrant model
 11230 ;;
 11231                           psect	text2030
 11232                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\adc.c"
 11233                           	line	48
 11234                           	global	__size_of_init_adc
 11235  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 11236                           	
 11237  11B3                     _init_adc:	
 11238                           	opt	stack 4
 11239                           ; Regs used in _init_adc: [wreg+status,2]
 11240                           	line	50
 11241                           	
 11242  11B3                     l12238:	
 11243                           ;adc.c: 50: PORTA = 0;
 11244  11B3  1283               	bcf	status, 5	;RP0=0, select bank0
 11245  11B4  1303               	bcf	status, 6	;RP1=0, select bank0
 11246  11B5  0185               	clrf	(5)	;volatile
 11247                           	line	51
 11248                           	
 11249  11B6                     l12240:	
 11250                           ;adc.c: 51: TRISA = 0b00111111;
 11251  11B6  303F               	movlw	(03Fh)
 11252  11B7  1683               	bsf	status, 5	;RP0=1, select bank1
 11253  11B8  1303               	bcf	status, 6	;RP1=0, select bank1
 11254  11B9  0085               	movwf	(133)^080h	;volatile
 11255                           	line	54
 11256                           	
 11257  11BA                     l12242:	
 11258                           ;adc.c: 54: ADCON0 = 0b10100001;
 11259  11BA  30A1               	movlw	(0A1h)
 11260  11BB  1283               	bcf	status, 5	;RP0=0, select bank0
 11261  11BC  1303               	bcf	status, 6	;RP1=0, select bank0
 11262  11BD  009F               	movwf	(31)	;volatile
 11263                           	line	55
 11264                           	
 11265  11BE                     l12244:	
 11266                           ;adc.c: 55: ADCON1 = 0b00000010;
 11267  11BE  3002               	movlw	(02h)
 11268  11BF  1683               	bsf	status, 5	;RP0=1, select bank1
 11269  11C0  1303               	bcf	status, 6	;RP1=0, select bank1
 11270  11C1  009F               	movwf	(159)^080h	;volatile
 11271                           	line	57
 11272                           	
 11273  11C2                     l12246:	
 11274                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
 11275                           	opt asmopt_off
 11276  11C2  3053               movlw	83
 11277  11C3  1283               	bcf	status, 5	;RP0=0, select bank0
 11278  11C4  1303               	bcf	status, 6	;RP1=0, select bank0
 11279  11C5  00AA               movwf	(??_init_adc+0)+0,f
 11280  11C6                     u7707:
 11281  11C6  0BAA               decfsz	(??_init_adc+0)+0,f
 11282  11C7  29C6               	goto	u7707
 11283                           opt asmopt_on
 11284                           
 11285                           	line	58
 11286                           	
 11287  11C8                     l700:	
 11288  11C8  0008               	return
 11289                           	opt stack 0
 11290                           GLOBAL	__end_of_init_adc
 11291  11C9                     	__end_of_init_adc:
 11292 ;; =============== function _init_adc ends ============
 11293                           
 11294                           	signat	_init_adc,88
 11295                           	global	_adc_read
 11296                           psect	text2031,local,class=CODE,delta=2
 11297                           global __ptext2031
 11298  1553                     __ptext2031:
 11299                           
 11300 ;; *************** function _adc_read *****************
 11301 ;; Defined at:
 11302 ;;		line 62 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\adc.
       c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;		None
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;  adc_value       2   31[BANK0 ] volatile int 
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  2   25[BANK0 ] int 
 11309 ;; Registers used:
 11310 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11316 ;;      Params:         0       2       0       0       0
 11317 ;;      Locals:         0       2       0       0       0
 11318 ;;      Temps:          0       4       0       0       0
 11319 ;;      Totals:         0       8       0       0       0
 11320 ;;Total ram usage:        8 bytes
 11321 ;; Hardware stack levels used:    1
 11322 ;; Hardware stack levels required when called:    3
 11323 ;; This function calls:
 11324 ;;		___awdiv
 11325 ;; This function is called by:
 11326 ;;		_adc_read_channel
 11327 ;; This function uses a non-reentrant model
 11328 ;;
 11329                           psect	text2031
 11330                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\adc.c"
 11331                           	line	62
 11332                           	global	__size_of_adc_read
 11333  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 11334                           	
 11335  1553                     _adc_read:	
 11336                           	opt	stack 1
 11337                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11338                           	line	65
 11339                           	
 11340  1553                     l10892:	
 11341                           ;adc.c: 63: volatile int adc_value;
 11342                           ;adc.c: 65: ADRESH = 0;
 11343  1553  1283               	bcf	status, 5	;RP0=0, select bank0
 11344  1554  1303               	bcf	status, 6	;RP1=0, select bank0
 11345  1555  019E               	clrf	(30)	;volatile
 11346                           	line	66
 11347                           ;adc.c: 66: ADRESL = 0;
 11348  1556  1683               	bsf	status, 5	;RP0=1, select bank1
 11349  1557  1303               	bcf	status, 6	;RP1=0, select bank1
 11350  1558  019E               	clrf	(158)^080h	;volatile
 11351                           	line	68
 11352                           	
 11353  1559                     l10894:	
 11354                           ;adc.c: 68: GO = 1;
 11355  1559  1283               	bcf	status, 5	;RP0=0, select bank0
 11356  155A  1303               	bcf	status, 6	;RP1=0, select bank0
 11357  155B  151F               	bsf	(250/8),(250)&7
 11358                           	line	69
 11359                           ;adc.c: 69: while(GO) continue;
 11360  155C  2D5D               	goto	l703
 11361                           	
 11362  155D                     l704:	
 11363                           	
 11364  155D                     l703:	
 11365  155D  191F               	btfsc	(250/8),(250)&7
 11366  155E  2D60               	goto	u4471
 11367  155F  2D61               	goto	u4470
 11368  1560                     u4471:
 11369  1560  2D5D               	goto	l703
 11370  1561                     u4470:
 11371  1561  2D62               	goto	l10896
 11372                           	
 11373  1562                     l705:	
 11374                           	line	75
 11375                           	
 11376  1562                     l10896:	
 11377                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
 11378  1562  3040               	movlw	low(040h)
 11379  1563  00B0               	movwf	(?___awdiv)
 11380  1564  3000               	movlw	high(040h)
 11381  1565  00B1               	movwf	((?___awdiv))+1
 11382  1566  1683               	bsf	status, 5	;RP0=1, select bank1
 11383  1567  1303               	bcf	status, 6	;RP1=0, select bank1
 11384  1568  081E               	movf	(158)^080h,w	;volatile
 11385  1569  1283               	bcf	status, 5	;RP0=0, select bank0
 11386  156A  1303               	bcf	status, 6	;RP1=0, select bank0
 11387  156B  00BB               	movwf	(??_adc_read+0)+0
 11388  156C  01BC               	clrf	(??_adc_read+0)+0+1
 11389  156D  083B               	movf	0+(??_adc_read+0)+0,w
 11390  156E  00B2               	movwf	0+(?___awdiv)+02h
 11391  156F  083C               	movf	1+(??_adc_read+0)+0,w
 11392  1570  00B3               	movwf	1+(?___awdiv)+02h
 11393  1571  120A  158A  2139   	fcall	___awdiv
              160A  118A         
 11394  1576  1283               	bcf	status, 5	;RP0=0, select bank0
 11395  1577  1303               	bcf	status, 6	;RP1=0, select bank0
 11396  1578  081E               	movf	(30),w	;volatile
 11397  1579  00BD               	movwf	(??_adc_read+2)+0
 11398  157A  01BE               	clrf	(??_adc_read+2)+0+1
 11399  157B  3002               	movlw	02h
 11400  157C  00FF               	movwf	btemp+1
 11401  157D                     u4485:
 11402  157D  1003               	clrc
 11403  157E  0DBD               	rlf	(??_adc_read+2)+0,f
 11404  157F  0DBE               	rlf	(??_adc_read+2)+1,f
 11405  1580  0BFF               	decfsz	btemp+1,f
 11406  1581  2D7D               	goto	u4485
 11407  1582  0830               	movf	(0+(?___awdiv)),w
 11408  1583  073D               	addwf	0+(??_adc_read+2)+0,w
 11409  1584  00BF               	movwf	(adc_read@adc_value)	;volatile
 11410  1585  0831               	movf	(1+(?___awdiv)),w
 11411  1586  1803               	skipnc
 11412  1587  0A31               	incf	(1+(?___awdiv)),w
 11413  1588  073E               	addwf	1+(??_adc_read+2)+0,w
 11414  1589  00C0               	movwf	1+(adc_read@adc_value)	;volatile
 11415                           	line	77
 11416                           	
 11417  158A                     l10898:	
 11418                           ;adc.c: 77: return (adc_value);
 11419  158A  0840               	movf	(adc_read@adc_value+1),w	;volatile
 11420  158B  01BA               	clrf	(?_adc_read+1)
 11421  158C  07BA               	addwf	(?_adc_read+1)
 11422  158D  083F               	movf	(adc_read@adc_value),w	;volatile
 11423  158E  01B9               	clrf	(?_adc_read)
 11424  158F  07B9               	addwf	(?_adc_read)
 11425                           
 11426  1590  2D91               	goto	l706
 11427                           	
 11428  1591                     l10900:	
 11429                           	line	78
 11430                           	
 11431  1591                     l706:	
 11432  1591  0008               	return
 11433                           	opt stack 0
 11434                           GLOBAL	__end_of_adc_read
 11435  1592                     	__end_of_adc_read:
 11436 ;; =============== function _adc_read ends ============
 11437                           
 11438                           	signat	_adc_read,90
 11439                           	global	___awdiv
 11440                           psect	text2032,local,class=CODE,delta=2
 11441                           global __ptext2032
 11442  0939                     __ptext2032:
 11443                           
 11444 ;; *************** function ___awdiv *****************
 11445 ;; Defined at:
 11446 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\awdiv.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  divisor         2   16[BANK0 ] int 
 11449 ;;  dividend        2   18[BANK0 ] int 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  quotient        2   23[BANK0 ] int 
 11452 ;;  sign            1   22[BANK0 ] unsigned char 
 11453 ;;  counter         1   21[BANK0 ] unsigned char 
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  2   16[BANK0 ] int 
 11456 ;; Registers used:
 11457 ;;		wreg, status,2, status,0
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11463 ;;      Params:         0       4       0       0       0
 11464 ;;      Locals:         0       4       0       0       0
 11465 ;;      Temps:          0       1       0       0       0
 11466 ;;      Totals:         0       9       0       0       0
 11467 ;;Total ram usage:        9 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:    2
 11470 ;; This function calls:
 11471 ;;		Nothing
 11472 ;; This function is called by:
 11473 ;;		_adc_read
 11474 ;;		_convert
 11475 ;; This function uses a non-reentrant model
 11476 ;;
 11477                           psect	text2032
 11478                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\awdiv.c"
 11479                           	line	5
 11480                           	global	__size_of___awdiv
 11481  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11482                           	
 11483  0939                     ___awdiv:	
 11484                           	opt	stack 2
 11485                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11486                           	line	9
 11487                           	
 11488  0939                     l10806:	
 11489  0939  1283               	bcf	status, 5	;RP0=0, select bank0
 11490  093A  1303               	bcf	status, 6	;RP1=0, select bank0
 11491  093B  01B6               	clrf	(___awdiv@sign)
 11492                           	line	10
 11493  093C  1FB1               	btfss	(___awdiv@divisor+1),7
 11494  093D  293F               	goto	u4311
 11495  093E  2940               	goto	u4310
 11496  093F                     u4311:
 11497  093F  2949               	goto	l10810
 11498  0940                     u4310:
 11499                           	line	11
 11500                           	
 11501  0940                     l10808:	
 11502  0940  09B0               	comf	(___awdiv@divisor),f
 11503  0941  09B1               	comf	(___awdiv@divisor+1),f
 11504  0942  0AB0               	incf	(___awdiv@divisor),f
 11505  0943  1903               	skipnz
 11506  0944  0AB1               	incf	(___awdiv@divisor+1),f
 11507                           	line	12
 11508  0945  01B6               	clrf	(___awdiv@sign)
 11509  0946  1403               	bsf	status,0
 11510  0947  0DB6               	rlf	(___awdiv@sign),f
 11511  0948  2949               	goto	l10810
 11512                           	line	13
 11513                           	
 11514  0949                     l7650:	
 11515                           	line	14
 11516                           	
 11517  0949                     l10810:	
 11518  0949  1FB3               	btfss	(___awdiv@dividend+1),7
 11519  094A  294C               	goto	u4321
 11520  094B  294D               	goto	u4320
 11521  094C                     u4321:
 11522  094C  2957               	goto	l10816
 11523  094D                     u4320:
 11524                           	line	15
 11525                           	
 11526  094D                     l10812:	
 11527  094D  09B2               	comf	(___awdiv@dividend),f
 11528  094E  09B3               	comf	(___awdiv@dividend+1),f
 11529  094F  0AB2               	incf	(___awdiv@dividend),f
 11530  0950  1903               	skipnz
 11531  0951  0AB3               	incf	(___awdiv@dividend+1),f
 11532                           	line	16
 11533                           	
 11534  0952                     l10814:	
 11535  0952  3001               	movlw	(01h)
 11536  0953  00B4               	movwf	(??___awdiv+0)+0
 11537  0954  0834               	movf	(??___awdiv+0)+0,w
 11538  0955  06B6               	xorwf	(___awdiv@sign),f
 11539  0956  2957               	goto	l10816
 11540                           	line	17
 11541                           	
 11542  0957                     l7651:	
 11543                           	line	18
 11544                           	
 11545  0957                     l10816:	
 11546  0957  01B7               	clrf	(___awdiv@quotient)
 11547  0958  01B8               	clrf	(___awdiv@quotient+1)
 11548                           	line	19
 11549                           	
 11550  0959                     l10818:	
 11551  0959  0831               	movf	(___awdiv@divisor+1),w
 11552  095A  0430               	iorwf	(___awdiv@divisor),w
 11553  095B  1903               	skipnz
 11554  095C  295E               	goto	u4331
 11555  095D  295F               	goto	u4330
 11556  095E                     u4331:
 11557  095E  299D               	goto	l10838
 11558  095F                     u4330:
 11559                           	line	20
 11560                           	
 11561  095F                     l10820:	
 11562  095F  01B5               	clrf	(___awdiv@counter)
 11563  0960  1403               	bsf	status,0
 11564  0961  0DB5               	rlf	(___awdiv@counter),f
 11565                           	line	21
 11566  0962  296F               	goto	l10826
 11567                           	
 11568  0963                     l7654:	
 11569                           	line	22
 11570                           	
 11571  0963                     l10822:	
 11572  0963  3001               	movlw	01h
 11573                           	
 11574  0964                     u4345:
 11575  0964  1003               	clrc
 11576  0965  0DB0               	rlf	(___awdiv@divisor),f
 11577  0966  0DB1               	rlf	(___awdiv@divisor+1),f
 11578  0967  3EFF               	addlw	-1
 11579  0968  1D03               	skipz
 11580  0969  2964               	goto	u4345
 11581                           	line	23
 11582                           	
 11583  096A                     l10824:	
 11584  096A  3001               	movlw	(01h)
 11585  096B  00B4               	movwf	(??___awdiv+0)+0
 11586  096C  0834               	movf	(??___awdiv+0)+0,w
 11587  096D  07B5               	addwf	(___awdiv@counter),f
 11588  096E  296F               	goto	l10826
 11589                           	line	24
 11590                           	
 11591  096F                     l7653:	
 11592                           	line	21
 11593                           	
 11594  096F                     l10826:	
 11595  096F  1FB1               	btfss	(___awdiv@divisor+1),(15)&7
 11596  0970  2972               	goto	u4351
 11597  0971  2973               	goto	u4350
 11598  0972                     u4351:
 11599  0972  2963               	goto	l10822
 11600  0973                     u4350:
 11601  0973  2975               	goto	l10828
 11602                           	
 11603  0974                     l7655:	
 11604  0974  2975               	goto	l10828
 11605                           	line	25
 11606                           	
 11607  0975                     l7656:	
 11608                           	line	26
 11609                           	
 11610  0975                     l10828:	
 11611  0975  3001               	movlw	01h
 11612                           	
 11613  0976                     u4365:
 11614  0976  1003               	clrc
 11615  0977  0DB7               	rlf	(___awdiv@quotient),f
 11616  0978  0DB8               	rlf	(___awdiv@quotient+1),f
 11617  0979  3EFF               	addlw	-1
 11618  097A  1D03               	skipz
 11619  097B  2976               	goto	u4365
 11620                           	line	27
 11621  097C  0831               	movf	(___awdiv@divisor+1),w
 11622  097D  0233               	subwf	(___awdiv@dividend+1),w
 11623  097E  1D03               	skipz
 11624  097F  2982               	goto	u4375
 11625  0980  0830               	movf	(___awdiv@divisor),w
 11626  0981  0232               	subwf	(___awdiv@dividend),w
 11627  0982                     u4375:
 11628  0982  1C03               	skipc
 11629  0983  2985               	goto	u4371
 11630  0984  2986               	goto	u4370
 11631  0985                     u4371:
 11632  0985  298E               	goto	l10834
 11633  0986                     u4370:
 11634                           	line	28
 11635                           	
 11636  0986                     l10830:	
 11637  0986  0830               	movf	(___awdiv@divisor),w
 11638  0987  02B2               	subwf	(___awdiv@dividend),f
 11639  0988  0831               	movf	(___awdiv@divisor+1),w
 11640  0989  1C03               	skipc
 11641  098A  03B3               	decf	(___awdiv@dividend+1),f
 11642  098B  02B3               	subwf	(___awdiv@dividend+1),f
 11643                           	line	29
 11644                           	
 11645  098C                     l10832:	
 11646  098C  1437               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11647  098D  298E               	goto	l10834
 11648                           	line	30
 11649                           	
 11650  098E                     l7657:	
 11651                           	line	31
 11652                           	
 11653  098E                     l10834:	
 11654  098E  3001               	movlw	01h
 11655                           	
 11656  098F                     u4385:
 11657  098F  1003               	clrc
 11658  0990  0CB1               	rrf	(___awdiv@divisor+1),f
 11659  0991  0CB0               	rrf	(___awdiv@divisor),f
 11660  0992  3EFF               	addlw	-1
 11661  0993  1D03               	skipz
 11662  0994  298F               	goto	u4385
 11663                           	line	32
 11664                           	
 11665  0995                     l10836:	
 11666  0995  3001               	movlw	low(01h)
 11667  0996  02B5               	subwf	(___awdiv@counter),f
 11668  0997  1D03               	btfss	status,2
 11669  0998  299A               	goto	u4391
 11670  0999  299B               	goto	u4390
 11671  099A                     u4391:
 11672  099A  2975               	goto	l10828
 11673  099B                     u4390:
 11674  099B  299D               	goto	l10838
 11675                           	
 11676  099C                     l7658:	
 11677  099C  299D               	goto	l10838
 11678                           	line	33
 11679                           	
 11680  099D                     l7652:	
 11681                           	line	34
 11682                           	
 11683  099D                     l10838:	
 11684  099D  0836               	movf	(___awdiv@sign),w
 11685  099E  1D03               	skipz
 11686  099F  29A1               	goto	u4400
 11687  09A0  29A7               	goto	l10842
 11688  09A1                     u4400:
 11689                           	line	35
 11690                           	
 11691  09A1                     l10840:	
 11692  09A1  09B7               	comf	(___awdiv@quotient),f
 11693  09A2  09B8               	comf	(___awdiv@quotient+1),f
 11694  09A3  0AB7               	incf	(___awdiv@quotient),f
 11695  09A4  1903               	skipnz
 11696  09A5  0AB8               	incf	(___awdiv@quotient+1),f
 11697  09A6  29A7               	goto	l10842
 11698                           	
 11699  09A7                     l7659:	
 11700                           	line	36
 11701                           	
 11702  09A7                     l10842:	
 11703  09A7  0838               	movf	(___awdiv@quotient+1),w
 11704  09A8  01B1               	clrf	(?___awdiv+1)
 11705  09A9  07B1               	addwf	(?___awdiv+1)
 11706  09AA  0837               	movf	(___awdiv@quotient),w
 11707  09AB  01B0               	clrf	(?___awdiv)
 11708  09AC  07B0               	addwf	(?___awdiv)
 11709                           
 11710  09AD  29AE               	goto	l7660
 11711                           	
 11712  09AE                     l10844:	
 11713                           	line	37
 11714                           	
 11715  09AE                     l7660:	
 11716  09AE  0008               	return
 11717                           	opt stack 0
 11718                           GLOBAL	__end_of___awdiv
 11719  09AF                     	__end_of___awdiv:
 11720 ;; =============== function ___awdiv ends ============
 11721                           
 11722                           	signat	___awdiv,8314
 11723                           	global	___fttol
 11724                           psect	text2033,local,class=CODE,delta=2
 11725                           global __ptext2033
 11726  0B46                     __ptext2033:
 11727                           
 11728 ;; *************** function ___fttol *****************
 11729 ;; Defined at:
 11730 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\fttol.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;  f1              3   18[BANK0 ] float 
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;  lval            4   27[BANK0 ] unsigned long 
 11735 ;;  exp1            1   31[BANK0 ] unsigned char 
 11736 ;;  sign1           1   26[BANK0 ] unsigned char 
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  4   18[BANK0 ] long 
 11739 ;; Registers used:
 11740 ;;		wreg, status,2, status,0
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11746 ;;      Params:         0       4       0       0       0
 11747 ;;      Locals:         0       6       0       0       0
 11748 ;;      Temps:          0       4       0       0       0
 11749 ;;      Totals:         0      14       0       0       0
 11750 ;;Total ram usage:       14 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:    2
 11753 ;; This function calls:
 11754 ;;		Nothing
 11755 ;; This function is called by:
 11756 ;;		_goParallel
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           psect	text2033
 11760                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\fttol.c"
 11761                           	line	45
 11762                           	global	__size_of___fttol
 11763  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 11764                           	
 11765  0B46                     ___fttol:	
 11766                           	opt	stack 4
 11767                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 11768                           	line	49
 11769                           	
 11770  0B46                     l10746:	
 11771  0B46  1283               	bcf	status, 5	;RP0=0, select bank0
 11772  0B47  1303               	bcf	status, 6	;RP1=0, select bank0
 11773  0B48  0832               	movf	(___fttol@f1),w
 11774  0B49  00B6               	movwf	((??___fttol+0)+0)
 11775  0B4A  0833               	movf	(___fttol@f1+1),w
 11776  0B4B  00B7               	movwf	((??___fttol+0)+0+1)
 11777  0B4C  0834               	movf	(___fttol@f1+2),w
 11778  0B4D  00B8               	movwf	((??___fttol+0)+0+2)
 11779  0B4E  1003               	clrc
 11780  0B4F  0D37               	rlf	(??___fttol+0)+1,w
 11781  0B50  0D38               	rlf	(??___fttol+0)+2,w
 11782  0B51  00B9               	movwf	(??___fttol+3)+0
 11783  0B52  0839               	movf	(??___fttol+3)+0,w
 11784  0B53  00BF               	movwf	(___fttol@exp1)
 11785  0B54  08BF               	movf	((___fttol@exp1)),f
 11786  0B55  1D03               	skipz
 11787  0B56  2B58               	goto	u4191
 11788  0B57  2B59               	goto	u4190
 11789  0B58                     u4191:
 11790  0B58  2B63               	goto	l10752
 11791  0B59                     u4190:
 11792                           	line	50
 11793                           	
 11794  0B59                     l10748:	
 11795  0B59  3000               	movlw	0
 11796  0B5A  00B5               	movwf	(?___fttol+3)
 11797  0B5B  3000               	movlw	0
 11798  0B5C  00B4               	movwf	(?___fttol+2)
 11799  0B5D  3000               	movlw	0
 11800  0B5E  00B3               	movwf	(?___fttol+1)
 11801  0B5F  3000               	movlw	0
 11802  0B60  00B2               	movwf	(?___fttol)
 11803                           
 11804  0B61  2BEB               	goto	l7620
 11805                           	
 11806  0B62                     l10750:	
 11807  0B62  2BEB               	goto	l7620
 11808                           	
 11809  0B63                     l7619:	
 11810                           	line	51
 11811                           	
 11812  0B63                     l10752:	
 11813  0B63  0832               	movf	(___fttol@f1),w
 11814  0B64  00B6               	movwf	((??___fttol+0)+0)
 11815  0B65  0833               	movf	(___fttol@f1+1),w
 11816  0B66  00B7               	movwf	((??___fttol+0)+0+1)
 11817  0B67  0834               	movf	(___fttol@f1+2),w
 11818  0B68  00B8               	movwf	((??___fttol+0)+0+2)
 11819  0B69  3017               	movlw	017h
 11820  0B6A                     u4205:
 11821  0B6A  1003               	clrc
 11822  0B6B  0CB8               	rrf	(??___fttol+0)+2,f
 11823  0B6C  0CB7               	rrf	(??___fttol+0)+1,f
 11824  0B6D  0CB6               	rrf	(??___fttol+0)+0,f
 11825  0B6E                     u4200:
 11826  0B6E  3EFF               	addlw	-1
 11827  0B6F  1D03               	skipz
 11828  0B70  2B6A               	goto	u4205
 11829  0B71  0836               	movf	0+(??___fttol+0)+0,w
 11830  0B72  00B9               	movwf	(??___fttol+3)+0
 11831  0B73  0839               	movf	(??___fttol+3)+0,w
 11832  0B74  00BA               	movwf	(___fttol@sign1)
 11833                           	line	52
 11834                           	
 11835  0B75                     l10754:	
 11836  0B75  17B3               	bsf	(___fttol@f1)+(15/8),(15)&7
 11837                           	line	53
 11838                           	
 11839  0B76                     l10756:	
 11840  0B76  30FF               	movlw	0FFh
 11841  0B77  05B2               	andwf	(___fttol@f1),f
 11842  0B78  30FF               	movlw	0FFh
 11843  0B79  05B3               	andwf	(___fttol@f1+1),f
 11844  0B7A  3000               	movlw	0
 11845  0B7B  05B4               	andwf	(___fttol@f1+2),f
 11846                           	line	54
 11847                           	
 11848  0B7C                     l10758:	
 11849  0B7C  0832               	movf	(___fttol@f1),w
 11850  0B7D  00BB               	movwf	(___fttol@lval)
 11851  0B7E  0833               	movf	(___fttol@f1+1),w
 11852  0B7F  00BC               	movwf	((___fttol@lval))+1
 11853  0B80  0834               	movf	(___fttol@f1+2),w
 11854  0B81  00BD               	movwf	((___fttol@lval))+2
 11855  0B82  01BE               	clrf	((___fttol@lval))+3
 11856                           	line	55
 11857                           	
 11858  0B83                     l10760:	
 11859  0B83  308E               	movlw	low(08Eh)
 11860  0B84  02BF               	subwf	(___fttol@exp1),f
 11861                           	line	56
 11862                           	
 11863  0B85                     l10762:	
 11864  0B85  1FBF               	btfss	(___fttol@exp1),7
 11865  0B86  2B88               	goto	u4211
 11866  0B87  2B89               	goto	u4210
 11867  0B88                     u4211:
 11868  0B88  2BAE               	goto	l10772
 11869  0B89                     u4210:
 11870                           	line	57
 11871                           	
 11872  0B89                     l10764:	
 11873  0B89  083F               	movf	(___fttol@exp1),w
 11874  0B8A  3A80               	xorlw	80h
 11875  0B8B  3E8F               	addlw	-((-15)^80h)
 11876  0B8C  1803               	skipnc
 11877  0B8D  2B8F               	goto	u4221
 11878  0B8E  2B90               	goto	u4220
 11879  0B8F                     u4221:
 11880  0B8F  2B9B               	goto	l10770
 11881  0B90                     u4220:
 11882                           	line	58
 11883                           	
 11884  0B90                     l10766:	
 11885  0B90  3000               	movlw	0
 11886  0B91  00B5               	movwf	(?___fttol+3)
 11887  0B92  3000               	movlw	0
 11888  0B93  00B4               	movwf	(?___fttol+2)
 11889  0B94  3000               	movlw	0
 11890  0B95  00B3               	movwf	(?___fttol+1)
 11891  0B96  3000               	movlw	0
 11892  0B97  00B2               	movwf	(?___fttol)
 11893                           
 11894  0B98  2BEB               	goto	l7620
 11895                           	
 11896  0B99                     l10768:	
 11897  0B99  2BEB               	goto	l7620
 11898                           	
 11899  0B9A                     l7622:	
 11900  0B9A  2B9B               	goto	l10770
 11901                           	line	59
 11902                           	
 11903  0B9B                     l7623:	
 11904                           	line	60
 11905                           	
 11906  0B9B                     l10770:	
 11907  0B9B  3001               	movlw	01h
 11908  0B9C                     u4235:
 11909  0B9C  1003               	clrc
 11910  0B9D  0CBE               	rrf	(___fttol@lval+3),f
 11911  0B9E  0CBD               	rrf	(___fttol@lval+2),f
 11912  0B9F  0CBC               	rrf	(___fttol@lval+1),f
 11913  0BA0  0CBB               	rrf	(___fttol@lval),f
 11914  0BA1  3EFF               	addlw	-1
 11915  0BA2  1D03               	skipz
 11916  0BA3  2B9C               	goto	u4235
 11917                           
 11918                           	line	61
 11919  0BA4  3001               	movlw	(01h)
 11920  0BA5  00B6               	movwf	(??___fttol+0)+0
 11921  0BA6  0836               	movf	(??___fttol+0)+0,w
 11922  0BA7  07BF               	addwf	(___fttol@exp1),f
 11923  0BA8  1D03               	btfss	status,2
 11924  0BA9  2BAB               	goto	u4241
 11925  0BAA  2BAC               	goto	u4240
 11926  0BAB                     u4241:
 11927  0BAB  2B9B               	goto	l10770
 11928  0BAC                     u4240:
 11929  0BAC  2BD2               	goto	l10782
 11930                           	
 11931  0BAD                     l7624:	
 11932                           	line	62
 11933  0BAD  2BD2               	goto	l10782
 11934                           	
 11935  0BAE                     l7621:	
 11936                           	line	63
 11937                           	
 11938  0BAE                     l10772:	
 11939  0BAE  3018               	movlw	(018h)
 11940  0BAF  023F               	subwf	(___fttol@exp1),w
 11941  0BB0  1C03               	skipc
 11942  0BB1  2BB3               	goto	u4251
 11943  0BB2  2BB4               	goto	u4250
 11944  0BB3                     u4251:
 11945  0BB3  2BCB               	goto	l10780
 11946  0BB4                     u4250:
 11947                           	line	64
 11948                           	
 11949  0BB4                     l10774:	
 11950  0BB4  3000               	movlw	0
 11951  0BB5  00B5               	movwf	(?___fttol+3)
 11952  0BB6  3000               	movlw	0
 11953  0BB7  00B4               	movwf	(?___fttol+2)
 11954  0BB8  3000               	movlw	0
 11955  0BB9  00B3               	movwf	(?___fttol+1)
 11956  0BBA  3000               	movlw	0
 11957  0BBB  00B2               	movwf	(?___fttol)
 11958                           
 11959  0BBC  2BEB               	goto	l7620
 11960                           	
 11961  0BBD                     l10776:	
 11962  0BBD  2BEB               	goto	l7620
 11963                           	
 11964  0BBE                     l7626:	
 11965                           	line	65
 11966  0BBE  2BCB               	goto	l10780
 11967                           	
 11968  0BBF                     l7628:	
 11969                           	line	66
 11970                           	
 11971  0BBF                     l10778:	
 11972  0BBF  3001               	movlw	01h
 11973  0BC0  00B6               	movwf	(??___fttol+0)+0
 11974  0BC1                     u4265:
 11975  0BC1  1003               	clrc
 11976  0BC2  0DBB               	rlf	(___fttol@lval),f
 11977  0BC3  0DBC               	rlf	(___fttol@lval+1),f
 11978  0BC4  0DBD               	rlf	(___fttol@lval+2),f
 11979  0BC5  0DBE               	rlf	(___fttol@lval+3),f
 11980  0BC6  0BB6               	decfsz	(??___fttol+0)+0
 11981  0BC7  2BC1               	goto	u4265
 11982                           	line	67
 11983  0BC8  3001               	movlw	low(01h)
 11984  0BC9  02BF               	subwf	(___fttol@exp1),f
 11985  0BCA  2BCB               	goto	l10780
 11986                           	line	68
 11987                           	
 11988  0BCB                     l7627:	
 11989                           	line	65
 11990                           	
 11991  0BCB                     l10780:	
 11992  0BCB  08BF               	movf	(___fttol@exp1),f
 11993  0BCC  1D03               	skipz
 11994  0BCD  2BCF               	goto	u4271
 11995  0BCE  2BD0               	goto	u4270
 11996  0BCF                     u4271:
 11997  0BCF  2BBF               	goto	l10778
 11998  0BD0                     u4270:
 11999  0BD0  2BD2               	goto	l10782
 12000                           	
 12001  0BD1                     l7629:	
 12002  0BD1  2BD2               	goto	l10782
 12003                           	line	69
 12004                           	
 12005  0BD2                     l7625:	
 12006                           	line	70
 12007                           	
 12008  0BD2                     l10782:	
 12009  0BD2  083A               	movf	(___fttol@sign1),w
 12010  0BD3  1D03               	skipz
 12011  0BD4  2BD6               	goto	u4280
 12012  0BD5  2BE2               	goto	l10786
 12013  0BD6                     u4280:
 12014                           	line	71
 12015                           	
 12016  0BD6                     l10784:	
 12017  0BD6  09BB               	comf	(___fttol@lval),f
 12018  0BD7  09BC               	comf	(___fttol@lval+1),f
 12019  0BD8  09BD               	comf	(___fttol@lval+2),f
 12020  0BD9  09BE               	comf	(___fttol@lval+3),f
 12021  0BDA  0ABB               	incf	(___fttol@lval),f
 12022  0BDB  1903               	skipnz
 12023  0BDC  0ABC               	incf	(___fttol@lval+1),f
 12024  0BDD  1903               	skipnz
 12025  0BDE  0ABD               	incf	(___fttol@lval+2),f
 12026  0BDF  1903               	skipnz
 12027  0BE0  0ABE               	incf	(___fttol@lval+3),f
 12028  0BE1  2BE2               	goto	l10786
 12029                           	
 12030  0BE2                     l7630:	
 12031                           	line	72
 12032                           	
 12033  0BE2                     l10786:	
 12034  0BE2  083E               	movf	(___fttol@lval+3),w
 12035  0BE3  00B5               	movwf	(?___fttol+3)
 12036  0BE4  083D               	movf	(___fttol@lval+2),w
 12037  0BE5  00B4               	movwf	(?___fttol+2)
 12038  0BE6  083C               	movf	(___fttol@lval+1),w
 12039  0BE7  00B3               	movwf	(?___fttol+1)
 12040  0BE8  083B               	movf	(___fttol@lval),w
 12041  0BE9  00B2               	movwf	(?___fttol)
 12042                           
 12043  0BEA  2BEB               	goto	l7620
 12044                           	
 12045  0BEB                     l10788:	
 12046                           	line	73
 12047                           	
 12048  0BEB                     l7620:	
 12049  0BEB  0008               	return
 12050                           	opt stack 0
 12051                           GLOBAL	__end_of___fttol
 12052  0BEC                     	__end_of___fttol:
 12053 ;; =============== function ___fttol ends ============
 12054                           
 12055                           	signat	___fttol,4220
 12056                           	global	___ftpack
 12057                           psect	text2034,local,class=CODE,delta=2
 12058                           global __ptext2034
 12059  09AF                     __ptext2034:
 12060                           
 12061 ;; *************** function ___ftpack *****************
 12062 ;; Defined at:
 12063 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\float.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;  arg             3   10[BANK0 ] unsigned um
 12066 ;;  exp             1   13[BANK0 ] unsigned char 
 12067 ;;  sign            1   14[BANK0 ] unsigned char 
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  3   10[BANK0 ] float 
 12072 ;; Registers used:
 12073 ;;		wreg, status,2, status,0
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12079 ;;      Params:         0       5       0       0       0
 12080 ;;      Locals:         0       0       0       0       0
 12081 ;;      Temps:          0       3       0       0       0
 12082 ;;      Totals:         0       8       0       0       0
 12083 ;;Total ram usage:        8 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:    2
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		___ftadd
 12090 ;;		___ftmul
 12091 ;;		___lbtoft
 12092 ;;		___ftdiv
 12093 ;;		___abtoft
 12094 ;;		___awtoft
 12095 ;;		___lwtoft
 12096 ;;		___altoft
 12097 ;;		___lltoft
 12098 ;;		___attoft
 12099 ;;		___lttoft
 12100 ;; This function uses a non-reentrant model
 12101 ;;
 12102                           psect	text2034
 12103                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\float.c"
 12104                           	line	63
 12105                           	global	__size_of___ftpack
 12106  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 12107                           	
 12108  09AF                     ___ftpack:	
 12109                           	opt	stack 3
 12110                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 12111                           	line	64
 12112                           	
 12113  09AF                     l12102:	
 12114  09AF  1283               	bcf	status, 5	;RP0=0, select bank0
 12115  09B0  1303               	bcf	status, 6	;RP1=0, select bank0
 12116  09B1  082D               	movf	(___ftpack@exp),w
 12117  09B2  1D03               	skipz
 12118  09B3  29B5               	goto	u6030
 12119  09B4  29BD               	goto	l12106
 12120  09B5                     u6030:
 12121                           	
 12122  09B5                     l12104:	
 12123  09B5  082C               	movf	(___ftpack@arg+2),w
 12124  09B6  042B               	iorwf	(___ftpack@arg+1),w
 12125  09B7  042A               	iorwf	(___ftpack@arg),w
 12126  09B8  1D03               	skipz
 12127  09B9  29BB               	goto	u6041
 12128  09BA  29BC               	goto	u6040
 12129  09BB                     u6041:
 12130  09BB  29D3               	goto	l12112
 12131  09BC                     u6040:
 12132  09BC  29BD               	goto	l12106
 12133                           	
 12134  09BD                     l7844:	
 12135                           	line	65
 12136                           	
 12137  09BD                     l12106:	
 12138  09BD  3000               	movlw	0x0
 12139  09BE  00AA               	movwf	(?___ftpack)
 12140  09BF  3000               	movlw	0x0
 12141  09C0  00AB               	movwf	(?___ftpack+1)
 12142  09C1  3000               	movlw	0x0
 12143  09C2  00AC               	movwf	(?___ftpack+2)
 12144  09C3  2A2B               	goto	l7845
 12145                           	
 12146  09C4                     l12108:	
 12147  09C4  2A2B               	goto	l7845
 12148                           	
 12149  09C5                     l7842:	
 12150                           	line	66
 12151  09C5  29D3               	goto	l12112
 12152                           	
 12153  09C6                     l7847:	
 12154                           	line	67
 12155                           	
 12156  09C6                     l12110:	
 12157  09C6  3001               	movlw	(01h)
 12158  09C7  00AF               	movwf	(??___ftpack+0)+0
 12159  09C8  082F               	movf	(??___ftpack+0)+0,w
 12160  09C9  07AD               	addwf	(___ftpack@exp),f
 12161                           	line	68
 12162  09CA  3001               	movlw	01h
 12163  09CB                     u6055:
 12164  09CB  1003               	clrc
 12165  09CC  0CAC               	rrf	(___ftpack@arg+2),f
 12166  09CD  0CAB               	rrf	(___ftpack@arg+1),f
 12167  09CE  0CAA               	rrf	(___ftpack@arg),f
 12168  09CF  3EFF               	addlw	-1
 12169  09D0  1D03               	skipz
 12170  09D1  29CB               	goto	u6055
 12171                           
 12172  09D2  29D3               	goto	l12112
 12173                           	line	69
 12174                           	
 12175  09D3                     l7846:	
 12176                           	line	66
 12177                           	
 12178  09D3                     l12112:	
 12179  09D3  30FE               	movlw	low highword(0FE0000h)
 12180  09D4  052C               	andwf	(___ftpack@arg+2),w
 12181  09D5  1D03               	btfss	status,2
 12182  09D6  29D8               	goto	u6061
 12183  09D7  29D9               	goto	u6060
 12184  09D8                     u6061:
 12185  09D8  29C6               	goto	l12110
 12186  09D9                     u6060:
 12187  09D9  29F1               	goto	l7849
 12188                           	
 12189  09DA                     l7848:	
 12190                           	line	70
 12191  09DA  29F1               	goto	l7849
 12192                           	
 12193  09DB                     l7850:	
 12194                           	line	71
 12195                           	
 12196  09DB                     l12114:	
 12197  09DB  3001               	movlw	(01h)
 12198  09DC  00AF               	movwf	(??___ftpack+0)+0
 12199  09DD  082F               	movf	(??___ftpack+0)+0,w
 12200  09DE  07AD               	addwf	(___ftpack@exp),f
 12201                           	line	72
 12202                           	
 12203  09DF                     l12116:	
 12204  09DF  3001               	movlw	01h
 12205  09E0  07AA               	addwf	(___ftpack@arg),f
 12206  09E1  3000               	movlw	0
 12207  09E2  1803               	skipnc
 12208  09E3  3001               movlw 1
 12209  09E4  07AB               	addwf	(___ftpack@arg+1),f
 12210  09E5  3000               	movlw	0
 12211  09E6  1803               	skipnc
 12212  09E7  3001               movlw 1
 12213  09E8  07AC               	addwf	(___ftpack@arg+2),f
 12214                           	line	73
 12215                           	
 12216  09E9                     l12118:	
 12217  09E9  3001               	movlw	01h
 12218  09EA                     u6075:
 12219  09EA  1003               	clrc
 12220  09EB  0CAC               	rrf	(___ftpack@arg+2),f
 12221  09EC  0CAB               	rrf	(___ftpack@arg+1),f
 12222  09ED  0CAA               	rrf	(___ftpack@arg),f
 12223  09EE  3EFF               	addlw	-1
 12224  09EF  1D03               	skipz
 12225  09F0  29EA               	goto	u6075
 12226                           
 12227                           	line	74
 12228                           	
 12229  09F1                     l7849:	
 12230                           	line	70
 12231  09F1  30FF               	movlw	low highword(0FF0000h)
 12232  09F2  052C               	andwf	(___ftpack@arg+2),w
 12233  09F3  1D03               	btfss	status,2
 12234  09F4  29F6               	goto	u6081
 12235  09F5  29F7               	goto	u6080
 12236  09F6                     u6081:
 12237  09F6  29DB               	goto	l12114
 12238  09F7                     u6080:
 12239  09F7  2A04               	goto	l12122
 12240                           	
 12241  09F8                     l7851:	
 12242                           	line	75
 12243  09F8  2A04               	goto	l12122
 12244                           	
 12245  09F9                     l7853:	
 12246                           	line	76
 12247                           	
 12248  09F9                     l12120:	
 12249  09F9  3001               	movlw	low(01h)
 12250  09FA  02AD               	subwf	(___ftpack@exp),f
 12251                           	line	77
 12252  09FB  3001               	movlw	01h
 12253  09FC                     u6095:
 12254  09FC  1003               	clrc
 12255  09FD  0DAA               	rlf	(___ftpack@arg),f
 12256  09FE  0DAB               	rlf	(___ftpack@arg+1),f
 12257  09FF  0DAC               	rlf	(___ftpack@arg+2),f
 12258  0A00  3EFF               	addlw	-1
 12259  0A01  1D03               	skipz
 12260  0A02  29FC               	goto	u6095
 12261  0A03  2A04               	goto	l12122
 12262                           	line	78
 12263                           	
 12264  0A04                     l7852:	
 12265                           	line	75
 12266                           	
 12267  0A04                     l12122:	
 12268  0A04  1FAB               	btfss	(___ftpack@arg+1),(15)&7
 12269  0A05  2A07               	goto	u6101
 12270  0A06  2A08               	goto	u6100
 12271  0A07                     u6101:
 12272  0A07  29F9               	goto	l12120
 12273  0A08                     u6100:
 12274                           	
 12275  0A08                     l7854:	
 12276                           	line	79
 12277  0A08  182D               	btfsc	(___ftpack@exp),(0)&7
 12278  0A09  2A0B               	goto	u6111
 12279  0A0A  2A0C               	goto	u6110
 12280  0A0B                     u6111:
 12281  0A0B  2A12               	goto	l7855
 12282  0A0C                     u6110:
 12283                           	line	80
 12284                           	
 12285  0A0C                     l12124:	
 12286  0A0C  30FF               	movlw	0FFh
 12287  0A0D  05AA               	andwf	(___ftpack@arg),f
 12288  0A0E  307F               	movlw	07Fh
 12289  0A0F  05AB               	andwf	(___ftpack@arg+1),f
 12290  0A10  30FF               	movlw	0FFh
 12291  0A11  05AC               	andwf	(___ftpack@arg+2),f
 12292                           	
 12293  0A12                     l7855:	
 12294                           	line	81
 12295  0A12  1003               	clrc
 12296  0A13  0CAD               	rrf	(___ftpack@exp),f
 12297                           
 12298                           	line	82
 12299                           	
 12300  0A14                     l12126:	
 12301  0A14  082D               	movf	(___ftpack@exp),w
 12302  0A15  00AF               	movwf	((??___ftpack+0)+0)
 12303  0A16  01B0               	clrf	((??___ftpack+0)+0+1)
 12304  0A17  01B1               	clrf	((??___ftpack+0)+0+2)
 12305  0A18  3010               	movlw	010h
 12306  0A19                     u6125:
 12307  0A19  1003               	clrc
 12308  0A1A  0DAF               	rlf	(??___ftpack+0)+0,f
 12309  0A1B  0DB0               	rlf	(??___ftpack+0)+1,f
 12310  0A1C  0DB1               	rlf	(??___ftpack+0)+2,f
 12311  0A1D                     u6120:
 12312  0A1D  3EFF               	addlw	-1
 12313  0A1E  1D03               	skipz
 12314  0A1F  2A19               	goto	u6125
 12315  0A20  082F               	movf	0+(??___ftpack+0)+0,w
 12316  0A21  04AA               	iorwf	(___ftpack@arg),f
 12317  0A22  0830               	movf	1+(??___ftpack+0)+0,w
 12318  0A23  04AB               	iorwf	(___ftpack@arg+1),f
 12319  0A24  0831               	movf	2+(??___ftpack+0)+0,w
 12320  0A25  04AC               	iorwf	(___ftpack@arg+2),f
 12321                           	line	83
 12322                           	
 12323  0A26                     l12128:	
 12324  0A26  082E               	movf	(___ftpack@sign),w
 12325  0A27  1D03               	skipz
 12326  0A28  2A2A               	goto	u6130
 12327  0A29  2A2B               	goto	l7856
 12328  0A2A                     u6130:
 12329                           	line	84
 12330                           	
 12331  0A2A                     l12130:	
 12332  0A2A  17AC               	bsf	(___ftpack@arg)+(23/8),(23)&7
 12333                           	
 12334  0A2B                     l7856:	
 12335                           	line	85
 12336                           	line	86
 12337                           	
 12338  0A2B                     l7845:	
 12339  0A2B  0008               	return
 12340                           	opt stack 0
 12341                           GLOBAL	__end_of___ftpack
 12342  0A2C                     	__end_of___ftpack:
 12343 ;; =============== function ___ftpack ends ============
 12344                           
 12345                           	signat	___ftpack,12411
 12346                           	global	___wmul
 12347                           psect	text2035,local,class=CODE,delta=2
 12348                           global __ptext2035
 12349  13E9                     __ptext2035:
 12350                           
 12351 ;; *************** function ___wmul *****************
 12352 ;; Defined at:
 12353 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\wmul.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  multiplier      2   10[BANK0 ] unsigned int 
 12356 ;;  multiplicand    2   12[BANK0 ] unsigned int 
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;  product         2   14[BANK0 ] unsigned int 
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  2   10[BANK0 ] unsigned int 
 12361 ;; Registers used:
 12362 ;;		wreg, status,2, status,0
 12363 ;; Tracked objects:
 12364 ;;		On entry : 0/0
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12368 ;;      Params:         0       4       0       0       0
 12369 ;;      Locals:         0       2       0       0       0
 12370 ;;      Temps:          0       0       0       0       0
 12371 ;;      Totals:         0       6       0       0       0
 12372 ;;Total ram usage:        6 bytes
 12373 ;; Hardware stack levels used:    1
 12374 ;; Hardware stack levels required when called:    2
 12375 ;; This function calls:
 12376 ;;		Nothing
 12377 ;; This function is called by:
 12378 ;;		_convert
 12379 ;; This function uses a non-reentrant model
 12380 ;;
 12381                           psect	text2035
 12382                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\wmul.c"
 12383                           	line	3
 12384                           	global	__size_of___wmul
 12385  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 12386                           	
 12387  13E9                     ___wmul:	
 12388                           	opt	stack 2
 12389                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12390                           	line	4
 12391                           	
 12392  13E9                     l12090:	
 12393  13E9  1283               	bcf	status, 5	;RP0=0, select bank0
 12394  13EA  1303               	bcf	status, 6	;RP1=0, select bank0
 12395  13EB  01AE               	clrf	(___wmul@product)
 12396  13EC  01AF               	clrf	(___wmul@product+1)
 12397  13ED  2BEE               	goto	l12092
 12398                           	line	6
 12399                           	
 12400  13EE                     l7510:	
 12401                           	line	7
 12402                           	
 12403  13EE                     l12092:	
 12404  13EE  1C2A               	btfss	(___wmul@multiplier),(0)&7
 12405  13EF  2BF1               	goto	u5991
 12406  13F0  2BF2               	goto	u5990
 12407  13F1                     u5991:
 12408  13F1  2BF8               	goto	l7511
 12409  13F2                     u5990:
 12410                           	line	8
 12411                           	
 12412  13F2                     l12094:	
 12413  13F2  082C               	movf	(___wmul@multiplicand),w
 12414  13F3  07AE               	addwf	(___wmul@product),f
 12415  13F4  1803               	skipnc
 12416  13F5  0AAF               	incf	(___wmul@product+1),f
 12417  13F6  082D               	movf	(___wmul@multiplicand+1),w
 12418  13F7  07AF               	addwf	(___wmul@product+1),f
 12419                           	
 12420  13F8                     l7511:	
 12421                           	line	9
 12422  13F8  3001               	movlw	01h
 12423                           	
 12424  13F9                     u6005:
 12425  13F9  1003               	clrc
 12426  13FA  0DAC               	rlf	(___wmul@multiplicand),f
 12427  13FB  0DAD               	rlf	(___wmul@multiplicand+1),f
 12428  13FC  3EFF               	addlw	-1
 12429  13FD  1D03               	skipz
 12430  13FE  2BF9               	goto	u6005
 12431                           	line	10
 12432                           	
 12433  13FF                     l12096:	
 12434  13FF  3001               	movlw	01h
 12435                           	
 12436  1400                     u6015:
 12437  1400  1003               	clrc
 12438  1401  0CAB               	rrf	(___wmul@multiplier+1),f
 12439  1402  0CAA               	rrf	(___wmul@multiplier),f
 12440  1403  3EFF               	addlw	-1
 12441  1404  1D03               	skipz
 12442  1405  2C00               	goto	u6015
 12443                           	line	11
 12444  1406  082B               	movf	((___wmul@multiplier+1)),w
 12445  1407  042A               	iorwf	((___wmul@multiplier)),w
 12446  1408  1D03               	skipz
 12447  1409  2C0B               	goto	u6021
 12448  140A  2C0C               	goto	u6020
 12449  140B                     u6021:
 12450  140B  2BEE               	goto	l12092
 12451  140C                     u6020:
 12452  140C  2C0D               	goto	l12098
 12453                           	
 12454  140D                     l7512:	
 12455                           	line	12
 12456                           	
 12457  140D                     l12098:	
 12458  140D  082F               	movf	(___wmul@product+1),w
 12459  140E  01AB               	clrf	(?___wmul+1)
 12460  140F  07AB               	addwf	(?___wmul+1)
 12461  1410  082E               	movf	(___wmul@product),w
 12462  1411  01AA               	clrf	(?___wmul)
 12463  1412  07AA               	addwf	(?___wmul)
 12464                           
 12465  1413  2C14               	goto	l7513
 12466                           	
 12467  1414                     l12100:	
 12468                           	line	13
 12469                           	
 12470  1414                     l7513:	
 12471  1414  0008               	return
 12472                           	opt stack 0
 12473                           GLOBAL	__end_of___wmul
 12474  1415                     	__end_of___wmul:
 12475 ;; =============== function ___wmul ends ============
 12476                           
 12477                           	signat	___wmul,8314
 12478                           	global	_updateNode
 12479                           psect	text2036,local,class=CODE,delta=2
 12480                           global __ptext2036
 12481  1612                     __ptext2036:
 12482                           
 12483 ;; *************** function _updateNode *****************
 12484 ;; Defined at:
 12485 ;;		line 284 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;		None
 12488 ;; Auto vars:     Size  Location     Type
 12489 ;;		None
 12490 ;; Return value:  Size  Location     Type
 12491 ;;		None               void
 12492 ;; Registers used:
 12493 ;;		wreg, status,2, status,0
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12499 ;;      Params:         0       0       0       0       0
 12500 ;;      Locals:         0       0       0       0       0
 12501 ;;      Temps:          0       1       0       0       0
 12502 ;;      Totals:         0       1       0       0       0
 12503 ;;Total ram usage:        1 bytes
 12504 ;; Hardware stack levels used:    1
 12505 ;; Hardware stack levels required when called:    2
 12506 ;; This function calls:
 12507 ;;		Nothing
 12508 ;; This function is called by:
 12509 ;;		_main
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           psect	text2036
 12513                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
 12514                           	line	284
 12515                           	global	__size_of_updateNode
 12516  0042                     	__size_of_updateNode	equ	__end_of_updateNode-_updateNode
 12517                           	
 12518  1612                     _updateNode:	
 12519                           	opt	stack 5
 12520                           ; Regs used in _updateNode: [wreg+status,2+status,0]
 12521                           	line	285
 12522                           	
 12523  1612                     l12072:	
 12524                           ;main.c: 285: if((xCoord == 2) && (yCoord == 2))
 12525  1612  1283               	bcf	status, 5	;RP0=0, select bank0
 12526  1613  1303               	bcf	status, 6	;RP1=0, select bank0
 12527  1614  0864               	movf	(_xCoord),w	;volatile
 12528  1615  3A02               	xorlw	02h
 12529  1616  1D03               	skipz
 12530  1617  2E19               	goto	u5931
 12531  1618  2E1A               	goto	u5930
 12532  1619                     u5931:
 12533  1619  2E26               	goto	l12078
 12534  161A                     u5930:
 12535                           	
 12536  161A                     l12074:	
 12537  161A  0865               	movf	(_yCoord),w	;volatile
 12538  161B  3A02               	xorlw	02h
 12539  161C  1D03               	skipz
 12540  161D  2E1F               	goto	u5941
 12541  161E  2E20               	goto	u5940
 12542  161F                     u5941:
 12543  161F  2E26               	goto	l12078
 12544  1620                     u5940:
 12545                           	line	286
 12546                           	
 12547  1620                     l12076:	
 12548                           ;main.c: 286: node = 1;
 12549  1620  1683               	bsf	status, 5	;RP0=1, select bank1
 12550  1621  1303               	bcf	status, 6	;RP1=0, select bank1
 12551  1622  01C5               	clrf	(_node)^080h	;volatile
 12552  1623  1403               	bsf	status,0
 12553  1624  0DC5               	rlf	(_node)^080h,f	;volatile
 12554  1625  2E53               	goto	l6766
 12555                           	line	287
 12556                           	
 12557  1626                     l6760:	
 12558                           	
 12559  1626                     l12078:	
 12560                           ;main.c: 287: else if((xCoord == 4) && (yCoord == 2))
 12561  1626  1283               	bcf	status, 5	;RP0=0, select bank0
 12562  1627  0864               	movf	(_xCoord),w	;volatile
 12563  1628  3A04               	xorlw	04h
 12564  1629  1D03               	skipz
 12565  162A  2E2C               	goto	u5951
 12566  162B  2E2D               	goto	u5950
 12567  162C                     u5951:
 12568  162C  2E3A               	goto	l12084
 12569  162D                     u5950:
 12570                           	
 12571  162D                     l12080:	
 12572  162D  0865               	movf	(_yCoord),w	;volatile
 12573  162E  3A02               	xorlw	02h
 12574  162F  1D03               	skipz
 12575  1630  2E32               	goto	u5961
 12576  1631  2E33               	goto	u5960
 12577  1632                     u5961:
 12578  1632  2E3A               	goto	l12084
 12579  1633                     u5960:
 12580                           	line	288
 12581                           	
 12582  1633                     l12082:	
 12583                           ;main.c: 288: node = 2;
 12584  1633  3002               	movlw	(02h)
 12585  1634  00AA               	movwf	(??_updateNode+0)+0
 12586  1635  082A               	movf	(??_updateNode+0)+0,w
 12587  1636  1683               	bsf	status, 5	;RP0=1, select bank1
 12588  1637  1303               	bcf	status, 6	;RP1=0, select bank1
 12589  1638  00C5               	movwf	(_node)^080h	;volatile
 12590  1639  2E53               	goto	l6766
 12591                           	line	289
 12592                           	
 12593  163A                     l6762:	
 12594                           	
 12595  163A                     l12084:	
 12596                           ;main.c: 289: else if((xCoord == 2) && (yCoord == 0))
 12597  163A  1283               	bcf	status, 5	;RP0=0, select bank0
 12598  163B  0864               	movf	(_xCoord),w	;volatile
 12599  163C  3A02               	xorlw	02h
 12600  163D  1D03               	skipz
 12601  163E  2E40               	goto	u5971
 12602  163F  2E41               	goto	u5970
 12603  1640                     u5971:
 12604  1640  2E4D               	goto	l6764
 12605  1641                     u5970:
 12606                           	
 12607  1641                     l12086:	
 12608  1641  08E5               	movf	(_yCoord),f
 12609  1642  1D03               	skipz	;volatile
 12610  1643  2E45               	goto	u5981
 12611  1644  2E46               	goto	u5980
 12612  1645                     u5981:
 12613  1645  2E4D               	goto	l6764
 12614  1646                     u5980:
 12615                           	line	290
 12616                           	
 12617  1646                     l12088:	
 12618                           ;main.c: 290: node = 3;
 12619  1646  3003               	movlw	(03h)
 12620  1647  00AA               	movwf	(??_updateNode+0)+0
 12621  1648  082A               	movf	(??_updateNode+0)+0,w
 12622  1649  1683               	bsf	status, 5	;RP0=1, select bank1
 12623  164A  1303               	bcf	status, 6	;RP1=0, select bank1
 12624  164B  00C5               	movwf	(_node)^080h	;volatile
 12625  164C  2E53               	goto	l6766
 12626                           	line	291
 12627                           	
 12628  164D                     l6764:	
 12629                           	line	292
 12630                           ;main.c: 291: else
 12631                           ;main.c: 292: node = 0;
 12632  164D  1683               	bsf	status, 5	;RP0=1, select bank1
 12633  164E  1303               	bcf	status, 6	;RP1=0, select bank1
 12634  164F  01C5               	clrf	(_node)^080h	;volatile
 12635  1650  2E53               	goto	l6766
 12636                           	
 12637  1651                     l6765:	
 12638  1651  2E53               	goto	l6766
 12639                           	
 12640  1652                     l6763:	
 12641  1652  2E53               	goto	l6766
 12642                           	
 12643  1653                     l6761:	
 12644                           	line	293
 12645                           	
 12646  1653                     l6766:	
 12647  1653  0008               	return
 12648                           	opt stack 0
 12649                           GLOBAL	__end_of_updateNode
 12650  1654                     	__end_of_updateNode:
 12651 ;; =============== function _updateNode ends ============
 12652                           
 12653                           	signat	_updateNode,88
 12654                           	global	_getSuccessfulDrive
 12655                           psect	text2037,local,class=CODE,delta=2
 12656                           global __ptext2037
 12657  1136                     __ptext2037:
 12658                           
 12659 ;; *************** function _getSuccessfulDrive *****************
 12660 ;; Defined at:
 12661 ;;		line 146 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;		None
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;		None               void
 12668 ;; Registers used:
 12669 ;;		status,2, status,0
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12675 ;;      Params:         0       0       0       0       0
 12676 ;;      Locals:         0       0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0
 12678 ;;      Totals:         0       0       0       0       0
 12679 ;;Total ram usage:        0 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    2
 12682 ;; This function calls:
 12683 ;;		Nothing
 12684 ;; This function is called by:
 12685 ;;		_main
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           psect	text2037
 12689                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
 12690                           	line	146
 12691                           	global	__size_of_getSuccessfulDrive
 12692  000A                     	__size_of_getSuccessfulDrive	equ	__end_of_getSuccessfulDrive-_getSuccessfulDrive
 12693                           	
 12694  1136                     _getSuccessfulDrive:	
 12695                           	opt	stack 5
 12696                           ; Regs used in _getSuccessfulDrive: [status]
 12697                           	line	147
 12698                           	
 12699  1136                     l12064:	
 12700                           ;drive.c: 147: return successfulDrive;
 12701  1136  19F1               	btfsc	(_successfulDrive/8),(_successfulDrive)&7
 12702  1137  2939               	goto	u5921
 12703  1138  293A               	goto	u5920
 12704  1139                     u5921:
 12705  1139  293C               	goto	l12068
 12706  113A                     u5920:
 12707                           	
 12708  113A                     l12066:	
 12709  113A  1003               	clrc
 12710                           	
 12711  113B  293F               	goto	l5846
 12712                           	
 12713  113C                     l11816:	
 12714                           	
 12715  113C                     l12068:	
 12716  113C  1403               	setc
 12717                           	
 12718  113D  293F               	goto	l5846
 12719                           	
 12720  113E                     l11818:	
 12721  113E  293F               	goto	l5846
 12722                           	
 12723  113F                     l12070:	
 12724                           	line	148
 12725                           	
 12726  113F                     l5846:	
 12727  113F  0008               	return
 12728                           	opt stack 0
 12729                           GLOBAL	__end_of_getSuccessfulDrive
 12730  1140                     	__end_of_getSuccessfulDrive:
 12731 ;; =============== function _getSuccessfulDrive ends ============
 12732                           
 12733                           	signat	_getSuccessfulDrive,88
 12734                           	global	_getSomethingInTheWay
 12735                           psect	text2038,local,class=CODE,delta=2
 12736                           global __ptext2038
 12737  1122                     __ptext2038:
 12738                           
 12739 ;; *************** function _getSomethingInTheWay *****************
 12740 ;; Defined at:
 12741 ;;		line 140 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;		None
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;		None
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  1    wreg      enum E1111
 12748 ;; Registers used:
 12749 ;;		wreg
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12755 ;;      Params:         0       0       0       0       0
 12756 ;;      Locals:         0       0       0       0       0
 12757 ;;      Temps:          0       0       0       0       0
 12758 ;;      Totals:         0       0       0       0       0
 12759 ;;Total ram usage:        0 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:    2
 12762 ;; This function calls:
 12763 ;;		Nothing
 12764 ;; This function is called by:
 12765 ;;		_goToNextCell
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           psect	text2038
 12769                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
 12770                           	line	140
 12771                           	global	__size_of_getSomethingInTheWay
 12772  0005                     	__size_of_getSomethingInTheWay	equ	__end_of_getSomethingInTheWay-_getSomethingInTheWay
 12773                           	
 12774  1122                     _getSomethingInTheWay:	
 12775                           	opt	stack 4
 12776                           ; Regs used in _getSomethingInTheWay: [wreg]
 12777                           	line	141
 12778                           	
 12779  1122                     l12060:	
 12780                           ;drive.c: 141: return somethingInTheWay;
 12781  1122  1683               	bsf	status, 5	;RP0=1, select bank1
 12782  1123  1303               	bcf	status, 6	;RP1=0, select bank1
 12783  1124  0863               	movf	(_somethingInTheWay)^080h,w	;volatile
 12784  1125  2926               	goto	l5843
 12785                           	
 12786  1126                     l12062:	
 12787                           	line	142
 12788                           	
 12789  1126                     l5843:	
 12790  1126  0008               	return
 12791                           	opt stack 0
 12792                           GLOBAL	__end_of_getSomethingInTheWay
 12793  1127                     	__end_of_getSomethingInTheWay:
 12794 ;; =============== function _getSomethingInTheWay ends ============
 12795                           
 12796                           	signat	_getSomethingInTheWay,89
 12797                           	global	_getOrientation
 12798                           psect	text2039,local,class=CODE,delta=2
 12799                           global __ptext2039
 12800  111D                     __ptext2039:
 12801                           
 12802 ;; *************** function _getOrientation *****************
 12803 ;; Defined at:
 12804 ;;		line 135 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;		None
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;		None
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      enum E1117
 12811 ;; Registers used:
 12812 ;;		wreg
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12818 ;;      Params:         0       0       0       0       0
 12819 ;;      Locals:         0       0       0       0       0
 12820 ;;      Temps:          0       0       0       0       0
 12821 ;;      Totals:         0       0       0       0       0
 12822 ;;Total ram usage:        0 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:    2
 12825 ;; This function calls:
 12826 ;;		Nothing
 12827 ;; This function is called by:
 12828 ;;		_updateLocation
 12829 ;;		_main
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           psect	text2039
 12833                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
 12834                           	line	135
 12835                           	global	__size_of_getOrientation
 12836  0005                     	__size_of_getOrientation	equ	__end_of_getOrientation-_getOrientation
 12837                           	
 12838  111D                     _getOrientation:	
 12839                           	opt	stack 4
 12840                           ; Regs used in _getOrientation: [wreg]
 12841                           	line	136
 12842                           	
 12843  111D                     l12056:	
 12844                           ;drive.c: 136: return currentOrientation;
 12845  111D  1283               	bcf	status, 5	;RP0=0, select bank0
 12846  111E  1303               	bcf	status, 6	;RP1=0, select bank0
 12847  111F  0860               	movf	(_currentOrientation),w	;volatile
 12848  1120  2921               	goto	l5840
 12849                           	
 12850  1121                     l12058:	
 12851                           	line	137
 12852                           	
 12853  1121                     l5840:	
 12854  1121  0008               	return
 12855                           	opt stack 0
 12856                           GLOBAL	__end_of_getOrientation
 12857  1122                     	__end_of_getOrientation:
 12858 ;; =============== function _getOrientation ends ============
 12859                           
 12860                           	signat	_getOrientation,89
 12861                           	global	_getCurrentY
 12862                           psect	text2040,local,class=CODE,delta=2
 12863                           global __ptext2040
 12864  1118                     __ptext2040:
 12865                           
 12866 ;; *************** function _getCurrentY *****************
 12867 ;; Defined at:
 12868 ;;		line 431 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;		None
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;		None
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      unsigned char 
 12875 ;; Registers used:
 12876 ;;		wreg
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12882 ;;      Params:         0       0       0       0       0
 12883 ;;      Locals:         0       0       0       0       0
 12884 ;;      Temps:          0       0       0       0       0
 12885 ;;      Totals:         0       0       0       0       0
 12886 ;;Total ram usage:        0 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; Hardware stack levels required when called:    2
 12889 ;; This function calls:
 12890 ;;		Nothing
 12891 ;; This function is called by:
 12892 ;;		_driveForDistance
 12893 ;; This function uses a non-reentrant model
 12894 ;;
 12895                           psect	text2040
 12896                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
 12897                           	line	431
 12898                           	global	__size_of_getCurrentY
 12899  0005                     	__size_of_getCurrentY	equ	__end_of_getCurrentY-_getCurrentY
 12900                           	
 12901  1118                     _getCurrentY:	
 12902                           	opt	stack 3
 12903                           ; Regs used in _getCurrentY: [wreg]
 12904                           	line	432
 12905                           	
 12906  1118                     l12052:	
 12907                           ;main.c: 432: return yCoord;
 12908  1118  1283               	bcf	status, 5	;RP0=0, select bank0
 12909  1119  1303               	bcf	status, 6	;RP1=0, select bank0
 12910  111A  0865               	movf	(_yCoord),w	;volatile
 12911  111B  291C               	goto	l6827
 12912                           	
 12913  111C                     l12054:	
 12914                           	line	433
 12915                           	
 12916  111C                     l6827:	
 12917  111C  0008               	return
 12918                           	opt stack 0
 12919                           GLOBAL	__end_of_getCurrentY
 12920  111D                     	__end_of_getCurrentY:
 12921 ;; =============== function _getCurrentY ends ============
 12922                           
 12923                           	signat	_getCurrentY,89
 12924                           	global	_getCurrentX
 12925                           psect	text2041,local,class=CODE,delta=2
 12926                           global __ptext2041
 12927  1113                     __ptext2041:
 12928                           
 12929 ;; *************** function _getCurrentX *****************
 12930 ;; Defined at:
 12931 ;;		line 426 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\mai
       n.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;		None
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      unsigned char 
 12938 ;; Registers used:
 12939 ;;		wreg
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/0
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12945 ;;      Params:         0       0       0       0       0
 12946 ;;      Locals:         0       0       0       0       0
 12947 ;;      Temps:          0       0       0       0       0
 12948 ;;      Totals:         0       0       0       0       0
 12949 ;;Total ram usage:        0 bytes
 12950 ;; Hardware stack levels used:    1
 12951 ;; Hardware stack levels required when called:    2
 12952 ;; This function calls:
 12953 ;;		Nothing
 12954 ;; This function is called by:
 12955 ;;		_driveForDistance
 12956 ;; This function uses a non-reentrant model
 12957 ;;
 12958                           psect	text2041
 12959                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
 12960                           	line	426
 12961                           	global	__size_of_getCurrentX
 12962  0005                     	__size_of_getCurrentX	equ	__end_of_getCurrentX-_getCurrentX
 12963                           	
 12964  1113                     _getCurrentX:	
 12965                           	opt	stack 3
 12966                           ; Regs used in _getCurrentX: [wreg]
 12967                           	line	427
 12968                           	
 12969  1113                     l12048:	
 12970                           ;main.c: 427: return xCoord;
 12971  1113  1283               	bcf	status, 5	;RP0=0, select bank0
 12972  1114  1303               	bcf	status, 6	;RP1=0, select bank0
 12973  1115  0864               	movf	(_xCoord),w	;volatile
 12974  1116  2917               	goto	l6824
 12975                           	
 12976  1117                     l12050:	
 12977                           	line	428
 12978                           	
 12979  1117                     l6824:	
 12980  1117  0008               	return
 12981                           	opt stack 0
 12982                           GLOBAL	__end_of_getCurrentX
 12983  1118                     	__end_of_getCurrentX:
 12984 ;; =============== function _getCurrentX ends ============
 12985                           
 12986                           	signat	_getCurrentX,89
 12987                           	global	_updateOrientation
 12988                           psect	text2042,local,class=CODE,delta=2
 12989                           global __ptext2042
 12990  1156                     __ptext2042:
 12991                           
 12992 ;; *************** function _updateOrientation *****************
 12993 ;; Defined at:
 12994 ;;		line 233 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\dri
       ve.c"
 12995 ;; Parameters:    Size  Location     Type
 12996 ;;  moved           1    wreg     enum E1111
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;  moved           1   11[BANK0 ] enum E1111
 12999 ;; Return value:  Size  Location     Type
 13000 ;;		None               void
 13001 ;; Registers used:
 13002 ;;		wreg, status,2, status,0
 13003 ;; Tracked objects:
 13004 ;;		On entry : 0/0
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13008 ;;      Params:         0       0       0       0       0
 13009 ;;      Locals:         0       1       0       0       0
 13010 ;;      Temps:          0       1       0       0       0
 13011 ;;      Totals:         0       2       0       0       0
 13012 ;;Total ram usage:        2 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:    2
 13015 ;; This function calls:
 13016 ;;		Nothing
 13017 ;; This function is called by:
 13018 ;;		_driveForDistance
 13019 ;;		_goBackward
 13020 ;;		_goLeft
 13021 ;;		_goRight
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           psect	text2042
 13025                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\drive.c"
 13026                           	line	233
 13027                           	global	__size_of_updateOrientation
 13028  0011                     	__size_of_updateOrientation	equ	__end_of_updateOrientation-_updateOrientation
 13029                           	
 13030  1156                     _updateOrientation:	
 13031                           	opt	stack 3
 13032                           ; Regs used in _updateOrientation: [wreg+status,2+status,0]
 13033                           ;updateOrientation@moved stored from wreg
 13034  1156  1283               	bcf	status, 5	;RP0=0, select bank0
 13035  1157  1303               	bcf	status, 6	;RP1=0, select bank0
 13036  1158  00AB               	movwf	(updateOrientation@moved)
 13037                           	line	234
 13038                           	
 13039  1159                     l12042:	
 13040                           ;drive.c: 234: currentOrientation += moved;
 13041  1159  082B               	movf	(updateOrientation@moved),w	;volatile
 13042  115A  00AA               	movwf	(??_updateOrientation+0)+0
 13043  115B  082A               	movf	(??_updateOrientation+0)+0,w
 13044  115C  07E0               	addwf	(_currentOrientation),f	;volatile
 13045                           	line	235
 13046                           	
 13047  115D                     l12044:	
 13048                           ;drive.c: 235: if(currentOrientation >= 4)
 13049  115D  3004               	movlw	(04h)
 13050  115E  0260               	subwf	(_currentOrientation),w	;volatile
 13051  115F  1C03               	skipc
 13052  1160  2962               	goto	u5911
 13053  1161  2963               	goto	u5910
 13054  1162                     u5911:
 13055  1162  2966               	goto	l5877
 13056  1163                     u5910:
 13057                           	line	236
 13058                           	
 13059  1163                     l12046:	
 13060                           ;drive.c: 236: currentOrientation -= 4;
 13061  1163  3004               	movlw	low(04h)
 13062  1164  02E0               	subwf	(_currentOrientation),f	;volatile
 13063  1165  2966               	goto	l5877
 13064                           	
 13065  1166                     l5876:	
 13066                           	line	237
 13067                           	
 13068  1166                     l5877:	
 13069  1166  0008               	return
 13070                           	opt stack 0
 13071                           GLOBAL	__end_of_updateOrientation
 13072  1167                     	__end_of_updateOrientation:
 13073 ;; =============== function _updateOrientation ends ============
 13074                           
 13075                           	signat	_updateOrientation,4216
 13076                           	global	_ser_init
 13077                           psect	text2043,local,class=CODE,delta=2
 13078                           global __ptext2043
 13079  1344                     __ptext2043:
 13080                           
 13081 ;; *************** function _ser_init *****************
 13082 ;; Defined at:
 13083 ;;		line 124 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ser
       .c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;		None
 13086 ;; Auto vars:     Size  Location     Type
 13087 ;;		None
 13088 ;; Return value:  Size  Location     Type
 13089 ;;		None               void
 13090 ;; Registers used:
 13091 ;;		wreg, status,2, status,0
 13092 ;; Tracked objects:
 13093 ;;		On entry : 0/0
 13094 ;;		On exit  : 0/0
 13095 ;;		Unchanged: 0/0
 13096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13097 ;;      Params:         0       0       0       0       0
 13098 ;;      Locals:         0       0       0       0       0
 13099 ;;      Temps:          0       1       0       0       0
 13100 ;;      Totals:         0       1       0       0       0
 13101 ;;Total ram usage:        1 bytes
 13102 ;; Hardware stack levels used:    1
 13103 ;; Hardware stack levels required when called:    2
 13104 ;; This function calls:
 13105 ;;		Nothing
 13106 ;; This function is called by:
 13107 ;;		_init
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           psect	text2043
 13111                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ser.c"
 13112                           	line	124
 13113                           	global	__size_of_ser_init
 13114  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 13115                           	
 13116  1344                     _ser_init:	
 13117                           	opt	stack 4
 13118                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 13119                           	line	125
 13120                           	
 13121  1344                     l12016:	
 13122                           ;ser.c: 125: TRISC |= 0b10000000;
 13123  1344  1683               	bsf	status, 5	;RP0=1, select bank1
 13124  1345  1303               	bcf	status, 6	;RP1=0, select bank1
 13125  1346  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 13126                           	line	126
 13127                           	
 13128  1347                     l12018:	
 13129                           ;ser.c: 126: TRISC &= 0b10111111;
 13130  1347  30BF               	movlw	(0BFh)
 13131  1348  1283               	bcf	status, 5	;RP0=0, select bank0
 13132  1349  1303               	bcf	status, 6	;RP1=0, select bank0
 13133  134A  00AA               	movwf	(??_ser_init+0)+0
 13134  134B  082A               	movf	(??_ser_init+0)+0,w
 13135  134C  1683               	bsf	status, 5	;RP0=1, select bank1
 13136  134D  1303               	bcf	status, 6	;RP1=0, select bank1
 13137  134E  0587               	andwf	(135)^080h,f	;volatile
 13138                           	line	127
 13139                           	
 13140  134F                     l12020:	
 13141                           ;ser.c: 127: BRGH=1;
 13142  134F  1518               	bsf	(1218/8)^080h,(1218)&7
 13143                           	line	129
 13144                           	
 13145  1350                     l12022:	
 13146                           ;ser.c: 129: SPBRG=20;
 13147  1350  3014               	movlw	(014h)
 13148  1351  0099               	movwf	(153)^080h	;volatile
 13149                           	line	132
 13150                           	
 13151  1352                     l12024:	
 13152                           ;ser.c: 132: TX9=0;
 13153  1352  1318               	bcf	(1222/8)^080h,(1222)&7
 13154                           	line	133
 13155                           	
 13156  1353                     l12026:	
 13157                           ;ser.c: 133: RX9=0;
 13158  1353  1283               	bcf	status, 5	;RP0=0, select bank0
 13159  1354  1303               	bcf	status, 6	;RP1=0, select bank0
 13160  1355  1318               	bcf	(198/8),(198)&7
 13161                           	line	135
 13162                           	
 13163  1356                     l12028:	
 13164                           ;ser.c: 135: SYNC=0;
 13165  1356  1683               	bsf	status, 5	;RP0=1, select bank1
 13166  1357  1303               	bcf	status, 6	;RP1=0, select bank1
 13167  1358  1218               	bcf	(1220/8)^080h,(1220)&7
 13168                           	line	136
 13169                           	
 13170  1359                     l12030:	
 13171                           ;ser.c: 136: SPEN=1;
 13172  1359  1283               	bcf	status, 5	;RP0=0, select bank0
 13173  135A  1303               	bcf	status, 6	;RP1=0, select bank0
 13174  135B  1798               	bsf	(199/8),(199)&7
 13175                           	line	137
 13176                           	
 13177  135C                     l12032:	
 13178                           ;ser.c: 137: CREN=1;
 13179  135C  1618               	bsf	(196/8),(196)&7
 13180                           	line	138
 13181                           	
 13182  135D                     l12034:	
 13183                           ;ser.c: 138: TXIE=0;
 13184  135D  1683               	bsf	status, 5	;RP0=1, select bank1
 13185  135E  1303               	bcf	status, 6	;RP1=0, select bank1
 13186  135F  120C               	bcf	(1124/8)^080h,(1124)&7
 13187                           	line	139
 13188                           	
 13189  1360                     l12036:	
 13190                           ;ser.c: 139: RCIE=1;
 13191  1360  168C               	bsf	(1125/8)^080h,(1125)&7
 13192                           	line	140
 13193                           	
 13194  1361                     l12038:	
 13195                           ;ser.c: 140: TXEN=1;
 13196  1361  1698               	bsf	(1221/8)^080h,(1221)&7
 13197                           	line	143
 13198                           	
 13199  1362                     l12040:	
 13200                           ;ser.c: 143: rxiptr=rxoptr=txiptr=txoptr=0;
 13201  1362  3000               	movlw	(0)
 13202  1363  00FB               	movwf	(_txoptr)	;volatile
 13203  1364  00FA               	movwf	(_txiptr)	;volatile
 13204  1365  00F9               	movwf	(_rxoptr)	;volatile
 13205  1366  1283               	bcf	status, 5	;RP0=0, select bank0
 13206  1367  1303               	bcf	status, 6	;RP1=0, select bank0
 13207  1368  00AA               	movwf	(??_ser_init+0)+0
 13208  1369  082A               	movf	(??_ser_init+0)+0,w
 13209  136A  00F8               	movwf	(_rxiptr)	;volatile
 13210                           	line	144
 13211                           	
 13212  136B                     l3673:	
 13213  136B  0008               	return
 13214                           	opt stack 0
 13215                           GLOBAL	__end_of_ser_init
 13216  136C                     	__end_of_ser_init:
 13217 ;; =============== function _ser_init ends ============
 13218                           
 13219                           	signat	_ser_init,88
 13220                           	global	_ser_isrx
 13221                           psect	text2044,local,class=CODE,delta=2
 13222                           global __ptext2044
 13223  11C9                     __ptext2044:
 13224                           
 13225 ;; *************** function _ser_isrx *****************
 13226 ;; Defined at:
 13227 ;;		line 48 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ser.
       c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;		None
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;		None               void
 13234 ;; Registers used:
 13235 ;;		wreg, status,2, status,0
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13241 ;;      Params:         0       0       0       0       0
 13242 ;;      Locals:         0       0       0       0       0
 13243 ;;      Temps:          0       0       0       0       0
 13244 ;;      Totals:         0       0       0       0       0
 13245 ;;Total ram usage:        0 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; Hardware stack levels required when called:    2
 13248 ;; This function calls:
 13249 ;;		Nothing
 13250 ;; This function is called by:
 13251 ;;		_ser_getch
 13252 ;; This function uses a non-reentrant model
 13253 ;;
 13254                           psect	text2044
 13255                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ser.c"
 13256                           	line	48
 13257                           	global	__size_of_ser_isrx
 13258  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 13259                           	
 13260  11C9                     _ser_isrx:	
 13261                           	opt	stack 2
 13262                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 13263                           	line	49
 13264                           	
 13265  11C9                     l11968:	
 13266                           ;ser.c: 49: if(OERR) {
 13267  11C9  1283               	bcf	status, 5	;RP0=0, select bank0
 13268  11CA  1303               	bcf	status, 6	;RP1=0, select bank0
 13269  11CB  1C98               	btfss	(193/8),(193)&7
 13270  11CC  29CE               	goto	u5841
 13271  11CD  29CF               	goto	u5840
 13272  11CE                     u5841:
 13273  11CE  29D4               	goto	l11976
 13274  11CF                     u5840:
 13275                           	line	50
 13276                           	
 13277  11CF                     l11970:	
 13278                           ;ser.c: 50: CREN = 0;
 13279  11CF  1218               	bcf	(196/8),(196)&7
 13280                           	line	51
 13281                           ;ser.c: 51: CREN = 1;
 13282  11D0  1618               	bsf	(196/8),(196)&7
 13283                           	line	52
 13284                           	
 13285  11D1                     l11972:	
 13286                           ;ser.c: 52: return 0;
 13287  11D1  1003               	clrc
 13288                           	
 13289  11D2  29DF               	goto	l3633
 13290                           	
 13291  11D3                     l11974:	
 13292  11D3  29DF               	goto	l3633
 13293                           	line	53
 13294                           	
 13295  11D4                     l3632:	
 13296                           	line	54
 13297                           	
 13298  11D4                     l11976:	
 13299                           ;ser.c: 53: }
 13300                           ;ser.c: 54: return (rxiptr!=rxoptr);
 13301  11D4  0878               	movf	(_rxiptr),w	;volatile
 13302  11D5  0679               	xorwf	(_rxoptr),w	;volatile
 13303  11D6  1D03               	skipz
 13304  11D7  29D9               	goto	u5851
 13305  11D8  29DA               	goto	u5850
 13306  11D9                     u5851:
 13307  11D9  29DC               	goto	l11980
 13308  11DA                     u5850:
 13309                           	
 13310  11DA                     l11978:	
 13311  11DA  1003               	clrc
 13312                           	
 13313  11DB  29DF               	goto	l3633
 13314                           	
 13315  11DC                     l11812:	
 13316                           	
 13317  11DC                     l11980:	
 13318  11DC  1403               	setc
 13319                           	
 13320  11DD  29DF               	goto	l3633
 13321                           	
 13322  11DE                     l11814:	
 13323  11DE  29DF               	goto	l3633
 13324                           	
 13325  11DF                     l11982:	
 13326                           	line	55
 13327                           	
 13328  11DF                     l3633:	
 13329  11DF  0008               	return
 13330                           	opt stack 0
 13331                           GLOBAL	__end_of_ser_isrx
 13332  11E0                     	__end_of_ser_isrx:
 13333 ;; =============== function _ser_isrx ends ============
 13334                           
 13335                           	signat	_ser_isrx,88
 13336                           	global	_getVictimZone
 13337                           psect	text2045,local,class=CODE,delta=2
 13338                           global __ptext2045
 13339  0AAB                     __ptext2045:
 13340                           
 13341 ;; *************** function _getVictimZone *****************
 13342 ;; Defined at:
 13343 ;;		line 157 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\map
       .c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  victimX         1    wreg     unsigned char 
 13346 ;;  victimY         1   10[BANK0 ] unsigned char 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;  victimX         1   12[BANK0 ] unsigned char 
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  1    wreg      unsigned char 
 13351 ;; Registers used:
 13352 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13358 ;;      Params:         0       1       0       0       0
 13359 ;;      Locals:         0       1       0       0       0
 13360 ;;      Temps:          0       1       0       0       0
 13361 ;;      Totals:         0       3       0       0       0
 13362 ;;Total ram usage:        3 bytes
 13363 ;; Hardware stack levels used:    1
 13364 ;; Hardware stack levels required when called:    2
 13365 ;; This function calls:
 13366 ;;		Nothing
 13367 ;; This function is called by:
 13368 ;;		_lookForVictim
 13369 ;; This function uses a non-reentrant model
 13370 ;;
 13371                           psect	text2045
 13372                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
 13373                           	line	157
 13374                           	global	__size_of_getVictimZone
 13375  009B                     	__size_of_getVictimZone	equ	__end_of_getVictimZone-_getVictimZone
 13376                           	
 13377  0AAB                     _getVictimZone:	
 13378                           	opt	stack 4
 13379                           ; Regs used in _getVictimZone: [wreg-fsr0h+status,2+status,0]
 13380                           ;getVictimZone@victimX stored from wreg
 13381  0AAB  1283               	bcf	status, 5	;RP0=0, select bank0
 13382  0AAC  1303               	bcf	status, 6	;RP1=0, select bank0
 13383  0AAD  00AC               	movwf	(getVictimZone@victimX)
 13384                           	line	163
 13385                           	
 13386  0AAE                     l11920:	
 13387                           ;map.c: 163: switch (victimX)
 13388  0AAE  2B30               	goto	l11962
 13389                           	line	165
 13390                           ;map.c: 164: {
 13391                           ;map.c: 165: case 0:
 13392                           	
 13393  0AAF                     l2900:	
 13394                           	line	166
 13395                           ;map.c: 166: switch (victimY)
 13396  0AAF  2AC1               	goto	l11928
 13397                           	line	168
 13398                           ;map.c: 167: {
 13399                           ;map.c: 168: case 0:
 13400                           	
 13401  0AB0                     l2902:	
 13402                           	line	169
 13403                           	
 13404  0AB0                     l11922:	
 13405                           ;map.c: 169: vicZone = 4;
 13406  0AB0  3004               	movlw	(04h)
 13407  0AB1  00AB               	movwf	(??_getVictimZone+0)+0
 13408  0AB2  082B               	movf	(??_getVictimZone+0)+0,w
 13409  0AB3  1683               	bsf	status, 5	;RP0=1, select bank1
 13410  0AB4  1303               	bcf	status, 6	;RP1=0, select bank1
 13411  0AB5  00C9               	movwf	(_vicZone)^080h
 13412                           	line	170
 13413                           ;map.c: 170: break;
 13414  0AB6  2B41               	goto	l11964
 13415                           	line	171
 13416                           ;map.c: 171: case 1:
 13417                           	
 13418  0AB7                     l2904:	
 13419                           	line	172
 13420                           	
 13421  0AB7                     l11924:	
 13422                           ;map.c: 172: vicZone = 4;
 13423  0AB7  3004               	movlw	(04h)
 13424  0AB8  1283               	bcf	status, 5	;RP0=0, select bank0
 13425  0AB9  00AB               	movwf	(??_getVictimZone+0)+0
 13426  0ABA  082B               	movf	(??_getVictimZone+0)+0,w
 13427  0ABB  1683               	bsf	status, 5	;RP0=1, select bank1
 13428  0ABC  1303               	bcf	status, 6	;RP1=0, select bank1
 13429  0ABD  00C9               	movwf	(_vicZone)^080h
 13430                           	line	173
 13431                           ;map.c: 173: break;
 13432  0ABE  2B41               	goto	l11964
 13433                           	line	178
 13434                           ;map.c: 178: default:
 13435                           	
 13436  0ABF                     l2905:	
 13437                           	line	179
 13438                           ;map.c: 179: break;
 13439  0ABF  2B41               	goto	l11964
 13440                           	line	180
 13441                           	
 13442  0AC0                     l11926:	
 13443                           ;map.c: 180: }
 13444  0AC0  2B41               	goto	l11964
 13445                           	line	166
 13446                           	
 13447  0AC1                     l2901:	
 13448                           	
 13449  0AC1                     l11928:	
 13450  0AC1  1283               	bcf	status, 5	;RP0=0, select bank0
 13451  0AC2  082A               	movf	(getVictimZone@victimY),w
 13452                           	; Switch size 1, requested type "space"
 13453                           ; Number of cases is 2, Range of values is 0 to 1
 13454                           ; switch strategies available:
 13455                           ; Name         Instructions Cycles
 13456                           ; simple_byte            7     4 (average)
 13457                           ; direct_byte           14     8 (fixed)
 13458                           ; jumptable            260     6 (fixed)
 13459                           ; rangetable             6     6 (fixed)
 13460                           ; spacedrange           10     9 (fixed)
 13461                           ; locatedrange           2     3 (fixed)
 13462                           ;	Chosen strategy is simple_byte
 13463                           
 13464                           	opt asmopt_off
 13465  0AC3  3A00               	xorlw	0^0	; case 0
 13466  0AC4  1903               	skipnz
 13467  0AC5  2AB0               	goto	l11922
 13468  0AC6  3A01               	xorlw	1^0	; case 1
 13469  0AC7  1903               	skipnz
 13470  0AC8  2AB7               	goto	l11924
 13471  0AC9  2B41               	goto	l11964
 13472                           	opt asmopt_on
 13473                           
 13474                           	line	180
 13475                           	
 13476  0ACA                     l2903:	
 13477                           	line	181
 13478                           ;map.c: 181: break;
 13479  0ACA  2B41               	goto	l11964
 13480                           	line	183
 13481                           ;map.c: 183: case 1:
 13482                           	
 13483  0ACB                     l2907:	
 13484                           	line	184
 13485                           ;map.c: 184: switch (victimY)
 13486  0ACB  2ADD               	goto	l11936
 13487                           	line	186
 13488                           ;map.c: 185: {
 13489                           ;map.c: 186: case 0:
 13490                           	
 13491  0ACC                     l2909:	
 13492                           	line	187
 13493                           	
 13494  0ACC                     l11930:	
 13495                           ;map.c: 187: vicZone = 4;
 13496  0ACC  3004               	movlw	(04h)
 13497  0ACD  00AB               	movwf	(??_getVictimZone+0)+0
 13498  0ACE  082B               	movf	(??_getVictimZone+0)+0,w
 13499  0ACF  1683               	bsf	status, 5	;RP0=1, select bank1
 13500  0AD0  1303               	bcf	status, 6	;RP1=0, select bank1
 13501  0AD1  00C9               	movwf	(_vicZone)^080h
 13502                           	line	188
 13503                           ;map.c: 188: break;
 13504  0AD2  2B41               	goto	l11964
 13505                           	line	189
 13506                           ;map.c: 189: case 1:
 13507                           	
 13508  0AD3                     l2911:	
 13509                           	line	190
 13510                           	
 13511  0AD3                     l11932:	
 13512                           ;map.c: 190: vicZone = 4;
 13513  0AD3  3004               	movlw	(04h)
 13514  0AD4  1283               	bcf	status, 5	;RP0=0, select bank0
 13515  0AD5  00AB               	movwf	(??_getVictimZone+0)+0
 13516  0AD6  082B               	movf	(??_getVictimZone+0)+0,w
 13517  0AD7  1683               	bsf	status, 5	;RP0=1, select bank1
 13518  0AD8  1303               	bcf	status, 6	;RP1=0, select bank1
 13519  0AD9  00C9               	movwf	(_vicZone)^080h
 13520                           	line	191
 13521                           ;map.c: 191: break;
 13522  0ADA  2B41               	goto	l11964
 13523                           	line	196
 13524                           ;map.c: 196: default:
 13525                           	
 13526  0ADB                     l2912:	
 13527                           	line	197
 13528                           ;map.c: 197: break;
 13529  0ADB  2B41               	goto	l11964
 13530                           	line	198
 13531                           	
 13532  0ADC                     l11934:	
 13533                           ;map.c: 198: }
 13534  0ADC  2B41               	goto	l11964
 13535                           	line	184
 13536                           	
 13537  0ADD                     l2908:	
 13538                           	
 13539  0ADD                     l11936:	
 13540  0ADD  1283               	bcf	status, 5	;RP0=0, select bank0
 13541  0ADE  082A               	movf	(getVictimZone@victimY),w
 13542                           	; Switch size 1, requested type "space"
 13543                           ; Number of cases is 2, Range of values is 0 to 1
 13544                           ; switch strategies available:
 13545                           ; Name         Instructions Cycles
 13546                           ; simple_byte            7     4 (average)
 13547                           ; direct_byte           14     8 (fixed)
 13548                           ; jumptable            260     6 (fixed)
 13549                           ; rangetable             6     6 (fixed)
 13550                           ; spacedrange           10     9 (fixed)
 13551                           ; locatedrange           2     3 (fixed)
 13552                           ;	Chosen strategy is simple_byte
 13553                           
 13554                           	opt asmopt_off
 13555  0ADF  3A00               	xorlw	0^0	; case 0
 13556  0AE0  1903               	skipnz
 13557  0AE1  2ACC               	goto	l11930
 13558  0AE2  3A01               	xorlw	1^0	; case 1
 13559  0AE3  1903               	skipnz
 13560  0AE4  2AD3               	goto	l11932
 13561  0AE5  2B41               	goto	l11964
 13562                           	opt asmopt_on
 13563                           
 13564                           	line	198
 13565                           	
 13566  0AE6                     l2910:	
 13567                           	line	199
 13568                           ;map.c: 199: break;
 13569  0AE6  2B41               	goto	l11964
 13570                           	line	201
 13571                           ;map.c: 201: case 2:
 13572                           	
 13573  0AE7                     l2913:	
 13574                           	line	202
 13575                           ;map.c: 202: switch (victimY)
 13576  0AE7  2AF7               	goto	l11944
 13577                           	line	206
 13578                           ;map.c: 203: {
 13579                           ;map.c: 206: case 1:
 13580                           	
 13581  0AE8                     l2915:	
 13582                           	line	207
 13583                           	
 13584  0AE8                     l11938:	
 13585                           ;map.c: 207: vicZone = 3;
 13586  0AE8  3003               	movlw	(03h)
 13587  0AE9  00AB               	movwf	(??_getVictimZone+0)+0
 13588  0AEA  082B               	movf	(??_getVictimZone+0)+0,w
 13589  0AEB  1683               	bsf	status, 5	;RP0=1, select bank1
 13590  0AEC  1303               	bcf	status, 6	;RP1=0, select bank1
 13591  0AED  00C9               	movwf	(_vicZone)^080h
 13592                           	line	208
 13593                           ;map.c: 208: break;
 13594  0AEE  2B41               	goto	l11964
 13595                           	line	211
 13596                           ;map.c: 211: case 3:
 13597                           	
 13598  0AEF                     l2917:	
 13599                           	line	212
 13600                           	
 13601  0AEF                     l11940:	
 13602                           ;map.c: 212: vicZone = 1;
 13603  0AEF  1683               	bsf	status, 5	;RP0=1, select bank1
 13604  0AF0  1303               	bcf	status, 6	;RP1=0, select bank1
 13605  0AF1  01C9               	clrf	(_vicZone)^080h
 13606  0AF2  1403               	bsf	status,0
 13607  0AF3  0DC9               	rlf	(_vicZone)^080h,f
 13608                           	line	213
 13609                           ;map.c: 213: break;
 13610  0AF4  2B41               	goto	l11964
 13611                           	line	214
 13612                           ;map.c: 214: default:
 13613                           	
 13614  0AF5                     l2918:	
 13615                           	line	215
 13616                           ;map.c: 215: break;
 13617  0AF5  2B41               	goto	l11964
 13618                           	line	216
 13619                           	
 13620  0AF6                     l11942:	
 13621                           ;map.c: 216: }
 13622  0AF6  2B41               	goto	l11964
 13623                           	line	202
 13624                           	
 13625  0AF7                     l2914:	
 13626                           	
 13627  0AF7                     l11944:	
 13628  0AF7  1283               	bcf	status, 5	;RP0=0, select bank0
 13629  0AF8  082A               	movf	(getVictimZone@victimY),w
 13630                           	; Switch size 1, requested type "space"
 13631                           ; Number of cases is 2, Range of values is 1 to 3
 13632                           ; switch strategies available:
 13633                           ; Name         Instructions Cycles
 13634                           ; simple_byte            7     4 (average)
 13635                           ; direct_byte           20    11 (fixed)
 13636                           ; jumptable            263     9 (fixed)
 13637                           ;	Chosen strategy is simple_byte
 13638                           
 13639                           	opt asmopt_off
 13640  0AF9  3A01               	xorlw	1^0	; case 1
 13641  0AFA  1903               	skipnz
 13642  0AFB  2AE8               	goto	l11938
 13643  0AFC  3A02               	xorlw	3^1	; case 3
 13644  0AFD  1903               	skipnz
 13645  0AFE  2AEF               	goto	l11940
 13646  0AFF  2B41               	goto	l11964
 13647                           	opt asmopt_on
 13648                           
 13649                           	line	216
 13650                           	
 13651  0B00                     l2916:	
 13652                           	line	217
 13653                           ;map.c: 217: break;
 13654  0B00  2B41               	goto	l11964
 13655                           	line	219
 13656                           ;map.c: 219: case 3:
 13657                           	
 13658  0B01                     l2919:	
 13659                           	line	220
 13660                           ;map.c: 220: switch (victimY)
 13661  0B01  2B13               	goto	l11952
 13662                           	line	224
 13663                           ;map.c: 221: {
 13664                           ;map.c: 224: case 1:
 13665                           	
 13666  0B02                     l2921:	
 13667                           	line	225
 13668                           	
 13669  0B02                     l11946:	
 13670                           ;map.c: 225: vicZone = 3;
 13671  0B02  3003               	movlw	(03h)
 13672  0B03  00AB               	movwf	(??_getVictimZone+0)+0
 13673  0B04  082B               	movf	(??_getVictimZone+0)+0,w
 13674  0B05  1683               	bsf	status, 5	;RP0=1, select bank1
 13675  0B06  1303               	bcf	status, 6	;RP1=0, select bank1
 13676  0B07  00C9               	movwf	(_vicZone)^080h
 13677                           	line	226
 13678                           ;map.c: 226: break;
 13679  0B08  2B41               	goto	l11964
 13680                           	line	229
 13681                           ;map.c: 229: case 3:
 13682                           	
 13683  0B09                     l2923:	
 13684                           	line	230
 13685                           	
 13686  0B09                     l11948:	
 13687                           ;map.c: 230: vicZone = 2;
 13688  0B09  3002               	movlw	(02h)
 13689  0B0A  1283               	bcf	status, 5	;RP0=0, select bank0
 13690  0B0B  00AB               	movwf	(??_getVictimZone+0)+0
 13691  0B0C  082B               	movf	(??_getVictimZone+0)+0,w
 13692  0B0D  1683               	bsf	status, 5	;RP0=1, select bank1
 13693  0B0E  1303               	bcf	status, 6	;RP1=0, select bank1
 13694  0B0F  00C9               	movwf	(_vicZone)^080h
 13695                           	line	231
 13696                           ;map.c: 231: break;
 13697  0B10  2B41               	goto	l11964
 13698                           	line	232
 13699                           ;map.c: 232: default:
 13700                           	
 13701  0B11                     l2924:	
 13702                           	line	233
 13703                           ;map.c: 233: break;
 13704  0B11  2B41               	goto	l11964
 13705                           	line	234
 13706                           	
 13707  0B12                     l11950:	
 13708                           ;map.c: 234: }
 13709  0B12  2B41               	goto	l11964
 13710                           	line	220
 13711                           	
 13712  0B13                     l2920:	
 13713                           	
 13714  0B13                     l11952:	
 13715  0B13  1283               	bcf	status, 5	;RP0=0, select bank0
 13716  0B14  082A               	movf	(getVictimZone@victimY),w
 13717                           	; Switch size 1, requested type "space"
 13718                           ; Number of cases is 2, Range of values is 1 to 3
 13719                           ; switch strategies available:
 13720                           ; Name         Instructions Cycles
 13721                           ; simple_byte            7     4 (average)
 13722                           ; direct_byte           20    11 (fixed)
 13723                           ; jumptable            263     9 (fixed)
 13724                           ;	Chosen strategy is simple_byte
 13725                           
 13726                           	opt asmopt_off
 13727  0B15  3A01               	xorlw	1^0	; case 1
 13728  0B16  1903               	skipnz
 13729  0B17  2B02               	goto	l11946
 13730  0B18  3A02               	xorlw	3^1	; case 3
 13731  0B19  1903               	skipnz
 13732  0B1A  2B09               	goto	l11948
 13733  0B1B  2B41               	goto	l11964
 13734                           	opt asmopt_on
 13735                           
 13736                           	line	234
 13737                           	
 13738  0B1C                     l2922:	
 13739                           	line	235
 13740                           ;map.c: 235: break;
 13741  0B1C  2B41               	goto	l11964
 13742                           	line	237
 13743                           ;map.c: 237: case 4:
 13744                           	
 13745  0B1D                     l2925:	
 13746                           	line	238
 13747                           ;map.c: 238: switch (victimY)
 13748  0B1D  2B27               	goto	l11958
 13749                           	line	246
 13750                           ;map.c: 239: {
 13751                           ;map.c: 246: case 3:
 13752                           	
 13753  0B1E                     l2927:	
 13754                           	line	247
 13755                           	
 13756  0B1E                     l11954:	
 13757                           ;map.c: 247: vicZone = 2;
 13758  0B1E  3002               	movlw	(02h)
 13759  0B1F  00AB               	movwf	(??_getVictimZone+0)+0
 13760  0B20  082B               	movf	(??_getVictimZone+0)+0,w
 13761  0B21  1683               	bsf	status, 5	;RP0=1, select bank1
 13762  0B22  1303               	bcf	status, 6	;RP1=0, select bank1
 13763  0B23  00C9               	movwf	(_vicZone)^080h
 13764                           	line	248
 13765                           ;map.c: 248: break;
 13766  0B24  2B41               	goto	l11964
 13767                           	line	249
 13768                           ;map.c: 249: default:
 13769                           	
 13770  0B25                     l2929:	
 13771                           	line	250
 13772                           ;map.c: 250: break;
 13773  0B25  2B41               	goto	l11964
 13774                           	line	251
 13775                           	
 13776  0B26                     l11956:	
 13777                           ;map.c: 251: }
 13778  0B26  2B41               	goto	l11964
 13779                           	line	238
 13780                           	
 13781  0B27                     l2926:	
 13782                           	
 13783  0B27                     l11958:	
 13784  0B27  1283               	bcf	status, 5	;RP0=0, select bank0
 13785  0B28  082A               	movf	(getVictimZone@victimY),w
 13786                           	; Switch size 1, requested type "space"
 13787                           ; Number of cases is 1, Range of values is 3 to 3
 13788                           ; switch strategies available:
 13789                           ; Name         Instructions Cycles
 13790                           ; simple_byte            4     3 (average)
 13791                           ; direct_byte           14    11 (fixed)
 13792                           ; jumptable            263     9 (fixed)
 13793                           ;	Chosen strategy is simple_byte
 13794                           
 13795                           	opt asmopt_off
 13796  0B29  3A03               	xorlw	3^0	; case 3
 13797  0B2A  1903               	skipnz
 13798  0B2B  2B1E               	goto	l11954
 13799  0B2C  2B41               	goto	l11964
 13800                           	opt asmopt_on
 13801                           
 13802                           	line	251
 13803                           	
 13804  0B2D                     l2928:	
 13805                           	line	252
 13806                           ;map.c: 252: break;
 13807  0B2D  2B41               	goto	l11964
 13808                           	line	254
 13809                           ;map.c: 254: default:
 13810                           	
 13811  0B2E                     l2930:	
 13812                           	line	255
 13813                           ;map.c: 255: break;
 13814  0B2E  2B41               	goto	l11964
 13815                           	line	256
 13816                           	
 13817  0B2F                     l11960:	
 13818                           ;map.c: 256: }
 13819  0B2F  2B41               	goto	l11964
 13820                           	line	163
 13821                           	
 13822  0B30                     l2899:	
 13823                           	
 13824  0B30                     l11962:	
 13825  0B30  082C               	movf	(getVictimZone@victimX),w
 13826                           	; Switch size 1, requested type "space"
 13827                           ; Number of cases is 5, Range of values is 0 to 4
 13828                           ; switch strategies available:
 13829                           ; Name         Instructions Cycles
 13830                           ; simple_byte           16     9 (average)
 13831                           ; direct_byte           23     8 (fixed)
 13832                           ; jumptable            260     6 (fixed)
 13833                           ; rangetable             9     6 (fixed)
 13834                           ; spacedrange           16     9 (fixed)
 13835                           ; locatedrange           5     3 (fixed)
 13836                           ;	Chosen strategy is simple_byte
 13837                           
 13838                           	opt asmopt_off
 13839  0B31  3A00               	xorlw	0^0	; case 0
 13840  0B32  1903               	skipnz
 13841  0B33  2AC1               	goto	l11928
 13842  0B34  3A01               	xorlw	1^0	; case 1
 13843  0B35  1903               	skipnz
 13844  0B36  2ADD               	goto	l11936
 13845  0B37  3A03               	xorlw	2^1	; case 2
 13846  0B38  1903               	skipnz
 13847  0B39  2AF7               	goto	l11944
 13848  0B3A  3A01               	xorlw	3^2	; case 3
 13849  0B3B  1903               	skipnz
 13850  0B3C  2B13               	goto	l11952
 13851  0B3D  3A07               	xorlw	4^3	; case 4
 13852  0B3E  1903               	skipnz
 13853  0B3F  2B27               	goto	l11958
 13854  0B40  2B41               	goto	l11964
 13855                           	opt asmopt_on
 13856                           
 13857                           	line	256
 13858                           	
 13859  0B41                     l2906:	
 13860                           	line	258
 13861                           	
 13862  0B41                     l11964:	
 13863                           ;map.c: 258: return vicZone;
 13864  0B41  1683               	bsf	status, 5	;RP0=1, select bank1
 13865  0B42  1303               	bcf	status, 6	;RP1=0, select bank1
 13866  0B43  0849               	movf	(_vicZone)^080h,w
 13867  0B44  2B45               	goto	l2931
 13868                           	
 13869  0B45                     l11966:	
 13870                           	line	259
 13871                           	
 13872  0B45                     l2931:	
 13873  0B45  0008               	return
 13874                           	opt stack 0
 13875                           GLOBAL	__end_of_getVictimZone
 13876  0B46                     	__end_of_getVictimZone:
 13877 ;; =============== function _getVictimZone ends ============
 13878                           
 13879                           	signat	_getVictimZone,8313
 13880                           	global	_getFinalY
 13881                           psect	text2046,local,class=CODE,delta=2
 13882                           global __ptext2046
 13883  110E                     __ptext2046:
 13884                           
 13885 ;; *************** function _getFinalY *****************
 13886 ;; Defined at:
 13887 ;;		line 152 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\map
       .c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;		None
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;		None
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  1    wreg      unsigned char 
 13894 ;; Registers used:
 13895 ;;		wreg
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13901 ;;      Params:         0       0       0       0       0
 13902 ;;      Locals:         0       0       0       0       0
 13903 ;;      Temps:          0       0       0       0       0
 13904 ;;      Totals:         0       0       0       0       0
 13905 ;;Total ram usage:        0 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; Hardware stack levels required when called:    2
 13908 ;; This function calls:
 13909 ;;		Nothing
 13910 ;; This function is called by:
 13911 ;;		_checkForFinalDestination
 13912 ;; This function uses a non-reentrant model
 13913 ;;
 13914                           psect	text2046
 13915                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
 13916                           	line	152
 13917                           	global	__size_of_getFinalY
 13918  0005                     	__size_of_getFinalY	equ	__end_of_getFinalY-_getFinalY
 13919                           	
 13920  110E                     _getFinalY:	
 13921                           	opt	stack 4
 13922                           ; Regs used in _getFinalY: [wreg]
 13923                           	line	153
 13924                           	
 13925  110E                     l11916:	
 13926                           ;map.c: 153: return finalY;
 13927  110E  1683               	bsf	status, 5	;RP0=1, select bank1
 13928  110F  1303               	bcf	status, 6	;RP1=0, select bank1
 13929  1110  0862               	movf	(_finalY)^080h,w
 13930  1111  2912               	goto	l2896
 13931                           	
 13932  1112                     l11918:	
 13933                           	line	154
 13934                           	
 13935  1112                     l2896:	
 13936  1112  0008               	return
 13937                           	opt stack 0
 13938                           GLOBAL	__end_of_getFinalY
 13939  1113                     	__end_of_getFinalY:
 13940 ;; =============== function _getFinalY ends ============
 13941                           
 13942                           	signat	_getFinalY,89
 13943                           	global	_getFinalX
 13944                           psect	text2047,local,class=CODE,delta=2
 13945                           global __ptext2047
 13946  1109                     __ptext2047:
 13947                           
 13948 ;; *************** function _getFinalX *****************
 13949 ;; Defined at:
 13950 ;;		line 147 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\map
       .c"
 13951 ;; Parameters:    Size  Location     Type
 13952 ;;		None
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;		None
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  1    wreg      unsigned char 
 13957 ;; Registers used:
 13958 ;;		wreg
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13964 ;;      Params:         0       0       0       0       0
 13965 ;;      Locals:         0       0       0       0       0
 13966 ;;      Temps:          0       0       0       0       0
 13967 ;;      Totals:         0       0       0       0       0
 13968 ;;Total ram usage:        0 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; Hardware stack levels required when called:    2
 13971 ;; This function calls:
 13972 ;;		Nothing
 13973 ;; This function is called by:
 13974 ;;		_checkForFinalDestination
 13975 ;; This function uses a non-reentrant model
 13976 ;;
 13977                           psect	text2047
 13978                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\map.c"
 13979                           	line	147
 13980                           	global	__size_of_getFinalX
 13981  0005                     	__size_of_getFinalX	equ	__end_of_getFinalX-_getFinalX
 13982                           	
 13983  1109                     _getFinalX:	
 13984                           	opt	stack 4
 13985                           ; Regs used in _getFinalX: [wreg]
 13986                           	line	148
 13987                           	
 13988  1109                     l11912:	
 13989                           ;map.c: 148: return finalX;
 13990  1109  1283               	bcf	status, 5	;RP0=0, select bank0
 13991  110A  1303               	bcf	status, 6	;RP1=0, select bank0
 13992  110B  0863               	movf	(_finalX),w
 13993  110C  290D               	goto	l2893
 13994                           	
 13995  110D                     l11914:	
 13996                           	line	149
 13997                           	
 13998  110D                     l2893:	
 13999  110D  0008               	return
 14000                           	opt stack 0
 14001                           GLOBAL	__end_of_getFinalX
 14002  110E                     	__end_of_getFinalX:
 14003 ;; =============== function _getFinalX ends ============
 14004                           
 14005                           	signat	_getFinalX,89
 14006                           	global	_ser_putch
 14007                           psect	text2048,local,class=CODE,delta=2
 14008                           global __ptext2048
 14009  126E                     __ptext2048:
 14010                           
 14011 ;; *************** function _ser_putch *****************
 14012 ;; Defined at:
 14013 ;;		line 81 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\ser.
       c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;  c               1    wreg     unsigned char 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  c               1   11[BANK0 ] unsigned char 
 14018 ;; Return value:  Size  Location     Type
 14019 ;;		None               void
 14020 ;; Registers used:
 14021 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14027 ;;      Params:         0       0       0       0       0
 14028 ;;      Locals:         0       1       0       0       0
 14029 ;;      Temps:          0       1       0       0       0
 14030 ;;      Totals:         0       2       0       0       0
 14031 ;;Total ram usage:        2 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    2
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		_ser_putArr
 14038 ;;		_play_iCreate_song
 14039 ;;		_drive
 14040 ;;		_driveForDistance
 14041 ;;		_waitFor
 14042 ;;		_initIRobot
 14043 ;;		_lookForVictim
 14044 ;;		_EEPROMToSerial
 14045 ;;		_ser_puts
 14046 ;;		_ser_puts2
 14047 ;;		_ser_puthex
 14048 ;; This function uses a non-reentrant model
 14049 ;;
 14050                           psect	text2048
 14051                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\ser.c"
 14052                           	line	81
 14053                           	global	__size_of_ser_putch
 14054  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 14055                           	
 14056  126E                     _ser_putch:	
 14057                           	opt	stack 3
 14058                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 14059                           ;ser_putch@c stored from wreg
 14060  126E  1283               	bcf	status, 5	;RP0=0, select bank0
 14061  126F  1303               	bcf	status, 6	;RP1=0, select bank0
 14062  1270  00AB               	movwf	(ser_putch@c)
 14063                           	line	82
 14064                           	
 14065  1271                     l11884:	
 14066                           ;ser.c: 82: while (((txiptr+1) & (16-1))==txoptr)
 14067  1271  2A73               	goto	l11886
 14068                           	
 14069  1272                     l3649:	
 14070                           	line	83
 14071                           ;ser.c: 83: continue;
 14072  1272  2A73               	goto	l11886
 14073                           	
 14074  1273                     l3648:	
 14075                           	line	82
 14076                           	
 14077  1273                     l11886:	
 14078  1273  087A               	movf	(_txiptr),w	;volatile
 14079  1274  3E01               	addlw	01h
 14080  1275  390F               	andlw	0Fh
 14081  1276  067B               	xorwf	(_txoptr),w	;volatile
 14082  1277  1903               	skipnz
 14083  1278  2A7A               	goto	u5811
 14084  1279  2A7B               	goto	u5810
 14085  127A                     u5811:
 14086  127A  2A73               	goto	l11886
 14087  127B                     u5810:
 14088                           	
 14089  127B                     l3650:	
 14090                           	line	84
 14091                           ;ser.c: 84: GIE=0;
 14092  127B  138B               	bcf	(95/8),(95)&7
 14093                           	line	85
 14094                           	
 14095  127C                     l11888:	
 14096                           ;ser.c: 85: txfifo[txiptr] = c;
 14097  127C  082B               	movf	(ser_putch@c),w
 14098  127D  00AA               	movwf	(??_ser_putch+0)+0
 14099  127E  087A               	movf	(_txiptr),w
 14100  127F  3EB0               	addlw	_txfifo&0ffh
 14101  1280  0084               	movwf	fsr0
 14102  1281  082A               	movf	(??_ser_putch+0)+0,w
 14103  1282  1383               	bcf	status, 7	;select IRP bank1
 14104  1283  0080               	movwf	indf
 14105                           	line	86
 14106                           	
 14107  1284                     l11890:	
 14108                           ;ser.c: 86: txiptr=(txiptr+1) & (16-1);
 14109  1284  087A               	movf	(_txiptr),w	;volatile
 14110  1285  3E01               	addlw	01h
 14111  1286  390F               	andlw	0Fh
 14112  1287  00AA               	movwf	(??_ser_putch+0)+0
 14113  1288  082A               	movf	(??_ser_putch+0)+0,w
 14114  1289  00FA               	movwf	(_txiptr)	;volatile
 14115                           	line	87
 14116                           	
 14117  128A                     l11892:	
 14118                           ;ser.c: 87: TXIE=1;
 14119  128A  1683               	bsf	status, 5	;RP0=1, select bank1
 14120  128B  1303               	bcf	status, 6	;RP1=0, select bank1
 14121  128C  160C               	bsf	(1124/8)^080h,(1124)&7
 14122                           	line	88
 14123                           	
 14124  128D                     l11894:	
 14125                           ;ser.c: 88: GIE=1;
 14126  128D  178B               	bsf	(95/8),(95)&7
 14127                           	line	89
 14128                           	
 14129  128E                     l3651:	
 14130  128E  0008               	return
 14131                           	opt stack 0
 14132                           GLOBAL	__end_of_ser_putch
 14133  128F                     	__end_of_ser_putch:
 14134 ;; =============== function _ser_putch ends ============
 14135                           
 14136                           	signat	_ser_putch,4216
 14137                           	global	_isr1
 14138                           psect	text2049,local,class=CODE,delta=2
 14139                           global __ptext2049
 14140  0C97                     __ptext2049:
 14141                           
 14142 ;; *************** function _isr1 *****************
 14143 ;; Defined at:
 14144 ;;		line 62 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.7\main
       .c"
 14145 ;; Parameters:    Size  Location     Type
 14146 ;;		None
 14147 ;; Auto vars:     Size  Location     Type
 14148 ;;		None
 14149 ;; Return value:  Size  Location     Type
 14150 ;;		None               void
 14151 ;; Registers used:
 14152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14153 ;; Tracked objects:
 14154 ;;		On entry : 0/0
 14155 ;;		On exit  : 0/0
 14156 ;;		Unchanged: 0/0
 14157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14158 ;;      Params:         0       0       0       0       0
 14159 ;;      Locals:         0       0       0       0       0
 14160 ;;      Temps:          0      10       0       0       0
 14161 ;;      Totals:         0      10       0       0       0
 14162 ;;Total ram usage:       10 bytes
 14163 ;; Hardware stack levels used:    1
 14164 ;; Hardware stack levels required when called:    1
 14165 ;; This function calls:
 14166 ;;		___lwmod
 14167 ;; This function is called by:
 14168 ;;		Interrupt level 1
 14169 ;; This function uses a non-reentrant model
 14170 ;;
 14171                           psect	text2049
 14172                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.7\main.c"
 14173                           	line	62
 14174                           	global	__size_of_isr1
 14175  00DC                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 14176                           	
 14177  0C97                     _isr1:	
 14178                           	opt	stack 0
 14179                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14180                           psect	intentry,class=CODE,delta=2
 14181                           global __pintentry
 14182  0004                     __pintentry:
 14183                           global interrupt_function
 14184  0004                     interrupt_function:
 14185                           	global saved_w
 14186  007E                     	saved_w	set	btemp+0
 14187  0004  00FE               	movwf	saved_w
 14188  0005  0E03               	swapf	status,w
 14189  0006  1283               	bcf	status, 5	;RP0=0, select bank0
 14190  0007  1303               	bcf	status, 6	;RP1=0, select bank0
 14191  0008  00A6               	movwf	(??_isr1+6)
 14192  0009  0804               	movf	fsr0,w
 14193  000A  00A7               	movwf	(??_isr1+7)
 14194  000B  080A               	movf	pclath,w
 14195  000C  00A8               	movwf	(??_isr1+8)
 14196  000D  087F               	movf	btemp+1,w
 14197  000E  00A9               	movwf	(??_isr1+9)
 14198  000F  120A  158A  2C97   	ljmp	_isr1
 14199                           psect	text2049
 14200                           	line	64
 14201                           	
 14202  0C97                     i1l10568:	
 14203                           ;main.c: 64: if(TMR0IF)
 14204  0C97  1D0B               	btfss	(90/8),(90)&7
 14205  0C98  2C9A               	goto	u374_21
 14206  0C99  2C9B               	goto	u374_20
 14207  0C9A                     u374_21:
 14208  0C9A  2D67               	goto	i1l6704
 14209  0C9B                     u374_20:
 14210                           	line	66
 14211                           	
 14212  0C9B                     i1l10570:	
 14213                           ;main.c: 65: {
 14214                           ;main.c: 66: TMR0IF = 0;
 14215  0C9B  110B               	bcf	(90/8),(90)&7
 14216                           	line	67
 14217                           	
 14218  0C9C                     i1l10572:	
 14219                           ;main.c: 67: TMR0 = 100;
 14220  0C9C  3064               	movlw	(064h)
 14221  0C9D  0081               	movwf	(1)	;volatile
 14222                           	line	69
 14223                           ;main.c: 69: RTC_Counter++;
 14224  0C9E  3001               	movlw	low(01h)
 14225  0C9F  07DC               	addwf	(_RTC_Counter),f	;volatile
 14226  0CA0  1803               	skipnc
 14227  0CA1  0ADD               	incf	(_RTC_Counter+1),f	;volatile
 14228  0CA2  3000               	movlw	high(01h)
 14229  0CA3  07DD               	addwf	(_RTC_Counter+1),f	;volatile
 14230                           	line	71
 14231                           	
 14232  0CA4                     i1l10574:	
 14233                           ;main.c: 71: RTC_FLAG_1MS = 1;
 14234  0CA4  14F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 14235                           	line	73
 14236                           	
 14237  0CA5                     i1l10576:	
 14238                           ;main.c: 73: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
 14239  0CA5  300A               	movlw	low(0Ah)
 14240  0CA6  00F2               	movwf	(?___lwmod)
 14241  0CA7  3000               	movlw	high(0Ah)
 14242  0CA8  00F3               	movwf	((?___lwmod))+1
 14243  0CA9  085D               	movf	(_RTC_Counter+1),w	;volatile
 14244  0CAA  01F5               	clrf	1+(?___lwmod)+02h
 14245  0CAB  07F5               	addwf	1+(?___lwmod)+02h
 14246  0CAC  085C               	movf	(_RTC_Counter),w	;volatile
 14247  0CAD  01F4               	clrf	0+(?___lwmod)+02h
 14248  0CAE  07F4               	addwf	0+(?___lwmod)+02h
 14249                           
 14250  0CAF  160A  118A  2654   	fcall	___lwmod
              120A  158A         
 14251  0CB4  0873               	movf	((1+(?___lwmod))),w
 14252  0CB5  0472               	iorwf	((0+(?___lwmod))),w
 14253  0CB6  1D03               	skipz
 14254  0CB7  2CB9               	goto	u375_21
 14255  0CB8  2CBA               	goto	u375_20
 14256  0CB9                     u375_21:
 14257  0CB9  2CBC               	goto	i1l10580
 14258  0CBA                     u375_20:
 14259                           	
 14260  0CBA                     i1l10578:	
 14261  0CBA  1470               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
 14262  0CBB  2CBC               	goto	i1l10580
 14263                           	
 14264  0CBC                     i1l6694:	
 14265                           	line	74
 14266                           	
 14267  0CBC                     i1l10580:	
 14268                           ;main.c: 74: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
 14269  0CBC  3032               	movlw	low(032h)
 14270  0CBD  00F2               	movwf	(?___lwmod)
 14271  0CBE  3000               	movlw	high(032h)
 14272  0CBF  00F3               	movwf	((?___lwmod))+1
 14273  0CC0  1283               	bcf	status, 5	;RP0=0, select bank0
 14274  0CC1  1303               	bcf	status, 6	;RP1=0, select bank0
 14275  0CC2  085D               	movf	(_RTC_Counter+1),w	;volatile
 14276  0CC3  01F5               	clrf	1+(?___lwmod)+02h
 14277  0CC4  07F5               	addwf	1+(?___lwmod)+02h
 14278  0CC5  085C               	movf	(_RTC_Counter),w	;volatile
 14279  0CC6  01F4               	clrf	0+(?___lwmod)+02h
 14280  0CC7  07F4               	addwf	0+(?___lwmod)+02h
 14281                           
 14282  0CC8  160A  118A  2654   	fcall	___lwmod
              120A  158A         
 14283  0CCD  0873               	movf	((1+(?___lwmod))),w
 14284  0CCE  0472               	iorwf	((0+(?___lwmod))),w
 14285  0CCF  1D03               	skipz
 14286  0CD0  2CD2               	goto	u376_21
 14287  0CD1  2CD3               	goto	u376_20
 14288  0CD2                     u376_21:
 14289  0CD2  2CD5               	goto	i1l10584
 14290  0CD3                     u376_20:
 14291                           	
 14292  0CD3                     i1l10582:	
 14293  0CD3  15F0               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
 14294  0CD4  2CD5               	goto	i1l10584
 14295                           	
 14296  0CD5                     i1l6695:	
 14297                           	line	75
 14298                           	
 14299  0CD5                     i1l10584:	
 14300                           ;main.c: 75: if(RTC_Counter % 500 == 0)
 14301  0CD5  30F4               	movlw	low(01F4h)
 14302  0CD6  00F2               	movwf	(?___lwmod)
 14303  0CD7  3001               	movlw	high(01F4h)
 14304  0CD8  00F3               	movwf	((?___lwmod))+1
 14305  0CD9  1283               	bcf	status, 5	;RP0=0, select bank0
 14306  0CDA  1303               	bcf	status, 6	;RP1=0, select bank0
 14307  0CDB  085D               	movf	(_RTC_Counter+1),w	;volatile
 14308  0CDC  01F5               	clrf	1+(?___lwmod)+02h
 14309  0CDD  07F5               	addwf	1+(?___lwmod)+02h
 14310  0CDE  085C               	movf	(_RTC_Counter),w	;volatile
 14311  0CDF  01F4               	clrf	0+(?___lwmod)+02h
 14312  0CE0  07F4               	addwf	0+(?___lwmod)+02h
 14313                           
 14314  0CE1  160A  118A  2654   	fcall	___lwmod
              120A  158A         
 14315                           	line	78
 14316                           ;main.c: 76: {
 14317                           	
 14318  0CE6                     i1l6696:	
 14319                           	line	80
 14320                           ;main.c: 78: }
 14321                           ;main.c: 80: if(!RB0)
 14322  0CE6  1283               	bcf	status, 5	;RP0=0, select bank0
 14323  0CE7  1303               	bcf	status, 6	;RP1=0, select bank0
 14324  0CE8  1806               	btfsc	(48/8),(48)&7
 14325  0CE9  2CEB               	goto	u377_21
 14326  0CEA  2CEC               	goto	u377_20
 14327  0CEB                     u377_21:
 14328  0CEB  2D16               	goto	i1l6697
 14329  0CEC                     u377_20:
 14330                           	line	82
 14331                           	
 14332  0CEC                     i1l10586:	
 14333                           ;main.c: 81: {
 14334                           ;main.c: 82: start.debounceCount++;
 14335  0CEC  3001               	movlw	(01h)
 14336  0CED  00A0               	movwf	(??_isr1+0)+0
 14337  0CEE  0820               	movf	(??_isr1+0)+0,w
 14338  0CEF  1683               	bsf	status, 5	;RP0=1, select bank1
 14339  0CF0  1303               	bcf	status, 6	;RP1=0, select bank1
 14340  0CF1  07C2               	addwf	0+(_start)^080h+02h,f
 14341                           	line	83
 14342                           	
 14343  0CF2                     i1l10588:	
 14344                           ;main.c: 83: if(start.debounceCount >= 10 & start.released)
 14345  0CF2  0841               	movf	0+(_start)^080h+01h,w
 14346  0CF3  1283               	bcf	status, 5	;RP0=0, select bank0
 14347  0CF4  1303               	bcf	status, 6	;RP1=0, select bank0
 14348  0CF5  00A0               	movwf	(??_isr1+0)+0
 14349  0CF6  01A1               	clrf	(??_isr1+0)+0+1
 14350  0CF7  300A               	movlw	(0Ah)
 14351  0CF8  1683               	bsf	status, 5	;RP0=1, select bank1
 14352  0CF9  1303               	bcf	status, 6	;RP1=0, select bank1
 14353  0CFA  0242               	subwf	0+(_start)^080h+02h,w
 14354  0CFB  3000               	movlw	0
 14355  0CFC  1803               	skipnc
 14356  0CFD  3001               	movlw	1
 14357  0CFE  1283               	bcf	status, 5	;RP0=0, select bank0
 14358  0CFF  1303               	bcf	status, 6	;RP1=0, select bank0
 14359  0D00  00A2               	movwf	(??_isr1+2)+0
 14360  0D01  01A3               	clrf	(??_isr1+2)+0+1
 14361  0D02  0820               	movf	0+(??_isr1+0)+0,w
 14362  0D03  0522               	andwf	0+(??_isr1+2)+0,w
 14363  0D04  00A4               	movwf	(??_isr1+4)+0
 14364  0D05  0821               	movf	1+(??_isr1+0)+0,w
 14365  0D06  0523               	andwf	1+(??_isr1+2)+0,w
 14366  0D07  00A5               	movwf	1+(??_isr1+4)+0
 14367  0D08  0825               	movf	1+(??_isr1+4)+0,w
 14368  0D09  0424               	iorwf	0+(??_isr1+4)+0,w
 14369  0D0A  1903               	skipnz
 14370  0D0B  2D0D               	goto	u378_21
 14371  0D0C  2D0E               	goto	u378_20
 14372  0D0D                     u378_21:
 14373  0D0D  2D1D               	goto	i1l10596
 14374  0D0E                     u378_20:
 14375                           	line	85
 14376                           	
 14377  0D0E                     i1l10590:	
 14378                           ;main.c: 84: {
 14379                           ;main.c: 85: start.pressed = 1;
 14380  0D0E  1683               	bsf	status, 5	;RP0=1, select bank1
 14381  0D0F  1303               	bcf	status, 6	;RP1=0, select bank1
 14382  0D10  01C0               	clrf	(_start)^080h
 14383  0D11  1403               	bsf	status,0
 14384  0D12  0DC0               	rlf	(_start)^080h,f
 14385                           	line	86
 14386                           	
 14387  0D13                     i1l10592:	
 14388                           ;main.c: 86: start.released = 0;
 14389  0D13  01C1               	clrf	0+(_start)^080h+01h
 14390  0D14  2D1D               	goto	i1l10596
 14391                           	line	87
 14392                           	
 14393  0D15                     i1l6698:	
 14394                           	line	88
 14395                           ;main.c: 87: }
 14396                           ;main.c: 88: }
 14397  0D15  2D1D               	goto	i1l10596
 14398                           	line	89
 14399                           	
 14400  0D16                     i1l6697:	
 14401                           	line	91
 14402                           ;main.c: 89: else
 14403                           ;main.c: 90: {
 14404                           ;main.c: 91: start.debounceCount = 0;
 14405  0D16  1683               	bsf	status, 5	;RP0=1, select bank1
 14406  0D17  1303               	bcf	status, 6	;RP1=0, select bank1
 14407  0D18  01C2               	clrf	0+(_start)^080h+02h
 14408                           	line	92
 14409                           	
 14410  0D19                     i1l10594:	
 14411                           ;main.c: 92: start.released = 1;
 14412  0D19  01C1               	clrf	0+(_start)^080h+01h
 14413  0D1A  1403               	bsf	status,0
 14414  0D1B  0DC1               	rlf	0+(_start)^080h+01h,f
 14415  0D1C  2D1D               	goto	i1l10596
 14416                           	line	93
 14417                           	
 14418  0D1D                     i1l6699:	
 14419                           	line	95
 14420                           	
 14421  0D1D                     i1l10596:	
 14422                           ;main.c: 93: }
 14423                           ;main.c: 95: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 14424  0D1D  1283               	bcf	status, 5	;RP0=0, select bank0
 14425  0D1E  1E8C               	btfss	(101/8),(101)&7
 14426  0D1F  2D21               	goto	u379_21
 14427  0D20  2D22               	goto	u379_20
 14428  0D21                     u379_21:
 14429  0D21  2D40               	goto	i1l10606
 14430  0D22                     u379_20:
 14431                           	
 14432  0D22                     i1l10598:	
 14433  0D22  081A               	movf	(26),w	;volatile
 14434  0D23  00A0               	movwf	(??_isr1+0)+0
 14435  0D24  0878               	movf	(_rxiptr),w
 14436  0D25  3EA0               	addlw	_rxfifo&0ffh
 14437  0D26  0084               	movwf	fsr0
 14438  0D27  0820               	movf	(??_isr1+0)+0,w
 14439  0D28  1383               	bcf	status, 7	;select IRP bank1
 14440  0D29  0080               	movwf	indf
 14441                           	
 14442  0D2A                     i1l10600:	
 14443  0D2A  0878               	movf	(_rxiptr),w	;volatile
 14444  0D2B  3E01               	addlw	01h
 14445  0D2C  390F               	andlw	0Fh
 14446  0D2D  00A0               	movwf	(??_isr1+0)+0
 14447  0D2E  0820               	movf	(??_isr1+0)+0,w
 14448  0D2F  1683               	bsf	status, 5	;RP0=1, select bank1
 14449  0D30  1303               	bcf	status, 6	;RP1=0, select bank1
 14450  0D31  00C6               	movwf	(_ser_tmp)^080h
 14451                           	
 14452  0D32                     i1l10602:	
 14453  0D32  0846               	movf	(_ser_tmp)^080h,w
 14454  0D33  0679               	xorwf	(_rxoptr),w	;volatile
 14455  0D34  1903               	skipnz
 14456  0D35  2D37               	goto	u380_21
 14457  0D36  2D38               	goto	u380_20
 14458  0D37                     u380_21:
 14459  0D37  2D40               	goto	i1l10606
 14460  0D38                     u380_20:
 14461                           	
 14462  0D38                     i1l10604:	
 14463  0D38  0846               	movf	(_ser_tmp)^080h,w
 14464  0D39  1283               	bcf	status, 5	;RP0=0, select bank0
 14465  0D3A  1303               	bcf	status, 6	;RP1=0, select bank0
 14466  0D3B  00A0               	movwf	(??_isr1+0)+0
 14467  0D3C  0820               	movf	(??_isr1+0)+0,w
 14468  0D3D  00F8               	movwf	(_rxiptr)	;volatile
 14469  0D3E  2D40               	goto	i1l10606
 14470                           	
 14471  0D3F                     i1l6701:	
 14472  0D3F  2D40               	goto	i1l10606
 14473                           	
 14474  0D40                     i1l6700:	
 14475                           	
 14476  0D40                     i1l10606:	
 14477  0D40  1283               	bcf	status, 5	;RP0=0, select bank0
 14478  0D41  1E0C               	btfss	(100/8),(100)&7
 14479  0D42  2D44               	goto	u381_21
 14480  0D43  2D45               	goto	u381_20
 14481  0D44                     u381_21:
 14482  0D44  2D67               	goto	i1l6704
 14483  0D45                     u381_20:
 14484                           	
 14485  0D45                     i1l10608:	
 14486  0D45  1683               	bsf	status, 5	;RP0=1, select bank1
 14487  0D46  1303               	bcf	status, 6	;RP1=0, select bank1
 14488  0D47  1E0C               	btfss	(1124/8)^080h,(1124)&7
 14489  0D48  2D4A               	goto	u382_21
 14490  0D49  2D4B               	goto	u382_20
 14491  0D4A                     u382_21:
 14492  0D4A  2D67               	goto	i1l6704
 14493  0D4B                     u382_20:
 14494                           	
 14495  0D4B                     i1l10610:	
 14496  0D4B  087B               	movf	(_txoptr),w
 14497  0D4C  3EB0               	addlw	_txfifo&0ffh
 14498  0D4D  0084               	movwf	fsr0
 14499  0D4E  1383               	bcf	status, 7	;select IRP bank1
 14500  0D4F  0800               	movf	indf,w
 14501  0D50  1283               	bcf	status, 5	;RP0=0, select bank0
 14502  0D51  1303               	bcf	status, 6	;RP1=0, select bank0
 14503  0D52  0099               	movwf	(25)	;volatile
 14504                           	
 14505  0D53                     i1l10612:	
 14506  0D53  3001               	movlw	(01h)
 14507  0D54  00A0               	movwf	(??_isr1+0)+0
 14508  0D55  0820               	movf	(??_isr1+0)+0,w
 14509  0D56  07FB               	addwf	(_txoptr),f	;volatile
 14510                           	
 14511  0D57                     i1l10614:	
 14512  0D57  300F               	movlw	(0Fh)
 14513  0D58  00A0               	movwf	(??_isr1+0)+0
 14514  0D59  0820               	movf	(??_isr1+0)+0,w
 14515  0D5A  05FB               	andwf	(_txoptr),f	;volatile
 14516                           	
 14517  0D5B                     i1l10616:	
 14518  0D5B  087B               	movf	(_txoptr),w	;volatile
 14519  0D5C  067A               	xorwf	(_txiptr),w	;volatile
 14520  0D5D  1D03               	skipz
 14521  0D5E  2D60               	goto	u383_21
 14522  0D5F  2D61               	goto	u383_20
 14523  0D60                     u383_21:
 14524  0D60  2D67               	goto	i1l6704
 14525  0D61                     u383_20:
 14526                           	
 14527  0D61                     i1l10618:	
 14528  0D61  1683               	bsf	status, 5	;RP0=1, select bank1
 14529  0D62  1303               	bcf	status, 6	;RP1=0, select bank1
 14530  0D63  120C               	bcf	(1124/8)^080h,(1124)&7
 14531  0D64  2D67               	goto	i1l6704
 14532                           	
 14533  0D65                     i1l6703:	
 14534  0D65  2D67               	goto	i1l6704
 14535                           	
 14536  0D66                     i1l6702:	
 14537  0D66  2D67               	goto	i1l6704
 14538                           	line	96
 14539                           	
 14540  0D67                     i1l6693:	
 14541                           	line	97
 14542                           	
 14543  0D67                     i1l6704:	
 14544  0D67  1283               	bcf	status, 5	;RP0=0, select bank0
 14545  0D68  0829               	movf	(??_isr1+9),w
 14546  0D69  00FF               	movwf	btemp+1
 14547  0D6A  0828               	movf	(??_isr1+8),w
 14548  0D6B  008A               	movwf	pclath
 14549  0D6C  0827               	movf	(??_isr1+7),w
 14550  0D6D  0084               	movwf	fsr0
 14551  0D6E  0E26               	swapf	(??_isr1+6)^00h,w
 14552  0D6F  0083               	movwf	status
 14553  0D70  0EFE               	swapf	saved_w,f
 14554  0D71  0E7E               	swapf	saved_w,w
 14555  0D72  0009               	retfie
 14556                           	opt stack 0
 14557                           GLOBAL	__end_of_isr1
 14558  0D73                     	__end_of_isr1:
 14559 ;; =============== function _isr1 ends ============
 14560                           
 14561                           	signat	_isr1,88
 14562                           	global	___lwmod
 14563                           psect	text2050,local,class=CODE,delta=2
 14564                           global __ptext2050
 14565  1654                     __ptext2050:
 14566                           
 14567 ;; *************** function ___lwmod *****************
 14568 ;; Defined at:
 14569 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\lwmod.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;  divisor         2    0[COMMON] unsigned int 
 14572 ;;  dividend        2    2[COMMON] unsigned int 
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;  counter         1    5[COMMON] unsigned char 
 14575 ;; Return value:  Size  Location     Type
 14576 ;;                  2    0[COMMON] unsigned int 
 14577 ;; Registers used:
 14578 ;;		wreg, status,2, status,0
 14579 ;; Tracked objects:
 14580 ;;		On entry : 0/0
 14581 ;;		On exit  : 0/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14584 ;;      Params:         4       0       0       0       0
 14585 ;;      Locals:         1       0       0       0       0
 14586 ;;      Temps:          1       0       0       0       0
 14587 ;;      Totals:         6       0       0       0       0
 14588 ;;Total ram usage:        6 bytes
 14589 ;; Hardware stack levels used:    1
 14590 ;; This function calls:
 14591 ;;		Nothing
 14592 ;; This function is called by:
 14593 ;;		_isr1
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           psect	text2050
 14597                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\lwmod.c"
 14598                           	line	5
 14599                           	global	__size_of___lwmod
 14600  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 14601                           	
 14602  1654                     ___lwmod:	
 14603                           	opt	stack 0
 14604                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14605                           	line	8
 14606                           	
 14607  1654                     i1l10650:	
 14608  1654  0873               	movf	(___lwmod@divisor+1),w
 14609  1655  0472               	iorwf	(___lwmod@divisor),w
 14610  1656  1903               	skipnz
 14611  1657  2E59               	goto	u394_21
 14612  1658  2E5A               	goto	u394_20
 14613  1659                     u394_21:
 14614  1659  2E90               	goto	i1l10668
 14615  165A                     u394_20:
 14616                           	line	9
 14617                           	
 14618  165A                     i1l10652:	
 14619  165A  01F7               	clrf	(___lwmod@counter)
 14620  165B  1403               	bsf	status,0
 14621  165C  0DF7               	rlf	(___lwmod@counter),f
 14622                           	line	10
 14623  165D  2E6A               	goto	i1l10658
 14624                           	
 14625  165E                     i1l7528:	
 14626                           	line	11
 14627                           	
 14628  165E                     i1l10654:	
 14629  165E  3001               	movlw	01h
 14630                           	
 14631  165F                     u395_25:
 14632  165F  1003               	clrc
 14633  1660  0DF2               	rlf	(___lwmod@divisor),f
 14634  1661  0DF3               	rlf	(___lwmod@divisor+1),f
 14635  1662  3EFF               	addlw	-1
 14636  1663  1D03               	skipz
 14637  1664  2E5F               	goto	u395_25
 14638                           	line	12
 14639                           	
 14640  1665                     i1l10656:	
 14641  1665  3001               	movlw	(01h)
 14642  1666  00F6               	movwf	(??___lwmod+0)+0
 14643  1667  0876               	movf	(??___lwmod+0)+0,w
 14644  1668  07F7               	addwf	(___lwmod@counter),f
 14645  1669  2E6A               	goto	i1l10658
 14646                           	line	13
 14647                           	
 14648  166A                     i1l7527:	
 14649                           	line	10
 14650                           	
 14651  166A                     i1l10658:	
 14652  166A  1FF3               	btfss	(___lwmod@divisor+1),(15)&7
 14653  166B  2E6D               	goto	u396_21
 14654  166C  2E6E               	goto	u396_20
 14655  166D                     u396_21:
 14656  166D  2E5E               	goto	i1l10654
 14657  166E                     u396_20:
 14658  166E  2E70               	goto	i1l10660
 14659                           	
 14660  166F                     i1l7529:	
 14661  166F  2E70               	goto	i1l10660
 14662                           	line	14
 14663                           	
 14664  1670                     i1l7530:	
 14665                           	line	15
 14666                           	
 14667  1670                     i1l10660:	
 14668  1670  0873               	movf	(___lwmod@divisor+1),w
 14669  1671  0275               	subwf	(___lwmod@dividend+1),w
 14670  1672  1D03               	skipz
 14671  1673  2E76               	goto	u397_25
 14672  1674  0872               	movf	(___lwmod@divisor),w
 14673  1675  0274               	subwf	(___lwmod@dividend),w
 14674  1676                     u397_25:
 14675  1676  1C03               	skipc
 14676  1677  2E79               	goto	u397_21
 14677  1678  2E7A               	goto	u397_20
 14678  1679                     u397_21:
 14679  1679  2E81               	goto	i1l10664
 14680  167A                     u397_20:
 14681                           	line	16
 14682                           	
 14683  167A                     i1l10662:	
 14684  167A  0872               	movf	(___lwmod@divisor),w
 14685  167B  02F4               	subwf	(___lwmod@dividend),f
 14686  167C  0873               	movf	(___lwmod@divisor+1),w
 14687  167D  1C03               	skipc
 14688  167E  03F5               	decf	(___lwmod@dividend+1),f
 14689  167F  02F5               	subwf	(___lwmod@dividend+1),f
 14690  1680  2E81               	goto	i1l10664
 14691                           	
 14692  1681                     i1l7531:	
 14693                           	line	17
 14694                           	
 14695  1681                     i1l10664:	
 14696  1681  3001               	movlw	01h
 14697                           	
 14698  1682                     u398_25:
 14699  1682  1003               	clrc
 14700  1683  0CF3               	rrf	(___lwmod@divisor+1),f
 14701  1684  0CF2               	rrf	(___lwmod@divisor),f
 14702  1685  3EFF               	addlw	-1
 14703  1686  1D03               	skipz
 14704  1687  2E82               	goto	u398_25
 14705                           	line	18
 14706                           	
 14707  1688                     i1l10666:	
 14708  1688  3001               	movlw	low(01h)
 14709  1689  02F7               	subwf	(___lwmod@counter),f
 14710  168A  1D03               	btfss	status,2
 14711  168B  2E8D               	goto	u399_21
 14712  168C  2E8E               	goto	u399_20
 14713  168D                     u399_21:
 14714  168D  2E70               	goto	i1l10660
 14715  168E                     u399_20:
 14716  168E  2E90               	goto	i1l10668
 14717                           	
 14718  168F                     i1l7532:	
 14719  168F  2E90               	goto	i1l10668
 14720                           	line	19
 14721                           	
 14722  1690                     i1l7526:	
 14723                           	line	20
 14724                           	
 14725  1690                     i1l10668:	
 14726  1690  0875               	movf	(___lwmod@dividend+1),w
 14727  1691  01F3               	clrf	(?___lwmod+1)
 14728  1692  07F3               	addwf	(?___lwmod+1)
 14729  1693  0874               	movf	(___lwmod@dividend),w
 14730  1694  01F2               	clrf	(?___lwmod)
 14731  1695  07F2               	addwf	(?___lwmod)
 14732                           
 14733  1696  2E97               	goto	i1l7533
 14734                           	
 14735  1697                     i1l10670:	
 14736                           	line	21
 14737                           	
 14738  1697                     i1l7533:	
 14739  1697  0008               	return
 14740                           	opt stack 0
 14741                           GLOBAL	__end_of___lwmod
 14742  1698                     	__end_of___lwmod:
 14743 ;; =============== function ___lwmod ends ============
 14744                           
 14745                           	signat	___lwmod,8314
 14746                           psect	text2051,local,class=CODE,delta=2
 14747                           global __ptext2051
 14748  0000                     __ptext2051:
 14749                           	global	btemp
 14750  007E                     	btemp set 07Eh
 14751                           
 14752                           	DABS	1,126,2	;btemp
 14753                           	global	wtemp0
 14754  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon May 27 22:17:38 2013

               __end_of_lookForVictim 08D1             __end_of_lcd_write_control 11B3  
           __end_of_updateOrientation 1167                                     pc 0002  
                                  _GO 00FA                                    _RD 0C60  
                                  _WR 0C61                          ___awdiv@sign 0036  
                                  fsr 0004                   ___wmul@multiplicand 002C  
                    ??_getOrientation 002A                          ___ftadd@exp1 00D3  
                        ___ftadd@exp2 00D2                          ___ftadd@sign 00D1  
                                 l700 11C8                                   l703 155D  
                                 l704 155D                                   l705 1562  
                                 l706 1591                                   l690 15D5  
                                 l691 15FF                                   l692 15D9  
                                 l693 15DD                                   l694 15E1  
                                 l695 15E5                                   l696 15E9  
                                 l689 15EE                                   l697 1611  
                                 _GIE 005F                                   _RB0 0030  
                                 _RE0 0048                                   _RE1 0049  
                                 _RE2 004A                          _stepPosition 00C7  
                                 _RX9 00C6                                   _TX9 04C6  
                     ??_getVictimZone 002B                                   fsr0 0004  
                                 indf 0000                    drive@highByteSpeed 0032  
           lcd_write_1_digit_bcd@data 002D                       ?_lcd_set_cursor 0072  
              __end_of_updateLocation 0939                                  l2132 114A  
                                l2141 1155                                  l2126 11B2  
                                l2135 12E9                                  l2136 12D6  
                                l2129 118B                                  l2137 12F6  
                                l2153 13E8                                  l2138 12F6  
                                l2900 0AAF                                  l2901 0AC1  
                                l2910 0AE6                                  l2902 0AB0  
                                l5070 03C5                                  l2911 0AD3  
                                l2903 0ACA                                  l5071 02E6  
                                l2920 0B13                                  l2912 0ADB  
                                l2904 0AB7                                  l3632 11D4  
                                l5072 03C4                                  l5064 0211  
                                l2921 0B02                                  l2913 0AE7  
                                l2905 0ABF                                  l3633 11DF  
                                l5073 032D                                  l5065 03C7  
                                l5081 0822                                  l3650 127B  
                                l2906 0B41                                  l2930 0B2E  
                                l2922 0B1C                                  l2914 0AF7  
                                l3642 1543                                  l5066 03C7  
                                l5074 03C3                                  l2850 0D91  
                                l3651 128E                                  l2931 0B45  
                                l2923 0B09                                  l2915 0AE8  
                                l2907 0ACB                                  l3643 151F  
                                l5075 0374                                  l5067 0258  
                                l2851 0D78                                  l2924 0B11  
                                l2916 0B00                                  l2908 0ADD  
                                l3636 12B2                                  l3644 1552  
                                l4372 1178                                  l5068 03C6  
                                l5076 03C2                                  l5084 1463  
                                l2860 0DD7                                  l2852 0D9D  
                                l2925 0B1D                                  l2917 0AEF  
                                l2909 0ACC                                  l3637 12B1  
                                l3645 1552                                  l5077 03BB  
                                l5069 029F                                  l5085 144F  
                                l2861 0DA6                                  l2853 0D7F  
                                l2926 0B27                                  l2918 0AF5  
                                l3638 12BB                                  l5078 03C1  
                                l5086 146A                                  l2870 0DE9  
                                l2862 0DB0                                  l2854 0D87  
                                l2927 0B1E                                  l2919 0B01  
                                l3639 12D1                                  l5087 1474  
                                l4375 17FF                                  l2871 0DF4  
                                l2863 0DBB                                  l2855 0D8F  
                                l3648 1273                                  l2928 0B2D  
                                l2856 0E88                                  l2848 0E77  
                                l2880 0E37                                  l2872 0E06  
                                l2864 0DC6                                  l3649 1272  
                                l2929 0B25                                  l3673 136B  
                                l2881 0E65                                  l2873 0E07  
                                l2865 0DD8                                  l2857 0D9E  
                                l2849 0D77                                  l2890 0EA4  
                                l2882 0E38                                  l2874 0E16  
                                l2866 0E09                                  l2858 0DC8  
                                l2883 0E74                                  l2875 0E2D  
                                l2867 0DD9                                  l2859 0D9F  
                                l2884 0E40                                  l2876 0E17  
                                l2868 0DE8                                  l2893 110D  
                                l2885 0E4B                                  l2877 0E36  
                                l2869 0E15                                  l2886 0E5D  
                                l2878 0E1F                                  l2887 0E5E  
                                l2879 0E2B                                  l2896 1112  
                                l2888 0E63                                  l2889 0E75  
                                l2899 0B30                                  l5820 03E0  
                                l5821 04A7                                  l7510 13EE  
                                l6710 1214                                  l5830 0522  
                                l5822 0459                                  l7511 13F8  
                                l5831 0502                                  l5823 0458  
                                l5840 1121                                  l7512 140D  
                                l5816 14E1                                  l6720 08D0  
                                l5832 0520                                  l5824 0457  
                                l6800 015E                                  l7513 1414  
                                l6713 1441                                  l5833 051C  
                                l5825 04A6                                  l6801 016F  
                                l7610 0742                                  l6714 1441  
                                l5834 0520                                  l5826 0486  
                                l6810 01AA                                  l6802 016E  
                                l5843 1126                                  l7611 0782  
                                l6707 14AA                                  l5819 057B  
                                l5835 057A                                  l5827 04A4  
                                l6723 0A48                                  l6811 01B3  
                                l6803 0177                                  l7620 0BEB  
                                l7612 0797                                  l5836 0580  
                                l5828 04A0                                  l6820 1230  
                                l6732 0EC6                                  l5852 13BD  
                                l6724 0A4E                                  l6812 01B4  
                                l6804 0178                                  l7621 0BAE  
                                l7613 07AE                                  l5861 176A  
                                l6717 08D0                                  l5837 0580  
                                l5829 04A4                                  l6821 1230  
                                l6733 0F18                                  l6725 0A70  
                                l6741 16AC                                  l6813 01EF  
                                l6805 01AD                                  l5846 113F  
                                l7630 0BE2                                  l7622 0B9A  
                                l7614 07B3                                  l5870 1519  
                                l6718 08AF                                  l6750 090A  
                                l6734 0EF4                                  l6726 0A76  
                                l6742 16DC                                  l6814 01E8  
                                l6806 018A                                  l7623 0B9B  
                                l7615 07C8                                  l6719 08CF  
                                l6751 08D8                                  l6735 0F95  
                                l5855 11F8                                  l6727 0A98  
                                l6743 16C0                                  l6815 01F6  
                                l6807 01AC                                  l6824 1117  
                                l6760 1626                                  l7624 0BAD  
                                l5880 1394                                  l7560 05EC  
                                l7616 07DF                                  l7608 0729  
                                l6752 091C                                  l6736 0FAD  
                                l5864 1343                                  l6728 0A9E  
                                l6744 16DB                                  l6816 01F6  
                                l6808 019A                                  l6761 1653  
                                l7625 0BD2                                  l7561 05F9  
                                l7609 07FB                                  l5873 15D0  
                                l6753 08E5                                  l6737 0FFF  
                                l6729 0AAA                                  l6745 16D4  
                                l6809 01AB                                  l6762 163A  
                                l7626 0BBE                                  l7650 0949  
                                l7570 0646                                  l7562 05FE  
                                l7554 05D4                                  l6770 126D  
                                l6754 08F0                                  l5890 0C67  
                                l6738 0FFF                                  l5858 131C  
                                l6746 16DA                                  l6827 111C  
                                l6763 1652                                  l7627 0BCB  
                                l7619 0B63                                  l7651 0957  
                                l7563 0647                                  l7571 0682  
                                l7635 12AF                                  l5867 1723  
                                l6755 08FD                                  l5891 0C7D  
                                l5883 0C46                                  l6819 122D  
                                l6747 16DC                                  l5876 1166  
                                l6764 164D                                  l7628 0BBF  
                                l7660 09AE                                  l7652 099D  
                                l7580 0697                                  l7572 0682  
                                l7564 0613                                  l7556 05CA  
                                l6756 0908                                  l5892 0C96  
                                l5884 0C25                                  l6780 007B  
                                l5877 1166                                  l6765 1651  
                                l7629 0BD1                                  l7653 096F  
                                l7581 06AC                                  l7573 064E  
                                l7557 070D                                  l6757 0938  
                                l5885 0C24                                  l6773 01F1  
                                l6781 01F0                                  l6766 1653  
                                l7654 0963                                  l7582 06D5  
                                l7566 062C                                  l7558 05ED  
                                l5886 0C3A                                  l6790 0112  
                                l6782 00D4                                  l6774 003E  
                                l7655 0974                                  l7575 0667  
                                l7567 062D                                  l5887 0C8A  
                                l6791 0134                                  l6783 00E3  
                                l6775 009F                                  l7656 0975  
                                l7576 0668                                  l7568 063F  
                                l5888 0C89                                  l6792 0122  
                                l6784 00F3                                  l6776 005F  
                                l7657 098E                                  l7577 067A  
                                l7569 062E                                  l6769 126D  
                                l5889 0C68                                  l6785 01B6  
                                l6793 0133                                  l6777 007D  
                                l7850 09DB                                  l7842 09C5  
                                l7658 099C                                  l7578 0669  
                                l6794 0132                                  l6786 00FA  
                                l6778 006D                                  l7851 09F8  
                                l7659 09A7                                  l7579 0681  
                                l6787 01C6                                  l6795 013B  
                                l6779 007C                                  l7852 0A04  
                                l7844 09BD                                  l6796 013C  
                                l6788 0100                                  l7853 09F9  
                                l7845 0A2B                                  l6797 0171  
                                l6789 0135                                  l7854 0A08  
                                l7846 09D3                                  l6798 014E  
                                l7855 0A12                                  l7847 09C6  
                                l6799 0170                                  l7856 0A2B  
                                l7848 09DA                                  l7849 09F1  
                                _CHS0 00FB                                  _CHS1 00FC  
                                _CHS2 00FD                                  STR_1 1028  
                                STR_2 1037                                  STR_3 1006  
                                STR_4 1017                                  _BRGH 04C2  
                                _CREN 00C4                                  u4200 0B6E  
                                u4210 0B89                                  u4211 0B88  
                                u4220 0B90                                  u4221 0B8F  
                                u4205 0B6A                                  u4310 0940  
                                u4311 093F                                  u4240 0BAC  
                                u4400 09A1                                  u4320 094D  
                                u4241 0BAB                                  u4321 094C  
                                u4250 0BB4                                  u4330 095F  
                                u4251 0BB3                                  u4235 0B9C  
                                u4331 095E                                  u6020 140C  
                                u6100 0A08                                  u6021 140B  
                                u6005 13F9                                  u6101 0A07  
                                u6110 0A0C                                  u6030 09B5  
                                u4270 0BD0                                  u4190 0B59  
                                u4350 0973                                  u6015 1400  
                                u6111 0A0B                                  u4271 0BCF  
                                u4191 0B58                                  u4351 0972  
                                u6120 0A1D                                  u6040 09BC  
                                u4280 0BD6                                  u7000 0564  
                                u6041 09BB                                  u4265 0BC1  
                                u4345 0964                                  u7001 0563  
                                u6130 0A2A                                  u4370 0986  
                                u7010 057F                                  u4371 0985  
                                u7011 057E                                  _PEIE 005E  
                                u6060 09D9                                  u6300 12BB  
                                u7020 0C12                                  u7100 0F8C  
                                u6125 0A19                                  u6061 09D8  
                                u4365 0976                                  u6301 12BA  
                                u7005 0560                                  u7021 0C11  
                                u7101 0F8B                                  u4390 099B  
                                u4470 1561                                  u6310 152B  
                                u7030 0C39                                  u7110 0FA2  
                                u6055 09CB                                  u4391 099A  
                                u4375 0982                                  u4471 1560  
                                u7031 0C38                                  u7111 0FA1  
                                u6080 09F7                                  u6320 1551  
                                u6400 1469                                  u7040 0C55  
                                u7120 0FBC                                  u7200 0A8C  
                                u6081 09F6                                  u4385 098F  
                                u6321 1550                                  u6401 1468  
                                u7041 0C54                                  u7025 0C0E  
                                u7121 0FBB                                  u7201 0A8A  
                                u6330 0208                                  u6410 05B7  
                                u7050 0C7C                                  u7130 0FCB  
                                u6075 09EA                                  u6331 0207  
                                u7051 0C7B                                  u7035 0C35  
                                u7131 0FCA                                  u7115 0F9E  
                                _RCIE 0465                                  u6340 0220  
                                u6420 05BD                                  u7060 1229  
                                u7220 0A91                                  u7140 0A3C  
                                u7300 0048                                  _RCIF 0065  
                                u4485 157D                                  u6325 154D  
                                u6341 021F                                  u6421 05BC  
                                u7045 0C51                                  u7061 1228  
                                u7125 0FB8                                  u7221 0A90  
                                u7141 0A3A                                  u7301 0047  
                                u6350 0267                                  u6510 0623  
                                u6430 05C9                                  u7070 0EC4  
                                u7214 0A8D                                  u7230 169C  
                                u7310 0051                                  u6095 09FC  
                                u6351 0266                                  u6335 0204  
                                u6511 0622                                  u6431 05C8  
                                u7055 0C78                                  u7135 0FC7  
                                u7071 0EC3                                  u7231 169B  
                                u7311 0050                                  u6360 02AE  
                                u6600 0680                                  u6520 062B  
                                u6440 05DA                                  u7080 0EE7  
                                u7160 0A41                                  u7240 16A6  
                                u7400 00CE                                  u7320 0055  
                                u6361 02AD                                  u6345 021C  
                                u6601 067F                                  u6521 062A  
                                u6505 0614                                  u7065 1225  
                                u7081 0EE6                                  u7161 0A40  
                                u7241 16A5                                  u7401 00CD  
                                u7321 0054                                  u5810 127B  
                                u6370 02F5                                  u6610 0686  
                                u6450 05E0                                  u7090 0F17  
                                u7170 0A64                                  u7154 0A3D  
                                u7250 16B0                                  u7410 00ED  
                                u7330 0059                                  u5811 127A  
                                u6371 02F4                                  u6355 0263  
                                u6611 0685                                  u6451 05DF  
                                u7091 0F16                                  u7075 0EC0  
                                u7171 0A62                                  u7251 16AF  
                                u7411 00EC                                  u7331 0058  
                                u6380 033C                                  u6620 069B  
                                u6540 0645                                  u6460 05EC  
                                u7260 16BA                                  u7500 017C  
                                u7420 0104                                  u7340 0063  
                                u6381 033B                                  u6365 02AA  
                                u6621 069A                                  u6541 0644  
                                u6461 05EB                                  u6701 078F  
                                u7085 0EE3                                  u7261 16B9  
                                u7501 017B                                  u7421 0103  
                                u7341 0062                                  u5910 1163  
                                u6390 0383                                  u6550 064D  
                                u6470 05F8                                  u6702 0796  
                                u7190 0A69                                  u7270 16C4  
                                u7510 0184                                  u7430 010C  
                                u7350 0067                                  u5911 1162  
                                u6391 0382                                  u6375 02F1  
                                u6631 06B6                                  u6551 064C  
                                u6535 062F                                  u6471 05F7  
                                u7095 0F13                                  u7191 0A68  
                                u7271 16C3                                  u7511 0183  
                                u7431 010B                                  u7351 0066  
                                u5840 11CF                                  u5920 113A  
                                u6640 06C1                                  u6632 06BD  
                                u6480 05FD                                  u6800 1256  
                                u7184 0A65                                  u7280 16CE  
                                u7520 0194                                  u7440 011C  
                                u7360 0071                                  u5841 11CE  
                                u5921 1139                                  u6385 0338  
                                u6641 06C0                                  u6481 05FC  
                                u6801 1255                                  u7281 16CD  
                                u7521 0193                                  u7441 011B  
                                u7361 0070                                  u5850 11DA  
                                u5930 161A                                  u6570 065E  
                                u6490 0612                                  u6730 07AD  
                                u6650 0721                                  u6810 125C  
                                u7530 01A4                                  u7450 012C  
                                u7370 0075                                  u7290 0044  
                                _OERR 00C1                                  u5851 11D9  
                                u5931 1619                                  u6395 037F  
                                u6571 065D                                  u6491 0611  
                                u6731 07AC                                  u6715 0798  
                                u6651 0720                                  u6811 125B  
                                u7531 01A3                                  u7451 012B  
                                u7371 0074                                  u5940 1620  
                                u6580 0666                                  u6740 07B7  
                                u6660 073A                                  u6820 0DDE  
                                u6900 03EF                                  u7540 01D5  
                                u7460 0140                                  u7380 00A5  
                                u5941 161F                                  u6581 0665  
                                u6565 064F                                  u6741 07B6  
                                u6725 07A0                                  u6661 0739  
                                u6821 0DDD                                  u6901 03EE  
                                u7541 01D4                                  u7461 013F  
                                u5950 162D                                  u6670 0752  
                                u6830 0DFB                                  u6910 040A  
                                u7550 01E3                                  u7470 0148  
                                u7390 00A9                                  u5951 162C  
                                u6751 07C0                                  u7607 1512  
                                u6831 0DFA                                  u6911 0409  
                                u7551 01E2                                  u7471 0147  
                                u7391 00A8                                  u5960 1633  
                                u6752 07C7                                  u6680 0764  
                                u6840 0E52                                  u6920 0425  
                                u7560 01F5                                  u7480 0158  
                                u5961 1632                                  u7617 15C9  
                                u6841 0E51                                  u6921 0424  
                                u6905 03EB                                  u7561 01F4  
                                u7481 0157                                  u5970 1641  
                                u6690 0786                                  u6850 1421  
                                u6930 0440                                  u7490 0168  
                                u5971 1640                                  u7707 11C6  
                                u6595 066A                                  u6691 0785  
                                u6675 074E                                  u7627 1601  
                                u6851 1420                                  u6931 043F  
                                u7491 0167                                  u5980 1646  
                                u6780 07DE                                  u6860 142D  
                                u6940 045F                                  u5981 1645  
                                u7637 1201                                  u6781 07DD  
                                u6765 07C9                                  u6685 0760  
                                u6861 142C                                  u6941 045E  
                                u5990 13F2                                  u6790 12F5  
                                u6870 088F                                  u6950 0475  
                                u5991 13F1                                  u7647 1375  
                                u6775 07D1                                  u6791 12F4  
                                u6871 088E                                  u6951 0474  
                                u6880 0895                                  u6960 048E  
                                u7657 14B4                                  u7577 1764  
                                u6881 0894                                  u6961 048D  
                                u6890 0899                                  u6970 04C3  
                                u7667 1458                                  u7587 170D  
                                u6891 0898                                  u6971 04C2  
                                u6980 04F1                                  u7677 146F  
                                u7597 171C                                  u6981 04F0  
                                u6990 050A                                  u7687 1187  
                                u6991 0509                                  u7697 11AD  
                                _TMR0 0001                                  _SPEN 00C7  
                                _TXIE 0464                                  _WREN 0C62  
                                _TXEN 04C5                                  _TXIF 0064  
                                _SYNC 04C4                __end_of_lcd_write_data 118C  
                                _beep 00E4                                  _isr1 0C97  
                                _main 0015                                  _home 0386  
                        ___ftpack@arg 002A                                  _init 1475  
                                _node 00C5                          ___ftpack@exp 002D  
                 drive@highByteRadius 002D                                  btemp 007E  
                                start 0012                ??_findFinalDestination 0030  
                     rotateIR@stepNum 002E                          ___ftmul@cntr 0056  
                        ___ftmul@sign 0057                 _lcd_write_1_digit_bcd 114B  
                        ___fttol@exp1 003F                     ?_driveForDistance 0036  
                        ___fttol@lval 003B                           _turnRight90 1592  
                               l12020 134F                                 l12100 1414  
                               l12030 1359                                 l12022 1350  
                               l12110 09C6                                 l12102 09AF  
                               l12040 1362                                 l12032 135C  
                               l12024 1352                                 l12016 1344  
                               l12120 09F9                                 l12112 09D3  
                               l12104 09B5                                 l13000 0015  
                               l12034 135D                                 l12026 1353  
                               l12018 1347                                 l12042 1159  
                               l12050 1117                                 l12130 0A2A  
                               l12122 0A04                                 l12114 09DB  
                               l12106 09BD                                 l13010 0044  
                               l13002 0025                                 l12036 1360  
                               l12028 1356                                 l12044 115D  
                               l12052 1118                                 l12060 1122  
                               l12124 0A0C                                 l12116 09DF  
                               l12108 09C4                                 l12300 0220  
                               l11180 15E9                                 l13100 019A  
                               l13020 0059                                 l13012 0048  
                               l13004 002B                                 l12038 1361  
                               l12046 1163                                 l12054 111C  
                               l12062 1126                                 l12070 113F  
                               l12126 0A14                                 l12118 09E9  
                               l12310 029D                                 l12302 0256  
                               l11190 1603                                 l11182 15EC  
                               l13102 01A4                                 l13110 01C6  
                               l13022 0063                                 l13030 007D  
                               l13014 004D                                 l13006 0037  
                               l12048 1113                                 l12056 111D  
                               l12064 1136                                 l12080 162D  
                               l12072 1612                                 l12128 0A26  
                               l12240 11B6                                 l12320 02E5  
                               l12312 029E                                 l12304 0257  
                               l12400 05D3                                 l11192 1611  
                               l11184 15ED                                 l13120 01E3  
                               l13112 01CC                                 l13104 01AD  
                               l13040 00A5                                 l13032 007E  
                               l13024 0067                                 l13016 0051  
                               l13008 003E                    ??_driveForDistance 0038  
                               l12058 1121                                 l12066 113A  
                               l12082 1633                                 l12074 161A  
                               l12090 13E9                                 l10810 0949  
                               l12242 11BA                                 l12250 11A5  
                               l12330 032D                                 l12322 02E6  
                               l12314 029F                                 l12306 0258  
                               l12410 05F4                                 l12402 05D4  
                               l11186 15EE                                 l11178 15D4  
                               l13114 01D5                                 l13106 01B5  
                               l13050 00CE                                 l13042 00A9  
                               l13034 0084                                 l13026 0071  
                               l13018 0055                                 l13122 01F1  
                               l12068 113C                                 l12084 163A  
                               l12076 1620                                 l12092 13EE  
                               l10820 095F                                 l10812 094D  
                               l10900 1591                                 l12244 11BE  
                               l12252 11A7                                 l12260 1181  
                               l12340 0383                                 l12332 033C  
                               l12324 02F5                                 l12316 02AE  
                               l12308 0267                                 l12420 0613  
                               l12412 05F8                                 l12404 05DA  
                               l12500 07C8                                 l11188 15FF  
                               l13116 01DA                                 l13108 01B6  
                               l13060 00F3                                 l13052 00D4  
                               l13044 00BF                                 l13036 0090  
                               l13028 0075                                 l12086 1641  
                               l12078 1626                                 l12094 13F2  
                               l10750 0B62                                 l10830 0986  
                               l10822 0963                                 l10814 0952  
                               l10806 0939                                 l12246 11C2  
                               l12238 11B3                                 l12254 11A8  
                               l12262 1182                                 l12270 12C6  
                               l12342 03B9                                 l12334 0372  
                               l12326 032B                                 l12318 02E4  
                               l12350 1445                                 l12422 061D  
                               l12430 0647                                 l12414 05FD  
                               l12406 05E0                                 l12502 07D0  
                               l12510 1292                                 l13118 01DF  
                               l13070 011C                                 l13062 00FA  
                               l13054 00E3                                 l13046 00C4  
                               l13038 009F                                 l12088 1646  
                               l12096 13FF                                 l10760 0B83  
                               l10752 0B63                                 l10840 09A1  
                               l10832 098C                                 l10824 096A  
                               l10816 0957                                 l10808 0940  
                               l12248 11A2                                 l12256 117C  
                               l12272 12CA                                 l12264 12B0  
                               l12280 151A                                 l12344 03BA  
                               l12336 0373                                 l12328 032C  
                               l12360 146A                                 l12352 1449  
                               l12440 067A                                 l12432 064E  
                               l12424 0623                                 l12416 05FF  
                               l12408 05ED                                 l12504 07D8  
                               l12512 12AF                                 l12520 12E9  
                               l12600 0DC8                                 l13080 0148  
                               l13072 0122                                 l13064 0104  
                               l13056 00E9                                 l13048 00CA  
                               l12098 140D                                 l10770 0B9B  
                               l10762 0B85                                 l10754 0B75  
                               l10746 0B46                                 l10842 09A7  
                               l10834 098E                                 l10826 096F  
                               l10818 0959                                 l12258 117F  
                               l12274 12CE                                 l12266 12B2  
                               l12282 151F                                 l12346 03BB  
                               l12338 0374                                 l12290 01F9  
                               l12362 146B                                 l12354 1450  
                               l12370 14C9                                 l12450 06BD  
                               l12442 0686                                 l12434 0658  
                               l12426 062E                                 l12418 0605  
                               l12506 07DF                                 l12514 12D5  
                               l12522 1143                                 l12530 13C2  
                               l12610 0DEE                                 l12602 0DD9  
                               l13082 014E                                 l13090 0171  
                               l13074 012C                                 l13066 010C  
                               l13058 00ED                                 l11812 11DC  
                               l10780 0BCB                                 l10764 0B89  
                               l10772 0BAE                                 l10756 0B76  
                               l10748 0B59                                 l10844 09AE  
                               l10836 0995                                 l10828 0975  
                               l12276 12CF                                 l12268 12BC  
                               l12284 153A                                 l12348 03C0  
                               l12292 0208                                 l12356 1454  
                               l12372 14D1                                 l12364 14AE  
                               l12380 1384                                 l12452 06C1  
                               l12444 0697                                 l12436 065E  
                               l12428 063F                                 l12508 07FB  
                               l12460 070E                                 l12516 12D6  
                               l12524 1144                                 l12540 13D0  
                               l12532 13C5                                 l12620 0E17  
                               l12612 0DF4                                 l12604 0DDE  
                               l12700 1415                                 l13092 017C  
                               l13084 0158                                 l13068 0112  
                               l13076 0135                                 l11814 11DE  
                               l10774 0BB4                                 l10782 0BD2  
                               l10766 0B90                                 l10758 0B7C  
                               l10838 099D                                 l12278 12D1  
                               l12286 1543                                 l12294 020F  
                               l12358 145D                                 l12374 14D9  
                               l12366 14BB                                 l12382 138C  
                               l12454 06D1                                 l12446 069B  
                               l12438 0669                                 l12390 0581  
                               l12470 0741                                 l12462 0721  
                               l12518 12E2                                 l12526 114E  
                               l12542 13D6                                 l12534 13C6  
                               l12550 1592                                 l12630 0E38  
                               l12622 0E1B                                 l12614 0DFB  
                               l12606 0DE2                                 l12710 143A  
                               l12702 1421                                 l13094 0184  
                               l13086 015E                                 l13078 0140  
                               l11912 1109                                 l11920 0AAE  
                               l11816 113C                                 l10784 0BD6  
                               l10776 0BBD                                 l10768 0B99  
                               l12288 116A                                 l12296 0210  
                               l12368 14C1                                 l12376 136F  
                               l12384 11F9                                 l12456 06D5  
                               l12448 06AC                                 l12392 05B3  
                               l12480 0777                                 l12472 0742  
                               l12464 0728                                 l12544 13DC  
                               l12536 13C9                                 l12528 13BE  
                               l12552 15C1                                 l12560 1705  
                               l12640 0E52                                 l12632 0E3C  
                               l12624 0E1F                                 l12616 0E08  
                               l12608 0DE9                                 l12704 142D  
                               l12720 0899                                 l12712 0873  
                               l12800 0499                                 l13096 018A  
                               l13088 0168                                 l11914 110D  
                               l11930 0ACC                                 l11922 0AB0  
                               l11818 113E                                 l10786 0BE2  
                               l10778 0BBF                                 l12298 0211  
                               l12378 137C                                 l12386 1208  
                               l12458 070D                                 l12394 05B7  
                               l12490 079F                                 l12482 077D  
                               l12474 076F                                 l12466 0729  
                               l12546 13E2                                 l12538 13CA  
                               l12554 14E2                                 l12562 1714  
                               l12570 126B                                 l12642 0E64  
                               l12634 0E40                                 l12626 0E2C  
                               l12618 0E09                                 l12650 0E88  
                               l12706 1433                                 l12730 08C0  
                               l12722 089F                                 l12714 0889  
                               l12810 04F1                                 l12802 04A7  
                               l13098 0194                                 l11916 110E  
                               l11940 0AEF                                 l11932 0AD3  
                               l11924 0AB7                                 l10788 0BEB  
                               l10892 1553                                 l12388 120E  
                               l12396 05BD                                 l12492 07A7  
                               l12484 0782                                 l12476 0770  
                               l12468 073A                                 l12548 17B4  
                               l12556 150A                                 l12564 124E  
                               l12636 0E45                                 l12644 0E65  
                               l12628 0E2D                                 l12580 0D90  
                               l12572 0D76                                 l12652 0800  
                               l12660 1730                                 l12708 1434  
                               l12732 08C6                                 l12724 08A2  
                               l12716 088F                                 l12740 08E5  
                               l12820 0510                                 l12812 04F6  
                               l12804 04BD                                 l12900 0F18  
                               l11918 1112                                 l11950 0B12  
                               l11942 0AF6                                 l11934 0ADC  
                               l11926 0AC0                                 l10894 1559  
                               l12398 05CA                                 l12494 07AE  
                               l12486 0786                                 l12478 0771  
                               l12558 16DD                                 l12566 1256  
                               l12646 0E76                                 l12638 0E4B  
                               l12590 0DB0                                 l12574 0D79  
                               l12582 0D91                                 l12654 081B  
                               l12662 1741                                 l12670 1478  
                               l12726 08A8                                 l12718 0895  
                               l12750 0901                                 l12742 08E9  
                               l12734 08D1                                 l12830 0556  
                               l12822 0515                                 l12814 04FB  
                               l12806 04C3                                 l12910 0F95  
                               l12902 0F83                                 l11960 0B2F  
                               l11952 0B13                                 l11944 0AF7  
                               l11936 0ADD                                 l11928 0AC1  
                               l10896 1562                                 l12496 07B3  
                               l12488 0797                                 l12568 125C  
                               l12592 0DB4                                 l12584 0D9F  
                               l12576 0D80                                 l12648 0E77  
                               l12656 0822                                 l12664 1751  
                               l12680 148B                                 l12672 147B  
                               l12728 08AF                                 l12752 0909  
                               l12744 08F0                                 l12736 08D8  
                               l12832 0564                                 l12816 0502  
                               l12808 04E9                                 l12824 0522  
                               l12840 057B                                 l12760 03CE  
                               l12920 0FCB                                 l12912 0FA2  
                               l12904 0F84                                 l11890 1284  
                               l11954 0B1E                                 l11946 0B02  
                               l11938 0AE8                                 l11962 0B30  
                               l11970 11CF                                 l10898 158A  
                               l12498 07B7                                 l12594 0DBB  
                               l12586 0DA2                                 l12578 0D88  
                               l12666 175C                                 l12658 1724  
                               l12690 1499                                 l12682 148C  
                               l12674 1480                                 l12746 08F6  
                               l12738 08DE                                 l12754 090A  
                               l12834 056F                                 l12826 0542  
                               l12818 050A                                 l12770 0405  
                               l12762 03CF                                 l12850 0C25  
                               l12842 0BEC                                 l12914 0FA7  
                               l12906 0F88                                 l12930 13B7  
                               l12922 1395                                 l11892 128A  
                               l11884 1271                                 l11956 0B26  
                               l11948 0B09                                 l11964 0B41  
                               l11980 11DC                                 l11972 11D1  
                               l12596 0DBF                                 l12588 0DA6  
                               l12692 149A                                 l12684 148E  
                               l12676 1485                                 l12668 1475  
                               l12748 08FD                                 l12756 091C  
                               l12836 0570                                 l12828 0550  
                               l12780 0440                                 l12772 040A  
                               l12764 03DE                                 l12860 0C7D  
                               l12852 0C3A                                 l12844 0BF8  
                               l12916 0FAD                                 l12908 0F8C  
                               l12924 13A1                                 l12932 11E0  
                               l12940 1303                                 l11894 128D  
                               l11886 1273                                 l11966 0B45  
                               l11958 0B27                                 l11982 11DF  
                               l11974 11D3                                 l12598 0DC7  
                               l12694 149B                                 l12686 1492  
                               l12678 1489                                 l12838 0571  
                               l12790 047A                                 l12774 0420  
                               l12782 0459                                 l12766 03E0  
                               l12758 03C8                                 l12862 0C8A  
                               l12854 0C46                                 l12846 0C05  
                               l12870 122C                                 l12918 0FBC  
                               l12926 13A6                                 l12934 11EC  
                               l12942 1308                                 l12950 1329  
                               l11888 127C                                 l11976 11D4  
                               l11968 11C9                                 l12696 14A0  
                               l12688 1496                                 l12792 047F  
                               l12784 045F                                 l12776 0425  
                               l12768 03EF                                 l12856 0C55  
                               l12848 0C12                                 l12872 122D  
                               l12864 1215                                 l12880 0EB3  
                               l12928 13AC                                 l12936 11EF  
                               l12944 130E                                 l12952 132E  
                               l12960 0A32                                 l11978 11DA  
                               l12698 14A5                                 l12794 0486  
                               l12786 046D                                 l12778 043B  
                               l12858 0C68                                 l12874 122F  
                               l12866 1229                                 l12890 0EE7  
                               l12882 0EB7                                 l12946 1313  
                               l12938 12F7                                 l12954 1334  
                               l12970 0A65                                 l12962 0A3D  
                               l12796 048E                                 l12788 0475  
                               l12868 122B                                 l12892 0EED  
                               l12884 0EC5                                 l12876 0EA5  
                               l12956 133A                                 l12948 131D  
                               l12980 0A91                                 l12972 0A69  
                               l12964 0A41                                 l12798 0494  
                               l12894 0EF4                                 l12886 0EC6  
                               l12878 0EAD                                 l12982 0A98  
                               l12974 0A70                                 l12966 0A48  
                               l12958 0A2C                                 l12990 16B0  
                               l12896 0F02                                 l12888 0ED9  
                               l12976 0A82                                 l12968 0A5A  
                               l12992 16BA                                 l12984 1698  
                               l12898 0F0A                                 l12978 0A8D  
                               l12994 16C4                                 l12986 169C  
                               l12996 16CE                                 l12988 16A6  
                               l12998 16D4                                 ?_isr1 0072  
                               ?_main 0072                                 ?_init 0072  
                     __end_of___awdiv 09AF                  __size_of_checkIfHome 0020  
                               _EEADR 010D                       __end_of___ftadd 070E  
                               _CARRY 0018                       __end_of___ftmul 07FC  
                     ___awdiv@divisor 0030                       __end_of___fttol 0BEC  
                     __end_of___lwmod 1698                       ___awdiv@counter 0035  
                               _RCREG 001A                                 _SPBRG 0099  
                               _PORTA 0005                                 _PORTC 0007  
                               _PORTD 0008                                 _PORTE 0009  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
                               _TRISE 0089                                 _SSPIF 0063  
       __size_of_getSomethingInTheWay 0005                                 _TXREG 0019  
              lcd_write_data@databyte 002C                       __end_of_goRight 1344  
findFinalDestination@robotOrientation 002F                    _getSuccessfulDrive 1136  
                     __end_of_convert 03C8                                 _drive 14AB  
                     ?_updateLocation 0072                                 _ready 0389  
                       ___ftpack@sign 002E                                 _start 00C0  
                      __pbitbssCOMMON 0380                       __end_of_waitFor 1395  
                               pclath 000A                   ?_getSuccessfulDrive 0072  
                     ?_lcd_write_data 0072                     ?_adc_read_channel 0045  
                     _successfulDrive 038B                                 status 0003  
                               wtemp0 007E                     ?_frontWallCorrect 0072  
                  ??_adc_read_channel 0047                  __end_of_goToNextCell 16DD  
                  ??_frontWallCorrect 004D            __size_of_lcd_write_control 0014  
                        __end_of_isr1 0D73                          __end_of_main 01F9  
                        __end_of_init 14AB            __size_of_updateOrientation 0011  
                ??_getSuccessfulDrive 002A                                ??_isr1 0020  
                              ??_main 00E1                         ___fttol@sign1 003A  
                              ??_init 0035                  __size_of_getCurrentX 0005  
                __size_of_getCurrentY 0005                                _ADCON0 001F  
                              _ADCON1 009F                                ?_drive 002C  
                              _ADRESH 001E                                _ADRESL 009E  
                              _EEDATA 010C                                _EECON1 018C  
                              _EECON2 018D      findFinalDestination@virtualWallX 0031  
    findFinalDestination@virtualWallY 002E                      ___awdiv@dividend 0032  
                    __end_of___ftpack 0A2C                      __end_of___lbtoft 12B0  
                    __end_of_adc_read 1592                                i1l6700 0D40  
                              i1l6701 0D3F                                i1l6702 0D66  
                              i1l6703 0D65                                i1l6704 0D67  
                              i1l7530 1670                                i1l7531 1681  
                              i1l7532 168F                                i1l7533 1697  
                              i1l7526 1690                                i1l7527 166A  
                              i1l7528 165E                                i1l7529 166F  
                              i1l6693 0D67                                i1l6694 0CBC  
                              i1l6695 0CD5                                i1l6696 0CE6  
                              i1l6697 0D16                                i1l6698 0D15  
                              i1l6699 0D1D                          _addressCount 005E  
                              u380_20 0D38                                u380_21 0D37  
                              u381_20 0D45                                u381_21 0D44  
                              u382_20 0D4B                                u374_20 0C9B  
                              u382_21 0D4A                                u374_21 0C9A  
                              u383_20 0D61                                u375_20 0CBA  
                              u383_21 0D60                                u375_21 0CB9  
                              u376_20 0CD3                                u376_21 0CD2  
                              u377_20 0CEC                                u377_21 0CEB  
                              u394_20 165A                                u378_20 0D0E  
                              u394_21 1659                                u378_21 0D0D  
                              u379_20 0D22                                u379_21 0D21  
                              u395_25 165F                                u396_20 166E  
                              u396_21 166D                                u397_20 167A  
                              u397_21 1679                                u397_25 1676  
                              u398_25 1682                                u399_20 168E  
                              u399_21 168D                                _TMR0IE 005D  
                              _TMR0IF 005A                                _SSPCON 0014  
                              _SSPBUF 0013                      convert@adc_value 0041  
                   rotateIR@direction 002A         goParallel@angleParallelToWall 00DF  
              ?_lcd_write_1_digit_bcd 0072                      __end_of_findWall 1231  
                    __end_of_lcd_init 13E9                                ___wmul 13E9  
                           ??___awdiv 0034                             ??___ftadd 0058  
                              _goLeft 12F7                             ??___ftmul 004E  
                           ??___fttol 0036                                _finalX 0063  
                              _finalY 00E2                             ??___lwmod 0076  
                              _xCoord 0064                                _yCoord 0065  
                              _readIR 0800                      __end_of_init_adc 11C9  
                    ___awdiv@quotient 0037              __end_of_lcd_write_string 12F7  
                              _moving 0388                             ??_goRight 0042  
                              _rxfifo 00A0                                clrloop 112F  
                              _txfifo 00B0                                _rxiptr 0078  
          frontWallCorrect@distToWall 004F                                _rxoptr 0079  
                              _txiptr 007A                 ___ftmul@f3_as_product 0053  
                           ??_convert 0043                                _txoptr 007B  
                    __end_of_ser_init 136C                      __end_of_ser_isrx 11E0  
                              saved_w 007E                             ??_waitFor 002E  
                    __end_of_rotateIR 1475                     lcd_write_string@s 002E  
                          ___ftadd@f1 00CB                            ___ftadd@f2 00CE  
               play_iCreate_song@song 002C                            ___lbtoft@c 0047  
                          ___ftmul@f1 0048                            ___ftmul@f2 004B  
                       rotateIR@steps 002D                            ___fttol@f1 0032  
                      __pcstackCOMMON 0072                          __pidataBANK0 07FC  
                        __pidataBANK1 1127                          __pidataBANK2 1231  
                        __pidataBANK3 176B                         __end_of_drive 14E2  
                      goParallel@step 00DD                     _play_iCreate_song 1167  
                  __size_of_goForward 0019                    __size_of_getFinalX 0005  
                  __size_of_getFinalY 0005                      ??_lcd_set_cursor 002D  
                  __size_of_goReverse 0047                    ?_play_iCreate_song 0072  
                  __size_of_findWalls 007F                            _goBackward 1395  
                             ??_drive 002F                   ??_play_iCreate_song 002C  
                          __pbssBANK0 005C                            __pbssBANK1 00A0  
               __size_of_goToNextCell 0045                    __size_of_initSongs 004C  
                   drive@lowByteSpeed 002C                            __pmaintext 0015  
                          _goParallel 0EA5                               ?___wmul 002A  
                             ?_goLeft 0072                            __pintentry 0004  
               goParallel@stepsToWall 00D6             __end_of_play_iCreate_song 1179  
                             ?_readIR 0049                          ?_turnRight90 0072  
                          __ptext2000 08D1                            __ptext2001 0873  
                          __ptext2010 1592                            __ptext2002 1415  
                          __ptext2011 17B4                            __ptext2003 1475  
                          __ptext2020 11F9                            __ptext2012 13BE  
                          __ptext2004 1724                            __ptext2021 136C  
                          __ptext2013 114B                            __ptext2005 0800  
                          __ptext2030 11B3                            __ptext2022 14AB  
                          __ptext2014 1140                            __ptext2006 0D73  
                          __ptext2031 1553                            __ptext2023 1442  
                          __ptext2015 12D2                            __ptext2007 124E  
                          __ptext2040 1118                            __ptext2032 0939  
                          __ptext2024 01F9                            __ptext2016 15D1  
                          __ptext2008 16DD                            __ptext2041 1113  
                          __ptext2033 0B46                            __ptext2025 1167  
                          __ptext2017 128F                            __ptext2009 14E2  
                          __ptext2050 1654                            __ptext2042 1156  
                          __ptext2034 09AF                            __ptext2026 151A  
                          __ptext2018 070E                            __ptext2051 0000  
                          __ptext2043 1344                            __ptext2035 13E9  
                          __ptext2027 12B0                            __ptext2019 0581  
                          __ptext2044 11C9                            __ptext2036 1612  
                          __ptext2028 1179                            __ptext2045 0AAB  
                          __ptext2037 1136                            __ptext2029 119F  
                          __ptext2046 110E                            __ptext2038 1122  
                          __ptext2047 1109                            __ptext2039 111D  
                          __ptext2048 126E                            __ptext2049 0C97  
                          __ptext1990 1698                            __ptext1991 0A2C  
                          __ptext1992 131D                            __ptext1993 12F7  
                          __ptext1994 11E0                            __ptext1995 1395  
                          __ptext1996 0EA5                            __ptext1997 1215  
                          __ptext1998 0BEC                            __ptext1999 03C8  
                  __size_of_ser_getch 0022                             ?___ftpack 002A  
                           ?___lbtoft 0040                             ?_adc_read 0039  
                  __size_of_ser_putch 0021              _checkForFinalDestination 1415  
                             i1l10600 0D2A                               i1l10610 0D4B  
                             i1l10602 0D32                      ??_updateLocation 002E  
                             i1l10612 0D53                               i1l10604 0D38  
                             i1l10614 0D57                               i1l10606 0D40  
                             i1l10616 0D5B                               i1l10608 0D45  
                             i1l10650 1654                               i1l10618 0D61  
                             i1l10570 0C9B                               i1l10660 1670  
                             i1l10652 165A                               i1l10580 0CBC  
                             i1l10572 0C9C                               i1l10670 1697  
                             i1l10662 167A                               i1l10654 165E  
                             i1l10590 0D0E                               i1l10582 0CD3  
                             i1l10574 0CA4                               i1l10664 1681  
                             i1l10656 1665                               i1l10592 0D13  
                             i1l10584 0CD5                               i1l10576 0CA5  
                             i1l10568 0C97                               i1l10666 1688  
                             i1l10658 166A                               i1l10594 0D19  
                             i1l10586 0CEC                               i1l10578 0CBA  
                             i1l10668 1690                               i1l10596 0D1D  
                             i1l10588 0CF2                               i1l10598 0D22  
               __end_of_getVictimZone 0B46                          _goToNextCell 1698  
                    ??_lcd_write_data 002A                             ?_findWall 0072  
           __size_of_driveForDistance 01B9                        waitFor@lowByte 002D  
              __size_of_lookForVictim 005E                             ?_lcd_init 0072  
                             _SSPSTAT 0094                    goParallel@distance 00DB  
                           ?_init_adc 0072                     __end_of_goForward 11F9  
                   __end_of_getFinalX 110E                     __end_of_getFinalY 1113  
        __end_of_getSomethingInTheWay 1127                     __end_of_goReverse 176B  
                          _initIRobot 11F9                     __end_of_findWalls 0AAB  
                           ?_ser_init 0072                             ?_ser_isrx 0072  
       __size_of_findFinalDestination 0132                               ___awdiv 0939  
                             ___ftadd 0581            goParallel@shortestDistance 00D7  
                           ?_rotateIR 002A                       __size_of___wmul 002C  
                             ___ftmul 070E                               ___fttol 0B46  
                       ??_checkIfHome 0033                               ___lwmod 1654  
                     __size_of_goLeft 0026                       __size_of_readIR 0023  
           __size_of_adc_read_channel 0041                            ??___ftpack 002F  
                          ??___lbtoft 0043                               _goRight 131D  
                          ??_adc_read 003B             __size_of_frontWallCorrect 00AB  
                             _convert 01F9                           waitFor@type 0031  
                   __end_of_initSongs 1800          driveForDistance@moveDistance 0036  
                             _waitFor 136C                               _ser_tmp 00C6  
                             _vicZone 00C9                           ?_goBackward 0072  
                             _wayWent 00CA                   driveForDistance@low 003F  
                         ser_putArr@i 0033                            ??_findWall 004D  
             __size_of_getOrientation 0005                            ??_lcd_init 002D  
                end_of_initialization 086F                     __end_of_ser_getch 12D2  
                             init_ram 1190                        _superMarioBros 01AB  
                          ??_init_adc 002A               ??_lcd_write_1_digit_bcd 002D  
                   __end_of_ser_putch 128F                            ??_ser_init 002A  
                          ??_ser_isrx 002A                            _ser_putArr 151A  
                         ?_goParallel 0072                         _lookForVictim 0873  
                          ??_rotateIR 002B            __size_of_play_iCreate_song 0012  
         __size_of_getSuccessfulDrive 000A                     ?_lcd_write_string 0072  
                       ??_getCurrentX 002A                         ??_getCurrentY 002A  
                          _victimZone 0062                    ??_lcd_write_string 002D  
                 __end_of_checkIfHome 126E                     adc_read@adc_value 003F  
                          _updateNode 1612                           ?_initIRobot 0072  
                         ___ftmul@exp 0052                            _turnLeft90 14E2  
                      ?_lookForVictim 0072                            _turnAround 16DD  
                 __size_of_goBackward 0029                        __end_of___wmul 1415  
                      __end_of_goLeft 131D                        __end_of_readIR 0823  
                __size_of_turnRight90 003F                  _getSomethingInTheWay 1122  
                 start_initialization 0823                   __end_of_getCurrentX 1118  
                 __end_of_getCurrentY 111D                      _driveForDistance 03C8  
                 __size_of_goParallel 015B           driveForDistance@virtualWall 0040  
               lcd_set_cursor@address 002D                           ?_ser_putArr 002C  
          ??_checkForFinalDestination 002E                        _RTC_FLAG_500MS 0382  
                            ??___wmul 002E                              ??_goLeft 0042  
                         __pdataBANK0 0063                           __pdataBANK1 00E2  
                         __pdataBANK2 0110                           __pdataBANK3 0190  
                         _checkIfHome 124E                              ??_readIR 004B  
                    _adc_read_channel 15D1                      _frontWallCorrect 0BEC  
               ?_getSomethingInTheWay 0072                     __size_of___ftpack 007D  
                   __size_of___lbtoft 0021                     __size_of_adc_read 003F  
                         __pbssCOMMON 0078                           ?_updateNode 0072  
                       __pcstackBANK0 0020                         __pcstackBANK1 00CB  
                 __size_of_initIRobot 001C                        _getOrientation 111D  
                   _somethingInTheWay 00E3                     __size_of_findWall 001C  
                   __size_of_lcd_init 002B                    drive@lowByteRadius 002E  
                           _champions 01C4                     __size_of_init_adc 0016  
                     ??_lookForVictim 002E                             _goForward 11E0  
                         ?_turnLeft90 0072                             _getFinalX 1109  
                           _getFinalY 110E                           ?_turnAround 0072  
                            ?___awdiv 0030                              ?___ftadd 00CB  
                           _goReverse 1724                              ?___ftmul 0048  
                   __size_of_ser_init 0028                              ?___fttol 0032  
                   __size_of_ser_isrx 0017                              ?___lwmod 0072  
                           _findWalls 0A2C                             __pstrings 1000  
                   __size_of_rotateIR 0033                              ?_goRight 0072  
                         _getCurrentX 1113                           _getCurrentY 1118  
                            ?_convert 0041                        _finalCountdown 0190  
                           _goingHome 0385                __end_of_getOrientation 1122  
        __end_of_findFinalDestination 0EA5                              ?_waitFor 002C  
                        ??_goBackward 0042                            ser_getch@c 002B  
                           _initSongs 17B4                   __size_of_ser_putArr 0039  
                      __size_of_drive 0037                             _frontWall 0384  
             __size_of_lcd_set_cursor 000B                     interrupt_function 0004  
                      ___wmul@product 002E                            ser_putch@c 002B  
      __size_of_lcd_write_1_digit_bcd 000B         __end_of_lcd_write_1_digit_bcd 1156  
                     waitFor@highByte 002C                             _rightWall 038A  
                      _addressCurrent 005F                             _ser_getch 12B0  
                          ?_goForward 0072                          ??_goParallel 00D4  
                           _ser_putch 126E                            ?_getFinalX 0072  
                          ?_getFinalY 0072                   __size_of_updateNode 0042  
              __size_of_getVictimZone 009B                            ?_goReverse 0072  
                  __end_of_goBackward 13BE                            ?_findWalls 0072  
               driveForDistance@cliff 0041                           __stringbase 1005  
              ??_getSomethingInTheWay 002A                     ___wmul@multiplier 002A  
                     ?_getOrientation 0072                            ?_initSongs 0072  
                 __size_of_turnLeft90 0038                   __size_of_turnAround 0047  
                  __end_of_goParallel 1000               __size_of_updateLocation 0068  
           __size_of_lcd_write_string 0025                   lookForVictim@victim 0030  
                        ??_initIRobot 002C               __size_of_lcd_write_data 0013  
                          ?_ser_getch 0072      __end_of_checkForFinalDestination 1442  
                        _lookingForU2 0110                            ?_ser_putch 0072  
             adc_read_channel@channel 0048                         _RTC_FLAG_10MS 0380  
                       _RTC_FLAG_50MS 0383                             init_fetch 118C  
            __end_of_driveForDistance 0581            __end_of_getSuccessfulDrive 1140  
                    __size_of___awdiv 0076                      __size_of___ftadd 018D  
                  _currentOrientation 0060                      __size_of___ftmul 00EE  
                    __size_of___fttol 00A6                      __size_of___lwmod 0044  
                            ___ftpack 09AF                              ___lbtoft 128F  
                getVictimZone@victimX 002C                  getVictimZone@victimY 002A  
                            _adc_read 1553                      __size_of_goRight 0027  
                    __size_of_convert 01CF                    __end_of_initIRobot 1215  
                       _getVictimZone 0AAB                      __size_of_waitFor 0029  
                            _findWall 1215                              _lcd_init 13BE  
                            _leftWall 0387              __end_of_adc_read_channel 1612  
           lcd_write_control@databyte 002C                              _lastMove 0061  
                            _init_adc 11B3                         __size_of_isr1 00DC  
                       __size_of_main 01E4                         __size_of_init 0036  
            __end_of_frontWallCorrect 0C97                              clear_ram 112E  
             goParallel@angleHighByte 00D9                              _ser_init 1344  
                         ??_goForward 0042                          ??_ser_putArr 0030  
                            _ser_isrx 11C9                           ??_getFinalX 002A  
                         ??_getFinalY 002A                  _findFinalDestination 0D73  
                driveForDistance@high 003E                           ??_goReverse 0033  
                            _rotateIR 1442                           ??_findWalls 004D  
                        ?_checkIfHome 0072                         ??_turnRight90 0033  
                            readIR@cm 004B                          ??_updateNode 002A  
                       ?_goToNextCell 0072                        ?_getVictimZone 002A  
       driveForDistance@deltaDistance 003A                          _RTC_FLAG_1MS 0381  
                         ??_initSongs 0035                    __end_of_ser_putArr 1553  
                            intlevel1 0000                        _lcd_set_cursor 1140  
                    ___lwmod@dividend 0074                             stringcode 1000  
                         ??_ser_getch 002A                          ??_turnLeft90 0033  
               ?_findFinalDestination 002E                           ??_ser_putch 002A  
                        ??_turnAround 0033                  _stepsToPerpendicular 00C8  
                  __end_of_updateNode 1654                goParallel@angleLowByte 00DA  
                   _lcd_write_control 119F                     _updateOrientation 1156  
                  ?_lcd_write_control 0072                updateOrientation@moved 002B  
                        ?_getCurrentX 0072                          ?_getCurrentY 0072  
                          _OPTION_REG 0081                    ?_updateOrientation 0072  
                     ___lwmod@divisor 0072                        ??_goToNextCell 0043  
                     ___lwmod@counter 0077                   __end_of_turnRight90 15D1  
                            stringdir 1000              driveForDistance@distance 003C  
                            stringtab 1000     __size_of_checkForFinalDestination 002D  
                       _closestObject 00C3             ?_checkForFinalDestination 0072  
                 ??_lcd_write_control 002A                __end_of_lcd_set_cursor 114B  
                 ??_updateOrientation 002A                    __end_of_turnLeft90 151A  
                  __end_of_turnAround 1724                        _updateLocation 08D1  
                    _lcd_write_string 12D2                           _RTC_Counter 005C  
                      _lcd_write_data 1179                       ser_putArr@array 002C  
                    ser_putArr@length 002E  
