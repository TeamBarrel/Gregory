

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Fri May 31 17:55:47 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_lcd_set_cursor
    49                           	FNCALL	_main,_lcd_write_string
    50                           	FNCALL	_main,_findWalls
    51                           	FNCALL	_main,_turnAround
    52                           	FNCALL	_main,_turnLeft90
    53                           	FNCALL	_main,_turnRight90
    54                           	FNCALL	_main,_lcd_write_data
    55                           	FNCALL	_main,_play_iCreate_song
    56                           	FNCALL	_main,_writeEEPROMTestData
    57                           	FNCALL	_main,_EEPROMToSerial
    58                           	FNCALL	_main,_checkForFinalDestination
    59                           	FNCALL	_main,_lookForVictim
    60                           	FNCALL	_main,_rotateIR
    61                           	FNCALL	_main,_wallFollow
    62                           	FNCALL	_main,_frontWallCorrect
    63                           	FNCALL	_main,_goToNextCell
    64                           	FNCALL	_main,_goRight
    65                           	FNCALL	_main,_getOrientation
    66                           	FNCALL	_main,_goForward
    67                           	FNCALL	_main,_goLeft
    68                           	FNCALL	_main,_getSuccessfulDrive
    69                           	FNCALL	_main,_updateMapData
    70                           	FNCALL	_main,_updateLocation
    71                           	FNCALL	_main,_updateNode
    72                           	FNCALL	_main,_checkIfHome
    73                           	FNCALL	_goToNextCell,_getSomethingInTheWay
    74                           	FNCALL	_goToNextCell,_goLeft
    75                           	FNCALL	_goToNextCell,_goForward
    76                           	FNCALL	_goToNextCell,_goRight
    77                           	FNCALL	_goToNextCell,_goBackward
    78                           	FNCALL	_findWalls,_rotateIR
    79                           	FNCALL	_findWalls,_lcd_set_cursor
    80                           	FNCALL	_findWalls,_findWall
    81                           	FNCALL	_findWalls,_lcd_write_data
    82                           	FNCALL	_findWalls,_play_iCreate_song
    83                           	FNCALL	_goRight,_lcd_set_cursor
    84                           	FNCALL	_goRight,_lcd_write_data
    85                           	FNCALL	_goRight,_turnRight90
    86                           	FNCALL	_goRight,_updateOrientation
    87                           	FNCALL	_goRight,_driveForDistance
    88                           	FNCALL	_goLeft,_lcd_set_cursor
    89                           	FNCALL	_goLeft,_lcd_write_data
    90                           	FNCALL	_goLeft,_turnLeft90
    91                           	FNCALL	_goLeft,_updateOrientation
    92                           	FNCALL	_goLeft,_driveForDistance
    93                           	FNCALL	_goForward,_lcd_set_cursor
    94                           	FNCALL	_goForward,_lcd_write_data
    95                           	FNCALL	_goForward,_getCurrentX
    96                           	FNCALL	_goForward,_getCurrentY
    97                           	FNCALL	_goForward,_driveForDistance
    98                           	FNCALL	_goBackward,_lcd_set_cursor
    99                           	FNCALL	_goBackward,_lcd_write_data
   100                           	FNCALL	_goBackward,_turnAround
   101                           	FNCALL	_goBackward,_updateOrientation
   102                           	FNCALL	_goBackward,_driveForDistance
   103                           	FNCALL	_wallFollow,_readIR
   104                           	FNCALL	_wallFollow,_drive
   105                           	FNCALL	_wallFollow,_waitFor
   106                           	FNCALL	_findWall,_readIR
   107                           	FNCALL	_frontWallCorrect,_readIR
   108                           	FNCALL	_frontWallCorrect,_drive
   109                           	FNCALL	_frontWallCorrect,_clearSuccessfulDrive
   110                           	FNCALL	_driveForDistance,_drive
   111                           	FNCALL	_driveForDistance,_ser_putch
   112                           	FNCALL	_driveForDistance,_ser_getch
   113                           	FNCALL	_driveForDistance,_goReverse
   114                           	FNCALL	_driveForDistance,_clearSuccessfulDrive
   115                           	FNCALL	_driveForDistance,_turnRight90
   116                           	FNCALL	_driveForDistance,_updateOrientation
   117                           	FNCALL	_driveForDistance,_turnLeft90
   118                           	FNCALL	_driveForDistance,_getCurrentY
   119                           	FNCALL	_driveForDistance,_getCurrentX
   120                           	FNCALL	_driveForDistance,_findFinalDestination
   121                           	FNCALL	_driveForDistance,_setVirtualLocation
   122                           	FNCALL	_updateLocation,_lcd_set_cursor
   123                           	FNCALL	_updateLocation,_lcd_write_data
   124                           	FNCALL	_updateLocation,_getOrientation
   125                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
   126                           	FNCALL	_lookForVictim,_ser_putch
   127                           	FNCALL	_lookForVictim,_ser_getch
   128                           	FNCALL	_lookForVictim,_play_iCreate_song
   129                           	FNCALL	_lookForVictim,_lcd_set_cursor
   130                           	FNCALL	_lookForVictim,_lcd_write_data
   131                           	FNCALL	_lookForVictim,_getVictimZone
   132                           	FNCALL	_lookForVictim,_lcd_write_1_digit_bcd
   133                           	FNCALL	_checkForFinalDestination,_getFinalX
   134                           	FNCALL	_checkForFinalDestination,_getFinalY
   135                           	FNCALL	_checkForFinalDestination,_play_iCreate_song
   136                           	FNCALL	_checkForFinalDestination,_lcd_set_cursor
   137                           	FNCALL	_checkForFinalDestination,_lcd_write_data
   138                           	FNCALL	_init,_init_adc
   139                           	FNCALL	_init,_lcd_init
   140                           	FNCALL	_init,_ser_init
   141                           	FNCALL	_init,_initIRobot
   142                           	FNCALL	_init,_initSongs
   143                           	FNCALL	_goReverse,_lcd_set_cursor
   144                           	FNCALL	_goReverse,_lcd_write_data
   145                           	FNCALL	_goReverse,_drive
   146                           	FNCALL	_goReverse,_waitFor
   147                           	FNCALL	_readIR,_adc_read_channel
   148                           	FNCALL	_readIR,_convert
   149                           	FNCALL	_findFinalDestination,_lcd_set_cursor
   150                           	FNCALL	_findFinalDestination,_lcd_write_1_digit_bcd
   151                           	FNCALL	_updateMapData,_addNewData
   152                           	FNCALL	_writeEEPROMTestData,_addNewData
   153                           	FNCALL	_checkIfHome,_drive
   154                           	FNCALL	_checkIfHome,_play_iCreate_song
   155                           	FNCALL	_turnAround,_drive
   156                           	FNCALL	_turnAround,_waitFor
   157                           	FNCALL	_turnLeft90,_drive
   158                           	FNCALL	_turnLeft90,_getCurrentX
   159                           	FNCALL	_turnLeft90,_getCurrentY
   160                           	FNCALL	_turnLeft90,_waitFor
   161                           	FNCALL	_turnRight90,_drive
   162                           	FNCALL	_turnRight90,_waitFor
   163                           	FNCALL	_initSongs,_ser_putArr
   164                           	FNCALL	_lcd_init,_lcd_write_control
   165                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
   166                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   167                           	FNCALL	_EEPROMToSerial,_readEEPROM
   168                           	FNCALL	_EEPROMToSerial,_ser_putch
   169                           	FNCALL	_addNewData,_writeEEPROM
   170                           	FNCALL	_lcd_write_string,_lcd_write_data
   171                           	FNCALL	_adc_read_channel,_adc_read
   172                           	FNCALL	_initIRobot,_ser_putch
   173                           	FNCALL	_waitFor,_ser_putch
   174                           	FNCALL	_drive,_ser_putch
   175                           	FNCALL	_convert,___wmul
   176                           	FNCALL	_convert,___awdiv
   177                           	FNCALL	_play_iCreate_song,_ser_putch
   178                           	FNCALL	_ser_putArr,_ser_putch
   179                           	FNCALL	_ser_getch,_ser_isrx
   180                           	FNCALL	_readEEPROM,_initEEPROMMode
   181                           	FNCALL	_readEEPROM,_writeSPIByte
   182                           	FNCALL	_writeEEPROM,_initEEPROMMode
   183                           	FNCALL	_writeEEPROM,_writeSPIByte
   184                           	FNCALL	_adc_read,___awdiv
   185                           	FNROOT	_main
   186                           	FNCALL	intlevel1,_isr1
   187                           	global	intlevel1
   188                           	FNROOT	intlevel1
   189                           	global	_finalX
   190                           	global	_finalY
   191                           	global	_somethingInTheWay
   192                           	global	_xCoord
   193                           	global	_xVictim
   194                           	global	_xVirtual
   195                           	global	_yCoord
   196                           	global	_yVictim
   197                           	global	_yVirtual
   198                           	global	_lookingForU2
   199                           	global	_finalCountdown
   200                           	global	_superMarioBros
   201                           	global	_champions
   202                           	global	_beep
   203                           	global	_longbeep
   204                           psect	idataBANK0,class=CODE,space=0,delta=2
   205                           global __pidataBANK0
   206  11E3                     __pidataBANK0:
   207                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
   208                           	line	7
   209                           
   210                           ;initializer for _finalX
   211  11E3  3403               	retlw	03h
   212                           	line	8
   213                           
   214                           ;initializer for _finalY
   215  11E4  3401               	retlw	01h
   216                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
   217                           	line	15
   218                           
   219                           ;initializer for _somethingInTheWay
   220  11E5  3402               	retlw	02h
   221                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
   222                           	line	51
   223                           
   224                           ;initializer for _xCoord
   225  11E6  3401               	retlw	01h
   226                           	line	53
   227                           
   228                           ;initializer for _xVictim
   229  11E7  34F6               	retlw	-10
   230                           	line	55
   231                           
   232                           ;initializer for _xVirtual
   233  11E8  34F6               	retlw	-10
   234                           	line	52
   235                           
   236                           ;initializer for _yCoord
   237  11E9  3403               	retlw	03h
   238                           	line	54
   239                           
   240                           ;initializer for _yVictim
   241  11EA  34F6               	retlw	-10
   242                           	line	56
   243                           
   244                           ;initializer for _yVirtual
   245  11EB  34F6               	retlw	-10
   246                           psect	idataBANK3,class=CODE,space=0,delta=2
   247                           global __pidataBANK3
   248  097F                     __pidataBANK3:
   249                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
   250                           	line	11
   251                           
   252                           ;initializer for _lookingForU2
   253  097F  348C               	retlw	08Ch
   254  0980  3402               	retlw	02h
   255  0981  340D               	retlw	0Dh
   256  0982  3448               	retlw	048h
   257  0983  341C               	retlw	01Ch
   258  0984  3448               	retlw	048h
   259  0985  341C               	retlw	01Ch
   260  0986  344F               	retlw	04Fh
   261  0987  3440               	retlw	040h
   262  0988  3480               	retlw	080h
   263  0989  3410               	retlw	010h
   264  098A  344D               	retlw	04Dh
   265  098B  341C               	retlw	01Ch
   266  098C  344C               	retlw	04Ch
   267  098D  341C               	retlw	01Ch
   268  098E  3448               	retlw	048h
   269  098F  3440               	retlw	040h
   270  0990  3480               	retlw	080h
   271  0991  3410               	retlw	010h
   272  0992  3445               	retlw	045h
   273  0993  341C               	retlw	01Ch
   274  0994  3445               	retlw	045h
   275  0995  341C               	retlw	01Ch
   276  0996  3445               	retlw	045h
   277  0997  341C               	retlw	01Ch
   278  0998  3448               	retlw	048h
   279  0999  341C               	retlw	01Ch
   280  099A  3448               	retlw	048h
   281  099B  3440               	retlw	040h
   282                           	line	12
   283                           
   284                           ;initializer for _finalCountdown
   285  099C  348C               	retlw	08Ch
   286  099D  3403               	retlw	03h
   287  099E  340C               	retlw	0Ch
   288  099F  3449               	retlw	049h
   289  09A0  3408               	retlw	08h
   290  09A1  3447               	retlw	047h
   291  09A2  3408               	retlw	08h
   292  09A3  3449               	retlw	049h
   293  09A4  3420               	retlw	020h
   294  09A5  3442               	retlw	042h
   295  09A6  3440               	retlw	040h
   296  09A7  3480               	retlw	080h
   297  09A8  3420               	retlw	020h
   298  09A9  344A               	retlw	04Ah
   299  09AA  3408               	retlw	08h
   300  09AB  3449               	retlw	049h
   301  09AC  3408               	retlw	08h
   302  09AD  344A               	retlw	04Ah
   303  09AE  3408               	retlw	08h
   304  09AF  3480               	retlw	080h
   305  09B0  340C               	retlw	0Ch
   306  09B1  3449               	retlw	049h
   307  09B2  3406               	retlw	06h
   308  09B3  3480               	retlw	080h
   309  09B4  340C               	retlw	0Ch
   310  09B5  3447               	retlw	047h
   311  09B6  3430               	retlw	030h
   312                           	line	10
   313                           
   314                           ;initializer for _superMarioBros
   315  09B7  348C               	retlw	08Ch
   316  09B8  3401               	retlw	01h
   317  09B9  340B               	retlw	0Bh
   318  09BA  344C               	retlw	04Ch
   319  09BB  3408               	retlw	08h
   320  09BC  3480               	retlw	080h
   321  09BD  3404               	retlw	04h
   322  09BE  344C               	retlw	04Ch
   323  09BF  3410               	retlw	010h
   324  09C0  3480               	retlw	080h
   325  09C1  3404               	retlw	04h
   326  09C2  344C               	retlw	04Ch
   327  09C3  3410               	retlw	010h
   328  09C4  3480               	retlw	080h
   329  09C5  3404               	retlw	04h
   330  09C6  3448               	retlw	048h
   331  09C7  3408               	retlw	08h
   332  09C8  344C               	retlw	04Ch
   333  09C9  3410               	retlw	010h
   334  09CA  344F               	retlw	04Fh
   335  09CB  3420               	retlw	020h
   336  09CC  3480               	retlw	080h
   337  09CD  3408               	retlw	08h
   338  09CE  3443               	retlw	043h
   339  09CF  3410               	retlw	010h
   340                           psect	idataBANK1,class=CODE,space=0,delta=2
   341                           global __pidataBANK1
   342  12F2                     __pidataBANK1:
   343                           	line	13
   344                           
   345                           ;initializer for _champions
   346  12F2  348C               	retlw	08Ch
   347  12F3  3404               	retlw	04h
   348  12F4  3409               	retlw	09h
   349  12F5  344A               	retlw	04Ah
   350  12F6  3440               	retlw	040h
   351  12F7  3449               	retlw	049h
   352  12F8  3410               	retlw	010h
   353  12F9  344A               	retlw	04Ah
   354  12FA  3410               	retlw	010h
   355  12FB  3449               	retlw	049h
   356  12FC  3430               	retlw	030h
   357  12FD  3445               	retlw	045h
   358  12FE  3430               	retlw	030h
   359  12FF  3480               	retlw	080h
   360  1300  3420               	retlw	020h
   361  1301  3442               	retlw	042h
   362  1302  341C               	retlw	01Ch
   363  1303  3447               	retlw	047h
   364  1304  3420               	retlw	020h
   365  1305  3442               	retlw	042h
   366  1306  3430               	retlw	030h
   367                           	line	14
   368                           
   369                           ;initializer for _beep
   370  1307  348C               	retlw	08Ch
   371  1308  3405               	retlw	05h
   372  1309  3401               	retlw	01h
   373  130A  3448               	retlw	048h
   374  130B  3404               	retlw	04h
   375                           	line	15
   376                           
   377                           ;initializer for _longbeep
   378  130C  348C               	retlw	08Ch
   379  130D  3406               	retlw	06h
   380  130E  3401               	retlw	01h
   381  130F  3448               	retlw	048h
   382  1310  3410               	retlw	010h
   383                           	global	_eepromSerial
   384                           	global	_start
   385                           	global	_RTC_Counter
   386                           	global	_closestObject
   387                           	global	_addressCount
   388                           	global	_addressCurrent
   389                           	global	_currentOrientation
   390                           	global	_dVirtual
   391                           	global	_lastMove
   392                           	global	_node
   393                           	global	_rxoptr
   394                           	global	_ser_tmp
   395                           	global	_stepPosition
   396                           	global	_stepsToPerpendicular
   397                           	global	_txoptr
   398                           	global	_vicZone
   399                           	global	_victimZone
   400                           	global	_wayWent
   401                           	global	_rxiptr
   402                           	global	_txiptr
   403                           	global	_RTC_FLAG_10MS
   404                           	global	_RTC_FLAG_1MS
   405                           	global	_RTC_FLAG_500MS
   406                           	global	_RTC_FLAG_50MS
   407                           	global	_frontWall
   408                           	global	_goingHome
   409                           	global	_home
   410                           	global	_leftWall
   411                           	global	_moving
   412                           	global	_ready
   413                           	global	_rightWall
   414                           	global	_successfulDrive
   415                           	global	_rxfifo
   416                           	global	_txfifo
   417                           	global	_ADCON0
   418  001F                     _ADCON0	set	31
   419                           	global	_ADRESH
   420  001E                     _ADRESH	set	30
   421                           	global	_PORTA
   422  0005                     _PORTA	set	5
   423                           	global	_PORTC
   424  0007                     _PORTC	set	7
   425                           	global	_PORTD
   426  0008                     _PORTD	set	8
   427                           	global	_PORTE
   428  0009                     _PORTE	set	9
   429                           	global	_RCREG
   430  001A                     _RCREG	set	26
   431                           	global	_SSPBUF
   432  0013                     _SSPBUF	set	19
   433                           	global	_SSPCON
   434  0014                     _SSPCON	set	20
   435                           	global	_TMR0
   436  0001                     _TMR0	set	1
   437                           	global	_TXREG
   438  0019                     _TXREG	set	25
   439                           	global	_CARRY
   440  0018                     _CARRY	set	24
   441                           	global	_CHS0
   442  00FB                     _CHS0	set	251
   443                           	global	_CHS1
   444  00FC                     _CHS1	set	252
   445                           	global	_CHS2
   446  00FD                     _CHS2	set	253
   447                           	global	_CREN
   448  00C4                     _CREN	set	196
   449                           	global	_GIE
   450  005F                     _GIE	set	95
   451                           	global	_GO
   452  00FA                     _GO	set	250
   453                           	global	_OERR
   454  00C1                     _OERR	set	193
   455                           	global	_PEIE
   456  005E                     _PEIE	set	94
   457                           	global	_RB0
   458  0030                     _RB0	set	48
   459                           	global	_RB1
   460  0031                     _RB1	set	49
   461                           	global	_RCIF
   462  0065                     _RCIF	set	101
   463                           	global	_RE0
   464  0048                     _RE0	set	72
   465                           	global	_RE1
   466  0049                     _RE1	set	73
   467                           	global	_RE2
   468  004A                     _RE2	set	74
   469                           	global	_RX9
   470  00C6                     _RX9	set	198
   471                           	global	_SPEN
   472  00C7                     _SPEN	set	199
   473                           	global	_SSPIF
   474  0063                     _SSPIF	set	99
   475                           	global	_TMR0IE
   476  005D                     _TMR0IE	set	93
   477                           	global	_TMR0IF
   478  005A                     _TMR0IF	set	90
   479                           	global	_TXIF
   480  0064                     _TXIF	set	100
   481                           	global	_ADCON1
   482  009F                     _ADCON1	set	159
   483                           	global	_ADRESL
   484  009E                     _ADRESL	set	158
   485                           	global	_OPTION_REG
   486  0081                     _OPTION_REG	set	129
   487                           	global	_SPBRG
   488  0099                     _SPBRG	set	153
   489                           	global	_SSPSTAT
   490  0094                     _SSPSTAT	set	148
   491                           	global	_TRISA
   492  0085                     _TRISA	set	133
   493                           	global	_TRISB
   494  0086                     _TRISB	set	134
   495                           	global	_TRISC
   496  0087                     _TRISC	set	135
   497                           	global	_TRISD
   498  0088                     _TRISD	set	136
   499                           	global	_TRISE
   500  0089                     _TRISE	set	137
   501                           	global	_BRGH
   502  04C2                     _BRGH	set	1218
   503                           	global	_RCIE
   504  0465                     _RCIE	set	1125
   505                           	global	_SYNC
   506  04C4                     _SYNC	set	1220
   507                           	global	_TX9
   508  04C6                     _TX9	set	1222
   509                           	global	_TXEN
   510  04C5                     _TXEN	set	1221
   511                           	global	_TXIE
   512  0464                     _TXIE	set	1124
   513                           	global	_EEADR
   514  010D                     _EEADR	set	269
   515                           	global	_EEDATA
   516  010C                     _EEDATA	set	268
   517                           	global	_EECON1
   518  018C                     _EECON1	set	396
   519                           	global	_EECON2
   520  018D                     _EECON2	set	397
   521                           	global	_RD
   522  0C60                     _RD	set	3168
   523                           	global	_WR
   524  0C61                     _WR	set	3169
   525                           	global	_WREN
   526  0C62                     _WREN	set	3170
   527                           psect	strings,class=STRING,delta=2
   528                           global __pstrings
   529  0800                     __pstrings:
   530                           ;	global	stringdir,stringtab,__stringbase
   531  0800                     stringtab:
   532                           ;	String table - string pointers are 1 byte each
   533  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
   534  0800  3008               movlw high(stringdir)
   535  0801  008A               movwf pclath
   536  0802  0804               movf fsr,w
   537  0803  0A84               incf fsr
   538  0804  0782               	addwf pc
   539  0805                     __stringbase:
   540  0805  3400               	retlw	0
   541                           psect	strings
   542                           	
   543  0806                     STR_7:	
   544  0806  3443               	retlw	67	;'C'
   545  0807  346F               	retlw	111	;'o'
   546  0808  346D               	retlw	109	;'m'
   547  0809  3470               	retlw	112	;'p'
   548  080A  346C               	retlw	108	;'l'
   549  080B  3465               	retlw	101	;'e'
   550  080C  3474               	retlw	116	;'t'
   551  080D  3465               	retlw	101	;'e'
   552  080E  3420               	retlw	32	;' '
   553  080F  3420               	retlw	32	;' '
   554  0810  3420               	retlw	32	;' '
   555  0811  3420               	retlw	32	;' '
   556  0812  3420               	retlw	32	;' '
   557  0813  3420               	retlw	32	;' '
   558  0814  3420               	retlw	32	;' '
   559  0815  3420               	retlw	32	;' '
   560  0816  3420               	retlw	32	;' '
   561  0817  3420               	retlw	32	;' '
   562  0818  3420               	retlw	32	;' '
   563  0819  3420               	retlw	32	;' '
   564  081A  3420               	retlw	32	;' '
   565  081B  3420               	retlw	32	;' '
   566  081C  3400               	retlw	0
   567                           psect	strings
   568                           	
   569  081D                     STR_5:	
   570  081D  3445               	retlw	69	;'E'
   571  081E  3445               	retlw	69	;'E'
   572  081F  3450               	retlw	80	;'P'
   573  0820  3452               	retlw	82	;'R'
   574  0821  344F               	retlw	79	;'O'
   575  0822  344D               	retlw	77	;'M'
   576  0823  3420               	retlw	32	;' '
   577  0824  3453               	retlw	83	;'S'
   578  0825  3465               	retlw	101	;'e'
   579  0826  3472               	retlw	114	;'r'
   580  0827  3469               	retlw	105	;'i'
   581  0828  3461               	retlw	97	;'a'
   582  0829  346C               	retlw	108	;'l'
   583  082A  3420               	retlw	32	;' '
   584  082B  3420               	retlw	32	;' '
   585  082C  3420               	retlw	32	;' '
   586  082D  3420               	retlw	32	;' '
   587  082E  3420               	retlw	32	;' '
   588  082F  3420               	retlw	32	;' '
   589  0830  3420               	retlw	32	;' '
   590  0831  3420               	retlw	32	;' '
   591  0832  3420               	retlw	32	;' '
   592  0833  3400               	retlw	0
   593                           psect	strings
   594                           	
   595  0834                     STR_6:	
   596  0834  3450               	retlw	80	;'P'
   597  0835  346C               	retlw	108	;'l'
   598  0836  3465               	retlw	101	;'e'
   599  0837  3461               	retlw	97	;'a'
   600  0838  3473               	retlw	115	;'s'
   601  0839  3465               	retlw	101	;'e'
   602  083A  3420               	retlw	32	;' '
   603  083B  3457               	retlw	87	;'W'
   604  083C  3461               	retlw	97	;'a'
   605  083D  3469               	retlw	105	;'i'
   606  083E  3474               	retlw	116	;'t'
   607  083F  342E               	retlw	46	;'.'
   608  0840  342E               	retlw	46	;'.'
   609  0841  342E               	retlw	46	;'.'
   610  0842  3420               	retlw	32	;' '
   611  0843  3420               	retlw	32	;' '
   612  0844  3420               	retlw	32	;' '
   613  0845  3420               	retlw	32	;' '
   614  0846  3420               	retlw	32	;' '
   615  0847  3420               	retlw	32	;' '
   616  0848  3420               	retlw	32	;' '
   617  0849  3420               	retlw	32	;' '
   618  084A  3400               	retlw	0
   619                           psect	strings
   620                           	
   621  084B                     STR_3:	
   622  084B  3428               	retlw	40	;'('
   623  084C  342D               	retlw	45	;'-'
   624  084D  342C               	retlw	44	;','
   625  084E  342D               	retlw	45	;'-'
   626  084F  3429               	retlw	41	;')'
   627  0850  3420               	retlw	32	;' '
   628  0851  342D               	retlw	45	;'-'
   629  0852  3420               	retlw	32	;' '
   630  0853  342D               	retlw	45	;'-'
   631  0854  342D               	retlw	45	;'-'
   632  0855  3420               	retlw	32	;' '
   633  0856  342D               	retlw	45	;'-'
   634  0857  342D               	retlw	45	;'-'
   635  0858  342D               	retlw	45	;'-'
   636  0859  3420               	retlw	32	;' '
   637  085A  342D               	retlw	45	;'-'
   638  085B  3400               	retlw	0
   639                           psect	strings
   640                           	
   641  085C                     STR_4:	
   642  085C  342D               	retlw	45	;'-'
   643  085D  3420               	retlw	32	;' '
   644  085E  342D               	retlw	45	;'-'
   645  085F  3420               	retlw	32	;' '
   646  0860  342D               	retlw	45	;'-'
   647  0861  3420               	retlw	32	;' '
   648  0862  3428               	retlw	40	;'('
   649  0863  3433               	retlw	51	;'3'
   650  0864  342C               	retlw	44	;','
   651  0865  3431               	retlw	49	;'1'
   652  0866  3429               	retlw	41	;')'
   653  0867  3420               	retlw	32	;' '
   654  0868  3447               	retlw	71	;'G'
   655  0869  3452               	retlw	82	;'R'
   656  086A  3445               	retlw	69	;'E'
   657  086B  3447               	retlw	71	;'G'
   658  086C  3400               	retlw	0
   659                           psect	strings
   660                           	
   661  086D                     STR_1:	
   662  086D  3445               	retlw	69	;'E'
   663  086E  3445               	retlw	69	;'E'
   664  086F  3450               	retlw	80	;'P'
   665  0870  3452               	retlw	82	;'R'
   666  0871  344F               	retlw	79	;'O'
   667  0872  344D               	retlw	77	;'M'
   668  0873  3420               	retlw	32	;' '
   669  0874  3453               	retlw	83	;'S'
   670  0875  3475               	retlw	117	;'u'
   671  0876  3463               	retlw	99	;'c'
   672  0877  3463               	retlw	99	;'c'
   673  0878  3465               	retlw	101	;'e'
   674  0879  3473               	retlw	115	;'s'
   675  087A  3473               	retlw	115	;'s'
   676  087B  3400               	retlw	0
   677                           psect	strings
   678                           	
   679  087C                     STR_2:	
   680  087C  3445               	retlw	69	;'E'
   681  087D  3445               	retlw	69	;'E'
   682  087E  3450               	retlw	80	;'P'
   683  087F  3452               	retlw	82	;'R'
   684  0880  344F               	retlw	79	;'O'
   685  0881  344D               	retlw	77	;'M'
   686  0882  3420               	retlw	32	;' '
   687  0883  3446               	retlw	70	;'F'
   688  0884  3461               	retlw	97	;'a'
   689  0885  3469               	retlw	105	;'i'
   690  0886  346C               	retlw	108	;'l'
   691  0887  3465               	retlw	101	;'e'
   692  0888  3464               	retlw	100	;'d'
   693  0889  3400               	retlw	0
   694                           psect	strings
   695                           	file	"WORKING_FILE.as"
   696                           	line	#
   697                           psect cinit,class=CODE,delta=2
   698                           global start_initialization
   699  1735                     start_initialization:
   700                           
   701                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   702                           global __pbitbssCOMMON
   703  0380                     __pbitbssCOMMON:
   704  0380                     _RTC_FLAG_10MS:
   705  0380                            ds      1
   706                           
   707  0381                     _RTC_FLAG_1MS:
   708  0381                            ds      1
   709                           
   710  0382                     _RTC_FLAG_500MS:
   711  0382                            ds      1
   712                           
   713  0383                     _RTC_FLAG_50MS:
   714  0383                            ds      1
   715                           
   716  0384                     _frontWall:
   717  0384                            ds      1
   718                           
   719  0385                     _goingHome:
   720  0385                            ds      1
   721                           
   722  0386                     _home:
   723  0386                            ds      1
   724                           
   725  0387                     _leftWall:
   726  0387                            ds      1
   727                           
   728  0388                     _moving:
   729  0388                            ds      1
   730                           
   731  0389                     _ready:
   732  0389                            ds      1
   733                           
   734  038A                     _rightWall:
   735  038A                            ds      1
   736                           
   737  038B                     _successfulDrive:
   738  038B                            ds      1
   739                           
   740                           psect	bssCOMMON,class=COMMON,space=1
   741                           global __pbssCOMMON
   742  007C                     __pbssCOMMON:
   743  007C                     _rxiptr:
   744  007C                            ds      1
   745                           
   746  007D                     _txiptr:
   747  007D                            ds      1
   748                           
   749                           psect	bssBANK0,class=BANK0,space=1
   750                           global __pbssBANK0
   751  004B                     __pbssBANK0:
   752  004B                     _eepromSerial:
   753  004B                            ds      3
   754                           
   755  004E                     _start:
   756  004E                            ds      3
   757                           
   758  0051                     _RTC_Counter:
   759  0051                            ds      2
   760                           
   761  0053                     _closestObject:
   762  0053                            ds      2
   763                           
   764  0055                     _addressCount:
   765  0055                            ds      1
   766                           
   767  0056                     _addressCurrent:
   768  0056                            ds      1
   769                           
   770  0057                     _currentOrientation:
   771  0057                            ds      1
   772                           
   773  0058                     _dVirtual:
   774  0058                            ds      1
   775                           
   776  0059                     _lastMove:
   777  0059                            ds      1
   778                           
   779  005A                     _node:
   780  005A                            ds      1
   781                           
   782  005B                     _rxoptr:
   783  005B                            ds      1
   784                           
   785  005C                     _ser_tmp:
   786  005C                            ds      1
   787                           
   788  005D                     _stepPosition:
   789  005D                            ds      1
   790                           
   791  005E                     _stepsToPerpendicular:
   792  005E                            ds      1
   793                           
   794  005F                     _txoptr:
   795  005F                            ds      1
   796                           
   797  0060                     _vicZone:
   798  0060                            ds      1
   799                           
   800  0061                     _victimZone:
   801  0061                            ds      1
   802                           
   803  0062                     _wayWent:
   804  0062                            ds      1
   805                           
   806                           psect	dataBANK0,class=BANK0,space=1
   807                           global __pdataBANK0
   808  0063                     __pdataBANK0:
   809                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
   810                           	line	7
   811  0063                     _finalX:
   812  0063                            ds      1
   813                           
   814                           psect	dataBANK0
   815                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
   816                           	line	8
   817  0064                     _finalY:
   818  0064                            ds      1
   819                           
   820                           psect	dataBANK0
   821                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
   822                           	line	15
   823  0065                     _somethingInTheWay:
   824  0065                            ds      1
   825                           
   826                           psect	dataBANK0
   827                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
   828                           	line	51
   829  0066                     _xCoord:
   830  0066                            ds      1
   831                           
   832                           psect	dataBANK0
   833                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
   834                           	line	53
   835  0067                     _xVictim:
   836  0067                            ds      1
   837                           
   838                           psect	dataBANK0
   839                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
   840                           	line	55
   841  0068                     _xVirtual:
   842  0068                            ds      1
   843                           
   844                           psect	dataBANK0
   845                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
   846                           	line	52
   847  0069                     _yCoord:
   848  0069                            ds      1
   849                           
   850                           psect	dataBANK0
   851                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
   852                           	line	54
   853  006A                     _yVictim:
   854  006A                            ds      1
   855                           
   856                           psect	dataBANK0
   857                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
   858                           	line	56
   859  006B                     _yVirtual:
   860  006B                            ds      1
   861                           
   862                           psect	bssBANK1,class=BANK1,space=1
   863                           global __pbssBANK1
   864  00A0                     __pbssBANK1:
   865  00A0                     _rxfifo:
   866  00A0                            ds      16
   867                           
   868  00B0                     _txfifo:
   869  00B0                            ds      16
   870                           
   871                           psect	dataBANK1,class=BANK1,space=1
   872                           global __pdataBANK1
   873  00C0                     __pdataBANK1:
   874                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
   875                           	line	13
   876  00C0                     _champions:
   877  00C0                            ds      21
   878                           
   879                           psect	dataBANK1
   880                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
   881                           	line	14
   882  00D5                     _beep:
   883  00D5                            ds      5
   884                           
   885                           psect	dataBANK1
   886                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
   887                           	line	15
   888  00DA                     _longbeep:
   889  00DA                            ds      5
   890                           
   891                           psect	dataBANK3,class=BANK3,space=1
   892                           global __pdataBANK3
   893  0190                     __pdataBANK3:
   894                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
   895                           	line	11
   896  0190                     _lookingForU2:
   897  0190                            ds      29
   898                           
   899                           psect	dataBANK3
   900                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
   901                           	line	12
   902  01AD                     _finalCountdown:
   903  01AD                            ds      27
   904                           
   905                           psect	dataBANK3
   906                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
   907                           	line	10
   908  01C8                     _superMarioBros:
   909  01C8                            ds      25
   910                           
   911                           psect clrtext,class=CODE,delta=2
   912                           global clear_ram
   913                           ;	Called with FSR containing the base address, and
   914                           ;	W with the last address+1
   915  11DB                     clear_ram:
   916  11DB  0064               	clrwdt			;clear the watchdog before getting into this loop
   917  11DC                     clrloop:
   918  11DC  0180               	clrf	indf		;clear RAM location pointed to by FSR
   919  11DD  0A84               	incf	fsr,f		;increment pointer
   920  11DE  0604               	xorwf	fsr,w		;XOR with final address
   921  11DF  1903               	btfsc	status,2	;have we reached the end yet?
   922  11E0  3400               	retlw	0		;all done for this memory range, return
   923  11E1  0604               	xorwf	fsr,w		;XOR again to restore value
   924  11E2  29DC               	goto	clrloop		;do the next byte
   925                           
   926                           ; Clear objects allocated to BITCOMMON
   927                           psect cinit,class=CODE,delta=2
   928  1735  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   929  1736  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   930                           ; Clear objects allocated to COMMON
   931                           psect cinit,class=CODE,delta=2
   932  1737  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   933  1738  01FD               	clrf	((__pbssCOMMON)+1)&07Fh
   934                           ; Clear objects allocated to BANK0
   935                           psect cinit,class=CODE,delta=2
   936  1739  1383               	bcf	status, 7	;select IRP bank0
   937  173A  304B               	movlw	low(__pbssBANK0)
   938  173B  0084               	movwf	fsr
   939  173C  3063               	movlw	low((__pbssBANK0)+018h)
   940  173D  160A  118A  21DB   	fcall	clear_ram
              160A  118A         
   941                           ; Clear objects allocated to BANK1
   942                           psect cinit,class=CODE,delta=2
   943  1742  30A0               	movlw	low(__pbssBANK1)
   944  1743  0084               	movwf	fsr
   945  1744  30C0               	movlw	low((__pbssBANK1)+020h)
   946  1745  160A  118A  21DB   	fcall	clear_ram
              160A  118A         
   947                           global btemp
   948                           psect inittext,class=CODE,delta=2
   949                           global init_fetch,btemp
   950                           ;	Called with low address in FSR and high address in W
   951  125F                     init_fetch:
   952  125F  087E               	movf btemp,w
   953  1260  008A               	movwf pclath
   954  1261  087F               	movf btemp+1,w
   955  1262  0082               	movwf pc
   956                           global init_ram
   957                           ;Called with:
   958                           ;	high address of idata address in btemp 
   959                           ;	low address of idata address in btemp+1 
   960                           ;	low address of data in FSR
   961                           ;	high address + 1 of data in btemp-1
   962  1263                     init_ram:
   963  1263  160A  118A  225F   	fcall init_fetch
              160A  118A         
   964  1268  0080               	movwf indf,f
   965  1269  0A84               	incf fsr,f
   966  126A  0804               	movf fsr,w
   967  126B  067D               	xorwf btemp-1,w
   968  126C  1903               	btfsc status,2
   969  126D  3400               	retlw 0
   970  126E  0AFF               	incf btemp+1,f
   971  126F  1903               	btfsc status,2
   972  1270  0AFE               	incf btemp,f
   973  1271  2A63               	goto init_ram
   974                           ; Initialize objects allocated to BANK3
   975                           psect cinit,class=CODE,delta=2
   976                           global init_ram, __pidataBANK3
   977  174A  1783               	bsf	status, 7	;select IRP bank2
   978  174B  30E1               	movlw low(__pdataBANK3+81)
   979  174C  00FD               	movwf btemp-1,f
   980  174D  3009               	movlw high(__pidataBANK3)
   981  174E  00FE               	movwf btemp,f
   982  174F  307F               	movlw low(__pidataBANK3)
   983  1750  00FF               	movwf btemp+1,f
   984  1751  3090               	movlw low(__pdataBANK3)
   985  1752  0084               	movwf fsr,f
   986  1753  160A  118A  2263   	fcall init_ram
              160A  118A         
   987                           ; Initialize objects allocated to BANK1
   988                           psect cinit,class=CODE,delta=2
   989                           global init_ram, __pidataBANK1
   990  1758  1383               	bcf	status, 7	;select IRP bank0
   991  1759  30DF               	movlw low(__pdataBANK1+31)
   992  175A  00FD               	movwf btemp-1,f
   993  175B  3012               	movlw high(__pidataBANK1)
   994  175C  00FE               	movwf btemp,f
   995  175D  30F2               	movlw low(__pidataBANK1)
   996  175E  00FF               	movwf btemp+1,f
   997  175F  30C0               	movlw low(__pdataBANK1)
   998  1760  0084               	movwf fsr,f
   999  1761  160A  118A  2263   	fcall init_ram
              160A  118A         
  1000                           ; Initialize objects allocated to BANK0
  1001                           psect cinit,class=CODE,delta=2
  1002                           global init_ram, __pidataBANK0
  1003  1766  306C               	movlw low(__pdataBANK0+9)
  1004  1767  00FD               	movwf btemp-1,f
  1005  1768  3011               	movlw high(__pidataBANK0)
  1006  1769  00FE               	movwf btemp,f
  1007  176A  30E3               	movlw low(__pidataBANK0)
  1008  176B  00FF               	movwf btemp+1,f
  1009  176C  3063               	movlw low(__pdataBANK0)
  1010  176D  0084               	movwf fsr,f
  1011  176E  160A  118A  2263   	fcall init_ram
              160A  118A         
  1012                           psect cinit,class=CODE,delta=2
  1013                           global end_of_initialization
  1014                           
  1015                           ;End of C runtime variable initialization code
  1016                           
  1017  1773                     end_of_initialization:
  1018  1773  0183               clrf status
  1019  1774  120A  118A  2815   ljmp _main	;jump to C main() function
  1020                           psect	cstackCOMMON,class=COMMON,space=1
  1021                           global __pcstackCOMMON
  1022  0072                     __pcstackCOMMON:
  1023                           	global	?_lcd_write_string
  1024  0072                     ?_lcd_write_string:	; 0 bytes @ 0x0
  1025                           	global	?_ser_putch
  1026  0072                     ?_ser_putch:	; 0 bytes @ 0x0
  1027                           	global	?_goReverse
  1028  0072                     ?_goReverse:	; 0 bytes @ 0x0
  1029                           	global	?_clearSuccessfulDrive
  1030  0072                     ?_clearSuccessfulDrive:	; 0 bytes @ 0x0
  1031                           	global	?_turnRight90
  1032  0072                     ?_turnRight90:	; 0 bytes @ 0x0
  1033                           	global	?_updateOrientation
  1034  0072                     ?_updateOrientation:	; 0 bytes @ 0x0
  1035                           	global	?_turnLeft90
  1036  0072                     ?_turnLeft90:	; 0 bytes @ 0x0
  1037                           	global	?_turnAround
  1038  0072                     ?_turnAround:	; 0 bytes @ 0x0
  1039                           	global	?_initIRobot
  1040  0072                     ?_initIRobot:	; 0 bytes @ 0x0
  1041                           	global	?_findWall
  1042  0072                     ?_findWall:	; 1 bit 
  1043                           	global	?_wallFollow
  1044  0072                     ?_wallFollow:	; 0 bytes @ 0x0
  1045                           	global	?_init_adc
  1046  0072                     ?_init_adc:	; 0 bytes @ 0x0
  1047                           	global	?_writeSPIByte
  1048  0072                     ?_writeSPIByte:	; 0 bytes @ 0x0
  1049                           	global	?_initEEPROMMode
  1050  0072                     ?_initEEPROMMode:	; 0 bytes @ 0x0
  1051                           	global	?_addNewData
  1052  0072                     ?_addNewData:	; 0 bytes @ 0x0
  1053                           	global	?_writeEEPROMTestData
  1054  0072                     ?_writeEEPROMTestData:	; 0 bytes @ 0x0
  1055                           	global	?_EEPROMToSerial
  1056  0072                     ?_EEPROMToSerial:	; 0 bytes @ 0x0
  1057                           	global	?_lcd_write_control
  1058  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
  1059                           	global	?_lcd_write_data
  1060  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
  1061                           	global	?_lcd_set_cursor
  1062  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
  1063                           	global	?_lcd_write_1_digit_bcd
  1064  0072                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
  1065                           	global	?_lcd_init
  1066  0072                     ?_lcd_init:	; 0 bytes @ 0x0
  1067                           	global	?_ser_isrx
  1068  0072                     ?_ser_isrx:	; 1 bit 
  1069                           	global	?_ser_init
  1070  0072                     ?_ser_init:	; 0 bytes @ 0x0
  1071                           	global	?_play_iCreate_song
  1072  0072                     ?_play_iCreate_song:	; 0 bytes @ 0x0
  1073                           	global	?_initSongs
  1074  0072                     ?_initSongs:	; 0 bytes @ 0x0
  1075                           	global	?_getSuccessfulDrive
  1076  0072                     ?_getSuccessfulDrive:	; 1 bit 
  1077                           	global	?_goBackward
  1078  0072                     ?_goBackward:	; 0 bytes @ 0x0
  1079                           	global	?_goForward
  1080  0072                     ?_goForward:	; 0 bytes @ 0x0
  1081                           	global	?_goLeft
  1082  0072                     ?_goLeft:	; 0 bytes @ 0x0
  1083                           	global	?_goRight
  1084  0072                     ?_goRight:	; 0 bytes @ 0x0
  1085                           	global	?_frontWallCorrect
  1086  0072                     ?_frontWallCorrect:	; 0 bytes @ 0x0
  1087                           	global	?_isr1
  1088  0072                     ?_isr1:	; 0 bytes @ 0x0
  1089                           	global	??_isr1
  1090  0072                     ??_isr1:	; 0 bytes @ 0x0
  1091                           	global	?_init
  1092  0072                     ?_init:	; 0 bytes @ 0x0
  1093                           	global	?_checkForFinalDestination
  1094  0072                     ?_checkForFinalDestination:	; 0 bytes @ 0x0
  1095                           	global	?_lookForVictim
  1096  0072                     ?_lookForVictim:	; 0 bytes @ 0x0
  1097                           	global	?_findWalls
  1098  0072                     ?_findWalls:	; 0 bytes @ 0x0
  1099                           	global	?_goToNextCell
  1100  0072                     ?_goToNextCell:	; 0 bytes @ 0x0
  1101                           	global	?_updateLocation
  1102  0072                     ?_updateLocation:	; 0 bytes @ 0x0
  1103                           	global	?_updateNode
  1104  0072                     ?_updateNode:	; 0 bytes @ 0x0
  1105                           	global	?_checkIfHome
  1106  0072                     ?_checkIfHome:	; 0 bytes @ 0x0
  1107                           	global	?_main
  1108  0072                     ?_main:	; 0 bytes @ 0x0
  1109                           	global	?_getCurrentX
  1110  0072                     ?_getCurrentX:	; 1 bytes @ 0x0
  1111                           	global	?_getCurrentY
  1112  0072                     ?_getCurrentY:	; 1 bytes @ 0x0
  1113                           	global	?_getFinalX
  1114  0072                     ?_getFinalX:	; 1 bytes @ 0x0
  1115                           	global	?_getFinalY
  1116  0072                     ?_getFinalY:	; 1 bytes @ 0x0
  1117                           	global	?_ser_getch
  1118  0072                     ?_ser_getch:	; 1 bytes @ 0x0
  1119                           	global	?_getOrientation
  1120  0072                     ?_getOrientation:	; 1 bytes @ 0x0
  1121                           	global	?_getSomethingInTheWay
  1122  0072                     ?_getSomethingInTheWay:	; 1 bytes @ 0x0
  1123  0072                     	ds	10
  1124                           psect	cstackBANK0,class=BANK0,space=1
  1125                           global __pcstackBANK0
  1126  0020                     __pcstackBANK0:
  1127                           	global	??_ser_putch
  1128  0020                     ??_ser_putch:	; 0 bytes @ 0x0
  1129                           	global	??_clearSuccessfulDrive
  1130  0020                     ??_clearSuccessfulDrive:	; 0 bytes @ 0x0
  1131                           	global	??_updateOrientation
  1132  0020                     ??_updateOrientation:	; 0 bytes @ 0x0
  1133                           	global	??_getCurrentX
  1134  0020                     ??_getCurrentX:	; 0 bytes @ 0x0
  1135                           	global	??_getCurrentY
  1136  0020                     ??_getCurrentY:	; 0 bytes @ 0x0
  1137                           	global	?_setVirtualLocation
  1138  0020                     ?_setVirtualLocation:	; 0 bytes @ 0x0
  1139                           	global	??_init_adc
  1140  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1141                           	global	??_writeSPIByte
  1142  0020                     ??_writeSPIByte:	; 0 bytes @ 0x0
  1143                           	global	??_initEEPROMMode
  1144  0020                     ??_initEEPROMMode:	; 0 bytes @ 0x0
  1145                           	global	??_lcd_write_control
  1146  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1147                           	global	??_lcd_write_data
  1148  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1149                           	global	??_getFinalX
  1150  0020                     ??_getFinalX:	; 0 bytes @ 0x0
  1151                           	global	??_getFinalY
  1152  0020                     ??_getFinalY:	; 0 bytes @ 0x0
  1153                           	global	??_ser_isrx
  1154  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1155                           	global	??_ser_getch
  1156  0020                     ??_ser_getch:	; 0 bytes @ 0x0
  1157                           	global	??_ser_init
  1158  0020                     ??_ser_init:	; 0 bytes @ 0x0
  1159                           	global	?_rotateIR
  1160  0020                     ?_rotateIR:	; 0 bytes @ 0x0
  1161                           	global	??_getOrientation
  1162  0020                     ??_getOrientation:	; 0 bytes @ 0x0
  1163                           	global	??_getSomethingInTheWay
  1164  0020                     ??_getSomethingInTheWay:	; 0 bytes @ 0x0
  1165                           	global	??_getSuccessfulDrive
  1166  0020                     ??_getSuccessfulDrive:	; 0 bytes @ 0x0
  1167                           	global	??_updateNode
  1168  0020                     ??_updateNode:	; 0 bytes @ 0x0
  1169                           	global	?_getVictimZone
  1170  0020                     ?_getVictimZone:	; 1 bytes @ 0x0
  1171                           	global	?___wmul
  1172  0020                     ?___wmul:	; 2 bytes @ 0x0
  1173                           	global	writeSPIByte@data
  1174  0020                     writeSPIByte@data:	; 1 bytes @ 0x0
  1175                           	global	getVictimZone@victimY
  1176  0020                     getVictimZone@victimY:	; 1 bytes @ 0x0
  1177                           	global	rotateIR@direction
  1178  0020                     rotateIR@direction:	; 1 bytes @ 0x0
  1179                           	global	setVirtualLocation@yV
  1180  0020                     setVirtualLocation@yV:	; 1 bytes @ 0x0
  1181                           	global	___wmul@multiplier
  1182  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1183  0020                     	ds	1
  1184                           	global	?_writeEEPROM
  1185  0021                     ?_writeEEPROM:	; 0 bytes @ 0x1
  1186                           	global	??_getVictimZone
  1187  0021                     ??_getVictimZone:	; 0 bytes @ 0x1
  1188                           	global	??_rotateIR
  1189  0021                     ??_rotateIR:	; 0 bytes @ 0x1
  1190                           	global	?_readEEPROM
  1191  0021                     ?_readEEPROM:	; 1 bytes @ 0x1
  1192                           	global	writeEEPROM@addressH
  1193  0021                     writeEEPROM@addressH:	; 1 bytes @ 0x1
  1194                           	global	readEEPROM@addressL
  1195  0021                     readEEPROM@addressL:	; 1 bytes @ 0x1
  1196                           	global	ser_getch@c
  1197  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1198                           	global	ser_putch@c
  1199  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1200                           	global	updateOrientation@moved
  1201  0021                     updateOrientation@moved:	; 1 bytes @ 0x1
  1202                           	global	setVirtualLocation@dV
  1203  0021                     setVirtualLocation@dV:	; 1 bytes @ 0x1
  1204  0021                     	ds	1
  1205                           	global	??_setVirtualLocation
  1206  0022                     ??_setVirtualLocation:	; 0 bytes @ 0x2
  1207                           	global	?_waitFor
  1208  0022                     ?_waitFor:	; 0 bytes @ 0x2
  1209                           	global	??_initIRobot
  1210  0022                     ??_initIRobot:	; 0 bytes @ 0x2
  1211                           	global	??_readEEPROM
  1212  0022                     ??_readEEPROM:	; 0 bytes @ 0x2
  1213                           	global	?_ser_putArr
  1214  0022                     ?_ser_putArr:	; 0 bytes @ 0x2
  1215                           	global	??_play_iCreate_song
  1216  0022                     ??_play_iCreate_song:	; 0 bytes @ 0x2
  1217                           	global	?_drive
  1218  0022                     ?_drive:	; 0 bytes @ 0x2
  1219                           	global	writeEEPROM@addressL
  1220  0022                     writeEEPROM@addressL:	; 1 bytes @ 0x2
  1221                           	global	lcd_write_control@databyte
  1222  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1223                           	global	lcd_write_data@databyte
  1224  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1225                           	global	getVictimZone@victimX
  1226  0022                     getVictimZone@victimX:	; 1 bytes @ 0x2
  1227                           	global	play_iCreate_song@song
  1228  0022                     play_iCreate_song@song:	; 1 bytes @ 0x2
  1229                           	global	drive@lowByteSpeed
  1230  0022                     drive@lowByteSpeed:	; 1 bytes @ 0x2
  1231                           	global	waitFor@highByte
  1232  0022                     waitFor@highByte:	; 1 bytes @ 0x2
  1233                           	global	ser_putArr@array
  1234  0022                     ser_putArr@array:	; 2 bytes @ 0x2
  1235                           	global	___wmul@multiplicand
  1236  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1237  0022                     	ds	1
  1238                           	global	??_lcd_write_string
  1239  0023                     ??_lcd_write_string:	; 0 bytes @ 0x3
  1240                           	global	??_writeEEPROM
  1241  0023                     ??_writeEEPROM:	; 0 bytes @ 0x3
  1242                           	global	??_lcd_set_cursor
  1243  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1244                           	global	??_lcd_write_1_digit_bcd
  1245  0023                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0x3
  1246                           	global	??_lcd_init
  1247  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1248                           	global	lcd_set_cursor@address
  1249  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1250                           	global	lcd_write_1_digit_bcd@data
  1251  0023                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0x3
  1252                           	global	drive@highByteRadius
  1253  0023                     drive@highByteRadius:	; 1 bytes @ 0x3
  1254                           	global	waitFor@lowByte
  1255  0023                     waitFor@lowByte:	; 1 bytes @ 0x3
  1256                           	global	setVirtualLocation@xV
  1257  0023                     setVirtualLocation@xV:	; 1 bytes @ 0x3
  1258  0023                     	ds	1
  1259                           	global	??_waitFor
  1260  0024                     ??_waitFor:	; 0 bytes @ 0x4
  1261                           	global	?_findFinalDestination
  1262  0024                     ?_findFinalDestination:	; 0 bytes @ 0x4
  1263                           	global	??_checkForFinalDestination
  1264  0024                     ??_checkForFinalDestination:	; 0 bytes @ 0x4
  1265                           	global	??_lookForVictim
  1266  0024                     ??_lookForVictim:	; 0 bytes @ 0x4
  1267                           	global	??_updateLocation
  1268  0024                     ??_updateLocation:	; 0 bytes @ 0x4
  1269                           	global	??___wmul
  1270  0024                     ??___wmul:	; 0 bytes @ 0x4
  1271                           	global	lcd_write_string@s
  1272  0024                     lcd_write_string@s:	; 1 bytes @ 0x4
  1273                           	global	findFinalDestination@virtualWallY
  1274  0024                     findFinalDestination@virtualWallY:	; 1 bytes @ 0x4
  1275                           	global	rotateIR@steps
  1276  0024                     rotateIR@steps:	; 1 bytes @ 0x4
  1277                           	global	drive@lowByteRadius
  1278  0024                     drive@lowByteRadius:	; 1 bytes @ 0x4
  1279                           	global	ser_putArr@length
  1280  0024                     ser_putArr@length:	; 2 bytes @ 0x4
  1281                           	global	___wmul@product
  1282  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1283  0024                     	ds	1
  1284                           	global	??_drive
  1285  0025                     ??_drive:	; 0 bytes @ 0x5
  1286                           	global	readEEPROM@addressH
  1287  0025                     readEEPROM@addressH:	; 1 bytes @ 0x5
  1288                           	global	findFinalDestination@robotOrientation
  1289  0025                     findFinalDestination@robotOrientation:	; 1 bytes @ 0x5
  1290                           	global	rotateIR@stepNum
  1291  0025                     rotateIR@stepNum:	; 1 bytes @ 0x5
  1292  0025                     	ds	1
  1293                           	global	??_findFinalDestination
  1294  0026                     ??_findFinalDestination:	; 0 bytes @ 0x6
  1295                           	global	??_ser_putArr
  1296  0026                     ??_ser_putArr:	; 0 bytes @ 0x6
  1297                           	global	?___awdiv
  1298  0026                     ?___awdiv:	; 2 bytes @ 0x6
  1299                           	global	writeEEPROM@data
  1300  0026                     writeEEPROM@data:	; 1 bytes @ 0x6
  1301                           	global	readEEPROM@returnData
  1302  0026                     readEEPROM@returnData:	; 1 bytes @ 0x6
  1303                           	global	___awdiv@divisor
  1304  0026                     ___awdiv@divisor:	; 2 bytes @ 0x6
  1305  0026                     	ds	1
  1306                           	global	??_addNewData
  1307  0027                     ??_addNewData:	; 0 bytes @ 0x7
  1308                           	global	??_EEPROMToSerial
  1309  0027                     ??_EEPROMToSerial:	; 0 bytes @ 0x7
  1310                           	global	findFinalDestination@virtualWallX
  1311  0027                     findFinalDestination@virtualWallX:	; 1 bytes @ 0x7
  1312                           	global	waitFor@type
  1313  0027                     waitFor@type:	; 1 bytes @ 0x7
  1314                           	global	lookForVictim@victim
  1315  0027                     lookForVictim@victim:	; 1 bytes @ 0x7
  1316  0027                     	ds	1
  1317                           	global	addNewData@data
  1318  0028                     addNewData@data:	; 1 bytes @ 0x8
  1319                           	global	drive@highByteSpeed
  1320  0028                     drive@highByteSpeed:	; 1 bytes @ 0x8
  1321                           	global	___awdiv@dividend
  1322  0028                     ___awdiv@dividend:	; 2 bytes @ 0x8
  1323  0028                     	ds	1
  1324                           	global	??_goReverse
  1325  0029                     ??_goReverse:	; 0 bytes @ 0x9
  1326                           	global	??_turnRight90
  1327  0029                     ??_turnRight90:	; 0 bytes @ 0x9
  1328                           	global	??_turnLeft90
  1329  0029                     ??_turnLeft90:	; 0 bytes @ 0x9
  1330                           	global	??_turnAround
  1331  0029                     ??_turnAround:	; 0 bytes @ 0x9
  1332                           	global	??_writeEEPROMTestData
  1333  0029                     ??_writeEEPROMTestData:	; 0 bytes @ 0x9
  1334                           	global	?_updateMapData
  1335  0029                     ?_updateMapData:	; 0 bytes @ 0x9
  1336                           	global	??_checkIfHome
  1337  0029                     ??_checkIfHome:	; 0 bytes @ 0x9
  1338                           	global	updateMapData@virtualS
  1339  0029                     updateMapData@virtualS:	; 1 bytes @ 0x9
  1340                           	global	ser_putArr@i
  1341  0029                     ser_putArr@i:	; 2 bytes @ 0x9
  1342  0029                     	ds	1
  1343                           	global	??___awdiv
  1344  002A                     ??___awdiv:	; 0 bytes @ 0xA
  1345                           	global	updateMapData@virtualE
  1346  002A                     updateMapData@virtualE:	; 1 bytes @ 0xA
  1347                           	global	EEPROMToSerial@transferDone
  1348  002A                     EEPROMToSerial@transferDone:	; 1 bytes @ 0xA
  1349  002A                     	ds	1
  1350                           	global	??_initSongs
  1351  002B                     ??_initSongs:	; 0 bytes @ 0xB
  1352                           	global	??_init
  1353  002B                     ??_init:	; 0 bytes @ 0xB
  1354                           	global	updateMapData@virtualN
  1355  002B                     updateMapData@virtualN:	; 1 bytes @ 0xB
  1356                           	global	___awdiv@counter
  1357  002B                     ___awdiv@counter:	; 1 bytes @ 0xB
  1358  002B                     	ds	1
  1359                           	global	?_driveForDistance
  1360  002C                     ?_driveForDistance:	; 0 bytes @ 0xC
  1361                           	global	updateMapData@victim
  1362  002C                     updateMapData@victim:	; 1 bytes @ 0xC
  1363                           	global	___awdiv@sign
  1364  002C                     ___awdiv@sign:	; 1 bytes @ 0xC
  1365                           	global	driveForDistance@moveDistance
  1366  002C                     driveForDistance@moveDistance:	; 2 bytes @ 0xC
  1367  002C                     	ds	1
  1368                           	global	updateMapData@move
  1369  002D                     updateMapData@move:	; 1 bytes @ 0xD
  1370                           	global	___awdiv@quotient
  1371  002D                     ___awdiv@quotient:	; 2 bytes @ 0xD
  1372  002D                     	ds	1
  1373                           	global	??_updateMapData
  1374  002E                     ??_updateMapData:	; 0 bytes @ 0xE
  1375                           	global	??_driveForDistance
  1376  002E                     ??_driveForDistance:	; 0 bytes @ 0xE
  1377  002E                     	ds	1
  1378                           	global	?_adc_read
  1379  002F                     ?_adc_read:	; 2 bytes @ 0xF
  1380  002F                     	ds	1
  1381                           	global	updateMapData@virtualW
  1382  0030                     updateMapData@virtualW:	; 1 bytes @ 0x10
  1383                           	global	driveForDistance@deltaDistance
  1384  0030                     driveForDistance@deltaDistance:	; 2 bytes @ 0x10
  1385  0030                     	ds	1
  1386                           	global	??_adc_read
  1387  0031                     ??_adc_read:	; 0 bytes @ 0x11
  1388                           	global	updateMapData@completeData
  1389  0031                     updateMapData@completeData:	; 1 bytes @ 0x11
  1390  0031                     	ds	1
  1391                           	global	driveForDistance@distance
  1392  0032                     driveForDistance@distance:	; 2 bytes @ 0x12
  1393  0032                     	ds	2
  1394                           	global	driveForDistance@high
  1395  0034                     driveForDistance@high:	; 1 bytes @ 0x14
  1396  0034                     	ds	1
  1397                           	global	driveForDistance@low
  1398  0035                     driveForDistance@low:	; 1 bytes @ 0x15
  1399                           	global	adc_read@adc_value
  1400  0035                     adc_read@adc_value:	; 2 bytes @ 0x15
  1401  0035                     	ds	1
  1402                           	global	driveForDistance@virtualWall
  1403  0036                     driveForDistance@virtualWall:	; 1 bytes @ 0x16
  1404  0036                     	ds	1
  1405                           	global	?_convert
  1406  0037                     ?_convert:	; 2 bytes @ 0x17
  1407                           	global	driveForDistance@cliff
  1408  0037                     driveForDistance@cliff:	; 1 bytes @ 0x17
  1409                           	global	convert@adc_value
  1410  0037                     convert@adc_value:	; 2 bytes @ 0x17
  1411  0037                     	ds	1
  1412                           	global	??_goBackward
  1413  0038                     ??_goBackward:	; 0 bytes @ 0x18
  1414                           	global	??_goForward
  1415  0038                     ??_goForward:	; 0 bytes @ 0x18
  1416                           	global	??_goLeft
  1417  0038                     ??_goLeft:	; 0 bytes @ 0x18
  1418                           	global	??_goRight
  1419  0038                     ??_goRight:	; 0 bytes @ 0x18
  1420  0038                     	ds	1
  1421                           	global	??_convert
  1422  0039                     ??_convert:	; 0 bytes @ 0x19
  1423                           	global	??_goToNextCell
  1424  0039                     ??_goToNextCell:	; 0 bytes @ 0x19
  1425  0039                     	ds	2
  1426                           	global	?_adc_read_channel
  1427  003B                     ?_adc_read_channel:	; 2 bytes @ 0x1B
  1428  003B                     	ds	2
  1429                           	global	??_adc_read_channel
  1430  003D                     ??_adc_read_channel:	; 0 bytes @ 0x1D
  1431  003D                     	ds	1
  1432                           	global	adc_read_channel@channel
  1433  003E                     adc_read_channel@channel:	; 1 bytes @ 0x1E
  1434  003E                     	ds	1
  1435                           	global	?_readIR
  1436  003F                     ?_readIR:	; 2 bytes @ 0x1F
  1437  003F                     	ds	2
  1438                           	global	??_readIR
  1439  0041                     ??_readIR:	; 0 bytes @ 0x21
  1440                           	global	readIR@cm
  1441  0041                     readIR@cm:	; 2 bytes @ 0x21
  1442  0041                     	ds	2
  1443                           	global	??_findWall
  1444  0043                     ??_findWall:	; 0 bytes @ 0x23
  1445                           	global	??_wallFollow
  1446  0043                     ??_wallFollow:	; 0 bytes @ 0x23
  1447                           	global	??_frontWallCorrect
  1448  0043                     ??_frontWallCorrect:	; 0 bytes @ 0x23
  1449                           	global	??_findWalls
  1450  0043                     ??_findWalls:	; 0 bytes @ 0x23
  1451  0043                     	ds	2
  1452                           	global	frontWallCorrect@distToWall
  1453  0045                     frontWallCorrect@distToWall:	; 2 bytes @ 0x25
  1454  0045                     	ds	1
  1455                           	global	wallFollow@distanceToWall
  1456  0046                     wallFollow@distanceToWall:	; 2 bytes @ 0x26
  1457  0046                     	ds	2
  1458                           	global	??_main
  1459  0048                     ??_main:	; 0 bytes @ 0x28
  1460  0048                     	ds	2
  1461                           	global	main@victimIndicator
  1462  004A                     main@victimIndicator:	; 1 bytes @ 0x2A
  1463  004A                     	ds	1
  1464 ;;Data sizes: Strings 132, constant 0, data 121, bss 58, persistent 0 stack 0
  1465 ;;Auto spaces:   Size  Autos    Used
  1466 ;; COMMON          14     10      14
  1467 ;; BANK0           80     43      76
  1468 ;; BANK1           80      0      63
  1469 ;; BANK3           96      0      81
  1470 ;; BANK2           96      0       0
  1471                           
  1472 ;;
  1473 ;; Pointer list with targets:
  1474                           
  1475 ;; ?_readIR	int  size(1) Largest target is 0
  1476 ;;
  1477 ;; ?_convert	int  size(1) Largest target is 2
  1478 ;;		 -> convert@adc_value(BANK0[2]), 
  1479 ;;
  1480 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1481 ;;
  1482 ;; ?_adc_read	int  size(1) Largest target is 0
  1483 ;;
  1484 ;; ?___awdiv	int  size(1) Largest target is 0
  1485 ;;
  1486 ;; ?_adc_read_channel	int  size(1) Largest target is 0
  1487 ;;
  1488 ;; ser_putArr@array	PTR unsigned char  size(2) Largest target is 29
  1489 ;;		 -> longbeep(BANK1[5]), beep(BANK1[5]), champions(BANK1[21]), lookingForU2(BANK3[29]), 
  1490 ;;		 -> superMarioBros(BANK3[25]), finalCountdown(BANK3[27]), 
  1491 ;;
  1492 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 23
  1493 ;;		 -> STR_7(CODE[23]), STR_6(CODE[23]), STR_5(CODE[23]), STR_4(CODE[17]), 
  1494 ;;		 -> STR_3(CODE[17]), STR_2(CODE[14]), STR_1(CODE[15]), 
  1495 ;;
  1496                           
  1497                           
  1498 ;;
  1499 ;; Critical Paths under _main in COMMON
  1500 ;;
  1501 ;;   None.
  1502 ;;
  1503 ;; Critical Paths under _isr1 in COMMON
  1504 ;;
  1505 ;;   None.
  1506 ;;
  1507 ;; Critical Paths under _main in BANK0
  1508 ;;
  1509 ;;   _main->_wallFollow
  1510 ;;   _goToNextCell->_goRight
  1511 ;;   _goToNextCell->_goBackward
  1512 ;;   _goRight->_driveForDistance
  1513 ;;   _goLeft->_driveForDistance
  1514 ;;   _goForward->_driveForDistance
  1515 ;;   _goBackward->_driveForDistance
  1516 ;;   _wallFollow->_readIR
  1517 ;;   _findWall->_readIR
  1518 ;;   _frontWallCorrect->_readIR
  1519 ;;   _driveForDistance->_goReverse
  1520 ;;   _driveForDistance->_turnRight90
  1521 ;;   _driveForDistance->_turnLeft90
  1522 ;;   _updateLocation->_lcd_set_cursor
  1523 ;;   _updateLocation->_lcd_write_1_digit_bcd
  1524 ;;   _lookForVictim->_lcd_set_cursor
  1525 ;;   _lookForVictim->_lcd_write_1_digit_bcd
  1526 ;;   _checkForFinalDestination->_lcd_set_cursor
  1527 ;;   _goReverse->_drive
  1528 ;;   _readIR->_adc_read_channel
  1529 ;;   _findFinalDestination->_lcd_set_cursor
  1530 ;;   _findFinalDestination->_lcd_write_1_digit_bcd
  1531 ;;   _updateMapData->_addNewData
  1532 ;;   _writeEEPROMTestData->_addNewData
  1533 ;;   _checkIfHome->_drive
  1534 ;;   _turnAround->_drive
  1535 ;;   _turnLeft90->_drive
  1536 ;;   _turnRight90->_drive
  1537 ;;   _initSongs->_ser_putArr
  1538 ;;   _lcd_init->_lcd_write_control
  1539 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
  1540 ;;   _lcd_set_cursor->_lcd_write_control
  1541 ;;   _EEPROMToSerial->_readEEPROM
  1542 ;;   _addNewData->_writeEEPROM
  1543 ;;   _lcd_write_string->_lcd_write_data
  1544 ;;   _adc_read_channel->_convert
  1545 ;;   _initIRobot->_ser_putch
  1546 ;;   _waitFor->_ser_putch
  1547 ;;   _drive->_ser_putch
  1548 ;;   _convert->_adc_read
  1549 ;;   _play_iCreate_song->_ser_putch
  1550 ;;   _ser_putArr->_ser_putch
  1551 ;;   _readEEPROM->_initEEPROMMode
  1552 ;;   _readEEPROM->_writeSPIByte
  1553 ;;   _writeEEPROM->_initEEPROMMode
  1554 ;;   _writeEEPROM->_writeSPIByte
  1555 ;;   _adc_read->___awdiv
  1556 ;;   ___awdiv->___wmul
  1557 ;;
  1558 ;; Critical Paths under _isr1 in BANK0
  1559 ;;
  1560 ;;   None.
  1561 ;;
  1562 ;; Critical Paths under _main in BANK1
  1563 ;;
  1564 ;;   None.
  1565 ;;
  1566 ;; Critical Paths under _isr1 in BANK1
  1567 ;;
  1568 ;;   None.
  1569 ;;
  1570 ;; Critical Paths under _main in BANK3
  1571 ;;
  1572 ;;   None.
  1573 ;;
  1574 ;; Critical Paths under _isr1 in BANK3
  1575 ;;
  1576 ;;   None.
  1577 ;;
  1578 ;; Critical Paths under _main in BANK2
  1579 ;;
  1580 ;;   None.
  1581 ;;
  1582 ;; Critical Paths under _isr1 in BANK2
  1583 ;;
  1584 ;;   None.
  1585                           
  1586 ;;
  1587 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1588 ;;
  1589                           
  1590 ;;
  1591 ;;Call Graph Tables:
  1592 ;;
  1593 ;; ---------------------------------------------------------------------------------
  1594 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1595 ;; ---------------------------------------------------------------------------------
  1596 ;; (0) _main                                                 3     3      0   17862
  1597 ;;                                             40 BANK0      3     3      0
  1598 ;;                               _init
  1599 ;;                              _drive
  1600 ;;                     _lcd_set_cursor
  1601 ;;                   _lcd_write_string
  1602 ;;                          _findWalls
  1603 ;;                         _turnAround
  1604 ;;                         _turnLeft90
  1605 ;;                        _turnRight90
  1606 ;;                     _lcd_write_data
  1607 ;;                  _play_iCreate_song
  1608 ;;                _writeEEPROMTestData
  1609 ;;                     _EEPROMToSerial
  1610 ;;           _checkForFinalDestination
  1611 ;;                      _lookForVictim
  1612 ;;                           _rotateIR
  1613 ;;                         _wallFollow
  1614 ;;                   _frontWallCorrect
  1615 ;;                       _goToNextCell
  1616 ;;                            _goRight
  1617 ;;                     _getOrientation
  1618 ;;                          _goForward
  1619 ;;                             _goLeft
  1620 ;;                 _getSuccessfulDrive
  1621 ;;                      _updateMapData
  1622 ;;                     _updateLocation
  1623 ;;                         _updateNode
  1624 ;;                        _checkIfHome
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (1) _goToNextCell                                         0     0      0    6704
  1627 ;;               _getSomethingInTheWay
  1628 ;;                             _goLeft
  1629 ;;                          _goForward
  1630 ;;                            _goRight
  1631 ;;                         _goBackward
  1632 ;; ---------------------------------------------------------------------------------
  1633 ;; (1) _findWalls                                            1     1      0    1225
  1634 ;;                                             35 BANK0      1     1      0
  1635 ;;                           _rotateIR
  1636 ;;                     _lcd_set_cursor
  1637 ;;                           _findWall
  1638 ;;                     _lcd_write_data
  1639 ;;                  _play_iCreate_song
  1640 ;; ---------------------------------------------------------------------------------
  1641 ;; (1) _goRight                                              1     1      0    1731
  1642 ;;                                             24 BANK0      1     1      0
  1643 ;;                     _lcd_set_cursor
  1644 ;;                     _lcd_write_data
  1645 ;;                        _turnRight90
  1646 ;;                  _updateOrientation
  1647 ;;                   _driveForDistance
  1648 ;; ---------------------------------------------------------------------------------
  1649 ;; (1) _goLeft                                               0     0      0    1731
  1650 ;;                     _lcd_set_cursor
  1651 ;;                     _lcd_write_data
  1652 ;;                         _turnLeft90
  1653 ;;                  _updateOrientation
  1654 ;;                   _driveForDistance
  1655 ;; ---------------------------------------------------------------------------------
  1656 ;; (1) _goForward                                            0     0      0    1511
  1657 ;;                     _lcd_set_cursor
  1658 ;;                     _lcd_write_data
  1659 ;;                        _getCurrentX
  1660 ;;                        _getCurrentY
  1661 ;;                   _driveForDistance
  1662 ;; ---------------------------------------------------------------------------------
  1663 ;; (2) _goBackward                                           1     1      0    1731
  1664 ;;                                             24 BANK0      1     1      0
  1665 ;;                     _lcd_set_cursor
  1666 ;;                     _lcd_write_data
  1667 ;;                         _turnAround
  1668 ;;                  _updateOrientation
  1669 ;;                   _driveForDistance
  1670 ;; ---------------------------------------------------------------------------------
  1671 ;; (1) _wallFollow                                           5     5      0    1311
  1672 ;;                                             35 BANK0      5     5      0
  1673 ;;                             _readIR
  1674 ;;                              _drive
  1675 ;;                            _waitFor
  1676 ;; ---------------------------------------------------------------------------------
  1677 ;; (2) _findWall                                             0     0      0    1046
  1678 ;;                             _readIR
  1679 ;; ---------------------------------------------------------------------------------
  1680 ;; (1) _frontWallCorrect                                     4     4      0    1247
  1681 ;;                                             35 BANK0      4     4      0
  1682 ;;                             _readIR
  1683 ;;                              _drive
  1684 ;;               _clearSuccessfulDrive
  1685 ;; ---------------------------------------------------------------------------------
  1686 ;; (2) _driveForDistance                                    12    10      2    1444
  1687 ;;                                             12 BANK0     12    10      2
  1688 ;;                              _drive
  1689 ;;                          _ser_putch
  1690 ;;                          _ser_getch
  1691 ;;                          _goReverse
  1692 ;;               _clearSuccessfulDrive
  1693 ;;                        _turnRight90
  1694 ;;                  _updateOrientation
  1695 ;;                         _turnLeft90
  1696 ;;                        _getCurrentY
  1697 ;;                        _getCurrentX
  1698 ;;               _findFinalDestination
  1699 ;;                 _setVirtualLocation
  1700 ;; ---------------------------------------------------------------------------------
  1701 ;; (1) _updateLocation                                       1     1      0     111
  1702 ;;                                              4 BANK0      1     1      0
  1703 ;;                     _lcd_set_cursor
  1704 ;;                     _lcd_write_data
  1705 ;;                     _getOrientation
  1706 ;;              _lcd_write_1_digit_bcd
  1707 ;; ---------------------------------------------------------------------------------
  1708 ;; (1) _lookForVictim                                        4     4      0     377
  1709 ;;                                              4 BANK0      4     4      0
  1710 ;;                          _ser_putch
  1711 ;;                          _ser_getch
  1712 ;;                  _play_iCreate_song
  1713 ;;                     _lcd_set_cursor
  1714 ;;                     _lcd_write_data
  1715 ;;                      _getVictimZone
  1716 ;;              _lcd_write_1_digit_bcd
  1717 ;; ---------------------------------------------------------------------------------
  1718 ;; (1) _checkForFinalDestination                             2     2      0     111
  1719 ;;                                              4 BANK0      2     2      0
  1720 ;;                          _getFinalX
  1721 ;;                          _getFinalY
  1722 ;;                  _play_iCreate_song
  1723 ;;                     _lcd_set_cursor
  1724 ;;                     _lcd_write_data
  1725 ;; ---------------------------------------------------------------------------------
  1726 ;; (1) _init                                                 0     0      0     156
  1727 ;;                           _init_adc
  1728 ;;                           _lcd_init
  1729 ;;                           _ser_init
  1730 ;;                         _initIRobot
  1731 ;;                          _initSongs
  1732 ;; ---------------------------------------------------------------------------------
  1733 ;; (3) _goReverse                                            3     3      0     265
  1734 ;;                                              9 BANK0      3     3      0
  1735 ;;                     _lcd_set_cursor
  1736 ;;                     _lcd_write_data
  1737 ;;                              _drive
  1738 ;;                            _waitFor
  1739 ;; ---------------------------------------------------------------------------------
  1740 ;; (2) _readIR                                               4     2      2    1046
  1741 ;;                                             31 BANK0      4     2      2
  1742 ;;                   _adc_read_channel
  1743 ;;                            _convert
  1744 ;; ---------------------------------------------------------------------------------
  1745 ;; (3) _findFinalDestination                                 4     2      2     287
  1746 ;;                                              4 BANK0      4     2      2
  1747 ;;                     _lcd_set_cursor
  1748 ;;              _lcd_write_1_digit_bcd
  1749 ;;                        _getCurrentY (ARG)
  1750 ;;                        _getCurrentX (ARG)
  1751 ;; ---------------------------------------------------------------------------------
  1752 ;; (1) _updateMapData                                        9     4      5     272
  1753 ;;                                              9 BANK0      9     4      5
  1754 ;;                         _addNewData
  1755 ;;                     _getOrientation (ARG)
  1756 ;; ---------------------------------------------------------------------------------
  1757 ;; (1) _writeEEPROMTestData                                  0     0      0     110
  1758 ;;                         _addNewData
  1759 ;; ---------------------------------------------------------------------------------
  1760 ;; (1) _checkIfHome                                          0     0      0     154
  1761 ;;                              _drive
  1762 ;;                  _play_iCreate_song
  1763 ;; ---------------------------------------------------------------------------------
  1764 ;; (3) _turnAround                                           3     3      0     198
  1765 ;;                                              9 BANK0      3     3      0
  1766 ;;                              _drive
  1767 ;;                            _waitFor
  1768 ;; ---------------------------------------------------------------------------------
  1769 ;; (3) _turnLeft90                                           3     3      0     198
  1770 ;;                                              9 BANK0      3     3      0
  1771 ;;                              _drive
  1772 ;;                        _getCurrentX
  1773 ;;                        _getCurrentY
  1774 ;;                            _waitFor
  1775 ;; ---------------------------------------------------------------------------------
  1776 ;; (3) _turnRight90                                          3     3      0     198
  1777 ;;                                              9 BANK0      3     3      0
  1778 ;;                              _drive
  1779 ;;                            _waitFor
  1780 ;; ---------------------------------------------------------------------------------
  1781 ;; (2) _initSongs                                            0     0      0     112
  1782 ;;                         _ser_putArr
  1783 ;; ---------------------------------------------------------------------------------
  1784 ;; (2) _lcd_init                                             0     0      0      22
  1785 ;;                  _lcd_write_control
  1786 ;; ---------------------------------------------------------------------------------
  1787 ;; (2) _lcd_write_1_digit_bcd                                1     1      0      44
  1788 ;;                                              3 BANK0      1     1      0
  1789 ;;                     _lcd_write_data
  1790 ;; ---------------------------------------------------------------------------------
  1791 ;; (2) _lcd_set_cursor                                       1     1      0      45
  1792 ;;                                              3 BANK0      1     1      0
  1793 ;;                  _lcd_write_control
  1794 ;; ---------------------------------------------------------------------------------
  1795 ;; (1) _EEPROMToSerial                                       4     4      0     136
  1796 ;;                                              7 BANK0      4     4      0
  1797 ;;                         _readEEPROM
  1798 ;;                          _ser_putch
  1799 ;; ---------------------------------------------------------------------------------
  1800 ;; (2) _addNewData                                           2     2      0     110
  1801 ;;                                              7 BANK0      2     2      0
  1802 ;;                        _writeEEPROM
  1803 ;; ---------------------------------------------------------------------------------
  1804 ;; (1) _lcd_write_string                                     2     2      0      67
  1805 ;;                                              3 BANK0      2     2      0
  1806 ;;                     _lcd_write_data
  1807 ;; ---------------------------------------------------------------------------------
  1808 ;; (3) _adc_read_channel                                     4     2      2     345
  1809 ;;                                             27 BANK0      4     2      2
  1810 ;;                           _adc_read
  1811 ;;                            _convert (ARG)
  1812 ;; ---------------------------------------------------------------------------------
  1813 ;; (2) _initIRobot                                           3     3      0      22
  1814 ;;                                              2 BANK0      3     3      0
  1815 ;;                          _ser_putch
  1816 ;; ---------------------------------------------------------------------------------
  1817 ;; (4) _waitFor                                              6     4      2      88
  1818 ;;                                              2 BANK0      6     4      2
  1819 ;;                          _ser_putch
  1820 ;; ---------------------------------------------------------------------------------
  1821 ;; (2) _drive                                                7     4      3     110
  1822 ;;                                              2 BANK0      7     4      3
  1823 ;;                          _ser_putch
  1824 ;; ---------------------------------------------------------------------------------
  1825 ;; (1) _rotateIR                                             6     5      1      68
  1826 ;;                                              0 BANK0      6     5      1
  1827 ;; ---------------------------------------------------------------------------------
  1828 ;; (3) _convert                                              4     2      2     678
  1829 ;;                                             23 BANK0      4     2      2
  1830 ;;                             ___wmul
  1831 ;;                            ___awdiv
  1832 ;;                           _adc_read (ARG)
  1833 ;; ---------------------------------------------------------------------------------
  1834 ;; (2) _play_iCreate_song                                    1     1      0      44
  1835 ;;                                              2 BANK0      1     1      0
  1836 ;;                          _ser_putch
  1837 ;; ---------------------------------------------------------------------------------
  1838 ;; (3) _ser_putArr                                           9     5      4     112
  1839 ;;                                              2 BANK0      9     5      4
  1840 ;;                          _ser_putch
  1841 ;; ---------------------------------------------------------------------------------
  1842 ;; (3) _ser_getch                                            2     2      0      23
  1843 ;;                                              0 BANK0      2     2      0
  1844 ;;                           _ser_isrx
  1845 ;; ---------------------------------------------------------------------------------
  1846 ;; (3) _lcd_write_data                                       3     3      0      22
  1847 ;;                                              0 BANK0      3     3      0
  1848 ;; ---------------------------------------------------------------------------------
  1849 ;; (3) _lcd_write_control                                    3     3      0      22
  1850 ;;                                              0 BANK0      3     3      0
  1851 ;; ---------------------------------------------------------------------------------
  1852 ;; (2) _readEEPROM                                           6     5      1      90
  1853 ;;                                              1 BANK0      6     5      1
  1854 ;;                     _initEEPROMMode
  1855 ;;                       _writeSPIByte
  1856 ;; ---------------------------------------------------------------------------------
  1857 ;; (3) _writeEEPROM                                          6     4      2      88
  1858 ;;                                              1 BANK0      6     4      2
  1859 ;;                     _initEEPROMMode
  1860 ;;                       _writeSPIByte
  1861 ;; ---------------------------------------------------------------------------------
  1862 ;; (2) _init_adc                                             1     1      0       0
  1863 ;;                                              0 BANK0      1     1      0
  1864 ;; ---------------------------------------------------------------------------------
  1865 ;; (4) _adc_read                                             8     6      2     323
  1866 ;;                                             15 BANK0      8     6      2
  1867 ;;                            ___awdiv
  1868 ;; ---------------------------------------------------------------------------------
  1869 ;; (4) ___awdiv                                              9     5      4     300
  1870 ;;                                              6 BANK0      9     5      4
  1871 ;;                             ___wmul (ARG)
  1872 ;; ---------------------------------------------------------------------------------
  1873 ;; (4) ___wmul                                               6     2      4      92
  1874 ;;                                              0 BANK0      6     2      4
  1875 ;; ---------------------------------------------------------------------------------
  1876 ;; (1) _updateNode                                           1     1      0       0
  1877 ;;                                              0 BANK0      1     1      0
  1878 ;; ---------------------------------------------------------------------------------
  1879 ;; (1) _getSuccessfulDrive                                   0     0      0       0
  1880 ;; ---------------------------------------------------------------------------------
  1881 ;; (2) _getSomethingInTheWay                                 0     0      0       0
  1882 ;; ---------------------------------------------------------------------------------
  1883 ;; (2) _getOrientation                                       0     0      0       0
  1884 ;; ---------------------------------------------------------------------------------
  1885 ;; (3) _setVirtualLocation                                   4     2      2      66
  1886 ;;                                              0 BANK0      4     2      2
  1887 ;;                        _getCurrentY (ARG)
  1888 ;;                        _getCurrentX (ARG)
  1889 ;; ---------------------------------------------------------------------------------
  1890 ;; (3) _getCurrentY                                          0     0      0       0
  1891 ;; ---------------------------------------------------------------------------------
  1892 ;; (3) _getCurrentX                                          0     0      0       0
  1893 ;; ---------------------------------------------------------------------------------
  1894 ;; (3) _updateOrientation                                    2     2      0      22
  1895 ;;                                              0 BANK0      2     2      0
  1896 ;; ---------------------------------------------------------------------------------
  1897 ;; (3) _clearSuccessfulDrive                                 0     0      0       0
  1898 ;; ---------------------------------------------------------------------------------
  1899 ;; (2) _ser_init                                             1     1      0       0
  1900 ;;                                              0 BANK0      1     1      0
  1901 ;; ---------------------------------------------------------------------------------
  1902 ;; (4) _ser_isrx                                             0     0      0       0
  1903 ;; ---------------------------------------------------------------------------------
  1904 ;; (2) _getVictimZone                                        3     2      1     132
  1905 ;;                                              0 BANK0      3     2      1
  1906 ;; ---------------------------------------------------------------------------------
  1907 ;; (2) _getFinalY                                            0     0      0       0
  1908 ;; ---------------------------------------------------------------------------------
  1909 ;; (2) _getFinalX                                            0     0      0       0
  1910 ;; ---------------------------------------------------------------------------------
  1911 ;; (3) _ser_putch                                            2     2      0      22
  1912 ;;                                              0 BANK0      2     2      0
  1913 ;; ---------------------------------------------------------------------------------
  1914 ;; (4) _initEEPROMMode                                       1     1      0       0
  1915 ;;                                              0 BANK0      1     1      0
  1916 ;; ---------------------------------------------------------------------------------
  1917 ;; (4) _writeSPIByte                                         1     1      0      22
  1918 ;;                                              0 BANK0      1     1      0
  1919 ;; ---------------------------------------------------------------------------------
  1920 ;; Estimated maximum stack depth 4
  1921 ;; ---------------------------------------------------------------------------------
  1922 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1923 ;; ---------------------------------------------------------------------------------
  1924 ;; (7) _isr1                                                10    10      0       0
  1925 ;;                                              0 COMMON    10    10      0
  1926 ;; ---------------------------------------------------------------------------------
  1927 ;; Estimated maximum stack depth 7
  1928 ;; ---------------------------------------------------------------------------------
  1929                           
  1930 ;; Call Graph Graphs:
  1931                           
  1932 ;; _main (ROOT)
  1933 ;;   _init
  1934 ;;     _init_adc
  1935 ;;     _lcd_init
  1936 ;;       _lcd_write_control
  1937 ;;     _ser_init
  1938 ;;     _initIRobot
  1939 ;;       _ser_putch
  1940 ;;     _initSongs
  1941 ;;       _ser_putArr
  1942 ;;         _ser_putch
  1943 ;;   _drive
  1944 ;;     _ser_putch
  1945 ;;   _lcd_set_cursor
  1946 ;;     _lcd_write_control
  1947 ;;   _lcd_write_string
  1948 ;;     _lcd_write_data
  1949 ;;   _findWalls
  1950 ;;     _rotateIR
  1951 ;;     _lcd_set_cursor
  1952 ;;       _lcd_write_control
  1953 ;;     _findWall
  1954 ;;       _readIR
  1955 ;;         _adc_read_channel
  1956 ;;           _adc_read
  1957 ;;             ___awdiv
  1958 ;;               ___wmul (ARG)
  1959 ;;           _convert (ARG)
  1960 ;;             ___wmul
  1961 ;;             ___awdiv
  1962 ;;               ___wmul (ARG)
  1963 ;;             _adc_read (ARG)
  1964 ;;               ___awdiv
  1965 ;;                 ___wmul (ARG)
  1966 ;;         _convert
  1967 ;;           ___wmul
  1968 ;;           ___awdiv
  1969 ;;             ___wmul (ARG)
  1970 ;;           _adc_read (ARG)
  1971 ;;             ___awdiv
  1972 ;;               ___wmul (ARG)
  1973 ;;     _lcd_write_data
  1974 ;;     _play_iCreate_song
  1975 ;;       _ser_putch
  1976 ;;   _turnAround
  1977 ;;     _drive
  1978 ;;       _ser_putch
  1979 ;;     _waitFor
  1980 ;;       _ser_putch
  1981 ;;   _turnLeft90
  1982 ;;     _drive
  1983 ;;       _ser_putch
  1984 ;;     _getCurrentX
  1985 ;;     _getCurrentY
  1986 ;;     _waitFor
  1987 ;;       _ser_putch
  1988 ;;   _turnRight90
  1989 ;;     _drive
  1990 ;;       _ser_putch
  1991 ;;     _waitFor
  1992 ;;       _ser_putch
  1993 ;;   _lcd_write_data
  1994 ;;   _play_iCreate_song
  1995 ;;     _ser_putch
  1996 ;;   _writeEEPROMTestData
  1997 ;;     _addNewData
  1998 ;;       _writeEEPROM
  1999 ;;         _initEEPROMMode
  2000 ;;         _writeSPIByte
  2001 ;;   _EEPROMToSerial
  2002 ;;     _readEEPROM
  2003 ;;       _initEEPROMMode
  2004 ;;       _writeSPIByte
  2005 ;;     _ser_putch
  2006 ;;   _checkForFinalDestination
  2007 ;;     _getFinalX
  2008 ;;     _getFinalY
  2009 ;;     _play_iCreate_song
  2010 ;;       _ser_putch
  2011 ;;     _lcd_set_cursor
  2012 ;;       _lcd_write_control
  2013 ;;     _lcd_write_data
  2014 ;;   _lookForVictim
  2015 ;;     _ser_putch
  2016 ;;     _ser_getch
  2017 ;;       _ser_isrx
  2018 ;;     _play_iCreate_song
  2019 ;;       _ser_putch
  2020 ;;     _lcd_set_cursor
  2021 ;;       _lcd_write_control
  2022 ;;     _lcd_write_data
  2023 ;;     _getVictimZone
  2024 ;;     _lcd_write_1_digit_bcd
  2025 ;;       _lcd_write_data
  2026 ;;   _rotateIR
  2027 ;;   _wallFollow
  2028 ;;     _readIR
  2029 ;;       _adc_read_channel
  2030 ;;         _adc_read
  2031 ;;           ___awdiv
  2032 ;;             ___wmul (ARG)
  2033 ;;         _convert (ARG)
  2034 ;;           ___wmul
  2035 ;;           ___awdiv
  2036 ;;             ___wmul (ARG)
  2037 ;;           _adc_read (ARG)
  2038 ;;             ___awdiv
  2039 ;;               ___wmul (ARG)
  2040 ;;       _convert
  2041 ;;         ___wmul
  2042 ;;         ___awdiv
  2043 ;;           ___wmul (ARG)
  2044 ;;         _adc_read (ARG)
  2045 ;;           ___awdiv
  2046 ;;             ___wmul (ARG)
  2047 ;;     _drive
  2048 ;;       _ser_putch
  2049 ;;     _waitFor
  2050 ;;       _ser_putch
  2051 ;;   _frontWallCorrect
  2052 ;;     _readIR
  2053 ;;       _adc_read_channel
  2054 ;;         _adc_read
  2055 ;;           ___awdiv
  2056 ;;             ___wmul (ARG)
  2057 ;;         _convert (ARG)
  2058 ;;           ___wmul
  2059 ;;           ___awdiv
  2060 ;;             ___wmul (ARG)
  2061 ;;           _adc_read (ARG)
  2062 ;;             ___awdiv
  2063 ;;               ___wmul (ARG)
  2064 ;;       _convert
  2065 ;;         ___wmul
  2066 ;;         ___awdiv
  2067 ;;           ___wmul (ARG)
  2068 ;;         _adc_read (ARG)
  2069 ;;           ___awdiv
  2070 ;;             ___wmul (ARG)
  2071 ;;     _drive
  2072 ;;       _ser_putch
  2073 ;;     _clearSuccessfulDrive
  2074 ;;   _goToNextCell
  2075 ;;     _getSomethingInTheWay
  2076 ;;     _goLeft
  2077 ;;       _lcd_set_cursor
  2078 ;;         _lcd_write_control
  2079 ;;       _lcd_write_data
  2080 ;;       _turnLeft90
  2081 ;;         _drive
  2082 ;;           _ser_putch
  2083 ;;         _getCurrentX
  2084 ;;         _getCurrentY
  2085 ;;         _waitFor
  2086 ;;           _ser_putch
  2087 ;;       _updateOrientation
  2088 ;;       _driveForDistance
  2089 ;;         _drive
  2090 ;;           _ser_putch
  2091 ;;         _ser_putch
  2092 ;;         _ser_getch
  2093 ;;           _ser_isrx
  2094 ;;         _goReverse
  2095 ;;           _lcd_set_cursor
  2096 ;;             _lcd_write_control
  2097 ;;           _lcd_write_data
  2098 ;;           _drive
  2099 ;;             _ser_putch
  2100 ;;           _waitFor
  2101 ;;             _ser_putch
  2102 ;;         _clearSuccessfulDrive
  2103 ;;         _turnRight90
  2104 ;;           _drive
  2105 ;;             _ser_putch
  2106 ;;           _waitFor
  2107 ;;             _ser_putch
  2108 ;;         _updateOrientation
  2109 ;;         _turnLeft90
  2110 ;;           _drive
  2111 ;;             _ser_putch
  2112 ;;           _getCurrentX
  2113 ;;           _getCurrentY
  2114 ;;           _waitFor
  2115 ;;             _ser_putch
  2116 ;;         _getCurrentY
  2117 ;;         _getCurrentX
  2118 ;;         _findFinalDestination
  2119 ;;           _lcd_set_cursor
  2120 ;;             _lcd_write_control
  2121 ;;           _lcd_write_1_digit_bcd
  2122 ;;             _lcd_write_data
  2123 ;;           _getCurrentY (ARG)
  2124 ;;           _getCurrentX (ARG)
  2125 ;;         _setVirtualLocation
  2126 ;;           _getCurrentY (ARG)
  2127 ;;           _getCurrentX (ARG)
  2128 ;;     _goForward
  2129 ;;       _lcd_set_cursor
  2130 ;;         _lcd_write_control
  2131 ;;       _lcd_write_data
  2132 ;;       _getCurrentX
  2133 ;;       _getCurrentY
  2134 ;;       _driveForDistance
  2135 ;;         _drive
  2136 ;;           _ser_putch
  2137 ;;         _ser_putch
  2138 ;;         _ser_getch
  2139 ;;           _ser_isrx
  2140 ;;         _goReverse
  2141 ;;           _lcd_set_cursor
  2142 ;;             _lcd_write_control
  2143 ;;           _lcd_write_data
  2144 ;;           _drive
  2145 ;;             _ser_putch
  2146 ;;           _waitFor
  2147 ;;             _ser_putch
  2148 ;;         _clearSuccessfulDrive
  2149 ;;         _turnRight90
  2150 ;;           _drive
  2151 ;;             _ser_putch
  2152 ;;           _waitFor
  2153 ;;             _ser_putch
  2154 ;;         _updateOrientation
  2155 ;;         _turnLeft90
  2156 ;;           _drive
  2157 ;;             _ser_putch
  2158 ;;           _getCurrentX
  2159 ;;           _getCurrentY
  2160 ;;           _waitFor
  2161 ;;             _ser_putch
  2162 ;;         _getCurrentY
  2163 ;;         _getCurrentX
  2164 ;;         _findFinalDestination
  2165 ;;           _lcd_set_cursor
  2166 ;;             _lcd_write_control
  2167 ;;           _lcd_write_1_digit_bcd
  2168 ;;             _lcd_write_data
  2169 ;;           _getCurrentY (ARG)
  2170 ;;           _getCurrentX (ARG)
  2171 ;;         _setVirtualLocation
  2172 ;;           _getCurrentY (ARG)
  2173 ;;           _getCurrentX (ARG)
  2174 ;;     _goRight
  2175 ;;       _lcd_set_cursor
  2176 ;;         _lcd_write_control
  2177 ;;       _lcd_write_data
  2178 ;;       _turnRight90
  2179 ;;         _drive
  2180 ;;           _ser_putch
  2181 ;;         _waitFor
  2182 ;;           _ser_putch
  2183 ;;       _updateOrientation
  2184 ;;       _driveForDistance
  2185 ;;         _drive
  2186 ;;           _ser_putch
  2187 ;;         _ser_putch
  2188 ;;         _ser_getch
  2189 ;;           _ser_isrx
  2190 ;;         _goReverse
  2191 ;;           _lcd_set_cursor
  2192 ;;             _lcd_write_control
  2193 ;;           _lcd_write_data
  2194 ;;           _drive
  2195 ;;             _ser_putch
  2196 ;;           _waitFor
  2197 ;;             _ser_putch
  2198 ;;         _clearSuccessfulDrive
  2199 ;;         _turnRight90
  2200 ;;           _drive
  2201 ;;             _ser_putch
  2202 ;;           _waitFor
  2203 ;;             _ser_putch
  2204 ;;         _updateOrientation
  2205 ;;         _turnLeft90
  2206 ;;           _drive
  2207 ;;             _ser_putch
  2208 ;;           _getCurrentX
  2209 ;;           _getCurrentY
  2210 ;;           _waitFor
  2211 ;;             _ser_putch
  2212 ;;         _getCurrentY
  2213 ;;         _getCurrentX
  2214 ;;         _findFinalDestination
  2215 ;;           _lcd_set_cursor
  2216 ;;             _lcd_write_control
  2217 ;;           _lcd_write_1_digit_bcd
  2218 ;;             _lcd_write_data
  2219 ;;           _getCurrentY (ARG)
  2220 ;;           _getCurrentX (ARG)
  2221 ;;         _setVirtualLocation
  2222 ;;           _getCurrentY (ARG)
  2223 ;;           _getCurrentX (ARG)
  2224 ;;     _goBackward
  2225 ;;       _lcd_set_cursor
  2226 ;;         _lcd_write_control
  2227 ;;       _lcd_write_data
  2228 ;;       _turnAround
  2229 ;;         _drive
  2230 ;;           _ser_putch
  2231 ;;         _waitFor
  2232 ;;           _ser_putch
  2233 ;;       _updateOrientation
  2234 ;;       _driveForDistance
  2235 ;;         _drive
  2236 ;;           _ser_putch
  2237 ;;         _ser_putch
  2238 ;;         _ser_getch
  2239 ;;           _ser_isrx
  2240 ;;         _goReverse
  2241 ;;           _lcd_set_cursor
  2242 ;;             _lcd_write_control
  2243 ;;           _lcd_write_data
  2244 ;;           _drive
  2245 ;;             _ser_putch
  2246 ;;           _waitFor
  2247 ;;             _ser_putch
  2248 ;;         _clearSuccessfulDrive
  2249 ;;         _turnRight90
  2250 ;;           _drive
  2251 ;;             _ser_putch
  2252 ;;           _waitFor
  2253 ;;             _ser_putch
  2254 ;;         _updateOrientation
  2255 ;;         _turnLeft90
  2256 ;;           _drive
  2257 ;;             _ser_putch
  2258 ;;           _getCurrentX
  2259 ;;           _getCurrentY
  2260 ;;           _waitFor
  2261 ;;             _ser_putch
  2262 ;;         _getCurrentY
  2263 ;;         _getCurrentX
  2264 ;;         _findFinalDestination
  2265 ;;           _lcd_set_cursor
  2266 ;;             _lcd_write_control
  2267 ;;           _lcd_write_1_digit_bcd
  2268 ;;             _lcd_write_data
  2269 ;;           _getCurrentY (ARG)
  2270 ;;           _getCurrentX (ARG)
  2271 ;;         _setVirtualLocation
  2272 ;;           _getCurrentY (ARG)
  2273 ;;           _getCurrentX (ARG)
  2274 ;;   _goRight
  2275 ;;     _lcd_set_cursor
  2276 ;;       _lcd_write_control
  2277 ;;     _lcd_write_data
  2278 ;;     _turnRight90
  2279 ;;       _drive
  2280 ;;         _ser_putch
  2281 ;;       _waitFor
  2282 ;;         _ser_putch
  2283 ;;     _updateOrientation
  2284 ;;     _driveForDistance
  2285 ;;       _drive
  2286 ;;         _ser_putch
  2287 ;;       _ser_putch
  2288 ;;       _ser_getch
  2289 ;;         _ser_isrx
  2290 ;;       _goReverse
  2291 ;;         _lcd_set_cursor
  2292 ;;           _lcd_write_control
  2293 ;;         _lcd_write_data
  2294 ;;         _drive
  2295 ;;           _ser_putch
  2296 ;;         _waitFor
  2297 ;;           _ser_putch
  2298 ;;       _clearSuccessfulDrive
  2299 ;;       _turnRight90
  2300 ;;         _drive
  2301 ;;           _ser_putch
  2302 ;;         _waitFor
  2303 ;;           _ser_putch
  2304 ;;       _updateOrientation
  2305 ;;       _turnLeft90
  2306 ;;         _drive
  2307 ;;           _ser_putch
  2308 ;;         _getCurrentX
  2309 ;;         _getCurrentY
  2310 ;;         _waitFor
  2311 ;;           _ser_putch
  2312 ;;       _getCurrentY
  2313 ;;       _getCurrentX
  2314 ;;       _findFinalDestination
  2315 ;;         _lcd_set_cursor
  2316 ;;           _lcd_write_control
  2317 ;;         _lcd_write_1_digit_bcd
  2318 ;;           _lcd_write_data
  2319 ;;         _getCurrentY (ARG)
  2320 ;;         _getCurrentX (ARG)
  2321 ;;       _setVirtualLocation
  2322 ;;         _getCurrentY (ARG)
  2323 ;;         _getCurrentX (ARG)
  2324 ;;   _getOrientation
  2325 ;;   _goForward
  2326 ;;     _lcd_set_cursor
  2327 ;;       _lcd_write_control
  2328 ;;     _lcd_write_data
  2329 ;;     _getCurrentX
  2330 ;;     _getCurrentY
  2331 ;;     _driveForDistance
  2332 ;;       _drive
  2333 ;;         _ser_putch
  2334 ;;       _ser_putch
  2335 ;;       _ser_getch
  2336 ;;         _ser_isrx
  2337 ;;       _goReverse
  2338 ;;         _lcd_set_cursor
  2339 ;;           _lcd_write_control
  2340 ;;         _lcd_write_data
  2341 ;;         _drive
  2342 ;;           _ser_putch
  2343 ;;         _waitFor
  2344 ;;           _ser_putch
  2345 ;;       _clearSuccessfulDrive
  2346 ;;       _turnRight90
  2347 ;;         _drive
  2348 ;;           _ser_putch
  2349 ;;         _waitFor
  2350 ;;           _ser_putch
  2351 ;;       _updateOrientation
  2352 ;;       _turnLeft90
  2353 ;;         _drive
  2354 ;;           _ser_putch
  2355 ;;         _getCurrentX
  2356 ;;         _getCurrentY
  2357 ;;         _waitFor
  2358 ;;           _ser_putch
  2359 ;;       _getCurrentY
  2360 ;;       _getCurrentX
  2361 ;;       _findFinalDestination
  2362 ;;         _lcd_set_cursor
  2363 ;;           _lcd_write_control
  2364 ;;         _lcd_write_1_digit_bcd
  2365 ;;           _lcd_write_data
  2366 ;;         _getCurrentY (ARG)
  2367 ;;         _getCurrentX (ARG)
  2368 ;;       _setVirtualLocation
  2369 ;;         _getCurrentY (ARG)
  2370 ;;         _getCurrentX (ARG)
  2371 ;;   _goLeft
  2372 ;;     _lcd_set_cursor
  2373 ;;       _lcd_write_control
  2374 ;;     _lcd_write_data
  2375 ;;     _turnLeft90
  2376 ;;       _drive
  2377 ;;         _ser_putch
  2378 ;;       _getCurrentX
  2379 ;;       _getCurrentY
  2380 ;;       _waitFor
  2381 ;;         _ser_putch
  2382 ;;     _updateOrientation
  2383 ;;     _driveForDistance
  2384 ;;       _drive
  2385 ;;         _ser_putch
  2386 ;;       _ser_putch
  2387 ;;       _ser_getch
  2388 ;;         _ser_isrx
  2389 ;;       _goReverse
  2390 ;;         _lcd_set_cursor
  2391 ;;           _lcd_write_control
  2392 ;;         _lcd_write_data
  2393 ;;         _drive
  2394 ;;           _ser_putch
  2395 ;;         _waitFor
  2396 ;;           _ser_putch
  2397 ;;       _clearSuccessfulDrive
  2398 ;;       _turnRight90
  2399 ;;         _drive
  2400 ;;           _ser_putch
  2401 ;;         _waitFor
  2402 ;;           _ser_putch
  2403 ;;       _updateOrientation
  2404 ;;       _turnLeft90
  2405 ;;         _drive
  2406 ;;           _ser_putch
  2407 ;;         _getCurrentX
  2408 ;;         _getCurrentY
  2409 ;;         _waitFor
  2410 ;;           _ser_putch
  2411 ;;       _getCurrentY
  2412 ;;       _getCurrentX
  2413 ;;       _findFinalDestination
  2414 ;;         _lcd_set_cursor
  2415 ;;           _lcd_write_control
  2416 ;;         _lcd_write_1_digit_bcd
  2417 ;;           _lcd_write_data
  2418 ;;         _getCurrentY (ARG)
  2419 ;;         _getCurrentX (ARG)
  2420 ;;       _setVirtualLocation
  2421 ;;         _getCurrentY (ARG)
  2422 ;;         _getCurrentX (ARG)
  2423 ;;   _getSuccessfulDrive
  2424 ;;   _updateMapData
  2425 ;;     _addNewData
  2426 ;;       _writeEEPROM
  2427 ;;         _initEEPROMMode
  2428 ;;         _writeSPIByte
  2429 ;;     _getOrientation (ARG)
  2430 ;;   _updateLocation
  2431 ;;     _lcd_set_cursor
  2432 ;;       _lcd_write_control
  2433 ;;     _lcd_write_data
  2434 ;;     _getOrientation
  2435 ;;     _lcd_write_1_digit_bcd
  2436 ;;       _lcd_write_data
  2437 ;;   _updateNode
  2438 ;;   _checkIfHome
  2439 ;;     _drive
  2440 ;;       _ser_putch
  2441 ;;     _play_iCreate_song
  2442 ;;       _ser_putch
  2443 ;;
  2444 ;; _isr1 (ROOT)
  2445 ;;
  2446                           
  2447 ;; Address spaces:
  2448                           
  2449 ;;Name               Size   Autos  Total    Cost      Usage
  2450 ;;BANK3               60      0      51       9       84.4%
  2451 ;;BITBANK3            60      0       0       8        0.0%
  2452 ;;SFR3                 0      0       0       4        0.0%
  2453 ;;BITSFR3              0      0       0       4        0.0%
  2454 ;;BANK2               60      0       0      11        0.0%
  2455 ;;BITBANK2            60      0       0      10        0.0%
  2456 ;;SFR2                 0      0       0       5        0.0%
  2457 ;;BITSFR2              0      0       0       5        0.0%
  2458 ;;SFR1                 0      0       0       2        0.0%
  2459 ;;BITSFR1              0      0       0       2        0.0%
  2460 ;;BANK1               50      0      3F       7       78.8%
  2461 ;;BITBANK1            50      0       0       6        0.0%
  2462 ;;CODE                 0      0       0       0        0.0%
  2463 ;;DATA                 0      0      F0      12        0.0%
  2464 ;;ABS                  0      0      EA       3        0.0%
  2465 ;;NULL                 0      0       0       0        0.0%
  2466 ;;STACK                0      0       6       2        0.0%
  2467 ;;BANK0               50     2B      4C       5       95.0%
  2468 ;;BITBANK0            50      0       0       4        0.0%
  2469 ;;SFR0                 0      0       0       1        0.0%
  2470 ;;BITSFR0              0      0       0       1        0.0%
  2471 ;;COMMON               E      A       E       1      100.0%
  2472 ;;BITCOMMON            E      0       2       0       14.3%
  2473 ;;EEDATA             100      0       0       0        0.0%
  2474                           
  2475                           	global	_main
  2476                           psect	maintext,global,class=CODE,delta=2
  2477                           global __pmaintext
  2478  0015                     __pmaintext:
  2479                           
  2480 ;; *************** function _main *****************
  2481 ;; Defined at:
  2482 ;;		line 367 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  victimIndica    1   42[BANK0 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 17F/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       0       0       0       0
  2497 ;;      Locals:         0       1       0       0       0
  2498 ;;      Temps:          0       2       0       0       0
  2499 ;;      Totals:         0       3       0       0       0
  2500 ;;Total ram usage:        3 bytes
  2501 ;; Hardware stack levels required when called:    7
  2502 ;; This function calls:
  2503 ;;		_init
  2504 ;;		_drive
  2505 ;;		_lcd_set_cursor
  2506 ;;		_lcd_write_string
  2507 ;;		_findWalls
  2508 ;;		_turnAround
  2509 ;;		_turnLeft90
  2510 ;;		_turnRight90
  2511 ;;		_lcd_write_data
  2512 ;;		_play_iCreate_song
  2513 ;;		_writeEEPROMTestData
  2514 ;;		_EEPROMToSerial
  2515 ;;		_checkForFinalDestination
  2516 ;;		_lookForVictim
  2517 ;;		_rotateIR
  2518 ;;		_wallFollow
  2519 ;;		_frontWallCorrect
  2520 ;;		_goToNextCell
  2521 ;;		_goRight
  2522 ;;		_getOrientation
  2523 ;;		_goForward
  2524 ;;		_goLeft
  2525 ;;		_getSuccessfulDrive
  2526 ;;		_updateMapData
  2527 ;;		_updateLocation
  2528 ;;		_updateNode
  2529 ;;		_checkIfHome
  2530 ;; This function is called by:
  2531 ;;		Startup code after reset
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           psect	maintext
  2535                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  2536                           	line	367
  2537                           	global	__size_of_main
  2538  0294                     	__size_of_main	equ	__end_of_main-_main
  2539                           	
  2540  0015                     _main:	
  2541                           	opt	stack 1
  2542                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2543                           	line	368
  2544                           	
  2545  0015                     l11488:	
  2546                           ;main.c: 368: init();
  2547  0015  160A  118A  254A   	fcall	_init
              120A  118A         
  2548                           	line	369
  2549                           ;main.c: 369: drive(0, 0, 0, 0);
  2550  001A  1283               	bcf	status, 5	;RP0=0, select bank0
  2551  001B  1303               	bcf	status, 6	;RP1=0, select bank0
  2552  001C  01A2               	clrf	(?_drive)
  2553  001D  01A3               	clrf	0+(?_drive)+01h
  2554  001E  01A4               	clrf	0+(?_drive)+02h
  2555  001F  3000               	movlw	(0)
  2556  0020  160A  118A  24DA   	fcall	_drive
              120A  118A         
  2557                           	line	371
  2558                           	
  2559  0025                     l11490:	
  2560                           ;main.c: 371: lcd_set_cursor(0x00);
  2561  0025  3000               	movlw	(0)
  2562  0026  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  2563                           	line	372
  2564                           	
  2565  002B                     l11492:	
  2566                           ;main.c: 372: lcd_write_string("(-,-) - -- --- -");
  2567  002B  3046               	movlw	((STR_3-__stringbase))&0ffh
  2568  002C  160A  118A  2397   	fcall	_lcd_write_string
              120A  118A         
  2569                           	line	373
  2570                           ;main.c: 373: lcd_set_cursor(0x40);
  2571  0031  3040               	movlw	(040h)
  2572  0032  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  2573                           	line	374
  2574                           	
  2575  0037                     l11494:	
  2576                           ;main.c: 374: lcd_write_string("- - - (3,1) GREG");
  2577  0037  3057               	movlw	((STR_4-__stringbase))&0ffh
  2578  0038  160A  118A  2397   	fcall	_lcd_write_string
              120A  118A         
  2579                           	line	375
  2580                           	
  2581  003D                     l11496:	
  2582                           ;main.c: 375: char victimIndicator = 0;
  2583  003D  1283               	bcf	status, 5	;RP0=0, select bank0
  2584  003E  1303               	bcf	status, 6	;RP1=0, select bank0
  2585  003F  01CA               	clrf	(main@victimIndicator)
  2586                           	line	376
  2587                           ;main.c: 376: while(!home)
  2588  0040  2AA1               	goto	l11666
  2589                           	
  2590  0041                     l6812:	
  2591                           	line	379
  2592                           	
  2593  0041                     l11498:	
  2594                           ;main.c: 377: {
  2595                           ;main.c: 379: if(start.pressed && ready == 0)
  2596  0041  1283               	bcf	status, 5	;RP0=0, select bank0
  2597  0042  1303               	bcf	status, 6	;RP1=0, select bank0
  2598  0043  084E               	movf	(_start),w
  2599  0044  1D03               	skipz
  2600  0045  2847               	goto	u4990
  2601  0046  2894               	goto	l11526
  2602  0047                     u4990:
  2603                           	
  2604  0047                     l11500:	
  2605  0047  18F1               	btfsc	(_ready/8),(_ready)&7
  2606  0048  284A               	goto	u5001
  2607  0049  284B               	goto	u5000
  2608  004A                     u5001:
  2609  004A  2894               	goto	l11526
  2610  004B                     u5000:
  2611                           	line	381
  2612                           	
  2613  004B                     l11502:	
  2614                           ;main.c: 380: {
  2615                           ;main.c: 381: findWalls();
  2616  004B  120A  158A  24F0   	fcall	_findWalls
              120A  118A         
  2617                           	line	382
  2618                           	
  2619  0050                     l11504:	
  2620                           ;main.c: 382: if(leftWall && rightWall && frontWall)
  2621  0050  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2622  0051  2853               	goto	u5011
  2623  0052  2854               	goto	u5010
  2624  0053                     u5011:
  2625  0053  2862               	goto	l6814
  2626  0054                     u5010:
  2627                           	
  2628  0054                     l11506:	
  2629  0054  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  2630  0055  2857               	goto	u5021
  2631  0056  2858               	goto	u5020
  2632  0057                     u5021:
  2633  0057  2862               	goto	l6814
  2634  0058                     u5020:
  2635                           	
  2636  0058                     l11508:	
  2637  0058  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2638  0059  285B               	goto	u5031
  2639  005A  285C               	goto	u5030
  2640  005B                     u5031:
  2641  005B  2862               	goto	l6814
  2642  005C                     u5030:
  2643                           	line	383
  2644                           	
  2645  005C                     l11510:	
  2646                           ;main.c: 383: turnAround();
  2647  005C  120A  158A  20A4   	fcall	_turnAround
              120A  118A         
  2648  0061  2880               	goto	l11520
  2649                           	line	384
  2650                           	
  2651  0062                     l6814:	
  2652                           ;main.c: 384: else if (rightWall && frontWall)
  2653  0062  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  2654  0063  2865               	goto	u5041
  2655  0064  2866               	goto	u5040
  2656  0065                     u5041:
  2657  0065  2870               	goto	l6816
  2658  0066                     u5040:
  2659                           	
  2660  0066                     l11512:	
  2661  0066  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2662  0067  2869               	goto	u5051
  2663  0068  286A               	goto	u5050
  2664  0069                     u5051:
  2665  0069  2870               	goto	l6816
  2666  006A                     u5050:
  2667                           	line	385
  2668                           	
  2669  006A                     l11514:	
  2670                           ;main.c: 385: turnLeft90();
  2671  006A  120A  158A  21D0   	fcall	_turnLeft90
              120A  118A         
  2672  006F  2880               	goto	l11520
  2673                           	line	386
  2674                           	
  2675  0070                     l6816:	
  2676                           ;main.c: 386: else if(leftWall && frontWall)
  2677  0070  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2678  0071  2873               	goto	u5061
  2679  0072  2874               	goto	u5060
  2680  0073                     u5061:
  2681  0073  2880               	goto	l11520
  2682  0074                     u5060:
  2683                           	
  2684  0074                     l11516:	
  2685  0074  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2686  0075  2877               	goto	u5071
  2687  0076  2878               	goto	u5070
  2688  0077                     u5071:
  2689  0077  2880               	goto	l11520
  2690  0078                     u5070:
  2691                           	line	387
  2692                           	
  2693  0078                     l11518:	
  2694                           ;main.c: 387: turnRight90();
  2695  0078  160A  118A  2675   	fcall	_turnRight90
              120A  118A         
  2696  007D  2880               	goto	l11520
  2697                           	
  2698  007E                     l6818:	
  2699  007E  2880               	goto	l11520
  2700                           	line	388
  2701                           	
  2702  007F                     l6817:	
  2703  007F  2880               	goto	l11520
  2704                           	
  2705  0080                     l6815:	
  2706                           	
  2707  0080                     l11520:	
  2708                           ;main.c: 388: ready = 1;
  2709  0080  14F1               	bsf	(_ready/8),(_ready)&7
  2710                           	line	389
  2711                           	
  2712  0081                     l11522:	
  2713                           ;main.c: 389: lcd_set_cursor(0x06);
  2714  0081  3006               	movlw	(06h)
  2715  0082  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  2716                           	line	390
  2717                           	
  2718  0087                     l11524:	
  2719                           ;main.c: 390: lcd_write_data('E');
  2720  0087  3045               	movlw	(045h)
  2721  0088  160A  118A  224C   	fcall	_lcd_write_data
              120A  118A         
  2722                           	line	391
  2723                           ;main.c: 391: play_iCreate_song(1);
  2724  008D  3001               	movlw	(01h)
  2725  008E  160A  118A  223A   	fcall	_play_iCreate_song
              120A  118A         
  2726  0093  2894               	goto	l11526
  2727                           	line	392
  2728                           	
  2729  0094                     l6813:	
  2730                           	line	396
  2731                           	
  2732  0094                     l11526:	
  2733                           ;main.c: 392: }
  2734                           ;main.c: 396: if(eepromSerial.pressed && ready == 0)
  2735  0094  1283               	bcf	status, 5	;RP0=0, select bank0
  2736  0095  1303               	bcf	status, 6	;RP1=0, select bank0
  2737  0096  084B               	movf	(_eepromSerial),w
  2738  0097  1D03               	skipz
  2739  0098  289A               	goto	u5080
  2740  0099  28CE               	goto	l11544
  2741  009A                     u5080:
  2742                           	
  2743  009A                     l11528:	
  2744  009A  18F1               	btfsc	(_ready/8),(_ready)&7
  2745  009B  289D               	goto	u5091
  2746  009C  289E               	goto	u5090
  2747  009D                     u5091:
  2748  009D  28CE               	goto	l11544
  2749  009E                     u5090:
  2750                           	line	398
  2751                           	
  2752  009E                     l11530:	
  2753                           ;main.c: 397: {
  2754                           ;main.c: 398: eepromSerial.pressed = 0;
  2755  009E  01CB               	clrf	(_eepromSerial)
  2756                           	line	399
  2757                           	
  2758  009F                     l11532:	
  2759                           ;main.c: 399: lcd_set_cursor(0x00);
  2760  009F  3000               	movlw	(0)
  2761  00A0  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  2762                           	line	400
  2763                           	
  2764  00A5                     l11534:	
  2765                           ;main.c: 400: lcd_write_string("EEPROM Serial         ");
  2766  00A5  3018               	movlw	((STR_5-__stringbase))&0ffh
  2767  00A6  160A  118A  2397   	fcall	_lcd_write_string
              120A  118A         
  2768                           	line	401
  2769                           	
  2770  00AB                     l11536:	
  2771                           ;main.c: 401: lcd_set_cursor(0x40);
  2772  00AB  3040               	movlw	(040h)
  2773  00AC  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  2774                           	line	402
  2775                           ;main.c: 402: lcd_write_string("Please Wait...        ");
  2776  00B1  302F               	movlw	((STR_6-__stringbase))&0ffh
  2777  00B2  160A  118A  2397   	fcall	_lcd_write_string
              120A  118A         
  2778                           	line	403
  2779                           	
  2780  00B7                     l11538:	
  2781                           ;main.c: 403: writeEEPROMTestData();
  2782  00B7  120A  158A  2613   	fcall	_writeEEPROMTestData
              120A  118A         
  2783                           	line	404
  2784                           	
  2785  00BC                     l11540:	
  2786                           ;main.c: 404: EEPROMToSerial();
  2787  00BC  120A  158A  23E7   	fcall	_EEPROMToSerial
              120A  118A         
  2788                           	line	405
  2789                           ;main.c: 405: lcd_set_cursor(0x40);
  2790  00C1  3040               	movlw	(040h)
  2791  00C2  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  2792                           	line	406
  2793                           	
  2794  00C7                     l11542:	
  2795                           ;main.c: 406: lcd_write_string("Complete              ");
  2796  00C7  3001               	movlw	((STR_7-__stringbase))&0ffh
  2797  00C8  160A  118A  2397   	fcall	_lcd_write_string
              120A  118A         
  2798  00CD  28CE               	goto	l11544
  2799                           	line	407
  2800                           	
  2801  00CE                     l6819:	
  2802                           	line	409
  2803                           	
  2804  00CE                     l11544:	
  2805                           ;main.c: 407: }
  2806                           ;main.c: 409: if(start.pressed )
  2807  00CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2808  00CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2809  00D0  084E               	movf	(_start),w
  2810  00D1  1D03               	skipz
  2811  00D2  28D4               	goto	u5100
  2812  00D3  2AA1               	goto	l11666
  2813  00D4                     u5100:
  2814                           	line	411
  2815                           	
  2816  00D4                     l11546:	
  2817                           ;main.c: 410: {
  2818                           ;main.c: 411: ready = 1;
  2819  00D4  14F1               	bsf	(_ready/8),(_ready)&7
  2820                           	line	412
  2821                           	
  2822  00D5                     l11548:	
  2823                           ;main.c: 412: checkForFinalDestination();
  2824  00D5  160A  118A  25BF   	fcall	_checkForFinalDestination
              120A  118A         
  2825                           	line	414
  2826                           ;main.c: 414: lookForVictim();
  2827  00DA  120A  158A  2466   	fcall	_lookForVictim
              120A  118A         
  2828                           	line	416
  2829                           	
  2830  00DF                     l11550:	
  2831                           ;main.c: 416: findWalls();
  2832  00DF  120A  158A  24F0   	fcall	_findWalls
              120A  118A         
  2833                           	line	417
  2834                           	
  2835  00E4                     l11552:	
  2836                           ;main.c: 417: play_iCreate_song(5);
  2837  00E4  3005               	movlw	(05h)
  2838  00E5  160A  118A  223A   	fcall	_play_iCreate_song
              120A  118A         
  2839                           	line	418
  2840                           	
  2841  00EA                     l11554:	
  2842                           ;main.c: 418: if(leftWall)
  2843  00EA  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2844  00EB  28ED               	goto	u5111
  2845  00EC  28EE               	goto	u5110
  2846  00ED                     u5111:
  2847  00ED  290C               	goto	l11562
  2848  00EE                     u5110:
  2849                           	line	420
  2850                           	
  2851  00EE                     l11556:	
  2852                           ;main.c: 419: {
  2853                           ;main.c: 420: rotateIR(24,0b00001101);
  2854  00EE  300D               	movlw	(0Dh)
  2855  00EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2856  00F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2857  00F1  00C8               	movwf	(??_main+0)+0
  2858  00F2  0848               	movf	(??_main+0)+0,w
  2859  00F3  00A0               	movwf	(?_rotateIR)
  2860  00F4  3018               	movlw	(018h)
  2861  00F5  160A  118A  2584   	fcall	_rotateIR
              120A  118A         
  2862                           	line	421
  2863                           	
  2864  00FA                     l11558:	
  2865                           ;main.c: 421: wallFollow();
  2866  00FA  120A  118A  2748   	fcall	_wallFollow
              120A  118A         
  2867                           	line	422
  2868                           	
  2869  00FF                     l11560:	
  2870                           ;main.c: 422: rotateIR(24,0b00001111);
  2871  00FF  300F               	movlw	(0Fh)
  2872  0100  1283               	bcf	status, 5	;RP0=0, select bank0
  2873  0101  1303               	bcf	status, 6	;RP1=0, select bank0
  2874  0102  00C8               	movwf	(??_main+0)+0
  2875  0103  0848               	movf	(??_main+0)+0,w
  2876  0104  00A0               	movwf	(?_rotateIR)
  2877  0105  3018               	movlw	(018h)
  2878  0106  160A  118A  2584   	fcall	_rotateIR
              120A  118A         
  2879  010B  290C               	goto	l11562
  2880                           	line	423
  2881                           	
  2882  010C                     l6821:	
  2883                           	line	424
  2884                           	
  2885  010C                     l11562:	
  2886                           ;main.c: 423: }
  2887                           ;main.c: 424: play_iCreate_song(5);
  2888  010C  3005               	movlw	(05h)
  2889  010D  160A  118A  223A   	fcall	_play_iCreate_song
              120A  118A         
  2890                           	line	425
  2891                           	
  2892  0112                     l11564:	
  2893                           ;main.c: 425: if(frontWall)
  2894  0112  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2895  0113  2915               	goto	u5121
  2896  0114  2916               	goto	u5120
  2897  0115                     u5121:
  2898  0115  291C               	goto	l11568
  2899  0116                     u5120:
  2900                           	line	426
  2901                           	
  2902  0116                     l11566:	
  2903                           ;main.c: 426: frontWallCorrect();
  2904  0116  120A  158A  2753   	fcall	_frontWallCorrect
              120A  118A         
  2905  011B  291C               	goto	l11568
  2906                           	
  2907  011C                     l6822:	
  2908                           	line	427
  2909                           	
  2910  011C                     l11568:	
  2911                           ;main.c: 427: play_iCreate_song(5);
  2912  011C  3005               	movlw	(05h)
  2913  011D  160A  118A  223A   	fcall	_play_iCreate_song
              120A  118A         
  2914                           	line	428
  2915                           ;main.c: 428: switch(node)
  2916  0122  2A36               	goto	l11642
  2917                           	line	430
  2918                           ;main.c: 429: {
  2919                           ;main.c: 430: case 0:
  2920                           	
  2921  0123                     l6824:	
  2922                           	line	431
  2923                           	
  2924  0123                     l11570:	
  2925                           ;main.c: 431: goToNextCell();
  2926  0123  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  2927                           	line	432
  2928                           ;main.c: 432: break;
  2929  0128  2A4F               	goto	l11644
  2930                           	line	433
  2931                           ;main.c: 433: case 1:
  2932                           	
  2933  0129                     l6826:	
  2934                           	line	434
  2935                           ;main.c: 434: if (goingHome)
  2936  0129  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  2937  012A  292C               	goto	u5131
  2938  012B  292D               	goto	u5130
  2939  012C                     u5131:
  2940  012C  2962               	goto	l11586
  2941  012D                     u5130:
  2942                           	line	436
  2943                           	
  2944  012D                     l11572:	
  2945                           ;main.c: 435: {
  2946                           ;main.c: 436: if (victimZone == 1)
  2947  012D  0861               	movf	(_victimZone),w	;volatile
  2948  012E  3A01               	xorlw	01h
  2949  012F  1D03               	skipz
  2950  0130  2932               	goto	u5141
  2951  0131  2933               	goto	u5140
  2952  0132                     u5141:
  2953  0132  2939               	goto	l11576
  2954  0133                     u5140:
  2955                           	line	437
  2956                           	
  2957  0133                     l11574:	
  2958                           ;main.c: 437: goRight();
  2959  0133  160A  118A  23E2   	fcall	_goRight
              120A  118A         
  2960  0138  2A4F               	goto	l11644
  2961                           	line	438
  2962                           	
  2963  0139                     l6828:	
  2964                           	
  2965  0139                     l11576:	
  2966                           ;main.c: 438: else if (getOrientation() == EAST)
  2967  0139  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  2968  013E  3A02               	xorlw	02h
  2969  013F  1D03               	skipz
  2970  0140  2942               	goto	u5151
  2971  0141  2943               	goto	u5150
  2972  0142                     u5151:
  2973  0142  2949               	goto	l11580
  2974  0143                     u5150:
  2975                           	line	439
  2976                           	
  2977  0143                     l11578:	
  2978                           ;main.c: 439: goForward();
  2979  0143  160A  118A  25FA   	fcall	_goForward
              120A  118A         
  2980  0148  2A4F               	goto	l11644
  2981                           	line	440
  2982                           	
  2983  0149                     l6830:	
  2984                           	
  2985  0149                     l11580:	
  2986                           ;main.c: 440: else if (getOrientation() == SOUTH)
  2987  0149  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  2988  014E  3A01               	xorlw	01h
  2989  014F  1D03               	skipz
  2990  0150  2952               	goto	u5161
  2991  0151  2953               	goto	u5160
  2992  0152                     u5161:
  2993  0152  2959               	goto	l11584
  2994  0153                     u5160:
  2995                           	line	441
  2996                           	
  2997  0153                     l11582:	
  2998                           ;main.c: 441: goRight();
  2999  0153  160A  118A  23E2   	fcall	_goRight
              120A  118A         
  3000  0158  2A4F               	goto	l11644
  3001                           	line	442
  3002                           	
  3003  0159                     l6832:	
  3004                           	line	443
  3005                           	
  3006  0159                     l11584:	
  3007                           ;main.c: 442: else
  3008                           ;main.c: 443: goToNextCell();
  3009  0159  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3010  015E  2A4F               	goto	l11644
  3011                           	
  3012  015F                     l6833:	
  3013  015F  2A4F               	goto	l11644
  3014                           	
  3015  0160                     l6831:	
  3016  0160  2A4F               	goto	l11644
  3017                           	
  3018  0161                     l6829:	
  3019                           	line	444
  3020                           ;main.c: 444: }
  3021  0161  2A4F               	goto	l11644
  3022                           	line	445
  3023                           	
  3024  0162                     l6827:	
  3025                           	line	446
  3026                           	
  3027  0162                     l11586:	
  3028                           ;main.c: 445: else
  3029                           ;main.c: 446: goToNextCell();
  3030  0162  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3031  0167  2A4F               	goto	l11644
  3032                           	
  3033  0168                     l6834:	
  3034                           	line	447
  3035                           ;main.c: 447: break;
  3036  0168  2A4F               	goto	l11644
  3037                           	line	448
  3038                           ;main.c: 448: case 2:
  3039                           	
  3040  0169                     l6835:	
  3041                           	line	449
  3042                           ;main.c: 449: if (goingHome)
  3043  0169  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3044  016A  296C               	goto	u5171
  3045  016B  296D               	goto	u5170
  3046  016C                     u5171:
  3047  016C  29A2               	goto	l11602
  3048  016D                     u5170:
  3049                           	line	451
  3050                           	
  3051  016D                     l11588:	
  3052                           ;main.c: 450: {
  3053                           ;main.c: 451: if (victimZone == 2)
  3054  016D  0861               	movf	(_victimZone),w	;volatile
  3055  016E  3A02               	xorlw	02h
  3056  016F  1D03               	skipz
  3057  0170  2972               	goto	u5181
  3058  0171  2973               	goto	u5180
  3059  0172                     u5181:
  3060  0172  2979               	goto	l11592
  3061  0173                     u5180:
  3062                           	line	452
  3063                           	
  3064  0173                     l11590:	
  3065                           ;main.c: 452: goForward();
  3066  0173  160A  118A  25FA   	fcall	_goForward
              120A  118A         
  3067  0178  2A4F               	goto	l11644
  3068                           	line	453
  3069                           	
  3070  0179                     l6837:	
  3071                           	
  3072  0179                     l11592:	
  3073                           ;main.c: 453: else if (getOrientation() == SOUTH)
  3074  0179  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3075  017E  3A01               	xorlw	01h
  3076  017F  1D03               	skipz
  3077  0180  2982               	goto	u5191
  3078  0181  2983               	goto	u5190
  3079  0182                     u5191:
  3080  0182  2989               	goto	l11596
  3081  0183                     u5190:
  3082                           	line	454
  3083                           	
  3084  0183                     l11594:	
  3085                           ;main.c: 454: goRight();
  3086  0183  160A  118A  23E2   	fcall	_goRight
              120A  118A         
  3087  0188  2A4F               	goto	l11644
  3088                           	line	455
  3089                           	
  3090  0189                     l6839:	
  3091                           	
  3092  0189                     l11596:	
  3093                           ;main.c: 455: else if (getOrientation() == NORTH)
  3094  0189  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3095  018E  3A03               	xorlw	03h
  3096  018F  1D03               	skipz
  3097  0190  2992               	goto	u5201
  3098  0191  2993               	goto	u5200
  3099  0192                     u5201:
  3100  0192  2999               	goto	l11600
  3101  0193                     u5200:
  3102                           	line	456
  3103                           	
  3104  0193                     l11598:	
  3105                           ;main.c: 456: goLeft();
  3106  0193  160A  118A  23BC   	fcall	_goLeft
              120A  118A         
  3107  0198  2A4F               	goto	l11644
  3108                           	line	457
  3109                           	
  3110  0199                     l6841:	
  3111                           	line	458
  3112                           	
  3113  0199                     l11600:	
  3114                           ;main.c: 457: else
  3115                           ;main.c: 458: goToNextCell();
  3116  0199  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3117  019E  2A4F               	goto	l11644
  3118                           	
  3119  019F                     l6842:	
  3120  019F  2A4F               	goto	l11644
  3121                           	
  3122  01A0                     l6840:	
  3123  01A0  2A4F               	goto	l11644
  3124                           	
  3125  01A1                     l6838:	
  3126                           	line	459
  3127                           ;main.c: 459: }
  3128  01A1  2A4F               	goto	l11644
  3129                           	line	460
  3130                           	
  3131  01A2                     l6836:	
  3132                           	line	461
  3133                           	
  3134  01A2                     l11602:	
  3135                           ;main.c: 460: else
  3136                           ;main.c: 461: goToNextCell();
  3137  01A2  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3138  01A7  2A4F               	goto	l11644
  3139                           	
  3140  01A8                     l6843:	
  3141                           	line	462
  3142                           ;main.c: 462: break;
  3143  01A8  2A4F               	goto	l11644
  3144                           	line	463
  3145                           ;main.c: 463: case 3:
  3146                           	
  3147  01A9                     l6844:	
  3148                           	line	464
  3149                           ;main.c: 464: if (goingHome)
  3150  01A9  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3151  01AA  29AC               	goto	u5211
  3152  01AB  29AD               	goto	u5210
  3153  01AC                     u5211:
  3154  01AC  29E2               	goto	l11618
  3155  01AD                     u5210:
  3156                           	line	466
  3157                           	
  3158  01AD                     l11604:	
  3159                           ;main.c: 465: {
  3160                           ;main.c: 466: if (victimZone == 3)
  3161  01AD  0861               	movf	(_victimZone),w	;volatile
  3162  01AE  3A03               	xorlw	03h
  3163  01AF  1D03               	skipz
  3164  01B0  29B2               	goto	u5221
  3165  01B1  29B3               	goto	u5220
  3166  01B2                     u5221:
  3167  01B2  29B9               	goto	l11608
  3168  01B3                     u5220:
  3169                           	line	467
  3170                           	
  3171  01B3                     l11606:	
  3172                           ;main.c: 467: goRight();
  3173  01B3  160A  118A  23E2   	fcall	_goRight
              120A  118A         
  3174  01B8  2A4F               	goto	l11644
  3175                           	line	468
  3176                           	
  3177  01B9                     l6846:	
  3178                           	
  3179  01B9                     l11608:	
  3180                           ;main.c: 468: else if (getOrientation() == EAST)
  3181  01B9  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3182  01BE  3A02               	xorlw	02h
  3183  01BF  1D03               	skipz
  3184  01C0  29C2               	goto	u5231
  3185  01C1  29C3               	goto	u5230
  3186  01C2                     u5231:
  3187  01C2  29C9               	goto	l11612
  3188  01C3                     u5230:
  3189                           	line	469
  3190                           	
  3191  01C3                     l11610:	
  3192                           ;main.c: 469: goForward();
  3193  01C3  160A  118A  25FA   	fcall	_goForward
              120A  118A         
  3194  01C8  2A4F               	goto	l11644
  3195                           	line	470
  3196                           	
  3197  01C9                     l6848:	
  3198                           	
  3199  01C9                     l11612:	
  3200                           ;main.c: 470: else if (getOrientation() == SOUTH)
  3201  01C9  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3202  01CE  3A01               	xorlw	01h
  3203  01CF  1D03               	skipz
  3204  01D0  29D2               	goto	u5241
  3205  01D1  29D3               	goto	u5240
  3206  01D2                     u5241:
  3207  01D2  29D9               	goto	l11616
  3208  01D3                     u5240:
  3209                           	line	471
  3210                           	
  3211  01D3                     l11614:	
  3212                           ;main.c: 471: goLeft();
  3213  01D3  160A  118A  23BC   	fcall	_goLeft
              120A  118A         
  3214  01D8  2A4F               	goto	l11644
  3215                           	line	472
  3216                           	
  3217  01D9                     l6850:	
  3218                           	line	473
  3219                           	
  3220  01D9                     l11616:	
  3221                           ;main.c: 472: else
  3222                           ;main.c: 473: goToNextCell();
  3223  01D9  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3224  01DE  2A4F               	goto	l11644
  3225                           	
  3226  01DF                     l6851:	
  3227  01DF  2A4F               	goto	l11644
  3228                           	
  3229  01E0                     l6849:	
  3230  01E0  2A4F               	goto	l11644
  3231                           	
  3232  01E1                     l6847:	
  3233                           	line	474
  3234                           ;main.c: 474: }
  3235  01E1  2A4F               	goto	l11644
  3236                           	line	475
  3237                           	
  3238  01E2                     l6845:	
  3239                           	line	476
  3240                           	
  3241  01E2                     l11618:	
  3242                           ;main.c: 475: else
  3243                           ;main.c: 476: goToNextCell();
  3244  01E2  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3245  01E7  2A4F               	goto	l11644
  3246                           	
  3247  01E8                     l6852:	
  3248                           	line	477
  3249                           ;main.c: 477: break;
  3250  01E8  2A4F               	goto	l11644
  3251                           	line	478
  3252                           ;main.c: 478: case 4:
  3253                           	
  3254  01E9                     l6853:	
  3255                           	line	479
  3256                           	
  3257  01E9                     l11620:	
  3258                           ;main.c: 479: if (getOrientation() == EAST)
  3259  01E9  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3260  01EE  3A02               	xorlw	02h
  3261  01EF  1D03               	skipz
  3262  01F0  29F2               	goto	u5251
  3263  01F1  29F3               	goto	u5250
  3264  01F2                     u5251:
  3265  01F2  29F9               	goto	l11624
  3266  01F3                     u5250:
  3267                           	line	480
  3268                           	
  3269  01F3                     l11622:	
  3270                           ;main.c: 480: goRight();
  3271  01F3  160A  118A  23E2   	fcall	_goRight
              120A  118A         
  3272  01F8  2A4F               	goto	l11644
  3273                           	line	481
  3274                           	
  3275  01F9                     l6854:	
  3276                           	line	482
  3277                           	
  3278  01F9                     l11624:	
  3279                           ;main.c: 481: else
  3280                           ;main.c: 482: goToNextCell();
  3281  01F9  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3282  01FE  2A4F               	goto	l11644
  3283                           	
  3284  01FF                     l6855:	
  3285                           	line	483
  3286                           ;main.c: 483: break;
  3287  01FF  2A4F               	goto	l11644
  3288                           	line	484
  3289                           ;main.c: 484: case 5:
  3290                           	
  3291  0200                     l6856:	
  3292                           	line	485
  3293                           	
  3294  0200                     l11626:	
  3295                           ;main.c: 485: if (getOrientation() == NORTH)
  3296  0200  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3297  0205  3A03               	xorlw	03h
  3298  0206  1D03               	skipz
  3299  0207  2A09               	goto	u5261
  3300  0208  2A0A               	goto	u5260
  3301  0209                     u5261:
  3302  0209  2A10               	goto	l11630
  3303  020A                     u5260:
  3304                           	line	486
  3305                           	
  3306  020A                     l11628:	
  3307                           ;main.c: 486: goRight();
  3308  020A  160A  118A  23E2   	fcall	_goRight
              120A  118A         
  3309  020F  2A4F               	goto	l11644
  3310                           	line	487
  3311                           	
  3312  0210                     l6857:	
  3313                           	line	488
  3314                           	
  3315  0210                     l11630:	
  3316                           ;main.c: 487: else
  3317                           ;main.c: 488: goToNextCell();
  3318  0210  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3319  0215  2A4F               	goto	l11644
  3320                           	
  3321  0216                     l6858:	
  3322                           	line	489
  3323                           ;main.c: 489: break;
  3324  0216  2A4F               	goto	l11644
  3325                           	line	490
  3326                           ;main.c: 490: case 6:
  3327                           	
  3328  0217                     l6859:	
  3329                           	line	491
  3330                           	
  3331  0217                     l11632:	
  3332                           ;main.c: 491: if (getOrientation() == WEST)
  3333  0217  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3334  021C  3800               	iorlw	0
  3335  021D  1D03               	skipz
  3336  021E  2A20               	goto	u5271
  3337  021F  2A21               	goto	u5270
  3338  0220                     u5271:
  3339  0220  2A2D               	goto	l11638
  3340  0221                     u5270:
  3341                           	line	493
  3342                           	
  3343  0221                     l11634:	
  3344                           ;main.c: 492: {
  3345                           ;main.c: 493: play_iCreate_song(6);
  3346  0221  3006               	movlw	(06h)
  3347  0222  160A  118A  223A   	fcall	_play_iCreate_song
              120A  118A         
  3348                           	line	494
  3349                           	
  3350  0227                     l11636:	
  3351                           ;main.c: 494: goForward();
  3352  0227  160A  118A  25FA   	fcall	_goForward
              120A  118A         
  3353                           	line	495
  3354                           ;main.c: 495: }
  3355  022C  2A4F               	goto	l11644
  3356                           	line	496
  3357                           	
  3358  022D                     l6860:	
  3359                           	line	497
  3360                           	
  3361  022D                     l11638:	
  3362                           ;main.c: 496: else
  3363                           ;main.c: 497: goToNextCell();
  3364  022D  160A  118A  27BB   	fcall	_goToNextCell
              120A  118A         
  3365  0232  2A4F               	goto	l11644
  3366                           	
  3367  0233                     l6861:	
  3368                           	line	498
  3369                           ;main.c: 498: break;
  3370  0233  2A4F               	goto	l11644
  3371                           	line	499
  3372                           ;main.c: 499: default:
  3373                           	
  3374  0234                     l6862:	
  3375                           	line	500
  3376                           ;main.c: 500: break;
  3377  0234  2A4F               	goto	l11644
  3378                           	line	501
  3379                           	
  3380  0235                     l11640:	
  3381                           ;main.c: 501: }
  3382  0235  2A4F               	goto	l11644
  3383                           	line	428
  3384                           	
  3385  0236                     l6823:	
  3386                           	
  3387  0236                     l11642:	
  3388  0236  1283               	bcf	status, 5	;RP0=0, select bank0
  3389  0237  1303               	bcf	status, 6	;RP1=0, select bank0
  3390  0238  085A               	movf	(_node),w	;volatile
  3391                           	; Switch size 1, requested type "space"
  3392                           ; Number of cases is 7, Range of values is 0 to 6
  3393                           ; switch strategies available:
  3394                           ; Name         Instructions Cycles
  3395                           ; simple_byte           22    12 (average)
  3396                           ; direct_byte           29     8 (fixed)
  3397                           ; jumptable            260     6 (fixed)
  3398                           ; rangetable            11     6 (fixed)
  3399                           ; spacedrange           20     9 (fixed)
  3400                           ; locatedrange           7     3 (fixed)
  3401                           ;	Chosen strategy is simple_byte
  3402                           
  3403                           	opt asmopt_off
  3404  0239  3A00               	xorlw	0^0	; case 0
  3405  023A  1903               	skipnz
  3406  023B  2923               	goto	l11570
  3407  023C  3A01               	xorlw	1^0	; case 1
  3408  023D  1903               	skipnz
  3409  023E  2929               	goto	l6826
  3410  023F  3A03               	xorlw	2^1	; case 2
  3411  0240  1903               	skipnz
  3412  0241  2969               	goto	l6835
  3413  0242  3A01               	xorlw	3^2	; case 3
  3414  0243  1903               	skipnz
  3415  0244  29A9               	goto	l6844
  3416  0245  3A07               	xorlw	4^3	; case 4
  3417  0246  1903               	skipnz
  3418  0247  29E9               	goto	l11620
  3419  0248  3A01               	xorlw	5^4	; case 5
  3420  0249  1903               	skipnz
  3421  024A  2A00               	goto	l11626
  3422  024B  3A03               	xorlw	6^5	; case 6
  3423  024C  1903               	skipnz
  3424  024D  2A17               	goto	l11632
  3425  024E  2A4F               	goto	l11644
  3426                           	opt asmopt_on
  3427                           
  3428                           	line	501
  3429                           	
  3430  024F                     l6825:	
  3431                           	line	502
  3432                           	
  3433  024F                     l11644:	
  3434                           ;main.c: 502: play_iCreate_song(5);
  3435  024F  3005               	movlw	(05h)
  3436  0250  160A  118A  223A   	fcall	_play_iCreate_song
              120A  118A         
  3437                           	line	503
  3438                           	
  3439  0255                     l11646:	
  3440                           ;main.c: 503: if(getSuccessfulDrive())
  3441  0255  160A  118A  21EC   	fcall	_getSuccessfulDrive
              120A  118A         
  3442  025A  1C03               	btfss	status,0
  3443  025B  2A5D               	goto	u5281
  3444  025C  2A5E               	goto	u5280
  3445  025D                     u5281:
  3446  025D  2AA1               	goto	l11666
  3447  025E                     u5280:
  3448                           	line	506
  3449                           	
  3450  025E                     l11648:	
  3451                           ;main.c: 504: {
  3452                           ;main.c: 506: if(xVictim == xCoord && yVictim == yCoord)
  3453  025E  1283               	bcf	status, 5	;RP0=0, select bank0
  3454  025F  1303               	bcf	status, 6	;RP1=0, select bank0
  3455  0260  0867               	movf	(_xVictim),w	;volatile
  3456  0261  0666               	xorwf	(_xCoord),w	;volatile
  3457  0262  1D03               	skipz
  3458  0263  2A65               	goto	u5291
  3459  0264  2A66               	goto	u5290
  3460  0265                     u5291:
  3461  0265  2A70               	goto	l11654
  3462  0266                     u5290:
  3463                           	
  3464  0266                     l11650:	
  3465  0266  086A               	movf	(_yVictim),w	;volatile
  3466  0267  0669               	xorwf	(_yCoord),w	;volatile
  3467  0268  1D03               	skipz
  3468  0269  2A6B               	goto	u5301
  3469  026A  2A6C               	goto	u5300
  3470  026B                     u5301:
  3471  026B  2A70               	goto	l11654
  3472  026C                     u5300:
  3473                           	line	508
  3474                           	
  3475  026C                     l11652:	
  3476                           ;main.c: 507: {
  3477                           ;main.c: 508: victimIndicator = 1;
  3478  026C  01CA               	clrf	(main@victimIndicator)
  3479  026D  1403               	bsf	status,0
  3480  026E  0DCA               	rlf	(main@victimIndicator),f
  3481  026F  2A70               	goto	l11654
  3482                           	line	509
  3483                           	
  3484  0270                     l6864:	
  3485                           	line	539
  3486                           	
  3487  0270                     l11654:	
  3488                           ;main.c: 509: }
  3489                           ;main.c: 539: updateMapData(0,0,0,0,victimIndicator,getOrientation());
  3490  0270  01A9               	clrf	(?_updateMapData)
  3491  0271  01AA               	clrf	0+(?_updateMapData)+01h
  3492  0272  01AB               	clrf	0+(?_updateMapData)+02h
  3493  0273  084A               	movf	(main@victimIndicator),w
  3494  0274  00C8               	movwf	(??_main+0)+0
  3495  0275  0848               	movf	(??_main+0)+0,w
  3496  0276  00AC               	movwf	0+(?_updateMapData)+03h
  3497  0277  160A  118A  21CE   	fcall	_getOrientation
              120A  118A         
  3498  027C  1283               	bcf	status, 5	;RP0=0, select bank0
  3499  027D  1303               	bcf	status, 6	;RP1=0, select bank0
  3500  027E  00C9               	movwf	(??_main+1)+0
  3501  027F  0849               	movf	(??_main+1)+0,w
  3502  0280  00AD               	movwf	0+(?_updateMapData)+04h
  3503  0281  3000               	movlw	(0)
  3504  0282  120A  158A  2132   	fcall	_updateMapData
              120A  118A         
  3505                           	line	541
  3506                           	
  3507  0287                     l11656:	
  3508                           ;main.c: 541: victimIndicator = 0;
  3509  0287  1283               	bcf	status, 5	;RP0=0, select bank0
  3510  0288  1303               	bcf	status, 6	;RP1=0, select bank0
  3511  0289  01CA               	clrf	(main@victimIndicator)
  3512                           	line	543
  3513                           	
  3514  028A                     l11658:	
  3515                           ;main.c: 543: updateLocation();
  3516  028A  120A  158A  2581   	fcall	_updateLocation
              120A  118A         
  3517                           	line	544
  3518                           	
  3519  028F                     l11660:	
  3520                           ;main.c: 544: updateNode();
  3521  028F  120A  158A  2285   	fcall	_updateNode
              120A  118A         
  3522                           	line	545
  3523                           	
  3524  0294                     l11662:	
  3525                           ;main.c: 545: if(goingHome)
  3526  0294  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3527  0295  2A97               	goto	u5311
  3528  0296  2A98               	goto	u5310
  3529  0297                     u5311:
  3530  0297  2AA1               	goto	l11666
  3531  0298                     u5310:
  3532                           	line	546
  3533                           	
  3534  0298                     l11664:	
  3535                           ;main.c: 546: checkIfHome();
  3536  0298  160A  118A  2311   	fcall	_checkIfHome
              120A  118A         
  3537  029D  2AA1               	goto	l11666
  3538                           	
  3539  029E                     l6865:	
  3540  029E  2AA1               	goto	l11666
  3541                           	line	547
  3542                           	
  3543  029F                     l6863:	
  3544  029F  2AA1               	goto	l11666
  3545                           	line	548
  3546                           	
  3547  02A0                     l6820:	
  3548  02A0  2AA1               	goto	l11666
  3549                           	line	549
  3550                           	
  3551  02A1                     l6811:	
  3552                           	line	376
  3553                           	
  3554  02A1                     l11666:	
  3555  02A1  1F70               	btfss	(_home/8),(_home)&7
  3556  02A2  2AA4               	goto	u5321
  3557  02A3  2AA5               	goto	u5320
  3558  02A4                     u5321:
  3559  02A4  2841               	goto	l11498
  3560  02A5                     u5320:
  3561  02A5  2AA6               	goto	l6867
  3562                           	
  3563  02A6                     l6866:	
  3564                           	line	551
  3565                           	
  3566  02A6                     l6867:	
  3567                           	global	start
  3568  02A6  120A  118A  2812   	ljmp	start
  3569                           	opt stack 0
  3570                           GLOBAL	__end_of_main
  3571  02A9                     	__end_of_main:
  3572 ;; =============== function _main ends ============
  3573                           
  3574                           	signat	_main,88
  3575                           	global	_goToNextCell
  3576                           psect	text1300,local,class=CODE,delta=2
  3577                           global __ptext1300
  3578  17BB                     __ptext1300:
  3579                           
  3580 ;; *************** function _goToNextCell *****************
  3581 ;; Defined at:
  3582 ;;		line 276 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;		None               void
  3589 ;; Registers used:
  3590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    6
  3603 ;; This function calls:
  3604 ;;		_getSomethingInTheWay
  3605 ;;		_goLeft
  3606 ;;		_goForward
  3607 ;;		_goRight
  3608 ;;		_goBackward
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           psect	text1300
  3614                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  3615                           	line	276
  3616                           	global	__size_of_goToNextCell
  3617  0045                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  3618                           	
  3619  17BB                     _goToNextCell:	
  3620                           	opt	stack 1
  3621                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3622                           	line	277
  3623                           	
  3624  17BB                     l11472:	
  3625                           ;main.c: 277: if(!leftWall && (getSomethingInTheWay() != LEFT))
  3626  17BB  1BF0               	btfsc	(_leftWall/8),(_leftWall)&7
  3627  17BC  2FBE               	goto	u4931
  3628  17BD  2FBF               	goto	u4930
  3629  17BE                     u4931:
  3630  17BE  2FCF               	goto	l6769
  3631  17BF                     u4930:
  3632                           	
  3633  17BF                     l11474:	
  3634  17BF  120A  118A  27F9   	fcall	_getSomethingInTheWay
              160A  118A         
  3635  17C4  3A01               	xorlw	01h
  3636  17C5  1903               	skipnz
  3637  17C6  2FC8               	goto	u4941
  3638  17C7  2FC9               	goto	u4940
  3639  17C8                     u4941:
  3640  17C8  2FCF               	goto	l6769
  3641  17C9                     u4940:
  3642                           	line	278
  3643                           	
  3644  17C9                     l11476:	
  3645                           ;main.c: 278: goLeft();
  3646  17C9  160A  118A  23BC   	fcall	_goLeft
              160A  118A         
  3647  17CE  2FFF               	goto	l6775
  3648                           	line	279
  3649                           	
  3650  17CF                     l6769:	
  3651                           ;main.c: 279: else if(!frontWall && (getSomethingInTheWay() != FORWARD))
  3652  17CF  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  3653  17D0  2FD2               	goto	u4951
  3654  17D1  2FD3               	goto	u4950
  3655  17D2                     u4951:
  3656  17D2  2FE3               	goto	l6771
  3657  17D3                     u4950:
  3658                           	
  3659  17D3                     l11478:	
  3660  17D3  120A  118A  27F9   	fcall	_getSomethingInTheWay
              160A  118A         
  3661  17D8  3A00               	xorlw	0
  3662  17D9  1903               	skipnz
  3663  17DA  2FDC               	goto	u4961
  3664  17DB  2FDD               	goto	u4960
  3665  17DC                     u4961:
  3666  17DC  2FE3               	goto	l6771
  3667  17DD                     u4960:
  3668                           	line	280
  3669                           	
  3670  17DD                     l11480:	
  3671                           ;main.c: 280: goForward();
  3672  17DD  160A  118A  25FA   	fcall	_goForward
              160A  118A         
  3673  17E2  2FFF               	goto	l6775
  3674                           	line	281
  3675                           	
  3676  17E3                     l6771:	
  3677                           ;main.c: 281: else if(!rightWall && (getSomethingInTheWay() != RIGHT))
  3678  17E3  1971               	btfsc	(_rightWall/8),(_rightWall)&7
  3679  17E4  2FE6               	goto	u4971
  3680  17E5  2FE7               	goto	u4970
  3681  17E6                     u4971:
  3682  17E6  2FF7               	goto	l11486
  3683  17E7                     u4970:
  3684                           	
  3685  17E7                     l11482:	
  3686  17E7  120A  118A  27F9   	fcall	_getSomethingInTheWay
              160A  118A         
  3687  17EC  3A03               	xorlw	03h
  3688  17ED  1903               	skipnz
  3689  17EE  2FF0               	goto	u4981
  3690  17EF  2FF1               	goto	u4980
  3691  17F0                     u4981:
  3692  17F0  2FF7               	goto	l11486
  3693  17F1                     u4980:
  3694                           	line	282
  3695                           	
  3696  17F1                     l11484:	
  3697                           ;main.c: 282: goRight();
  3698  17F1  160A  118A  23E2   	fcall	_goRight
              160A  118A         
  3699  17F6  2FFF               	goto	l6775
  3700                           	line	283
  3701                           	
  3702  17F7                     l6773:	
  3703                           	line	284
  3704                           	
  3705  17F7                     l11486:	
  3706                           ;main.c: 283: else
  3707                           ;main.c: 284: goBackward();
  3708  17F7  160A  118A  245A   	fcall	_goBackward
              160A  118A         
  3709  17FC  2FFF               	goto	l6775
  3710                           	
  3711  17FD                     l6774:	
  3712  17FD  2FFF               	goto	l6775
  3713                           	
  3714  17FE                     l6772:	
  3715  17FE  2FFF               	goto	l6775
  3716                           	
  3717  17FF                     l6770:	
  3718                           	line	285
  3719                           	
  3720  17FF                     l6775:	
  3721  17FF  0008               	return
  3722                           	opt stack 0
  3723                           GLOBAL	__end_of_goToNextCell
  3724  1800                     	__end_of_goToNextCell:
  3725 ;; =============== function _goToNextCell ends ============
  3726                           
  3727                           	signat	_goToNextCell,88
  3728                           	global	_findWalls
  3729                           psect	text1301,local,class=CODE,delta=2
  3730                           global __ptext1301
  3731  0CF0                     __ptext1301:
  3732                           
  3733 ;; *************** function _findWalls *****************
  3734 ;; Defined at:
  3735 ;;		line 205 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;		None               void
  3742 ;; Registers used:
  3743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0
  3751 ;;      Temps:          0       1       0       0       0
  3752 ;;      Totals:         0       1       0       0       0
  3753 ;;Total ram usage:        1 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    6
  3756 ;; This function calls:
  3757 ;;		_rotateIR
  3758 ;;		_lcd_set_cursor
  3759 ;;		_findWall
  3760 ;;		_lcd_write_data
  3761 ;;		_play_iCreate_song
  3762 ;; This function is called by:
  3763 ;;		_main
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           psect	text1301
  3767                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  3768                           	line	205
  3769                           	global	__size_of_findWalls
  3770  0091                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  3771                           	
  3772  0CF0                     _findWalls:	
  3773                           	opt	stack 1
  3774                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3775                           	line	206
  3776                           	
  3777  0CF0                     l11444:	
  3778                           ;main.c: 206: rotateIR(24, 0b00001101);
  3779  0CF0  300D               	movlw	(0Dh)
  3780  0CF1  1283               	bcf	status, 5	;RP0=0, select bank0
  3781  0CF2  1303               	bcf	status, 6	;RP1=0, select bank0
  3782  0CF3  00C3               	movwf	(??_findWalls+0)+0
  3783  0CF4  0843               	movf	(??_findWalls+0)+0,w
  3784  0CF5  00A0               	movwf	(?_rotateIR)
  3785  0CF6  3018               	movlw	(018h)
  3786  0CF7  160A  118A  2584   	fcall	_rotateIR
              120A  158A         
  3787                           	line	207
  3788                           ;main.c: 207: lcd_set_cursor(0x0B);
  3789  0CFC  300B               	movlw	(0Bh)
  3790  0CFD  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  158A         
  3791                           	line	209
  3792                           	
  3793  0D02                     l11446:	
  3794                           ;main.c: 209: leftWall = findWall();
  3795  0D02  160A  118A  22B8   	fcall	_findWall
              120A  158A         
  3796  0D07  1803               	btfsc	status,0
  3797  0D08  2D0A               	goto	u4841
  3798  0D09  2D0C               	goto	u4840
  3799                           	
  3800  0D0A                     u4841:
  3801  0D0A  17F0               	bsf	(_leftWall/8),(_leftWall)&7
  3802  0D0B  2D0D               	goto	u4854
  3803  0D0C                     u4840:
  3804  0D0C  13F0               	bcf	(_leftWall/8),(_leftWall)&7
  3805  0D0D                     u4854:
  3806                           	line	210
  3807                           	
  3808  0D0D                     l11448:	
  3809                           ;main.c: 210: if(leftWall)
  3810  0D0D  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  3811  0D0E  2D10               	goto	u4861
  3812  0D0F  2D11               	goto	u4860
  3813  0D10                     u4861:
  3814  0D10  2D18               	goto	l11452
  3815  0D11                     u4860:
  3816                           	line	211
  3817                           	
  3818  0D11                     l11450:	
  3819                           ;main.c: 211: lcd_write_data('L');
  3820  0D11  304C               	movlw	(04Ch)
  3821  0D12  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  3822  0D17  2D1E               	goto	l6761
  3823                           	line	212
  3824                           	
  3825  0D18                     l6760:	
  3826                           	line	213
  3827                           	
  3828  0D18                     l11452:	
  3829                           ;main.c: 212: else
  3830                           ;main.c: 213: lcd_write_data(' ');
  3831  0D18  3020               	movlw	(020h)
  3832  0D19  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  3833                           	
  3834  0D1E                     l6761:	
  3835                           	line	215
  3836                           ;main.c: 215: rotateIR(24, 0b00001111);
  3837  0D1E  300F               	movlw	(0Fh)
  3838  0D1F  1283               	bcf	status, 5	;RP0=0, select bank0
  3839  0D20  1303               	bcf	status, 6	;RP1=0, select bank0
  3840  0D21  00C3               	movwf	(??_findWalls+0)+0
  3841  0D22  0843               	movf	(??_findWalls+0)+0,w
  3842  0D23  00A0               	movwf	(?_rotateIR)
  3843  0D24  3018               	movlw	(018h)
  3844  0D25  160A  118A  2584   	fcall	_rotateIR
              120A  158A         
  3845                           	line	216
  3846                           	
  3847  0D2A                     l11454:	
  3848                           ;main.c: 216: frontWall = findWall();
  3849  0D2A  160A  118A  22B8   	fcall	_findWall
              120A  158A         
  3850  0D2F  1803               	btfsc	status,0
  3851  0D30  2D32               	goto	u4871
  3852  0D31  2D34               	goto	u4870
  3853                           	
  3854  0D32                     u4871:
  3855  0D32  1670               	bsf	(_frontWall/8),(_frontWall)&7
  3856  0D33  2D35               	goto	u4884
  3857  0D34                     u4870:
  3858  0D34  1270               	bcf	(_frontWall/8),(_frontWall)&7
  3859  0D35                     u4884:
  3860                           	line	218
  3861                           	
  3862  0D35                     l11456:	
  3863                           ;main.c: 218: if(frontWall)
  3864  0D35  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  3865  0D36  2D38               	goto	u4891
  3866  0D37  2D39               	goto	u4890
  3867  0D38                     u4891:
  3868  0D38  2D40               	goto	l11460
  3869  0D39                     u4890:
  3870                           	line	219
  3871                           	
  3872  0D39                     l11458:	
  3873                           ;main.c: 219: lcd_write_data('F');
  3874  0D39  3046               	movlw	(046h)
  3875  0D3A  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  3876  0D3F  2D46               	goto	l6763
  3877                           	line	220
  3878                           	
  3879  0D40                     l6762:	
  3880                           	line	221
  3881                           	
  3882  0D40                     l11460:	
  3883                           ;main.c: 220: else
  3884                           ;main.c: 221: lcd_write_data(' ');
  3885  0D40  3020               	movlw	(020h)
  3886  0D41  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  3887                           	
  3888  0D46                     l6763:	
  3889                           	line	223
  3890                           ;main.c: 223: rotateIR(24, 0b00001111);
  3891  0D46  300F               	movlw	(0Fh)
  3892  0D47  1283               	bcf	status, 5	;RP0=0, select bank0
  3893  0D48  1303               	bcf	status, 6	;RP1=0, select bank0
  3894  0D49  00C3               	movwf	(??_findWalls+0)+0
  3895  0D4A  0843               	movf	(??_findWalls+0)+0,w
  3896  0D4B  00A0               	movwf	(?_rotateIR)
  3897  0D4C  3018               	movlw	(018h)
  3898  0D4D  160A  118A  2584   	fcall	_rotateIR
              120A  158A         
  3899                           	line	224
  3900                           	
  3901  0D52                     l11462:	
  3902                           ;main.c: 224: rightWall = findWall();
  3903  0D52  160A  118A  22B8   	fcall	_findWall
              120A  158A         
  3904  0D57  1803               	btfsc	status,0
  3905  0D58  2D5A               	goto	u4901
  3906  0D59  2D5C               	goto	u4900
  3907                           	
  3908  0D5A                     u4901:
  3909  0D5A  1571               	bsf	(_rightWall/8),(_rightWall)&7
  3910  0D5B  2D5D               	goto	u4914
  3911  0D5C                     u4900:
  3912  0D5C  1171               	bcf	(_rightWall/8),(_rightWall)&7
  3913  0D5D                     u4914:
  3914                           	line	226
  3915                           	
  3916  0D5D                     l11464:	
  3917                           ;main.c: 226: if(rightWall)
  3918  0D5D  1D71               	btfss	(_rightWall/8),(_rightWall)&7
  3919  0D5E  2D60               	goto	u4921
  3920  0D5F  2D61               	goto	u4920
  3921  0D60                     u4921:
  3922  0D60  2D6E               	goto	l11470
  3923  0D61                     u4920:
  3924                           	line	228
  3925                           	
  3926  0D61                     l11466:	
  3927                           ;main.c: 227: {
  3928                           ;main.c: 228: play_iCreate_song(5);
  3929  0D61  3005               	movlw	(05h)
  3930  0D62  160A  118A  223A   	fcall	_play_iCreate_song
              120A  158A         
  3931                           	line	229
  3932                           	
  3933  0D67                     l11468:	
  3934                           ;main.c: 229: lcd_write_data('R');
  3935  0D67  3052               	movlw	(052h)
  3936  0D68  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  3937                           	line	230
  3938                           ;main.c: 230: }else
  3939  0D6D  2D74               	goto	l6765
  3940                           	
  3941  0D6E                     l6764:	
  3942                           	line	231
  3943                           	
  3944  0D6E                     l11470:	
  3945                           ;main.c: 231: lcd_write_data(' ');
  3946  0D6E  3020               	movlw	(020h)
  3947  0D6F  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  3948                           	
  3949  0D74                     l6765:	
  3950                           	line	233
  3951                           ;main.c: 233: rotateIR(24, 0b00001101);
  3952  0D74  300D               	movlw	(0Dh)
  3953  0D75  1283               	bcf	status, 5	;RP0=0, select bank0
  3954  0D76  1303               	bcf	status, 6	;RP1=0, select bank0
  3955  0D77  00C3               	movwf	(??_findWalls+0)+0
  3956  0D78  0843               	movf	(??_findWalls+0)+0,w
  3957  0D79  00A0               	movwf	(?_rotateIR)
  3958  0D7A  3018               	movlw	(018h)
  3959  0D7B  160A  118A  2584   	fcall	_rotateIR
              120A  158A         
  3960                           	line	234
  3961                           	
  3962  0D80                     l6766:	
  3963  0D80  0008               	return
  3964                           	opt stack 0
  3965                           GLOBAL	__end_of_findWalls
  3966  0D81                     	__end_of_findWalls:
  3967 ;; =============== function _findWalls ends ============
  3968                           
  3969                           	signat	_findWalls,88
  3970                           	global	_goRight
  3971                           psect	text1302,local,class=CODE,delta=2
  3972                           global __ptext1302
  3973  13E2                     __ptext1302:
  3974                           
  3975 ;; *************** function _goRight *****************
  3976 ;; Defined at:
  3977 ;;		line 253 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0
  3993 ;;      Temps:          0       1       0       0       0
  3994 ;;      Totals:         0       1       0       0       0
  3995 ;;Total ram usage:        1 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    5
  3998 ;; This function calls:
  3999 ;;		_lcd_set_cursor
  4000 ;;		_lcd_write_data
  4001 ;;		_turnRight90
  4002 ;;		_updateOrientation
  4003 ;;		_driveForDistance
  4004 ;; This function is called by:
  4005 ;;		_goToNextCell
  4006 ;;		_main
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           psect	text1302
  4010                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4011                           	line	253
  4012                           	global	__size_of_goRight
  4013  0027                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  4014                           	
  4015  13E2                     _goRight:	
  4016                           	opt	stack 2
  4017                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4018                           	line	254
  4019                           	
  4020  13E2                     l11434:	
  4021                           ;drive.c: 254: lcd_set_cursor(0x0F);
  4022  13E2  300F               	movlw	(0Fh)
  4023  13E3  160A  118A  21F6   	fcall	_lcd_set_cursor
              160A  118A         
  4024                           	line	255
  4025                           ;drive.c: 255: lcd_write_data('R');
  4026  13E8  3052               	movlw	(052h)
  4027  13E9  160A  118A  224C   	fcall	_lcd_write_data
              160A  118A         
  4028                           	line	256
  4029                           	
  4030  13EE                     l11436:	
  4031                           ;drive.c: 256: turnRight90();
  4032  13EE  160A  118A  2675   	fcall	_turnRight90
              160A  118A         
  4033                           	line	257
  4034                           	
  4035  13F3                     l11438:	
  4036                           ;drive.c: 257: updateOrientation(RIGHT);
  4037  13F3  3003               	movlw	(03h)
  4038  13F4  160A  118A  2229   	fcall	_updateOrientation
              160A  118A         
  4039                           	line	258
  4040                           	
  4041  13F9                     l11440:	
  4042                           ;drive.c: 258: lastMove = RIGHT;
  4043  13F9  3003               	movlw	(03h)
  4044  13FA  1283               	bcf	status, 5	;RP0=0, select bank0
  4045  13FB  1303               	bcf	status, 6	;RP1=0, select bank0
  4046  13FC  00B8               	movwf	(??_goRight+0)+0
  4047  13FD  0838               	movf	(??_goRight+0)+0,w
  4048  13FE  00D9               	movwf	(_lastMove)	;volatile
  4049                           	line	259
  4050                           	
  4051  13FF                     l11442:	
  4052                           ;drive.c: 259: driveForDistance(1000);
  4053  13FF  30E8               	movlw	low(03E8h)
  4054  1400  00AC               	movwf	(?_driveForDistance)
  4055  1401  3003               	movlw	high(03E8h)
  4056  1402  00AD               	movwf	((?_driveForDistance))+1
  4057  1403  120A  118A  2478   	fcall	_driveForDistance
              160A  118A         
  4058                           	line	260
  4059                           	
  4060  1408                     l5873:	
  4061  1408  0008               	return
  4062                           	opt stack 0
  4063                           GLOBAL	__end_of_goRight
  4064  1409                     	__end_of_goRight:
  4065 ;; =============== function _goRight ends ============
  4066                           
  4067                           	signat	_goRight,88
  4068                           	global	_goLeft
  4069                           psect	text1303,local,class=CODE,delta=2
  4070                           global __ptext1303
  4071  13BC                     __ptext1303:
  4072                           
  4073 ;; *************** function _goLeft *****************
  4074 ;; Defined at:
  4075 ;;		line 232 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;		None               void
  4082 ;; Registers used:
  4083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4089 ;;      Params:         0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    5
  4096 ;; This function calls:
  4097 ;;		_lcd_set_cursor
  4098 ;;		_lcd_write_data
  4099 ;;		_turnLeft90
  4100 ;;		_updateOrientation
  4101 ;;		_driveForDistance
  4102 ;; This function is called by:
  4103 ;;		_goToNextCell
  4104 ;;		_main
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           psect	text1303
  4108                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4109                           	line	232
  4110                           	global	__size_of_goLeft
  4111  0026                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  4112                           	
  4113  13BC                     _goLeft:	
  4114                           	opt	stack 2
  4115                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4116                           	line	233
  4117                           	
  4118  13BC                     l11424:	
  4119                           ;drive.c: 233: lcd_set_cursor(0x0F);
  4120  13BC  300F               	movlw	(0Fh)
  4121  13BD  160A  118A  21F6   	fcall	_lcd_set_cursor
              160A  118A         
  4122                           	line	234
  4123                           ;drive.c: 234: lcd_write_data('L');
  4124  13C2  304C               	movlw	(04Ch)
  4125  13C3  160A  118A  224C   	fcall	_lcd_write_data
              160A  118A         
  4126                           	line	235
  4127                           	
  4128  13C8                     l11426:	
  4129                           ;drive.c: 235: turnLeft90();
  4130  13C8  120A  158A  21D0   	fcall	_turnLeft90
              160A  118A         
  4131                           	line	236
  4132                           	
  4133  13CD                     l11428:	
  4134                           ;drive.c: 236: updateOrientation(LEFT);
  4135  13CD  3001               	movlw	(01h)
  4136  13CE  160A  118A  2229   	fcall	_updateOrientation
              160A  118A         
  4137                           	line	237
  4138                           	
  4139  13D3                     l11430:	
  4140                           ;drive.c: 237: lastMove = LEFT;
  4141  13D3  1283               	bcf	status, 5	;RP0=0, select bank0
  4142  13D4  1303               	bcf	status, 6	;RP1=0, select bank0
  4143  13D5  01D9               	clrf	(_lastMove)	;volatile
  4144  13D6  1403               	bsf	status,0
  4145  13D7  0DD9               	rlf	(_lastMove),f	;volatile
  4146                           	line	238
  4147                           	
  4148  13D8                     l11432:	
  4149                           ;drive.c: 238: driveForDistance(1000);
  4150  13D8  30E8               	movlw	low(03E8h)
  4151  13D9  00AC               	movwf	(?_driveForDistance)
  4152  13DA  3003               	movlw	high(03E8h)
  4153  13DB  00AD               	movwf	((?_driveForDistance))+1
  4154  13DC  120A  118A  2478   	fcall	_driveForDistance
              160A  118A         
  4155                           	line	239
  4156                           	
  4157  13E1                     l5867:	
  4158  13E1  0008               	return
  4159                           	opt stack 0
  4160                           GLOBAL	__end_of_goLeft
  4161  13E2                     	__end_of_goLeft:
  4162 ;; =============== function _goLeft ends ============
  4163                           
  4164                           	signat	_goLeft,88
  4165                           	global	_goForward
  4166                           psect	text1304,local,class=CODE,delta=2
  4167                           global __ptext1304
  4168  15FA                     __ptext1304:
  4169                           
  4170 ;; *************** function _goForward *****************
  4171 ;; Defined at:
  4172 ;;		line 217 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    5
  4193 ;; This function calls:
  4194 ;;		_lcd_set_cursor
  4195 ;;		_lcd_write_data
  4196 ;;		_getCurrentX
  4197 ;;		_getCurrentY
  4198 ;;		_driveForDistance
  4199 ;; This function is called by:
  4200 ;;		_goToNextCell
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           psect	text1304
  4205                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4206                           	line	217
  4207                           	global	__size_of_goForward
  4208  003C                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  4209                           	
  4210  15FA                     _goForward:	
  4211                           	opt	stack 2
  4212                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4213                           	line	218
  4214                           	
  4215  15FA                     l11412:	
  4216                           ;drive.c: 218: lcd_set_cursor(0x0F);
  4217  15FA  300F               	movlw	(0Fh)
  4218  15FB  160A  118A  21F6   	fcall	_lcd_set_cursor
              160A  118A         
  4219                           	line	219
  4220                           ;drive.c: 219: lcd_write_data('F');
  4221  1600  3046               	movlw	(046h)
  4222  1601  160A  118A  224C   	fcall	_lcd_write_data
              160A  118A         
  4223                           	line	220
  4224                           	
  4225  1606                     l11414:	
  4226                           ;drive.c: 220: lastMove = FORWARD;
  4227  1606  1283               	bcf	status, 5	;RP0=0, select bank0
  4228  1607  1303               	bcf	status, 6	;RP1=0, select bank0
  4229  1608  01D9               	clrf	(_lastMove)	;volatile
  4230                           	line	221
  4231                           	
  4232  1609                     l11416:	
  4233                           ;drive.c: 221: if( (getCurrentX() == 1 && getCurrentY() == 2))
  4234  1609  160A  118A  21C4   	fcall	_getCurrentX
              160A  118A         
  4235  160E  3A01               	xorlw	01h
  4236  160F  1D03               	skipz
  4237  1610  2E12               	goto	u4821
  4238  1611  2E13               	goto	u4820
  4239  1612                     u4821:
  4240  1612  2E29               	goto	l11422
  4241  1613                     u4820:
  4242                           	
  4243  1613                     l11418:	
  4244  1613  160A  118A  21C9   	fcall	_getCurrentY
              160A  118A         
  4245  1618  3A02               	xorlw	02h
  4246  1619  1D03               	skipz
  4247  161A  2E1C               	goto	u4831
  4248  161B  2E1D               	goto	u4830
  4249  161C                     u4831:
  4250  161C  2E29               	goto	l11422
  4251  161D                     u4830:
  4252                           	line	223
  4253                           	
  4254  161D                     l11420:	
  4255                           ;drive.c: 222: {
  4256                           ;drive.c: 223: driveForDistance(800);
  4257  161D  3020               	movlw	low(0320h)
  4258  161E  1283               	bcf	status, 5	;RP0=0, select bank0
  4259  161F  1303               	bcf	status, 6	;RP1=0, select bank0
  4260  1620  00AC               	movwf	(?_driveForDistance)
  4261  1621  3003               	movlw	high(0320h)
  4262  1622  00AD               	movwf	((?_driveForDistance))+1
  4263  1623  120A  118A  2478   	fcall	_driveForDistance
              160A  118A         
  4264                           	line	224
  4265                           ;drive.c: 224: }else
  4266  1628  2E35               	goto	l5864
  4267                           	
  4268  1629                     l5862:	
  4269                           	line	226
  4270                           	
  4271  1629                     l11422:	
  4272                           ;drive.c: 225: {
  4273                           ;drive.c: 226: driveForDistance(1000);
  4274  1629  30E8               	movlw	low(03E8h)
  4275  162A  1283               	bcf	status, 5	;RP0=0, select bank0
  4276  162B  1303               	bcf	status, 6	;RP1=0, select bank0
  4277  162C  00AC               	movwf	(?_driveForDistance)
  4278  162D  3003               	movlw	high(03E8h)
  4279  162E  00AD               	movwf	((?_driveForDistance))+1
  4280  162F  120A  118A  2478   	fcall	_driveForDistance
              160A  118A         
  4281  1634  2E35               	goto	l5864
  4282                           	line	227
  4283                           	
  4284  1635                     l5863:	
  4285                           	line	228
  4286                           	
  4287  1635                     l5864:	
  4288  1635  0008               	return
  4289                           	opt stack 0
  4290                           GLOBAL	__end_of_goForward
  4291  1636                     	__end_of_goForward:
  4292 ;; =============== function _goForward ends ============
  4293                           
  4294                           	signat	_goForward,88
  4295                           	global	_goBackward
  4296                           psect	text1305,local,class=CODE,delta=2
  4297                           global __ptext1305
  4298  145A                     __ptext1305:
  4299                           
  4300 ;; *************** function _goBackward *****************
  4301 ;; Defined at:
  4302 ;;		line 206 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4316 ;;      Params:         0       0       0       0       0
  4317 ;;      Locals:         0       0       0       0       0
  4318 ;;      Temps:          0       1       0       0       0
  4319 ;;      Totals:         0       1       0       0       0
  4320 ;;Total ram usage:        1 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    5
  4323 ;; This function calls:
  4324 ;;		_lcd_set_cursor
  4325 ;;		_lcd_write_data
  4326 ;;		_turnAround
  4327 ;;		_updateOrientation
  4328 ;;		_driveForDistance
  4329 ;; This function is called by:
  4330 ;;		_goToNextCell
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           psect	text1305
  4334                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4335                           	line	206
  4336                           	global	__size_of_goBackward
  4337  0029                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  4338                           	
  4339  145A                     _goBackward:	
  4340                           	opt	stack 1
  4341                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4342                           	line	207
  4343                           	
  4344  145A                     l11402:	
  4345                           ;drive.c: 207: lcd_set_cursor(0x0F);
  4346  145A  300F               	movlw	(0Fh)
  4347  145B  160A  118A  21F6   	fcall	_lcd_set_cursor
              160A  118A         
  4348                           	line	208
  4349                           ;drive.c: 208: lcd_write_data('B');
  4350  1460  3042               	movlw	(042h)
  4351  1461  160A  118A  224C   	fcall	_lcd_write_data
              160A  118A         
  4352                           	line	209
  4353                           	
  4354  1466                     l11404:	
  4355                           ;drive.c: 209: turnAround();
  4356  1466  120A  158A  20A4   	fcall	_turnAround
              160A  118A         
  4357                           	line	210
  4358                           	
  4359  146B                     l11406:	
  4360                           ;drive.c: 210: updateOrientation(BACKWARD);
  4361  146B  3002               	movlw	(02h)
  4362  146C  160A  118A  2229   	fcall	_updateOrientation
              160A  118A         
  4363                           	line	211
  4364                           	
  4365  1471                     l11408:	
  4366                           ;drive.c: 211: driveForDistance(1000);
  4367  1471  30E8               	movlw	low(03E8h)
  4368  1472  1283               	bcf	status, 5	;RP0=0, select bank0
  4369  1473  1303               	bcf	status, 6	;RP1=0, select bank0
  4370  1474  00AC               	movwf	(?_driveForDistance)
  4371  1475  3003               	movlw	high(03E8h)
  4372  1476  00AD               	movwf	((?_driveForDistance))+1
  4373  1477  120A  118A  2478   	fcall	_driveForDistance
              160A  118A         
  4374                           	line	212
  4375                           	
  4376  147C                     l11410:	
  4377                           ;drive.c: 212: lastMove = BACKWARD;
  4378  147C  3002               	movlw	(02h)
  4379  147D  1283               	bcf	status, 5	;RP0=0, select bank0
  4380  147E  1303               	bcf	status, 6	;RP1=0, select bank0
  4381  147F  00B8               	movwf	(??_goBackward+0)+0
  4382  1480  0838               	movf	(??_goBackward+0)+0,w
  4383  1481  00D9               	movwf	(_lastMove)	;volatile
  4384                           	line	213
  4385                           	
  4386  1482                     l5859:	
  4387  1482  0008               	return
  4388                           	opt stack 0
  4389                           GLOBAL	__end_of_goBackward
  4390  1483                     	__end_of_goBackward:
  4391 ;; =============== function _goBackward ends ============
  4392                           
  4393                           	signat	_goBackward,88
  4394                           	global	_wallFollow
  4395                           psect	text1306,local,class=CODE,delta=2
  4396                           global __ptext1306
  4397  0748                     __ptext1306:
  4398                           
  4399 ;; *************** function _wallFollow *****************
  4400 ;; Defined at:
  4401 ;;		line 582 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  distanceToWa    2   38[BANK0 ] int 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;		None               void
  4408 ;; Registers used:
  4409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4415 ;;      Params:         0       0       0       0       0
  4416 ;;      Locals:         0       2       0       0       0
  4417 ;;      Temps:          0       3       0       0       0
  4418 ;;      Totals:         0       5       0       0       0
  4419 ;;Total ram usage:        5 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    5
  4422 ;; This function calls:
  4423 ;;		_readIR
  4424 ;;		_drive
  4425 ;;		_waitFor
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           psect	text1306
  4431                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  4432                           	line	582
  4433                           	global	__size_of_wallFollow
  4434  00B1                     	__size_of_wallFollow	equ	__end_of_wallFollow-_wallFollow
  4435                           	
  4436  0748                     _wallFollow:	
  4437                           	opt	stack 2
  4438                           ; Regs used in _wallFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4439                           	line	583
  4440                           	
  4441  0748                     l11386:	
  4442                           ;main.c: 583: int distanceToWall = readIR();
  4443  0748  160A  118A  2374   	fcall	_readIR
              120A  118A         
  4444  074D  1283               	bcf	status, 5	;RP0=0, select bank0
  4445  074E  1303               	bcf	status, 6	;RP1=0, select bank0
  4446  074F  0840               	movf	(1+(?_readIR)),w
  4447  0750  01C7               	clrf	(wallFollow@distanceToWall+1)
  4448  0751  07C7               	addwf	(wallFollow@distanceToWall+1)
  4449  0752  083F               	movf	(0+(?_readIR)),w
  4450  0753  01C6               	clrf	(wallFollow@distanceToWall)
  4451  0754  07C6               	addwf	(wallFollow@distanceToWall)
  4452                           
  4453                           	line	584
  4454                           	
  4455  0755                     l11388:	
  4456                           ;main.c: 584: if((distanceToWall > 86) && (distanceToWall < 100))
  4457  0755  0847               	movf	(wallFollow@distanceToWall+1),w
  4458  0756  3A80               	xorlw	80h
  4459  0757  00FF               	movwf	btemp+1
  4460  0758  3080               	movlw	(high(057h))^80h
  4461  0759  027F               	subwf	btemp+1,w
  4462  075A  1D03               	skipz
  4463  075B  2F5E               	goto	u4795
  4464  075C  3057               	movlw	low(057h)
  4465  075D  0246               	subwf	(wallFollow@distanceToWall),w
  4466  075E                     u4795:
  4467                           
  4468  075E  1C03               	skipc
  4469  075F  2F61               	goto	u4791
  4470  0760  2F62               	goto	u4790
  4471  0761                     u4791:
  4472  0761  2FA9               	goto	l11396
  4473  0762                     u4790:
  4474                           	
  4475  0762                     l11390:	
  4476  0762  1283               	bcf	status, 5	;RP0=0, select bank0
  4477  0763  1303               	bcf	status, 6	;RP1=0, select bank0
  4478  0764  0847               	movf	(wallFollow@distanceToWall+1),w
  4479  0765  3A80               	xorlw	80h
  4480  0766  00FF               	movwf	btemp+1
  4481  0767  3080               	movlw	(high(064h))^80h
  4482  0768  027F               	subwf	btemp+1,w
  4483  0769  1D03               	skipz
  4484  076A  2F6D               	goto	u4805
  4485  076B  3064               	movlw	low(064h)
  4486  076C  0246               	subwf	(wallFollow@distanceToWall),w
  4487  076D                     u4805:
  4488                           
  4489  076D  1803               	skipnc
  4490  076E  2F70               	goto	u4801
  4491  076F  2F71               	goto	u4800
  4492  0770                     u4801:
  4493  0770  2FA9               	goto	l11396
  4494  0771                     u4800:
  4495                           	line	586
  4496                           	
  4497  0771                     l11392:	
  4498                           ;main.c: 585: {
  4499                           ;main.c: 586: drive(0, 50, 0, 1);
  4500  0771  3032               	movlw	(032h)
  4501  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  4502  0773  1303               	bcf	status, 6	;RP1=0, select bank0
  4503  0774  00C3               	movwf	(??_wallFollow+0)+0
  4504  0775  0843               	movf	(??_wallFollow+0)+0,w
  4505  0776  00A2               	movwf	(?_drive)
  4506  0777  01A3               	clrf	0+(?_drive)+01h
  4507  0778  01A4               	clrf	0+(?_drive)+02h
  4508  0779  1403               	bsf	status,0
  4509  077A  0DA4               	rlf	0+(?_drive)+02h,f
  4510  077B  3000               	movlw	(0)
  4511  077C  160A  118A  24DA   	fcall	_drive
              120A  118A         
  4512                           	line	587
  4513                           ;main.c: 587: waitFor(157,0,8);
  4514  0781  1283               	bcf	status, 5	;RP0=0, select bank0
  4515  0782  1303               	bcf	status, 6	;RP1=0, select bank0
  4516  0783  01A2               	clrf	(?_waitFor)
  4517  0784  3008               	movlw	(08h)
  4518  0785  00C3               	movwf	(??_wallFollow+0)+0
  4519  0786  0843               	movf	(??_wallFollow+0)+0,w
  4520  0787  00A3               	movwf	0+(?_waitFor)+01h
  4521  0788  309D               	movlw	(09Dh)
  4522  0789  160A  118A  2431   	fcall	_waitFor
              120A  118A         
  4523                           	line	588
  4524                           ;main.c: 588: drive(0, 0, 0, 0);
  4525  078E  1283               	bcf	status, 5	;RP0=0, select bank0
  4526  078F  1303               	bcf	status, 6	;RP1=0, select bank0
  4527  0790  01A2               	clrf	(?_drive)
  4528  0791  01A3               	clrf	0+(?_drive)+01h
  4529  0792  01A4               	clrf	0+(?_drive)+02h
  4530  0793  3000               	movlw	(0)
  4531  0794  160A  118A  24DA   	fcall	_drive
              120A  118A         
  4532                           	line	589
  4533                           	
  4534  0799                     l11394:	
  4535                           ;main.c: 589: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4536                           	opt asmopt_off
  4537  0799  301A               movlw  26
  4538  079A  1283               	bcf	status, 5	;RP0=0, select bank0
  4539  079B  1303               	bcf	status, 6	;RP1=0, select bank0
  4540  079C  00C5               movwf	((??_wallFollow+0)+0+2),f
  4541  079D  305E               movlw	94
  4542  079E  00C4               movwf	((??_wallFollow+0)+0+1),f
  4543  079F  3086               	movlw	134
  4544  07A0  00C3               movwf	((??_wallFollow+0)+0),f
  4545  07A1                     u5337:
  4546  07A1  0BC3               	decfsz	((??_wallFollow+0)+0),f
  4547  07A2  2FA1               	goto	u5337
  4548  07A3  0BC4               	decfsz	((??_wallFollow+0)+0+1),f
  4549  07A4  2FA1               	goto	u5337
  4550  07A5  0BC5               	decfsz	((??_wallFollow+0)+0+2),f
  4551  07A6  2FA1               	goto	u5337
  4552  07A7  0064               	clrwdt
  4553                           opt asmopt_on
  4554                           
  4555                           	line	590
  4556                           ;main.c: 590: }
  4557  07A8  2FF8               	goto	l6887
  4558                           	line	592
  4559                           	
  4560  07A9                     l6884:	
  4561                           	
  4562  07A9                     l11396:	
  4563                           ;main.c: 592: else if(distanceToWall < 36)
  4564  07A9  1283               	bcf	status, 5	;RP0=0, select bank0
  4565  07AA  1303               	bcf	status, 6	;RP1=0, select bank0
  4566  07AB  0847               	movf	(wallFollow@distanceToWall+1),w
  4567  07AC  3A80               	xorlw	80h
  4568  07AD  00FF               	movwf	btemp+1
  4569  07AE  3080               	movlw	(high(024h))^80h
  4570  07AF  027F               	subwf	btemp+1,w
  4571  07B0  1D03               	skipz
  4572  07B1  2FB4               	goto	u4815
  4573  07B2  3024               	movlw	low(024h)
  4574  07B3  0246               	subwf	(wallFollow@distanceToWall),w
  4575  07B4                     u4815:
  4576                           
  4577  07B4  1803               	skipnc
  4578  07B5  2FB7               	goto	u4811
  4579  07B6  2FB8               	goto	u4810
  4580  07B7                     u4811:
  4581  07B7  2FF8               	goto	l6887
  4582  07B8                     u4810:
  4583                           	line	594
  4584                           	
  4585  07B8                     l11398:	
  4586                           ;main.c: 593: {
  4587                           ;main.c: 594: drive(0, 50, 255, 255);
  4588  07B8  3032               	movlw	(032h)
  4589  07B9  1283               	bcf	status, 5	;RP0=0, select bank0
  4590  07BA  1303               	bcf	status, 6	;RP1=0, select bank0
  4591  07BB  00C3               	movwf	(??_wallFollow+0)+0
  4592  07BC  0843               	movf	(??_wallFollow+0)+0,w
  4593  07BD  00A2               	movwf	(?_drive)
  4594  07BE  30FF               	movlw	(0FFh)
  4595  07BF  00C4               	movwf	(??_wallFollow+1)+0
  4596  07C0  0844               	movf	(??_wallFollow+1)+0,w
  4597  07C1  00A3               	movwf	0+(?_drive)+01h
  4598  07C2  30FF               	movlw	(0FFh)
  4599  07C3  00C5               	movwf	(??_wallFollow+2)+0
  4600  07C4  0845               	movf	(??_wallFollow+2)+0,w
  4601  07C5  00A4               	movwf	0+(?_drive)+02h
  4602  07C6  3000               	movlw	(0)
  4603  07C7  160A  118A  24DA   	fcall	_drive
              120A  118A         
  4604                           	line	595
  4605                           ;main.c: 595: waitFor(157,255,0b11111000);
  4606  07CC  30FF               	movlw	(0FFh)
  4607  07CD  1283               	bcf	status, 5	;RP0=0, select bank0
  4608  07CE  1303               	bcf	status, 6	;RP1=0, select bank0
  4609  07CF  00C3               	movwf	(??_wallFollow+0)+0
  4610  07D0  0843               	movf	(??_wallFollow+0)+0,w
  4611  07D1  00A2               	movwf	(?_waitFor)
  4612  07D2  30F8               	movlw	(0F8h)
  4613  07D3  00C4               	movwf	(??_wallFollow+1)+0
  4614  07D4  0844               	movf	(??_wallFollow+1)+0,w
  4615  07D5  00A3               	movwf	0+(?_waitFor)+01h
  4616  07D6  309D               	movlw	(09Dh)
  4617  07D7  160A  118A  2431   	fcall	_waitFor
              120A  118A         
  4618                           	line	596
  4619                           ;main.c: 596: drive(0, 0, 0, 0);
  4620  07DC  1283               	bcf	status, 5	;RP0=0, select bank0
  4621  07DD  1303               	bcf	status, 6	;RP1=0, select bank0
  4622  07DE  01A2               	clrf	(?_drive)
  4623  07DF  01A3               	clrf	0+(?_drive)+01h
  4624  07E0  01A4               	clrf	0+(?_drive)+02h
  4625  07E1  3000               	movlw	(0)
  4626  07E2  160A  118A  24DA   	fcall	_drive
              120A  118A         
  4627                           	line	597
  4628                           	
  4629  07E7                     l11400:	
  4630                           ;main.c: 597: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4631                           	opt asmopt_off
  4632  07E7  301A               movlw  26
  4633  07E8  1283               	bcf	status, 5	;RP0=0, select bank0
  4634  07E9  1303               	bcf	status, 6	;RP1=0, select bank0
  4635  07EA  00C5               movwf	((??_wallFollow+0)+0+2),f
  4636  07EB  305E               movlw	94
  4637  07EC  00C4               movwf	((??_wallFollow+0)+0+1),f
  4638  07ED  3086               	movlw	134
  4639  07EE  00C3               movwf	((??_wallFollow+0)+0),f
  4640  07EF                     u5347:
  4641  07EF  0BC3               	decfsz	((??_wallFollow+0)+0),f
  4642  07F0  2FEF               	goto	u5347
  4643  07F1  0BC4               	decfsz	((??_wallFollow+0)+0+1),f
  4644  07F2  2FEF               	goto	u5347
  4645  07F3  0BC5               	decfsz	((??_wallFollow+0)+0+2),f
  4646  07F4  2FEF               	goto	u5347
  4647  07F5  0064               	clrwdt
  4648                           opt asmopt_on
  4649                           
  4650  07F6  2FF8               	goto	l6887
  4651                           	line	598
  4652                           	
  4653  07F7                     l6886:	
  4654  07F7  2FF8               	goto	l6887
  4655                           	line	599
  4656                           	
  4657  07F8                     l6885:	
  4658                           	
  4659  07F8                     l6887:	
  4660  07F8  0008               	return
  4661                           	opt stack 0
  4662                           GLOBAL	__end_of_wallFollow
  4663  07F9                     	__end_of_wallFollow:
  4664 ;; =============== function _wallFollow ends ============
  4665                           
  4666                           	signat	_wallFollow,88
  4667                           	global	_findWall
  4668                           psect	text1307,local,class=CODE,delta=2
  4669                           global __ptext1307
  4670  12B8                     __ptext1307:
  4671                           
  4672 ;; *************** function _findWall *****************
  4673 ;; Defined at:
  4674 ;;		line 557 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;		None               void
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0
  4691 ;;      Totals:         0       0       0       0       0
  4692 ;;Total ram usage:        0 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    5
  4695 ;; This function calls:
  4696 ;;		_readIR
  4697 ;; This function is called by:
  4698 ;;		_findWalls
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           psect	text1307
  4702                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  4703                           	line	557
  4704                           	global	__size_of_findWall
  4705  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  4706                           	
  4707  12B8                     _findWall:	
  4708                           	opt	stack 1
  4709                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4710                           	line	558
  4711                           	
  4712  12B8                     l11374:	
  4713                           ;main.c: 558: if(readIR() > 100)
  4714  12B8  160A  118A  2374   	fcall	_readIR
              160A  118A         
  4715  12BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4716  12BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4717  12BF  0840               	movf	(1+(?_readIR)),w
  4718  12C0  3A80               	xorlw	80h
  4719  12C1  00FF               	movwf	btemp+1
  4720  12C2  3080               	movlw	(high(065h))^80h
  4721  12C3  027F               	subwf	btemp+1,w
  4722  12C4  1D03               	skipz
  4723  12C5  2AC8               	goto	u4785
  4724  12C6  3065               	movlw	low(065h)
  4725  12C7  023F               	subwf	(0+(?_readIR)),w
  4726  12C8                     u4785:
  4727                           
  4728  12C8  1C03               	skipc
  4729  12C9  2ACB               	goto	u4781
  4730  12CA  2ACC               	goto	u4780
  4731  12CB                     u4781:
  4732  12CB  2AD0               	goto	l11382
  4733  12CC                     u4780:
  4734                           	line	559
  4735                           	
  4736  12CC                     l11376:	
  4737                           ;main.c: 559: return 0;
  4738  12CC  1003               	clrc
  4739                           	
  4740  12CD  2AD3               	goto	l6871
  4741                           	
  4742  12CE                     l11378:	
  4743  12CE  2AD3               	goto	l6871
  4744                           	
  4745  12CF                     l11380:	
  4746  12CF  2AD3               	goto	l6871
  4747                           	line	560
  4748                           	
  4749  12D0                     l6870:	
  4750                           	line	561
  4751                           	
  4752  12D0                     l11382:	
  4753                           ;main.c: 560: else
  4754                           ;main.c: 561: return 1;
  4755  12D0  1403               	setc
  4756                           	
  4757  12D1  2AD3               	goto	l6871
  4758                           	
  4759  12D2                     l11384:	
  4760  12D2  2AD3               	goto	l6871
  4761                           	
  4762  12D3                     l6872:	
  4763                           	line	562
  4764                           	
  4765  12D3                     l6871:	
  4766  12D3  0008               	return
  4767                           	opt stack 0
  4768                           GLOBAL	__end_of_findWall
  4769  12D4                     	__end_of_findWall:
  4770 ;; =============== function _findWall ends ============
  4771                           
  4772                           	signat	_findWall,88
  4773                           	global	_frontWallCorrect
  4774                           psect	text1308,local,class=CODE,delta=2
  4775                           global __ptext1308
  4776  0F53                     __ptext1308:
  4777                           
  4778 ;; *************** function _frontWallCorrect *****************
  4779 ;; Defined at:
  4780 ;;		line 326 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  distToWall      2   37[BANK0 ] int 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;		None               void
  4787 ;; Registers used:
  4788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4794 ;;      Params:         0       0       0       0       0
  4795 ;;      Locals:         0       2       0       0       0
  4796 ;;      Temps:          0       2       0       0       0
  4797 ;;      Totals:         0       4       0       0       0
  4798 ;;Total ram usage:        4 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    5
  4801 ;; This function calls:
  4802 ;;		_readIR
  4803 ;;		_drive
  4804 ;;		_clearSuccessfulDrive
  4805 ;; This function is called by:
  4806 ;;		_main
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           psect	text1308
  4810                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  4811                           	line	326
  4812                           	global	__size_of_frontWallCorrect
  4813  00AD                     	__size_of_frontWallCorrect	equ	__end_of_frontWallCorrect-_frontWallCorrect
  4814                           	
  4815  0F53                     _frontWallCorrect:	
  4816                           	opt	stack 2
  4817                           ; Regs used in _frontWallCorrect: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4818                           	line	328
  4819                           	
  4820  0F53                     l11348:	
  4821                           ;drive.c: 328: int distToWall = readIR();
  4822  0F53  160A  118A  2374   	fcall	_readIR
              120A  158A         
  4823  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  4824  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  4825  0F5A  0840               	movf	(1+(?_readIR)),w
  4826  0F5B  01C6               	clrf	(frontWallCorrect@distToWall+1)
  4827  0F5C  07C6               	addwf	(frontWallCorrect@distToWall+1)
  4828  0F5D  083F               	movf	(0+(?_readIR)),w
  4829  0F5E  01C5               	clrf	(frontWallCorrect@distToWall)
  4830  0F5F  07C5               	addwf	(frontWallCorrect@distToWall)
  4831                           
  4832                           	line	329
  4833                           	
  4834  0F60                     l11350:	
  4835                           ;drive.c: 329: if(distToWall < 45)
  4836  0F60  0846               	movf	(frontWallCorrect@distToWall+1),w
  4837  0F61  3A80               	xorlw	80h
  4838  0F62  00FF               	movwf	btemp+1
  4839  0F63  3080               	movlw	(high(02Dh))^80h
  4840  0F64  027F               	subwf	btemp+1,w
  4841  0F65  1D03               	skipz
  4842  0F66  2F69               	goto	u4745
  4843  0F67  302D               	movlw	low(02Dh)
  4844  0F68  0245               	subwf	(frontWallCorrect@distToWall),w
  4845  0F69                     u4745:
  4846                           
  4847  0F69  1803               	skipnc
  4848  0F6A  2F6C               	goto	u4741
  4849  0F6B  2F6D               	goto	u4740
  4850  0F6C                     u4741:
  4851  0F6C  2FAE               	goto	l11362
  4852  0F6D                     u4740:
  4853                           	line	331
  4854                           	
  4855  0F6D                     l11352:	
  4856                           ;drive.c: 330: {
  4857                           ;drive.c: 331: drive(255, 125, 128, 0);
  4858  0F6D  307D               	movlw	(07Dh)
  4859  0F6E  1283               	bcf	status, 5	;RP0=0, select bank0
  4860  0F6F  1303               	bcf	status, 6	;RP1=0, select bank0
  4861  0F70  00C3               	movwf	(??_frontWallCorrect+0)+0
  4862  0F71  0843               	movf	(??_frontWallCorrect+0)+0,w
  4863  0F72  00A2               	movwf	(?_drive)
  4864  0F73  3080               	movlw	(080h)
  4865  0F74  00C4               	movwf	(??_frontWallCorrect+1)+0
  4866  0F75  0844               	movf	(??_frontWallCorrect+1)+0,w
  4867  0F76  00A3               	movwf	0+(?_drive)+01h
  4868  0F77  01A4               	clrf	0+(?_drive)+02h
  4869  0F78  30FF               	movlw	(0FFh)
  4870  0F79  160A  118A  24DA   	fcall	_drive
              120A  158A         
  4871                           	line	332
  4872                           ;drive.c: 332: while(distToWall < 51)
  4873  0F7E  2F8D               	goto	l11356
  4874                           	
  4875  0F7F                     l5896:	
  4876                           	line	333
  4877                           	
  4878  0F7F                     l11354:	
  4879                           ;drive.c: 333: distToWall = readIR();
  4880  0F7F  160A  118A  2374   	fcall	_readIR
              120A  158A         
  4881  0F84  1283               	bcf	status, 5	;RP0=0, select bank0
  4882  0F85  1303               	bcf	status, 6	;RP1=0, select bank0
  4883  0F86  0840               	movf	(1+(?_readIR)),w
  4884  0F87  01C6               	clrf	(frontWallCorrect@distToWall+1)
  4885  0F88  07C6               	addwf	(frontWallCorrect@distToWall+1)
  4886  0F89  083F               	movf	(0+(?_readIR)),w
  4887  0F8A  01C5               	clrf	(frontWallCorrect@distToWall)
  4888  0F8B  07C5               	addwf	(frontWallCorrect@distToWall)
  4889                           
  4890  0F8C  2F8D               	goto	l11356
  4891                           	
  4892  0F8D                     l5895:	
  4893                           	line	332
  4894                           	
  4895  0F8D                     l11356:	
  4896  0F8D  1283               	bcf	status, 5	;RP0=0, select bank0
  4897  0F8E  1303               	bcf	status, 6	;RP1=0, select bank0
  4898  0F8F  0846               	movf	(frontWallCorrect@distToWall+1),w
  4899  0F90  3A80               	xorlw	80h
  4900  0F91  00FF               	movwf	btemp+1
  4901  0F92  3080               	movlw	(high(033h))^80h
  4902  0F93  027F               	subwf	btemp+1,w
  4903  0F94  1D03               	skipz
  4904  0F95  2F98               	goto	u4755
  4905  0F96  3033               	movlw	low(033h)
  4906  0F97  0245               	subwf	(frontWallCorrect@distToWall),w
  4907  0F98                     u4755:
  4908                           
  4909  0F98  1C03               	skipc
  4910  0F99  2F9B               	goto	u4751
  4911  0F9A  2F9C               	goto	u4750
  4912  0F9B                     u4751:
  4913  0F9B  2F7F               	goto	l11354
  4914  0F9C                     u4750:
  4915  0F9C  2F9D               	goto	l11358
  4916                           	
  4917  0F9D                     l5897:	
  4918                           	line	334
  4919                           	
  4920  0F9D                     l11358:	
  4921                           ;drive.c: 334: drive(0, 0, 0, 0);
  4922  0F9D  1283               	bcf	status, 5	;RP0=0, select bank0
  4923  0F9E  1303               	bcf	status, 6	;RP1=0, select bank0
  4924  0F9F  01A2               	clrf	(?_drive)
  4925  0FA0  01A3               	clrf	0+(?_drive)+01h
  4926  0FA1  01A4               	clrf	0+(?_drive)+02h
  4927  0FA2  3000               	movlw	(0)
  4928  0FA3  160A  118A  24DA   	fcall	_drive
              120A  158A         
  4929                           	line	335
  4930                           	
  4931  0FA8                     l11360:	
  4932                           ;drive.c: 335: clearSuccessfulDrive();
  4933  0FA8  120A  118A  27FE   	fcall	_clearSuccessfulDrive
              120A  158A         
  4934                           	line	336
  4935                           ;drive.c: 336: }
  4936  0FAD  2FFF               	goto	l5903
  4937                           	line	337
  4938                           	
  4939  0FAE                     l5894:	
  4940                           	
  4941  0FAE                     l11362:	
  4942                           ;drive.c: 337: else if(distToWall > 55)
  4943  0FAE  1283               	bcf	status, 5	;RP0=0, select bank0
  4944  0FAF  1303               	bcf	status, 6	;RP1=0, select bank0
  4945  0FB0  0846               	movf	(frontWallCorrect@distToWall+1),w
  4946  0FB1  3A80               	xorlw	80h
  4947  0FB2  00FF               	movwf	btemp+1
  4948  0FB3  3080               	movlw	(high(038h))^80h
  4949  0FB4  027F               	subwf	btemp+1,w
  4950  0FB5  1D03               	skipz
  4951  0FB6  2FB9               	goto	u4765
  4952  0FB7  3038               	movlw	low(038h)
  4953  0FB8  0245               	subwf	(frontWallCorrect@distToWall),w
  4954  0FB9                     u4765:
  4955                           
  4956  0FB9  1C03               	skipc
  4957  0FBA  2FBC               	goto	u4761
  4958  0FBB  2FBD               	goto	u4760
  4959  0FBC                     u4761:
  4960  0FBC  2FFF               	goto	l5903
  4961  0FBD                     u4760:
  4962                           	line	339
  4963                           	
  4964  0FBD                     l11364:	
  4965                           ;drive.c: 338: {
  4966                           ;drive.c: 339: drive(0, 250, 128, 0);
  4967  0FBD  30FA               	movlw	(0FAh)
  4968  0FBE  1283               	bcf	status, 5	;RP0=0, select bank0
  4969  0FBF  1303               	bcf	status, 6	;RP1=0, select bank0
  4970  0FC0  00C3               	movwf	(??_frontWallCorrect+0)+0
  4971  0FC1  0843               	movf	(??_frontWallCorrect+0)+0,w
  4972  0FC2  00A2               	movwf	(?_drive)
  4973  0FC3  3080               	movlw	(080h)
  4974  0FC4  00C4               	movwf	(??_frontWallCorrect+1)+0
  4975  0FC5  0844               	movf	(??_frontWallCorrect+1)+0,w
  4976  0FC6  00A3               	movwf	0+(?_drive)+01h
  4977  0FC7  01A4               	clrf	0+(?_drive)+02h
  4978  0FC8  3000               	movlw	(0)
  4979  0FC9  160A  118A  24DA   	fcall	_drive
              120A  158A         
  4980                           	line	340
  4981                           ;drive.c: 340: while(distToWall > 49)
  4982  0FCE  2FDD               	goto	l11368
  4983                           	
  4984  0FCF                     l5901:	
  4985                           	line	341
  4986                           	
  4987  0FCF                     l11366:	
  4988                           ;drive.c: 341: distToWall = readIR();
  4989  0FCF  160A  118A  2374   	fcall	_readIR
              120A  158A         
  4990  0FD4  1283               	bcf	status, 5	;RP0=0, select bank0
  4991  0FD5  1303               	bcf	status, 6	;RP1=0, select bank0
  4992  0FD6  0840               	movf	(1+(?_readIR)),w
  4993  0FD7  01C6               	clrf	(frontWallCorrect@distToWall+1)
  4994  0FD8  07C6               	addwf	(frontWallCorrect@distToWall+1)
  4995  0FD9  083F               	movf	(0+(?_readIR)),w
  4996  0FDA  01C5               	clrf	(frontWallCorrect@distToWall)
  4997  0FDB  07C5               	addwf	(frontWallCorrect@distToWall)
  4998                           
  4999  0FDC  2FDD               	goto	l11368
  5000                           	
  5001  0FDD                     l5900:	
  5002                           	line	340
  5003                           	
  5004  0FDD                     l11368:	
  5005  0FDD  1283               	bcf	status, 5	;RP0=0, select bank0
  5006  0FDE  1303               	bcf	status, 6	;RP1=0, select bank0
  5007  0FDF  0846               	movf	(frontWallCorrect@distToWall+1),w
  5008  0FE0  3A80               	xorlw	80h
  5009  0FE1  00FF               	movwf	btemp+1
  5010  0FE2  3080               	movlw	(high(032h))^80h
  5011  0FE3  027F               	subwf	btemp+1,w
  5012  0FE4  1D03               	skipz
  5013  0FE5  2FE8               	goto	u4775
  5014  0FE6  3032               	movlw	low(032h)
  5015  0FE7  0245               	subwf	(frontWallCorrect@distToWall),w
  5016  0FE8                     u4775:
  5017                           
  5018  0FE8  1803               	skipnc
  5019  0FE9  2FEB               	goto	u4771
  5020  0FEA  2FEC               	goto	u4770
  5021  0FEB                     u4771:
  5022  0FEB  2FCF               	goto	l11366
  5023  0FEC                     u4770:
  5024  0FEC  2FED               	goto	l11370
  5025                           	
  5026  0FED                     l5902:	
  5027                           	line	342
  5028                           	
  5029  0FED                     l11370:	
  5030                           ;drive.c: 342: drive(0, 0, 0, 0);
  5031  0FED  1283               	bcf	status, 5	;RP0=0, select bank0
  5032  0FEE  1303               	bcf	status, 6	;RP1=0, select bank0
  5033  0FEF  01A2               	clrf	(?_drive)
  5034  0FF0  01A3               	clrf	0+(?_drive)+01h
  5035  0FF1  01A4               	clrf	0+(?_drive)+02h
  5036  0FF2  3000               	movlw	(0)
  5037  0FF3  160A  118A  24DA   	fcall	_drive
              120A  158A         
  5038                           	line	343
  5039                           	
  5040  0FF8                     l11372:	
  5041                           ;drive.c: 343: clearSuccessfulDrive();
  5042  0FF8  120A  118A  27FE   	fcall	_clearSuccessfulDrive
              120A  158A         
  5043  0FFD  2FFF               	goto	l5903
  5044                           	line	344
  5045                           	
  5046  0FFE                     l5899:	
  5047  0FFE  2FFF               	goto	l5903
  5048                           	line	346
  5049                           	
  5050  0FFF                     l5898:	
  5051                           	
  5052  0FFF                     l5903:	
  5053  0FFF  0008               	return
  5054                           	opt stack 0
  5055                           GLOBAL	__end_of_frontWallCorrect
  5056  1000                     	__end_of_frontWallCorrect:
  5057 ;; =============== function _frontWallCorrect ends ============
  5058                           
  5059                           	signat	_frontWallCorrect,88
  5060                           	global	_driveForDistance
  5061                           psect	text1309,local,class=CODE,delta=2
  5062                           global __ptext1309
  5063  0478                     __ptext1309:
  5064                           
  5065 ;; *************** function _driveForDistance *****************
  5066 ;; Defined at:
  5067 ;;		line 32 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  moveDistance    2   12[BANK0 ] int 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  distance        2   18[BANK0 ] int 
  5072 ;;  deltaDistanc    2   16[BANK0 ] int 
  5073 ;;  cliff           1   23[BANK0 ] volatile unsigned char 
  5074 ;;  virtualWall     1   22[BANK0 ] volatile unsigned char 
  5075 ;;  low             1   21[BANK0 ] volatile unsigned char 
  5076 ;;  high            1   20[BANK0 ] volatile unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;		None               void
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       2       0       0       0
  5087 ;;      Locals:         0       8       0       0       0
  5088 ;;      Temps:          0       2       0       0       0
  5089 ;;      Totals:         0      12       0       0       0
  5090 ;;Total ram usage:       12 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    4
  5093 ;; This function calls:
  5094 ;;		_drive
  5095 ;;		_ser_putch
  5096 ;;		_ser_getch
  5097 ;;		_goReverse
  5098 ;;		_clearSuccessfulDrive
  5099 ;;		_turnRight90
  5100 ;;		_updateOrientation
  5101 ;;		_turnLeft90
  5102 ;;		_getCurrentY
  5103 ;;		_getCurrentX
  5104 ;;		_findFinalDestination
  5105 ;;		_setVirtualLocation
  5106 ;; This function is called by:
  5107 ;;		_goBackward
  5108 ;;		_goForward
  5109 ;;		_goLeft
  5110 ;;		_goRight
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           psect	text1309
  5114                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  5115                           	line	32
  5116                           	global	__size_of_driveForDistance
  5117  01CB                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  5118                           	
  5119  0478                     _driveForDistance:	
  5120                           	opt	stack 2
  5121                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5122                           	line	35
  5123                           	
  5124  0478                     l11258:	
  5125                           ;drive.c: 34: volatile char high, low, cliff, virtualWall;
  5126                           ;drive.c: 35: int deltaDistance = 0;
  5127  0478  1283               	bcf	status, 5	;RP0=0, select bank0
  5128  0479  1303               	bcf	status, 6	;RP1=0, select bank0
  5129  047A  01B0               	clrf	(driveForDistance@deltaDistance)
  5130  047B  01B1               	clrf	(driveForDistance@deltaDistance+1)
  5131                           	line	36
  5132                           ;drive.c: 36: int distance = 0;
  5133  047C  01B2               	clrf	(driveForDistance@distance)
  5134  047D  01B3               	clrf	(driveForDistance@distance+1)
  5135                           	line	38
  5136                           	
  5137  047E                     l11260:	
  5138                           ;drive.c: 38: moving = 1;
  5139  047E  1471               	bsf	(_moving/8),(_moving)&7
  5140                           	line	39
  5141                           	
  5142  047F                     l11262:	
  5143                           ;drive.c: 39: drive(0, 250, 128, 0);
  5144  047F  30FA               	movlw	(0FAh)
  5145  0480  00AE               	movwf	(??_driveForDistance+0)+0
  5146  0481  082E               	movf	(??_driveForDistance+0)+0,w
  5147  0482  00A2               	movwf	(?_drive)
  5148  0483  3080               	movlw	(080h)
  5149  0484  00AF               	movwf	(??_driveForDistance+1)+0
  5150  0485  082F               	movf	(??_driveForDistance+1)+0,w
  5151  0486  00A3               	movwf	0+(?_drive)+01h
  5152  0487  01A4               	clrf	0+(?_drive)+02h
  5153  0488  3000               	movlw	(0)
  5154  0489  160A  118A  24DA   	fcall	_drive
              120A  118A         
  5155                           	line	40
  5156                           	
  5157  048E                     l11264:	
  5158                           ;drive.c: 40: successfulDrive = 0;
  5159  048E  11F1               	bcf	(_successfulDrive/8),(_successfulDrive)&7
  5160                           	line	42
  5161                           ;drive.c: 42: while(moving)
  5162  048F  2E3D               	goto	l11346
  5163                           	
  5164  0490                     l5824:	
  5165                           	line	44
  5166                           	
  5167  0490                     l11266:	
  5168                           ;drive.c: 43: {
  5169                           ;drive.c: 44: if(distance >= 100)
  5170  0490  1283               	bcf	status, 5	;RP0=0, select bank0
  5171  0491  1303               	bcf	status, 6	;RP1=0, select bank0
  5172  0492  0833               	movf	(driveForDistance@distance+1),w
  5173  0493  3A80               	xorlw	80h
  5174  0494  00FF               	movwf	btemp+1
  5175  0495  3080               	movlw	(high(064h))^80h
  5176  0496  027F               	subwf	btemp+1,w
  5177  0497  1D03               	skipz
  5178  0498  2C9B               	goto	u4625
  5179  0499  3064               	movlw	low(064h)
  5180  049A  0232               	subwf	(driveForDistance@distance),w
  5181  049B                     u4625:
  5182                           
  5183  049B  1C03               	skipc
  5184  049C  2C9E               	goto	u4621
  5185  049D  2C9F               	goto	u4620
  5186  049E                     u4621:
  5187  049E  2D54               	goto	l11304
  5188  049F                     u4620:
  5189                           	line	47
  5190                           	
  5191  049F                     l11268:	
  5192                           ;drive.c: 45: {
  5193                           ;drive.c: 47: ser_putch(142);
  5194  049F  308E               	movlw	(08Eh)
  5195  04A0  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5196                           	line	48
  5197                           ;drive.c: 48: ser_putch(10);
  5198  04A5  300A               	movlw	(0Ah)
  5199  04A6  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5200                           	line	49
  5201                           ;drive.c: 49: cliff = ser_getch();
  5202  04AB  160A  118A  2352   	fcall	_ser_getch
              120A  118A         
  5203  04B0  1283               	bcf	status, 5	;RP0=0, select bank0
  5204  04B1  1303               	bcf	status, 6	;RP1=0, select bank0
  5205  04B2  00AE               	movwf	(??_driveForDistance+0)+0
  5206  04B3  082E               	movf	(??_driveForDistance+0)+0,w
  5207  04B4  00B7               	movwf	(driveForDistance@cliff)	;volatile
  5208                           	line	50
  5209                           	
  5210  04B5                     l11270:	
  5211                           ;drive.c: 50: if(cliff == 0)
  5212  04B5  08B7               	movf	(driveForDistance@cliff),f
  5213  04B6  1D03               	skipz	;volatile
  5214  04B7  2CB9               	goto	u4631
  5215  04B8  2CBA               	goto	u4630
  5216  04B9                     u4631:
  5217  04B9  2D09               	goto	l11282
  5218  04BA                     u4630:
  5219                           	line	52
  5220                           	
  5221  04BA                     l11272:	
  5222                           ;drive.c: 51: {
  5223                           ;drive.c: 52: ser_putch(142);
  5224  04BA  308E               	movlw	(08Eh)
  5225  04BB  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5226                           	line	53
  5227                           ;drive.c: 53: ser_putch(11);
  5228  04C0  300B               	movlw	(0Bh)
  5229  04C1  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5230                           	line	54
  5231                           ;drive.c: 54: cliff = ser_getch();
  5232  04C6  160A  118A  2352   	fcall	_ser_getch
              120A  118A         
  5233  04CB  1283               	bcf	status, 5	;RP0=0, select bank0
  5234  04CC  1303               	bcf	status, 6	;RP1=0, select bank0
  5235  04CD  00AE               	movwf	(??_driveForDistance+0)+0
  5236  04CE  082E               	movf	(??_driveForDistance+0)+0,w
  5237  04CF  00B7               	movwf	(driveForDistance@cliff)	;volatile
  5238                           	line	55
  5239                           	
  5240  04D0                     l11274:	
  5241                           ;drive.c: 55: if(cliff == 0)
  5242  04D0  08B7               	movf	(driveForDistance@cliff),f
  5243  04D1  1D03               	skipz	;volatile
  5244  04D2  2CD4               	goto	u4641
  5245  04D3  2CD5               	goto	u4640
  5246  04D4                     u4641:
  5247  04D4  2D09               	goto	l11282
  5248  04D5                     u4640:
  5249                           	line	57
  5250                           	
  5251  04D5                     l11276:	
  5252                           ;drive.c: 56: {
  5253                           ;drive.c: 57: ser_putch(142);
  5254  04D5  308E               	movlw	(08Eh)
  5255  04D6  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5256                           	line	58
  5257                           ;drive.c: 58: ser_putch(9);
  5258  04DB  3009               	movlw	(09h)
  5259  04DC  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5260                           	line	59
  5261                           ;drive.c: 59: cliff = ser_getch();
  5262  04E1  160A  118A  2352   	fcall	_ser_getch
              120A  118A         
  5263  04E6  1283               	bcf	status, 5	;RP0=0, select bank0
  5264  04E7  1303               	bcf	status, 6	;RP1=0, select bank0
  5265  04E8  00AE               	movwf	(??_driveForDistance+0)+0
  5266  04E9  082E               	movf	(??_driveForDistance+0)+0,w
  5267  04EA  00B7               	movwf	(driveForDistance@cliff)	;volatile
  5268                           	line	60
  5269                           	
  5270  04EB                     l11278:	
  5271                           ;drive.c: 60: if(cliff == 0)
  5272  04EB  08B7               	movf	(driveForDistance@cliff),f
  5273  04EC  1D03               	skipz	;volatile
  5274  04ED  2CEF               	goto	u4651
  5275  04EE  2CF0               	goto	u4650
  5276  04EF                     u4651:
  5277  04EF  2D09               	goto	l11282
  5278  04F0                     u4650:
  5279                           	line	62
  5280                           	
  5281  04F0                     l11280:	
  5282                           ;drive.c: 61: {
  5283                           ;drive.c: 62: ser_putch(142);
  5284  04F0  308E               	movlw	(08Eh)
  5285  04F1  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5286                           	line	63
  5287                           ;drive.c: 63: ser_putch(12);
  5288  04F6  300C               	movlw	(0Ch)
  5289  04F7  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5290                           	line	64
  5291                           ;drive.c: 64: cliff = ser_getch();
  5292  04FC  160A  118A  2352   	fcall	_ser_getch
              120A  118A         
  5293  0501  1283               	bcf	status, 5	;RP0=0, select bank0
  5294  0502  1303               	bcf	status, 6	;RP1=0, select bank0
  5295  0503  00AE               	movwf	(??_driveForDistance+0)+0
  5296  0504  082E               	movf	(??_driveForDistance+0)+0,w
  5297  0505  00B7               	movwf	(driveForDistance@cliff)	;volatile
  5298  0506  2D09               	goto	l11282
  5299                           	line	65
  5300                           	
  5301  0507                     l5828:	
  5302  0507  2D09               	goto	l11282
  5303                           	line	66
  5304                           	
  5305  0508                     l5827:	
  5306  0508  2D09               	goto	l11282
  5307                           	line	67
  5308                           	
  5309  0509                     l5826:	
  5310                           	line	68
  5311                           	
  5312  0509                     l11282:	
  5313                           ;drive.c: 65: }
  5314                           ;drive.c: 66: }
  5315                           ;drive.c: 67: }
  5316                           ;drive.c: 68: if(cliff != 0)
  5317  0509  0837               	movf	(driveForDistance@cliff),w	;volatile
  5318  050A  1D03               	skipz
  5319  050B  2D0D               	goto	u4660
  5320  050C  2D54               	goto	l11304
  5321  050D                     u4660:
  5322                           	line	70
  5323                           	
  5324  050D                     l11284:	
  5325                           ;drive.c: 69: {
  5326                           ;drive.c: 70: drive(0, 0, 0, 0);
  5327  050D  01A2               	clrf	(?_drive)
  5328  050E  01A3               	clrf	0+(?_drive)+01h
  5329  050F  01A4               	clrf	0+(?_drive)+02h
  5330  0510  3000               	movlw	(0)
  5331  0511  160A  118A  24DA   	fcall	_drive
              120A  118A         
  5332                           	line	71
  5333                           ;drive.c: 71: goReverse();
  5334  0516  120A  158A  20EB   	fcall	_goReverse
              120A  118A         
  5335                           	line	72
  5336                           	
  5337  051B                     l11286:	
  5338                           ;drive.c: 72: clearSuccessfulDrive();
  5339  051B  120A  118A  27FE   	fcall	_clearSuccessfulDrive
              120A  118A         
  5340                           	line	74
  5341                           	
  5342  0520                     l11288:	
  5343                           ;drive.c: 74: if(lastMove == LEFT)
  5344  0520  1283               	bcf	status, 5	;RP0=0, select bank0
  5345  0521  1303               	bcf	status, 6	;RP1=0, select bank0
  5346  0522  0859               	movf	(_lastMove),w	;volatile
  5347  0523  3A01               	xorlw	01h
  5348  0524  1D03               	skipz
  5349  0525  2D27               	goto	u4671
  5350  0526  2D28               	goto	u4670
  5351  0527                     u4671:
  5352  0527  2D37               	goto	l11296
  5353  0528                     u4670:
  5354                           	line	76
  5355                           	
  5356  0528                     l11290:	
  5357                           ;drive.c: 75: {
  5358                           ;drive.c: 76: somethingInTheWay = LEFT;
  5359  0528  01E5               	clrf	(_somethingInTheWay)	;volatile
  5360  0529  1403               	bsf	status,0
  5361  052A  0DE5               	rlf	(_somethingInTheWay),f	;volatile
  5362                           	line	77
  5363                           	
  5364  052B                     l11292:	
  5365                           ;drive.c: 77: turnRight90();
  5366  052B  160A  118A  2675   	fcall	_turnRight90
              120A  118A         
  5367                           	line	78
  5368                           	
  5369  0530                     l11294:	
  5370                           ;drive.c: 78: updateOrientation(RIGHT);
  5371  0530  3003               	movlw	(03h)
  5372  0531  160A  118A  2229   	fcall	_updateOrientation
              120A  118A         
  5373                           	line	79
  5374                           ;drive.c: 79: }
  5375  0536  2D51               	goto	l5831
  5376                           	line	80
  5377                           	
  5378  0537                     l5830:	
  5379                           	
  5380  0537                     l11296:	
  5381                           ;drive.c: 80: else if (lastMove == RIGHT)
  5382  0537  1283               	bcf	status, 5	;RP0=0, select bank0
  5383  0538  1303               	bcf	status, 6	;RP1=0, select bank0
  5384  0539  0859               	movf	(_lastMove),w	;volatile
  5385  053A  3A03               	xorlw	03h
  5386  053B  1D03               	skipz
  5387  053C  2D3E               	goto	u4681
  5388  053D  2D3F               	goto	u4680
  5389  053E                     u4681:
  5390  053E  2D4F               	goto	l5832
  5391  053F                     u4680:
  5392                           	line	82
  5393                           	
  5394  053F                     l11298:	
  5395                           ;drive.c: 81: {
  5396                           ;drive.c: 82: somethingInTheWay = RIGHT;
  5397  053F  3003               	movlw	(03h)
  5398  0540  00AE               	movwf	(??_driveForDistance+0)+0
  5399  0541  082E               	movf	(??_driveForDistance+0)+0,w
  5400  0542  00E5               	movwf	(_somethingInTheWay)	;volatile
  5401                           	line	83
  5402                           	
  5403  0543                     l11300:	
  5404                           ;drive.c: 83: turnLeft90();
  5405  0543  120A  158A  21D0   	fcall	_turnLeft90
              120A  118A         
  5406                           	line	84
  5407                           	
  5408  0548                     l11302:	
  5409                           ;drive.c: 84: updateOrientation(LEFT);
  5410  0548  3001               	movlw	(01h)
  5411  0549  160A  118A  2229   	fcall	_updateOrientation
              120A  118A         
  5412                           	line	85
  5413                           ;drive.c: 85: }
  5414  054E  2D51               	goto	l5831
  5415                           	line	86
  5416                           	
  5417  054F                     l5832:	
  5418                           	line	87
  5419                           ;drive.c: 86: else
  5420                           ;drive.c: 87: somethingInTheWay = FORWARD;
  5421  054F  01E5               	clrf	(_somethingInTheWay)	;volatile
  5422  0550  2D51               	goto	l5831
  5423                           	
  5424  0551                     l5833:	
  5425                           	
  5426  0551                     l5831:	
  5427                           	line	88
  5428                           ;drive.c: 88: moving = 0;
  5429  0551  1071               	bcf	(_moving/8),(_moving)&7
  5430  0552  2D54               	goto	l11304
  5431                           	line	89
  5432                           	
  5433  0553                     l5829:	
  5434  0553  2D54               	goto	l11304
  5435                           	line	90
  5436                           	
  5437  0554                     l5825:	
  5438                           	line	93
  5439                           	
  5440  0554                     l11304:	
  5441                           ;drive.c: 89: }
  5442                           ;drive.c: 90: }
  5443                           ;drive.c: 93: ser_putch(142);
  5444  0554  308E               	movlw	(08Eh)
  5445  0555  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5446                           	line	94
  5447                           ;drive.c: 94: ser_putch(13);
  5448  055A  300D               	movlw	(0Dh)
  5449  055B  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5450                           	line	95
  5451                           ;drive.c: 95: virtualWall = ser_getch();
  5452  0560  160A  118A  2352   	fcall	_ser_getch
              120A  118A         
  5453  0565  1283               	bcf	status, 5	;RP0=0, select bank0
  5454  0566  1303               	bcf	status, 6	;RP1=0, select bank0
  5455  0567  00AE               	movwf	(??_driveForDistance+0)+0
  5456  0568  082E               	movf	(??_driveForDistance+0)+0,w
  5457  0569  00B6               	movwf	(driveForDistance@virtualWall)	;volatile
  5458                           	line	96
  5459                           	
  5460  056A                     l11306:	
  5461                           ;drive.c: 96: if(virtualWall == 1)
  5462  056A  0836               	movf	(driveForDistance@virtualWall),w	;volatile
  5463  056B  3A01               	xorlw	01h
  5464  056C  1D03               	skipz
  5465  056D  2D6F               	goto	u4691
  5466  056E  2D70               	goto	u4690
  5467  056F                     u4691:
  5468  056F  2DE6               	goto	l11330
  5469  0570                     u4690:
  5470                           	line	98
  5471                           	
  5472  0570                     l11308:	
  5473                           ;drive.c: 97: {
  5474                           ;drive.c: 98: drive(0, 0, 0, 0);
  5475  0570  01A2               	clrf	(?_drive)
  5476  0571  01A3               	clrf	0+(?_drive)+01h
  5477  0572  01A4               	clrf	0+(?_drive)+02h
  5478  0573  3000               	movlw	(0)
  5479  0574  160A  118A  24DA   	fcall	_drive
              120A  118A         
  5480                           	line	99
  5481                           ;drive.c: 99: findFinalDestination(getCurrentX(),getCurrentY(), currentOrientation);
  5482  0579  160A  118A  21C9   	fcall	_getCurrentY
              120A  118A         
  5483  057E  1283               	bcf	status, 5	;RP0=0, select bank0
  5484  057F  1303               	bcf	status, 6	;RP1=0, select bank0
  5485  0580  00AE               	movwf	(??_driveForDistance+0)+0
  5486  0581  082E               	movf	(??_driveForDistance+0)+0,w
  5487  0582  00A4               	movwf	(?_findFinalDestination)
  5488  0583  0857               	movf	(_currentOrientation),w	;volatile
  5489  0584  00AF               	movwf	(??_driveForDistance+1)+0
  5490  0585  082F               	movf	(??_driveForDistance+1)+0,w
  5491  0586  00A5               	movwf	0+(?_findFinalDestination)+01h
  5492  0587  160A  118A  21C4   	fcall	_getCurrentX
              120A  118A         
  5493  058C  120A  118A  2643   	fcall	_findFinalDestination
              120A  118A         
  5494                           	line	100
  5495                           	
  5496  0591                     l11310:	
  5497                           ;drive.c: 100: setVirtualLocation(getCurrentX(), getCurrentY(), currentOrientation);
  5498  0591  160A  118A  21C9   	fcall	_getCurrentY
              120A  118A         
  5499  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  5500  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  5501  0598  00AE               	movwf	(??_driveForDistance+0)+0
  5502  0599  082E               	movf	(??_driveForDistance+0)+0,w
  5503  059A  00A0               	movwf	(?_setVirtualLocation)
  5504  059B  0857               	movf	(_currentOrientation),w	;volatile
  5505  059C  00AF               	movwf	(??_driveForDistance+1)+0
  5506  059D  082F               	movf	(??_driveForDistance+1)+0,w
  5507  059E  00A1               	movwf	0+(?_setVirtualLocation)+01h
  5508  059F  160A  118A  21C4   	fcall	_getCurrentX
              120A  118A         
  5509  05A4  160A  118A  2219   	fcall	_setVirtualLocation
              120A  118A         
  5510                           	line	101
  5511                           	
  5512  05A9                     l11312:	
  5513                           ;drive.c: 101: goReverse();
  5514  05A9  120A  158A  20EB   	fcall	_goReverse
              120A  118A         
  5515                           	line	102
  5516                           	
  5517  05AE                     l11314:	
  5518                           ;drive.c: 102: clearSuccessfulDrive();
  5519  05AE  120A  118A  27FE   	fcall	_clearSuccessfulDrive
              120A  118A         
  5520                           	line	104
  5521                           ;drive.c: 104: if(lastMove == LEFT)
  5522  05B3  1283               	bcf	status, 5	;RP0=0, select bank0
  5523  05B4  1303               	bcf	status, 6	;RP1=0, select bank0
  5524  05B5  0859               	movf	(_lastMove),w	;volatile
  5525  05B6  3A01               	xorlw	01h
  5526  05B7  1D03               	skipz
  5527  05B8  2DBA               	goto	u4701
  5528  05B9  2DBB               	goto	u4700
  5529  05BA                     u4701:
  5530  05BA  2DCA               	goto	l11322
  5531  05BB                     u4700:
  5532                           	line	106
  5533                           	
  5534  05BB                     l11316:	
  5535                           ;drive.c: 105: {
  5536                           ;drive.c: 106: somethingInTheWay = LEFT;
  5537  05BB  01E5               	clrf	(_somethingInTheWay)	;volatile
  5538  05BC  1403               	bsf	status,0
  5539  05BD  0DE5               	rlf	(_somethingInTheWay),f	;volatile
  5540                           	line	107
  5541                           	
  5542  05BE                     l11318:	
  5543                           ;drive.c: 107: turnRight90();
  5544  05BE  160A  118A  2675   	fcall	_turnRight90
              120A  118A         
  5545                           	line	108
  5546                           	
  5547  05C3                     l11320:	
  5548                           ;drive.c: 108: updateOrientation(RIGHT);
  5549  05C3  3003               	movlw	(03h)
  5550  05C4  160A  118A  2229   	fcall	_updateOrientation
              120A  118A         
  5551                           	line	109
  5552                           ;drive.c: 109: }
  5553  05C9  2DE4               	goto	l5836
  5554                           	line	110
  5555                           	
  5556  05CA                     l5835:	
  5557                           	
  5558  05CA                     l11322:	
  5559                           ;drive.c: 110: else if (lastMove == RIGHT)
  5560  05CA  1283               	bcf	status, 5	;RP0=0, select bank0
  5561  05CB  1303               	bcf	status, 6	;RP1=0, select bank0
  5562  05CC  0859               	movf	(_lastMove),w	;volatile
  5563  05CD  3A03               	xorlw	03h
  5564  05CE  1D03               	skipz
  5565  05CF  2DD1               	goto	u4711
  5566  05D0  2DD2               	goto	u4710
  5567  05D1                     u4711:
  5568  05D1  2DE2               	goto	l5837
  5569  05D2                     u4710:
  5570                           	line	112
  5571                           	
  5572  05D2                     l11324:	
  5573                           ;drive.c: 111: {
  5574                           ;drive.c: 112: somethingInTheWay = RIGHT;
  5575  05D2  3003               	movlw	(03h)
  5576  05D3  00AE               	movwf	(??_driveForDistance+0)+0
  5577  05D4  082E               	movf	(??_driveForDistance+0)+0,w
  5578  05D5  00E5               	movwf	(_somethingInTheWay)	;volatile
  5579                           	line	113
  5580                           	
  5581  05D6                     l11326:	
  5582                           ;drive.c: 113: turnLeft90();
  5583  05D6  120A  158A  21D0   	fcall	_turnLeft90
              120A  118A         
  5584                           	line	114
  5585                           	
  5586  05DB                     l11328:	
  5587                           ;drive.c: 114: updateOrientation(LEFT);
  5588  05DB  3001               	movlw	(01h)
  5589  05DC  160A  118A  2229   	fcall	_updateOrientation
              120A  118A         
  5590                           	line	115
  5591                           ;drive.c: 115: }
  5592  05E1  2DE4               	goto	l5836
  5593                           	line	116
  5594                           	
  5595  05E2                     l5837:	
  5596                           	line	117
  5597                           ;drive.c: 116: else
  5598                           ;drive.c: 117: somethingInTheWay = FORWARD;
  5599  05E2  01E5               	clrf	(_somethingInTheWay)	;volatile
  5600  05E3  2DE4               	goto	l5836
  5601                           	
  5602  05E4                     l5838:	
  5603                           	
  5604  05E4                     l5836:	
  5605                           	line	118
  5606                           ;drive.c: 118: moving = 0;
  5607  05E4  1071               	bcf	(_moving/8),(_moving)&7
  5608  05E5  2DE6               	goto	l11330
  5609                           	line	119
  5610                           	
  5611  05E6                     l5834:	
  5612                           	line	163
  5613                           	
  5614  05E6                     l11330:	
  5615                           ;drive.c: 119: }
  5616                           ;drive.c: 163: ser_putch(142);
  5617  05E6  308E               	movlw	(08Eh)
  5618  05E7  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5619                           	line	164
  5620                           ;drive.c: 164: ser_putch(19);
  5621  05EC  3013               	movlw	(013h)
  5622  05ED  160A  118A  2331   	fcall	_ser_putch
              120A  118A         
  5623                           	line	165
  5624                           ;drive.c: 165: high = ser_getch();
  5625  05F2  160A  118A  2352   	fcall	_ser_getch
              120A  118A         
  5626  05F7  1283               	bcf	status, 5	;RP0=0, select bank0
  5627  05F8  1303               	bcf	status, 6	;RP1=0, select bank0
  5628  05F9  00AE               	movwf	(??_driveForDistance+0)+0
  5629  05FA  082E               	movf	(??_driveForDistance+0)+0,w
  5630  05FB  00B4               	movwf	(driveForDistance@high)	;volatile
  5631                           	line	166
  5632                           ;drive.c: 166: low = ser_getch();
  5633  05FC  160A  118A  2352   	fcall	_ser_getch
              120A  118A         
  5634  0601  1283               	bcf	status, 5	;RP0=0, select bank0
  5635  0602  1303               	bcf	status, 6	;RP1=0, select bank0
  5636  0603  00AE               	movwf	(??_driveForDistance+0)+0
  5637  0604  082E               	movf	(??_driveForDistance+0)+0,w
  5638  0605  00B5               	movwf	(driveForDistance@low)	;volatile
  5639                           	line	167
  5640                           	
  5641  0606                     l11332:	
  5642                           ;drive.c: 167: deltaDistance = high*256 + low;
  5643  0606  0834               	movf	(driveForDistance@high),w	;volatile
  5644  0607  00AE               	movwf	(??_driveForDistance+0)+0
  5645  0608  01AF               	clrf	(??_driveForDistance+0)+0+1
  5646  0609  082E               	movf	(??_driveForDistance+0)+0,w
  5647  060A  00AF               	movwf	(??_driveForDistance+0)+1
  5648  060B  01AE               	clrf	(??_driveForDistance+0)+0
  5649  060C  0835               	movf	(driveForDistance@low),w	;volatile
  5650  060D  072E               	addwf	0+(??_driveForDistance+0)+0,w
  5651  060E  00B0               	movwf	(driveForDistance@deltaDistance)
  5652  060F  3000               	movlw	0
  5653  0610  1803               	skipnc
  5654  0611  3001               	movlw	1
  5655  0612  072F               	addwf	1+(??_driveForDistance+0)+0,w
  5656  0613  00B1               	movwf	1+(driveForDistance@deltaDistance)
  5657                           	line	168
  5658                           	
  5659  0614                     l11334:	
  5660                           ;drive.c: 168: distance += deltaDistance;
  5661  0614  0830               	movf	(driveForDistance@deltaDistance),w
  5662  0615  07B2               	addwf	(driveForDistance@distance),f
  5663  0616  1803               	skipnc
  5664  0617  0AB3               	incf	(driveForDistance@distance+1),f
  5665  0618  0831               	movf	(driveForDistance@deltaDistance+1),w
  5666  0619  07B3               	addwf	(driveForDistance@distance+1),f
  5667                           	line	169
  5668                           	
  5669  061A                     l11336:	
  5670                           ;drive.c: 169: if(distance >= moveDistance)
  5671  061A  0833               	movf	(driveForDistance@distance+1),w
  5672  061B  3A80               	xorlw	80h
  5673  061C  00AE               	movwf	(??_driveForDistance+0)+0
  5674  061D  082D               	movf	(driveForDistance@moveDistance+1),w
  5675  061E  3A80               	xorlw	80h
  5676  061F  022E               	subwf	(??_driveForDistance+0)+0,w
  5677  0620  1D03               	skipz
  5678  0621  2E24               	goto	u4725
  5679  0622  082C               	movf	(driveForDistance@moveDistance),w
  5680  0623  0232               	subwf	(driveForDistance@distance),w
  5681  0624                     u4725:
  5682                           
  5683  0624  1C03               	skipc
  5684  0625  2E27               	goto	u4721
  5685  0626  2E28               	goto	u4720
  5686  0627                     u4721:
  5687  0627  2E3D               	goto	l11346
  5688  0628                     u4720:
  5689                           	line	171
  5690                           	
  5691  0628                     l11338:	
  5692                           ;drive.c: 170: {
  5693                           ;drive.c: 171: drive(0, 0, 0, 0);
  5694  0628  1283               	bcf	status, 5	;RP0=0, select bank0
  5695  0629  1303               	bcf	status, 6	;RP1=0, select bank0
  5696  062A  01A2               	clrf	(?_drive)
  5697  062B  01A3               	clrf	0+(?_drive)+01h
  5698  062C  01A4               	clrf	0+(?_drive)+02h
  5699  062D  3000               	movlw	(0)
  5700  062E  160A  118A  24DA   	fcall	_drive
              120A  118A         
  5701                           	line	172
  5702                           	
  5703  0633                     l11340:	
  5704                           ;drive.c: 172: successfulDrive = 1;
  5705  0633  15F1               	bsf	(_successfulDrive/8),(_successfulDrive)&7
  5706                           	line	173
  5707                           	
  5708  0634                     l11342:	
  5709                           ;drive.c: 173: moving = 0;
  5710  0634  1071               	bcf	(_moving/8),(_moving)&7
  5711                           	line	174
  5712                           	
  5713  0635                     l11344:	
  5714                           ;drive.c: 174: somethingInTheWay = BACKWARD;
  5715  0635  3002               	movlw	(02h)
  5716  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  5717  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  5718  0638  00AE               	movwf	(??_driveForDistance+0)+0
  5719  0639  082E               	movf	(??_driveForDistance+0)+0,w
  5720  063A  00E5               	movwf	(_somethingInTheWay)	;volatile
  5721  063B  2E3D               	goto	l11346
  5722                           	line	175
  5723                           	
  5724  063C                     l5839:	
  5725  063C  2E3D               	goto	l11346
  5726                           	line	176
  5727                           	
  5728  063D                     l5823:	
  5729                           	line	42
  5730                           	
  5731  063D                     l11346:	
  5732  063D  1871               	btfsc	(_moving/8),(_moving)&7
  5733  063E  2E40               	goto	u4731
  5734  063F  2E41               	goto	u4730
  5735  0640                     u4731:
  5736  0640  2C90               	goto	l11266
  5737  0641                     u4730:
  5738  0641  2E42               	goto	l5841
  5739                           	
  5740  0642                     l5840:	
  5741                           	line	177
  5742                           	
  5743  0642                     l5841:	
  5744  0642  0008               	return
  5745                           	opt stack 0
  5746                           GLOBAL	__end_of_driveForDistance
  5747  0643                     	__end_of_driveForDistance:
  5748 ;; =============== function _driveForDistance ends ============
  5749                           
  5750                           	signat	_driveForDistance,4216
  5751                           	global	_updateLocation
  5752                           psect	text1310,local,class=CODE,delta=2
  5753                           global __ptext1310
  5754  0D81                     __ptext1310:
  5755                           
  5756 ;; *************** function _updateLocation *****************
  5757 ;; Defined at:
  5758 ;;		line 288 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;		None               void
  5765 ;; Registers used:
  5766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5772 ;;      Params:         0       0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0
  5774 ;;      Temps:          0       1       0       0       0
  5775 ;;      Totals:         0       1       0       0       0
  5776 ;;Total ram usage:        1 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    3
  5779 ;; This function calls:
  5780 ;;		_lcd_set_cursor
  5781 ;;		_lcd_write_data
  5782 ;;		_getOrientation
  5783 ;;		_lcd_write_1_digit_bcd
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           psect	text1310
  5789                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  5790                           	line	288
  5791                           	global	__size_of_updateLocation
  5792  0092                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  5793                           	
  5794  0D81                     _updateLocation:	
  5795                           	opt	stack 4
  5796                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5797                           	line	289
  5798                           	
  5799  0D81                     l11214:	
  5800                           ;main.c: 289: lcd_set_cursor(0x40);
  5801  0D81  3040               	movlw	(040h)
  5802  0D82  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  158A         
  5803                           	line	290
  5804                           ;main.c: 290: switch(getOrientation())
  5805  0D87  2DBE               	goto	l11234
  5806                           	line	292
  5807                           ;main.c: 291: {
  5808                           ;main.c: 292: case NORTH:
  5809                           	
  5810  0D88                     l6779:	
  5811                           	line	293
  5812                           	
  5813  0D88                     l11216:	
  5814                           ;main.c: 293: ++yCoord;
  5815  0D88  3001               	movlw	(01h)
  5816  0D89  1283               	bcf	status, 5	;RP0=0, select bank0
  5817  0D8A  1303               	bcf	status, 6	;RP1=0, select bank0
  5818  0D8B  00A4               	movwf	(??_updateLocation+0)+0
  5819  0D8C  0824               	movf	(??_updateLocation+0)+0,w
  5820  0D8D  07E9               	addwf	(_yCoord),f	;volatile
  5821                           	line	294
  5822                           	
  5823  0D8E                     l11218:	
  5824                           ;main.c: 294: lcd_write_data('N');
  5825  0D8E  304E               	movlw	(04Eh)
  5826  0D8F  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  5827                           	line	295
  5828                           ;main.c: 295: break;
  5829  0D94  2DD0               	goto	l6780
  5830                           	line	296
  5831                           ;main.c: 296: case SOUTH:
  5832                           	
  5833  0D95                     l6781:	
  5834                           	line	297
  5835                           	
  5836  0D95                     l11220:	
  5837                           ;main.c: 297: --yCoord;
  5838  0D95  30FF               	movlw	(-1)
  5839  0D96  1283               	bcf	status, 5	;RP0=0, select bank0
  5840  0D97  1303               	bcf	status, 6	;RP1=0, select bank0
  5841  0D98  00A4               	movwf	(??_updateLocation+0)+0
  5842  0D99  0824               	movf	(??_updateLocation+0)+0,w
  5843  0D9A  07E9               	addwf	(_yCoord),f	;volatile
  5844                           	line	298
  5845                           	
  5846  0D9B                     l11222:	
  5847                           ;main.c: 298: lcd_write_data('S');
  5848  0D9B  3053               	movlw	(053h)
  5849  0D9C  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  5850                           	line	299
  5851                           ;main.c: 299: break;
  5852  0DA1  2DD0               	goto	l6780
  5853                           	line	300
  5854                           ;main.c: 300: case EAST:
  5855                           	
  5856  0DA2                     l6782:	
  5857                           	line	301
  5858                           	
  5859  0DA2                     l11224:	
  5860                           ;main.c: 301: ++xCoord;
  5861  0DA2  3001               	movlw	(01h)
  5862  0DA3  1283               	bcf	status, 5	;RP0=0, select bank0
  5863  0DA4  1303               	bcf	status, 6	;RP1=0, select bank0
  5864  0DA5  00A4               	movwf	(??_updateLocation+0)+0
  5865  0DA6  0824               	movf	(??_updateLocation+0)+0,w
  5866  0DA7  07E6               	addwf	(_xCoord),f	;volatile
  5867                           	line	302
  5868                           	
  5869  0DA8                     l11226:	
  5870                           ;main.c: 302: lcd_write_data('E');
  5871  0DA8  3045               	movlw	(045h)
  5872  0DA9  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  5873                           	line	303
  5874                           ;main.c: 303: break;
  5875  0DAE  2DD0               	goto	l6780
  5876                           	line	304
  5877                           ;main.c: 304: case WEST:
  5878                           	
  5879  0DAF                     l6783:	
  5880                           	line	305
  5881                           	
  5882  0DAF                     l11228:	
  5883                           ;main.c: 305: --xCoord;
  5884  0DAF  30FF               	movlw	(-1)
  5885  0DB0  1283               	bcf	status, 5	;RP0=0, select bank0
  5886  0DB1  1303               	bcf	status, 6	;RP1=0, select bank0
  5887  0DB2  00A4               	movwf	(??_updateLocation+0)+0
  5888  0DB3  0824               	movf	(??_updateLocation+0)+0,w
  5889  0DB4  07E6               	addwf	(_xCoord),f	;volatile
  5890                           	line	306
  5891                           	
  5892  0DB5                     l11230:	
  5893                           ;main.c: 306: lcd_write_data('W');
  5894  0DB5  3057               	movlw	(057h)
  5895  0DB6  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  5896                           	line	307
  5897                           ;main.c: 307: break;
  5898  0DBB  2DD0               	goto	l6780
  5899                           	line	308
  5900                           ;main.c: 308: default:
  5901                           	
  5902  0DBC                     l6784:	
  5903                           	line	309
  5904                           ;main.c: 309: break;
  5905  0DBC  2DD0               	goto	l6780
  5906                           	line	310
  5907                           	
  5908  0DBD                     l11232:	
  5909                           ;main.c: 310: }
  5910  0DBD  2DD0               	goto	l6780
  5911                           	line	290
  5912                           	
  5913  0DBE                     l6778:	
  5914                           	
  5915  0DBE                     l11234:	
  5916  0DBE  160A  118A  21CE   	fcall	_getOrientation
              120A  158A         
  5917                           	; Switch size 1, requested type "space"
  5918                           ; Number of cases is 4, Range of values is 0 to 3
  5919                           ; switch strategies available:
  5920                           ; Name         Instructions Cycles
  5921                           ; simple_byte           13     7 (average)
  5922                           ; direct_byte           20     8 (fixed)
  5923                           ; jumptable            260     6 (fixed)
  5924                           ; rangetable             8     6 (fixed)
  5925                           ; spacedrange           14     9 (fixed)
  5926                           ; locatedrange           4     3 (fixed)
  5927                           ;	Chosen strategy is simple_byte
  5928                           
  5929                           	opt asmopt_off
  5930  0DC3  3A00               	xorlw	0^0	; case 0
  5931  0DC4  1903               	skipnz
  5932  0DC5  2DAF               	goto	l11228
  5933  0DC6  3A01               	xorlw	1^0	; case 1
  5934  0DC7  1903               	skipnz
  5935  0DC8  2D95               	goto	l11220
  5936  0DC9  3A03               	xorlw	2^1	; case 2
  5937  0DCA  1903               	skipnz
  5938  0DCB  2DA2               	goto	l11224
  5939  0DCC  3A01               	xorlw	3^2	; case 3
  5940  0DCD  1903               	skipnz
  5941  0DCE  2D88               	goto	l11216
  5942  0DCF  2DD0               	goto	l6780
  5943                           	opt asmopt_on
  5944                           
  5945                           	line	310
  5946                           	
  5947  0DD0                     l6780:	
  5948                           	line	312
  5949                           ;main.c: 312: if(xCoord < 0)
  5950  0DD0  1283               	bcf	status, 5	;RP0=0, select bank0
  5951  0DD1  1303               	bcf	status, 6	;RP1=0, select bank0
  5952  0DD2  1FE6               	btfss	(_xCoord),7	;volatile
  5953  0DD3  2DD5               	goto	u4581
  5954  0DD4  2DD6               	goto	u4580
  5955  0DD5                     u4581:
  5956  0DD5  2DD8               	goto	l11238
  5957  0DD6                     u4580:
  5958                           	line	314
  5959                           	
  5960  0DD6                     l11236:	
  5961                           ;main.c: 313: {
  5962                           ;main.c: 314: xCoord = 0;
  5963  0DD6  01E6               	clrf	(_xCoord)	;volatile
  5964  0DD7  2DD8               	goto	l11238
  5965                           	line	315
  5966                           	
  5967  0DD8                     l6785:	
  5968                           	line	316
  5969                           	
  5970  0DD8                     l11238:	
  5971                           ;main.c: 315: }
  5972                           ;main.c: 316: if(xCoord > 4)
  5973  0DD8  0866               	movf	(_xCoord),w	;volatile
  5974  0DD9  3A80               	xorlw	80h
  5975  0DDA  3E7B               	addlw	-((05h)^80h)
  5976  0DDB  1C03               	skipc
  5977  0DDC  2DDE               	goto	u4591
  5978  0DDD  2DDF               	goto	u4590
  5979  0DDE                     u4591:
  5980  0DDE  2DE4               	goto	l11242
  5981  0DDF                     u4590:
  5982                           	line	318
  5983                           	
  5984  0DDF                     l11240:	
  5985                           ;main.c: 317: {
  5986                           ;main.c: 318: xCoord = 4;
  5987  0DDF  3004               	movlw	(04h)
  5988  0DE0  00A4               	movwf	(??_updateLocation+0)+0
  5989  0DE1  0824               	movf	(??_updateLocation+0)+0,w
  5990  0DE2  00E6               	movwf	(_xCoord)	;volatile
  5991  0DE3  2DE4               	goto	l11242
  5992                           	line	319
  5993                           	
  5994  0DE4                     l6786:	
  5995                           	line	321
  5996                           	
  5997  0DE4                     l11242:	
  5998                           ;main.c: 319: }
  5999                           ;main.c: 321: if(yCoord < 0)
  6000  0DE4  1FE9               	btfss	(_yCoord),7	;volatile
  6001  0DE5  2DE7               	goto	u4601
  6002  0DE6  2DE8               	goto	u4600
  6003  0DE7                     u4601:
  6004  0DE7  2DEA               	goto	l11246
  6005  0DE8                     u4600:
  6006                           	line	323
  6007                           	
  6008  0DE8                     l11244:	
  6009                           ;main.c: 322: {
  6010                           ;main.c: 323: yCoord = 0;
  6011  0DE8  01E9               	clrf	(_yCoord)	;volatile
  6012  0DE9  2DEA               	goto	l11246
  6013                           	line	324
  6014                           	
  6015  0DEA                     l6787:	
  6016                           	line	325
  6017                           	
  6018  0DEA                     l11246:	
  6019                           ;main.c: 324: }
  6020                           ;main.c: 325: if(yCoord > 3)
  6021  0DEA  0869               	movf	(_yCoord),w	;volatile
  6022  0DEB  3A80               	xorlw	80h
  6023  0DEC  3E7C               	addlw	-((04h)^80h)
  6024  0DED  1C03               	skipc
  6025  0DEE  2DF0               	goto	u4611
  6026  0DEF  2DF1               	goto	u4610
  6027  0DF0                     u4611:
  6028  0DF0  2DF6               	goto	l11250
  6029  0DF1                     u4610:
  6030                           	line	327
  6031                           	
  6032  0DF1                     l11248:	
  6033                           ;main.c: 326: {
  6034                           ;main.c: 327: yCoord = 3;
  6035  0DF1  3003               	movlw	(03h)
  6036  0DF2  00A4               	movwf	(??_updateLocation+0)+0
  6037  0DF3  0824               	movf	(??_updateLocation+0)+0,w
  6038  0DF4  00E9               	movwf	(_yCoord)	;volatile
  6039  0DF5  2DF6               	goto	l11250
  6040                           	line	328
  6041                           	
  6042  0DF6                     l6788:	
  6043                           	line	330
  6044                           	
  6045  0DF6                     l11250:	
  6046                           ;main.c: 328: }
  6047                           ;main.c: 330: lcd_set_cursor(0x01);
  6048  0DF6  3001               	movlw	(01h)
  6049  0DF7  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  158A         
  6050                           	line	331
  6051                           	
  6052  0DFC                     l11252:	
  6053                           ;main.c: 331: lcd_write_1_digit_bcd(xCoord);
  6054  0DFC  1283               	bcf	status, 5	;RP0=0, select bank0
  6055  0DFD  1303               	bcf	status, 6	;RP1=0, select bank0
  6056  0DFE  0866               	movf	(_xCoord),w	;volatile
  6057  0DFF  160A  118A  2201   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  6058                           	line	332
  6059                           	
  6060  0E04                     l11254:	
  6061                           ;main.c: 332: lcd_set_cursor(0x03);
  6062  0E04  3003               	movlw	(03h)
  6063  0E05  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  158A         
  6064                           	line	333
  6065                           	
  6066  0E0A                     l11256:	
  6067                           ;main.c: 333: lcd_write_1_digit_bcd(yCoord);
  6068  0E0A  1283               	bcf	status, 5	;RP0=0, select bank0
  6069  0E0B  1303               	bcf	status, 6	;RP1=0, select bank0
  6070  0E0C  0869               	movf	(_yCoord),w	;volatile
  6071  0E0D  160A  118A  2201   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  6072                           	line	334
  6073                           	
  6074  0E12                     l6789:	
  6075  0E12  0008               	return
  6076                           	opt stack 0
  6077                           GLOBAL	__end_of_updateLocation
  6078  0E13                     	__end_of_updateLocation:
  6079 ;; =============== function _updateLocation ends ============
  6080                           
  6081                           	signat	_updateLocation,88
  6082                           	global	_lookForVictim
  6083                           psect	text1311,local,class=CODE,delta=2
  6084                           global __ptext1311
  6085  0C66                     __ptext1311:
  6086                           
  6087 ;; *************** function _lookForVictim *****************
  6088 ;; Defined at:
  6089 ;;		line 174 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  victim          1    7[BANK0 ] unsigned char 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;		None               void
  6096 ;; Registers used:
  6097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6103 ;;      Params:         0       0       0       0       0
  6104 ;;      Locals:         0       1       0       0       0
  6105 ;;      Temps:          0       3       0       0       0
  6106 ;;      Totals:         0       4       0       0       0
  6107 ;;Total ram usage:        4 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    3
  6110 ;; This function calls:
  6111 ;;		_ser_putch
  6112 ;;		_ser_getch
  6113 ;;		_play_iCreate_song
  6114 ;;		_lcd_set_cursor
  6115 ;;		_lcd_write_data
  6116 ;;		_getVictimZone
  6117 ;;		_lcd_write_1_digit_bcd
  6118 ;; This function is called by:
  6119 ;;		_main
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           psect	text1311
  6123                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  6124                           	line	174
  6125                           	global	__size_of_lookForVictim
  6126  008A                     	__size_of_lookForVictim	equ	__end_of_lookForVictim-_lookForVictim
  6127                           	
  6128  0C66                     _lookForVictim:	
  6129                           	opt	stack 4
  6130                           ; Regs used in _lookForVictim: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6131                           	line	175
  6132                           	
  6133  0C66                     l11182:	
  6134                           ;main.c: 175: ser_putch(142);
  6135  0C66  308E               	movlw	(08Eh)
  6136  0C67  160A  118A  2331   	fcall	_ser_putch
              120A  158A         
  6137                           	line	176
  6138                           ;main.c: 176: ser_putch(17);
  6139  0C6C  3011               	movlw	(011h)
  6140  0C6D  160A  118A  2331   	fcall	_ser_putch
              120A  158A         
  6141                           	line	177
  6142                           ;main.c: 177: char victim = ser_getch();
  6143  0C72  160A  118A  2352   	fcall	_ser_getch
              120A  158A         
  6144  0C77  1283               	bcf	status, 5	;RP0=0, select bank0
  6145  0C78  1303               	bcf	status, 6	;RP1=0, select bank0
  6146  0C79  00A4               	movwf	(??_lookForVictim+0)+0
  6147  0C7A  0824               	movf	(??_lookForVictim+0)+0,w
  6148  0C7B  00A7               	movwf	(lookForVictim@victim)
  6149                           	line	179
  6150                           	
  6151  0C7C                     l11184:	
  6152                           ;main.c: 179: if(victim > 241 && victim != 255)
  6153  0C7C  30F2               	movlw	(0F2h)
  6154  0C7D  0227               	subwf	(lookForVictim@victim),w
  6155  0C7E  1C03               	skipc
  6156  0C7F  2C81               	goto	u4551
  6157  0C80  2C82               	goto	u4550
  6158  0C81                     u4551:
  6159  0C81  2CEF               	goto	l6757
  6160  0C82                     u4550:
  6161                           	
  6162  0C82                     l11186:	
  6163  0C82  0827               	movf	(lookForVictim@victim),w
  6164  0C83  3AFF               	xorlw	0FFh
  6165  0C84  1903               	skipnz
  6166  0C85  2C87               	goto	u4561
  6167  0C86  2C88               	goto	u4560
  6168  0C87                     u4561:
  6169  0C87  2CEF               	goto	l6757
  6170  0C88                     u4560:
  6171                           	line	181
  6172                           	
  6173  0C88                     l11188:	
  6174                           ;main.c: 180: {
  6175                           ;main.c: 181: if(goingHome)
  6176  0C88  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  6177  0C89  2C8B               	goto	u4571
  6178  0C8A  2C8C               	goto	u4570
  6179  0C8B                     u4571:
  6180  0C8B  2CC8               	goto	l11206
  6181  0C8C                     u4570:
  6182                           	line	183
  6183                           	
  6184  0C8C                     l11190:	
  6185                           ;main.c: 182: {
  6186                           ;main.c: 183: _delay((unsigned long)((1000)*(20000000/4000.0)));
  6187                           	opt asmopt_off
  6188  0C8C  301A               movlw  26
  6189  0C8D  00A6               movwf	((??_lookForVictim+0)+0+2),f
  6190  0C8E  305E               movlw	94
  6191  0C8F  00A5               movwf	((??_lookForVictim+0)+0+1),f
  6192  0C90  3086               	movlw	134
  6193  0C91  00A4               movwf	((??_lookForVictim+0)+0),f
  6194  0C92                     u5357:
  6195  0C92  0BA4               	decfsz	((??_lookForVictim+0)+0),f
  6196  0C93  2C92               	goto	u5357
  6197  0C94  0BA5               	decfsz	((??_lookForVictim+0)+0+1),f
  6198  0C95  2C92               	goto	u5357
  6199  0C96  0BA6               	decfsz	((??_lookForVictim+0)+0+2),f
  6200  0C97  2C92               	goto	u5357
  6201  0C98  0064               	clrwdt
  6202                           opt asmopt_on
  6203                           
  6204                           	line	184
  6205                           	
  6206  0C99                     l11192:	
  6207                           ;main.c: 184: play_iCreate_song(3);
  6208  0C99  3003               	movlw	(03h)
  6209  0C9A  160A  118A  223A   	fcall	_play_iCreate_song
              120A  158A         
  6210                           	line	185
  6211                           	
  6212  0C9F                     l11194:	
  6213                           ;main.c: 185: _delay((unsigned long)((500)*(20000000/4000.0)));
  6214                           	opt asmopt_off
  6215  0C9F  300D               movlw  13
  6216  0CA0  1283               	bcf	status, 5	;RP0=0, select bank0
  6217  0CA1  1303               	bcf	status, 6	;RP1=0, select bank0
  6218  0CA2  00A6               movwf	((??_lookForVictim+0)+0+2),f
  6219  0CA3  30AF               movlw	175
  6220  0CA4  00A5               movwf	((??_lookForVictim+0)+0+1),f
  6221  0CA5  30C1               	movlw	193
  6222  0CA6  00A4               movwf	((??_lookForVictim+0)+0),f
  6223  0CA7                     u5367:
  6224  0CA7  0BA4               	decfsz	((??_lookForVictim+0)+0),f
  6225  0CA8  2CA7               	goto	u5367
  6226  0CA9  0BA5               	decfsz	((??_lookForVictim+0)+0+1),f
  6227  0CAA  2CA7               	goto	u5367
  6228  0CAB  0BA6               	decfsz	((??_lookForVictim+0)+0+2),f
  6229  0CAC  2CA7               	goto	u5367
  6230  0CAD  0064               	clrwdt
  6231                           opt asmopt_on
  6232                           
  6233                           	line	186
  6234                           	
  6235  0CAE                     l11196:	
  6236                           ;main.c: 186: victimZone = 0;
  6237  0CAE  1283               	bcf	status, 5	;RP0=0, select bank0
  6238  0CAF  1303               	bcf	status, 6	;RP1=0, select bank0
  6239  0CB0  01E1               	clrf	(_victimZone)	;volatile
  6240                           	line	187
  6241                           	
  6242  0CB1                     l11198:	
  6243                           ;main.c: 187: lcd_set_cursor(0x09);
  6244  0CB1  3009               	movlw	(09h)
  6245  0CB2  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  158A         
  6246                           	line	188
  6247                           	
  6248  0CB7                     l11200:	
  6249                           ;main.c: 188: lcd_write_data('V');
  6250  0CB7  3056               	movlw	(056h)
  6251  0CB8  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  6252                           	line	189
  6253                           	
  6254  0CBD                     l11202:	
  6255                           ;main.c: 189: xVictim = xCoord;
  6256  0CBD  1283               	bcf	status, 5	;RP0=0, select bank0
  6257  0CBE  1303               	bcf	status, 6	;RP1=0, select bank0
  6258  0CBF  0866               	movf	(_xCoord),w	;volatile
  6259  0CC0  00A4               	movwf	(??_lookForVictim+0)+0
  6260  0CC1  0824               	movf	(??_lookForVictim+0)+0,w
  6261  0CC2  00E7               	movwf	(_xVictim)	;volatile
  6262                           	line	190
  6263                           	
  6264  0CC3                     l11204:	
  6265                           ;main.c: 190: yVictim = yCoord;
  6266  0CC3  0869               	movf	(_yCoord),w	;volatile
  6267  0CC4  00A4               	movwf	(??_lookForVictim+0)+0
  6268  0CC5  0824               	movf	(??_lookForVictim+0)+0,w
  6269  0CC6  00EA               	movwf	(_yVictim)	;volatile
  6270                           	line	191
  6271                           ;main.c: 191: }
  6272  0CC7  2CEF               	goto	l6757
  6273                           	line	192
  6274                           	
  6275  0CC8                     l6755:	
  6276                           	line	194
  6277                           	
  6278  0CC8                     l11206:	
  6279                           ;main.c: 192: else
  6280                           ;main.c: 193: {
  6281                           ;main.c: 194: xVictim = xCoord;
  6282  0CC8  0866               	movf	(_xCoord),w	;volatile
  6283  0CC9  00A4               	movwf	(??_lookForVictim+0)+0
  6284  0CCA  0824               	movf	(??_lookForVictim+0)+0,w
  6285  0CCB  00E7               	movwf	(_xVictim)	;volatile
  6286                           	line	195
  6287                           ;main.c: 195: yVictim = yCoord;
  6288  0CCC  0869               	movf	(_yCoord),w	;volatile
  6289  0CCD  00A4               	movwf	(??_lookForVictim+0)+0
  6290  0CCE  0824               	movf	(??_lookForVictim+0)+0,w
  6291  0CCF  00EA               	movwf	(_yVictim)	;volatile
  6292                           	line	196
  6293                           	
  6294  0CD0                     l11208:	
  6295                           ;main.c: 196: victimZone = getVictimZone(xCoord, yCoord);
  6296  0CD0  0869               	movf	(_yCoord),w	;volatile
  6297  0CD1  00A4               	movwf	(??_lookForVictim+0)+0
  6298  0CD2  0824               	movf	(??_lookForVictim+0)+0,w
  6299  0CD3  00A0               	movwf	(?_getVictimZone)
  6300  0CD4  0866               	movf	(_xCoord),w	;volatile
  6301  0CD5  120A  158A  2368   	fcall	_getVictimZone
              120A  158A         
  6302  0CDA  1283               	bcf	status, 5	;RP0=0, select bank0
  6303  0CDB  1303               	bcf	status, 6	;RP1=0, select bank0
  6304  0CDC  00A5               	movwf	(??_lookForVictim+1)+0
  6305  0CDD  0825               	movf	(??_lookForVictim+1)+0,w
  6306  0CDE  00E1               	movwf	(_victimZone)	;volatile
  6307                           	line	197
  6308                           	
  6309  0CDF                     l11210:	
  6310                           ;main.c: 197: lcd_set_cursor(0x08);
  6311  0CDF  3008               	movlw	(08h)
  6312  0CE0  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  158A         
  6313                           	line	198
  6314                           	
  6315  0CE5                     l11212:	
  6316                           ;main.c: 198: lcd_write_1_digit_bcd(victimZone);
  6317  0CE5  1283               	bcf	status, 5	;RP0=0, select bank0
  6318  0CE6  1303               	bcf	status, 6	;RP1=0, select bank0
  6319  0CE7  0861               	movf	(_victimZone),w	;volatile
  6320  0CE8  160A  118A  2201   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  6321  0CED  2CEF               	goto	l6757
  6322                           	line	199
  6323                           	
  6324  0CEE                     l6756:	
  6325  0CEE  2CEF               	goto	l6757
  6326                           	line	200
  6327                           	
  6328  0CEF                     l6754:	
  6329                           	line	201
  6330                           	
  6331  0CEF                     l6757:	
  6332  0CEF  0008               	return
  6333                           	opt stack 0
  6334                           GLOBAL	__end_of_lookForVictim
  6335  0CF0                     	__end_of_lookForVictim:
  6336 ;; =============== function _lookForVictim ends ============
  6337                           
  6338                           	signat	_lookForVictim,88
  6339                           	global	_checkForFinalDestination
  6340                           psect	text1312,local,class=CODE,delta=2
  6341                           global __ptext1312
  6342  15BF                     __ptext1312:
  6343                           
  6344 ;; *************** function _checkForFinalDestination *****************
  6345 ;; Defined at:
  6346 ;;		line 163 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;		None               void
  6353 ;; Registers used:
  6354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6360 ;;      Params:         0       0       0       0       0
  6361 ;;      Locals:         0       0       0       0       0
  6362 ;;      Temps:          0       2       0       0       0
  6363 ;;      Totals:         0       2       0       0       0
  6364 ;;Total ram usage:        2 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    3
  6367 ;; This function calls:
  6368 ;;		_getFinalX
  6369 ;;		_getFinalY
  6370 ;;		_play_iCreate_song
  6371 ;;		_lcd_set_cursor
  6372 ;;		_lcd_write_data
  6373 ;; This function is called by:
  6374 ;;		_main
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           psect	text1312
  6378                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  6379                           	line	163
  6380                           	global	__size_of_checkForFinalDestination
  6381  003B                     	__size_of_checkForFinalDestination	equ	__end_of_checkForFinalDestination-_checkForFinal
                                 Destination
  6382                           	
  6383  15BF                     _checkForFinalDestination:	
  6384                           	opt	stack 4
  6385                           ; Regs used in _checkForFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6386                           	line	164
  6387                           	
  6388  15BF                     l11170:	
  6389                           ;main.c: 164: if((xCoord == getFinalX()) && (yCoord == getFinalY()))
  6390  15BF  1283               	bcf	status, 5	;RP0=0, select bank0
  6391  15C0  1303               	bcf	status, 6	;RP1=0, select bank0
  6392  15C1  0866               	movf	(_xCoord),w	;volatile
  6393  15C2  00A4               	movwf	(??_checkForFinalDestination+0)+0
  6394  15C3  01A5               	clrf	(??_checkForFinalDestination+0)+0+1
  6395  15C4  1BA4               	btfsc	(??_checkForFinalDestination+0)+0,7
  6396  15C5  03A5               	decf	(??_checkForFinalDestination+0)+0+1,f
  6397  15C6  160A  118A  21BA   	fcall	_getFinalX
              160A  118A         
  6398  15CB  1283               	bcf	status, 5	;RP0=0, select bank0
  6399  15CC  1303               	bcf	status, 6	;RP1=0, select bank0
  6400  15CD  0624               	xorwf	0+(??_checkForFinalDestination+0)+0,w
  6401  15CE  0425               	iorwf	1+(??_checkForFinalDestination+0)+0,w
  6402  15CF  1D03               	skipz
  6403  15D0  2DD2               	goto	u4531
  6404  15D1  2DD3               	goto	u4530
  6405  15D2                     u4531:
  6406  15D2  2DF9               	goto	l6751
  6407  15D3                     u4530:
  6408                           	
  6409  15D3                     l11172:	
  6410  15D3  0869               	movf	(_yCoord),w	;volatile
  6411  15D4  00A4               	movwf	(??_checkForFinalDestination+0)+0
  6412  15D5  01A5               	clrf	(??_checkForFinalDestination+0)+0+1
  6413  15D6  1BA4               	btfsc	(??_checkForFinalDestination+0)+0,7
  6414  15D7  03A5               	decf	(??_checkForFinalDestination+0)+0+1,f
  6415  15D8  160A  118A  21BF   	fcall	_getFinalY
              160A  118A         
  6416  15DD  1283               	bcf	status, 5	;RP0=0, select bank0
  6417  15DE  1303               	bcf	status, 6	;RP1=0, select bank0
  6418  15DF  0624               	xorwf	0+(??_checkForFinalDestination+0)+0,w
  6419  15E0  0425               	iorwf	1+(??_checkForFinalDestination+0)+0,w
  6420  15E1  1D03               	skipz
  6421  15E2  2DE4               	goto	u4541
  6422  15E3  2DE5               	goto	u4540
  6423  15E4                     u4541:
  6424  15E4  2DF9               	goto	l6751
  6425  15E5                     u4540:
  6426                           	line	166
  6427                           	
  6428  15E5                     l11174:	
  6429                           ;main.c: 165: {
  6430                           ;main.c: 166: play_iCreate_song(2);
  6431  15E5  3002               	movlw	(02h)
  6432  15E6  160A  118A  223A   	fcall	_play_iCreate_song
              160A  118A         
  6433                           	line	167
  6434                           	
  6435  15EB                     l11176:	
  6436                           ;main.c: 167: goingHome = 1;
  6437  15EB  16F0               	bsf	(_goingHome/8),(_goingHome)&7
  6438                           	line	168
  6439                           	
  6440  15EC                     l11178:	
  6441                           ;main.c: 168: lcd_set_cursor(0x06);
  6442  15EC  3006               	movlw	(06h)
  6443  15ED  160A  118A  21F6   	fcall	_lcd_set_cursor
              160A  118A         
  6444                           	line	169
  6445                           	
  6446  15F2                     l11180:	
  6447                           ;main.c: 169: lcd_write_data('R');
  6448  15F2  3052               	movlw	(052h)
  6449  15F3  160A  118A  224C   	fcall	_lcd_write_data
              160A  118A         
  6450  15F8  2DF9               	goto	l6751
  6451                           	line	170
  6452                           	
  6453  15F9                     l6750:	
  6454                           	line	171
  6455                           	
  6456  15F9                     l6751:	
  6457  15F9  0008               	return
  6458                           	opt stack 0
  6459                           GLOBAL	__end_of_checkForFinalDestination
  6460  15FA                     	__end_of_checkForFinalDestination:
  6461 ;; =============== function _checkForFinalDestination ends ============
  6462                           
  6463                           	signat	_checkForFinalDestination,88
  6464                           	global	_init
  6465                           psect	text1313,local,class=CODE,delta=2
  6466                           global __ptext1313
  6467  154A                     __ptext1313:
  6468                           
  6469 ;; *************** function _init *****************
  6470 ;; Defined at:
  6471 ;;		line 124 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;		None               void
  6478 ;; Registers used:
  6479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6485 ;;      Params:         0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0
  6488 ;;      Totals:         0       0       0       0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    4
  6492 ;; This function calls:
  6493 ;;		_init_adc
  6494 ;;		_lcd_init
  6495 ;;		_ser_init
  6496 ;;		_initIRobot
  6497 ;;		_initSongs
  6498 ;; This function is called by:
  6499 ;;		_main
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           psect	text1313
  6503                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  6504                           	line	124
  6505                           	global	__size_of_init
  6506  003A                     	__size_of_init	equ	__end_of_init-_init
  6507                           	
  6508  154A                     _init:	
  6509                           	opt	stack 3
  6510                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6511                           	line	125
  6512                           	
  6513  154A                     l11136:	
  6514                           ;main.c: 125: start.pressed = 0;
  6515  154A  1283               	bcf	status, 5	;RP0=0, select bank0
  6516  154B  1303               	bcf	status, 6	;RP1=0, select bank0
  6517  154C  01CE               	clrf	(_start)
  6518                           	line	126
  6519                           	
  6520  154D                     l11138:	
  6521                           ;main.c: 126: start.released = 1;
  6522  154D  01CF               	clrf	0+(_start)+01h
  6523  154E  1403               	bsf	status,0
  6524  154F  0DCF               	rlf	0+(_start)+01h,f
  6525                           	line	127
  6526                           	
  6527  1550                     l11140:	
  6528                           ;main.c: 127: eepromSerial.pressed = 0;
  6529  1550  01CB               	clrf	(_eepromSerial)
  6530                           	line	128
  6531                           ;main.c: 128: eepromSerial.released = 1;
  6532  1551  01CC               	clrf	0+(_eepromSerial)+01h
  6533  1552  1403               	bsf	status,0
  6534  1553  0DCC               	rlf	0+(_eepromSerial)+01h,f
  6535                           	line	130
  6536                           	
  6537  1554                     l11142:	
  6538                           ;main.c: 130: init_adc();
  6539  1554  160A  118A  2286   	fcall	_init_adc
              160A  118A         
  6540                           	line	131
  6541                           	
  6542  1559                     l11144:	
  6543                           ;main.c: 131: lcd_init();
  6544  1559  160A  118A  2483   	fcall	_lcd_init
              160A  118A         
  6545                           	line	133
  6546                           	
  6547  155E                     l11146:	
  6548                           ;main.c: 133: TRISB = 0b00000011;
  6549  155E  3003               	movlw	(03h)
  6550  155F  1683               	bsf	status, 5	;RP0=1, select bank1
  6551  1560  1303               	bcf	status, 6	;RP1=0, select bank1
  6552  1561  0086               	movwf	(134)^080h	;volatile
  6553                           	line	136
  6554                           	
  6555  1562                     l11148:	
  6556                           ;main.c: 136: OPTION_REG = 0b00000100;
  6557  1562  3004               	movlw	(04h)
  6558  1563  0081               	movwf	(129)^080h	;volatile
  6559                           	line	138
  6560                           	
  6561  1564                     l11150:	
  6562                           ;main.c: 138: TMR0IE = 1;
  6563  1564  168B               	bsf	(93/8),(93)&7
  6564                           	line	139
  6565                           	
  6566  1565                     l11152:	
  6567                           ;main.c: 139: SSPSTAT = 0b01000000;
  6568  1565  3040               	movlw	(040h)
  6569  1566  0094               	movwf	(148)^080h	;volatile
  6570                           	line	140
  6571                           	
  6572  1567                     l11154:	
  6573                           ;main.c: 140: SSPCON = 0b00100010;
  6574  1567  3022               	movlw	(022h)
  6575  1568  1283               	bcf	status, 5	;RP0=0, select bank0
  6576  1569  1303               	bcf	status, 6	;RP1=0, select bank0
  6577  156A  0094               	movwf	(20)	;volatile
  6578                           	line	141
  6579                           	
  6580  156B                     l11156:	
  6581                           ;main.c: 141: TRISC = 0b10010000;
  6582  156B  3090               	movlw	(090h)
  6583  156C  1683               	bsf	status, 5	;RP0=1, select bank1
  6584  156D  1303               	bcf	status, 6	;RP1=0, select bank1
  6585  156E  0087               	movwf	(135)^080h	;volatile
  6586                           	line	142
  6587                           	
  6588  156F                     l11158:	
  6589                           ;main.c: 142: PORTC = 0b00000000;
  6590  156F  1283               	bcf	status, 5	;RP0=0, select bank0
  6591  1570  1303               	bcf	status, 6	;RP1=0, select bank0
  6592  1571  0187               	clrf	(7)	;volatile
  6593                           	line	145
  6594                           	
  6595  1572                     l11160:	
  6596                           ;main.c: 145: PEIE = 1;
  6597  1572  170B               	bsf	(94/8),(94)&7
  6598                           	line	146
  6599                           	
  6600  1573                     l11162:	
  6601                           ;main.c: 146: GIE = 1;
  6602  1573  178B               	bsf	(95/8),(95)&7
  6603                           	line	148
  6604                           	
  6605  1574                     l11164:	
  6606                           ;main.c: 148: ser_init();
  6607  1574  160A  118A  2409   	fcall	_ser_init
              160A  118A         
  6608                           	line	149
  6609                           	
  6610  1579                     l11166:	
  6611                           ;main.c: 149: initIRobot();
  6612  1579  160A  118A  229C   	fcall	_initIRobot
              160A  118A         
  6613                           	line	150
  6614                           	
  6615  157E                     l11168:	
  6616                           ;main.c: 150: initSongs();
  6617  157E  120A  158A  222A   	fcall	_initSongs
              160A  118A         
  6618                           	line	151
  6619                           	
  6620  1583                     l6744:	
  6621  1583  0008               	return
  6622                           	opt stack 0
  6623                           GLOBAL	__end_of_init
  6624  1584                     	__end_of_init:
  6625 ;; =============== function _init ends ============
  6626                           
  6627                           	signat	_init,88
  6628                           	global	_goReverse
  6629                           psect	text1314,local,class=CODE,delta=2
  6630                           global __ptext1314
  6631  08EB                     __ptext1314:
  6632                           
  6633 ;; *************** function _goReverse *****************
  6634 ;; Defined at:
  6635 ;;		line 242 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6649 ;;      Params:         0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0
  6651 ;;      Temps:          0       3       0       0       0
  6652 ;;      Totals:         0       3       0       0       0
  6653 ;;Total ram usage:        3 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    3
  6656 ;; This function calls:
  6657 ;;		_lcd_set_cursor
  6658 ;;		_lcd_write_data
  6659 ;;		_drive
  6660 ;;		_waitFor
  6661 ;; This function is called by:
  6662 ;;		_driveForDistance
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           psect	text1314
  6666                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  6667                           	line	242
  6668                           	global	__size_of_goReverse
  6669  0047                     	__size_of_goReverse	equ	__end_of_goReverse-_goReverse
  6670                           	
  6671  08EB                     _goReverse:	
  6672                           	opt	stack 2
  6673                           ; Regs used in _goReverse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6674                           	line	243
  6675                           	
  6676  08EB                     l11126:	
  6677                           ;drive.c: 243: lcd_set_cursor(0x0F);
  6678  08EB  300F               	movlw	(0Fh)
  6679  08EC  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  158A         
  6680                           	line	244
  6681                           ;drive.c: 244: lcd_write_data('!');
  6682  08F1  3021               	movlw	(021h)
  6683  08F2  160A  118A  224C   	fcall	_lcd_write_data
              120A  158A         
  6684                           	line	245
  6685                           	
  6686  08F7                     l11128:	
  6687                           ;drive.c: 245: drive(255, 125, 128, 0);
  6688  08F7  307D               	movlw	(07Dh)
  6689  08F8  1283               	bcf	status, 5	;RP0=0, select bank0
  6690  08F9  1303               	bcf	status, 6	;RP1=0, select bank0
  6691  08FA  00A9               	movwf	(??_goReverse+0)+0
  6692  08FB  0829               	movf	(??_goReverse+0)+0,w
  6693  08FC  00A2               	movwf	(?_drive)
  6694  08FD  3080               	movlw	(080h)
  6695  08FE  00AA               	movwf	(??_goReverse+1)+0
  6696  08FF  082A               	movf	(??_goReverse+1)+0,w
  6697  0900  00A3               	movwf	0+(?_drive)+01h
  6698  0901  01A4               	clrf	0+(?_drive)+02h
  6699  0902  30FF               	movlw	(0FFh)
  6700  0903  160A  118A  24DA   	fcall	_drive
              120A  158A         
  6701                           	line	246
  6702                           	
  6703  0908                     l11130:	
  6704                           ;drive.c: 246: waitFor(156,254,212);
  6705  0908  30FE               	movlw	(0FEh)
  6706  0909  1283               	bcf	status, 5	;RP0=0, select bank0
  6707  090A  1303               	bcf	status, 6	;RP1=0, select bank0
  6708  090B  00A9               	movwf	(??_goReverse+0)+0
  6709  090C  0829               	movf	(??_goReverse+0)+0,w
  6710  090D  00A2               	movwf	(?_waitFor)
  6711  090E  30D4               	movlw	(0D4h)
  6712  090F  00AA               	movwf	(??_goReverse+1)+0
  6713  0910  082A               	movf	(??_goReverse+1)+0,w
  6714  0911  00A3               	movwf	0+(?_waitFor)+01h
  6715  0912  309C               	movlw	(09Ch)
  6716  0913  160A  118A  2431   	fcall	_waitFor
              120A  158A         
  6717                           	line	247
  6718                           	
  6719  0918                     l11132:	
  6720                           ;drive.c: 247: drive(0, 0, 0, 0);
  6721  0918  1283               	bcf	status, 5	;RP0=0, select bank0
  6722  0919  1303               	bcf	status, 6	;RP1=0, select bank0
  6723  091A  01A2               	clrf	(?_drive)
  6724  091B  01A3               	clrf	0+(?_drive)+01h
  6725  091C  01A4               	clrf	0+(?_drive)+02h
  6726  091D  3000               	movlw	(0)
  6727  091E  160A  118A  24DA   	fcall	_drive
              120A  158A         
  6728                           	line	248
  6729                           	
  6730  0923                     l11134:	
  6731                           ;drive.c: 248: _delay((unsigned long)((2000)*(20000000/4000.0)));
  6732                           	opt asmopt_off
  6733  0923  3033               movlw  51
  6734  0924  1283               	bcf	status, 5	;RP0=0, select bank0
  6735  0925  1303               	bcf	status, 6	;RP1=0, select bank0
  6736  0926  00AB               movwf	((??_goReverse+0)+0+2),f
  6737  0927  30BC               movlw	188
  6738  0928  00AA               movwf	((??_goReverse+0)+0+1),f
  6739  0929  3010               	movlw	16
  6740  092A  00A9               movwf	((??_goReverse+0)+0),f
  6741  092B                     u5377:
  6742  092B  0BA9               	decfsz	((??_goReverse+0)+0),f
  6743  092C  292B               	goto	u5377
  6744  092D  0BAA               	decfsz	((??_goReverse+0)+0+1),f
  6745  092E  292B               	goto	u5377
  6746  092F  0BAB               	decfsz	((??_goReverse+0)+0+2),f
  6747  0930  292B               	goto	u5377
  6748                           opt asmopt_on
  6749                           
  6750                           	line	249
  6751                           	
  6752  0931                     l5870:	
  6753  0931  0008               	return
  6754                           	opt stack 0
  6755                           GLOBAL	__end_of_goReverse
  6756  0932                     	__end_of_goReverse:
  6757 ;; =============== function _goReverse ends ============
  6758                           
  6759                           	signat	_goReverse,88
  6760                           	global	_readIR
  6761                           psect	text1315,local,class=CODE,delta=2
  6762                           global __ptext1315
  6763  1374                     __ptext1315:
  6764                           
  6765 ;; *************** function _readIR *****************
  6766 ;; Defined at:
  6767 ;;		line 33 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ir.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  cm              2   33[BANK0 ] int 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2   31[BANK0 ] int 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6781 ;;      Params:         0       2       0       0       0
  6782 ;;      Locals:         0       2       0       0       0
  6783 ;;      Temps:          0       0       0       0       0
  6784 ;;      Totals:         0       4       0       0       0
  6785 ;;Total ram usage:        4 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    4
  6788 ;; This function calls:
  6789 ;;		_adc_read_channel
  6790 ;;		_convert
  6791 ;; This function is called by:
  6792 ;;		_frontWallCorrect
  6793 ;;		_findWall
  6794 ;;		_wallFollow
  6795 ;;		_leftAngleCorrect
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           psect	text1315
  6799                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ir.c"
  6800                           	line	33
  6801                           	global	__size_of_readIR
  6802  0023                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  6803                           	
  6804  1374                     _readIR:	
  6805                           	opt	stack 2
  6806                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6807                           	line	34
  6808                           	
  6809  1374                     l11120:	
  6810                           ;ir.c: 34: int cm = convert(adc_read_channel(0));
  6811  1374  3000               	movlw	(0)
  6812  1375  160A  118A  26F4   	fcall	_adc_read_channel
              160A  118A         
  6813  137A  1283               	bcf	status, 5	;RP0=0, select bank0
  6814  137B  1303               	bcf	status, 6	;RP1=0, select bank0
  6815  137C  083C               	movf	(1+(?_adc_read_channel)),w
  6816  137D  01B8               	clrf	(?_convert+1)
  6817  137E  07B8               	addwf	(?_convert+1)
  6818  137F  083B               	movf	(0+(?_adc_read_channel)),w
  6819  1380  01B7               	clrf	(?_convert)
  6820  1381  07B7               	addwf	(?_convert)
  6821                           
  6822  1382  120A  118A  22A9   	fcall	_convert
              160A  118A         
  6823  1387  1283               	bcf	status, 5	;RP0=0, select bank0
  6824  1388  1303               	bcf	status, 6	;RP1=0, select bank0
  6825  1389  0838               	movf	(1+(?_convert)),w
  6826  138A  01C2               	clrf	(readIR@cm+1)
  6827  138B  07C2               	addwf	(readIR@cm+1)
  6828  138C  0837               	movf	(0+(?_convert)),w
  6829  138D  01C1               	clrf	(readIR@cm)
  6830  138E  07C1               	addwf	(readIR@cm)
  6831                           
  6832                           	line	35
  6833                           	
  6834  138F                     l11122:	
  6835                           ;ir.c: 35: return cm;
  6836  138F  0842               	movf	(readIR@cm+1),w
  6837  1390  01C0               	clrf	(?_readIR+1)
  6838  1391  07C0               	addwf	(?_readIR+1)
  6839  1392  0841               	movf	(readIR@cm),w
  6840  1393  01BF               	clrf	(?_readIR)
  6841  1394  07BF               	addwf	(?_readIR)
  6842                           
  6843  1395  2B96               	goto	l5083
  6844                           	
  6845  1396                     l11124:	
  6846                           	line	36
  6847                           	
  6848  1396                     l5083:	
  6849  1396  0008               	return
  6850                           	opt stack 0
  6851                           GLOBAL	__end_of_readIR
  6852  1397                     	__end_of_readIR:
  6853 ;; =============== function _readIR ends ============
  6854                           
  6855                           	signat	_readIR,90
  6856                           	global	_findFinalDestination
  6857                           psect	text1316,local,class=CODE,delta=2
  6858                           global __ptext1316
  6859  0643                     __ptext1316:
  6860                           
  6861 ;; *************** function _findFinalDestination *****************
  6862 ;; Defined at:
  6863 ;;		line 12 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  virtualWallX    1    wreg     unsigned char 
  6866 ;;  virtualWallY    1    4[BANK0 ] unsigned char 
  6867 ;;  robotOrienta    1    5[BANK0 ] enum E1088
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  virtualWallX    1    7[BANK0 ] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;		None               void
  6872 ;; Registers used:
  6873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6879 ;;      Params:         0       2       0       0       0
  6880 ;;      Locals:         0       1       0       0       0
  6881 ;;      Temps:          0       1       0       0       0
  6882 ;;      Totals:         0       4       0       0       0
  6883 ;;Total ram usage:        4 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    3
  6886 ;; This function calls:
  6887 ;;		_lcd_set_cursor
  6888 ;;		_lcd_write_1_digit_bcd
  6889 ;; This function is called by:
  6890 ;;		_driveForDistance
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           psect	text1316
  6894                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
  6895                           	line	12
  6896                           	global	__size_of_findFinalDestination
  6897  0105                     	__size_of_findFinalDestination	equ	__end_of_findFinalDestination-_findFinalDestination
  6898                           	
  6899  0643                     _findFinalDestination:	
  6900                           	opt	stack 2
  6901                           ; Regs used in _findFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6902                           ;findFinalDestination@virtualWallX stored from wreg
  6903  0643  1283               	bcf	status, 5	;RP0=0, select bank0
  6904  0644  1303               	bcf	status, 6	;RP1=0, select bank0
  6905  0645  00A7               	movwf	(findFinalDestination@virtualWallX)
  6906                           	line	13
  6907                           	
  6908  0646                     l11040:	
  6909                           ;map.c: 13: switch (virtualWallX)
  6910  0646  2F1A               	goto	l11116
  6911                           	line	15
  6912                           ;map.c: 14: {
  6913                           ;map.c: 15: case 0:
  6914                           	
  6915  0647                     l2849:	
  6916                           	line	16
  6917                           ;map.c: 16: switch (virtualWallY)
  6918  0647  2E5B               	goto	l11050
  6919                           	line	20
  6920                           ;map.c: 17: {
  6921                           ;map.c: 20: case 1:
  6922                           	
  6923  0648                     l2851:	
  6924                           	line	21
  6925                           ;map.c: 21: finalX = 0;
  6926  0648  01E3               	clrf	(_finalX)
  6927                           	line	22
  6928                           	
  6929  0649                     l11042:	
  6930                           ;map.c: 22: finalY = 1;
  6931  0649  01E4               	clrf	(_finalY)
  6932  064A  1403               	bsf	status,0
  6933  064B  0DE4               	rlf	(_finalY),f
  6934                           	line	23
  6935                           ;map.c: 23: break;
  6936  064C  2F2B               	goto	l11118
  6937                           	line	24
  6938                           ;map.c: 24: case 2:
  6939                           	
  6940  064D                     l2853:	
  6941                           	line	25
  6942                           ;map.c: 25: finalX = 0;
  6943  064D  01E3               	clrf	(_finalX)
  6944                           	line	26
  6945                           	
  6946  064E                     l11044:	
  6947                           ;map.c: 26: finalY = 2;
  6948  064E  3002               	movlw	(02h)
  6949  064F  00A6               	movwf	(??_findFinalDestination+0)+0
  6950  0650  0826               	movf	(??_findFinalDestination+0)+0,w
  6951  0651  00E4               	movwf	(_finalY)
  6952                           	line	27
  6953                           ;map.c: 27: break;
  6954  0652  2F2B               	goto	l11118
  6955                           	line	28
  6956                           ;map.c: 28: case 3:
  6957                           	
  6958  0653                     l2854:	
  6959                           	line	29
  6960                           ;map.c: 29: finalX = 0;
  6961  0653  01E3               	clrf	(_finalX)
  6962                           	line	30
  6963                           	
  6964  0654                     l11046:	
  6965                           ;map.c: 30: finalY = 3;
  6966  0654  3003               	movlw	(03h)
  6967  0655  00A6               	movwf	(??_findFinalDestination+0)+0
  6968  0656  0826               	movf	(??_findFinalDestination+0)+0,w
  6969  0657  00E4               	movwf	(_finalY)
  6970                           	line	31
  6971                           ;map.c: 31: break;
  6972  0658  2F2B               	goto	l11118
  6973                           	line	32
  6974                           ;map.c: 32: default:
  6975                           	
  6976  0659                     l2855:	
  6977                           	line	33
  6978                           ;map.c: 33: break;
  6979  0659  2F2B               	goto	l11118
  6980                           	line	34
  6981                           	
  6982  065A                     l11048:	
  6983                           ;map.c: 34: }
  6984  065A  2F2B               	goto	l11118
  6985                           	line	16
  6986                           	
  6987  065B                     l2850:	
  6988                           	
  6989  065B                     l11050:	
  6990  065B  0824               	movf	(findFinalDestination@virtualWallY),w
  6991                           	; Switch size 1, requested type "space"
  6992                           ; Number of cases is 3, Range of values is 1 to 3
  6993                           ; switch strategies available:
  6994                           ; Name         Instructions Cycles
  6995                           ; simple_byte           10     6 (average)
  6996                           ; direct_byte           20    11 (fixed)
  6997                           ; jumptable            263     9 (fixed)
  6998                           ;	Chosen strategy is simple_byte
  6999                           
  7000                           	opt asmopt_off
  7001  065C  3A01               	xorlw	1^0	; case 1
  7002  065D  1903               	skipnz
  7003  065E  2E48               	goto	l2851
  7004  065F  3A03               	xorlw	2^1	; case 2
  7005  0660  1903               	skipnz
  7006  0661  2E4D               	goto	l2853
  7007  0662  3A01               	xorlw	3^2	; case 3
  7008  0663  1903               	skipnz
  7009  0664  2E53               	goto	l2854
  7010  0665  2F2B               	goto	l11118
  7011                           	opt asmopt_on
  7012                           
  7013                           	line	34
  7014                           	
  7015  0666                     l2852:	
  7016                           	line	35
  7017                           ;map.c: 35: break;
  7018  0666  2F2B               	goto	l11118
  7019                           	line	37
  7020                           ;map.c: 37: case 1:
  7021                           	
  7022  0667                     l2857:	
  7023                           	line	38
  7024                           ;map.c: 38: switch (virtualWallY)
  7025  0667  2E86               	goto	l11068
  7026                           	line	40
  7027                           ;map.c: 39: {
  7028                           ;map.c: 40: case 0:
  7029                           	
  7030  0668                     l2859:	
  7031                           	line	41
  7032                           	
  7033  0668                     l11052:	
  7034                           ;map.c: 41: finalX = 1;
  7035  0668  01E3               	clrf	(_finalX)
  7036  0669  1403               	bsf	status,0
  7037  066A  0DE3               	rlf	(_finalX),f
  7038                           	line	42
  7039                           	
  7040  066B                     l11054:	
  7041                           ;map.c: 42: finalY = 0;
  7042  066B  01E4               	clrf	(_finalY)
  7043                           	line	43
  7044                           ;map.c: 43: break;
  7045  066C  2F2B               	goto	l11118
  7046                           	line	44
  7047                           ;map.c: 44: case 1:
  7048                           	
  7049  066D                     l2861:	
  7050                           	line	45
  7051                           	
  7052  066D                     l11056:	
  7053                           ;map.c: 45: finalX = 1;
  7054  066D  01E3               	clrf	(_finalX)
  7055  066E  1403               	bsf	status,0
  7056  066F  0DE3               	rlf	(_finalX),f
  7057                           	line	46
  7058                           ;map.c: 46: finalY = 1;
  7059  0670  01E4               	clrf	(_finalY)
  7060  0671  1403               	bsf	status,0
  7061  0672  0DE4               	rlf	(_finalY),f
  7062                           	line	47
  7063                           ;map.c: 47: break;
  7064  0673  2F2B               	goto	l11118
  7065                           	line	48
  7066                           ;map.c: 48: case 2:
  7067                           	
  7068  0674                     l2862:	
  7069                           	line	49
  7070                           	
  7071  0674                     l11058:	
  7072                           ;map.c: 49: finalX = 1;
  7073  0674  01E3               	clrf	(_finalX)
  7074  0675  1403               	bsf	status,0
  7075  0676  0DE3               	rlf	(_finalX),f
  7076                           	line	50
  7077                           	
  7078  0677                     l11060:	
  7079                           ;map.c: 50: finalY = 2;
  7080  0677  3002               	movlw	(02h)
  7081  0678  00A6               	movwf	(??_findFinalDestination+0)+0
  7082  0679  0826               	movf	(??_findFinalDestination+0)+0,w
  7083  067A  00E4               	movwf	(_finalY)
  7084                           	line	51
  7085                           ;map.c: 51: break;
  7086  067B  2F2B               	goto	l11118
  7087                           	line	52
  7088                           ;map.c: 52: case 3:
  7089                           	
  7090  067C                     l2863:	
  7091                           	line	53
  7092                           	
  7093  067C                     l11062:	
  7094                           ;map.c: 53: finalX = 1;
  7095  067C  01E3               	clrf	(_finalX)
  7096  067D  1403               	bsf	status,0
  7097  067E  0DE3               	rlf	(_finalX),f
  7098                           	line	54
  7099                           	
  7100  067F                     l11064:	
  7101                           ;map.c: 54: finalY = 3;
  7102  067F  3003               	movlw	(03h)
  7103  0680  00A6               	movwf	(??_findFinalDestination+0)+0
  7104  0681  0826               	movf	(??_findFinalDestination+0)+0,w
  7105  0682  00E4               	movwf	(_finalY)
  7106                           	line	55
  7107                           ;map.c: 55: break;
  7108  0683  2F2B               	goto	l11118
  7109                           	line	56
  7110                           ;map.c: 56: default:
  7111                           	
  7112  0684                     l2864:	
  7113                           	line	57
  7114                           ;map.c: 57: break;
  7115  0684  2F2B               	goto	l11118
  7116                           	line	58
  7117                           	
  7118  0685                     l11066:	
  7119                           ;map.c: 58: }
  7120  0685  2F2B               	goto	l11118
  7121                           	line	38
  7122                           	
  7123  0686                     l2858:	
  7124                           	
  7125  0686                     l11068:	
  7126  0686  0824               	movf	(findFinalDestination@virtualWallY),w
  7127                           	; Switch size 1, requested type "space"
  7128                           ; Number of cases is 4, Range of values is 0 to 3
  7129                           ; switch strategies available:
  7130                           ; Name         Instructions Cycles
  7131                           ; simple_byte           13     7 (average)
  7132                           ; direct_byte           20     8 (fixed)
  7133                           ; jumptable            260     6 (fixed)
  7134                           ; rangetable             8     6 (fixed)
  7135                           ; spacedrange           14     9 (fixed)
  7136                           ; locatedrange           4     3 (fixed)
  7137                           ;	Chosen strategy is simple_byte
  7138                           
  7139                           	opt asmopt_off
  7140  0687  3A00               	xorlw	0^0	; case 0
  7141  0688  1903               	skipnz
  7142  0689  2E68               	goto	l11052
  7143  068A  3A01               	xorlw	1^0	; case 1
  7144  068B  1903               	skipnz
  7145  068C  2E6D               	goto	l11056
  7146  068D  3A03               	xorlw	2^1	; case 2
  7147  068E  1903               	skipnz
  7148  068F  2E74               	goto	l11058
  7149  0690  3A01               	xorlw	3^2	; case 3
  7150  0691  1903               	skipnz
  7151  0692  2E7C               	goto	l11062
  7152  0693  2F2B               	goto	l11118
  7153                           	opt asmopt_on
  7154                           
  7155                           	line	58
  7156                           	
  7157  0694                     l2860:	
  7158                           	line	59
  7159                           ;map.c: 59: break;
  7160  0694  2F2B               	goto	l11118
  7161                           	line	61
  7162                           ;map.c: 61: case 2:
  7163                           	
  7164  0695                     l2865:	
  7165                           	line	62
  7166                           ;map.c: 62: switch (virtualWallY)
  7167  0695  2EBE               	goto	l11086
  7168                           	line	64
  7169                           ;map.c: 63: {
  7170                           ;map.c: 64: case 0:
  7171                           	
  7172  0696                     l2867:	
  7173                           	line	65
  7174                           	
  7175  0696                     l11070:	
  7176                           ;map.c: 65: if(robotOrientation == WEST)
  7177  0696  08A5               	movf	(findFinalDestination@robotOrientation),f
  7178  0697  1D03               	skipz
  7179  0698  2E9A               	goto	u4501
  7180  0699  2E9B               	goto	u4500
  7181  069A                     u4501:
  7182  069A  2F2B               	goto	l11118
  7183  069B                     u4500:
  7184                           	line	67
  7185                           	
  7186  069B                     l11072:	
  7187                           ;map.c: 66: {
  7188                           ;map.c: 67: finalX = 3;
  7189  069B  3003               	movlw	(03h)
  7190  069C  00A6               	movwf	(??_findFinalDestination+0)+0
  7191  069D  0826               	movf	(??_findFinalDestination+0)+0,w
  7192  069E  00E3               	movwf	(_finalX)
  7193                           	line	68
  7194                           	
  7195  069F                     l11074:	
  7196                           ;map.c: 68: finalY = 1;
  7197  069F  01E4               	clrf	(_finalY)
  7198  06A0  1403               	bsf	status,0
  7199  06A1  0DE4               	rlf	(_finalY),f
  7200  06A2  2F2B               	goto	l11118
  7201                           	line	69
  7202                           	
  7203  06A3                     l2868:	
  7204                           	line	70
  7205                           ;map.c: 69: }
  7206                           ;map.c: 70: break;
  7207  06A3  2F2B               	goto	l11118
  7208                           	line	71
  7209                           ;map.c: 71: case 1:
  7210                           	
  7211  06A4                     l2870:	
  7212                           	line	72
  7213                           	
  7214  06A4                     l11076:	
  7215                           ;map.c: 72: finalX = 2;
  7216  06A4  3002               	movlw	(02h)
  7217  06A5  00A6               	movwf	(??_findFinalDestination+0)+0
  7218  06A6  0826               	movf	(??_findFinalDestination+0)+0,w
  7219  06A7  00E3               	movwf	(_finalX)
  7220                           	line	73
  7221                           	
  7222  06A8                     l11078:	
  7223                           ;map.c: 73: finalY = 1;
  7224  06A8  01E4               	clrf	(_finalY)
  7225  06A9  1403               	bsf	status,0
  7226  06AA  0DE4               	rlf	(_finalY),f
  7227                           	line	74
  7228                           ;map.c: 74: break;
  7229  06AB  2F2B               	goto	l11118
  7230                           	line	75
  7231                           ;map.c: 75: case 2:
  7232                           	
  7233  06AC                     l2871:	
  7234                           	line	76
  7235                           	
  7236  06AC                     l11080:	
  7237                           ;map.c: 76: if(robotOrientation == EAST)
  7238  06AC  0825               	movf	(findFinalDestination@robotOrientation),w
  7239  06AD  3A02               	xorlw	02h
  7240  06AE  1D03               	skipz
  7241  06AF  2EB1               	goto	u4511
  7242  06B0  2EB2               	goto	u4510
  7243  06B1                     u4511:
  7244  06B1  2F2B               	goto	l11118
  7245  06B2                     u4510:
  7246                           	line	78
  7247                           	
  7248  06B2                     l11082:	
  7249                           ;map.c: 77: {
  7250                           ;map.c: 78: finalX = 2;
  7251  06B2  3002               	movlw	(02h)
  7252  06B3  00A6               	movwf	(??_findFinalDestination+0)+0
  7253  06B4  0826               	movf	(??_findFinalDestination+0)+0,w
  7254  06B5  00E3               	movwf	(_finalX)
  7255                           	line	79
  7256                           ;map.c: 79: finalY = 2;
  7257  06B6  3002               	movlw	(02h)
  7258  06B7  00A6               	movwf	(??_findFinalDestination+0)+0
  7259  06B8  0826               	movf	(??_findFinalDestination+0)+0,w
  7260  06B9  00E4               	movwf	(_finalY)
  7261  06BA  2F2B               	goto	l11118
  7262                           	line	80
  7263                           	
  7264  06BB                     l2872:	
  7265                           	line	81
  7266                           ;map.c: 80: }
  7267                           ;map.c: 81: break;
  7268  06BB  2F2B               	goto	l11118
  7269                           	line	84
  7270                           ;map.c: 84: default:
  7271                           	
  7272  06BC                     l2873:	
  7273                           	line	85
  7274                           ;map.c: 85: break;
  7275  06BC  2F2B               	goto	l11118
  7276                           	line	86
  7277                           	
  7278  06BD                     l11084:	
  7279                           ;map.c: 86: }
  7280  06BD  2F2B               	goto	l11118
  7281                           	line	62
  7282                           	
  7283  06BE                     l2866:	
  7284                           	
  7285  06BE                     l11086:	
  7286  06BE  0824               	movf	(findFinalDestination@virtualWallY),w
  7287                           	; Switch size 1, requested type "space"
  7288                           ; Number of cases is 3, Range of values is 0 to 2
  7289                           ; switch strategies available:
  7290                           ; Name         Instructions Cycles
  7291                           ; simple_byte           10     6 (average)
  7292                           ; direct_byte           17     8 (fixed)
  7293                           ; jumptable            260     6 (fixed)
  7294                           ; rangetable             7     6 (fixed)
  7295                           ; spacedrange           12     9 (fixed)
  7296                           ; locatedrange           3     3 (fixed)
  7297                           ;	Chosen strategy is simple_byte
  7298                           
  7299                           	opt asmopt_off
  7300  06BF  3A00               	xorlw	0^0	; case 0
  7301  06C0  1903               	skipnz
  7302  06C1  2E96               	goto	l11070
  7303  06C2  3A01               	xorlw	1^0	; case 1
  7304  06C3  1903               	skipnz
  7305  06C4  2EA4               	goto	l11076
  7306  06C5  3A03               	xorlw	2^1	; case 2
  7307  06C6  1903               	skipnz
  7308  06C7  2EAC               	goto	l11080
  7309  06C8  2F2B               	goto	l11118
  7310                           	opt asmopt_on
  7311                           
  7312                           	line	86
  7313                           	
  7314  06C9                     l2869:	
  7315                           	line	87
  7316                           ;map.c: 87: break;
  7317  06C9  2F2B               	goto	l11118
  7318                           	line	89
  7319                           ;map.c: 89: case 3:
  7320                           	
  7321  06CA                     l2874:	
  7322                           	line	90
  7323                           ;map.c: 90: switch (virtualWallY)
  7324  06CA  2EDC               	goto	l11096
  7325                           	line	92
  7326                           ;map.c: 91: {
  7327                           ;map.c: 92: case 0:
  7328                           	
  7329  06CB                     l2876:	
  7330                           	line	93
  7331                           	
  7332  06CB                     l11088:	
  7333                           ;map.c: 93: finalX = 3;
  7334  06CB  3003               	movlw	(03h)
  7335  06CC  00A6               	movwf	(??_findFinalDestination+0)+0
  7336  06CD  0826               	movf	(??_findFinalDestination+0)+0,w
  7337  06CE  00E3               	movwf	(_finalX)
  7338                           	line	94
  7339                           	
  7340  06CF                     l11090:	
  7341                           ;map.c: 94: finalY = 0;
  7342  06CF  01E4               	clrf	(_finalY)
  7343                           	line	95
  7344                           ;map.c: 95: break;
  7345  06D0  2F2B               	goto	l11118
  7346                           	line	98
  7347                           ;map.c: 98: case 2:
  7348                           	
  7349  06D1                     l2878:	
  7350                           	line	99
  7351                           	
  7352  06D1                     l11092:	
  7353                           ;map.c: 99: finalX = 3;
  7354  06D1  3003               	movlw	(03h)
  7355  06D2  00A6               	movwf	(??_findFinalDestination+0)+0
  7356  06D3  0826               	movf	(??_findFinalDestination+0)+0,w
  7357  06D4  00E3               	movwf	(_finalX)
  7358                           	line	100
  7359                           ;map.c: 100: finalY = 2;
  7360  06D5  3002               	movlw	(02h)
  7361  06D6  00A6               	movwf	(??_findFinalDestination+0)+0
  7362  06D7  0826               	movf	(??_findFinalDestination+0)+0,w
  7363  06D8  00E4               	movwf	(_finalY)
  7364                           	line	101
  7365                           ;map.c: 101: break;
  7366  06D9  2F2B               	goto	l11118
  7367                           	line	104
  7368                           ;map.c: 104: default:
  7369                           	
  7370  06DA                     l2879:	
  7371                           	line	105
  7372                           ;map.c: 105: break;
  7373  06DA  2F2B               	goto	l11118
  7374                           	line	106
  7375                           	
  7376  06DB                     l11094:	
  7377                           ;map.c: 106: }
  7378  06DB  2F2B               	goto	l11118
  7379                           	line	90
  7380                           	
  7381  06DC                     l2875:	
  7382                           	
  7383  06DC                     l11096:	
  7384  06DC  0824               	movf	(findFinalDestination@virtualWallY),w
  7385                           	; Switch size 1, requested type "space"
  7386                           ; Number of cases is 2, Range of values is 0 to 2
  7387                           ; switch strategies available:
  7388                           ; Name         Instructions Cycles
  7389                           ; simple_byte            7     4 (average)
  7390                           ; direct_byte           17     8 (fixed)
  7391                           ; jumptable            260     6 (fixed)
  7392                           ; rangetable             7     6 (fixed)
  7393                           ; spacedrange           12     9 (fixed)
  7394                           ; locatedrange           3     3 (fixed)
  7395                           ;	Chosen strategy is simple_byte
  7396                           
  7397                           	opt asmopt_off
  7398  06DD  3A00               	xorlw	0^0	; case 0
  7399  06DE  1903               	skipnz
  7400  06DF  2ECB               	goto	l11088
  7401  06E0  3A02               	xorlw	2^0	; case 2
  7402  06E1  1903               	skipnz
  7403  06E2  2ED1               	goto	l11092
  7404  06E3  2F2B               	goto	l11118
  7405                           	opt asmopt_on
  7406                           
  7407                           	line	106
  7408                           	
  7409  06E4                     l2877:	
  7410                           	line	107
  7411                           ;map.c: 107: break;
  7412  06E4  2F2B               	goto	l11118
  7413                           	line	109
  7414                           ;map.c: 109: case 4:
  7415                           	
  7416  06E5                     l2880:	
  7417                           	line	110
  7418                           ;map.c: 110: switch (virtualWallY)
  7419  06E5  2F09               	goto	l11112
  7420                           	line	112
  7421                           ;map.c: 111: {
  7422                           ;map.c: 112: case 0:
  7423                           	
  7424  06E6                     l2882:	
  7425                           	line	113
  7426                           	
  7427  06E6                     l11098:	
  7428                           ;map.c: 113: finalX = 4;
  7429  06E6  3004               	movlw	(04h)
  7430  06E7  00A6               	movwf	(??_findFinalDestination+0)+0
  7431  06E8  0826               	movf	(??_findFinalDestination+0)+0,w
  7432  06E9  00E3               	movwf	(_finalX)
  7433                           	line	114
  7434                           	
  7435  06EA                     l11100:	
  7436                           ;map.c: 114: finalY = 0;
  7437  06EA  01E4               	clrf	(_finalY)
  7438                           	line	115
  7439                           ;map.c: 115: break;
  7440  06EB  2F2B               	goto	l11118
  7441                           	line	116
  7442                           ;map.c: 116: case 1:
  7443                           	
  7444  06EC                     l2884:	
  7445                           	line	117
  7446                           	
  7447  06EC                     l11102:	
  7448                           ;map.c: 117: finalX = 4;
  7449  06EC  3004               	movlw	(04h)
  7450  06ED  00A6               	movwf	(??_findFinalDestination+0)+0
  7451  06EE  0826               	movf	(??_findFinalDestination+0)+0,w
  7452  06EF  00E3               	movwf	(_finalX)
  7453                           	line	118
  7454                           	
  7455  06F0                     l11104:	
  7456                           ;map.c: 118: finalY = 1;
  7457  06F0  01E4               	clrf	(_finalY)
  7458  06F1  1403               	bsf	status,0
  7459  06F2  0DE4               	rlf	(_finalY),f
  7460                           	line	119
  7461                           ;map.c: 119: break;
  7462  06F3  2F2B               	goto	l11118
  7463                           	line	120
  7464                           ;map.c: 120: case 2:
  7465                           	
  7466  06F4                     l2885:	
  7467                           	line	121
  7468                           	
  7469  06F4                     l11106:	
  7470                           ;map.c: 121: if (robotOrientation == SOUTH)
  7471  06F4  0825               	movf	(findFinalDestination@robotOrientation),w
  7472  06F5  3A01               	xorlw	01h
  7473  06F6  1D03               	skipz
  7474  06F7  2EF9               	goto	u4521
  7475  06F8  2EFA               	goto	u4520
  7476  06F9                     u4521:
  7477  06F9  2F2B               	goto	l11118
  7478  06FA                     u4520:
  7479                           	line	123
  7480                           	
  7481  06FA                     l11108:	
  7482                           ;map.c: 122: {
  7483                           ;map.c: 123: finalX = 4;
  7484  06FA  3004               	movlw	(04h)
  7485  06FB  00A6               	movwf	(??_findFinalDestination+0)+0
  7486  06FC  0826               	movf	(??_findFinalDestination+0)+0,w
  7487  06FD  00E3               	movwf	(_finalX)
  7488                           	line	124
  7489                           ;map.c: 124: finalY = 2;
  7490  06FE  3002               	movlw	(02h)
  7491  06FF  00A6               	movwf	(??_findFinalDestination+0)+0
  7492  0700  0826               	movf	(??_findFinalDestination+0)+0,w
  7493  0701  00E4               	movwf	(_finalY)
  7494  0702  2F2B               	goto	l11118
  7495                           	line	125
  7496                           	
  7497  0703                     l2886:	
  7498                           	line	126
  7499                           ;map.c: 125: }
  7500                           ;map.c: 126: break;
  7501  0703  2F2B               	goto	l11118
  7502                           	line	127
  7503                           ;map.c: 127: case 3:
  7504                           	
  7505  0704                     l2887:	
  7506                           	line	128
  7507                           ;map.c: 128: finalX = 0;
  7508  0704  01E3               	clrf	(_finalX)
  7509                           	line	129
  7510                           ;map.c: 129: finalY = 0;
  7511  0705  01E4               	clrf	(_finalY)
  7512                           	line	130
  7513                           ;map.c: 130: break;
  7514  0706  2F2B               	goto	l11118
  7515                           	line	131
  7516                           ;map.c: 131: default:
  7517                           	
  7518  0707                     l2888:	
  7519                           	line	132
  7520                           ;map.c: 132: break;
  7521  0707  2F2B               	goto	l11118
  7522                           	line	133
  7523                           	
  7524  0708                     l11110:	
  7525                           ;map.c: 133: }
  7526  0708  2F2B               	goto	l11118
  7527                           	line	110
  7528                           	
  7529  0709                     l2881:	
  7530                           	
  7531  0709                     l11112:	
  7532  0709  0824               	movf	(findFinalDestination@virtualWallY),w
  7533                           	; Switch size 1, requested type "space"
  7534                           ; Number of cases is 4, Range of values is 0 to 3
  7535                           ; switch strategies available:
  7536                           ; Name         Instructions Cycles
  7537                           ; simple_byte           13     7 (average)
  7538                           ; direct_byte           20     8 (fixed)
  7539                           ; jumptable            260     6 (fixed)
  7540                           ; rangetable             8     6 (fixed)
  7541                           ; spacedrange           14     9 (fixed)
  7542                           ; locatedrange           4     3 (fixed)
  7543                           ;	Chosen strategy is simple_byte
  7544                           
  7545                           	opt asmopt_off
  7546  070A  3A00               	xorlw	0^0	; case 0
  7547  070B  1903               	skipnz
  7548  070C  2EE6               	goto	l11098
  7549  070D  3A01               	xorlw	1^0	; case 1
  7550  070E  1903               	skipnz
  7551  070F  2EEC               	goto	l11102
  7552  0710  3A03               	xorlw	2^1	; case 2
  7553  0711  1903               	skipnz
  7554  0712  2EF4               	goto	l11106
  7555  0713  3A01               	xorlw	3^2	; case 3
  7556  0714  1903               	skipnz
  7557  0715  2F04               	goto	l2887
  7558  0716  2F2B               	goto	l11118
  7559                           	opt asmopt_on
  7560                           
  7561                           	line	133
  7562                           	
  7563  0717                     l2883:	
  7564                           	line	134
  7565                           ;map.c: 134: break;
  7566  0717  2F2B               	goto	l11118
  7567                           	line	136
  7568                           ;map.c: 136: default:
  7569                           	
  7570  0718                     l2889:	
  7571                           	line	137
  7572                           ;map.c: 137: break;
  7573  0718  2F2B               	goto	l11118
  7574                           	line	138
  7575                           	
  7576  0719                     l11114:	
  7577                           ;map.c: 138: }
  7578  0719  2F2B               	goto	l11118
  7579                           	line	13
  7580                           	
  7581  071A                     l2848:	
  7582                           	
  7583  071A                     l11116:	
  7584  071A  0827               	movf	(findFinalDestination@virtualWallX),w
  7585                           	; Switch size 1, requested type "space"
  7586                           ; Number of cases is 5, Range of values is 0 to 4
  7587                           ; switch strategies available:
  7588                           ; Name         Instructions Cycles
  7589                           ; simple_byte           16     9 (average)
  7590                           ; direct_byte           23     8 (fixed)
  7591                           ; jumptable            260     6 (fixed)
  7592                           ; rangetable             9     6 (fixed)
  7593                           ; spacedrange           16     9 (fixed)
  7594                           ; locatedrange           5     3 (fixed)
  7595                           ;	Chosen strategy is simple_byte
  7596                           
  7597                           	opt asmopt_off
  7598  071B  3A00               	xorlw	0^0	; case 0
  7599  071C  1903               	skipnz
  7600  071D  2E5B               	goto	l11050
  7601  071E  3A01               	xorlw	1^0	; case 1
  7602  071F  1903               	skipnz
  7603  0720  2E86               	goto	l11068
  7604  0721  3A03               	xorlw	2^1	; case 2
  7605  0722  1903               	skipnz
  7606  0723  2EBE               	goto	l11086
  7607  0724  3A01               	xorlw	3^2	; case 3
  7608  0725  1903               	skipnz
  7609  0726  2EDC               	goto	l11096
  7610  0727  3A07               	xorlw	4^3	; case 4
  7611  0728  1903               	skipnz
  7612  0729  2F09               	goto	l11112
  7613  072A  2F2B               	goto	l11118
  7614                           	opt asmopt_on
  7615                           
  7616                           	line	138
  7617                           	
  7618  072B                     l2856:	
  7619                           	line	140
  7620                           	
  7621  072B                     l11118:	
  7622                           ;map.c: 140: lcd_set_cursor(0x47);
  7623  072B  3047               	movlw	(047h)
  7624  072C  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  7625                           	line	141
  7626                           ;map.c: 141: lcd_write_1_digit_bcd(finalX);
  7627  0731  1283               	bcf	status, 5	;RP0=0, select bank0
  7628  0732  1303               	bcf	status, 6	;RP1=0, select bank0
  7629  0733  0863               	movf	(_finalX),w
  7630  0734  160A  118A  2201   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  7631                           	line	142
  7632                           ;map.c: 142: lcd_set_cursor(0x49);
  7633  0739  3049               	movlw	(049h)
  7634  073A  160A  118A  21F6   	fcall	_lcd_set_cursor
              120A  118A         
  7635                           	line	143
  7636                           ;map.c: 143: lcd_write_1_digit_bcd(finalY);
  7637  073F  1283               	bcf	status, 5	;RP0=0, select bank0
  7638  0740  1303               	bcf	status, 6	;RP1=0, select bank0
  7639  0741  0864               	movf	(_finalY),w
  7640  0742  160A  118A  2201   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  7641                           	line	144
  7642                           	
  7643  0747                     l2890:	
  7644  0747  0008               	return
  7645                           	opt stack 0
  7646                           GLOBAL	__end_of_findFinalDestination
  7647  0748                     	__end_of_findFinalDestination:
  7648 ;; =============== function _findFinalDestination ends ============
  7649                           
  7650                           	signat	_findFinalDestination,12408
  7651                           	global	_updateMapData
  7652                           psect	text1317,local,class=CODE,delta=2
  7653                           global __ptext1317
  7654  0932                     __ptext1317:
  7655                           
  7656 ;; *************** function _updateMapData *****************
  7657 ;; Defined at:
  7658 ;;		line 134 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  virtualW        1    wreg     unsigned char 
  7661 ;;  virtualS        1    9[BANK0 ] unsigned char 
  7662 ;;  virtualE        1   10[BANK0 ] unsigned char 
  7663 ;;  virtualN        1   11[BANK0 ] unsigned char 
  7664 ;;  victim          1   12[BANK0 ] unsigned char 
  7665 ;;  move            1   13[BANK0 ] unsigned char 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  virtualW        1   16[BANK0 ] unsigned char 
  7668 ;;  completeData    1   17[BANK0 ] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;		None               void
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7678 ;;      Params:         0       5       0       0       0
  7679 ;;      Locals:         0       2       0       0       0
  7680 ;;      Temps:          0       2       0       0       0
  7681 ;;      Totals:         0       9       0       0       0
  7682 ;;Total ram usage:        9 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    4
  7685 ;; This function calls:
  7686 ;;		_addNewData
  7687 ;; This function is called by:
  7688 ;;		_main
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           psect	text1317
  7692                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  7693                           	line	134
  7694                           	global	__size_of_updateMapData
  7695  004D                     	__size_of_updateMapData	equ	__end_of_updateMapData-_updateMapData
  7696                           	
  7697  0932                     _updateMapData:	
  7698                           	opt	stack 3
  7699                           ; Regs used in _updateMapData: [wreg+status,2+status,0+pclath+cstack]
  7700                           ;updateMapData@virtualW stored from wreg
  7701  0932  1283               	bcf	status, 5	;RP0=0, select bank0
  7702  0933  1303               	bcf	status, 6	;RP1=0, select bank0
  7703  0934  00B0               	movwf	(updateMapData@virtualW)
  7704                           	line	135
  7705                           	
  7706  0935                     l11034:	
  7707                           ;eeprom.c: 135: char completeData = 0;
  7708  0935  01B1               	clrf	(updateMapData@completeData)
  7709                           	line	136
  7710                           	
  7711  0936                     l11036:	
  7712                           ;eeprom.c: 136: completeData |= virtualW;
  7713  0936  0830               	movf	(updateMapData@virtualW),w
  7714  0937  00AE               	movwf	(??_updateMapData+0)+0
  7715  0938  082E               	movf	(??_updateMapData+0)+0,w
  7716  0939  04B1               	iorwf	(updateMapData@completeData),f
  7717                           	line	137
  7718                           ;eeprom.c: 137: completeData |= virtualS << 1;
  7719  093A  0829               	movf	(updateMapData@virtualS),w
  7720  093B  00AE               	movwf	(??_updateMapData+0)+0
  7721  093C  072E               	addwf	(??_updateMapData+0)+0,w
  7722  093D  00AF               	movwf	(??_updateMapData+1)+0
  7723  093E  082F               	movf	(??_updateMapData+1)+0,w
  7724  093F  04B1               	iorwf	(updateMapData@completeData),f
  7725                           	line	138
  7726                           ;eeprom.c: 138: completeData |= virtualE << 2;
  7727  0940  082A               	movf	(updateMapData@virtualE),w
  7728  0941  00AE               	movwf	(??_updateMapData+0)+0
  7729  0942  3001               	movlw	(02h)-1
  7730  0943                     u4465:
  7731  0943  1003               	clrc
  7732  0944  0DAE               	rlf	(??_updateMapData+0)+0,f
  7733  0945  3EFF               	addlw	-1
  7734  0946  1D03               	skipz
  7735  0947  2943               	goto	u4465
  7736  0948  1003               	clrc
  7737  0949  0D2E               	rlf	(??_updateMapData+0)+0,w
  7738  094A  00AF               	movwf	(??_updateMapData+1)+0
  7739  094B  082F               	movf	(??_updateMapData+1)+0,w
  7740  094C  04B1               	iorwf	(updateMapData@completeData),f
  7741                           	line	139
  7742                           ;eeprom.c: 139: completeData |= virtualN << 3;
  7743  094D  082B               	movf	(updateMapData@virtualN),w
  7744  094E  00AE               	movwf	(??_updateMapData+0)+0
  7745  094F  3002               	movlw	(03h)-1
  7746  0950                     u4475:
  7747  0950  1003               	clrc
  7748  0951  0DAE               	rlf	(??_updateMapData+0)+0,f
  7749  0952  3EFF               	addlw	-1
  7750  0953  1D03               	skipz
  7751  0954  2950               	goto	u4475
  7752  0955  1003               	clrc
  7753  0956  0D2E               	rlf	(??_updateMapData+0)+0,w
  7754  0957  00AF               	movwf	(??_updateMapData+1)+0
  7755  0958  082F               	movf	(??_updateMapData+1)+0,w
  7756  0959  04B1               	iorwf	(updateMapData@completeData),f
  7757                           	line	140
  7758                           ;eeprom.c: 140: completeData |= victim << 4;
  7759  095A  082C               	movf	(updateMapData@victim),w
  7760  095B  00AE               	movwf	(??_updateMapData+0)+0
  7761  095C  3003               	movlw	(04h)-1
  7762  095D                     u4485:
  7763  095D  1003               	clrc
  7764  095E  0DAE               	rlf	(??_updateMapData+0)+0,f
  7765  095F  3EFF               	addlw	-1
  7766  0960  1D03               	skipz
  7767  0961  295D               	goto	u4485
  7768  0962  1003               	clrc
  7769  0963  0D2E               	rlf	(??_updateMapData+0)+0,w
  7770  0964  00AF               	movwf	(??_updateMapData+1)+0
  7771  0965  082F               	movf	(??_updateMapData+1)+0,w
  7772  0966  04B1               	iorwf	(updateMapData@completeData),f
  7773                           	line	141
  7774                           ;eeprom.c: 141: completeData |= move << 5;
  7775  0967  082D               	movf	(updateMapData@move),w
  7776  0968  00AE               	movwf	(??_updateMapData+0)+0
  7777  0969  3004               	movlw	(05h)-1
  7778  096A                     u4495:
  7779  096A  1003               	clrc
  7780  096B  0DAE               	rlf	(??_updateMapData+0)+0,f
  7781  096C  3EFF               	addlw	-1
  7782  096D  1D03               	skipz
  7783  096E  296A               	goto	u4495
  7784  096F  1003               	clrc
  7785  0970  0D2E               	rlf	(??_updateMapData+0)+0,w
  7786  0971  00AF               	movwf	(??_updateMapData+1)+0
  7787  0972  082F               	movf	(??_updateMapData+1)+0,w
  7788  0973  04B1               	iorwf	(updateMapData@completeData),f
  7789                           	line	142
  7790                           ;eeprom.c: 142: completeData &= 0b01111111;
  7791  0974  307F               	movlw	(07Fh)
  7792  0975  00AE               	movwf	(??_updateMapData+0)+0
  7793  0976  082E               	movf	(??_updateMapData+0)+0,w
  7794  0977  05B1               	andwf	(updateMapData@completeData),f
  7795                           	line	143
  7796                           	
  7797  0978                     l11038:	
  7798                           ;eeprom.c: 143: addNewData(completeData);
  7799  0978  0831               	movf	(updateMapData@completeData),w
  7800  0979  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7801                           	line	144
  7802                           	
  7803  097E                     l1430:	
  7804  097E  0008               	return
  7805                           	opt stack 0
  7806                           GLOBAL	__end_of_updateMapData
  7807  097F                     	__end_of_updateMapData:
  7808 ;; =============== function _updateMapData ends ============
  7809                           
  7810                           	signat	_updateMapData,24696
  7811                           	global	_writeEEPROMTestData
  7812                           psect	text1318,local,class=CODE,delta=2
  7813                           global __ptext1318
  7814  0E13                     __ptext1318:
  7815                           
  7816 ;; *************** function _writeEEPROMTestData *****************
  7817 ;; Defined at:
  7818 ;;		line 103 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;		None
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;		None               void
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0, pclath, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7832 ;;      Params:         0       0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0
  7835 ;;      Totals:         0       0       0       0       0
  7836 ;;Total ram usage:        0 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:    4
  7839 ;; This function calls:
  7840 ;;		_addNewData
  7841 ;; This function is called by:
  7842 ;;		_main
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           psect	text1318
  7846                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  7847                           	line	103
  7848                           	global	__size_of_writeEEPROMTestData
  7849  0097                     	__size_of_writeEEPROMTestData	equ	__end_of_writeEEPROMTestData-_writeEEPROMTestData
  7850                           	
  7851  0E13                     _writeEEPROMTestData:	
  7852                           	opt	stack 3
  7853                           ; Regs used in _writeEEPROMTestData: [wreg+status,2+status,0+pclath+cstack]
  7854                           	line	104
  7855                           	
  7856  0E13                     l11032:	
  7857                           ;eeprom.c: 104: addNewData(0);
  7858  0E13  3000               	movlw	(0)
  7859  0E14  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7860                           	line	105
  7861                           ;eeprom.c: 105: addNewData(32);
  7862  0E19  3020               	movlw	(020h)
  7863  0E1A  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7864                           	line	106
  7865                           ;eeprom.c: 106: addNewData(64);
  7866  0E1F  3040               	movlw	(040h)
  7867  0E20  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7868                           	line	107
  7869                           ;eeprom.c: 107: addNewData(64);
  7870  0E25  3040               	movlw	(040h)
  7871  0E26  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7872                           	line	108
  7873                           ;eeprom.c: 108: addNewData(96);
  7874  0E2B  3060               	movlw	(060h)
  7875  0E2C  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7876                           	line	109
  7877                           ;eeprom.c: 109: addNewData(32);
  7878  0E31  3020               	movlw	(020h)
  7879  0E32  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7880                           	line	110
  7881                           ;eeprom.c: 110: addNewData(64);
  7882  0E37  3040               	movlw	(040h)
  7883  0E38  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7884                           	line	111
  7885                           ;eeprom.c: 111: addNewData(64);
  7886  0E3D  3040               	movlw	(040h)
  7887  0E3E  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7888                           	line	112
  7889                           ;eeprom.c: 112: addNewData(96);
  7890  0E43  3060               	movlw	(060h)
  7891  0E44  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7892                           	line	113
  7893                           ;eeprom.c: 113: addNewData(1);
  7894  0E49  3001               	movlw	(01h)
  7895  0E4A  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7896                           	line	114
  7897                           ;eeprom.c: 114: addNewData(64);
  7898  0E4F  3040               	movlw	(040h)
  7899  0E50  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7900                           	line	115
  7901                           ;eeprom.c: 115: addNewData(32);
  7902  0E55  3020               	movlw	(020h)
  7903  0E56  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7904                           	line	116
  7905                           ;eeprom.c: 116: addNewData(32);
  7906  0E5B  3020               	movlw	(020h)
  7907  0E5C  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7908                           	line	117
  7909                           ;eeprom.c: 117: addNewData(32);
  7910  0E61  3020               	movlw	(020h)
  7911  0E62  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7912                           	line	118
  7913                           ;eeprom.c: 118: addNewData(0);
  7914  0E67  3000               	movlw	(0)
  7915  0E68  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7916                           	line	119
  7917                           ;eeprom.c: 119: addNewData(0);
  7918  0E6D  3000               	movlw	(0)
  7919  0E6E  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7920                           	line	120
  7921                           ;eeprom.c: 120: addNewData(96);
  7922  0E73  3060               	movlw	(060h)
  7923  0E74  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7924                           	line	121
  7925                           ;eeprom.c: 121: addNewData(64);
  7926  0E79  3040               	movlw	(040h)
  7927  0E7A  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7928                           	line	122
  7929                           ;eeprom.c: 122: addNewData(0);
  7930  0E7F  3000               	movlw	(0)
  7931  0E80  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7932                           	line	123
  7933                           ;eeprom.c: 123: addNewData(32);
  7934  0E85  3020               	movlw	(020h)
  7935  0E86  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7936                           	line	124
  7937                           ;eeprom.c: 124: addNewData(0);
  7938  0E8B  3000               	movlw	(0)
  7939  0E8C  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7940                           	line	125
  7941                           ;eeprom.c: 125: addNewData(96);
  7942  0E91  3060               	movlw	(060h)
  7943  0E92  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7944                           	line	126
  7945                           ;eeprom.c: 126: addNewData(0);
  7946  0E97  3000               	movlw	(0)
  7947  0E98  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7948                           	line	127
  7949                           ;eeprom.c: 127: addNewData(32);
  7950  0E9D  3020               	movlw	(020h)
  7951  0E9E  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7952                           	line	128
  7953                           ;eeprom.c: 128: addNewData(112);
  7954  0EA3  3070               	movlw	(070h)
  7955  0EA4  160A  118A  22D4   	fcall	_addNewData
              120A  158A         
  7956                           	line	129
  7957                           	
  7958  0EA9                     l1427:	
  7959  0EA9  0008               	return
  7960                           	opt stack 0
  7961                           GLOBAL	__end_of_writeEEPROMTestData
  7962  0EAA                     	__end_of_writeEEPROMTestData:
  7963 ;; =============== function _writeEEPROMTestData ends ============
  7964                           
  7965                           	signat	_writeEEPROMTestData,88
  7966                           	global	_checkIfHome
  7967                           psect	text1319,local,class=CODE,delta=2
  7968                           global __ptext1319
  7969  1311                     __ptext1319:
  7970                           
  7971 ;; *************** function _checkIfHome *****************
  7972 ;; Defined at:
  7973 ;;		line 355 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;		None               void
  7980 ;; Registers used:
  7981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7987 ;;      Params:         0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0
  7990 ;;      Totals:         0       0       0       0       0
  7991 ;;Total ram usage:        0 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:    3
  7994 ;; This function calls:
  7995 ;;		_drive
  7996 ;;		_play_iCreate_song
  7997 ;; This function is called by:
  7998 ;;		_main
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           psect	text1319
  8002                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  8003                           	line	355
  8004                           	global	__size_of_checkIfHome
  8005  0020                     	__size_of_checkIfHome	equ	__end_of_checkIfHome-_checkIfHome
  8006                           	
  8007  1311                     _checkIfHome:	
  8008                           	opt	stack 4
  8009                           ; Regs used in _checkIfHome: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8010                           	line	356
  8011                           	
  8012  1311                     l11024:	
  8013                           ;main.c: 356: if((xCoord == 1) && (yCoord == 3))
  8014  1311  1283               	bcf	status, 5	;RP0=0, select bank0
  8015  1312  1303               	bcf	status, 6	;RP1=0, select bank0
  8016  1313  0866               	movf	(_xCoord),w	;volatile
  8017  1314  3A01               	xorlw	01h
  8018  1315  1D03               	skipz
  8019  1316  2B18               	goto	u4441
  8020  1317  2B19               	goto	u4440
  8021  1318                     u4441:
  8022  1318  2B30               	goto	l6808
  8023  1319                     u4440:
  8024                           	
  8025  1319                     l11026:	
  8026  1319  0869               	movf	(_yCoord),w	;volatile
  8027  131A  3A03               	xorlw	03h
  8028  131B  1D03               	skipz
  8029  131C  2B1E               	goto	u4451
  8030  131D  2B1F               	goto	u4450
  8031  131E                     u4451:
  8032  131E  2B30               	goto	l6808
  8033  131F                     u4450:
  8034                           	line	358
  8035                           	
  8036  131F                     l11028:	
  8037                           ;main.c: 357: {
  8038                           ;main.c: 358: drive(0, 0, 0, 0);
  8039  131F  01A2               	clrf	(?_drive)
  8040  1320  01A3               	clrf	0+(?_drive)+01h
  8041  1321  01A4               	clrf	0+(?_drive)+02h
  8042  1322  3000               	movlw	(0)
  8043  1323  160A  118A  24DA   	fcall	_drive
              160A  118A         
  8044                           	line	359
  8045                           ;main.c: 359: play_iCreate_song(4);
  8046  1328  3004               	movlw	(04h)
  8047  1329  160A  118A  223A   	fcall	_play_iCreate_song
              160A  118A         
  8048                           	line	360
  8049                           	
  8050  132E                     l11030:	
  8051                           ;main.c: 360: home = 1;
  8052  132E  1770               	bsf	(_home/8),(_home)&7
  8053  132F  2B30               	goto	l6808
  8054                           	line	361
  8055                           	
  8056  1330                     l6807:	
  8057                           	line	362
  8058                           	
  8059  1330                     l6808:	
  8060  1330  0008               	return
  8061                           	opt stack 0
  8062                           GLOBAL	__end_of_checkIfHome
  8063  1331                     	__end_of_checkIfHome:
  8064 ;; =============== function _checkIfHome ends ============
  8065                           
  8066                           	signat	_checkIfHome,88
  8067                           	global	_turnAround
  8068                           psect	text1320,local,class=CODE,delta=2
  8069                           global __ptext1320
  8070  08A4                     __ptext1320:
  8071                           
  8072 ;; *************** function _turnAround *****************
  8073 ;; Defined at:
  8074 ;;		line 263 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;		None               void
  8081 ;; Registers used:
  8082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0
  8090 ;;      Temps:          0       3       0       0       0
  8091 ;;      Totals:         0       3       0       0       0
  8092 ;;Total ram usage:        3 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    3
  8095 ;; This function calls:
  8096 ;;		_drive
  8097 ;;		_waitFor
  8098 ;; This function is called by:
  8099 ;;		_goBackward
  8100 ;;		_main
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           psect	text1320
  8104                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  8105                           	line	263
  8106                           	global	__size_of_turnAround
  8107  0047                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  8108                           	
  8109  08A4                     _turnAround:	
  8110                           	opt	stack 2
  8111                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8112                           	line	264
  8113                           	
  8114  08A4                     l11018:	
  8115                           ;drive.c: 264: drive(0, 50, 0, 1);
  8116  08A4  3032               	movlw	(032h)
  8117  08A5  1283               	bcf	status, 5	;RP0=0, select bank0
  8118  08A6  1303               	bcf	status, 6	;RP1=0, select bank0
  8119  08A7  00A9               	movwf	(??_turnAround+0)+0
  8120  08A8  0829               	movf	(??_turnAround+0)+0,w
  8121  08A9  00A2               	movwf	(?_drive)
  8122  08AA  01A3               	clrf	0+(?_drive)+01h
  8123  08AB  01A4               	clrf	0+(?_drive)+02h
  8124  08AC  1403               	bsf	status,0
  8125  08AD  0DA4               	rlf	0+(?_drive)+02h,f
  8126  08AE  3000               	movlw	(0)
  8127  08AF  160A  118A  24DA   	fcall	_drive
              120A  158A         
  8128                           	line	265
  8129                           ;drive.c: 265: waitFor(157,0,180);
  8130  08B4  1283               	bcf	status, 5	;RP0=0, select bank0
  8131  08B5  1303               	bcf	status, 6	;RP1=0, select bank0
  8132  08B6  01A2               	clrf	(?_waitFor)
  8133  08B7  30B4               	movlw	(0B4h)
  8134  08B8  00A9               	movwf	(??_turnAround+0)+0
  8135  08B9  0829               	movf	(??_turnAround+0)+0,w
  8136  08BA  00A3               	movwf	0+(?_waitFor)+01h
  8137  08BB  309D               	movlw	(09Dh)
  8138  08BC  160A  118A  2431   	fcall	_waitFor
              120A  158A         
  8139                           	line	266
  8140                           ;drive.c: 266: drive(0, 0, 0, 0);
  8141  08C1  1283               	bcf	status, 5	;RP0=0, select bank0
  8142  08C2  1303               	bcf	status, 6	;RP1=0, select bank0
  8143  08C3  01A2               	clrf	(?_drive)
  8144  08C4  01A3               	clrf	0+(?_drive)+01h
  8145  08C5  01A4               	clrf	0+(?_drive)+02h
  8146  08C6  3000               	movlw	(0)
  8147  08C7  160A  118A  24DA   	fcall	_drive
              120A  158A         
  8148                           	line	267
  8149                           	
  8150  08CC                     l11020:	
  8151                           ;drive.c: 267: _delay((unsigned long)((3000)*(20000000/4000.0)));
  8152                           	opt asmopt_off
  8153  08CC  304D               movlw  77
  8154  08CD  1283               	bcf	status, 5	;RP0=0, select bank0
  8155  08CE  1303               	bcf	status, 6	;RP1=0, select bank0
  8156  08CF  00AB               movwf	((??_turnAround+0)+0+2),f
  8157  08D0  3019               movlw	25
  8158  08D1  00AA               movwf	((??_turnAround+0)+0+1),f
  8159  08D2  309A               	movlw	154
  8160  08D3  00A9               movwf	((??_turnAround+0)+0),f
  8161  08D4                     u5387:
  8162  08D4  0BA9               	decfsz	((??_turnAround+0)+0),f
  8163  08D5  28D4               	goto	u5387
  8164  08D6  0BAA               	decfsz	((??_turnAround+0)+0+1),f
  8165  08D7  28D4               	goto	u5387
  8166  08D8  0BAB               	decfsz	((??_turnAround+0)+0+2),f
  8167  08D9  28D4               	goto	u5387
  8168  08DA  28DB               	nop2
  8169                           opt asmopt_on
  8170                           
  8171                           	line	268
  8172                           	
  8173  08DB                     l11022:	
  8174                           ;drive.c: 268: _delay((unsigned long)((3000)*(20000000/4000.0)));
  8175                           	opt asmopt_off
  8176  08DB  304D               movlw  77
  8177  08DC  1283               	bcf	status, 5	;RP0=0, select bank0
  8178  08DD  1303               	bcf	status, 6	;RP1=0, select bank0
  8179  08DE  00AB               movwf	((??_turnAround+0)+0+2),f
  8180  08DF  3019               movlw	25
  8181  08E0  00AA               movwf	((??_turnAround+0)+0+1),f
  8182  08E1  309A               	movlw	154
  8183  08E2  00A9               movwf	((??_turnAround+0)+0),f
  8184  08E3                     u5397:
  8185  08E3  0BA9               	decfsz	((??_turnAround+0)+0),f
  8186  08E4  28E3               	goto	u5397
  8187  08E5  0BAA               	decfsz	((??_turnAround+0)+0+1),f
  8188  08E6  28E3               	goto	u5397
  8189  08E7  0BAB               	decfsz	((??_turnAround+0)+0+2),f
  8190  08E8  28E3               	goto	u5397
  8191  08E9  28EA               	nop2
  8192                           opt asmopt_on
  8193                           
  8194                           	line	269
  8195                           	
  8196  08EA                     l5876:	
  8197  08EA  0008               	return
  8198                           	opt stack 0
  8199                           GLOBAL	__end_of_turnAround
  8200  08EB                     	__end_of_turnAround:
  8201 ;; =============== function _turnAround ends ============
  8202                           
  8203                           	signat	_turnAround,88
  8204                           	global	_turnLeft90
  8205                           psect	text1321,local,class=CODE,delta=2
  8206                           global __ptext1321
  8207  09D0                     __ptext1321:
  8208                           
  8209 ;; *************** function _turnLeft90 *****************
  8210 ;; Defined at:
  8211 ;;		line 272 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;		None
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;		None
  8216 ;; Return value:  Size  Location     Type
  8217 ;;		None               void
  8218 ;; Registers used:
  8219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8220 ;; Tracked objects:
  8221 ;;		On entry : 0/0
  8222 ;;		On exit  : 0/0
  8223 ;;		Unchanged: 0/0
  8224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8225 ;;      Params:         0       0       0       0       0
  8226 ;;      Locals:         0       0       0       0       0
  8227 ;;      Temps:          0       3       0       0       0
  8228 ;;      Totals:         0       3       0       0       0
  8229 ;;Total ram usage:        3 bytes
  8230 ;; Hardware stack levels used:    1
  8231 ;; Hardware stack levels required when called:    3
  8232 ;; This function calls:
  8233 ;;		_drive
  8234 ;;		_getCurrentX
  8235 ;;		_getCurrentY
  8236 ;;		_waitFor
  8237 ;; This function is called by:
  8238 ;;		_driveForDistance
  8239 ;;		_goLeft
  8240 ;;		_main
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           psect	text1321
  8244                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  8245                           	line	272
  8246                           	global	__size_of_turnLeft90
  8247  005A                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  8248                           	
  8249  09D0                     _turnLeft90:	
  8250                           	opt	stack 2
  8251                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8252                           	line	273
  8253                           	
  8254  09D0                     l11006:	
  8255                           ;drive.c: 273: drive(0, 50, 0, 1);
  8256  09D0  3032               	movlw	(032h)
  8257  09D1  1283               	bcf	status, 5	;RP0=0, select bank0
  8258  09D2  1303               	bcf	status, 6	;RP1=0, select bank0
  8259  09D3  00A9               	movwf	(??_turnLeft90+0)+0
  8260  09D4  0829               	movf	(??_turnLeft90+0)+0,w
  8261  09D5  00A2               	movwf	(?_drive)
  8262  09D6  01A3               	clrf	0+(?_drive)+01h
  8263  09D7  01A4               	clrf	0+(?_drive)+02h
  8264  09D8  1403               	bsf	status,0
  8265  09D9  0DA4               	rlf	0+(?_drive)+02h,f
  8266  09DA  3000               	movlw	(0)
  8267  09DB  160A  118A  24DA   	fcall	_drive
              120A  158A         
  8268                           	line	274
  8269                           	
  8270  09E0                     l11008:	
  8271                           ;drive.c: 274: if( (getCurrentX() == 2 && getCurrentY() == 2))
  8272  09E0  160A  118A  21C4   	fcall	_getCurrentX
              120A  158A         
  8273  09E5  3A02               	xorlw	02h
  8274  09E6  1D03               	skipz
  8275  09E7  29E9               	goto	u4421
  8276  09E8  29EA               	goto	u4420
  8277  09E9                     u4421:
  8278  09E9  2A02               	goto	l11014
  8279  09EA                     u4420:
  8280                           	
  8281  09EA                     l11010:	
  8282  09EA  160A  118A  21C9   	fcall	_getCurrentY
              120A  158A         
  8283  09EF  3A02               	xorlw	02h
  8284  09F0  1D03               	skipz
  8285  09F1  29F3               	goto	u4431
  8286  09F2  29F4               	goto	u4430
  8287  09F3                     u4431:
  8288  09F3  2A02               	goto	l11014
  8289  09F4                     u4430:
  8290                           	line	276
  8291                           	
  8292  09F4                     l11012:	
  8293                           ;drive.c: 275: {
  8294                           ;drive.c: 276: waitFor(157,0,85);
  8295  09F4  1283               	bcf	status, 5	;RP0=0, select bank0
  8296  09F5  1303               	bcf	status, 6	;RP1=0, select bank0
  8297  09F6  01A2               	clrf	(?_waitFor)
  8298  09F7  3055               	movlw	(055h)
  8299  09F8  00A9               	movwf	(??_turnLeft90+0)+0
  8300  09F9  0829               	movf	(??_turnLeft90+0)+0,w
  8301  09FA  00A3               	movwf	0+(?_waitFor)+01h
  8302  09FB  309D               	movlw	(09Dh)
  8303  09FC  160A  118A  2431   	fcall	_waitFor
              120A  158A         
  8304                           	line	277
  8305                           ;drive.c: 277: }else
  8306  0A01  2A0F               	goto	l5880
  8307                           	
  8308  0A02                     l5879:	
  8309                           	line	279
  8310                           	
  8311  0A02                     l11014:	
  8312                           ;drive.c: 278: {
  8313                           ;drive.c: 279: waitFor(157,0,90);
  8314  0A02  1283               	bcf	status, 5	;RP0=0, select bank0
  8315  0A03  1303               	bcf	status, 6	;RP1=0, select bank0
  8316  0A04  01A2               	clrf	(?_waitFor)
  8317  0A05  305A               	movlw	(05Ah)
  8318  0A06  00A9               	movwf	(??_turnLeft90+0)+0
  8319  0A07  0829               	movf	(??_turnLeft90+0)+0,w
  8320  0A08  00A3               	movwf	0+(?_waitFor)+01h
  8321  0A09  309D               	movlw	(09Dh)
  8322  0A0A  160A  118A  2431   	fcall	_waitFor
              120A  158A         
  8323                           	line	280
  8324                           	
  8325  0A0F                     l5880:	
  8326                           	line	281
  8327                           ;drive.c: 280: }
  8328                           ;drive.c: 281: drive(0, 0, 0, 0);
  8329  0A0F  1283               	bcf	status, 5	;RP0=0, select bank0
  8330  0A10  1303               	bcf	status, 6	;RP1=0, select bank0
  8331  0A11  01A2               	clrf	(?_drive)
  8332  0A12  01A3               	clrf	0+(?_drive)+01h
  8333  0A13  01A4               	clrf	0+(?_drive)+02h
  8334  0A14  3000               	movlw	(0)
  8335  0A15  160A  118A  24DA   	fcall	_drive
              120A  158A         
  8336                           	line	282
  8337                           	
  8338  0A1A                     l11016:	
  8339                           ;drive.c: 282: _delay((unsigned long)((3000)*(20000000/4000.0)));
  8340                           	opt asmopt_off
  8341  0A1A  304D               movlw  77
  8342  0A1B  1283               	bcf	status, 5	;RP0=0, select bank0
  8343  0A1C  1303               	bcf	status, 6	;RP1=0, select bank0
  8344  0A1D  00AB               movwf	((??_turnLeft90+0)+0+2),f
  8345  0A1E  3019               movlw	25
  8346  0A1F  00AA               movwf	((??_turnLeft90+0)+0+1),f
  8347  0A20  309A               	movlw	154
  8348  0A21  00A9               movwf	((??_turnLeft90+0)+0),f
  8349  0A22                     u5407:
  8350  0A22  0BA9               	decfsz	((??_turnLeft90+0)+0),f
  8351  0A23  2A22               	goto	u5407
  8352  0A24  0BAA               	decfsz	((??_turnLeft90+0)+0+1),f
  8353  0A25  2A22               	goto	u5407
  8354  0A26  0BAB               	decfsz	((??_turnLeft90+0)+0+2),f
  8355  0A27  2A22               	goto	u5407
  8356  0A28  2A29               	nop2
  8357                           opt asmopt_on
  8358                           
  8359                           	line	283
  8360                           	
  8361  0A29                     l5881:	
  8362  0A29  0008               	return
  8363                           	opt stack 0
  8364                           GLOBAL	__end_of_turnLeft90
  8365  0A2A                     	__end_of_turnLeft90:
  8366 ;; =============== function _turnLeft90 ends ============
  8367                           
  8368                           	signat	_turnLeft90,88
  8369                           	global	_turnRight90
  8370                           psect	text1322,local,class=CODE,delta=2
  8371                           global __ptext1322
  8372  1675                     __ptext1322:
  8373                           
  8374 ;; *************** function _turnRight90 *****************
  8375 ;; Defined at:
  8376 ;;		line 286 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;		None               void
  8383 ;; Registers used:
  8384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8390 ;;      Params:         0       0       0       0       0
  8391 ;;      Locals:         0       0       0       0       0
  8392 ;;      Temps:          0       3       0       0       0
  8393 ;;      Totals:         0       3       0       0       0
  8394 ;;Total ram usage:        3 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    3
  8397 ;; This function calls:
  8398 ;;		_drive
  8399 ;;		_waitFor
  8400 ;; This function is called by:
  8401 ;;		_driveForDistance
  8402 ;;		_goRight
  8403 ;;		_main
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           psect	text1322
  8407                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  8408                           	line	286
  8409                           	global	__size_of_turnRight90
  8410  003F                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  8411                           	
  8412  1675                     _turnRight90:	
  8413                           	opt	stack 2
  8414                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8415                           	line	287
  8416                           	
  8417  1675                     l11002:	
  8418                           ;drive.c: 287: drive(0, 50, 255, 255);
  8419  1675  3032               	movlw	(032h)
  8420  1676  1283               	bcf	status, 5	;RP0=0, select bank0
  8421  1677  1303               	bcf	status, 6	;RP1=0, select bank0
  8422  1678  00A9               	movwf	(??_turnRight90+0)+0
  8423  1679  0829               	movf	(??_turnRight90+0)+0,w
  8424  167A  00A2               	movwf	(?_drive)
  8425  167B  30FF               	movlw	(0FFh)
  8426  167C  00AA               	movwf	(??_turnRight90+1)+0
  8427  167D  082A               	movf	(??_turnRight90+1)+0,w
  8428  167E  00A3               	movwf	0+(?_drive)+01h
  8429  167F  30FF               	movlw	(0FFh)
  8430  1680  00AB               	movwf	(??_turnRight90+2)+0
  8431  1681  082B               	movf	(??_turnRight90+2)+0,w
  8432  1682  00A4               	movwf	0+(?_drive)+02h
  8433  1683  3000               	movlw	(0)
  8434  1684  160A  118A  24DA   	fcall	_drive
              160A  118A         
  8435                           	line	288
  8436                           ;drive.c: 288: waitFor(157,255,174);
  8437  1689  30FF               	movlw	(0FFh)
  8438  168A  1283               	bcf	status, 5	;RP0=0, select bank0
  8439  168B  1303               	bcf	status, 6	;RP1=0, select bank0
  8440  168C  00A9               	movwf	(??_turnRight90+0)+0
  8441  168D  0829               	movf	(??_turnRight90+0)+0,w
  8442  168E  00A2               	movwf	(?_waitFor)
  8443  168F  30AE               	movlw	(0AEh)
  8444  1690  00AA               	movwf	(??_turnRight90+1)+0
  8445  1691  082A               	movf	(??_turnRight90+1)+0,w
  8446  1692  00A3               	movwf	0+(?_waitFor)+01h
  8447  1693  309D               	movlw	(09Dh)
  8448  1694  160A  118A  2431   	fcall	_waitFor
              160A  118A         
  8449                           	line	289
  8450                           ;drive.c: 289: drive(0, 0, 0, 0);
  8451  1699  1283               	bcf	status, 5	;RP0=0, select bank0
  8452  169A  1303               	bcf	status, 6	;RP1=0, select bank0
  8453  169B  01A2               	clrf	(?_drive)
  8454  169C  01A3               	clrf	0+(?_drive)+01h
  8455  169D  01A4               	clrf	0+(?_drive)+02h
  8456  169E  3000               	movlw	(0)
  8457  169F  160A  118A  24DA   	fcall	_drive
              160A  118A         
  8458                           	line	290
  8459                           	
  8460  16A4                     l11004:	
  8461                           ;drive.c: 290: _delay((unsigned long)((3000)*(20000000/4000.0)));
  8462                           	opt asmopt_off
  8463  16A4  304D               movlw  77
  8464  16A5  1283               	bcf	status, 5	;RP0=0, select bank0
  8465  16A6  1303               	bcf	status, 6	;RP1=0, select bank0
  8466  16A7  00AB               movwf	((??_turnRight90+0)+0+2),f
  8467  16A8  3019               movlw	25
  8468  16A9  00AA               movwf	((??_turnRight90+0)+0+1),f
  8469  16AA  309A               	movlw	154
  8470  16AB  00A9               movwf	((??_turnRight90+0)+0),f
  8471  16AC                     u5417:
  8472  16AC  0BA9               	decfsz	((??_turnRight90+0)+0),f
  8473  16AD  2EAC               	goto	u5417
  8474  16AE  0BAA               	decfsz	((??_turnRight90+0)+0+1),f
  8475  16AF  2EAC               	goto	u5417
  8476  16B0  0BAB               	decfsz	((??_turnRight90+0)+0+2),f
  8477  16B1  2EAC               	goto	u5417
  8478  16B2  2EB3               	nop2
  8479                           opt asmopt_on
  8480                           
  8481                           	line	291
  8482                           	
  8483  16B3                     l5884:	
  8484  16B3  0008               	return
  8485                           	opt stack 0
  8486                           GLOBAL	__end_of_turnRight90
  8487  16B4                     	__end_of_turnRight90:
  8488 ;; =============== function _turnRight90 ends ============
  8489                           
  8490                           	signat	_turnRight90,88
  8491                           	global	_initSongs
  8492                           psect	text1323,local,class=CODE,delta=2
  8493                           global __ptext1323
  8494  0A2A                     __ptext1323:
  8495                           
  8496 ;; *************** function _initSongs *****************
  8497 ;; Defined at:
  8498 ;;		line 32 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;		None
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;		None               void
  8505 ;; Registers used:
  8506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8512 ;;      Params:         0       0       0       0       0
  8513 ;;      Locals:         0       0       0       0       0
  8514 ;;      Temps:          0       0       0       0       0
  8515 ;;      Totals:         0       0       0       0       0
  8516 ;;Total ram usage:        0 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    3
  8519 ;; This function calls:
  8520 ;;		_ser_putArr
  8521 ;; This function is called by:
  8522 ;;		_init
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           psect	text1323
  8526                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
  8527                           	line	32
  8528                           	global	__size_of_initSongs
  8529  005B                     	__size_of_initSongs	equ	__end_of_initSongs-_initSongs
  8530                           	
  8531  0A2A                     _initSongs:	
  8532                           	opt	stack 3
  8533                           ; Regs used in _initSongs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8534                           	line	33
  8535                           	
  8536  0A2A                     l11000:	
  8537                           ;songs.c: 33: ser_putArr(finalCountdown, 27);
  8538  0A2A  30AD               	movlw	(_finalCountdown&0ffh)
  8539  0A2B  1283               	bcf	status, 5	;RP0=0, select bank0
  8540  0A2C  1303               	bcf	status, 6	;RP1=0, select bank0
  8541  0A2D  00A2               	movwf	(?_ser_putArr)
  8542  0A2E  3001               	movlw	(0x3/2)
  8543  0A2F  00A3               	movwf	(?_ser_putArr+1)
  8544  0A30  301B               	movlw	low(01Bh)
  8545  0A31  00A4               	movwf	0+(?_ser_putArr)+02h
  8546  0A32  3000               	movlw	high(01Bh)
  8547  0A33  00A5               	movwf	(0+(?_ser_putArr)+02h)+1
  8548  0A34  160A  118A  2511   	fcall	_ser_putArr
              120A  158A         
  8549                           	line	34
  8550                           ;songs.c: 34: ser_putArr(superMarioBros, 25);
  8551  0A39  30C8               	movlw	(_superMarioBros&0ffh)
  8552  0A3A  1283               	bcf	status, 5	;RP0=0, select bank0
  8553  0A3B  1303               	bcf	status, 6	;RP1=0, select bank0
  8554  0A3C  00A2               	movwf	(?_ser_putArr)
  8555  0A3D  3001               	movlw	(0x3/2)
  8556  0A3E  00A3               	movwf	(?_ser_putArr+1)
  8557  0A3F  3019               	movlw	low(019h)
  8558  0A40  00A4               	movwf	0+(?_ser_putArr)+02h
  8559  0A41  3000               	movlw	high(019h)
  8560  0A42  00A5               	movwf	(0+(?_ser_putArr)+02h)+1
  8561  0A43  160A  118A  2511   	fcall	_ser_putArr
              120A  158A         
  8562                           	line	35
  8563                           ;songs.c: 35: ser_putArr(lookingForU2, 29);
  8564  0A48  3090               	movlw	(_lookingForU2&0ffh)
  8565  0A49  1283               	bcf	status, 5	;RP0=0, select bank0
  8566  0A4A  1303               	bcf	status, 6	;RP1=0, select bank0
  8567  0A4B  00A2               	movwf	(?_ser_putArr)
  8568  0A4C  3001               	movlw	(0x3/2)
  8569  0A4D  00A3               	movwf	(?_ser_putArr+1)
  8570  0A4E  301D               	movlw	low(01Dh)
  8571  0A4F  00A4               	movwf	0+(?_ser_putArr)+02h
  8572  0A50  3000               	movlw	high(01Dh)
  8573  0A51  00A5               	movwf	(0+(?_ser_putArr)+02h)+1
  8574  0A52  160A  118A  2511   	fcall	_ser_putArr
              120A  158A         
  8575                           	line	36
  8576                           ;songs.c: 36: ser_putArr(champions, 21);
  8577  0A57  30C0               	movlw	(_champions&0ffh)
  8578  0A58  1283               	bcf	status, 5	;RP0=0, select bank0
  8579  0A59  1303               	bcf	status, 6	;RP1=0, select bank0
  8580  0A5A  00A2               	movwf	(?_ser_putArr)
  8581  0A5B  3000               	movlw	(0x1/2)
  8582  0A5C  00A3               	movwf	(?_ser_putArr+1)
  8583  0A5D  3015               	movlw	low(015h)
  8584  0A5E  00A4               	movwf	0+(?_ser_putArr)+02h
  8585  0A5F  3000               	movlw	high(015h)
  8586  0A60  00A5               	movwf	(0+(?_ser_putArr)+02h)+1
  8587  0A61  160A  118A  2511   	fcall	_ser_putArr
              120A  158A         
  8588                           	line	37
  8589                           ;songs.c: 37: ser_putArr(beep, 5);
  8590  0A66  30D5               	movlw	(_beep&0ffh)
  8591  0A67  1283               	bcf	status, 5	;RP0=0, select bank0
  8592  0A68  1303               	bcf	status, 6	;RP1=0, select bank0
  8593  0A69  00A2               	movwf	(?_ser_putArr)
  8594  0A6A  3000               	movlw	(0x1/2)
  8595  0A6B  00A3               	movwf	(?_ser_putArr+1)
  8596  0A6C  3005               	movlw	low(05h)
  8597  0A6D  00A4               	movwf	0+(?_ser_putArr)+02h
  8598  0A6E  3000               	movlw	high(05h)
  8599  0A6F  00A5               	movwf	(0+(?_ser_putArr)+02h)+1
  8600  0A70  160A  118A  2511   	fcall	_ser_putArr
              120A  158A         
  8601                           	line	38
  8602                           ;songs.c: 38: ser_putArr(longbeep, 6);
  8603  0A75  30DA               	movlw	(_longbeep&0ffh)
  8604  0A76  1283               	bcf	status, 5	;RP0=0, select bank0
  8605  0A77  1303               	bcf	status, 6	;RP1=0, select bank0
  8606  0A78  00A2               	movwf	(?_ser_putArr)
  8607  0A79  3000               	movlw	(0x1/2)
  8608  0A7A  00A3               	movwf	(?_ser_putArr+1)
  8609  0A7B  3006               	movlw	low(06h)
  8610  0A7C  00A4               	movwf	0+(?_ser_putArr)+02h
  8611  0A7D  3000               	movlw	high(06h)
  8612  0A7E  00A5               	movwf	(0+(?_ser_putArr)+02h)+1
  8613  0A7F  160A  118A  2511   	fcall	_ser_putArr
              120A  158A         
  8614                           	line	39
  8615                           	
  8616  0A84                     l4377:	
  8617  0A84  0008               	return
  8618                           	opt stack 0
  8619                           GLOBAL	__end_of_initSongs
  8620  0A85                     	__end_of_initSongs:
  8621 ;; =============== function _initSongs ends ============
  8622                           
  8623                           	signat	_initSongs,88
  8624                           	global	_lcd_init
  8625                           psect	text1324,local,class=CODE,delta=2
  8626                           global __ptext1324
  8627  1483                     __ptext1324:
  8628                           
  8629 ;; *************** function _lcd_init *****************
  8630 ;; Defined at:
  8631 ;;		line 78 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;		None
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;		None
  8636 ;; Return value:  Size  Location     Type
  8637 ;;		None               void
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0, pclath, cstack
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8645 ;;      Params:         0       0       0       0       0
  8646 ;;      Locals:         0       0       0       0       0
  8647 ;;      Temps:          0       0       0       0       0
  8648 ;;      Totals:         0       0       0       0       0
  8649 ;;Total ram usage:        0 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; Hardware stack levels required when called:    2
  8652 ;; This function calls:
  8653 ;;		_lcd_write_control
  8654 ;; This function is called by:
  8655 ;;		_init
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           psect	text1324
  8659                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  8660                           	line	78
  8661                           	global	__size_of_lcd_init
  8662  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  8663                           	
  8664  1483                     _lcd_init:	
  8665                           	opt	stack 4
  8666                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  8667                           	line	82
  8668                           	
  8669  1483                     l10980:	
  8670                           ;lcd.c: 82: ADCON1 = 0b00000010;
  8671  1483  3002               	movlw	(02h)
  8672  1484  1683               	bsf	status, 5	;RP0=1, select bank1
  8673  1485  1303               	bcf	status, 6	;RP1=0, select bank1
  8674  1486  009F               	movwf	(159)^080h	;volatile
  8675                           	line	85
  8676                           	
  8677  1487                     l10982:	
  8678                           ;lcd.c: 85: PORTD = 0;
  8679  1487  1283               	bcf	status, 5	;RP0=0, select bank0
  8680  1488  1303               	bcf	status, 6	;RP1=0, select bank0
  8681  1489  0188               	clrf	(8)	;volatile
  8682                           	line	86
  8683                           	
  8684  148A                     l10984:	
  8685                           ;lcd.c: 86: PORTE = 0;
  8686  148A  0189               	clrf	(9)	;volatile
  8687                           	line	88
  8688                           	
  8689  148B                     l10986:	
  8690                           ;lcd.c: 88: TRISD = 0b00000000;
  8691  148B  1683               	bsf	status, 5	;RP0=1, select bank1
  8692  148C  1303               	bcf	status, 6	;RP1=0, select bank1
  8693  148D  0188               	clrf	(136)^080h	;volatile
  8694                           	line	89
  8695                           	
  8696  148E                     l10988:	
  8697                           ;lcd.c: 89: TRISE = 0b00000000;
  8698  148E  0189               	clrf	(137)^080h	;volatile
  8699                           	line	92
  8700                           	
  8701  148F                     l10990:	
  8702                           ;lcd.c: 92: lcd_write_control(0b00000001);
  8703  148F  3001               	movlw	(01h)
  8704  1490  160A  118A  2272   	fcall	_lcd_write_control
              160A  118A         
  8705                           	line	93
  8706                           	
  8707  1495                     l10992:	
  8708                           ;lcd.c: 93: lcd_write_control(0b00111000);
  8709  1495  3038               	movlw	(038h)
  8710  1496  160A  118A  2272   	fcall	_lcd_write_control
              160A  118A         
  8711                           	line	94
  8712                           	
  8713  149B                     l10994:	
  8714                           ;lcd.c: 94: lcd_write_control(0b00001100);
  8715  149B  300C               	movlw	(0Ch)
  8716  149C  160A  118A  2272   	fcall	_lcd_write_control
              160A  118A         
  8717                           	line	95
  8718                           	
  8719  14A1                     l10996:	
  8720                           ;lcd.c: 95: lcd_write_control(0b00000110);
  8721  14A1  3006               	movlw	(06h)
  8722  14A2  160A  118A  2272   	fcall	_lcd_write_control
              160A  118A         
  8723                           	line	96
  8724                           	
  8725  14A7                     l10998:	
  8726                           ;lcd.c: 96: lcd_write_control(0b00000010);
  8727  14A7  3002               	movlw	(02h)
  8728  14A8  160A  118A  2272   	fcall	_lcd_write_control
              160A  118A         
  8729                           	line	98
  8730                           	
  8731  14AD                     l2153:	
  8732  14AD  0008               	return
  8733                           	opt stack 0
  8734                           GLOBAL	__end_of_lcd_init
  8735  14AE                     	__end_of_lcd_init:
  8736 ;; =============== function _lcd_init ends ============
  8737                           
  8738                           	signat	_lcd_init,88
  8739                           	global	_lcd_write_1_digit_bcd
  8740                           psect	text1325,local,class=CODE,delta=2
  8741                           global __ptext1325
  8742  1201                     __ptext1325:
  8743                           
  8744 ;; *************** function _lcd_write_1_digit_bcd *****************
  8745 ;; Defined at:
  8746 ;;		line 44 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  data            1    wreg     unsigned char 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  data            1    3[BANK0 ] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;		None               void
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0, pclath, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8760 ;;      Params:         0       0       0       0       0
  8761 ;;      Locals:         0       1       0       0       0
  8762 ;;      Temps:          0       0       0       0       0
  8763 ;;      Totals:         0       1       0       0       0
  8764 ;;Total ram usage:        1 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    2
  8767 ;; This function calls:
  8768 ;;		_lcd_write_data
  8769 ;; This function is called by:
  8770 ;;		_findFinalDestination
  8771 ;;		_lookForVictim
  8772 ;;		_updateLocation
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           psect	text1325
  8776                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  8777                           	line	44
  8778                           	global	__size_of_lcd_write_1_digit_bcd
  8779  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  8780                           	
  8781  1201                     _lcd_write_1_digit_bcd:	
  8782                           	opt	stack 4
  8783                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  8784                           ;lcd_write_1_digit_bcd@data stored from wreg
  8785  1201  1283               	bcf	status, 5	;RP0=0, select bank0
  8786  1202  1303               	bcf	status, 6	;RP1=0, select bank0
  8787  1203  00A3               	movwf	(lcd_write_1_digit_bcd@data)
  8788                           	line	45
  8789                           	
  8790  1204                     l10978:	
  8791                           ;lcd.c: 45: lcd_write_data(data + 48);
  8792  1204  0823               	movf	(lcd_write_1_digit_bcd@data),w
  8793  1205  3E30               	addlw	030h
  8794  1206  160A  118A  224C   	fcall	_lcd_write_data
              160A  118A         
  8795                           	line	46
  8796                           	
  8797  120B                     l2141:	
  8798  120B  0008               	return
  8799                           	opt stack 0
  8800                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  8801  120C                     	__end_of_lcd_write_1_digit_bcd:
  8802 ;; =============== function _lcd_write_1_digit_bcd ends ============
  8803                           
  8804                           	signat	_lcd_write_1_digit_bcd,4216
  8805                           	global	_lcd_set_cursor
  8806                           psect	text1326,local,class=CODE,delta=2
  8807                           global __ptext1326
  8808  11F6                     __ptext1326:
  8809                           
  8810 ;; *************** function _lcd_set_cursor *****************
  8811 ;; Defined at:
  8812 ;;		line 32 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;  address         1    wreg     unsigned char 
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;  address         1    3[BANK0 ] unsigned char 
  8817 ;; Return value:  Size  Location     Type
  8818 ;;		None               void
  8819 ;; Registers used:
  8820 ;;		wreg, status,2, status,0, pclath, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8826 ;;      Params:         0       0       0       0       0
  8827 ;;      Locals:         0       1       0       0       0
  8828 ;;      Temps:          0       0       0       0       0
  8829 ;;      Totals:         0       1       0       0       0
  8830 ;;Total ram usage:        1 bytes
  8831 ;; Hardware stack levels used:    1
  8832 ;; Hardware stack levels required when called:    2
  8833 ;; This function calls:
  8834 ;;		_lcd_write_control
  8835 ;; This function is called by:
  8836 ;;		_findFinalDestination
  8837 ;;		_goBackward
  8838 ;;		_goForward
  8839 ;;		_goLeft
  8840 ;;		_goReverse
  8841 ;;		_goRight
  8842 ;;		_checkForFinalDestination
  8843 ;;		_lookForVictim
  8844 ;;		_findWalls
  8845 ;;		_updateLocation
  8846 ;;		_main
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           psect	text1326
  8850                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  8851                           	line	32
  8852                           	global	__size_of_lcd_set_cursor
  8853  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  8854                           	
  8855  11F6                     _lcd_set_cursor:	
  8856                           	opt	stack 4
  8857                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  8858                           ;lcd_set_cursor@address stored from wreg
  8859  11F6  1283               	bcf	status, 5	;RP0=0, select bank0
  8860  11F7  1303               	bcf	status, 6	;RP1=0, select bank0
  8861  11F8  00A3               	movwf	(lcd_set_cursor@address)
  8862                           	line	33
  8863                           	
  8864  11F9                     l10974:	
  8865                           ;lcd.c: 33: address |= 0b10000000;
  8866  11F9  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  8867                           	line	34
  8868                           	
  8869  11FA                     l10976:	
  8870                           ;lcd.c: 34: lcd_write_control(address);
  8871  11FA  0823               	movf	(lcd_set_cursor@address),w
  8872  11FB  160A  118A  2272   	fcall	_lcd_write_control
              160A  118A         
  8873                           	line	35
  8874                           	
  8875  1200                     l2132:	
  8876  1200  0008               	return
  8877                           	opt stack 0
  8878                           GLOBAL	__end_of_lcd_set_cursor
  8879  1201                     	__end_of_lcd_set_cursor:
  8880 ;; =============== function _lcd_set_cursor ends ============
  8881                           
  8882                           	signat	_lcd_set_cursor,4216
  8883                           	global	_EEPROMToSerial
  8884                           psect	text1327,local,class=CODE,delta=2
  8885                           global __ptext1327
  8886  0BE7                     __ptext1327:
  8887                           
  8888 ;; *************** function _EEPROMToSerial *****************
  8889 ;; Defined at:
  8890 ;;		line 148 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  transferDone    1   10[BANK0 ] unsigned char 
  8895 ;; Return value:  Size  Location     Type
  8896 ;;		None               void
  8897 ;; Registers used:
  8898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8904 ;;      Params:         0       0       0       0       0
  8905 ;;      Locals:         0       1       0       0       0
  8906 ;;      Temps:          0       3       0       0       0
  8907 ;;      Totals:         0       4       0       0       0
  8908 ;;Total ram usage:        4 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; Hardware stack levels required when called:    3
  8911 ;; This function calls:
  8912 ;;		_readEEPROM
  8913 ;;		_ser_putch
  8914 ;; This function is called by:
  8915 ;;		_main
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           psect	text1327
  8919                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  8920                           	line	148
  8921                           	global	__size_of_EEPROMToSerial
  8922  007F                     	__size_of_EEPROMToSerial	equ	__end_of_EEPROMToSerial-_EEPROMToSerial
  8923                           	
  8924  0BE7                     _EEPROMToSerial:	
  8925                           	opt	stack 4
  8926                           ; Regs used in _EEPROMToSerial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8927                           	line	149
  8928                           	
  8929  0BE7                     l10948:	
  8930                           ;eeprom.c: 149: char transferDone = 0;
  8931  0BE7  1283               	bcf	status, 5	;RP0=0, select bank0
  8932  0BE8  1303               	bcf	status, 6	;RP1=0, select bank0
  8933  0BE9  01AA               	clrf	(EEPROMToSerial@transferDone)
  8934                           	line	150
  8935                           ;eeprom.c: 150: addressCurrent = 0;
  8936  0BEA  01D6               	clrf	(_addressCurrent)
  8937                           	line	151
  8938                           	
  8939  0BEB                     l10950:	
  8940                           ;eeprom.c: 151: addressCount = readEEPROM(0,0);
  8941  0BEB  01A1               	clrf	(?_readEEPROM)
  8942  0BEC  3000               	movlw	(0)
  8943  0BED  160A  118A  26B4   	fcall	_readEEPROM
              120A  158A         
  8944  0BF2  1283               	bcf	status, 5	;RP0=0, select bank0
  8945  0BF3  1303               	bcf	status, 6	;RP1=0, select bank0
  8946  0BF4  00A7               	movwf	(??_EEPROMToSerial+0)+0
  8947  0BF5  0827               	movf	(??_EEPROMToSerial+0)+0,w
  8948  0BF6  00D5               	movwf	(_addressCount)
  8949                           	line	152
  8950                           	
  8951  0BF7                     l10952:	
  8952                           ;eeprom.c: 152: _delay((unsigned long)((100)*(20000000/4000.0)));
  8953                           	opt asmopt_off
  8954  0BF7  3003               movlw  3
  8955  0BF8  00A9               movwf	((??_EEPROMToSerial+0)+0+2),f
  8956  0BF9  308A               movlw	138
  8957  0BFA  00A8               movwf	((??_EEPROMToSerial+0)+0+1),f
  8958  0BFB  3056               	movlw	86
  8959  0BFC  00A7               movwf	((??_EEPROMToSerial+0)+0),f
  8960  0BFD                     u5427:
  8961  0BFD  0BA7               	decfsz	((??_EEPROMToSerial+0)+0),f
  8962  0BFE  2BFD               	goto	u5427
  8963  0BFF  0BA8               	decfsz	((??_EEPROMToSerial+0)+0+1),f
  8964  0C00  2BFD               	goto	u5427
  8965  0C01  0BA9               	decfsz	((??_EEPROMToSerial+0)+0+2),f
  8966  0C02  2BFD               	goto	u5427
  8967  0C03  2C04               	nop2
  8968                           opt asmopt_on
  8969                           
  8970                           	line	154
  8971                           	
  8972  0C04                     l10954:	
  8973                           ;eeprom.c: 154: ser_putch(254);
  8974  0C04  30FE               	movlw	(0FEh)
  8975  0C05  160A  118A  2331   	fcall	_ser_putch
              120A  158A         
  8976                           	line	156
  8977                           ;eeprom.c: 156: while(!transferDone && addressCount > 0)
  8978  0C0A  2C3C               	goto	l1433
  8979                           	
  8980  0C0B                     l1434:	
  8981                           	line	158
  8982                           	
  8983  0C0B                     l10956:	
  8984                           ;eeprom.c: 157: {
  8985                           ;eeprom.c: 158: ser_putch(readEEPROM(0,1 + addressCurrent));
  8986  0C0B  1283               	bcf	status, 5	;RP0=0, select bank0
  8987  0C0C  1303               	bcf	status, 6	;RP1=0, select bank0
  8988  0C0D  0856               	movf	(_addressCurrent),w
  8989  0C0E  3E01               	addlw	01h
  8990  0C0F  00A7               	movwf	(??_EEPROMToSerial+0)+0
  8991  0C10  0827               	movf	(??_EEPROMToSerial+0)+0,w
  8992  0C11  00A1               	movwf	(?_readEEPROM)
  8993  0C12  3000               	movlw	(0)
  8994  0C13  160A  118A  26B4   	fcall	_readEEPROM
              120A  158A         
  8995  0C18  160A  118A  2331   	fcall	_ser_putch
              120A  158A         
  8996                           	line	159
  8997                           	
  8998  0C1D                     l10958:	
  8999                           ;eeprom.c: 159: _delay((unsigned long)((100)*(20000000/4000.0)));
  9000                           	opt asmopt_off
  9001  0C1D  3003               movlw  3
  9002  0C1E  1283               	bcf	status, 5	;RP0=0, select bank0
  9003  0C1F  1303               	bcf	status, 6	;RP1=0, select bank0
  9004  0C20  00A9               movwf	((??_EEPROMToSerial+0)+0+2),f
  9005  0C21  308A               movlw	138
  9006  0C22  00A8               movwf	((??_EEPROMToSerial+0)+0+1),f
  9007  0C23  3056               	movlw	86
  9008  0C24  00A7               movwf	((??_EEPROMToSerial+0)+0),f
  9009  0C25                     u5437:
  9010  0C25  0BA7               	decfsz	((??_EEPROMToSerial+0)+0),f
  9011  0C26  2C25               	goto	u5437
  9012  0C27  0BA8               	decfsz	((??_EEPROMToSerial+0)+0+1),f
  9013  0C28  2C25               	goto	u5437
  9014  0C29  0BA9               	decfsz	((??_EEPROMToSerial+0)+0+2),f
  9015  0C2A  2C25               	goto	u5437
  9016  0C2B  2C2C               	nop2
  9017                           opt asmopt_on
  9018                           
  9019                           	line	160
  9020                           	
  9021  0C2C                     l10960:	
  9022                           ;eeprom.c: 160: addressCurrent ++;
  9023  0C2C  3001               	movlw	(01h)
  9024  0C2D  1283               	bcf	status, 5	;RP0=0, select bank0
  9025  0C2E  1303               	bcf	status, 6	;RP1=0, select bank0
  9026  0C2F  00A7               	movwf	(??_EEPROMToSerial+0)+0
  9027  0C30  0827               	movf	(??_EEPROMToSerial+0)+0,w
  9028  0C31  07D6               	addwf	(_addressCurrent),f
  9029                           	line	161
  9030                           	
  9031  0C32                     l10962:	
  9032                           ;eeprom.c: 161: if(addressCurrent >= (addressCount))
  9033  0C32  0855               	movf	(_addressCount),w
  9034  0C33  0256               	subwf	(_addressCurrent),w
  9035  0C34  1C03               	skipc
  9036  0C35  2C37               	goto	u4391
  9037  0C36  2C38               	goto	u4390
  9038  0C37                     u4391:
  9039  0C37  2C3C               	goto	l1433
  9040  0C38                     u4390:
  9041                           	line	163
  9042                           	
  9043  0C38                     l10964:	
  9044                           ;eeprom.c: 162: {
  9045                           ;eeprom.c: 163: transferDone = 1;
  9046  0C38  01AA               	clrf	(EEPROMToSerial@transferDone)
  9047  0C39  1403               	bsf	status,0
  9048  0C3A  0DAA               	rlf	(EEPROMToSerial@transferDone),f
  9049  0C3B  2C3C               	goto	l1433
  9050                           	line	164
  9051                           	
  9052  0C3C                     l1435:	
  9053                           	line	165
  9054                           	
  9055  0C3C                     l1433:	
  9056                           	line	156
  9057  0C3C  1283               	bcf	status, 5	;RP0=0, select bank0
  9058  0C3D  1303               	bcf	status, 6	;RP1=0, select bank0
  9059  0C3E  08AA               	movf	(EEPROMToSerial@transferDone),f
  9060  0C3F  1D03               	skipz
  9061  0C40  2C42               	goto	u4401
  9062  0C41  2C43               	goto	u4400
  9063  0C42                     u4401:
  9064  0C42  2C4A               	goto	l10968
  9065  0C43                     u4400:
  9066                           	
  9067  0C43                     l10966:	
  9068  0C43  08D5               	movf	(_addressCount),f
  9069  0C44  1D03               	skipz
  9070  0C45  2C47               	goto	u4411
  9071  0C46  2C48               	goto	u4410
  9072  0C47                     u4411:
  9073  0C47  2C0B               	goto	l10956
  9074  0C48                     u4410:
  9075  0C48  2C4A               	goto	l10968
  9076                           	
  9077  0C49                     l1437:	
  9078  0C49  2C4A               	goto	l10968
  9079                           	
  9080  0C4A                     l1438:	
  9081                           	line	167
  9082                           	
  9083  0C4A                     l10968:	
  9084                           ;eeprom.c: 164: }
  9085                           ;eeprom.c: 165: }
  9086                           ;eeprom.c: 167: ser_putch(255);
  9087  0C4A  30FF               	movlw	(0FFh)
  9088  0C4B  160A  118A  2331   	fcall	_ser_putch
              120A  158A         
  9089                           	line	168
  9090                           	
  9091  0C50                     l10970:	
  9092                           ;eeprom.c: 168: _delay((unsigned long)((100)*(20000000/4000.0)));
  9093                           	opt asmopt_off
  9094  0C50  3003               movlw  3
  9095  0C51  1283               	bcf	status, 5	;RP0=0, select bank0
  9096  0C52  1303               	bcf	status, 6	;RP1=0, select bank0
  9097  0C53  00A9               movwf	((??_EEPROMToSerial+0)+0+2),f
  9098  0C54  308A               movlw	138
  9099  0C55  00A8               movwf	((??_EEPROMToSerial+0)+0+1),f
  9100  0C56  3056               	movlw	86
  9101  0C57  00A7               movwf	((??_EEPROMToSerial+0)+0),f
  9102  0C58                     u5447:
  9103  0C58  0BA7               	decfsz	((??_EEPROMToSerial+0)+0),f
  9104  0C59  2C58               	goto	u5447
  9105  0C5A  0BA8               	decfsz	((??_EEPROMToSerial+0)+0+1),f
  9106  0C5B  2C58               	goto	u5447
  9107  0C5C  0BA9               	decfsz	((??_EEPROMToSerial+0)+0+2),f
  9108  0C5D  2C58               	goto	u5447
  9109  0C5E  2C5F               	nop2
  9110                           opt asmopt_on
  9111                           
  9112                           	line	169
  9113                           	
  9114  0C5F                     l10972:	
  9115                           ;eeprom.c: 169: ser_putch(255);
  9116  0C5F  30FF               	movlw	(0FFh)
  9117  0C60  160A  118A  2331   	fcall	_ser_putch
              120A  158A         
  9118                           	line	170
  9119                           	
  9120  0C65                     l1439:	
  9121  0C65  0008               	return
  9122                           	opt stack 0
  9123                           GLOBAL	__end_of_EEPROMToSerial
  9124  0C66                     	__end_of_EEPROMToSerial:
  9125 ;; =============== function _EEPROMToSerial ends ============
  9126                           
  9127                           	signat	_EEPROMToSerial,88
  9128                           	global	_addNewData
  9129                           psect	text1328,local,class=CODE,delta=2
  9130                           global __ptext1328
  9131  12D4                     __ptext1328:
  9132                           
  9133 ;; *************** function _addNewData *****************
  9134 ;; Defined at:
  9135 ;;		line 94 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  data            1    wreg     unsigned char 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  data            1    8[BANK0 ] unsigned char 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;		None               void
  9142 ;; Registers used:
  9143 ;;		wreg, status,2, status,0, pclath, cstack
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9149 ;;      Params:         0       0       0       0       0
  9150 ;;      Locals:         0       1       0       0       0
  9151 ;;      Temps:          0       1       0       0       0
  9152 ;;      Totals:         0       2       0       0       0
  9153 ;;Total ram usage:        2 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; Hardware stack levels required when called:    3
  9156 ;; This function calls:
  9157 ;;		_writeEEPROM
  9158 ;; This function is called by:
  9159 ;;		_writeEEPROMTestData
  9160 ;;		_updateMapData
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           psect	text1328
  9164                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
  9165                           	line	94
  9166                           	global	__size_of_addNewData
  9167  001E                     	__size_of_addNewData	equ	__end_of_addNewData-_addNewData
  9168                           	
  9169  12D4                     _addNewData:	
  9170                           	opt	stack 3
  9171                           ; Regs used in _addNewData: [wreg+status,2+status,0+pclath+cstack]
  9172                           ;addNewData@data stored from wreg
  9173  12D4  1283               	bcf	status, 5	;RP0=0, select bank0
  9174  12D5  1303               	bcf	status, 6	;RP1=0, select bank0
  9175  12D6  00A8               	movwf	(addNewData@data)
  9176                           	line	95
  9177                           	
  9178  12D7                     l10942:	
  9179                           ;eeprom.c: 95: writeEEPROM(data,0,addressCount + 1);
  9180  12D7  01A1               	clrf	(?_writeEEPROM)
  9181  12D8  0855               	movf	(_addressCount),w
  9182  12D9  3E01               	addlw	01h
  9183  12DA  00A7               	movwf	(??_addNewData+0)+0
  9184  12DB  0827               	movf	(??_addNewData+0)+0,w
  9185  12DC  00A2               	movwf	0+(?_writeEEPROM)+01h
  9186  12DD  0828               	movf	(addNewData@data),w
  9187  12DE  160A  118A  2777   	fcall	_writeEEPROM
              160A  118A         
  9188                           	line	96
  9189                           	
  9190  12E3                     l10944:	
  9191                           ;eeprom.c: 96: addressCount ++;
  9192  12E3  3001               	movlw	(01h)
  9193  12E4  1283               	bcf	status, 5	;RP0=0, select bank0
  9194  12E5  1303               	bcf	status, 6	;RP1=0, select bank0
  9195  12E6  00A7               	movwf	(??_addNewData+0)+0
  9196  12E7  0827               	movf	(??_addNewData+0)+0,w
  9197  12E8  07D5               	addwf	(_addressCount),f
  9198                           	line	97
  9199                           	
  9200  12E9                     l10946:	
  9201                           ;eeprom.c: 97: writeEEPROM(addressCount,0,0);
  9202  12E9  01A1               	clrf	(?_writeEEPROM)
  9203  12EA  01A2               	clrf	0+(?_writeEEPROM)+01h
  9204  12EB  0855               	movf	(_addressCount),w
  9205  12EC  160A  118A  2777   	fcall	_writeEEPROM
              160A  118A         
  9206                           	line	98
  9207                           	
  9208  12F1                     l1424:	
  9209  12F1  0008               	return
  9210                           	opt stack 0
  9211                           GLOBAL	__end_of_addNewData
  9212  12F2                     	__end_of_addNewData:
  9213 ;; =============== function _addNewData ends ============
  9214                           
  9215                           	signat	_addNewData,4216
  9216                           	global	_lcd_write_string
  9217                           psect	text1329,local,class=CODE,delta=2
  9218                           global __ptext1329
  9219  1397                     __ptext1329:
  9220                           
  9221 ;; *************** function _lcd_write_string *****************
  9222 ;; Defined at:
  9223 ;;		line 38 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  s               1    wreg     PTR const unsigned char 
  9226 ;;		 -> STR_7(23), STR_6(23), STR_5(23), STR_4(17), 
  9227 ;;		 -> STR_3(17), STR_2(14), STR_1(15), 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9230 ;;		 -> STR_7(23), STR_6(23), STR_5(23), STR_4(17), 
  9231 ;;		 -> STR_3(17), STR_2(14), STR_1(15), 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;		None               void
  9234 ;; Registers used:
  9235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9241 ;;      Params:         0       0       0       0       0
  9242 ;;      Locals:         0       1       0       0       0
  9243 ;;      Temps:          0       1       0       0       0
  9244 ;;      Totals:         0       2       0       0       0
  9245 ;;Total ram usage:        2 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; Hardware stack levels required when called:    2
  9248 ;; This function calls:
  9249 ;;		_lcd_write_data
  9250 ;; This function is called by:
  9251 ;;		_main
  9252 ;;		_testEEPROM
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           psect	text1329
  9256                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
  9257                           	line	38
  9258                           	global	__size_of_lcd_write_string
  9259  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  9260                           	
  9261  1397                     _lcd_write_string:	
  9262                           	opt	stack 5
  9263                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9264                           ;lcd_write_string@s stored from wreg
  9265  1397  1283               	bcf	status, 5	;RP0=0, select bank0
  9266  1398  1303               	bcf	status, 6	;RP1=0, select bank0
  9267  1399  00A4               	movwf	(lcd_write_string@s)
  9268                           	line	40
  9269                           	
  9270  139A                     l10934:	
  9271                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  9272  139A  2BAE               	goto	l10940
  9273                           	
  9274  139B                     l2136:	
  9275                           	
  9276  139B                     l10936:	
  9277  139B  0824               	movf	(lcd_write_string@s),w
  9278  139C  0084               	movwf	fsr0
  9279  139D  120A  158A  2000   	fcall	stringdir
              160A  118A         
  9280  13A2  160A  118A  224C   	fcall	_lcd_write_data
              160A  118A         
  9281                           	
  9282  13A7                     l10938:	
  9283  13A7  3001               	movlw	(01h)
  9284  13A8  1283               	bcf	status, 5	;RP0=0, select bank0
  9285  13A9  1303               	bcf	status, 6	;RP1=0, select bank0
  9286  13AA  00A3               	movwf	(??_lcd_write_string+0)+0
  9287  13AB  0823               	movf	(??_lcd_write_string+0)+0,w
  9288  13AC  07A4               	addwf	(lcd_write_string@s),f
  9289  13AD  2BAE               	goto	l10940
  9290                           	
  9291  13AE                     l2135:	
  9292                           	
  9293  13AE                     l10940:	
  9294  13AE  0824               	movf	(lcd_write_string@s),w
  9295  13AF  0084               	movwf	fsr0
  9296  13B0  120A  158A  2000   	fcall	stringdir
              160A  118A         
  9297  13B5  3800               	iorlw	0
  9298  13B6  1D03               	skipz
  9299  13B7  2BB9               	goto	u4381
  9300  13B8  2BBA               	goto	u4380
  9301  13B9                     u4381:
  9302  13B9  2B9B               	goto	l10936
  9303  13BA                     u4380:
  9304  13BA  2BBB               	goto	l2138
  9305                           	
  9306  13BB                     l2137:	
  9307                           	line	41
  9308                           	
  9309  13BB                     l2138:	
  9310  13BB  0008               	return
  9311                           	opt stack 0
  9312                           GLOBAL	__end_of_lcd_write_string
  9313  13BC                     	__end_of_lcd_write_string:
  9314 ;; =============== function _lcd_write_string ends ============
  9315                           
  9316                           	signat	_lcd_write_string,4216
  9317                           	global	_adc_read_channel
  9318                           psect	text1330,local,class=CODE,delta=2
  9319                           global __ptext1330
  9320  16F4                     __ptext1330:
  9321                           
  9322 ;; *************** function _adc_read_channel *****************
  9323 ;; Defined at:
  9324 ;;		line 7 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\adc.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  channel         1    wreg     unsigned char 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;  channel         1   30[BANK0 ] unsigned char 
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  2   27[BANK0 ] int 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9338 ;;      Params:         0       2       0       0       0
  9339 ;;      Locals:         0       1       0       0       0
  9340 ;;      Temps:          0       1       0       0       0
  9341 ;;      Totals:         0       4       0       0       0
  9342 ;;Total ram usage:        4 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    3
  9345 ;; This function calls:
  9346 ;;		_adc_read
  9347 ;; This function is called by:
  9348 ;;		_readIR
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           psect	text1330
  9352                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\adc.c"
  9353                           	line	7
  9354                           	global	__size_of_adc_read_channel
  9355  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  9356                           	
  9357  16F4                     _adc_read_channel:	
  9358                           	opt	stack 2
  9359                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9360                           ;adc_read_channel@channel stored from wreg
  9361  16F4  1283               	bcf	status, 5	;RP0=0, select bank0
  9362  16F5  1303               	bcf	status, 6	;RP1=0, select bank0
  9363  16F6  00BE               	movwf	(adc_read_channel@channel)
  9364                           	line	8
  9365                           	
  9366  16F7                     l10918:	
  9367                           ;adc.c: 8: switch(channel)
  9368  16F7  2F11               	goto	l10926
  9369                           	line	10
  9370                           ;adc.c: 9: {
  9371                           ;adc.c: 10: case 0:
  9372                           	
  9373  16F8                     l690:	
  9374                           	line	11
  9375                           ;adc.c: 11: CHS0 = 0;
  9376  16F8  119F               	bcf	(251/8),(251)&7
  9377                           	line	12
  9378                           ;adc.c: 12: CHS1 = 0;
  9379  16F9  121F               	bcf	(252/8),(252)&7
  9380                           	line	13
  9381                           ;adc.c: 13: CHS2 = 0;
  9382  16FA  129F               	bcf	(253/8),(253)&7
  9383                           	line	14
  9384                           ;adc.c: 14: break;
  9385  16FB  2F22               	goto	l10928
  9386                           	line	15
  9387                           ;adc.c: 15: case 1:
  9388                           	
  9389  16FC                     l692:	
  9390                           	line	16
  9391                           ;adc.c: 16: CHS0 = 1;
  9392  16FC  159F               	bsf	(251/8),(251)&7
  9393                           	line	17
  9394                           ;adc.c: 17: CHS1 = 0;
  9395  16FD  121F               	bcf	(252/8),(252)&7
  9396                           	line	18
  9397                           ;adc.c: 18: CHS2 = 0;
  9398  16FE  129F               	bcf	(253/8),(253)&7
  9399                           	line	19
  9400                           ;adc.c: 19: break;
  9401  16FF  2F22               	goto	l10928
  9402                           	line	20
  9403                           ;adc.c: 20: case 2:
  9404                           	
  9405  1700                     l693:	
  9406                           	line	21
  9407                           ;adc.c: 21: CHS0 = 0;
  9408  1700  119F               	bcf	(251/8),(251)&7
  9409                           	line	22
  9410                           ;adc.c: 22: CHS1 = 1;
  9411  1701  161F               	bsf	(252/8),(252)&7
  9412                           	line	23
  9413                           ;adc.c: 23: CHS2 = 0;
  9414  1702  129F               	bcf	(253/8),(253)&7
  9415                           	line	24
  9416                           ;adc.c: 24: break;
  9417  1703  2F22               	goto	l10928
  9418                           	line	25
  9419                           ;adc.c: 25: case 3:
  9420                           	
  9421  1704                     l694:	
  9422                           	line	26
  9423                           ;adc.c: 26: CHS0 = 1;
  9424  1704  159F               	bsf	(251/8),(251)&7
  9425                           	line	27
  9426                           ;adc.c: 27: CHS1 = 1;
  9427  1705  161F               	bsf	(252/8),(252)&7
  9428                           	line	28
  9429                           ;adc.c: 28: CHS2 = 0;
  9430  1706  129F               	bcf	(253/8),(253)&7
  9431                           	line	29
  9432                           ;adc.c: 29: break;
  9433  1707  2F22               	goto	l10928
  9434                           	line	30
  9435                           ;adc.c: 30: case 4:
  9436                           	
  9437  1708                     l695:	
  9438                           	line	31
  9439                           ;adc.c: 31: CHS0 = 0;
  9440  1708  119F               	bcf	(251/8),(251)&7
  9441                           	line	32
  9442                           ;adc.c: 32: CHS1 = 0;
  9443  1709  121F               	bcf	(252/8),(252)&7
  9444                           	line	33
  9445                           ;adc.c: 33: CHS2 = 1;
  9446  170A  169F               	bsf	(253/8),(253)&7
  9447                           	line	34
  9448                           ;adc.c: 34: break;
  9449  170B  2F22               	goto	l10928
  9450                           	line	37
  9451                           ;adc.c: 37: default:
  9452                           	
  9453  170C                     l696:	
  9454                           	line	38
  9455                           	
  9456  170C                     l10920:	
  9457                           ;adc.c: 38: return 0;
  9458  170C  01BB               	clrf	(?_adc_read_channel)
  9459  170D  01BC               	clrf	(?_adc_read_channel+1)
  9460  170E  2F34               	goto	l697
  9461                           	
  9462  170F                     l10922:	
  9463  170F  2F34               	goto	l697
  9464                           	line	39
  9465                           	
  9466  1710                     l10924:	
  9467                           ;adc.c: 39: }
  9468  1710  2F22               	goto	l10928
  9469                           	line	8
  9470                           	
  9471  1711                     l689:	
  9472                           	
  9473  1711                     l10926:	
  9474  1711  083E               	movf	(adc_read_channel@channel),w
  9475                           	; Switch size 1, requested type "space"
  9476                           ; Number of cases is 5, Range of values is 0 to 4
  9477                           ; switch strategies available:
  9478                           ; Name         Instructions Cycles
  9479                           ; simple_byte           16     9 (average)
  9480                           ; direct_byte           23     8 (fixed)
  9481                           ; jumptable            260     6 (fixed)
  9482                           ; rangetable             9     6 (fixed)
  9483                           ; spacedrange           16     9 (fixed)
  9484                           ; locatedrange           5     3 (fixed)
  9485                           ;	Chosen strategy is simple_byte
  9486                           
  9487                           	opt asmopt_off
  9488  1712  3A00               	xorlw	0^0	; case 0
  9489  1713  1903               	skipnz
  9490  1714  2EF8               	goto	l690
  9491  1715  3A01               	xorlw	1^0	; case 1
  9492  1716  1903               	skipnz
  9493  1717  2EFC               	goto	l692
  9494  1718  3A03               	xorlw	2^1	; case 2
  9495  1719  1903               	skipnz
  9496  171A  2F00               	goto	l693
  9497  171B  3A01               	xorlw	3^2	; case 3
  9498  171C  1903               	skipnz
  9499  171D  2F04               	goto	l694
  9500  171E  3A07               	xorlw	4^3	; case 4
  9501  171F  1903               	skipnz
  9502  1720  2F08               	goto	l695
  9503  1721  2F0C               	goto	l10920
  9504                           	opt asmopt_on
  9505                           
  9506                           	line	39
  9507                           	
  9508  1722                     l691:	
  9509                           	line	41
  9510                           	
  9511  1722                     l10928:	
  9512                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9513                           	opt asmopt_off
  9514  1722  3053               movlw	83
  9515  1723  00BD               movwf	(??_adc_read_channel+0)+0,f
  9516  1724                     u5457:
  9517  1724  0BBD               decfsz	(??_adc_read_channel+0)+0,f
  9518  1725  2F24               	goto	u5457
  9519                           opt asmopt_on
  9520                           
  9521                           	line	43
  9522                           	
  9523  1726                     l10930:	
  9524                           ;adc.c: 43: return adc_read();
  9525  1726  160A  118A  2636   	fcall	_adc_read
              160A  118A         
  9526  172B  1283               	bcf	status, 5	;RP0=0, select bank0
  9527  172C  1303               	bcf	status, 6	;RP1=0, select bank0
  9528  172D  0830               	movf	(1+(?_adc_read)),w
  9529  172E  01BC               	clrf	(?_adc_read_channel+1)
  9530  172F  07BC               	addwf	(?_adc_read_channel+1)
  9531  1730  082F               	movf	(0+(?_adc_read)),w
  9532  1731  01BB               	clrf	(?_adc_read_channel)
  9533  1732  07BB               	addwf	(?_adc_read_channel)
  9534                           
  9535  1733  2F34               	goto	l697
  9536                           	
  9537  1734                     l10932:	
  9538                           	line	45
  9539                           	
  9540  1734                     l697:	
  9541  1734  0008               	return
  9542                           	opt stack 0
  9543                           GLOBAL	__end_of_adc_read_channel
  9544  1735                     	__end_of_adc_read_channel:
  9545 ;; =============== function _adc_read_channel ends ============
  9546                           
  9547                           	signat	_adc_read_channel,4218
  9548                           	global	_initIRobot
  9549                           psect	text1331,local,class=CODE,delta=2
  9550                           global __ptext1331
  9551  129C                     __ptext1331:
  9552                           
  9553 ;; *************** function _initIRobot *****************
  9554 ;; Defined at:
  9555 ;;		line 154 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;		None
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;		None
  9560 ;; Return value:  Size  Location     Type
  9561 ;;		None               void
  9562 ;; Registers used:
  9563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9569 ;;      Params:         0       0       0       0       0
  9570 ;;      Locals:         0       0       0       0       0
  9571 ;;      Temps:          0       3       0       0       0
  9572 ;;      Totals:         0       3       0       0       0
  9573 ;;Total ram usage:        3 bytes
  9574 ;; Hardware stack levels used:    1
  9575 ;; Hardware stack levels required when called:    2
  9576 ;; This function calls:
  9577 ;;		_ser_putch
  9578 ;; This function is called by:
  9579 ;;		_init
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           psect	text1331
  9583                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
  9584                           	line	154
  9585                           	global	__size_of_initIRobot
  9586  001C                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
  9587                           	
  9588  129C                     _initIRobot:	
  9589                           	opt	stack 4
  9590                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9591                           	line	155
  9592                           	
  9593  129C                     l10912:	
  9594                           ;main.c: 155: _delay((unsigned long)((100)*(20000000/4000.0)));
  9595                           	opt asmopt_off
  9596  129C  3003               movlw  3
  9597  129D  1283               	bcf	status, 5	;RP0=0, select bank0
  9598  129E  1303               	bcf	status, 6	;RP1=0, select bank0
  9599  129F  00A4               movwf	((??_initIRobot+0)+0+2),f
  9600  12A0  308A               movlw	138
  9601  12A1  00A3               movwf	((??_initIRobot+0)+0+1),f
  9602  12A2  3056               	movlw	86
  9603  12A3  00A2               movwf	((??_initIRobot+0)+0),f
  9604  12A4                     u5467:
  9605  12A4  0BA2               	decfsz	((??_initIRobot+0)+0),f
  9606  12A5  2AA4               	goto	u5467
  9607  12A6  0BA3               	decfsz	((??_initIRobot+0)+0+1),f
  9608  12A7  2AA4               	goto	u5467
  9609  12A8  0BA4               	decfsz	((??_initIRobot+0)+0+2),f
  9610  12A9  2AA4               	goto	u5467
  9611  12AA  2AAB               	nop2
  9612                           opt asmopt_on
  9613                           
  9614                           	line	156
  9615                           	
  9616  12AB                     l10914:	
  9617                           ;main.c: 156: ser_putch(128);
  9618  12AB  3080               	movlw	(080h)
  9619  12AC  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9620                           	line	157
  9621                           	
  9622  12B1                     l10916:	
  9623                           ;main.c: 157: ser_putch(132);
  9624  12B1  3084               	movlw	(084h)
  9625  12B2  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9626                           	line	158
  9627                           	
  9628  12B7                     l6747:	
  9629  12B7  0008               	return
  9630                           	opt stack 0
  9631                           GLOBAL	__end_of_initIRobot
  9632  12B8                     	__end_of_initIRobot:
  9633 ;; =============== function _initIRobot ends ============
  9634                           
  9635                           	signat	_initIRobot,88
  9636                           	global	_waitFor
  9637                           psect	text1332,local,class=CODE,delta=2
  9638                           global __ptext1332
  9639  1431                     __ptext1332:
  9640                           
  9641 ;; *************** function _waitFor *****************
  9642 ;; Defined at:
  9643 ;;		line 301 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  type            1    wreg     unsigned char 
  9646 ;;  highByte        1    2[BANK0 ] unsigned char 
  9647 ;;  lowByte         1    3[BANK0 ] unsigned char 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  type            1    7[BANK0 ] unsigned char 
  9650 ;; Return value:  Size  Location     Type
  9651 ;;		None               void
  9652 ;; Registers used:
  9653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9659 ;;      Params:         0       2       0       0       0
  9660 ;;      Locals:         0       1       0       0       0
  9661 ;;      Temps:          0       3       0       0       0
  9662 ;;      Totals:         0       6       0       0       0
  9663 ;;Total ram usage:        6 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:    2
  9666 ;; This function calls:
  9667 ;;		_ser_putch
  9668 ;; This function is called by:
  9669 ;;		_goReverse
  9670 ;;		_turnAround
  9671 ;;		_turnLeft90
  9672 ;;		_turnRight90
  9673 ;;		_wallFollow
  9674 ;;		_leftAngleCorrect
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           psect	text1332
  9678                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  9679                           	line	301
  9680                           	global	__size_of_waitFor
  9681  0029                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
  9682                           	
  9683  1431                     _waitFor:	
  9684                           	opt	stack 2
  9685                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9686                           ;waitFor@type stored from wreg
  9687  1431  1283               	bcf	status, 5	;RP0=0, select bank0
  9688  1432  1303               	bcf	status, 6	;RP1=0, select bank0
  9689  1433  00A7               	movwf	(waitFor@type)
  9690                           	line	302
  9691                           	
  9692  1434                     l10904:	
  9693                           ;drive.c: 302: _delay((unsigned long)((100)*(20000000/4000.0)));
  9694                           	opt asmopt_off
  9695  1434  3003               movlw  3
  9696  1435  00A6               movwf	((??_waitFor+0)+0+2),f
  9697  1436  308A               movlw	138
  9698  1437  00A5               movwf	((??_waitFor+0)+0+1),f
  9699  1438  3056               	movlw	86
  9700  1439  00A4               movwf	((??_waitFor+0)+0),f
  9701  143A                     u5477:
  9702  143A  0BA4               	decfsz	((??_waitFor+0)+0),f
  9703  143B  2C3A               	goto	u5477
  9704  143C  0BA5               	decfsz	((??_waitFor+0)+0+1),f
  9705  143D  2C3A               	goto	u5477
  9706  143E  0BA6               	decfsz	((??_waitFor+0)+0+2),f
  9707  143F  2C3A               	goto	u5477
  9708  1440  2C41               	nop2
  9709                           opt asmopt_on
  9710                           
  9711                           	line	303
  9712                           	
  9713  1441                     l10906:	
  9714                           ;drive.c: 303: ser_putch(type);
  9715  1441  1283               	bcf	status, 5	;RP0=0, select bank0
  9716  1442  1303               	bcf	status, 6	;RP1=0, select bank0
  9717  1443  0827               	movf	(waitFor@type),w
  9718  1444  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9719                           	line	304
  9720                           	
  9721  1449                     l10908:	
  9722                           ;drive.c: 304: ser_putch(highByte);
  9723  1449  1283               	bcf	status, 5	;RP0=0, select bank0
  9724  144A  1303               	bcf	status, 6	;RP1=0, select bank0
  9725  144B  0822               	movf	(waitFor@highByte),w
  9726  144C  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9727                           	line	305
  9728                           	
  9729  1451                     l10910:	
  9730                           ;drive.c: 305: ser_putch(lowByte);
  9731  1451  1283               	bcf	status, 5	;RP0=0, select bank0
  9732  1452  1303               	bcf	status, 6	;RP1=0, select bank0
  9733  1453  0823               	movf	(waitFor@lowByte),w
  9734  1454  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9735                           	line	306
  9736                           	
  9737  1459                     l5891:	
  9738  1459  0008               	return
  9739                           	opt stack 0
  9740                           GLOBAL	__end_of_waitFor
  9741  145A                     	__end_of_waitFor:
  9742 ;; =============== function _waitFor ends ============
  9743                           
  9744                           	signat	_waitFor,12408
  9745                           	global	_drive
  9746                           psect	text1333,local,class=CODE,delta=2
  9747                           global __ptext1333
  9748  14DA                     __ptext1333:
  9749                           
  9750 ;; *************** function _drive *****************
  9751 ;; Defined at:
  9752 ;;		line 22 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  highByteSpee    1    wreg     unsigned char 
  9755 ;;  lowByteSpeed    1    2[BANK0 ] unsigned char 
  9756 ;;  highByteRadi    1    3[BANK0 ] unsigned char 
  9757 ;;  lowByteRadiu    1    4[BANK0 ] unsigned char 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  highByteSpee    1    8[BANK0 ] unsigned char 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;		None               void
  9762 ;; Registers used:
  9763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9769 ;;      Params:         0       3       0       0       0
  9770 ;;      Locals:         0       1       0       0       0
  9771 ;;      Temps:          0       3       0       0       0
  9772 ;;      Totals:         0       7       0       0       0
  9773 ;;Total ram usage:        7 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    2
  9776 ;; This function calls:
  9777 ;;		_ser_putch
  9778 ;; This function is called by:
  9779 ;;		_driveForDistance
  9780 ;;		_goReverse
  9781 ;;		_turnAround
  9782 ;;		_turnLeft90
  9783 ;;		_turnRight90
  9784 ;;		_frontWallCorrect
  9785 ;;		_checkIfHome
  9786 ;;		_main
  9787 ;;		_wallFollow
  9788 ;;		_leftAngleCorrect
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           psect	text1333
  9792                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
  9793                           	line	22
  9794                           	global	__size_of_drive
  9795  0037                     	__size_of_drive	equ	__end_of_drive-_drive
  9796                           	
  9797  14DA                     _drive:	
  9798                           	opt	stack 4
  9799                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9800                           ;drive@highByteSpeed stored from wreg
  9801  14DA  1283               	bcf	status, 5	;RP0=0, select bank0
  9802  14DB  1303               	bcf	status, 6	;RP1=0, select bank0
  9803  14DC  00A8               	movwf	(drive@highByteSpeed)
  9804                           	line	23
  9805                           	
  9806  14DD                     l10892:	
  9807                           ;drive.c: 23: _delay((unsigned long)((100)*(20000000/4000.0)));
  9808                           	opt asmopt_off
  9809  14DD  3003               movlw  3
  9810  14DE  00A7               movwf	((??_drive+0)+0+2),f
  9811  14DF  308A               movlw	138
  9812  14E0  00A6               movwf	((??_drive+0)+0+1),f
  9813  14E1  3056               	movlw	86
  9814  14E2  00A5               movwf	((??_drive+0)+0),f
  9815  14E3                     u5487:
  9816  14E3  0BA5               	decfsz	((??_drive+0)+0),f
  9817  14E4  2CE3               	goto	u5487
  9818  14E5  0BA6               	decfsz	((??_drive+0)+0+1),f
  9819  14E6  2CE3               	goto	u5487
  9820  14E7  0BA7               	decfsz	((??_drive+0)+0+2),f
  9821  14E8  2CE3               	goto	u5487
  9822  14E9  2CEA               	nop2
  9823                           opt asmopt_on
  9824                           
  9825                           	line	24
  9826                           	
  9827  14EA                     l10894:	
  9828                           ;drive.c: 24: ser_putch(137);
  9829  14EA  3089               	movlw	(089h)
  9830  14EB  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9831                           	line	25
  9832                           	
  9833  14F0                     l10896:	
  9834                           ;drive.c: 25: ser_putch(highByteSpeed);
  9835  14F0  1283               	bcf	status, 5	;RP0=0, select bank0
  9836  14F1  1303               	bcf	status, 6	;RP1=0, select bank0
  9837  14F2  0828               	movf	(drive@highByteSpeed),w
  9838  14F3  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9839                           	line	26
  9840                           	
  9841  14F8                     l10898:	
  9842                           ;drive.c: 26: ser_putch(lowByteSpeed);
  9843  14F8  1283               	bcf	status, 5	;RP0=0, select bank0
  9844  14F9  1303               	bcf	status, 6	;RP1=0, select bank0
  9845  14FA  0822               	movf	(drive@lowByteSpeed),w
  9846  14FB  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9847                           	line	27
  9848                           	
  9849  1500                     l10900:	
  9850                           ;drive.c: 27: ser_putch(highByteRadius);
  9851  1500  1283               	bcf	status, 5	;RP0=0, select bank0
  9852  1501  1303               	bcf	status, 6	;RP1=0, select bank0
  9853  1502  0823               	movf	(drive@highByteRadius),w
  9854  1503  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9855                           	line	28
  9856                           	
  9857  1508                     l10902:	
  9858                           ;drive.c: 28: ser_putch(lowByteRadius);
  9859  1508  1283               	bcf	status, 5	;RP0=0, select bank0
  9860  1509  1303               	bcf	status, 6	;RP1=0, select bank0
  9861  150A  0824               	movf	(drive@lowByteRadius),w
  9862  150B  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
  9863                           	line	29
  9864                           	
  9865  1510                     l5820:	
  9866  1510  0008               	return
  9867                           	opt stack 0
  9868                           GLOBAL	__end_of_drive
  9869  1511                     	__end_of_drive:
  9870 ;; =============== function _drive ends ============
  9871                           
  9872                           	signat	_drive,16504
  9873                           	global	_rotateIR
  9874                           psect	text1334,local,class=CODE,delta=2
  9875                           global __ptext1334
  9876  1584                     __ptext1334:
  9877                           
  9878 ;; *************** function _rotateIR *****************
  9879 ;; Defined at:
  9880 ;;		line 39 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ir.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;  steps           1    wreg     unsigned char 
  9883 ;;  direction       1    0[BANK0 ] unsigned char 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;  steps           1    4[BANK0 ] unsigned char 
  9886 ;;  stepNum         1    5[BANK0 ] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;		None               void
  9889 ;; Registers used:
  9890 ;;		wreg, status,2, status,0
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9896 ;;      Params:         0       1       0       0       0
  9897 ;;      Locals:         0       2       0       0       0
  9898 ;;      Temps:          0       3       0       0       0
  9899 ;;      Totals:         0       6       0       0       0
  9900 ;;Total ram usage:        6 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    1
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_findWalls
  9907 ;;		_main
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           psect	text1334
  9911                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ir.c"
  9912                           	line	39
  9913                           	global	__size_of_rotateIR
  9914  003B                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
  9915                           	
  9916  1584                     _rotateIR:	
  9917                           	opt	stack 6
  9918                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
  9919                           ;rotateIR@steps stored from wreg
  9920  1584  1283               	bcf	status, 5	;RP0=0, select bank0
  9921  1585  1303               	bcf	status, 6	;RP1=0, select bank0
  9922  1586  00A4               	movwf	(rotateIR@steps)
  9923                           	line	40
  9924                           	
  9925  1587                     l10878:	
  9926                           ;ir.c: 40: PORTC |= 0b00000011;
  9927  1587  3003               	movlw	(03h)
  9928  1588  00A1               	movwf	(??_rotateIR+0)+0
  9929  1589  0821               	movf	(??_rotateIR+0)+0,w
  9930  158A  0487               	iorwf	(7),f	;volatile
  9931                           	line	41
  9932                           	
  9933  158B                     l10880:	
  9934                           ;ir.c: 41: SSPBUF = direction;
  9935  158B  0820               	movf	(rotateIR@direction),w
  9936  158C  0093               	movwf	(19)	;volatile
  9937                           	line	44
  9938                           ;ir.c: 44: for (char stepNum = 1; stepNum <= steps; ++stepNum)
  9939  158D  01A5               	clrf	(rotateIR@stepNum)
  9940  158E  1403               	bsf	status,0
  9941  158F  0DA5               	rlf	(rotateIR@stepNum),f
  9942  1590  2DA9               	goto	l5086
  9943                           	line	45
  9944                           	
  9945  1591                     l5087:	
  9946                           	line	46
  9947                           ;ir.c: 45: {
  9948                           ;ir.c: 46: PORTC |= 0b00000100;
  9949  1591  1507               	bsf	(7)+(2/8),(2)&7	;volatile
  9950                           	line	47
  9951                           	
  9952  1592                     l10882:	
  9953                           ;ir.c: 47: PORTC &= 0b11111011;
  9954  1592  30FB               	movlw	(0FBh)
  9955  1593  00A1               	movwf	(??_rotateIR+0)+0
  9956  1594  0821               	movf	(??_rotateIR+0)+0,w
  9957  1595  0587               	andwf	(7),f	;volatile
  9958                           	line	48
  9959                           	
  9960  1596                     l10884:	
  9961                           ;ir.c: 48: _delay((unsigned long)((50)*(20000000/4000.0)));
  9962                           	opt asmopt_off
  9963  1596  3002               movlw  2
  9964  1597  00A3               movwf	((??_rotateIR+0)+0+2),f
  9965  1598  3045               movlw	69
  9966  1599  00A2               movwf	((??_rotateIR+0)+0+1),f
  9967  159A  30A9               	movlw	169
  9968  159B  00A1               movwf	((??_rotateIR+0)+0),f
  9969  159C                     u5497:
  9970  159C  0BA1               	decfsz	((??_rotateIR+0)+0),f
  9971  159D  2D9C               	goto	u5497
  9972  159E  0BA2               	decfsz	((??_rotateIR+0)+0+1),f
  9973  159F  2D9C               	goto	u5497
  9974  15A0  0BA3               	decfsz	((??_rotateIR+0)+0+2),f
  9975  15A1  2D9C               	goto	u5497
  9976  15A2  2DA3               	nop2
  9977                           opt asmopt_on
  9978                           
  9979                           	line	44
  9980                           	
  9981  15A3                     l10886:	
  9982  15A3  3001               	movlw	(01h)
  9983  15A4  1283               	bcf	status, 5	;RP0=0, select bank0
  9984  15A5  1303               	bcf	status, 6	;RP1=0, select bank0
  9985  15A6  00A1               	movwf	(??_rotateIR+0)+0
  9986  15A7  0821               	movf	(??_rotateIR+0)+0,w
  9987  15A8  07A5               	addwf	(rotateIR@stepNum),f
  9988                           	
  9989  15A9                     l5086:	
  9990  15A9  0825               	movf	(rotateIR@stepNum),w
  9991  15AA  0224               	subwf	(rotateIR@steps),w
  9992  15AB  1803               	skipnc
  9993  15AC  2DAE               	goto	u4371
  9994  15AD  2DAF               	goto	u4370
  9995  15AE                     u4371:
  9996  15AE  2D91               	goto	l5087
  9997  15AF                     u4370:
  9998  15AF  2DB0               	goto	l10888
  9999                           	
 10000  15B0                     l5088:	
 10001                           	line	51
 10002                           	
 10003  15B0                     l10888:	
 10004                           ;ir.c: 49: }
 10005                           ;ir.c: 51: SSPBUF = 0b00000000;
 10006  15B0  0193               	clrf	(19)	;volatile
 10007                           	line	52
 10008                           	
 10009  15B1                     l10890:	
 10010                           ;ir.c: 52: _delay((unsigned long)((100)*(20000000/4000.0)));
 10011                           	opt asmopt_off
 10012  15B1  3003               movlw  3
 10013  15B2  00A3               movwf	((??_rotateIR+0)+0+2),f
 10014  15B3  308A               movlw	138
 10015  15B4  00A2               movwf	((??_rotateIR+0)+0+1),f
 10016  15B5  3056               	movlw	86
 10017  15B6  00A1               movwf	((??_rotateIR+0)+0),f
 10018  15B7                     u5507:
 10019  15B7  0BA1               	decfsz	((??_rotateIR+0)+0),f
 10020  15B8  2DB7               	goto	u5507
 10021  15B9  0BA2               	decfsz	((??_rotateIR+0)+0+1),f
 10022  15BA  2DB7               	goto	u5507
 10023  15BB  0BA3               	decfsz	((??_rotateIR+0)+0+2),f
 10024  15BC  2DB7               	goto	u5507
 10025  15BD  2DBE               	nop2
 10026                           opt asmopt_on
 10027                           
 10028                           	line	54
 10029                           	
 10030  15BE                     l5089:	
 10031  15BE  0008               	return
 10032                           	opt stack 0
 10033                           GLOBAL	__end_of_rotateIR
 10034  15BF                     	__end_of_rotateIR:
 10035 ;; =============== function _rotateIR ends ============
 10036                           
 10037                           	signat	_rotateIR,8312
 10038                           	global	_convert
 10039                           psect	text1335,local,class=CODE,delta=2
 10040                           global __ptext1335
 10041  02A9                     __ptext1335:
 10042                           
 10043 ;; *************** function _convert *****************
 10044 ;; Defined at:
 10045 ;;		line 11 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ir.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  adc_value       2   23[BANK0 ] int 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;		None
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  2   23[BANK0 ] int 
 10052 ;; Registers used:
 10053 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10059 ;;      Params:         0       2       0       0       0
 10060 ;;      Locals:         0       0       0       0       0
 10061 ;;      Temps:          0       2       0       0       0
 10062 ;;      Totals:         0       4       0       0       0
 10063 ;;Total ram usage:        4 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:    2
 10066 ;; This function calls:
 10067 ;;		___wmul
 10068 ;;		___awdiv
 10069 ;; This function is called by:
 10070 ;;		_readIR
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           psect	text1335
 10074                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ir.c"
 10075                           	line	11
 10076                           	global	__size_of_convert
 10077  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
 10078                           	
 10079  02A9                     _convert:	
 10080                           	opt	stack 3
 10081                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10082                           	line	12
 10083                           	
 10084  02A9                     l10818:	
 10085                           ;ir.c: 12: if(adc_value < 82)
 10086  02A9  1283               	bcf	status, 5	;RP0=0, select bank0
 10087  02AA  1303               	bcf	status, 6	;RP1=0, select bank0
 10088  02AB  0838               	movf	(convert@adc_value+1),w
 10089  02AC  3A80               	xorlw	80h
 10090  02AD  00FF               	movwf	btemp+1
 10091  02AE  3080               	movlw	(high(052h))^80h
 10092  02AF  027F               	subwf	btemp+1,w
 10093  02B0  1D03               	skipz
 10094  02B1  2AB4               	goto	u4305
 10095  02B2  3052               	movlw	low(052h)
 10096  02B3  0237               	subwf	(convert@adc_value),w
 10097  02B4                     u4305:
 10098                           
 10099  02B4  1803               	skipnc
 10100  02B5  2AB7               	goto	u4301
 10101  02B6  2AB8               	goto	u4300
 10102  02B7                     u4301:
 10103  02B7  2AC1               	goto	l10826
 10104  02B8                     u4300:
 10105                           	line	13
 10106                           	
 10107  02B8                     l10820:	
 10108                           ;ir.c: 13: return 999;
 10109  02B8  30E7               	movlw	low(03E7h)
 10110  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
 10111  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
 10112  02BB  00B7               	movwf	(?_convert)
 10113  02BC  3003               	movlw	high(03E7h)
 10114  02BD  00B8               	movwf	((?_convert))+1
 10115  02BE  2C77               	goto	l5067
 10116                           	
 10117  02BF                     l10822:	
 10118  02BF  2C77               	goto	l5067
 10119                           	
 10120  02C0                     l10824:	
 10121  02C0  2C77               	goto	l5067
 10122                           	line	14
 10123                           	
 10124  02C1                     l5066:	
 10125                           	
 10126  02C1                     l10826:	
 10127                           ;ir.c: 14: else if(adc_value < 133)
 10128  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
 10129  02C2  1303               	bcf	status, 6	;RP1=0, select bank0
 10130  02C3  0838               	movf	(convert@adc_value+1),w
 10131  02C4  3A80               	xorlw	80h
 10132  02C5  00FF               	movwf	btemp+1
 10133  02C6  3080               	movlw	(high(085h))^80h
 10134  02C7  027F               	subwf	btemp+1,w
 10135  02C8  1D03               	skipz
 10136  02C9  2ACC               	goto	u4315
 10137  02CA  3085               	movlw	low(085h)
 10138  02CB  0237               	subwf	(convert@adc_value),w
 10139  02CC                     u4315:
 10140                           
 10141  02CC  1803               	skipnc
 10142  02CD  2ACF               	goto	u4311
 10143  02CE  2AD0               	goto	u4310
 10144  02CF                     u4311:
 10145  02CF  2B08               	goto	l10834
 10146  02D0                     u4310:
 10147                           	line	15
 10148                           	
 10149  02D0                     l10828:	
 10150                           ;ir.c: 15: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
 10151  02D0  3033               	movlw	low(033h)
 10152  02D1  1283               	bcf	status, 5	;RP0=0, select bank0
 10153  02D2  1303               	bcf	status, 6	;RP1=0, select bank0
 10154  02D3  00A6               	movwf	(?___awdiv)
 10155  02D4  3000               	movlw	high(033h)
 10156  02D5  00A7               	movwf	((?___awdiv))+1
 10157  02D6  0937               	comf	(convert@adc_value),w
 10158  02D7  00B9               	movwf	(??_convert+0)+0
 10159  02D8  0938               	comf	(convert@adc_value+1),w
 10160  02D9  00BA               	movwf	((??_convert+0)+0+1)
 10161  02DA  0AB9               	incf	(??_convert+0)+0,f
 10162  02DB  1903               	skipnz
 10163  02DC  0ABA               	incf	((??_convert+0)+0+1),f
 10164  02DD  0839               	movf	0+(??_convert+0)+0,w
 10165  02DE  3E85               	addlw	low(085h)
 10166  02DF  00A0               	movwf	(?___wmul)
 10167  02E0  083A               	movf	1+(??_convert+0)+0,w
 10168  02E1  1803               	skipnc
 10169  02E2  3E01               	addlw	1
 10170  02E3  3E00               	addlw	high(085h)
 10171  02E4  00A1               	movwf	1+(?___wmul)
 10172  02E5  3032               	movlw	low(032h)
 10173  02E6  00A2               	movwf	0+(?___wmul)+02h
 10174  02E7  3000               	movlw	high(032h)
 10175  02E8  00A3               	movwf	(0+(?___wmul)+02h)+1
 10176  02E9  160A  118A  24AE   	fcall	___wmul
              120A  118A         
 10177  02EE  1283               	bcf	status, 5	;RP0=0, select bank0
 10178  02EF  1303               	bcf	status, 6	;RP1=0, select bank0
 10179  02F0  0821               	movf	(1+(?___wmul)),w
 10180  02F1  01A9               	clrf	1+(?___awdiv)+02h
 10181  02F2  07A9               	addwf	1+(?___awdiv)+02h
 10182  02F3  0820               	movf	(0+(?___wmul)),w
 10183  02F4  01A8               	clrf	0+(?___awdiv)+02h
 10184  02F5  07A8               	addwf	0+(?___awdiv)+02h
 10185                           
 10186  02F6  120A  158A  22F2   	fcall	___awdiv
              120A  118A         
 10187  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
 10188  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
 10189  02FD  0826               	movf	(0+(?___awdiv)),w
 10190  02FE  3E61               	addlw	low(061h)
 10191  02FF  00B7               	movwf	(?_convert)
 10192  0300  0827               	movf	(1+(?___awdiv)),w
 10193  0301  1803               	skipnc
 10194  0302  3E01               	addlw	1
 10195  0303  3E00               	addlw	high(061h)
 10196  0304  00B8               	movwf	1+(?_convert)
 10197  0305  2C77               	goto	l5067
 10198                           	
 10199  0306                     l10830:	
 10200  0306  2C77               	goto	l5067
 10201                           	
 10202  0307                     l10832:	
 10203  0307  2C77               	goto	l5067
 10204                           	line	16
 10205                           	
 10206  0308                     l5069:	
 10207                           	
 10208  0308                     l10834:	
 10209                           ;ir.c: 16: else if(adc_value < 184)
 10210  0308  1283               	bcf	status, 5	;RP0=0, select bank0
 10211  0309  1303               	bcf	status, 6	;RP1=0, select bank0
 10212  030A  0838               	movf	(convert@adc_value+1),w
 10213  030B  3A80               	xorlw	80h
 10214  030C  00FF               	movwf	btemp+1
 10215  030D  3080               	movlw	(high(0B8h))^80h
 10216  030E  027F               	subwf	btemp+1,w
 10217  030F  1D03               	skipz
 10218  0310  2B13               	goto	u4325
 10219  0311  30B8               	movlw	low(0B8h)
 10220  0312  0237               	subwf	(convert@adc_value),w
 10221  0313                     u4325:
 10222                           
 10223  0313  1803               	skipnc
 10224  0314  2B16               	goto	u4321
 10225  0315  2B17               	goto	u4320
 10226  0316                     u4321:
 10227  0316  2B4F               	goto	l10842
 10228  0317                     u4320:
 10229                           	line	17
 10230                           	
 10231  0317                     l10836:	
 10232                           ;ir.c: 17: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
 10233  0317  3033               	movlw	low(033h)
 10234  0318  1283               	bcf	status, 5	;RP0=0, select bank0
 10235  0319  1303               	bcf	status, 6	;RP1=0, select bank0
 10236  031A  00A6               	movwf	(?___awdiv)
 10237  031B  3000               	movlw	high(033h)
 10238  031C  00A7               	movwf	((?___awdiv))+1
 10239  031D  0937               	comf	(convert@adc_value),w
 10240  031E  00B9               	movwf	(??_convert+0)+0
 10241  031F  0938               	comf	(convert@adc_value+1),w
 10242  0320  00BA               	movwf	((??_convert+0)+0+1)
 10243  0321  0AB9               	incf	(??_convert+0)+0,f
 10244  0322  1903               	skipnz
 10245  0323  0ABA               	incf	((??_convert+0)+0+1),f
 10246  0324  0839               	movf	0+(??_convert+0)+0,w
 10247  0325  3EB8               	addlw	low(0B8h)
 10248  0326  00A0               	movwf	(?___wmul)
 10249  0327  083A               	movf	1+(??_convert+0)+0,w
 10250  0328  1803               	skipnc
 10251  0329  3E01               	addlw	1
 10252  032A  3E00               	addlw	high(0B8h)
 10253  032B  00A1               	movwf	1+(?___wmul)
 10254  032C  301E               	movlw	low(01Eh)
 10255  032D  00A2               	movwf	0+(?___wmul)+02h
 10256  032E  3000               	movlw	high(01Eh)
 10257  032F  00A3               	movwf	(0+(?___wmul)+02h)+1
 10258  0330  160A  118A  24AE   	fcall	___wmul
              120A  118A         
 10259  0335  1283               	bcf	status, 5	;RP0=0, select bank0
 10260  0336  1303               	bcf	status, 6	;RP1=0, select bank0
 10261  0337  0821               	movf	(1+(?___wmul)),w
 10262  0338  01A9               	clrf	1+(?___awdiv)+02h
 10263  0339  07A9               	addwf	1+(?___awdiv)+02h
 10264  033A  0820               	movf	(0+(?___wmul)),w
 10265  033B  01A8               	clrf	0+(?___awdiv)+02h
 10266  033C  07A8               	addwf	0+(?___awdiv)+02h
 10267                           
 10268  033D  120A  158A  22F2   	fcall	___awdiv
              120A  118A         
 10269  0342  1283               	bcf	status, 5	;RP0=0, select bank0
 10270  0343  1303               	bcf	status, 6	;RP1=0, select bank0
 10271  0344  0826               	movf	(0+(?___awdiv)),w
 10272  0345  3E43               	addlw	low(043h)
 10273  0346  00B7               	movwf	(?_convert)
 10274  0347  0827               	movf	(1+(?___awdiv)),w
 10275  0348  1803               	skipnc
 10276  0349  3E01               	addlw	1
 10277  034A  3E00               	addlw	high(043h)
 10278  034B  00B8               	movwf	1+(?_convert)
 10279  034C  2C77               	goto	l5067
 10280                           	
 10281  034D                     l10838:	
 10282  034D  2C77               	goto	l5067
 10283                           	
 10284  034E                     l10840:	
 10285  034E  2C77               	goto	l5067
 10286                           	line	18
 10287                           	
 10288  034F                     l5071:	
 10289                           	
 10290  034F                     l10842:	
 10291                           ;ir.c: 18: else if(adc_value < 256)
 10292  034F  1283               	bcf	status, 5	;RP0=0, select bank0
 10293  0350  1303               	bcf	status, 6	;RP1=0, select bank0
 10294  0351  0838               	movf	(convert@adc_value+1),w
 10295  0352  3A80               	xorlw	80h
 10296  0353  00FF               	movwf	btemp+1
 10297  0354  3081               	movlw	(high(0100h))^80h
 10298  0355  027F               	subwf	btemp+1,w
 10299  0356  1D03               	skipz
 10300  0357  2B5A               	goto	u4335
 10301  0358  3000               	movlw	low(0100h)
 10302  0359  0237               	subwf	(convert@adc_value),w
 10303  035A                     u4335:
 10304                           
 10305  035A  1803               	skipnc
 10306  035B  2B5D               	goto	u4331
 10307  035C  2B5E               	goto	u4330
 10308  035D                     u4331:
 10309  035D  2B96               	goto	l10850
 10310  035E                     u4330:
 10311                           	line	19
 10312                           	
 10313  035E                     l10844:	
 10314                           ;ir.c: 19: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
 10315  035E  3048               	movlw	low(048h)
 10316  035F  1283               	bcf	status, 5	;RP0=0, select bank0
 10317  0360  1303               	bcf	status, 6	;RP1=0, select bank0
 10318  0361  00A6               	movwf	(?___awdiv)
 10319  0362  3000               	movlw	high(048h)
 10320  0363  00A7               	movwf	((?___awdiv))+1
 10321  0364  0937               	comf	(convert@adc_value),w
 10322  0365  00B9               	movwf	(??_convert+0)+0
 10323  0366  0938               	comf	(convert@adc_value+1),w
 10324  0367  00BA               	movwf	((??_convert+0)+0+1)
 10325  0368  0AB9               	incf	(??_convert+0)+0,f
 10326  0369  1903               	skipnz
 10327  036A  0ABA               	incf	((??_convert+0)+0+1),f
 10328  036B  0839               	movf	0+(??_convert+0)+0,w
 10329  036C  3E00               	addlw	low(0100h)
 10330  036D  00A0               	movwf	(?___wmul)
 10331  036E  083A               	movf	1+(??_convert+0)+0,w
 10332  036F  1803               	skipnc
 10333  0370  3E01               	addlw	1
 10334  0371  3E01               	addlw	high(0100h)
 10335  0372  00A1               	movwf	1+(?___wmul)
 10336  0373  3014               	movlw	low(014h)
 10337  0374  00A2               	movwf	0+(?___wmul)+02h
 10338  0375  3000               	movlw	high(014h)
 10339  0376  00A3               	movwf	(0+(?___wmul)+02h)+1
 10340  0377  160A  118A  24AE   	fcall	___wmul
              120A  118A         
 10341  037C  1283               	bcf	status, 5	;RP0=0, select bank0
 10342  037D  1303               	bcf	status, 6	;RP1=0, select bank0
 10343  037E  0821               	movf	(1+(?___wmul)),w
 10344  037F  01A9               	clrf	1+(?___awdiv)+02h
 10345  0380  07A9               	addwf	1+(?___awdiv)+02h
 10346  0381  0820               	movf	(0+(?___wmul)),w
 10347  0382  01A8               	clrf	0+(?___awdiv)+02h
 10348  0383  07A8               	addwf	0+(?___awdiv)+02h
 10349                           
 10350  0384  120A  158A  22F2   	fcall	___awdiv
              120A  118A         
 10351  0389  1283               	bcf	status, 5	;RP0=0, select bank0
 10352  038A  1303               	bcf	status, 6	;RP1=0, select bank0
 10353  038B  0826               	movf	(0+(?___awdiv)),w
 10354  038C  3E2E               	addlw	low(02Eh)
 10355  038D  00B7               	movwf	(?_convert)
 10356  038E  0827               	movf	(1+(?___awdiv)),w
 10357  038F  1803               	skipnc
 10358  0390  3E01               	addlw	1
 10359  0391  3E00               	addlw	high(02Eh)
 10360  0392  00B8               	movwf	1+(?_convert)
 10361  0393  2C77               	goto	l5067
 10362                           	
 10363  0394                     l10846:	
 10364  0394  2C77               	goto	l5067
 10365                           	
 10366  0395                     l10848:	
 10367  0395  2C77               	goto	l5067
 10368                           	line	20
 10369                           	
 10370  0396                     l5073:	
 10371                           	
 10372  0396                     l10850:	
 10373                           ;ir.c: 20: else if(adc_value < 317)
 10374  0396  1283               	bcf	status, 5	;RP0=0, select bank0
 10375  0397  1303               	bcf	status, 6	;RP1=0, select bank0
 10376  0398  0838               	movf	(convert@adc_value+1),w
 10377  0399  3A80               	xorlw	80h
 10378  039A  00FF               	movwf	btemp+1
 10379  039B  3081               	movlw	(high(013Dh))^80h
 10380  039C  027F               	subwf	btemp+1,w
 10381  039D  1D03               	skipz
 10382  039E  2BA1               	goto	u4345
 10383  039F  303D               	movlw	low(013Dh)
 10384  03A0  0237               	subwf	(convert@adc_value),w
 10385  03A1                     u4345:
 10386                           
 10387  03A1  1803               	skipnc
 10388  03A2  2BA4               	goto	u4341
 10389  03A3  2BA5               	goto	u4340
 10390  03A4                     u4341:
 10391  03A4  2BDD               	goto	l10858
 10392  03A5                     u4340:
 10393                           	line	21
 10394                           	
 10395  03A5                     l10852:	
 10396                           ;ir.c: 21: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
 10397  03A5  303D               	movlw	low(03Dh)
 10398  03A6  1283               	bcf	status, 5	;RP0=0, select bank0
 10399  03A7  1303               	bcf	status, 6	;RP1=0, select bank0
 10400  03A8  00A6               	movwf	(?___awdiv)
 10401  03A9  3000               	movlw	high(03Dh)
 10402  03AA  00A7               	movwf	((?___awdiv))+1
 10403  03AB  0937               	comf	(convert@adc_value),w
 10404  03AC  00B9               	movwf	(??_convert+0)+0
 10405  03AD  0938               	comf	(convert@adc_value+1),w
 10406  03AE  00BA               	movwf	((??_convert+0)+0+1)
 10407  03AF  0AB9               	incf	(??_convert+0)+0,f
 10408  03B0  1903               	skipnz
 10409  03B1  0ABA               	incf	((??_convert+0)+0+1),f
 10410  03B2  0839               	movf	0+(??_convert+0)+0,w
 10411  03B3  3E3D               	addlw	low(013Dh)
 10412  03B4  00A0               	movwf	(?___wmul)
 10413  03B5  083A               	movf	1+(??_convert+0)+0,w
 10414  03B6  1803               	skipnc
 10415  03B7  3E01               	addlw	1
 10416  03B8  3E01               	addlw	high(013Dh)
 10417  03B9  00A1               	movwf	1+(?___wmul)
 10418  03BA  300A               	movlw	low(0Ah)
 10419  03BB  00A2               	movwf	0+(?___wmul)+02h
 10420  03BC  3000               	movlw	high(0Ah)
 10421  03BD  00A3               	movwf	(0+(?___wmul)+02h)+1
 10422  03BE  160A  118A  24AE   	fcall	___wmul
              120A  118A         
 10423  03C3  1283               	bcf	status, 5	;RP0=0, select bank0
 10424  03C4  1303               	bcf	status, 6	;RP1=0, select bank0
 10425  03C5  0821               	movf	(1+(?___wmul)),w
 10426  03C6  01A9               	clrf	1+(?___awdiv)+02h
 10427  03C7  07A9               	addwf	1+(?___awdiv)+02h
 10428  03C8  0820               	movf	(0+(?___wmul)),w
 10429  03C9  01A8               	clrf	0+(?___awdiv)+02h
 10430  03CA  07A8               	addwf	0+(?___awdiv)+02h
 10431                           
 10432  03CB  120A  158A  22F2   	fcall	___awdiv
              120A  118A         
 10433  03D0  1283               	bcf	status, 5	;RP0=0, select bank0
 10434  03D1  1303               	bcf	status, 6	;RP1=0, select bank0
 10435  03D2  0826               	movf	(0+(?___awdiv)),w
 10436  03D3  3E25               	addlw	low(025h)
 10437  03D4  00B7               	movwf	(?_convert)
 10438  03D5  0827               	movf	(1+(?___awdiv)),w
 10439  03D6  1803               	skipnc
 10440  03D7  3E01               	addlw	1
 10441  03D8  3E00               	addlw	high(025h)
 10442  03D9  00B8               	movwf	1+(?_convert)
 10443  03DA  2C77               	goto	l5067
 10444                           	
 10445  03DB                     l10854:	
 10446  03DB  2C77               	goto	l5067
 10447                           	
 10448  03DC                     l10856:	
 10449  03DC  2C77               	goto	l5067
 10450                           	line	22
 10451                           	
 10452  03DD                     l5075:	
 10453                           	
 10454  03DD                     l10858:	
 10455                           ;ir.c: 22: else if(adc_value < 410)
 10456  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
 10457  03DE  1303               	bcf	status, 6	;RP1=0, select bank0
 10458  03DF  0838               	movf	(convert@adc_value+1),w
 10459  03E0  3A80               	xorlw	80h
 10460  03E1  00FF               	movwf	btemp+1
 10461  03E2  3081               	movlw	(high(019Ah))^80h
 10462  03E3  027F               	subwf	btemp+1,w
 10463  03E4  1D03               	skipz
 10464  03E5  2BE8               	goto	u4355
 10465  03E6  309A               	movlw	low(019Ah)
 10466  03E7  0237               	subwf	(convert@adc_value),w
 10467  03E8                     u4355:
 10468                           
 10469  03E8  1803               	skipnc
 10470  03E9  2BEB               	goto	u4351
 10471  03EA  2BEC               	goto	u4350
 10472  03EB                     u4351:
 10473  03EB  2C24               	goto	l10866
 10474  03EC                     u4350:
 10475                           	line	23
 10476                           	
 10477  03EC                     l10860:	
 10478                           ;ir.c: 23: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
 10479  03EC  305D               	movlw	low(05Dh)
 10480  03ED  1283               	bcf	status, 5	;RP0=0, select bank0
 10481  03EE  1303               	bcf	status, 6	;RP1=0, select bank0
 10482  03EF  00A6               	movwf	(?___awdiv)
 10483  03F0  3000               	movlw	high(05Dh)
 10484  03F1  00A7               	movwf	((?___awdiv))+1
 10485  03F2  0937               	comf	(convert@adc_value),w
 10486  03F3  00B9               	movwf	(??_convert+0)+0
 10487  03F4  0938               	comf	(convert@adc_value+1),w
 10488  03F5  00BA               	movwf	((??_convert+0)+0+1)
 10489  03F6  0AB9               	incf	(??_convert+0)+0,f
 10490  03F7  1903               	skipnz
 10491  03F8  0ABA               	incf	((??_convert+0)+0+1),f
 10492  03F9  0839               	movf	0+(??_convert+0)+0,w
 10493  03FA  3E9A               	addlw	low(019Ah)
 10494  03FB  00A0               	movwf	(?___wmul)
 10495  03FC  083A               	movf	1+(??_convert+0)+0,w
 10496  03FD  1803               	skipnc
 10497  03FE  3E01               	addlw	1
 10498  03FF  3E01               	addlw	high(019Ah)
 10499  0400  00A1               	movwf	1+(?___wmul)
 10500  0401  300A               	movlw	low(0Ah)
 10501  0402  00A2               	movwf	0+(?___wmul)+02h
 10502  0403  3000               	movlw	high(0Ah)
 10503  0404  00A3               	movwf	(0+(?___wmul)+02h)+1
 10504  0405  160A  118A  24AE   	fcall	___wmul
              120A  118A         
 10505  040A  1283               	bcf	status, 5	;RP0=0, select bank0
 10506  040B  1303               	bcf	status, 6	;RP1=0, select bank0
 10507  040C  0821               	movf	(1+(?___wmul)),w
 10508  040D  01A9               	clrf	1+(?___awdiv)+02h
 10509  040E  07A9               	addwf	1+(?___awdiv)+02h
 10510  040F  0820               	movf	(0+(?___wmul)),w
 10511  0410  01A8               	clrf	0+(?___awdiv)+02h
 10512  0411  07A8               	addwf	0+(?___awdiv)+02h
 10513                           
 10514  0412  120A  158A  22F2   	fcall	___awdiv
              120A  118A         
 10515  0417  1283               	bcf	status, 5	;RP0=0, select bank0
 10516  0418  1303               	bcf	status, 6	;RP1=0, select bank0
 10517  0419  0826               	movf	(0+(?___awdiv)),w
 10518  041A  3E1C               	addlw	low(01Ch)
 10519  041B  00B7               	movwf	(?_convert)
 10520  041C  0827               	movf	(1+(?___awdiv)),w
 10521  041D  1803               	skipnc
 10522  041E  3E01               	addlw	1
 10523  041F  3E00               	addlw	high(01Ch)
 10524  0420  00B8               	movwf	1+(?_convert)
 10525  0421  2C77               	goto	l5067
 10526                           	
 10527  0422                     l10862:	
 10528  0422  2C77               	goto	l5067
 10529                           	
 10530  0423                     l10864:	
 10531  0423  2C77               	goto	l5067
 10532                           	line	24
 10533                           	
 10534  0424                     l5077:	
 10535                           	
 10536  0424                     l10866:	
 10537                           ;ir.c: 24: else if(adc_value < 522)
 10538  0424  1283               	bcf	status, 5	;RP0=0, select bank0
 10539  0425  1303               	bcf	status, 6	;RP1=0, select bank0
 10540  0426  0838               	movf	(convert@adc_value+1),w
 10541  0427  3A80               	xorlw	80h
 10542  0428  00FF               	movwf	btemp+1
 10543  0429  3082               	movlw	(high(020Ah))^80h
 10544  042A  027F               	subwf	btemp+1,w
 10545  042B  1D03               	skipz
 10546  042C  2C2F               	goto	u4365
 10547  042D  300A               	movlw	low(020Ah)
 10548  042E  0237               	subwf	(convert@adc_value),w
 10549  042F                     u4365:
 10550                           
 10551  042F  1803               	skipnc
 10552  0430  2C32               	goto	u4361
 10553  0431  2C33               	goto	u4360
 10554  0432                     u4361:
 10555  0432  2C6B               	goto	l10874
 10556  0433                     u4360:
 10557                           	line	25
 10558                           	
 10559  0433                     l10868:	
 10560                           ;ir.c: 25: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
 10561  0433  3070               	movlw	low(070h)
 10562  0434  1283               	bcf	status, 5	;RP0=0, select bank0
 10563  0435  1303               	bcf	status, 6	;RP1=0, select bank0
 10564  0436  00A6               	movwf	(?___awdiv)
 10565  0437  3000               	movlw	high(070h)
 10566  0438  00A7               	movwf	((?___awdiv))+1
 10567  0439  0937               	comf	(convert@adc_value),w
 10568  043A  00B9               	movwf	(??_convert+0)+0
 10569  043B  0938               	comf	(convert@adc_value+1),w
 10570  043C  00BA               	movwf	((??_convert+0)+0+1)
 10571  043D  0AB9               	incf	(??_convert+0)+0,f
 10572  043E  1903               	skipnz
 10573  043F  0ABA               	incf	((??_convert+0)+0+1),f
 10574  0440  0839               	movf	0+(??_convert+0)+0,w
 10575  0441  3E0A               	addlw	low(020Ah)
 10576  0442  00A0               	movwf	(?___wmul)
 10577  0443  083A               	movf	1+(??_convert+0)+0,w
 10578  0444  1803               	skipnc
 10579  0445  3E01               	addlw	1
 10580  0446  3E02               	addlw	high(020Ah)
 10581  0447  00A1               	movwf	1+(?___wmul)
 10582  0448  300A               	movlw	low(0Ah)
 10583  0449  00A2               	movwf	0+(?___wmul)+02h
 10584  044A  3000               	movlw	high(0Ah)
 10585  044B  00A3               	movwf	(0+(?___wmul)+02h)+1
 10586  044C  160A  118A  24AE   	fcall	___wmul
              120A  118A         
 10587  0451  1283               	bcf	status, 5	;RP0=0, select bank0
 10588  0452  1303               	bcf	status, 6	;RP1=0, select bank0
 10589  0453  0821               	movf	(1+(?___wmul)),w
 10590  0454  01A9               	clrf	1+(?___awdiv)+02h
 10591  0455  07A9               	addwf	1+(?___awdiv)+02h
 10592  0456  0820               	movf	(0+(?___wmul)),w
 10593  0457  01A8               	clrf	0+(?___awdiv)+02h
 10594  0458  07A8               	addwf	0+(?___awdiv)+02h
 10595                           
 10596  0459  120A  158A  22F2   	fcall	___awdiv
              120A  118A         
 10597  045E  1283               	bcf	status, 5	;RP0=0, select bank0
 10598  045F  1303               	bcf	status, 6	;RP1=0, select bank0
 10599  0460  0826               	movf	(0+(?___awdiv)),w
 10600  0461  3E12               	addlw	low(012h)
 10601  0462  00B7               	movwf	(?_convert)
 10602  0463  0827               	movf	(1+(?___awdiv)),w
 10603  0464  1803               	skipnc
 10604  0465  3E01               	addlw	1
 10605  0466  3E00               	addlw	high(012h)
 10606  0467  00B8               	movwf	1+(?_convert)
 10607  0468  2C77               	goto	l5067
 10608                           	
 10609  0469                     l10870:	
 10610  0469  2C77               	goto	l5067
 10611                           	
 10612  046A                     l10872:	
 10613  046A  2C77               	goto	l5067
 10614                           	line	26
 10615                           	
 10616  046B                     l5079:	
 10617                           	
 10618  046B                     l10874:	
 10619                           ;ir.c: 26: else return 0;
 10620  046B  1283               	bcf	status, 5	;RP0=0, select bank0
 10621  046C  1303               	bcf	status, 6	;RP1=0, select bank0
 10622  046D  01B7               	clrf	(?_convert)
 10623  046E  01B8               	clrf	(?_convert+1)
 10624  046F  2C77               	goto	l5067
 10625                           	
 10626  0470                     l10876:	
 10627  0470  2C77               	goto	l5067
 10628                           	
 10629  0471                     l5080:	
 10630  0471  2C77               	goto	l5067
 10631                           	
 10632  0472                     l5078:	
 10633  0472  2C77               	goto	l5067
 10634                           	
 10635  0473                     l5076:	
 10636  0473  2C77               	goto	l5067
 10637                           	
 10638  0474                     l5074:	
 10639  0474  2C77               	goto	l5067
 10640                           	
 10641  0475                     l5072:	
 10642  0475  2C77               	goto	l5067
 10643                           	
 10644  0476                     l5070:	
 10645  0476  2C77               	goto	l5067
 10646                           	
 10647  0477                     l5068:	
 10648                           	line	27
 10649                           	
 10650  0477                     l5067:	
 10651  0477  0008               	return
 10652                           	opt stack 0
 10653                           GLOBAL	__end_of_convert
 10654  0478                     	__end_of_convert:
 10655 ;; =============== function _convert ends ============
 10656                           
 10657                           	signat	_convert,4218
 10658                           	global	_play_iCreate_song
 10659                           psect	text1336,local,class=CODE,delta=2
 10660                           global __ptext1336
 10661  123A                     __ptext1336:
 10662                           
 10663 ;; *************** function _play_iCreate_song *****************
 10664 ;; Defined at:
 10665 ;;		line 26 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  song            1    wreg     unsigned char 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  song            1    2[BANK0 ] unsigned char 
 10670 ;; Return value:  Size  Location     Type
 10671 ;;		None               void
 10672 ;; Registers used:
 10673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10679 ;;      Params:         0       0       0       0       0
 10680 ;;      Locals:         0       1       0       0       0
 10681 ;;      Temps:          0       0       0       0       0
 10682 ;;      Totals:         0       1       0       0       0
 10683 ;;Total ram usage:        1 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    2
 10686 ;; This function calls:
 10687 ;;		_ser_putch
 10688 ;; This function is called by:
 10689 ;;		_checkForFinalDestination
 10690 ;;		_lookForVictim
 10691 ;;		_findWalls
 10692 ;;		_checkIfHome
 10693 ;;		_main
 10694 ;; This function uses a non-reentrant model
 10695 ;;
 10696                           psect	text1336
 10697                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\songs.c"
 10698                           	line	26
 10699                           	global	__size_of_play_iCreate_song
 10700  0012                     	__size_of_play_iCreate_song	equ	__end_of_play_iCreate_song-_play_iCreate_song
 10701                           	
 10702  123A                     _play_iCreate_song:	
 10703                           	opt	stack 4
 10704                           ; Regs used in _play_iCreate_song: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10705                           ;play_iCreate_song@song stored from wreg
 10706  123A  1283               	bcf	status, 5	;RP0=0, select bank0
 10707  123B  1303               	bcf	status, 6	;RP1=0, select bank0
 10708  123C  00A2               	movwf	(play_iCreate_song@song)
 10709                           	line	27
 10710                           	
 10711  123D                     l10816:	
 10712                           ;songs.c: 27: ser_putch(141);
 10713  123D  308D               	movlw	(08Dh)
 10714  123E  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
 10715                           	line	28
 10716                           ;songs.c: 28: ser_putch(song);
 10717  1243  1283               	bcf	status, 5	;RP0=0, select bank0
 10718  1244  1303               	bcf	status, 6	;RP1=0, select bank0
 10719  1245  0822               	movf	(play_iCreate_song@song),w
 10720  1246  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
 10721                           	line	29
 10722                           	
 10723  124B                     l4374:	
 10724  124B  0008               	return
 10725                           	opt stack 0
 10726                           GLOBAL	__end_of_play_iCreate_song
 10727  124C                     	__end_of_play_iCreate_song:
 10728 ;; =============== function _play_iCreate_song ends ============
 10729                           
 10730                           	signat	_play_iCreate_song,4216
 10731                           	global	_ser_putArr
 10732                           psect	text1337,local,class=CODE,delta=2
 10733                           global __ptext1337
 10734  1511                     __ptext1337:
 10735                           
 10736 ;; *************** function _ser_putArr *****************
 10737 ;; Defined at:
 10738 ;;		line 73 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  array           2    2[BANK0 ] PTR unsigned char 
 10741 ;;		 -> longbeep(5), beep(5), champions(21), lookingForU2(29), 
 10742 ;;		 -> superMarioBros(25), finalCountdown(27), 
 10743 ;;  length          2    4[BANK0 ] int 
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;  i               2    9[BANK0 ] int 
 10746 ;; Return value:  Size  Location     Type
 10747 ;;		None               void
 10748 ;; Registers used:
 10749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10755 ;;      Params:         0       4       0       0       0
 10756 ;;      Locals:         0       2       0       0       0
 10757 ;;      Temps:          0       3       0       0       0
 10758 ;;      Totals:         0       9       0       0       0
 10759 ;;Total ram usage:        9 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    2
 10762 ;; This function calls:
 10763 ;;		_ser_putch
 10764 ;; This function is called by:
 10765 ;;		_initSongs
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           psect	text1337
 10769                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 10770                           	line	73
 10771                           	global	__size_of_ser_putArr
 10772  0039                     	__size_of_ser_putArr	equ	__end_of_ser_putArr-_ser_putArr
 10773                           	
 10774  1511                     _ser_putArr:	
 10775                           	opt	stack 3
 10776                           ; Regs used in _ser_putArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10777                           	line	74
 10778                           	
 10779  1511                     l10808:	
 10780                           ;ser.c: 74: for(int i =0; i< length; i++)
 10781  1511  1283               	bcf	status, 5	;RP0=0, select bank0
 10782  1512  1303               	bcf	status, 6	;RP1=0, select bank0
 10783  1513  01A9               	clrf	(ser_putArr@i)
 10784  1514  01AA               	clrf	(ser_putArr@i+1)
 10785  1515  2D3A               	goto	l10814
 10786                           	line	75
 10787                           	
 10788  1516                     l3643:	
 10789                           	line	76
 10790                           	
 10791  1516                     l10810:	
 10792                           ;ser.c: 75: {
 10793                           ;ser.c: 76: ser_putch(array[i]);
 10794  1516  1283               	bcf	status, 5	;RP0=0, select bank0
 10795  1517  1303               	bcf	status, 6	;RP1=0, select bank0
 10796  1518  0829               	movf	(ser_putArr@i),w
 10797  1519  0722               	addwf	(ser_putArr@array),w
 10798  151A  00A7               	movwf	(??_ser_putArr+1)+0
 10799  151B  0823               	movf	(ser_putArr@array+1),w
 10800  151C  00A6               	movwf	(??_ser_putArr+0)+0
 10801  151D  1803               	skipnc
 10802  151E  0AA6               	incf	(??_ser_putArr+0)+0,f
 10803  151F  1FA9               	btfss	(ser_putArr@i),7
 10804  1520  2D22               	goto	u4280
 10805  1521  03A6               	decf	(??_ser_putArr+0)+0,f
 10806  1522                     u4280:
 10807  1522  1283               	bcf	status, 5	;RP0=0, select bank0
 10808  1523  1303               	bcf	status, 6	;RP1=0, select bank0
 10809  1524  0826               	movf	(??_ser_putArr+0)+0,w
 10810  1525  00A8               	movwf	0+((??_ser_putArr+1)+0)+1
 10811  1526  0827               	movf	0+(??_ser_putArr+1)+0,w
 10812  1527  0084               	movwf	fsr0
 10813  1528  1783               	bsf	status,7
 10814  1529  1C28               	btfss	1+(??_ser_putArr+1)+0,0
 10815  152A  1383               	bcf	status,7
 10816  152B  0800               	movf	indf,w
 10817  152C  160A  118A  2331   	fcall	_ser_putch
              160A  118A         
 10818                           	line	74
 10819                           	
 10820  1531                     l10812:	
 10821  1531  3001               	movlw	low(01h)
 10822  1532  1283               	bcf	status, 5	;RP0=0, select bank0
 10823  1533  1303               	bcf	status, 6	;RP1=0, select bank0
 10824  1534  07A9               	addwf	(ser_putArr@i),f
 10825  1535  1803               	skipnc
 10826  1536  0AAA               	incf	(ser_putArr@i+1),f
 10827  1537  3000               	movlw	high(01h)
 10828  1538  07AA               	addwf	(ser_putArr@i+1),f
 10829  1539  2D3A               	goto	l10814
 10830                           	
 10831  153A                     l3642:	
 10832                           	
 10833  153A                     l10814:	
 10834  153A  082A               	movf	(ser_putArr@i+1),w
 10835  153B  3A80               	xorlw	80h
 10836  153C  00A6               	movwf	(??_ser_putArr+0)+0
 10837  153D  0825               	movf	(ser_putArr@length+1),w
 10838  153E  3A80               	xorlw	80h
 10839  153F  0226               	subwf	(??_ser_putArr+0)+0,w
 10840  1540  1D03               	skipz
 10841  1541  2D44               	goto	u4295
 10842  1542  0824               	movf	(ser_putArr@length),w
 10843  1543  0229               	subwf	(ser_putArr@i),w
 10844  1544                     u4295:
 10845                           
 10846  1544  1C03               	skipc
 10847  1545  2D47               	goto	u4291
 10848  1546  2D48               	goto	u4290
 10849  1547                     u4291:
 10850  1547  2D16               	goto	l10810
 10851  1548                     u4290:
 10852  1548  2D49               	goto	l3645
 10853                           	
 10854  1549                     l3644:	
 10855                           	line	78
 10856                           	
 10857  1549                     l3645:	
 10858  1549  0008               	return
 10859                           	opt stack 0
 10860                           GLOBAL	__end_of_ser_putArr
 10861  154A                     	__end_of_ser_putArr:
 10862 ;; =============== function _ser_putArr ends ============
 10863                           
 10864                           	signat	_ser_putArr,8312
 10865                           	global	_ser_getch
 10866                           psect	text1338,local,class=CODE,delta=2
 10867                           global __ptext1338
 10868  1352                     __ptext1338:
 10869                           
 10870 ;; *************** function _ser_getch *****************
 10871 ;; Defined at:
 10872 ;;		line 58 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;		None
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;  c               1    1[BANK0 ] unsigned char 
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  1    wreg      unsigned char 
 10879 ;; Registers used:
 10880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/0
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10886 ;;      Params:         0       0       0       0       0
 10887 ;;      Locals:         0       1       0       0       0
 10888 ;;      Temps:          0       1       0       0       0
 10889 ;;      Totals:         0       2       0       0       0
 10890 ;;Total ram usage:        2 bytes
 10891 ;; Hardware stack levels used:    1
 10892 ;; Hardware stack levels required when called:    2
 10893 ;; This function calls:
 10894 ;;		_ser_isrx
 10895 ;; This function is called by:
 10896 ;;		_driveForDistance
 10897 ;;		_lookForVictim
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           psect	text1338
 10901                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 10902                           	line	58
 10903                           	global	__size_of_ser_getch
 10904  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
 10905                           	
 10906  1352                     _ser_getch:	
 10907                           	opt	stack 3
 10908                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10909                           	line	61
 10910                           	
 10911  1352                     l10792:	
 10912                           ;ser.c: 59: unsigned char c;
 10913                           ;ser.c: 61: while (ser_isrx()==0)
 10914  1352  2B54               	goto	l10794
 10915                           	
 10916  1353                     l3637:	
 10917                           	line	62
 10918                           ;ser.c: 62: continue;
 10919  1353  2B54               	goto	l10794
 10920                           	
 10921  1354                     l3636:	
 10922                           	line	61
 10923                           	
 10924  1354                     l10794:	
 10925  1354  120A  158A  208D   	fcall	_ser_isrx
              160A  118A         
 10926  1359  1C03               	btfss	status,0
 10927  135A  2B5C               	goto	u4271
 10928  135B  2B5D               	goto	u4270
 10929  135C                     u4271:
 10930  135C  2B54               	goto	l10794
 10931  135D                     u4270:
 10932                           	
 10933  135D                     l3638:	
 10934                           	line	64
 10935                           ;ser.c: 64: GIE=0;
 10936  135D  138B               	bcf	(95/8),(95)&7
 10937                           	line	65
 10938                           	
 10939  135E                     l10796:	
 10940                           ;ser.c: 65: c=rxfifo[rxoptr];
 10941  135E  1283               	bcf	status, 5	;RP0=0, select bank0
 10942  135F  1303               	bcf	status, 6	;RP1=0, select bank0
 10943  1360  085B               	movf	(_rxoptr),w
 10944  1361  3EA0               	addlw	_rxfifo&0ffh
 10945  1362  0084               	movwf	fsr0
 10946  1363  1383               	bcf	status, 7	;select IRP bank1
 10947  1364  0800               	movf	indf,w
 10948  1365  00A0               	movwf	(??_ser_getch+0)+0
 10949  1366  0820               	movf	(??_ser_getch+0)+0,w
 10950  1367  00A1               	movwf	(ser_getch@c)
 10951                           	line	66
 10952                           	
 10953  1368                     l10798:	
 10954                           ;ser.c: 66: ++rxoptr;
 10955  1368  3001               	movlw	(01h)
 10956  1369  00A0               	movwf	(??_ser_getch+0)+0
 10957  136A  0820               	movf	(??_ser_getch+0)+0,w
 10958  136B  07DB               	addwf	(_rxoptr),f	;volatile
 10959                           	line	67
 10960                           	
 10961  136C                     l10800:	
 10962                           ;ser.c: 67: rxoptr &= (16-1);
 10963  136C  300F               	movlw	(0Fh)
 10964  136D  00A0               	movwf	(??_ser_getch+0)+0
 10965  136E  0820               	movf	(??_ser_getch+0)+0,w
 10966  136F  05DB               	andwf	(_rxoptr),f	;volatile
 10967                           	line	68
 10968                           	
 10969  1370                     l10802:	
 10970                           ;ser.c: 68: GIE=1;
 10971  1370  178B               	bsf	(95/8),(95)&7
 10972                           	line	69
 10973                           	
 10974  1371                     l10804:	
 10975                           ;ser.c: 69: return c;
 10976  1371  0821               	movf	(ser_getch@c),w
 10977  1372  2B73               	goto	l3639
 10978                           	
 10979  1373                     l10806:	
 10980                           	line	70
 10981                           	
 10982  1373                     l3639:	
 10983  1373  0008               	return
 10984                           	opt stack 0
 10985                           GLOBAL	__end_of_ser_getch
 10986  1374                     	__end_of_ser_getch:
 10987 ;; =============== function _ser_getch ends ============
 10988                           
 10989                           	signat	_ser_getch,89
 10990                           	global	_lcd_write_data
 10991                           psect	text1339,local,class=CODE,delta=2
 10992                           global __ptext1339
 10993  124C                     __ptext1339:
 10994                           
 10995 ;; *************** function _lcd_write_data *****************
 10996 ;; Defined at:
 10997 ;;		line 20 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;  databyte        1    wreg     unsigned char 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  databyte        1    2[BANK0 ] unsigned char 
 11002 ;; Return value:  Size  Location     Type
 11003 ;;		None               void
 11004 ;; Registers used:
 11005 ;;		wreg
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11011 ;;      Params:         0       0       0       0       0
 11012 ;;      Locals:         0       1       0       0       0
 11013 ;;      Temps:          0       2       0       0       0
 11014 ;;      Totals:         0       3       0       0       0
 11015 ;;Total ram usage:        3 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    1
 11018 ;; This function calls:
 11019 ;;		Nothing
 11020 ;; This function is called by:
 11021 ;;		_lcd_write_string
 11022 ;;		_lcd_write_1_digit_bcd
 11023 ;;		_goBackward
 11024 ;;		_goForward
 11025 ;;		_goLeft
 11026 ;;		_goReverse
 11027 ;;		_goRight
 11028 ;;		_checkForFinalDestination
 11029 ;;		_lookForVictim
 11030 ;;		_findWalls
 11031 ;;		_updateLocation
 11032 ;;		_main
 11033 ;;		_lcd_write_3_digit_bcd
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           psect	text1339
 11037                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
 11038                           	line	20
 11039                           	global	__size_of_lcd_write_data
 11040  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
 11041                           	
 11042  124C                     _lcd_write_data:	
 11043                           	opt	stack 4
 11044                           ; Regs used in _lcd_write_data: [wreg]
 11045                           ;lcd_write_data@databyte stored from wreg
 11046  124C  1283               	bcf	status, 5	;RP0=0, select bank0
 11047  124D  1303               	bcf	status, 6	;RP1=0, select bank0
 11048  124E  00A2               	movwf	(lcd_write_data@databyte)
 11049                           	line	21
 11050                           	
 11051  124F                     l10784:	
 11052                           ;lcd.c: 21: RE2 = 0;
 11053  124F  1109               	bcf	(74/8),(74)&7
 11054                           	line	22
 11055                           ;lcd.c: 22: RE1 = 0;
 11056  1250  1089               	bcf	(73/8),(73)&7
 11057                           	line	23
 11058                           ;lcd.c: 23: RE0 = 1;
 11059  1251  1409               	bsf	(72/8),(72)&7
 11060                           	line	24
 11061                           	
 11062  1252                     l10786:	
 11063                           ;lcd.c: 24: PORTD = databyte;
 11064  1252  0822               	movf	(lcd_write_data@databyte),w
 11065  1253  0088               	movwf	(8)	;volatile
 11066                           	line	25
 11067                           	
 11068  1254                     l10788:	
 11069                           ;lcd.c: 25: RE2 = 1;
 11070  1254  1509               	bsf	(74/8),(74)&7
 11071                           	line	26
 11072                           	
 11073  1255                     l10790:	
 11074                           ;lcd.c: 26: RE2 = 0;
 11075  1255  1109               	bcf	(74/8),(74)&7
 11076                           	line	27
 11077                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
 11078                           	opt asmopt_off
 11079  1256  3007               movlw	7
 11080  1257  00A1               movwf	((??_lcd_write_data+0)+0+1),f
 11081  1258  307D               	movlw	125
 11082  1259  00A0               movwf	((??_lcd_write_data+0)+0),f
 11083  125A                     u5517:
 11084  125A  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
 11085  125B  2A5A               	goto	u5517
 11086  125C  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
 11087  125D  2A5A               	goto	u5517
 11088                           opt asmopt_on
 11089                           
 11090                           	line	28
 11091                           	
 11092  125E                     l2129:	
 11093  125E  0008               	return
 11094                           	opt stack 0
 11095                           GLOBAL	__end_of_lcd_write_data
 11096  125F                     	__end_of_lcd_write_data:
 11097 ;; =============== function _lcd_write_data ends ============
 11098                           
 11099                           	signat	_lcd_write_data,4216
 11100                           	global	_lcd_write_control
 11101                           psect	text1340,local,class=CODE,delta=2
 11102                           global __ptext1340
 11103  1272                     __ptext1340:
 11104                           
 11105 ;; *************** function _lcd_write_control *****************
 11106 ;; Defined at:
 11107 ;;		line 8 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  databyte        1    wreg     unsigned char 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  databyte        1    2[BANK0 ] unsigned char 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;		None               void
 11114 ;; Registers used:
 11115 ;;		wreg
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11121 ;;      Params:         0       0       0       0       0
 11122 ;;      Locals:         0       1       0       0       0
 11123 ;;      Temps:          0       2       0       0       0
 11124 ;;      Totals:         0       3       0       0       0
 11125 ;;Total ram usage:        3 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    1
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_lcd_set_cursor
 11132 ;;		_lcd_init
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           psect	text1340
 11136                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\lcd.c"
 11137                           	line	8
 11138                           	global	__size_of_lcd_write_control
 11139  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
 11140                           	
 11141  1272                     _lcd_write_control:	
 11142                           	opt	stack 4
 11143                           ; Regs used in _lcd_write_control: [wreg]
 11144                           ;lcd_write_control@databyte stored from wreg
 11145  1272  1283               	bcf	status, 5	;RP0=0, select bank0
 11146  1273  1303               	bcf	status, 6	;RP1=0, select bank0
 11147  1274  00A2               	movwf	(lcd_write_control@databyte)
 11148                           	line	9
 11149                           	
 11150  1275                     l10776:	
 11151                           ;lcd.c: 9: RE2 = 0;
 11152  1275  1109               	bcf	(74/8),(74)&7
 11153                           	line	10
 11154                           ;lcd.c: 10: RE1 = 0;
 11155  1276  1089               	bcf	(73/8),(73)&7
 11156                           	line	11
 11157                           ;lcd.c: 11: RE0 = 0;
 11158  1277  1009               	bcf	(72/8),(72)&7
 11159                           	line	12
 11160                           	
 11161  1278                     l10778:	
 11162                           ;lcd.c: 12: PORTD = databyte;
 11163  1278  0822               	movf	(lcd_write_control@databyte),w
 11164  1279  0088               	movwf	(8)	;volatile
 11165                           	line	13
 11166                           	
 11167  127A                     l10780:	
 11168                           ;lcd.c: 13: RE2 = 1;
 11169  127A  1509               	bsf	(74/8),(74)&7
 11170                           	line	14
 11171                           	
 11172  127B                     l10782:	
 11173                           ;lcd.c: 14: RE2 = 0;
 11174  127B  1109               	bcf	(74/8),(74)&7
 11175                           	line	15
 11176                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
 11177                           	opt asmopt_off
 11178  127C  300D               movlw	13
 11179  127D  00A1               movwf	((??_lcd_write_control+0)+0+1),f
 11180  127E  30FB               	movlw	251
 11181  127F  00A0               movwf	((??_lcd_write_control+0)+0),f
 11182  1280                     u5527:
 11183  1280  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
 11184  1281  2A80               	goto	u5527
 11185  1282  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
 11186  1283  2A80               	goto	u5527
 11187  1284  2A85               	nop2
 11188                           opt asmopt_on
 11189                           
 11190                           	line	16
 11191                           	
 11192  1285                     l2126:	
 11193  1285  0008               	return
 11194                           	opt stack 0
 11195                           GLOBAL	__end_of_lcd_write_control
 11196  1286                     	__end_of_lcd_write_control:
 11197 ;; =============== function _lcd_write_control ends ============
 11198                           
 11199                           	signat	_lcd_write_control,4216
 11200                           	global	_readEEPROM
 11201                           psect	text1341,local,class=CODE,delta=2
 11202                           global __ptext1341
 11203  16B4                     __ptext1341:
 11204                           
 11205 ;; *************** function _readEEPROM *****************
 11206 ;; Defined at:
 11207 ;;		line 50 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  addressH        1    wreg     unsigned char 
 11210 ;;  addressL        1    1[BANK0 ] unsigned char 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  addressH        1    5[BANK0 ] unsigned char 
 11213 ;;  returnData      1    6[BANK0 ] unsigned char 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      unsigned char 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0, pclath, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11223 ;;      Params:         0       1       0       0       0
 11224 ;;      Locals:         0       2       0       0       0
 11225 ;;      Temps:          0       3       0       0       0
 11226 ;;      Totals:         0       6       0       0       0
 11227 ;;Total ram usage:        6 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:    2
 11230 ;; This function calls:
 11231 ;;		_initEEPROMMode
 11232 ;;		_writeSPIByte
 11233 ;; This function is called by:
 11234 ;;		_EEPROMToSerial
 11235 ;;		_testEEPROM
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           psect	text1341
 11239                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 11240                           	line	50
 11241                           	global	__size_of_readEEPROM
 11242  0040                     	__size_of_readEEPROM	equ	__end_of_readEEPROM-_readEEPROM
 11243                           	
 11244  16B4                     _readEEPROM:	
 11245                           	opt	stack 4
 11246                           ; Regs used in _readEEPROM: [wreg+status,2+status,0+pclath+cstack]
 11247                           ;readEEPROM@addressH stored from wreg
 11248  16B4  1283               	bcf	status, 5	;RP0=0, select bank0
 11249  16B5  1303               	bcf	status, 6	;RP1=0, select bank0
 11250  16B6  00A5               	movwf	(readEEPROM@addressH)
 11251                           	line	51
 11252                           	
 11253  16B7                     l10758:	
 11254                           ;eeprom.c: 51: _delay((unsigned long)((100)*(20000000/4000.0)));
 11255                           	opt asmopt_off
 11256  16B7  3003               movlw  3
 11257  16B8  00A4               movwf	((??_readEEPROM+0)+0+2),f
 11258  16B9  308A               movlw	138
 11259  16BA  00A3               movwf	((??_readEEPROM+0)+0+1),f
 11260  16BB  3056               	movlw	86
 11261  16BC  00A2               movwf	((??_readEEPROM+0)+0),f
 11262  16BD                     u5537:
 11263  16BD  0BA2               	decfsz	((??_readEEPROM+0)+0),f
 11264  16BE  2EBD               	goto	u5537
 11265  16BF  0BA3               	decfsz	((??_readEEPROM+0)+0+1),f
 11266  16C0  2EBD               	goto	u5537
 11267  16C1  0BA4               	decfsz	((??_readEEPROM+0)+0+2),f
 11268  16C2  2EBD               	goto	u5537
 11269  16C3  2EC4               	nop2
 11270                           opt asmopt_on
 11271                           
 11272                           	line	52
 11273                           	
 11274  16C4                     l10760:	
 11275                           ;eeprom.c: 52: initEEPROMMode();
 11276  16C4  160A  118A  21D3   	fcall	_initEEPROMMode
              160A  118A         
 11277                           	line	53
 11278                           	
 11279  16C9                     l10762:	
 11280                           ;eeprom.c: 53: unsigned char returnData = 0;
 11281  16C9  1283               	bcf	status, 5	;RP0=0, select bank0
 11282  16CA  1303               	bcf	status, 6	;RP1=0, select bank0
 11283  16CB  01A6               	clrf	(readEEPROM@returnData)
 11284                           	line	55
 11285                           	
 11286  16CC                     l10764:	
 11287                           ;eeprom.c: 55: writeSPIByte(3);
 11288  16CC  3003               	movlw	(03h)
 11289  16CD  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11290                           	line	57
 11291                           	
 11292  16D2                     l10766:	
 11293                           ;eeprom.c: 57: writeSPIByte(addressH);
 11294  16D2  1283               	bcf	status, 5	;RP0=0, select bank0
 11295  16D3  1303               	bcf	status, 6	;RP1=0, select bank0
 11296  16D4  0825               	movf	(readEEPROM@addressH),w
 11297  16D5  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11298                           	line	59
 11299                           	
 11300  16DA                     l10768:	
 11301                           ;eeprom.c: 59: writeSPIByte(addressL);
 11302  16DA  1283               	bcf	status, 5	;RP0=0, select bank0
 11303  16DB  1303               	bcf	status, 6	;RP1=0, select bank0
 11304  16DC  0821               	movf	(readEEPROM@addressL),w
 11305  16DD  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11306                           	line	62
 11307                           	
 11308  16E2                     l10770:	
 11309                           ;eeprom.c: 62: SSPIF = 0;
 11310  16E2  1283               	bcf	status, 5	;RP0=0, select bank0
 11311  16E3  1303               	bcf	status, 6	;RP1=0, select bank0
 11312  16E4  118C               	bcf	(99/8),(99)&7
 11313                           	line	63
 11314                           ;eeprom.c: 63: SSPBUF = 0xFF;
 11315  16E5  30FF               	movlw	(0FFh)
 11316  16E6  0093               	movwf	(19)	;volatile
 11317                           	line	64
 11318                           ;eeprom.c: 64: while (!SSPIF);
 11319  16E7  2EE8               	goto	l1413
 11320                           	
 11321  16E8                     l1414:	
 11322                           	
 11323  16E8                     l1413:	
 11324  16E8  1D8C               	btfss	(99/8),(99)&7
 11325  16E9  2EEB               	goto	u4261
 11326  16EA  2EEC               	goto	u4260
 11327  16EB                     u4261:
 11328  16EB  2EE8               	goto	l1413
 11329  16EC                     u4260:
 11330  16EC  2EED               	goto	l10772
 11331                           	
 11332  16ED                     l1415:	
 11333                           	line	65
 11334                           	
 11335  16ED                     l10772:	
 11336                           ;eeprom.c: 65: returnData = SSPBUF;
 11337  16ED  0813               	movf	(19),w	;volatile
 11338  16EE  00A2               	movwf	(??_readEEPROM+0)+0
 11339  16EF  0822               	movf	(??_readEEPROM+0)+0,w
 11340  16F0  00A6               	movwf	(readEEPROM@returnData)
 11341                           	line	67
 11342                           ;eeprom.c: 67: return returnData;
 11343  16F1  0826               	movf	(readEEPROM@returnData),w
 11344  16F2  2EF3               	goto	l1416
 11345                           	
 11346  16F3                     l10774:	
 11347                           	line	68
 11348                           	
 11349  16F3                     l1416:	
 11350  16F3  0008               	return
 11351                           	opt stack 0
 11352                           GLOBAL	__end_of_readEEPROM
 11353  16F4                     	__end_of_readEEPROM:
 11354 ;; =============== function _readEEPROM ends ============
 11355                           
 11356                           	signat	_readEEPROM,8313
 11357                           	global	_writeEEPROM
 11358                           psect	text1342,local,class=CODE,delta=2
 11359                           global __ptext1342
 11360  1777                     __ptext1342:
 11361                           
 11362 ;; *************** function _writeEEPROM *****************
 11363 ;; Defined at:
 11364 ;;		line 27 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;  data            1    wreg     unsigned char 
 11367 ;;  addressH        1    1[BANK0 ] unsigned char 
 11368 ;;  addressL        1    2[BANK0 ] unsigned char 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  data            1    6[BANK0 ] unsigned char 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;		None               void
 11373 ;; Registers used:
 11374 ;;		wreg, status,2, status,0, pclath, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11380 ;;      Params:         0       2       0       0       0
 11381 ;;      Locals:         0       1       0       0       0
 11382 ;;      Temps:          0       3       0       0       0
 11383 ;;      Totals:         0       6       0       0       0
 11384 ;;Total ram usage:        6 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:    2
 11387 ;; This function calls:
 11388 ;;		_initEEPROMMode
 11389 ;;		_writeSPIByte
 11390 ;; This function is called by:
 11391 ;;		_addNewData
 11392 ;;		_testEEPROM
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           psect	text1342
 11396                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 11397                           	line	27
 11398                           	global	__size_of_writeEEPROM
 11399  0044                     	__size_of_writeEEPROM	equ	__end_of_writeEEPROM-_writeEEPROM
 11400                           	
 11401  1777                     _writeEEPROM:	
 11402                           	opt	stack 3
 11403                           ; Regs used in _writeEEPROM: [wreg+status,2+status,0+pclath+cstack]
 11404                           ;writeEEPROM@data stored from wreg
 11405                           	line	29
 11406  1777  1283               	bcf	status, 5	;RP0=0, select bank0
 11407  1778  1303               	bcf	status, 6	;RP1=0, select bank0
 11408  1779  00A6               	movwf	(writeEEPROM@data)
 11409                           	
 11410  177A                     l10740:	
 11411                           ;eeprom.c: 29: _delay((unsigned long)((100)*(20000000/4000.0)));
 11412                           	opt asmopt_off
 11413  177A  3003               movlw  3
 11414  177B  00A5               movwf	((??_writeEEPROM+0)+0+2),f
 11415  177C  308A               movlw	138
 11416  177D  00A4               movwf	((??_writeEEPROM+0)+0+1),f
 11417  177E  3056               	movlw	86
 11418  177F  00A3               movwf	((??_writeEEPROM+0)+0),f
 11419  1780                     u5547:
 11420  1780  0BA3               	decfsz	((??_writeEEPROM+0)+0),f
 11421  1781  2F80               	goto	u5547
 11422  1782  0BA4               	decfsz	((??_writeEEPROM+0)+0+1),f
 11423  1783  2F80               	goto	u5547
 11424  1784  0BA5               	decfsz	((??_writeEEPROM+0)+0+2),f
 11425  1785  2F80               	goto	u5547
 11426  1786  2F87               	nop2
 11427                           opt asmopt_on
 11428                           
 11429                           	line	30
 11430                           	
 11431  1787                     l10742:	
 11432                           ;eeprom.c: 30: initEEPROMMode();
 11433  1787  160A  118A  21D3   	fcall	_initEEPROMMode
              160A  118A         
 11434                           	line	32
 11435                           	
 11436  178C                     l10744:	
 11437                           ;eeprom.c: 32: writeSPIByte(6);
 11438  178C  3006               	movlw	(06h)
 11439  178D  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11440                           	line	33
 11441                           	
 11442  1792                     l10746:	
 11443                           ;eeprom.c: 33: initEEPROMMode();
 11444  1792  160A  118A  21D3   	fcall	_initEEPROMMode
              160A  118A         
 11445                           	line	36
 11446                           	
 11447  1797                     l10748:	
 11448                           ;eeprom.c: 36: writeSPIByte(2);
 11449  1797  3002               	movlw	(02h)
 11450  1798  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11451                           	line	39
 11452                           	
 11453  179D                     l10750:	
 11454                           ;eeprom.c: 39: writeSPIByte(addressH);
 11455  179D  1283               	bcf	status, 5	;RP0=0, select bank0
 11456  179E  1303               	bcf	status, 6	;RP1=0, select bank0
 11457  179F  0821               	movf	(writeEEPROM@addressH),w
 11458  17A0  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11459                           	line	42
 11460                           	
 11461  17A5                     l10752:	
 11462                           ;eeprom.c: 42: writeSPIByte(addressL);
 11463  17A5  1283               	bcf	status, 5	;RP0=0, select bank0
 11464  17A6  1303               	bcf	status, 6	;RP1=0, select bank0
 11465  17A7  0822               	movf	(writeEEPROM@addressL),w
 11466  17A8  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11467                           	line	45
 11468                           	
 11469  17AD                     l10754:	
 11470                           ;eeprom.c: 45: writeSPIByte(data);
 11471  17AD  1283               	bcf	status, 5	;RP0=0, select bank0
 11472  17AE  1303               	bcf	status, 6	;RP1=0, select bank0
 11473  17AF  0826               	movf	(writeEEPROM@data),w
 11474  17B0  160A  118A  220C   	fcall	_writeSPIByte
              160A  118A         
 11475                           	line	46
 11476                           	
 11477  17B5                     l10756:	
 11478                           ;eeprom.c: 46: initEEPROMMode();
 11479  17B5  160A  118A  21D3   	fcall	_initEEPROMMode
              160A  118A         
 11480                           	line	47
 11481                           	
 11482  17BA                     l1410:	
 11483  17BA  0008               	return
 11484                           	opt stack 0
 11485                           GLOBAL	__end_of_writeEEPROM
 11486  17BB                     	__end_of_writeEEPROM:
 11487 ;; =============== function _writeEEPROM ends ============
 11488                           
 11489                           	signat	_writeEEPROM,12408
 11490                           	global	_init_adc
 11491                           psect	text1343,local,class=CODE,delta=2
 11492                           global __ptext1343
 11493  1286                     __ptext1343:
 11494                           
 11495 ;; *************** function _init_adc *****************
 11496 ;; Defined at:
 11497 ;;		line 48 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\adc.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;		None
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;		None
 11502 ;; Return value:  Size  Location     Type
 11503 ;;		None               void
 11504 ;; Registers used:
 11505 ;;		wreg, status,2
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11511 ;;      Params:         0       0       0       0       0
 11512 ;;      Locals:         0       0       0       0       0
 11513 ;;      Temps:          0       1       0       0       0
 11514 ;;      Totals:         0       1       0       0       0
 11515 ;;Total ram usage:        1 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    1
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_init
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           psect	text1343
 11525                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\adc.c"
 11526                           	line	48
 11527                           	global	__size_of_init_adc
 11528  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 11529                           	
 11530  1286                     _init_adc:	
 11531                           	opt	stack 5
 11532                           ; Regs used in _init_adc: [wreg+status,2]
 11533                           	line	50
 11534                           	
 11535  1286                     l10730:	
 11536                           ;adc.c: 50: PORTA = 0;
 11537  1286  1283               	bcf	status, 5	;RP0=0, select bank0
 11538  1287  1303               	bcf	status, 6	;RP1=0, select bank0
 11539  1288  0185               	clrf	(5)	;volatile
 11540                           	line	51
 11541                           	
 11542  1289                     l10732:	
 11543                           ;adc.c: 51: TRISA = 0b00111111;
 11544  1289  303F               	movlw	(03Fh)
 11545  128A  1683               	bsf	status, 5	;RP0=1, select bank1
 11546  128B  1303               	bcf	status, 6	;RP1=0, select bank1
 11547  128C  0085               	movwf	(133)^080h	;volatile
 11548                           	line	54
 11549                           	
 11550  128D                     l10734:	
 11551                           ;adc.c: 54: ADCON0 = 0b10100001;
 11552  128D  30A1               	movlw	(0A1h)
 11553  128E  1283               	bcf	status, 5	;RP0=0, select bank0
 11554  128F  1303               	bcf	status, 6	;RP1=0, select bank0
 11555  1290  009F               	movwf	(31)	;volatile
 11556                           	line	55
 11557                           	
 11558  1291                     l10736:	
 11559                           ;adc.c: 55: ADCON1 = 0b00000010;
 11560  1291  3002               	movlw	(02h)
 11561  1292  1683               	bsf	status, 5	;RP0=1, select bank1
 11562  1293  1303               	bcf	status, 6	;RP1=0, select bank1
 11563  1294  009F               	movwf	(159)^080h	;volatile
 11564                           	line	57
 11565                           	
 11566  1295                     l10738:	
 11567                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
 11568                           	opt asmopt_off
 11569  1295  3053               movlw	83
 11570  1296  1283               	bcf	status, 5	;RP0=0, select bank0
 11571  1297  1303               	bcf	status, 6	;RP1=0, select bank0
 11572  1298  00A0               movwf	(??_init_adc+0)+0,f
 11573  1299                     u5557:
 11574  1299  0BA0               decfsz	(??_init_adc+0)+0,f
 11575  129A  2A99               	goto	u5557
 11576                           opt asmopt_on
 11577                           
 11578                           	line	58
 11579                           	
 11580  129B                     l700:	
 11581  129B  0008               	return
 11582                           	opt stack 0
 11583                           GLOBAL	__end_of_init_adc
 11584  129C                     	__end_of_init_adc:
 11585 ;; =============== function _init_adc ends ============
 11586                           
 11587                           	signat	_init_adc,88
 11588                           	global	_adc_read
 11589                           psect	text1344,local,class=CODE,delta=2
 11590                           global __ptext1344
 11591  1636                     __ptext1344:
 11592                           
 11593 ;; *************** function _adc_read *****************
 11594 ;; Defined at:
 11595 ;;		line 62 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\adc.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  adc_value       2   21[BANK0 ] volatile int 
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  2   15[BANK0 ] int 
 11602 ;; Registers used:
 11603 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11609 ;;      Params:         0       2       0       0       0
 11610 ;;      Locals:         0       2       0       0       0
 11611 ;;      Temps:          0       4       0       0       0
 11612 ;;      Totals:         0       8       0       0       0
 11613 ;;Total ram usage:        8 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:    2
 11616 ;; This function calls:
 11617 ;;		___awdiv
 11618 ;; This function is called by:
 11619 ;;		_adc_read_channel
 11620 ;; This function uses a non-reentrant model
 11621 ;;
 11622                           psect	text1344
 11623                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\adc.c"
 11624                           	line	62
 11625                           	global	__size_of_adc_read
 11626  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 11627                           	
 11628  1636                     _adc_read:	
 11629                           	opt	stack 2
 11630                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11631                           	line	65
 11632                           	
 11633  1636                     l10720:	
 11634                           ;adc.c: 63: volatile int adc_value;
 11635                           ;adc.c: 65: ADRESH = 0;
 11636  1636  1283               	bcf	status, 5	;RP0=0, select bank0
 11637  1637  1303               	bcf	status, 6	;RP1=0, select bank0
 11638  1638  019E               	clrf	(30)	;volatile
 11639                           	line	66
 11640                           ;adc.c: 66: ADRESL = 0;
 11641  1639  1683               	bsf	status, 5	;RP0=1, select bank1
 11642  163A  1303               	bcf	status, 6	;RP1=0, select bank1
 11643  163B  019E               	clrf	(158)^080h	;volatile
 11644                           	line	68
 11645                           	
 11646  163C                     l10722:	
 11647                           ;adc.c: 68: GO = 1;
 11648  163C  1283               	bcf	status, 5	;RP0=0, select bank0
 11649  163D  1303               	bcf	status, 6	;RP1=0, select bank0
 11650  163E  151F               	bsf	(250/8),(250)&7
 11651                           	line	69
 11652                           ;adc.c: 69: while(GO) continue;
 11653  163F  2E40               	goto	l703
 11654                           	
 11655  1640                     l704:	
 11656                           	
 11657  1640                     l703:	
 11658  1640  191F               	btfsc	(250/8),(250)&7
 11659  1641  2E43               	goto	u4241
 11660  1642  2E44               	goto	u4240
 11661  1643                     u4241:
 11662  1643  2E40               	goto	l703
 11663  1644                     u4240:
 11664  1644  2E45               	goto	l10724
 11665                           	
 11666  1645                     l705:	
 11667                           	line	75
 11668                           	
 11669  1645                     l10724:	
 11670                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
 11671  1645  3040               	movlw	low(040h)
 11672  1646  00A6               	movwf	(?___awdiv)
 11673  1647  3000               	movlw	high(040h)
 11674  1648  00A7               	movwf	((?___awdiv))+1
 11675  1649  1683               	bsf	status, 5	;RP0=1, select bank1
 11676  164A  1303               	bcf	status, 6	;RP1=0, select bank1
 11677  164B  081E               	movf	(158)^080h,w	;volatile
 11678  164C  1283               	bcf	status, 5	;RP0=0, select bank0
 11679  164D  1303               	bcf	status, 6	;RP1=0, select bank0
 11680  164E  00B1               	movwf	(??_adc_read+0)+0
 11681  164F  01B2               	clrf	(??_adc_read+0)+0+1
 11682  1650  0831               	movf	0+(??_adc_read+0)+0,w
 11683  1651  00A8               	movwf	0+(?___awdiv)+02h
 11684  1652  0832               	movf	1+(??_adc_read+0)+0,w
 11685  1653  00A9               	movwf	1+(?___awdiv)+02h
 11686  1654  120A  158A  22F2   	fcall	___awdiv
              160A  118A         
 11687  1659  1283               	bcf	status, 5	;RP0=0, select bank0
 11688  165A  1303               	bcf	status, 6	;RP1=0, select bank0
 11689  165B  081E               	movf	(30),w	;volatile
 11690  165C  00B3               	movwf	(??_adc_read+2)+0
 11691  165D  01B4               	clrf	(??_adc_read+2)+0+1
 11692  165E  3002               	movlw	02h
 11693  165F  00FF               	movwf	btemp+1
 11694  1660                     u4255:
 11695  1660  1003               	clrc
 11696  1661  0DB3               	rlf	(??_adc_read+2)+0,f
 11697  1662  0DB4               	rlf	(??_adc_read+2)+1,f
 11698  1663  0BFF               	decfsz	btemp+1,f
 11699  1664  2E60               	goto	u4255
 11700  1665  0826               	movf	(0+(?___awdiv)),w
 11701  1666  0733               	addwf	0+(??_adc_read+2)+0,w
 11702  1667  00B5               	movwf	(adc_read@adc_value)	;volatile
 11703  1668  0827               	movf	(1+(?___awdiv)),w
 11704  1669  1803               	skipnc
 11705  166A  0A27               	incf	(1+(?___awdiv)),w
 11706  166B  0734               	addwf	1+(??_adc_read+2)+0,w
 11707  166C  00B6               	movwf	1+(adc_read@adc_value)	;volatile
 11708                           	line	77
 11709                           	
 11710  166D                     l10726:	
 11711                           ;adc.c: 77: return (adc_value);
 11712  166D  0836               	movf	(adc_read@adc_value+1),w	;volatile
 11713  166E  01B0               	clrf	(?_adc_read+1)
 11714  166F  07B0               	addwf	(?_adc_read+1)
 11715  1670  0835               	movf	(adc_read@adc_value),w	;volatile
 11716  1671  01AF               	clrf	(?_adc_read)
 11717  1672  07AF               	addwf	(?_adc_read)
 11718                           
 11719  1673  2E74               	goto	l706
 11720                           	
 11721  1674                     l10728:	
 11722                           	line	78
 11723                           	
 11724  1674                     l706:	
 11725  1674  0008               	return
 11726                           	opt stack 0
 11727                           GLOBAL	__end_of_adc_read
 11728  1675                     	__end_of_adc_read:
 11729 ;; =============== function _adc_read ends ============
 11730                           
 11731                           	signat	_adc_read,90
 11732                           	global	___awdiv
 11733                           psect	text1345,local,class=CODE,delta=2
 11734                           global __ptext1345
 11735  0AF2                     __ptext1345:
 11736                           
 11737 ;; *************** function ___awdiv *****************
 11738 ;; Defined at:
 11739 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;  divisor         2    6[BANK0 ] int 
 11742 ;;  dividend        2    8[BANK0 ] int 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  quotient        2   13[BANK0 ] int 
 11745 ;;  sign            1   12[BANK0 ] unsigned char 
 11746 ;;  counter         1   11[BANK0 ] unsigned char 
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  2    6[BANK0 ] int 
 11749 ;; Registers used:
 11750 ;;		wreg, status,2, status,0
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11756 ;;      Params:         0       4       0       0       0
 11757 ;;      Locals:         0       4       0       0       0
 11758 ;;      Temps:          0       1       0       0       0
 11759 ;;      Totals:         0       9       0       0       0
 11760 ;;Total ram usage:        9 bytes
 11761 ;; Hardware stack levels used:    1
 11762 ;; Hardware stack levels required when called:    1
 11763 ;; This function calls:
 11764 ;;		Nothing
 11765 ;; This function is called by:
 11766 ;;		_adc_read
 11767 ;;		_convert
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           psect	text1345
 11771                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
 11772                           	line	5
 11773                           	global	__size_of___awdiv
 11774  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11775                           	
 11776  0AF2                     ___awdiv:	
 11777                           	opt	stack 3
 11778                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11779                           	line	9
 11780                           	
 11781  0AF2                     l10680:	
 11782  0AF2  1283               	bcf	status, 5	;RP0=0, select bank0
 11783  0AF3  1303               	bcf	status, 6	;RP1=0, select bank0
 11784  0AF4  01AC               	clrf	(___awdiv@sign)
 11785                           	line	10
 11786  0AF5  1FA7               	btfss	(___awdiv@divisor+1),7
 11787  0AF6  2AF8               	goto	u4141
 11788  0AF7  2AF9               	goto	u4140
 11789  0AF8                     u4141:
 11790  0AF8  2B02               	goto	l10684
 11791  0AF9                     u4140:
 11792                           	line	11
 11793                           	
 11794  0AF9                     l10682:	
 11795  0AF9  09A6               	comf	(___awdiv@divisor),f
 11796  0AFA  09A7               	comf	(___awdiv@divisor+1),f
 11797  0AFB  0AA6               	incf	(___awdiv@divisor),f
 11798  0AFC  1903               	skipnz
 11799  0AFD  0AA7               	incf	(___awdiv@divisor+1),f
 11800                           	line	12
 11801  0AFE  01AC               	clrf	(___awdiv@sign)
 11802  0AFF  1403               	bsf	status,0
 11803  0B00  0DAC               	rlf	(___awdiv@sign),f
 11804  0B01  2B02               	goto	l10684
 11805                           	line	13
 11806                           	
 11807  0B02                     l7710:	
 11808                           	line	14
 11809                           	
 11810  0B02                     l10684:	
 11811  0B02  1FA9               	btfss	(___awdiv@dividend+1),7
 11812  0B03  2B05               	goto	u4151
 11813  0B04  2B06               	goto	u4150
 11814  0B05                     u4151:
 11815  0B05  2B10               	goto	l10690
 11816  0B06                     u4150:
 11817                           	line	15
 11818                           	
 11819  0B06                     l10686:	
 11820  0B06  09A8               	comf	(___awdiv@dividend),f
 11821  0B07  09A9               	comf	(___awdiv@dividend+1),f
 11822  0B08  0AA8               	incf	(___awdiv@dividend),f
 11823  0B09  1903               	skipnz
 11824  0B0A  0AA9               	incf	(___awdiv@dividend+1),f
 11825                           	line	16
 11826                           	
 11827  0B0B                     l10688:	
 11828  0B0B  3001               	movlw	(01h)
 11829  0B0C  00AA               	movwf	(??___awdiv+0)+0
 11830  0B0D  082A               	movf	(??___awdiv+0)+0,w
 11831  0B0E  06AC               	xorwf	(___awdiv@sign),f
 11832  0B0F  2B10               	goto	l10690
 11833                           	line	17
 11834                           	
 11835  0B10                     l7711:	
 11836                           	line	18
 11837                           	
 11838  0B10                     l10690:	
 11839  0B10  01AD               	clrf	(___awdiv@quotient)
 11840  0B11  01AE               	clrf	(___awdiv@quotient+1)
 11841                           	line	19
 11842                           	
 11843  0B12                     l10692:	
 11844  0B12  0827               	movf	(___awdiv@divisor+1),w
 11845  0B13  0426               	iorwf	(___awdiv@divisor),w
 11846  0B14  1903               	skipnz
 11847  0B15  2B17               	goto	u4161
 11848  0B16  2B18               	goto	u4160
 11849  0B17                     u4161:
 11850  0B17  2B56               	goto	l10712
 11851  0B18                     u4160:
 11852                           	line	20
 11853                           	
 11854  0B18                     l10694:	
 11855  0B18  01AB               	clrf	(___awdiv@counter)
 11856  0B19  1403               	bsf	status,0
 11857  0B1A  0DAB               	rlf	(___awdiv@counter),f
 11858                           	line	21
 11859  0B1B  2B28               	goto	l10700
 11860                           	
 11861  0B1C                     l7714:	
 11862                           	line	22
 11863                           	
 11864  0B1C                     l10696:	
 11865  0B1C  3001               	movlw	01h
 11866                           	
 11867  0B1D                     u4175:
 11868  0B1D  1003               	clrc
 11869  0B1E  0DA6               	rlf	(___awdiv@divisor),f
 11870  0B1F  0DA7               	rlf	(___awdiv@divisor+1),f
 11871  0B20  3EFF               	addlw	-1
 11872  0B21  1D03               	skipz
 11873  0B22  2B1D               	goto	u4175
 11874                           	line	23
 11875                           	
 11876  0B23                     l10698:	
 11877  0B23  3001               	movlw	(01h)
 11878  0B24  00AA               	movwf	(??___awdiv+0)+0
 11879  0B25  082A               	movf	(??___awdiv+0)+0,w
 11880  0B26  07AB               	addwf	(___awdiv@counter),f
 11881  0B27  2B28               	goto	l10700
 11882                           	line	24
 11883                           	
 11884  0B28                     l7713:	
 11885                           	line	21
 11886                           	
 11887  0B28                     l10700:	
 11888  0B28  1FA7               	btfss	(___awdiv@divisor+1),(15)&7
 11889  0B29  2B2B               	goto	u4181
 11890  0B2A  2B2C               	goto	u4180
 11891  0B2B                     u4181:
 11892  0B2B  2B1C               	goto	l10696
 11893  0B2C                     u4180:
 11894  0B2C  2B2E               	goto	l10702
 11895                           	
 11896  0B2D                     l7715:	
 11897  0B2D  2B2E               	goto	l10702
 11898                           	line	25
 11899                           	
 11900  0B2E                     l7716:	
 11901                           	line	26
 11902                           	
 11903  0B2E                     l10702:	
 11904  0B2E  3001               	movlw	01h
 11905                           	
 11906  0B2F                     u4195:
 11907  0B2F  1003               	clrc
 11908  0B30  0DAD               	rlf	(___awdiv@quotient),f
 11909  0B31  0DAE               	rlf	(___awdiv@quotient+1),f
 11910  0B32  3EFF               	addlw	-1
 11911  0B33  1D03               	skipz
 11912  0B34  2B2F               	goto	u4195
 11913                           	line	27
 11914  0B35  0827               	movf	(___awdiv@divisor+1),w
 11915  0B36  0229               	subwf	(___awdiv@dividend+1),w
 11916  0B37  1D03               	skipz
 11917  0B38  2B3B               	goto	u4205
 11918  0B39  0826               	movf	(___awdiv@divisor),w
 11919  0B3A  0228               	subwf	(___awdiv@dividend),w
 11920  0B3B                     u4205:
 11921  0B3B  1C03               	skipc
 11922  0B3C  2B3E               	goto	u4201
 11923  0B3D  2B3F               	goto	u4200
 11924  0B3E                     u4201:
 11925  0B3E  2B47               	goto	l10708
 11926  0B3F                     u4200:
 11927                           	line	28
 11928                           	
 11929  0B3F                     l10704:	
 11930  0B3F  0826               	movf	(___awdiv@divisor),w
 11931  0B40  02A8               	subwf	(___awdiv@dividend),f
 11932  0B41  0827               	movf	(___awdiv@divisor+1),w
 11933  0B42  1C03               	skipc
 11934  0B43  03A9               	decf	(___awdiv@dividend+1),f
 11935  0B44  02A9               	subwf	(___awdiv@dividend+1),f
 11936                           	line	29
 11937                           	
 11938  0B45                     l10706:	
 11939  0B45  142D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11940  0B46  2B47               	goto	l10708
 11941                           	line	30
 11942                           	
 11943  0B47                     l7717:	
 11944                           	line	31
 11945                           	
 11946  0B47                     l10708:	
 11947  0B47  3001               	movlw	01h
 11948                           	
 11949  0B48                     u4215:
 11950  0B48  1003               	clrc
 11951  0B49  0CA7               	rrf	(___awdiv@divisor+1),f
 11952  0B4A  0CA6               	rrf	(___awdiv@divisor),f
 11953  0B4B  3EFF               	addlw	-1
 11954  0B4C  1D03               	skipz
 11955  0B4D  2B48               	goto	u4215
 11956                           	line	32
 11957                           	
 11958  0B4E                     l10710:	
 11959  0B4E  3001               	movlw	low(01h)
 11960  0B4F  02AB               	subwf	(___awdiv@counter),f
 11961  0B50  1D03               	btfss	status,2
 11962  0B51  2B53               	goto	u4221
 11963  0B52  2B54               	goto	u4220
 11964  0B53                     u4221:
 11965  0B53  2B2E               	goto	l10702
 11966  0B54                     u4220:
 11967  0B54  2B56               	goto	l10712
 11968                           	
 11969  0B55                     l7718:	
 11970  0B55  2B56               	goto	l10712
 11971                           	line	33
 11972                           	
 11973  0B56                     l7712:	
 11974                           	line	34
 11975                           	
 11976  0B56                     l10712:	
 11977  0B56  082C               	movf	(___awdiv@sign),w
 11978  0B57  1D03               	skipz
 11979  0B58  2B5A               	goto	u4230
 11980  0B59  2B60               	goto	l10716
 11981  0B5A                     u4230:
 11982                           	line	35
 11983                           	
 11984  0B5A                     l10714:	
 11985  0B5A  09AD               	comf	(___awdiv@quotient),f
 11986  0B5B  09AE               	comf	(___awdiv@quotient+1),f
 11987  0B5C  0AAD               	incf	(___awdiv@quotient),f
 11988  0B5D  1903               	skipnz
 11989  0B5E  0AAE               	incf	(___awdiv@quotient+1),f
 11990  0B5F  2B60               	goto	l10716
 11991                           	
 11992  0B60                     l7719:	
 11993                           	line	36
 11994                           	
 11995  0B60                     l10716:	
 11996  0B60  082E               	movf	(___awdiv@quotient+1),w
 11997  0B61  01A7               	clrf	(?___awdiv+1)
 11998  0B62  07A7               	addwf	(?___awdiv+1)
 11999  0B63  082D               	movf	(___awdiv@quotient),w
 12000  0B64  01A6               	clrf	(?___awdiv)
 12001  0B65  07A6               	addwf	(?___awdiv)
 12002                           
 12003  0B66  2B67               	goto	l7720
 12004                           	
 12005  0B67                     l10718:	
 12006                           	line	37
 12007                           	
 12008  0B67                     l7720:	
 12009  0B67  0008               	return
 12010                           	opt stack 0
 12011                           GLOBAL	__end_of___awdiv
 12012  0B68                     	__end_of___awdiv:
 12013 ;; =============== function ___awdiv ends ============
 12014                           
 12015                           	signat	___awdiv,8314
 12016                           	global	___wmul
 12017                           psect	text1346,local,class=CODE,delta=2
 12018                           global __ptext1346
 12019  14AE                     __ptext1346:
 12020                           
 12021 ;; *************** function ___wmul *****************
 12022 ;; Defined at:
 12023 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12026 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;  product         2    4[BANK0 ] unsigned int 
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  2    0[BANK0 ] unsigned int 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12038 ;;      Params:         0       4       0       0       0
 12039 ;;      Locals:         0       2       0       0       0
 12040 ;;      Temps:          0       0       0       0       0
 12041 ;;      Totals:         0       6       0       0       0
 12042 ;;Total ram usage:        6 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    1
 12045 ;; This function calls:
 12046 ;;		Nothing
 12047 ;; This function is called by:
 12048 ;;		_convert
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           psect	text1346
 12052                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
 12053                           	line	3
 12054                           	global	__size_of___wmul
 12055  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 12056                           	
 12057  14AE                     ___wmul:	
 12058                           	opt	stack 3
 12059                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12060                           	line	4
 12061                           	
 12062  14AE                     l10668:	
 12063  14AE  1283               	bcf	status, 5	;RP0=0, select bank0
 12064  14AF  1303               	bcf	status, 6	;RP1=0, select bank0
 12065  14B0  01A4               	clrf	(___wmul@product)
 12066  14B1  01A5               	clrf	(___wmul@product+1)
 12067  14B2  2CB3               	goto	l10670
 12068                           	line	6
 12069                           	
 12070  14B3                     l7570:	
 12071                           	line	7
 12072                           	
 12073  14B3                     l10670:	
 12074  14B3  1C20               	btfss	(___wmul@multiplier),(0)&7
 12075  14B4  2CB6               	goto	u4101
 12076  14B5  2CB7               	goto	u4100
 12077  14B6                     u4101:
 12078  14B6  2CBD               	goto	l7571
 12079  14B7                     u4100:
 12080                           	line	8
 12081                           	
 12082  14B7                     l10672:	
 12083  14B7  0822               	movf	(___wmul@multiplicand),w
 12084  14B8  07A4               	addwf	(___wmul@product),f
 12085  14B9  1803               	skipnc
 12086  14BA  0AA5               	incf	(___wmul@product+1),f
 12087  14BB  0823               	movf	(___wmul@multiplicand+1),w
 12088  14BC  07A5               	addwf	(___wmul@product+1),f
 12089                           	
 12090  14BD                     l7571:	
 12091                           	line	9
 12092  14BD  3001               	movlw	01h
 12093                           	
 12094  14BE                     u4115:
 12095  14BE  1003               	clrc
 12096  14BF  0DA2               	rlf	(___wmul@multiplicand),f
 12097  14C0  0DA3               	rlf	(___wmul@multiplicand+1),f
 12098  14C1  3EFF               	addlw	-1
 12099  14C2  1D03               	skipz
 12100  14C3  2CBE               	goto	u4115
 12101                           	line	10
 12102                           	
 12103  14C4                     l10674:	
 12104  14C4  3001               	movlw	01h
 12105                           	
 12106  14C5                     u4125:
 12107  14C5  1003               	clrc
 12108  14C6  0CA1               	rrf	(___wmul@multiplier+1),f
 12109  14C7  0CA0               	rrf	(___wmul@multiplier),f
 12110  14C8  3EFF               	addlw	-1
 12111  14C9  1D03               	skipz
 12112  14CA  2CC5               	goto	u4125
 12113                           	line	11
 12114  14CB  0821               	movf	((___wmul@multiplier+1)),w
 12115  14CC  0420               	iorwf	((___wmul@multiplier)),w
 12116  14CD  1D03               	skipz
 12117  14CE  2CD0               	goto	u4131
 12118  14CF  2CD1               	goto	u4130
 12119  14D0                     u4131:
 12120  14D0  2CB3               	goto	l10670
 12121  14D1                     u4130:
 12122  14D1  2CD2               	goto	l10676
 12123                           	
 12124  14D2                     l7572:	
 12125                           	line	12
 12126                           	
 12127  14D2                     l10676:	
 12128  14D2  0825               	movf	(___wmul@product+1),w
 12129  14D3  01A1               	clrf	(?___wmul+1)
 12130  14D4  07A1               	addwf	(?___wmul+1)
 12131  14D5  0824               	movf	(___wmul@product),w
 12132  14D6  01A0               	clrf	(?___wmul)
 12133  14D7  07A0               	addwf	(?___wmul)
 12134                           
 12135  14D8  2CD9               	goto	l7573
 12136                           	
 12137  14D9                     l10678:	
 12138                           	line	13
 12139                           	
 12140  14D9                     l7573:	
 12141  14D9  0008               	return
 12142                           	opt stack 0
 12143                           GLOBAL	__end_of___wmul
 12144  14DA                     	__end_of___wmul:
 12145 ;; =============== function ___wmul ends ============
 12146                           
 12147                           	signat	___wmul,8314
 12148                           	global	_updateNode
 12149                           psect	text1347,local,class=CODE,delta=2
 12150                           global __ptext1347
 12151  0A85                     __ptext1347:
 12152                           
 12153 ;; *************** function _updateNode *****************
 12154 ;; Defined at:
 12155 ;;		line 337 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;		None
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;		None
 12160 ;; Return value:  Size  Location     Type
 12161 ;;		None               void
 12162 ;; Registers used:
 12163 ;;		wreg, status,2, status,0
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12169 ;;      Params:         0       0       0       0       0
 12170 ;;      Locals:         0       0       0       0       0
 12171 ;;      Temps:          0       1       0       0       0
 12172 ;;      Totals:         0       1       0       0       0
 12173 ;;Total ram usage:        1 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    1
 12176 ;; This function calls:
 12177 ;;		Nothing
 12178 ;; This function is called by:
 12179 ;;		_main
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           psect	text1347
 12183                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12184                           	line	337
 12185                           	global	__size_of_updateNode
 12186  006D                     	__size_of_updateNode	equ	__end_of_updateNode-_updateNode
 12187                           	
 12188  0A85                     _updateNode:	
 12189                           	opt	stack 6
 12190                           ; Regs used in _updateNode: [wreg+status,2+status,0]
 12191                           	line	338
 12192                           	
 12193  0A85                     l10632:	
 12194                           ;main.c: 338: if((xCoord == 2) && (yCoord == 2))
 12195  0A85  1283               	bcf	status, 5	;RP0=0, select bank0
 12196  0A86  1303               	bcf	status, 6	;RP1=0, select bank0
 12197  0A87  0866               	movf	(_xCoord),w	;volatile
 12198  0A88  3A02               	xorlw	02h
 12199  0A89  1D03               	skipz
 12200  0A8A  2A8C               	goto	u3981
 12201  0A8B  2A8D               	goto	u3980
 12202  0A8C                     u3981:
 12203  0A8C  2A97               	goto	l10638
 12204  0A8D                     u3980:
 12205                           	
 12206  0A8D                     l10634:	
 12207  0A8D  0869               	movf	(_yCoord),w	;volatile
 12208  0A8E  3A02               	xorlw	02h
 12209  0A8F  1D03               	skipz
 12210  0A90  2A92               	goto	u3991
 12211  0A91  2A93               	goto	u3990
 12212  0A92                     u3991:
 12213  0A92  2A97               	goto	l10638
 12214  0A93                     u3990:
 12215                           	line	339
 12216                           	
 12217  0A93                     l10636:	
 12218                           ;main.c: 339: node = 1;
 12219  0A93  01DA               	clrf	(_node)	;volatile
 12220  0A94  1403               	bsf	status,0
 12221  0A95  0DDA               	rlf	(_node),f	;volatile
 12222  0A96  2AF1               	goto	l6804
 12223                           	line	340
 12224                           	
 12225  0A97                     l6792:	
 12226                           	
 12227  0A97                     l10638:	
 12228                           ;main.c: 340: else if((xCoord == 4) && (yCoord == 2))
 12229  0A97  0866               	movf	(_xCoord),w	;volatile
 12230  0A98  3A04               	xorlw	04h
 12231  0A99  1D03               	skipz
 12232  0A9A  2A9C               	goto	u4001
 12233  0A9B  2A9D               	goto	u4000
 12234  0A9C                     u4001:
 12235  0A9C  2AA8               	goto	l10644
 12236  0A9D                     u4000:
 12237                           	
 12238  0A9D                     l10640:	
 12239  0A9D  0869               	movf	(_yCoord),w	;volatile
 12240  0A9E  3A02               	xorlw	02h
 12241  0A9F  1D03               	skipz
 12242  0AA0  2AA2               	goto	u4011
 12243  0AA1  2AA3               	goto	u4010
 12244  0AA2                     u4011:
 12245  0AA2  2AA8               	goto	l10644
 12246  0AA3                     u4010:
 12247                           	line	341
 12248                           	
 12249  0AA3                     l10642:	
 12250                           ;main.c: 341: node = 2;
 12251  0AA3  3002               	movlw	(02h)
 12252  0AA4  00A0               	movwf	(??_updateNode+0)+0
 12253  0AA5  0820               	movf	(??_updateNode+0)+0,w
 12254  0AA6  00DA               	movwf	(_node)	;volatile
 12255  0AA7  2AF1               	goto	l6804
 12256                           	line	342
 12257                           	
 12258  0AA8                     l6794:	
 12259                           	
 12260  0AA8                     l10644:	
 12261                           ;main.c: 342: else if((xCoord == 2) && (yCoord == 0))
 12262  0AA8  0866               	movf	(_xCoord),w	;volatile
 12263  0AA9  3A02               	xorlw	02h
 12264  0AAA  1D03               	skipz
 12265  0AAB  2AAD               	goto	u4021
 12266  0AAC  2AAE               	goto	u4020
 12267  0AAD                     u4021:
 12268  0AAD  2AB8               	goto	l10650
 12269  0AAE                     u4020:
 12270                           	
 12271  0AAE                     l10646:	
 12272  0AAE  08E9               	movf	(_yCoord),f
 12273  0AAF  1D03               	skipz	;volatile
 12274  0AB0  2AB2               	goto	u4031
 12275  0AB1  2AB3               	goto	u4030
 12276  0AB2                     u4031:
 12277  0AB2  2AB8               	goto	l10650
 12278  0AB3                     u4030:
 12279                           	line	343
 12280                           	
 12281  0AB3                     l10648:	
 12282                           ;main.c: 343: node = 3;
 12283  0AB3  3003               	movlw	(03h)
 12284  0AB4  00A0               	movwf	(??_updateNode+0)+0
 12285  0AB5  0820               	movf	(??_updateNode+0)+0,w
 12286  0AB6  00DA               	movwf	(_node)	;volatile
 12287  0AB7  2AF1               	goto	l6804
 12288                           	line	344
 12289                           	
 12290  0AB8                     l6796:	
 12291                           	
 12292  0AB8                     l10650:	
 12293                           ;main.c: 344: else if((xCoord == 4) && (yCoord == 3))
 12294  0AB8  0866               	movf	(_xCoord),w	;volatile
 12295  0AB9  3A04               	xorlw	04h
 12296  0ABA  1D03               	skipz
 12297  0ABB  2ABD               	goto	u4041
 12298  0ABC  2ABE               	goto	u4040
 12299  0ABD                     u4041:
 12300  0ABD  2AC9               	goto	l10656
 12301  0ABE                     u4040:
 12302                           	
 12303  0ABE                     l10652:	
 12304  0ABE  0869               	movf	(_yCoord),w	;volatile
 12305  0ABF  3A03               	xorlw	03h
 12306  0AC0  1D03               	skipz
 12307  0AC1  2AC3               	goto	u4051
 12308  0AC2  2AC4               	goto	u4050
 12309  0AC3                     u4051:
 12310  0AC3  2AC9               	goto	l10656
 12311  0AC4                     u4050:
 12312                           	line	345
 12313                           	
 12314  0AC4                     l10654:	
 12315                           ;main.c: 345: node = 4;
 12316  0AC4  3004               	movlw	(04h)
 12317  0AC5  00A0               	movwf	(??_updateNode+0)+0
 12318  0AC6  0820               	movf	(??_updateNode+0)+0,w
 12319  0AC7  00DA               	movwf	(_node)	;volatile
 12320  0AC8  2AF1               	goto	l6804
 12321                           	line	346
 12322                           	
 12323  0AC9                     l6798:	
 12324                           	
 12325  0AC9                     l10656:	
 12326                           ;main.c: 346: else if((xCoord == 2) && (yCoord == 1))
 12327  0AC9  0866               	movf	(_xCoord),w	;volatile
 12328  0ACA  3A02               	xorlw	02h
 12329  0ACB  1D03               	skipz
 12330  0ACC  2ACE               	goto	u4061
 12331  0ACD  2ACF               	goto	u4060
 12332  0ACE                     u4061:
 12333  0ACE  2ADA               	goto	l10662
 12334  0ACF                     u4060:
 12335                           	
 12336  0ACF                     l10658:	
 12337  0ACF  0869               	movf	(_yCoord),w	;volatile
 12338  0AD0  3A01               	xorlw	01h
 12339  0AD1  1D03               	skipz
 12340  0AD2  2AD4               	goto	u4071
 12341  0AD3  2AD5               	goto	u4070
 12342  0AD4                     u4071:
 12343  0AD4  2ADA               	goto	l10662
 12344  0AD5                     u4070:
 12345                           	line	347
 12346                           	
 12347  0AD5                     l10660:	
 12348                           ;main.c: 347: node = 5;
 12349  0AD5  3005               	movlw	(05h)
 12350  0AD6  00A0               	movwf	(??_updateNode+0)+0
 12351  0AD7  0820               	movf	(??_updateNode+0)+0,w
 12352  0AD8  00DA               	movwf	(_node)	;volatile
 12353  0AD9  2AF1               	goto	l6804
 12354                           	line	348
 12355                           	
 12356  0ADA                     l6800:	
 12357                           	
 12358  0ADA                     l10662:	
 12359                           ;main.c: 348: else if((xCoord == 3) && (yCoord == 0))
 12360  0ADA  0866               	movf	(_xCoord),w	;volatile
 12361  0ADB  3A03               	xorlw	03h
 12362  0ADC  1D03               	skipz
 12363  0ADD  2ADF               	goto	u4081
 12364  0ADE  2AE0               	goto	u4080
 12365  0ADF                     u4081:
 12366  0ADF  2AEA               	goto	l6802
 12367  0AE0                     u4080:
 12368                           	
 12369  0AE0                     l10664:	
 12370  0AE0  08E9               	movf	(_yCoord),f
 12371  0AE1  1D03               	skipz	;volatile
 12372  0AE2  2AE4               	goto	u4091
 12373  0AE3  2AE5               	goto	u4090
 12374  0AE4                     u4091:
 12375  0AE4  2AEA               	goto	l6802
 12376  0AE5                     u4090:
 12377                           	line	349
 12378                           	
 12379  0AE5                     l10666:	
 12380                           ;main.c: 349: node = 6;
 12381  0AE5  3006               	movlw	(06h)
 12382  0AE6  00A0               	movwf	(??_updateNode+0)+0
 12383  0AE7  0820               	movf	(??_updateNode+0)+0,w
 12384  0AE8  00DA               	movwf	(_node)	;volatile
 12385  0AE9  2AF1               	goto	l6804
 12386                           	line	350
 12387                           	
 12388  0AEA                     l6802:	
 12389                           	line	351
 12390                           ;main.c: 350: else
 12391                           ;main.c: 351: node = 0;
 12392  0AEA  01DA               	clrf	(_node)	;volatile
 12393  0AEB  2AF1               	goto	l6804
 12394                           	
 12395  0AEC                     l6803:	
 12396  0AEC  2AF1               	goto	l6804
 12397                           	
 12398  0AED                     l6801:	
 12399  0AED  2AF1               	goto	l6804
 12400                           	
 12401  0AEE                     l6799:	
 12402  0AEE  2AF1               	goto	l6804
 12403                           	
 12404  0AEF                     l6797:	
 12405  0AEF  2AF1               	goto	l6804
 12406                           	
 12407  0AF0                     l6795:	
 12408  0AF0  2AF1               	goto	l6804
 12409                           	
 12410  0AF1                     l6793:	
 12411                           	line	352
 12412                           	
 12413  0AF1                     l6804:	
 12414  0AF1  0008               	return
 12415                           	opt stack 0
 12416                           GLOBAL	__end_of_updateNode
 12417  0AF2                     	__end_of_updateNode:
 12418 ;; =============== function _updateNode ends ============
 12419                           
 12420                           	signat	_updateNode,88
 12421                           	global	_getSuccessfulDrive
 12422                           psect	text1348,local,class=CODE,delta=2
 12423                           global __ptext1348
 12424  11EC                     __ptext1348:
 12425                           
 12426 ;; *************** function _getSuccessfulDrive *****************
 12427 ;; Defined at:
 12428 ;;		line 195 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;		None
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;		None               void
 12435 ;; Registers used:
 12436 ;;		status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12442 ;;      Params:         0       0       0       0       0
 12443 ;;      Locals:         0       0       0       0       0
 12444 ;;      Temps:          0       0       0       0       0
 12445 ;;      Totals:         0       0       0       0       0
 12446 ;;Total ram usage:        0 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; Hardware stack levels required when called:    1
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_main
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           psect	text1348
 12456                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12457                           	line	195
 12458                           	global	__size_of_getSuccessfulDrive
 12459  000A                     	__size_of_getSuccessfulDrive	equ	__end_of_getSuccessfulDrive-_getSuccessfulDrive
 12460                           	
 12461  11EC                     _getSuccessfulDrive:	
 12462                           	opt	stack 6
 12463                           ; Regs used in _getSuccessfulDrive: [status]
 12464                           	line	196
 12465                           	
 12466  11EC                     l10554:	
 12467                           ;drive.c: 196: return successfulDrive;
 12468  11EC  19F1               	btfsc	(_successfulDrive/8),(_successfulDrive)&7
 12469  11ED  29EF               	goto	u3841
 12470  11EE  29F0               	goto	u3840
 12471  11EF                     u3841:
 12472  11EF  29F2               	goto	l10558
 12473  11F0                     u3840:
 12474                           	
 12475  11F0                     l10556:	
 12476  11F0  1003               	clrc
 12477                           	
 12478  11F1  29F5               	goto	l5853
 12479                           	
 12480  11F2                     l10340:	
 12481                           	
 12482  11F2                     l10558:	
 12483  11F2  1403               	setc
 12484                           	
 12485  11F3  29F5               	goto	l5853
 12486                           	
 12487  11F4                     l10342:	
 12488  11F4  29F5               	goto	l5853
 12489                           	
 12490  11F5                     l10560:	
 12491                           	line	197
 12492                           	
 12493  11F5                     l5853:	
 12494  11F5  0008               	return
 12495                           	opt stack 0
 12496                           GLOBAL	__end_of_getSuccessfulDrive
 12497  11F6                     	__end_of_getSuccessfulDrive:
 12498 ;; =============== function _getSuccessfulDrive ends ============
 12499                           
 12500                           	signat	_getSuccessfulDrive,88
 12501                           	global	_getSomethingInTheWay
 12502                           psect	text1349,local,class=CODE,delta=2
 12503                           global __ptext1349
 12504  07F9                     __ptext1349:
 12505                           
 12506 ;; *************** function _getSomethingInTheWay *****************
 12507 ;; Defined at:
 12508 ;;		line 185 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12509 ;; Parameters:    Size  Location     Type
 12510 ;;		None
 12511 ;; Auto vars:     Size  Location     Type
 12512 ;;		None
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  1    wreg      enum E1111
 12515 ;; Registers used:
 12516 ;;		wreg
 12517 ;; Tracked objects:
 12518 ;;		On entry : 0/0
 12519 ;;		On exit  : 0/0
 12520 ;;		Unchanged: 0/0
 12521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12522 ;;      Params:         0       0       0       0       0
 12523 ;;      Locals:         0       0       0       0       0
 12524 ;;      Temps:          0       0       0       0       0
 12525 ;;      Totals:         0       0       0       0       0
 12526 ;;Total ram usage:        0 bytes
 12527 ;; Hardware stack levels used:    1
 12528 ;; Hardware stack levels required when called:    1
 12529 ;; This function calls:
 12530 ;;		Nothing
 12531 ;; This function is called by:
 12532 ;;		_goToNextCell
 12533 ;; This function uses a non-reentrant model
 12534 ;;
 12535                           psect	text1349
 12536                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12537                           	line	185
 12538                           	global	__size_of_getSomethingInTheWay
 12539  0005                     	__size_of_getSomethingInTheWay	equ	__end_of_getSomethingInTheWay-_getSomethingInTheWay
 12540                           	
 12541  07F9                     _getSomethingInTheWay:	
 12542                           	opt	stack 5
 12543                           ; Regs used in _getSomethingInTheWay: [wreg]
 12544                           	line	186
 12545                           	
 12546  07F9                     l10550:	
 12547                           ;drive.c: 186: return somethingInTheWay;
 12548  07F9  1283               	bcf	status, 5	;RP0=0, select bank0
 12549  07FA  1303               	bcf	status, 6	;RP1=0, select bank0
 12550  07FB  0865               	movf	(_somethingInTheWay),w	;volatile
 12551  07FC  2FFD               	goto	l5847
 12552                           	
 12553  07FD                     l10552:	
 12554                           	line	187
 12555                           	
 12556  07FD                     l5847:	
 12557  07FD  0008               	return
 12558                           	opt stack 0
 12559                           GLOBAL	__end_of_getSomethingInTheWay
 12560  07FE                     	__end_of_getSomethingInTheWay:
 12561 ;; =============== function _getSomethingInTheWay ends ============
 12562                           
 12563                           	signat	_getSomethingInTheWay,89
 12564                           	global	_getOrientation
 12565                           psect	text1350,local,class=CODE,delta=2
 12566                           global __ptext1350
 12567  11CE                     __ptext1350:
 12568                           
 12569 ;; *************** function _getOrientation *****************
 12570 ;; Defined at:
 12571 ;;		line 180 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;		None
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;		None
 12576 ;; Return value:  Size  Location     Type
 12577 ;;                  1    wreg      enum E1117
 12578 ;; Registers used:
 12579 ;;		wreg
 12580 ;; Tracked objects:
 12581 ;;		On entry : 0/0
 12582 ;;		On exit  : 0/0
 12583 ;;		Unchanged: 0/0
 12584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12585 ;;      Params:         0       0       0       0       0
 12586 ;;      Locals:         0       0       0       0       0
 12587 ;;      Temps:          0       0       0       0       0
 12588 ;;      Totals:         0       0       0       0       0
 12589 ;;Total ram usage:        0 bytes
 12590 ;; Hardware stack levels used:    1
 12591 ;; Hardware stack levels required when called:    1
 12592 ;; This function calls:
 12593 ;;		Nothing
 12594 ;; This function is called by:
 12595 ;;		_updateLocation
 12596 ;;		_main
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           psect	text1350
 12600                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12601                           	line	180
 12602                           	global	__size_of_getOrientation
 12603  0005                     	__size_of_getOrientation	equ	__end_of_getOrientation-_getOrientation
 12604                           	
 12605  11CE                     _getOrientation:	
 12606                           	opt	stack 5
 12607                           ; Regs used in _getOrientation: [wreg]
 12608                           	line	181
 12609                           	
 12610  11CE                     l10546:	
 12611                           ;drive.c: 181: return currentOrientation;
 12612  11CE  1283               	bcf	status, 5	;RP0=0, select bank0
 12613  11CF  1303               	bcf	status, 6	;RP1=0, select bank0
 12614  11D0  0857               	movf	(_currentOrientation),w	;volatile
 12615  11D1  29D2               	goto	l5844
 12616                           	
 12617  11D2                     l10548:	
 12618                           	line	182
 12619                           	
 12620  11D2                     l5844:	
 12621  11D2  0008               	return
 12622                           	opt stack 0
 12623                           GLOBAL	__end_of_getOrientation
 12624  11D3                     	__end_of_getOrientation:
 12625 ;; =============== function _getOrientation ends ============
 12626                           
 12627                           	signat	_getOrientation,89
 12628                           	global	_setVirtualLocation
 12629                           psect	text1351,local,class=CODE,delta=2
 12630                           global __ptext1351
 12631  1219                     __ptext1351:
 12632                           
 12633 ;; *************** function _setVirtualLocation *****************
 12634 ;; Defined at:
 12635 ;;		line 575 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;  xV              1    wreg     unsigned char 
 12638 ;;  yV              1    0[BANK0 ] unsigned char 
 12639 ;;  dV              1    1[BANK0 ] unsigned char 
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;  xV              1    3[BANK0 ] unsigned char 
 12642 ;; Return value:  Size  Location     Type
 12643 ;;		None               void
 12644 ;; Registers used:
 12645 ;;		wreg
 12646 ;; Tracked objects:
 12647 ;;		On entry : 0/0
 12648 ;;		On exit  : 0/0
 12649 ;;		Unchanged: 0/0
 12650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12651 ;;      Params:         0       2       0       0       0
 12652 ;;      Locals:         0       1       0       0       0
 12653 ;;      Temps:          0       1       0       0       0
 12654 ;;      Totals:         0       4       0       0       0
 12655 ;;Total ram usage:        4 bytes
 12656 ;; Hardware stack levels used:    1
 12657 ;; Hardware stack levels required when called:    1
 12658 ;; This function calls:
 12659 ;;		Nothing
 12660 ;; This function is called by:
 12661 ;;		_driveForDistance
 12662 ;; This function uses a non-reentrant model
 12663 ;;
 12664                           psect	text1351
 12665                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12666                           	line	575
 12667                           	global	__size_of_setVirtualLocation
 12668  0010                     	__size_of_setVirtualLocation	equ	__end_of_setVirtualLocation-_setVirtualLocation
 12669                           	
 12670  1219                     _setVirtualLocation:	
 12671                           	opt	stack 4
 12672                           ; Regs used in _setVirtualLocation: [wreg]
 12673                           ;setVirtualLocation@xV stored from wreg
 12674  1219  1283               	bcf	status, 5	;RP0=0, select bank0
 12675  121A  1303               	bcf	status, 6	;RP1=0, select bank0
 12676  121B  00A3               	movwf	(setVirtualLocation@xV)
 12677                           	line	576
 12678                           	
 12679  121C                     l10544:	
 12680                           ;main.c: 576: xVirtual = xV;
 12681  121C  0823               	movf	(setVirtualLocation@xV),w
 12682  121D  00A2               	movwf	(??_setVirtualLocation+0)+0
 12683  121E  0822               	movf	(??_setVirtualLocation+0)+0,w
 12684  121F  00E8               	movwf	(_xVirtual)
 12685                           	line	577
 12686                           ;main.c: 577: yVirtual = yV;
 12687  1220  0820               	movf	(setVirtualLocation@yV),w
 12688  1221  00A2               	movwf	(??_setVirtualLocation+0)+0
 12689  1222  0822               	movf	(??_setVirtualLocation+0)+0,w
 12690  1223  00EB               	movwf	(_yVirtual)
 12691                           	line	578
 12692                           ;main.c: 578: dVirtual = dV;
 12693  1224  0821               	movf	(setVirtualLocation@dV),w
 12694  1225  00A2               	movwf	(??_setVirtualLocation+0)+0
 12695  1226  0822               	movf	(??_setVirtualLocation+0)+0,w
 12696  1227  00D8               	movwf	(_dVirtual)
 12697                           	line	579
 12698                           	
 12699  1228                     l6881:	
 12700  1228  0008               	return
 12701                           	opt stack 0
 12702                           GLOBAL	__end_of_setVirtualLocation
 12703  1229                     	__end_of_setVirtualLocation:
 12704 ;; =============== function _setVirtualLocation ends ============
 12705                           
 12706                           	signat	_setVirtualLocation,12408
 12707                           	global	_getCurrentY
 12708                           psect	text1352,local,class=CODE,delta=2
 12709                           global __ptext1352
 12710  11C9                     __ptext1352:
 12711                           
 12712 ;; *************** function _getCurrentY *****************
 12713 ;; Defined at:
 12714 ;;		line 570 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;		None
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;		None
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  1    wreg      unsigned char 
 12721 ;; Registers used:
 12722 ;;		wreg
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12728 ;;      Params:         0       0       0       0       0
 12729 ;;      Locals:         0       0       0       0       0
 12730 ;;      Temps:          0       0       0       0       0
 12731 ;;      Totals:         0       0       0       0       0
 12732 ;;Total ram usage:        0 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:    1
 12735 ;; This function calls:
 12736 ;;		Nothing
 12737 ;; This function is called by:
 12738 ;;		_driveForDistance
 12739 ;;		_goForward
 12740 ;;		_turnLeft90
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           psect	text1352
 12744                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12745                           	line	570
 12746                           	global	__size_of_getCurrentY
 12747  0005                     	__size_of_getCurrentY	equ	__end_of_getCurrentY-_getCurrentY
 12748                           	
 12749  11C9                     _getCurrentY:	
 12750                           	opt	stack 4
 12751                           ; Regs used in _getCurrentY: [wreg]
 12752                           	line	571
 12753                           	
 12754  11C9                     l10540:	
 12755                           ;main.c: 571: return yCoord;
 12756  11C9  1283               	bcf	status, 5	;RP0=0, select bank0
 12757  11CA  1303               	bcf	status, 6	;RP1=0, select bank0
 12758  11CB  0869               	movf	(_yCoord),w	;volatile
 12759  11CC  29CD               	goto	l6878
 12760                           	
 12761  11CD                     l10542:	
 12762                           	line	572
 12763                           	
 12764  11CD                     l6878:	
 12765  11CD  0008               	return
 12766                           	opt stack 0
 12767                           GLOBAL	__end_of_getCurrentY
 12768  11CE                     	__end_of_getCurrentY:
 12769 ;; =============== function _getCurrentY ends ============
 12770                           
 12771                           	signat	_getCurrentY,89
 12772                           	global	_getCurrentX
 12773                           psect	text1353,local,class=CODE,delta=2
 12774                           global __ptext1353
 12775  11C4                     __ptext1353:
 12776                           
 12777 ;; *************** function _getCurrentX *****************
 12778 ;; Defined at:
 12779 ;;		line 565 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;		None
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;		None
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      unsigned char 
 12786 ;; Registers used:
 12787 ;;		wreg
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12793 ;;      Params:         0       0       0       0       0
 12794 ;;      Locals:         0       0       0       0       0
 12795 ;;      Temps:          0       0       0       0       0
 12796 ;;      Totals:         0       0       0       0       0
 12797 ;;Total ram usage:        0 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:    1
 12800 ;; This function calls:
 12801 ;;		Nothing
 12802 ;; This function is called by:
 12803 ;;		_driveForDistance
 12804 ;;		_goForward
 12805 ;;		_turnLeft90
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           psect	text1353
 12809                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 12810                           	line	565
 12811                           	global	__size_of_getCurrentX
 12812  0005                     	__size_of_getCurrentX	equ	__end_of_getCurrentX-_getCurrentX
 12813                           	
 12814  11C4                     _getCurrentX:	
 12815                           	opt	stack 4
 12816                           ; Regs used in _getCurrentX: [wreg]
 12817                           	line	566
 12818                           	
 12819  11C4                     l10536:	
 12820                           ;main.c: 566: return xCoord;
 12821  11C4  1283               	bcf	status, 5	;RP0=0, select bank0
 12822  11C5  1303               	bcf	status, 6	;RP1=0, select bank0
 12823  11C6  0866               	movf	(_xCoord),w	;volatile
 12824  11C7  29C8               	goto	l6875
 12825                           	
 12826  11C8                     l10538:	
 12827                           	line	567
 12828                           	
 12829  11C8                     l6875:	
 12830  11C8  0008               	return
 12831                           	opt stack 0
 12832                           GLOBAL	__end_of_getCurrentX
 12833  11C9                     	__end_of_getCurrentX:
 12834 ;; =============== function _getCurrentX ends ============
 12835                           
 12836                           	signat	_getCurrentX,89
 12837                           	global	_updateOrientation
 12838                           psect	text1354,local,class=CODE,delta=2
 12839                           global __ptext1354
 12840  1229                     __ptext1354:
 12841                           
 12842 ;; *************** function _updateOrientation *****************
 12843 ;; Defined at:
 12844 ;;		line 294 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;  moved           1    wreg     enum E1111
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;  moved           1    1[BANK0 ] enum E1111
 12849 ;; Return value:  Size  Location     Type
 12850 ;;		None               void
 12851 ;; Registers used:
 12852 ;;		wreg, status,2, status,0
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12858 ;;      Params:         0       0       0       0       0
 12859 ;;      Locals:         0       1       0       0       0
 12860 ;;      Temps:          0       1       0       0       0
 12861 ;;      Totals:         0       2       0       0       0
 12862 ;;Total ram usage:        2 bytes
 12863 ;; Hardware stack levels used:    1
 12864 ;; Hardware stack levels required when called:    1
 12865 ;; This function calls:
 12866 ;;		Nothing
 12867 ;; This function is called by:
 12868 ;;		_driveForDistance
 12869 ;;		_goBackward
 12870 ;;		_goLeft
 12871 ;;		_goRight
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           psect	text1354
 12875                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12876                           	line	294
 12877                           	global	__size_of_updateOrientation
 12878  0011                     	__size_of_updateOrientation	equ	__end_of_updateOrientation-_updateOrientation
 12879                           	
 12880  1229                     _updateOrientation:	
 12881                           	opt	stack 4
 12882                           ; Regs used in _updateOrientation: [wreg+status,2+status,0]
 12883                           ;updateOrientation@moved stored from wreg
 12884  1229  1283               	bcf	status, 5	;RP0=0, select bank0
 12885  122A  1303               	bcf	status, 6	;RP1=0, select bank0
 12886  122B  00A1               	movwf	(updateOrientation@moved)
 12887                           	line	295
 12888                           	
 12889  122C                     l10530:	
 12890                           ;drive.c: 295: currentOrientation += moved;
 12891  122C  0821               	movf	(updateOrientation@moved),w	;volatile
 12892  122D  00A0               	movwf	(??_updateOrientation+0)+0
 12893  122E  0820               	movf	(??_updateOrientation+0)+0,w
 12894  122F  07D7               	addwf	(_currentOrientation),f	;volatile
 12895                           	line	296
 12896                           	
 12897  1230                     l10532:	
 12898                           ;drive.c: 296: if(currentOrientation >= 4)
 12899  1230  3004               	movlw	(04h)
 12900  1231  0257               	subwf	(_currentOrientation),w	;volatile
 12901  1232  1C03               	skipc
 12902  1233  2A35               	goto	u3831
 12903  1234  2A36               	goto	u3830
 12904  1235                     u3831:
 12905  1235  2A39               	goto	l5888
 12906  1236                     u3830:
 12907                           	line	297
 12908                           	
 12909  1236                     l10534:	
 12910                           ;drive.c: 297: currentOrientation -= 4;
 12911  1236  3004               	movlw	low(04h)
 12912  1237  02D7               	subwf	(_currentOrientation),f	;volatile
 12913  1238  2A39               	goto	l5888
 12914                           	
 12915  1239                     l5887:	
 12916                           	line	298
 12917                           	
 12918  1239                     l5888:	
 12919  1239  0008               	return
 12920                           	opt stack 0
 12921                           GLOBAL	__end_of_updateOrientation
 12922  123A                     	__end_of_updateOrientation:
 12923 ;; =============== function _updateOrientation ends ============
 12924                           
 12925                           	signat	_updateOrientation,4216
 12926                           	global	_clearSuccessfulDrive
 12927                           psect	text1355,local,class=CODE,delta=2
 12928                           global __ptext1355
 12929  07FE                     __ptext1355:
 12930                           
 12931 ;; *************** function _clearSuccessfulDrive *****************
 12932 ;; Defined at:
 12933 ;;		line 190 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;		None               void
 12940 ;; Registers used:
 12941 ;;		None
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12947 ;;      Params:         0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0
 12950 ;;      Totals:         0       0       0       0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    1
 12954 ;; This function calls:
 12955 ;;		Nothing
 12956 ;; This function is called by:
 12957 ;;		_driveForDistance
 12958 ;;		_frontWallCorrect
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           psect	text1355
 12962                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\drive.c"
 12963                           	line	190
 12964                           	global	__size_of_clearSuccessfulDrive
 12965  0002                     	__size_of_clearSuccessfulDrive	equ	__end_of_clearSuccessfulDrive-_clearSuccessfulDrive
 12966                           	
 12967  07FE                     _clearSuccessfulDrive:	
 12968                           	opt	stack 4
 12969                           ; Regs used in _clearSuccessfulDrive: []
 12970                           	line	191
 12971                           	
 12972  07FE                     l10528:	
 12973                           ;drive.c: 191: successfulDrive = 0;
 12974  07FE  11F1               	bcf	(_successfulDrive/8),(_successfulDrive)&7
 12975                           	line	192
 12976                           	
 12977  07FF                     l5850:	
 12978  07FF  0008               	return
 12979                           	opt stack 0
 12980                           GLOBAL	__end_of_clearSuccessfulDrive
 12981  0800                     	__end_of_clearSuccessfulDrive:
 12982 ;; =============== function _clearSuccessfulDrive ends ============
 12983                           
 12984                           	signat	_clearSuccessfulDrive,88
 12985                           	global	_ser_init
 12986                           psect	text1356,local,class=CODE,delta=2
 12987                           global __ptext1356
 12988  1409                     __ptext1356:
 12989                           
 12990 ;; *************** function _ser_init *****************
 12991 ;; Defined at:
 12992 ;;		line 124 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;		None
 12997 ;; Return value:  Size  Location     Type
 12998 ;;		None               void
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13006 ;;      Params:         0       0       0       0       0
 13007 ;;      Locals:         0       0       0       0       0
 13008 ;;      Temps:          0       1       0       0       0
 13009 ;;      Totals:         0       1       0       0       0
 13010 ;;Total ram usage:        1 bytes
 13011 ;; Hardware stack levels used:    1
 13012 ;; Hardware stack levels required when called:    1
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_init
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           psect	text1356
 13020                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 13021                           	line	124
 13022                           	global	__size_of_ser_init
 13023  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 13024                           	
 13025  1409                     _ser_init:	
 13026                           	opt	stack 5
 13027                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 13028                           	line	125
 13029                           	
 13030  1409                     l10502:	
 13031                           ;ser.c: 125: TRISC |= 0b10000000;
 13032  1409  1683               	bsf	status, 5	;RP0=1, select bank1
 13033  140A  1303               	bcf	status, 6	;RP1=0, select bank1
 13034  140B  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 13035                           	line	126
 13036                           	
 13037  140C                     l10504:	
 13038                           ;ser.c: 126: TRISC &= 0b10111111;
 13039  140C  30BF               	movlw	(0BFh)
 13040  140D  1283               	bcf	status, 5	;RP0=0, select bank0
 13041  140E  1303               	bcf	status, 6	;RP1=0, select bank0
 13042  140F  00A0               	movwf	(??_ser_init+0)+0
 13043  1410  0820               	movf	(??_ser_init+0)+0,w
 13044  1411  1683               	bsf	status, 5	;RP0=1, select bank1
 13045  1412  1303               	bcf	status, 6	;RP1=0, select bank1
 13046  1413  0587               	andwf	(135)^080h,f	;volatile
 13047                           	line	127
 13048                           	
 13049  1414                     l10506:	
 13050                           ;ser.c: 127: BRGH=1;
 13051  1414  1518               	bsf	(1218/8)^080h,(1218)&7
 13052                           	line	129
 13053                           	
 13054  1415                     l10508:	
 13055                           ;ser.c: 129: SPBRG=20;
 13056  1415  3014               	movlw	(014h)
 13057  1416  0099               	movwf	(153)^080h	;volatile
 13058                           	line	132
 13059                           	
 13060  1417                     l10510:	
 13061                           ;ser.c: 132: TX9=0;
 13062  1417  1318               	bcf	(1222/8)^080h,(1222)&7
 13063                           	line	133
 13064                           	
 13065  1418                     l10512:	
 13066                           ;ser.c: 133: RX9=0;
 13067  1418  1283               	bcf	status, 5	;RP0=0, select bank0
 13068  1419  1303               	bcf	status, 6	;RP1=0, select bank0
 13069  141A  1318               	bcf	(198/8),(198)&7
 13070                           	line	135
 13071                           	
 13072  141B                     l10514:	
 13073                           ;ser.c: 135: SYNC=0;
 13074  141B  1683               	bsf	status, 5	;RP0=1, select bank1
 13075  141C  1303               	bcf	status, 6	;RP1=0, select bank1
 13076  141D  1218               	bcf	(1220/8)^080h,(1220)&7
 13077                           	line	136
 13078                           	
 13079  141E                     l10516:	
 13080                           ;ser.c: 136: SPEN=1;
 13081  141E  1283               	bcf	status, 5	;RP0=0, select bank0
 13082  141F  1303               	bcf	status, 6	;RP1=0, select bank0
 13083  1420  1798               	bsf	(199/8),(199)&7
 13084                           	line	137
 13085                           	
 13086  1421                     l10518:	
 13087                           ;ser.c: 137: CREN=1;
 13088  1421  1618               	bsf	(196/8),(196)&7
 13089                           	line	138
 13090                           	
 13091  1422                     l10520:	
 13092                           ;ser.c: 138: TXIE=0;
 13093  1422  1683               	bsf	status, 5	;RP0=1, select bank1
 13094  1423  1303               	bcf	status, 6	;RP1=0, select bank1
 13095  1424  120C               	bcf	(1124/8)^080h,(1124)&7
 13096                           	line	139
 13097                           	
 13098  1425                     l10522:	
 13099                           ;ser.c: 139: RCIE=1;
 13100  1425  168C               	bsf	(1125/8)^080h,(1125)&7
 13101                           	line	140
 13102                           	
 13103  1426                     l10524:	
 13104                           ;ser.c: 140: TXEN=1;
 13105  1426  1698               	bsf	(1221/8)^080h,(1221)&7
 13106                           	line	143
 13107                           	
 13108  1427                     l10526:	
 13109                           ;ser.c: 143: rxiptr=rxoptr=txiptr=txoptr=0;
 13110  1427  3000               	movlw	(0)
 13111  1428  1283               	bcf	status, 5	;RP0=0, select bank0
 13112  1429  1303               	bcf	status, 6	;RP1=0, select bank0
 13113  142A  00DF               	movwf	(_txoptr)	;volatile
 13114  142B  00FD               	movwf	(_txiptr)	;volatile
 13115  142C  00DB               	movwf	(_rxoptr)	;volatile
 13116  142D  00A0               	movwf	(??_ser_init+0)+0
 13117  142E  0820               	movf	(??_ser_init+0)+0,w
 13118  142F  00FC               	movwf	(_rxiptr)	;volatile
 13119                           	line	144
 13120                           	
 13121  1430                     l3673:	
 13122  1430  0008               	return
 13123                           	opt stack 0
 13124                           GLOBAL	__end_of_ser_init
 13125  1431                     	__end_of_ser_init:
 13126 ;; =============== function _ser_init ends ============
 13127                           
 13128                           	signat	_ser_init,88
 13129                           	global	_ser_isrx
 13130                           psect	text1357,local,class=CODE,delta=2
 13131                           global __ptext1357
 13132  088D                     __ptext1357:
 13133                           
 13134 ;; *************** function _ser_isrx *****************
 13135 ;; Defined at:
 13136 ;;		line 48 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;		None
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;		None
 13141 ;; Return value:  Size  Location     Type
 13142 ;;		None               void
 13143 ;; Registers used:
 13144 ;;		wreg, status,2, status,0
 13145 ;; Tracked objects:
 13146 ;;		On entry : 0/0
 13147 ;;		On exit  : 0/0
 13148 ;;		Unchanged: 0/0
 13149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13150 ;;      Params:         0       0       0       0       0
 13151 ;;      Locals:         0       0       0       0       0
 13152 ;;      Temps:          0       0       0       0       0
 13153 ;;      Totals:         0       0       0       0       0
 13154 ;;Total ram usage:        0 bytes
 13155 ;; Hardware stack levels used:    1
 13156 ;; Hardware stack levels required when called:    1
 13157 ;; This function calls:
 13158 ;;		Nothing
 13159 ;; This function is called by:
 13160 ;;		_ser_getch
 13161 ;; This function uses a non-reentrant model
 13162 ;;
 13163                           psect	text1357
 13164                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 13165                           	line	48
 13166                           	global	__size_of_ser_isrx
 13167  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 13168                           	
 13169  088D                     _ser_isrx:	
 13170                           	opt	stack 3
 13171                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 13172                           	line	49
 13173                           	
 13174  088D                     l10454:	
 13175                           ;ser.c: 49: if(OERR) {
 13176  088D  1283               	bcf	status, 5	;RP0=0, select bank0
 13177  088E  1303               	bcf	status, 6	;RP1=0, select bank0
 13178  088F  1C98               	btfss	(193/8),(193)&7
 13179  0890  2892               	goto	u3761
 13180  0891  2893               	goto	u3760
 13181  0892                     u3761:
 13182  0892  2898               	goto	l10462
 13183  0893                     u3760:
 13184                           	line	50
 13185                           	
 13186  0893                     l10456:	
 13187                           ;ser.c: 50: CREN = 0;
 13188  0893  1218               	bcf	(196/8),(196)&7
 13189                           	line	51
 13190                           ;ser.c: 51: CREN = 1;
 13191  0894  1618               	bsf	(196/8),(196)&7
 13192                           	line	52
 13193                           	
 13194  0895                     l10458:	
 13195                           ;ser.c: 52: return 0;
 13196  0895  1003               	clrc
 13197                           	
 13198  0896  28A3               	goto	l3633
 13199                           	
 13200  0897                     l10460:	
 13201  0897  28A3               	goto	l3633
 13202                           	line	53
 13203                           	
 13204  0898                     l3632:	
 13205                           	line	54
 13206                           	
 13207  0898                     l10462:	
 13208                           ;ser.c: 53: }
 13209                           ;ser.c: 54: return (rxiptr!=rxoptr);
 13210  0898  087C               	movf	(_rxiptr),w	;volatile
 13211  0899  065B               	xorwf	(_rxoptr),w	;volatile
 13212  089A  1D03               	skipz
 13213  089B  289D               	goto	u3771
 13214  089C  289E               	goto	u3770
 13215  089D                     u3771:
 13216  089D  28A0               	goto	l10466
 13217  089E                     u3770:
 13218                           	
 13219  089E                     l10464:	
 13220  089E  1003               	clrc
 13221                           	
 13222  089F  28A3               	goto	l3633
 13223                           	
 13224  08A0                     l10336:	
 13225                           	
 13226  08A0                     l10466:	
 13227  08A0  1403               	setc
 13228                           	
 13229  08A1  28A3               	goto	l3633
 13230                           	
 13231  08A2                     l10338:	
 13232  08A2  28A3               	goto	l3633
 13233                           	
 13234  08A3                     l10468:	
 13235                           	line	55
 13236                           	
 13237  08A3                     l3633:	
 13238  08A3  0008               	return
 13239                           	opt stack 0
 13240                           GLOBAL	__end_of_ser_isrx
 13241  08A4                     	__end_of_ser_isrx:
 13242 ;; =============== function _ser_isrx ends ============
 13243                           
 13244                           	signat	_ser_isrx,88
 13245                           	global	_getVictimZone
 13246                           psect	text1358,local,class=CODE,delta=2
 13247                           global __ptext1358
 13248  0B68                     __ptext1358:
 13249                           
 13250 ;; *************** function _getVictimZone *****************
 13251 ;; Defined at:
 13252 ;;		line 157 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  victimX         1    wreg     unsigned char 
 13255 ;;  victimY         1    0[BANK0 ] unsigned char 
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;  victimX         1    2[BANK0 ] unsigned char 
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  1    wreg      unsigned char 
 13260 ;; Registers used:
 13261 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13267 ;;      Params:         0       1       0       0       0
 13268 ;;      Locals:         0       1       0       0       0
 13269 ;;      Temps:          0       1       0       0       0
 13270 ;;      Totals:         0       3       0       0       0
 13271 ;;Total ram usage:        3 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; Hardware stack levels required when called:    1
 13274 ;; This function calls:
 13275 ;;		Nothing
 13276 ;; This function is called by:
 13277 ;;		_lookForVictim
 13278 ;; This function uses a non-reentrant model
 13279 ;;
 13280                           psect	text1358
 13281                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
 13282                           	line	157
 13283                           	global	__size_of_getVictimZone
 13284  007F                     	__size_of_getVictimZone	equ	__end_of_getVictimZone-_getVictimZone
 13285                           	
 13286  0B68                     _getVictimZone:	
 13287                           	opt	stack 5
 13288                           ; Regs used in _getVictimZone: [wreg-fsr0h+status,2+status,0]
 13289                           ;getVictimZone@victimX stored from wreg
 13290  0B68  1283               	bcf	status, 5	;RP0=0, select bank0
 13291  0B69  1303               	bcf	status, 6	;RP1=0, select bank0
 13292  0B6A  00A2               	movwf	(getVictimZone@victimX)
 13293                           	line	163
 13294                           	
 13295  0B6B                     l10406:	
 13296                           ;map.c: 163: switch (victimX)
 13297  0B6B  2BD3               	goto	l10448
 13298                           	line	165
 13299                           ;map.c: 164: {
 13300                           ;map.c: 165: case 0:
 13301                           	
 13302  0B6C                     l2900:	
 13303                           	line	166
 13304                           ;map.c: 166: switch (victimY)
 13305  0B6C  2B79               	goto	l10414
 13306                           	line	168
 13307                           ;map.c: 167: {
 13308                           ;map.c: 168: case 0:
 13309                           	
 13310  0B6D                     l2902:	
 13311                           	line	169
 13312                           	
 13313  0B6D                     l10408:	
 13314                           ;map.c: 169: vicZone = 4;
 13315  0B6D  3004               	movlw	(04h)
 13316  0B6E  00A1               	movwf	(??_getVictimZone+0)+0
 13317  0B6F  0821               	movf	(??_getVictimZone+0)+0,w
 13318  0B70  00E0               	movwf	(_vicZone)
 13319                           	line	170
 13320                           ;map.c: 170: break;
 13321  0B71  2BE4               	goto	l10450
 13322                           	line	171
 13323                           ;map.c: 171: case 1:
 13324                           	
 13325  0B72                     l2904:	
 13326                           	line	172
 13327                           	
 13328  0B72                     l10410:	
 13329                           ;map.c: 172: vicZone = 4;
 13330  0B72  3004               	movlw	(04h)
 13331  0B73  00A1               	movwf	(??_getVictimZone+0)+0
 13332  0B74  0821               	movf	(??_getVictimZone+0)+0,w
 13333  0B75  00E0               	movwf	(_vicZone)
 13334                           	line	173
 13335                           ;map.c: 173: break;
 13336  0B76  2BE4               	goto	l10450
 13337                           	line	178
 13338                           ;map.c: 178: default:
 13339                           	
 13340  0B77                     l2905:	
 13341                           	line	179
 13342                           ;map.c: 179: break;
 13343  0B77  2BE4               	goto	l10450
 13344                           	line	180
 13345                           	
 13346  0B78                     l10412:	
 13347                           ;map.c: 180: }
 13348  0B78  2BE4               	goto	l10450
 13349                           	line	166
 13350                           	
 13351  0B79                     l2901:	
 13352                           	
 13353  0B79                     l10414:	
 13354  0B79  0820               	movf	(getVictimZone@victimY),w
 13355                           	; Switch size 1, requested type "space"
 13356                           ; Number of cases is 2, Range of values is 0 to 1
 13357                           ; switch strategies available:
 13358                           ; Name         Instructions Cycles
 13359                           ; simple_byte            7     4 (average)
 13360                           ; direct_byte           14     8 (fixed)
 13361                           ; jumptable            260     6 (fixed)
 13362                           ; rangetable             6     6 (fixed)
 13363                           ; spacedrange           10     9 (fixed)
 13364                           ; locatedrange           2     3 (fixed)
 13365                           ;	Chosen strategy is simple_byte
 13366                           
 13367                           	opt asmopt_off
 13368  0B7A  3A00               	xorlw	0^0	; case 0
 13369  0B7B  1903               	skipnz
 13370  0B7C  2B6D               	goto	l10408
 13371  0B7D  3A01               	xorlw	1^0	; case 1
 13372  0B7E  1903               	skipnz
 13373  0B7F  2B72               	goto	l10410
 13374  0B80  2BE4               	goto	l10450
 13375                           	opt asmopt_on
 13376                           
 13377                           	line	180
 13378                           	
 13379  0B81                     l2903:	
 13380                           	line	181
 13381                           ;map.c: 181: break;
 13382  0B81  2BE4               	goto	l10450
 13383                           	line	183
 13384                           ;map.c: 183: case 1:
 13385                           	
 13386  0B82                     l2907:	
 13387                           	line	184
 13388                           ;map.c: 184: switch (victimY)
 13389  0B82  2B8F               	goto	l10422
 13390                           	line	186
 13391                           ;map.c: 185: {
 13392                           ;map.c: 186: case 0:
 13393                           	
 13394  0B83                     l2909:	
 13395                           	line	187
 13396                           	
 13397  0B83                     l10416:	
 13398                           ;map.c: 187: vicZone = 4;
 13399  0B83  3004               	movlw	(04h)
 13400  0B84  00A1               	movwf	(??_getVictimZone+0)+0
 13401  0B85  0821               	movf	(??_getVictimZone+0)+0,w
 13402  0B86  00E0               	movwf	(_vicZone)
 13403                           	line	188
 13404                           ;map.c: 188: break;
 13405  0B87  2BE4               	goto	l10450
 13406                           	line	189
 13407                           ;map.c: 189: case 1:
 13408                           	
 13409  0B88                     l2911:	
 13410                           	line	190
 13411                           	
 13412  0B88                     l10418:	
 13413                           ;map.c: 190: vicZone = 4;
 13414  0B88  3004               	movlw	(04h)
 13415  0B89  00A1               	movwf	(??_getVictimZone+0)+0
 13416  0B8A  0821               	movf	(??_getVictimZone+0)+0,w
 13417  0B8B  00E0               	movwf	(_vicZone)
 13418                           	line	191
 13419                           ;map.c: 191: break;
 13420  0B8C  2BE4               	goto	l10450
 13421                           	line	196
 13422                           ;map.c: 196: default:
 13423                           	
 13424  0B8D                     l2912:	
 13425                           	line	197
 13426                           ;map.c: 197: break;
 13427  0B8D  2BE4               	goto	l10450
 13428                           	line	198
 13429                           	
 13430  0B8E                     l10420:	
 13431                           ;map.c: 198: }
 13432  0B8E  2BE4               	goto	l10450
 13433                           	line	184
 13434                           	
 13435  0B8F                     l2908:	
 13436                           	
 13437  0B8F                     l10422:	
 13438  0B8F  0820               	movf	(getVictimZone@victimY),w
 13439                           	; Switch size 1, requested type "space"
 13440                           ; Number of cases is 2, Range of values is 0 to 1
 13441                           ; switch strategies available:
 13442                           ; Name         Instructions Cycles
 13443                           ; simple_byte            7     4 (average)
 13444                           ; direct_byte           14     8 (fixed)
 13445                           ; jumptable            260     6 (fixed)
 13446                           ; rangetable             6     6 (fixed)
 13447                           ; spacedrange           10     9 (fixed)
 13448                           ; locatedrange           2     3 (fixed)
 13449                           ;	Chosen strategy is simple_byte
 13450                           
 13451                           	opt asmopt_off
 13452  0B90  3A00               	xorlw	0^0	; case 0
 13453  0B91  1903               	skipnz
 13454  0B92  2B83               	goto	l10416
 13455  0B93  3A01               	xorlw	1^0	; case 1
 13456  0B94  1903               	skipnz
 13457  0B95  2B88               	goto	l10418
 13458  0B96  2BE4               	goto	l10450
 13459                           	opt asmopt_on
 13460                           
 13461                           	line	198
 13462                           	
 13463  0B97                     l2910:	
 13464                           	line	199
 13465                           ;map.c: 199: break;
 13466  0B97  2BE4               	goto	l10450
 13467                           	line	201
 13468                           ;map.c: 201: case 2:
 13469                           	
 13470  0B98                     l2913:	
 13471                           	line	202
 13472                           ;map.c: 202: switch (victimY)
 13473  0B98  2BA4               	goto	l10430
 13474                           	line	206
 13475                           ;map.c: 203: {
 13476                           ;map.c: 206: case 1:
 13477                           	
 13478  0B99                     l2915:	
 13479                           	line	207
 13480                           	
 13481  0B99                     l10424:	
 13482                           ;map.c: 207: vicZone = 3;
 13483  0B99  3003               	movlw	(03h)
 13484  0B9A  00A1               	movwf	(??_getVictimZone+0)+0
 13485  0B9B  0821               	movf	(??_getVictimZone+0)+0,w
 13486  0B9C  00E0               	movwf	(_vicZone)
 13487                           	line	208
 13488                           ;map.c: 208: break;
 13489  0B9D  2BE4               	goto	l10450
 13490                           	line	211
 13491                           ;map.c: 211: case 3:
 13492                           	
 13493  0B9E                     l2917:	
 13494                           	line	212
 13495                           	
 13496  0B9E                     l10426:	
 13497                           ;map.c: 212: vicZone = 1;
 13498  0B9E  01E0               	clrf	(_vicZone)
 13499  0B9F  1403               	bsf	status,0
 13500  0BA0  0DE0               	rlf	(_vicZone),f
 13501                           	line	213
 13502                           ;map.c: 213: break;
 13503  0BA1  2BE4               	goto	l10450
 13504                           	line	214
 13505                           ;map.c: 214: default:
 13506                           	
 13507  0BA2                     l2918:	
 13508                           	line	215
 13509                           ;map.c: 215: break;
 13510  0BA2  2BE4               	goto	l10450
 13511                           	line	216
 13512                           	
 13513  0BA3                     l10428:	
 13514                           ;map.c: 216: }
 13515  0BA3  2BE4               	goto	l10450
 13516                           	line	202
 13517                           	
 13518  0BA4                     l2914:	
 13519                           	
 13520  0BA4                     l10430:	
 13521  0BA4  0820               	movf	(getVictimZone@victimY),w
 13522                           	; Switch size 1, requested type "space"
 13523                           ; Number of cases is 2, Range of values is 1 to 3
 13524                           ; switch strategies available:
 13525                           ; Name         Instructions Cycles
 13526                           ; simple_byte            7     4 (average)
 13527                           ; direct_byte           20    11 (fixed)
 13528                           ; jumptable            263     9 (fixed)
 13529                           ;	Chosen strategy is simple_byte
 13530                           
 13531                           	opt asmopt_off
 13532  0BA5  3A01               	xorlw	1^0	; case 1
 13533  0BA6  1903               	skipnz
 13534  0BA7  2B99               	goto	l10424
 13535  0BA8  3A02               	xorlw	3^1	; case 3
 13536  0BA9  1903               	skipnz
 13537  0BAA  2B9E               	goto	l10426
 13538  0BAB  2BE4               	goto	l10450
 13539                           	opt asmopt_on
 13540                           
 13541                           	line	216
 13542                           	
 13543  0BAC                     l2916:	
 13544                           	line	217
 13545                           ;map.c: 217: break;
 13546  0BAC  2BE4               	goto	l10450
 13547                           	line	219
 13548                           ;map.c: 219: case 3:
 13549                           	
 13550  0BAD                     l2919:	
 13551                           	line	220
 13552                           ;map.c: 220: switch (victimY)
 13553  0BAD  2BBA               	goto	l10438
 13554                           	line	224
 13555                           ;map.c: 221: {
 13556                           ;map.c: 224: case 1:
 13557                           	
 13558  0BAE                     l2921:	
 13559                           	line	225
 13560                           	
 13561  0BAE                     l10432:	
 13562                           ;map.c: 225: vicZone = 3;
 13563  0BAE  3003               	movlw	(03h)
 13564  0BAF  00A1               	movwf	(??_getVictimZone+0)+0
 13565  0BB0  0821               	movf	(??_getVictimZone+0)+0,w
 13566  0BB1  00E0               	movwf	(_vicZone)
 13567                           	line	226
 13568                           ;map.c: 226: break;
 13569  0BB2  2BE4               	goto	l10450
 13570                           	line	229
 13571                           ;map.c: 229: case 3:
 13572                           	
 13573  0BB3                     l2923:	
 13574                           	line	230
 13575                           	
 13576  0BB3                     l10434:	
 13577                           ;map.c: 230: vicZone = 2;
 13578  0BB3  3002               	movlw	(02h)
 13579  0BB4  00A1               	movwf	(??_getVictimZone+0)+0
 13580  0BB5  0821               	movf	(??_getVictimZone+0)+0,w
 13581  0BB6  00E0               	movwf	(_vicZone)
 13582                           	line	231
 13583                           ;map.c: 231: break;
 13584  0BB7  2BE4               	goto	l10450
 13585                           	line	232
 13586                           ;map.c: 232: default:
 13587                           	
 13588  0BB8                     l2924:	
 13589                           	line	233
 13590                           ;map.c: 233: break;
 13591  0BB8  2BE4               	goto	l10450
 13592                           	line	234
 13593                           	
 13594  0BB9                     l10436:	
 13595                           ;map.c: 234: }
 13596  0BB9  2BE4               	goto	l10450
 13597                           	line	220
 13598                           	
 13599  0BBA                     l2920:	
 13600                           	
 13601  0BBA                     l10438:	
 13602  0BBA  0820               	movf	(getVictimZone@victimY),w
 13603                           	; Switch size 1, requested type "space"
 13604                           ; Number of cases is 2, Range of values is 1 to 3
 13605                           ; switch strategies available:
 13606                           ; Name         Instructions Cycles
 13607                           ; simple_byte            7     4 (average)
 13608                           ; direct_byte           20    11 (fixed)
 13609                           ; jumptable            263     9 (fixed)
 13610                           ;	Chosen strategy is simple_byte
 13611                           
 13612                           	opt asmopt_off
 13613  0BBB  3A01               	xorlw	1^0	; case 1
 13614  0BBC  1903               	skipnz
 13615  0BBD  2BAE               	goto	l10432
 13616  0BBE  3A02               	xorlw	3^1	; case 3
 13617  0BBF  1903               	skipnz
 13618  0BC0  2BB3               	goto	l10434
 13619  0BC1  2BE4               	goto	l10450
 13620                           	opt asmopt_on
 13621                           
 13622                           	line	234
 13623                           	
 13624  0BC2                     l2922:	
 13625                           	line	235
 13626                           ;map.c: 235: break;
 13627  0BC2  2BE4               	goto	l10450
 13628                           	line	237
 13629                           ;map.c: 237: case 4:
 13630                           	
 13631  0BC3                     l2925:	
 13632                           	line	238
 13633                           ;map.c: 238: switch (victimY)
 13634  0BC3  2BCB               	goto	l10444
 13635                           	line	246
 13636                           ;map.c: 239: {
 13637                           ;map.c: 246: case 3:
 13638                           	
 13639  0BC4                     l2927:	
 13640                           	line	247
 13641                           	
 13642  0BC4                     l10440:	
 13643                           ;map.c: 247: vicZone = 2;
 13644  0BC4  3002               	movlw	(02h)
 13645  0BC5  00A1               	movwf	(??_getVictimZone+0)+0
 13646  0BC6  0821               	movf	(??_getVictimZone+0)+0,w
 13647  0BC7  00E0               	movwf	(_vicZone)
 13648                           	line	248
 13649                           ;map.c: 248: break;
 13650  0BC8  2BE4               	goto	l10450
 13651                           	line	249
 13652                           ;map.c: 249: default:
 13653                           	
 13654  0BC9                     l2929:	
 13655                           	line	250
 13656                           ;map.c: 250: break;
 13657  0BC9  2BE4               	goto	l10450
 13658                           	line	251
 13659                           	
 13660  0BCA                     l10442:	
 13661                           ;map.c: 251: }
 13662  0BCA  2BE4               	goto	l10450
 13663                           	line	238
 13664                           	
 13665  0BCB                     l2926:	
 13666                           	
 13667  0BCB                     l10444:	
 13668  0BCB  0820               	movf	(getVictimZone@victimY),w
 13669                           	; Switch size 1, requested type "space"
 13670                           ; Number of cases is 1, Range of values is 3 to 3
 13671                           ; switch strategies available:
 13672                           ; Name         Instructions Cycles
 13673                           ; simple_byte            4     3 (average)
 13674                           ; direct_byte           14    11 (fixed)
 13675                           ; jumptable            263     9 (fixed)
 13676                           ;	Chosen strategy is simple_byte
 13677                           
 13678                           	opt asmopt_off
 13679  0BCC  3A03               	xorlw	3^0	; case 3
 13680  0BCD  1903               	skipnz
 13681  0BCE  2BC4               	goto	l10440
 13682  0BCF  2BE4               	goto	l10450
 13683                           	opt asmopt_on
 13684                           
 13685                           	line	251
 13686                           	
 13687  0BD0                     l2928:	
 13688                           	line	252
 13689                           ;map.c: 252: break;
 13690  0BD0  2BE4               	goto	l10450
 13691                           	line	254
 13692                           ;map.c: 254: default:
 13693                           	
 13694  0BD1                     l2930:	
 13695                           	line	255
 13696                           ;map.c: 255: break;
 13697  0BD1  2BE4               	goto	l10450
 13698                           	line	256
 13699                           	
 13700  0BD2                     l10446:	
 13701                           ;map.c: 256: }
 13702  0BD2  2BE4               	goto	l10450
 13703                           	line	163
 13704                           	
 13705  0BD3                     l2899:	
 13706                           	
 13707  0BD3                     l10448:	
 13708  0BD3  0822               	movf	(getVictimZone@victimX),w
 13709                           	; Switch size 1, requested type "space"
 13710                           ; Number of cases is 5, Range of values is 0 to 4
 13711                           ; switch strategies available:
 13712                           ; Name         Instructions Cycles
 13713                           ; simple_byte           16     9 (average)
 13714                           ; direct_byte           23     8 (fixed)
 13715                           ; jumptable            260     6 (fixed)
 13716                           ; rangetable             9     6 (fixed)
 13717                           ; spacedrange           16     9 (fixed)
 13718                           ; locatedrange           5     3 (fixed)
 13719                           ;	Chosen strategy is simple_byte
 13720                           
 13721                           	opt asmopt_off
 13722  0BD4  3A00               	xorlw	0^0	; case 0
 13723  0BD5  1903               	skipnz
 13724  0BD6  2B79               	goto	l10414
 13725  0BD7  3A01               	xorlw	1^0	; case 1
 13726  0BD8  1903               	skipnz
 13727  0BD9  2B8F               	goto	l10422
 13728  0BDA  3A03               	xorlw	2^1	; case 2
 13729  0BDB  1903               	skipnz
 13730  0BDC  2BA4               	goto	l10430
 13731  0BDD  3A01               	xorlw	3^2	; case 3
 13732  0BDE  1903               	skipnz
 13733  0BDF  2BBA               	goto	l10438
 13734  0BE0  3A07               	xorlw	4^3	; case 4
 13735  0BE1  1903               	skipnz
 13736  0BE2  2BCB               	goto	l10444
 13737  0BE3  2BE4               	goto	l10450
 13738                           	opt asmopt_on
 13739                           
 13740                           	line	256
 13741                           	
 13742  0BE4                     l2906:	
 13743                           	line	258
 13744                           	
 13745  0BE4                     l10450:	
 13746                           ;map.c: 258: return vicZone;
 13747  0BE4  0860               	movf	(_vicZone),w
 13748  0BE5  2BE6               	goto	l2931
 13749                           	
 13750  0BE6                     l10452:	
 13751                           	line	259
 13752                           	
 13753  0BE6                     l2931:	
 13754  0BE6  0008               	return
 13755                           	opt stack 0
 13756                           GLOBAL	__end_of_getVictimZone
 13757  0BE7                     	__end_of_getVictimZone:
 13758 ;; =============== function _getVictimZone ends ============
 13759                           
 13760                           	signat	_getVictimZone,8313
 13761                           	global	_getFinalY
 13762                           psect	text1359,local,class=CODE,delta=2
 13763                           global __ptext1359
 13764  11BF                     __ptext1359:
 13765                           
 13766 ;; *************** function _getFinalY *****************
 13767 ;; Defined at:
 13768 ;;		line 152 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
 13769 ;; Parameters:    Size  Location     Type
 13770 ;;		None
 13771 ;; Auto vars:     Size  Location     Type
 13772 ;;		None
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  1    wreg      unsigned char 
 13775 ;; Registers used:
 13776 ;;		wreg
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13782 ;;      Params:         0       0       0       0       0
 13783 ;;      Locals:         0       0       0       0       0
 13784 ;;      Temps:          0       0       0       0       0
 13785 ;;      Totals:         0       0       0       0       0
 13786 ;;Total ram usage:        0 bytes
 13787 ;; Hardware stack levels used:    1
 13788 ;; Hardware stack levels required when called:    1
 13789 ;; This function calls:
 13790 ;;		Nothing
 13791 ;; This function is called by:
 13792 ;;		_checkForFinalDestination
 13793 ;; This function uses a non-reentrant model
 13794 ;;
 13795                           psect	text1359
 13796                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
 13797                           	line	152
 13798                           	global	__size_of_getFinalY
 13799  0005                     	__size_of_getFinalY	equ	__end_of_getFinalY-_getFinalY
 13800                           	
 13801  11BF                     _getFinalY:	
 13802                           	opt	stack 5
 13803                           ; Regs used in _getFinalY: [wreg]
 13804                           	line	153
 13805                           	
 13806  11BF                     l10402:	
 13807                           ;map.c: 153: return finalY;
 13808  11BF  1283               	bcf	status, 5	;RP0=0, select bank0
 13809  11C0  1303               	bcf	status, 6	;RP1=0, select bank0
 13810  11C1  0864               	movf	(_finalY),w
 13811  11C2  29C3               	goto	l2896
 13812                           	
 13813  11C3                     l10404:	
 13814                           	line	154
 13815                           	
 13816  11C3                     l2896:	
 13817  11C3  0008               	return
 13818                           	opt stack 0
 13819                           GLOBAL	__end_of_getFinalY
 13820  11C4                     	__end_of_getFinalY:
 13821 ;; =============== function _getFinalY ends ============
 13822                           
 13823                           	signat	_getFinalY,89
 13824                           	global	_getFinalX
 13825                           psect	text1360,local,class=CODE,delta=2
 13826                           global __ptext1360
 13827  11BA                     __ptext1360:
 13828                           
 13829 ;; *************** function _getFinalX *****************
 13830 ;; Defined at:
 13831 ;;		line 147 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
 13832 ;; Parameters:    Size  Location     Type
 13833 ;;		None
 13834 ;; Auto vars:     Size  Location     Type
 13835 ;;		None
 13836 ;; Return value:  Size  Location     Type
 13837 ;;                  1    wreg      unsigned char 
 13838 ;; Registers used:
 13839 ;;		wreg
 13840 ;; Tracked objects:
 13841 ;;		On entry : 0/0
 13842 ;;		On exit  : 0/0
 13843 ;;		Unchanged: 0/0
 13844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13845 ;;      Params:         0       0       0       0       0
 13846 ;;      Locals:         0       0       0       0       0
 13847 ;;      Temps:          0       0       0       0       0
 13848 ;;      Totals:         0       0       0       0       0
 13849 ;;Total ram usage:        0 bytes
 13850 ;; Hardware stack levels used:    1
 13851 ;; Hardware stack levels required when called:    1
 13852 ;; This function calls:
 13853 ;;		Nothing
 13854 ;; This function is called by:
 13855 ;;		_checkForFinalDestination
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           psect	text1360
 13859                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\map.c"
 13860                           	line	147
 13861                           	global	__size_of_getFinalX
 13862  0005                     	__size_of_getFinalX	equ	__end_of_getFinalX-_getFinalX
 13863                           	
 13864  11BA                     _getFinalX:	
 13865                           	opt	stack 5
 13866                           ; Regs used in _getFinalX: [wreg]
 13867                           	line	148
 13868                           	
 13869  11BA                     l10398:	
 13870                           ;map.c: 148: return finalX;
 13871  11BA  1283               	bcf	status, 5	;RP0=0, select bank0
 13872  11BB  1303               	bcf	status, 6	;RP1=0, select bank0
 13873  11BC  0863               	movf	(_finalX),w
 13874  11BD  29BE               	goto	l2893
 13875                           	
 13876  11BE                     l10400:	
 13877                           	line	149
 13878                           	
 13879  11BE                     l2893:	
 13880  11BE  0008               	return
 13881                           	opt stack 0
 13882                           GLOBAL	__end_of_getFinalX
 13883  11BF                     	__end_of_getFinalX:
 13884 ;; =============== function _getFinalX ends ============
 13885                           
 13886                           	signat	_getFinalX,89
 13887                           	global	_ser_putch
 13888                           psect	text1361,local,class=CODE,delta=2
 13889                           global __ptext1361
 13890  1331                     __ptext1361:
 13891                           
 13892 ;; *************** function _ser_putch *****************
 13893 ;; Defined at:
 13894 ;;		line 81 in file "C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  c               1    wreg     unsigned char 
 13897 ;; Auto vars:     Size  Location     Type
 13898 ;;  c               1    1[BANK0 ] unsigned char 
 13899 ;; Return value:  Size  Location     Type
 13900 ;;		None               void
 13901 ;; Registers used:
 13902 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13903 ;; Tracked objects:
 13904 ;;		On entry : 0/0
 13905 ;;		On exit  : 0/0
 13906 ;;		Unchanged: 0/0
 13907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13908 ;;      Params:         0       0       0       0       0
 13909 ;;      Locals:         0       1       0       0       0
 13910 ;;      Temps:          0       1       0       0       0
 13911 ;;      Totals:         0       2       0       0       0
 13912 ;;Total ram usage:        2 bytes
 13913 ;; Hardware stack levels used:    1
 13914 ;; Hardware stack levels required when called:    1
 13915 ;; This function calls:
 13916 ;;		Nothing
 13917 ;; This function is called by:
 13918 ;;		_EEPROMToSerial
 13919 ;;		_ser_putArr
 13920 ;;		_play_iCreate_song
 13921 ;;		_drive
 13922 ;;		_driveForDistance
 13923 ;;		_waitFor
 13924 ;;		_initIRobot
 13925 ;;		_lookForVictim
 13926 ;;		_ser_puts
 13927 ;;		_ser_puts2
 13928 ;;		_ser_puthex
 13929 ;; This function uses a non-reentrant model
 13930 ;;
 13931                           psect	text1361
 13932                           	file	"C:\Documents and Settings\Administrator\Desktop\30 MAY WORKING FILE\ser.c"
 13933                           	line	81
 13934                           	global	__size_of_ser_putch
 13935  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 13936                           	
 13937  1331                     _ser_putch:	
 13938                           	opt	stack 4
 13939                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 13940                           ;ser_putch@c stored from wreg
 13941  1331  1283               	bcf	status, 5	;RP0=0, select bank0
 13942  1332  1303               	bcf	status, 6	;RP1=0, select bank0
 13943  1333  00A1               	movwf	(ser_putch@c)
 13944                           	line	82
 13945                           	
 13946  1334                     l10370:	
 13947                           ;ser.c: 82: while (((txiptr+1) & (16-1))==txoptr)
 13948  1334  2B36               	goto	l10372
 13949                           	
 13950  1335                     l3649:	
 13951                           	line	83
 13952                           ;ser.c: 83: continue;
 13953  1335  2B36               	goto	l10372
 13954                           	
 13955  1336                     l3648:	
 13956                           	line	82
 13957                           	
 13958  1336                     l10372:	
 13959  1336  087D               	movf	(_txiptr),w	;volatile
 13960  1337  3E01               	addlw	01h
 13961  1338  390F               	andlw	0Fh
 13962  1339  065F               	xorwf	(_txoptr),w	;volatile
 13963  133A  1903               	skipnz
 13964  133B  2B3D               	goto	u3731
 13965  133C  2B3E               	goto	u3730
 13966  133D                     u3731:
 13967  133D  2B36               	goto	l10372
 13968  133E                     u3730:
 13969                           	
 13970  133E                     l3650:	
 13971                           	line	84
 13972                           ;ser.c: 84: GIE=0;
 13973  133E  138B               	bcf	(95/8),(95)&7
 13974                           	line	85
 13975                           	
 13976  133F                     l10374:	
 13977                           ;ser.c: 85: txfifo[txiptr] = c;
 13978  133F  0821               	movf	(ser_putch@c),w
 13979  1340  00A0               	movwf	(??_ser_putch+0)+0
 13980  1341  087D               	movf	(_txiptr),w
 13981  1342  3EB0               	addlw	_txfifo&0ffh
 13982  1343  0084               	movwf	fsr0
 13983  1344  0820               	movf	(??_ser_putch+0)+0,w
 13984  1345  1383               	bcf	status, 7	;select IRP bank1
 13985  1346  0080               	movwf	indf
 13986                           	line	86
 13987                           	
 13988  1347                     l10376:	
 13989                           ;ser.c: 86: txiptr=(txiptr+1) & (16-1);
 13990  1347  087D               	movf	(_txiptr),w	;volatile
 13991  1348  3E01               	addlw	01h
 13992  1349  390F               	andlw	0Fh
 13993  134A  00A0               	movwf	(??_ser_putch+0)+0
 13994  134B  0820               	movf	(??_ser_putch+0)+0,w
 13995  134C  00FD               	movwf	(_txiptr)	;volatile
 13996                           	line	87
 13997                           	
 13998  134D                     l10378:	
 13999                           ;ser.c: 87: TXIE=1;
 14000  134D  1683               	bsf	status, 5	;RP0=1, select bank1
 14001  134E  1303               	bcf	status, 6	;RP1=0, select bank1
 14002  134F  160C               	bsf	(1124/8)^080h,(1124)&7
 14003                           	line	88
 14004                           	
 14005  1350                     l10380:	
 14006                           ;ser.c: 88: GIE=1;
 14007  1350  178B               	bsf	(95/8),(95)&7
 14008                           	line	89
 14009                           	
 14010  1351                     l3651:	
 14011  1351  0008               	return
 14012                           	opt stack 0
 14013                           GLOBAL	__end_of_ser_putch
 14014  1352                     	__end_of_ser_putch:
 14015 ;; =============== function _ser_putch ends ============
 14016                           
 14017                           	signat	_ser_putch,4216
 14018                           	global	_initEEPROMMode
 14019                           psect	text1362,local,class=CODE,delta=2
 14020                           global __ptext1362
 14021  11D3                     __ptext1362:
 14022                           
 14023 ;; *************** function _initEEPROMMode *****************
 14024 ;; Defined at:
 14025 ;;		line 21 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;		None
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;		None
 14030 ;; Return value:  Size  Location     Type
 14031 ;;		None               void
 14032 ;; Registers used:
 14033 ;;		wreg, status,2, status,0
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14039 ;;      Params:         0       0       0       0       0
 14040 ;;      Locals:         0       0       0       0       0
 14041 ;;      Temps:          0       1       0       0       0
 14042 ;;      Totals:         0       1       0       0       0
 14043 ;;Total ram usage:        1 bytes
 14044 ;; Hardware stack levels used:    1
 14045 ;; Hardware stack levels required when called:    1
 14046 ;; This function calls:
 14047 ;;		Nothing
 14048 ;; This function is called by:
 14049 ;;		_writeEEPROM
 14050 ;;		_readEEPROM
 14051 ;; This function uses a non-reentrant model
 14052 ;;
 14053                           psect	text1362
 14054                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 14055                           	line	21
 14056                           	global	__size_of_initEEPROMMode
 14057  0008                     	__size_of_initEEPROMMode	equ	__end_of_initEEPROMMode-_initEEPROMMode
 14058                           	
 14059  11D3                     _initEEPROMMode:	
 14060                           	opt	stack 3
 14061                           ; Regs used in _initEEPROMMode: [wreg+status,2+status,0]
 14062                           	line	22
 14063                           	
 14064  11D3                     l10348:	
 14065                           ;eeprom.c: 22: PORTC &= 0b11111100;
 14066  11D3  30FC               	movlw	(0FCh)
 14067  11D4  1283               	bcf	status, 5	;RP0=0, select bank0
 14068  11D5  1303               	bcf	status, 6	;RP1=0, select bank0
 14069  11D6  00A0               	movwf	(??_initEEPROMMode+0)+0
 14070  11D7  0820               	movf	(??_initEEPROMMode+0)+0,w
 14071  11D8  0587               	andwf	(7),f	;volatile
 14072                           	line	23
 14073                           	
 14074  11D9                     l10350:	
 14075                           ;eeprom.c: 23: PORTC |= 0b00000010;
 14076  11D9  1487               	bsf	(7)+(1/8),(1)&7	;volatile
 14077                           	line	24
 14078                           	
 14079  11DA                     l1407:	
 14080  11DA  0008               	return
 14081                           	opt stack 0
 14082                           GLOBAL	__end_of_initEEPROMMode
 14083  11DB                     	__end_of_initEEPROMMode:
 14084 ;; =============== function _initEEPROMMode ends ============
 14085                           
 14086                           	signat	_initEEPROMMode,88
 14087                           	global	_writeSPIByte
 14088                           psect	text1363,local,class=CODE,delta=2
 14089                           global __ptext1363
 14090  120C                     __ptext1363:
 14091                           
 14092 ;; *************** function _writeSPIByte *****************
 14093 ;; Defined at:
 14094 ;;		line 14 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  data            1    wreg     unsigned char 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;  data            1    0[BANK0 ] unsigned char 
 14099 ;; Return value:  Size  Location     Type
 14100 ;;		None               void
 14101 ;; Registers used:
 14102 ;;		wreg
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/0
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14108 ;;      Params:         0       0       0       0       0
 14109 ;;      Locals:         0       1       0       0       0
 14110 ;;      Temps:          0       0       0       0       0
 14111 ;;      Totals:         0       1       0       0       0
 14112 ;;Total ram usage:        1 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:    1
 14115 ;; This function calls:
 14116 ;;		Nothing
 14117 ;; This function is called by:
 14118 ;;		_writeEEPROM
 14119 ;;		_readEEPROM
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           psect	text1363
 14123                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\eeprom.c"
 14124                           	line	14
 14125                           	global	__size_of_writeSPIByte
 14126  000D                     	__size_of_writeSPIByte	equ	__end_of_writeSPIByte-_writeSPIByte
 14127                           	
 14128  120C                     _writeSPIByte:	
 14129                           	opt	stack 3
 14130                           ; Regs used in _writeSPIByte: [wreg]
 14131                           ;writeSPIByte@data stored from wreg
 14132  120C  1283               	bcf	status, 5	;RP0=0, select bank0
 14133  120D  1303               	bcf	status, 6	;RP1=0, select bank0
 14134  120E  00A0               	movwf	(writeSPIByte@data)
 14135                           	line	15
 14136                           	
 14137  120F                     l10344:	
 14138                           ;eeprom.c: 15: SSPIF = 0;
 14139  120F  118C               	bcf	(99/8),(99)&7
 14140                           	line	16
 14141                           	
 14142  1210                     l10346:	
 14143                           ;eeprom.c: 16: SSPBUF = data;
 14144  1210  0820               	movf	(writeSPIByte@data),w
 14145  1211  0093               	movwf	(19)	;volatile
 14146                           	line	17
 14147                           ;eeprom.c: 17: while(!SSPIF);
 14148  1212  2A13               	goto	l1401
 14149                           	
 14150  1213                     l1402:	
 14151                           	
 14152  1213                     l1401:	
 14153  1213  1D8C               	btfss	(99/8),(99)&7
 14154  1214  2A16               	goto	u3701
 14155  1215  2A17               	goto	u3700
 14156  1216                     u3701:
 14157  1216  2A13               	goto	l1401
 14158  1217                     u3700:
 14159  1217  2A18               	goto	l1404
 14160                           	
 14161  1218                     l1403:	
 14162                           	line	18
 14163                           	
 14164  1218                     l1404:	
 14165  1218  0008               	return
 14166                           	opt stack 0
 14167                           GLOBAL	__end_of_writeSPIByte
 14168  1219                     	__end_of_writeSPIByte:
 14169 ;; =============== function _writeSPIByte ends ============
 14170                           
 14171                           	signat	_writeSPIByte,4216
 14172                           	global	_isr1
 14173                           psect	text1364,local,class=CODE,delta=2
 14174                           global __ptext1364
 14175  0EAA                     __ptext1364:
 14176                           
 14177 ;; *************** function _isr1 *****************
 14178 ;; Defined at:
 14179 ;;		line 70 in file "C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;		None
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;		None
 14184 ;; Return value:  Size  Location     Type
 14185 ;;		None               void
 14186 ;; Registers used:
 14187 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14193 ;;      Params:         0       0       0       0       0
 14194 ;;      Locals:         0       0       0       0       0
 14195 ;;      Temps:         10       0       0       0       0
 14196 ;;      Totals:        10       0       0       0       0
 14197 ;;Total ram usage:       10 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		Interrupt level 1
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           psect	text1364
 14206                           	file	"C:\Users\11014065\Desktop\30 MAY WORKING FILE\main.c"
 14207                           	line	70
 14208                           	global	__size_of_isr1
 14209  00A9                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 14210                           	
 14211  0EAA                     _isr1:	
 14212                           	opt	stack 1
 14213                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0]
 14214                           psect	intentry,class=CODE,delta=2
 14215                           global __pintentry
 14216  0004                     __pintentry:
 14217                           global interrupt_function
 14218  0004                     interrupt_function:
 14219                           	global saved_w
 14220  007E                     	saved_w	set	btemp+0
 14221  0004  00FE               	movwf	saved_w
 14222  0005  0E03               	swapf	status,w
 14223  0006  00F8               	movwf	(??_isr1+6)
 14224  0007  0804               	movf	fsr0,w
 14225  0008  00F9               	movwf	(??_isr1+7)
 14226  0009  080A               	movf	pclath,w
 14227  000A  00FA               	movwf	(??_isr1+8)
 14228  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 14229  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 14230  000D  087F               	movf	btemp+1,w
 14231  000E  00FB               	movwf	(??_isr1+9)
 14232  000F  120A  158A  2EAA   	ljmp	_isr1
 14233                           psect	text1364
 14234                           	line	72
 14235                           	
 14236  0EAA                     i1l10578:	
 14237                           ;main.c: 72: if(TMR0IF)
 14238  0EAA  1D0B               	btfss	(90/8),(90)&7
 14239  0EAB  2EAD               	goto	u388_21
 14240  0EAC  2EAE               	goto	u388_20
 14241  0EAD                     u388_21:
 14242  0EAD  2F47               	goto	i1l6741
 14243  0EAE                     u388_20:
 14244                           	line	74
 14245                           	
 14246  0EAE                     i1l10580:	
 14247                           ;main.c: 73: {
 14248                           ;main.c: 74: TMR0IF = 0;
 14249  0EAE  110B               	bcf	(90/8),(90)&7
 14250                           	line	75
 14251                           	
 14252  0EAF                     i1l10582:	
 14253                           ;main.c: 75: TMR0 = 100;
 14254  0EAF  3064               	movlw	(064h)
 14255  0EB0  0081               	movwf	(1)	;volatile
 14256                           	line	88
 14257                           	
 14258  0EB1                     i1l10584:	
 14259                           ;main.c: 88: if(!RB0)
 14260  0EB1  1806               	btfsc	(48/8),(48)&7
 14261  0EB2  2EB4               	goto	u389_21
 14262  0EB3  2EB5               	goto	u389_20
 14263  0EB4                     u389_21:
 14264  0EB4  2ED5               	goto	i1l6731
 14265  0EB5                     u389_20:
 14266                           	line	90
 14267                           	
 14268  0EB5                     i1l10586:	
 14269                           ;main.c: 89: {
 14270                           ;main.c: 90: start.debounceCount++;
 14271  0EB5  3001               	movlw	(01h)
 14272  0EB6  00F2               	movwf	(??_isr1+0)+0
 14273  0EB7  0872               	movf	(??_isr1+0)+0,w
 14274  0EB8  07D0               	addwf	0+(_start)+02h,f
 14275                           	line	91
 14276                           	
 14277  0EB9                     i1l10588:	
 14278                           ;main.c: 91: if(start.debounceCount >= 10 & start.released)
 14279  0EB9  084F               	movf	0+(_start)+01h,w
 14280  0EBA  00F2               	movwf	(??_isr1+0)+0
 14281  0EBB  01F3               	clrf	(??_isr1+0)+0+1
 14282  0EBC  300A               	movlw	(0Ah)
 14283  0EBD  0250               	subwf	0+(_start)+02h,w
 14284  0EBE  3000               	movlw	0
 14285  0EBF  1803               	skipnc
 14286  0EC0  3001               	movlw	1
 14287  0EC1  00F4               	movwf	(??_isr1+2)+0
 14288  0EC2  01F5               	clrf	(??_isr1+2)+0+1
 14289  0EC3  0872               	movf	0+(??_isr1+0)+0,w
 14290  0EC4  0574               	andwf	0+(??_isr1+2)+0,w
 14291  0EC5  00F6               	movwf	(??_isr1+4)+0
 14292  0EC6  0873               	movf	1+(??_isr1+0)+0,w
 14293  0EC7  0575               	andwf	1+(??_isr1+2)+0,w
 14294  0EC8  00F7               	movwf	1+(??_isr1+4)+0
 14295  0EC9  0877               	movf	1+(??_isr1+4)+0,w
 14296  0ECA  0476               	iorwf	0+(??_isr1+4)+0,w
 14297  0ECB  1903               	skipnz
 14298  0ECC  2ECE               	goto	u390_21
 14299  0ECD  2ECF               	goto	u390_20
 14300  0ECE                     u390_21:
 14301  0ECE  2EDA               	goto	i1l10596
 14302  0ECF                     u390_20:
 14303                           	line	93
 14304                           	
 14305  0ECF                     i1l10590:	
 14306                           ;main.c: 92: {
 14307                           ;main.c: 93: start.pressed = 1;
 14308  0ECF  01CE               	clrf	(_start)
 14309  0ED0  1403               	bsf	status,0
 14310  0ED1  0DCE               	rlf	(_start),f
 14311                           	line	94
 14312                           	
 14313  0ED2                     i1l10592:	
 14314                           ;main.c: 94: start.released = 0;
 14315  0ED2  01CF               	clrf	0+(_start)+01h
 14316  0ED3  2EDA               	goto	i1l10596
 14317                           	line	95
 14318                           	
 14319  0ED4                     i1l6732:	
 14320                           	line	96
 14321                           ;main.c: 95: }
 14322                           ;main.c: 96: }
 14323  0ED4  2EDA               	goto	i1l10596
 14324                           	line	97
 14325                           	
 14326  0ED5                     i1l6731:	
 14327                           	line	99
 14328                           ;main.c: 97: else
 14329                           ;main.c: 98: {
 14330                           ;main.c: 99: start.debounceCount = 0;
 14331  0ED5  01D0               	clrf	0+(_start)+02h
 14332                           	line	100
 14333                           	
 14334  0ED6                     i1l10594:	
 14335                           ;main.c: 100: start.released = 1;
 14336  0ED6  01CF               	clrf	0+(_start)+01h
 14337  0ED7  1403               	bsf	status,0
 14338  0ED8  0DCF               	rlf	0+(_start)+01h,f
 14339  0ED9  2EDA               	goto	i1l10596
 14340                           	line	101
 14341                           	
 14342  0EDA                     i1l6733:	
 14343                           	line	103
 14344                           	
 14345  0EDA                     i1l10596:	
 14346                           ;main.c: 101: }
 14347                           ;main.c: 103: if(!RB1)
 14348  0EDA  1886               	btfsc	(49/8),(49)&7
 14349  0EDB  2EDD               	goto	u391_21
 14350  0EDC  2EDE               	goto	u391_20
 14351  0EDD                     u391_21:
 14352  0EDD  2EFE               	goto	i1l6734
 14353  0EDE                     u391_20:
 14354                           	line	105
 14355                           	
 14356  0EDE                     i1l10598:	
 14357                           ;main.c: 104: {
 14358                           ;main.c: 105: eepromSerial.debounceCount++;
 14359  0EDE  3001               	movlw	(01h)
 14360  0EDF  00F2               	movwf	(??_isr1+0)+0
 14361  0EE0  0872               	movf	(??_isr1+0)+0,w
 14362  0EE1  07CD               	addwf	0+(_eepromSerial)+02h,f
 14363                           	line	106
 14364                           	
 14365  0EE2                     i1l10600:	
 14366                           ;main.c: 106: if(eepromSerial.debounceCount >= 10 & eepromSerial.released)
 14367  0EE2  084C               	movf	0+(_eepromSerial)+01h,w
 14368  0EE3  00F2               	movwf	(??_isr1+0)+0
 14369  0EE4  01F3               	clrf	(??_isr1+0)+0+1
 14370  0EE5  300A               	movlw	(0Ah)
 14371  0EE6  024D               	subwf	0+(_eepromSerial)+02h,w
 14372  0EE7  3000               	movlw	0
 14373  0EE8  1803               	skipnc
 14374  0EE9  3001               	movlw	1
 14375  0EEA  00F4               	movwf	(??_isr1+2)+0
 14376  0EEB  01F5               	clrf	(??_isr1+2)+0+1
 14377  0EEC  0872               	movf	0+(??_isr1+0)+0,w
 14378  0EED  0574               	andwf	0+(??_isr1+2)+0,w
 14379  0EEE  00F6               	movwf	(??_isr1+4)+0
 14380  0EEF  0873               	movf	1+(??_isr1+0)+0,w
 14381  0EF0  0575               	andwf	1+(??_isr1+2)+0,w
 14382  0EF1  00F7               	movwf	1+(??_isr1+4)+0
 14383  0EF2  0877               	movf	1+(??_isr1+4)+0,w
 14384  0EF3  0476               	iorwf	0+(??_isr1+4)+0,w
 14385  0EF4  1903               	skipnz
 14386  0EF5  2EF7               	goto	u392_21
 14387  0EF6  2EF8               	goto	u392_20
 14388  0EF7                     u392_21:
 14389  0EF7  2F03               	goto	i1l10608
 14390  0EF8                     u392_20:
 14391                           	line	108
 14392                           	
 14393  0EF8                     i1l10602:	
 14394                           ;main.c: 107: {
 14395                           ;main.c: 108: eepromSerial.pressed = 1;
 14396  0EF8  01CB               	clrf	(_eepromSerial)
 14397  0EF9  1403               	bsf	status,0
 14398  0EFA  0DCB               	rlf	(_eepromSerial),f
 14399                           	line	109
 14400                           	
 14401  0EFB                     i1l10604:	
 14402                           ;main.c: 109: eepromSerial.released = 0;
 14403  0EFB  01CC               	clrf	0+(_eepromSerial)+01h
 14404  0EFC  2F03               	goto	i1l10608
 14405                           	line	110
 14406                           	
 14407  0EFD                     i1l6735:	
 14408                           	line	111
 14409                           ;main.c: 110: }
 14410                           ;main.c: 111: }
 14411  0EFD  2F03               	goto	i1l10608
 14412                           	line	112
 14413                           	
 14414  0EFE                     i1l6734:	
 14415                           	line	114
 14416                           ;main.c: 112: else
 14417                           ;main.c: 113: {
 14418                           ;main.c: 114: eepromSerial.debounceCount = 0;
 14419  0EFE  01CD               	clrf	0+(_eepromSerial)+02h
 14420                           	line	115
 14421                           	
 14422  0EFF                     i1l10606:	
 14423                           ;main.c: 115: eepromSerial.released = 1;
 14424  0EFF  01CC               	clrf	0+(_eepromSerial)+01h
 14425  0F00  1403               	bsf	status,0
 14426  0F01  0DCC               	rlf	0+(_eepromSerial)+01h,f
 14427  0F02  2F03               	goto	i1l10608
 14428                           	line	116
 14429                           	
 14430  0F03                     i1l6736:	
 14431                           	line	117
 14432                           	
 14433  0F03                     i1l10608:	
 14434                           ;main.c: 116: }
 14435                           ;main.c: 117: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 14436  0F03  1E8C               	btfss	(101/8),(101)&7
 14437  0F04  2F06               	goto	u393_21
 14438  0F05  2F07               	goto	u393_20
 14439  0F06                     u393_21:
 14440  0F06  2F21               	goto	i1l10618
 14441  0F07                     u393_20:
 14442                           	
 14443  0F07                     i1l10610:	
 14444  0F07  081A               	movf	(26),w	;volatile
 14445  0F08  00F2               	movwf	(??_isr1+0)+0
 14446  0F09  087C               	movf	(_rxiptr),w
 14447  0F0A  3EA0               	addlw	_rxfifo&0ffh
 14448  0F0B  0084               	movwf	fsr0
 14449  0F0C  0872               	movf	(??_isr1+0)+0,w
 14450  0F0D  1383               	bcf	status, 7	;select IRP bank1
 14451  0F0E  0080               	movwf	indf
 14452                           	
 14453  0F0F                     i1l10612:	
 14454  0F0F  087C               	movf	(_rxiptr),w	;volatile
 14455  0F10  3E01               	addlw	01h
 14456  0F11  390F               	andlw	0Fh
 14457  0F12  00F2               	movwf	(??_isr1+0)+0
 14458  0F13  0872               	movf	(??_isr1+0)+0,w
 14459  0F14  00DC               	movwf	(_ser_tmp)
 14460                           	
 14461  0F15                     i1l10614:	
 14462  0F15  085C               	movf	(_ser_tmp),w
 14463  0F16  065B               	xorwf	(_rxoptr),w	;volatile
 14464  0F17  1903               	skipnz
 14465  0F18  2F1A               	goto	u394_21
 14466  0F19  2F1B               	goto	u394_20
 14467  0F1A                     u394_21:
 14468  0F1A  2F21               	goto	i1l10618
 14469  0F1B                     u394_20:
 14470                           	
 14471  0F1B                     i1l10616:	
 14472  0F1B  085C               	movf	(_ser_tmp),w
 14473  0F1C  00F2               	movwf	(??_isr1+0)+0
 14474  0F1D  0872               	movf	(??_isr1+0)+0,w
 14475  0F1E  00FC               	movwf	(_rxiptr)	;volatile
 14476  0F1F  2F21               	goto	i1l10618
 14477                           	
 14478  0F20                     i1l6738:	
 14479  0F20  2F21               	goto	i1l10618
 14480                           	
 14481  0F21                     i1l6737:	
 14482                           	
 14483  0F21                     i1l10618:	
 14484  0F21  1E0C               	btfss	(100/8),(100)&7
 14485  0F22  2F24               	goto	u395_21
 14486  0F23  2F25               	goto	u395_20
 14487  0F24                     u395_21:
 14488  0F24  2F47               	goto	i1l6741
 14489  0F25                     u395_20:
 14490                           	
 14491  0F25                     i1l10620:	
 14492  0F25  1683               	bsf	status, 5	;RP0=1, select bank1
 14493  0F26  1303               	bcf	status, 6	;RP1=0, select bank1
 14494  0F27  1E0C               	btfss	(1124/8)^080h,(1124)&7
 14495  0F28  2F2A               	goto	u396_21
 14496  0F29  2F2B               	goto	u396_20
 14497  0F2A                     u396_21:
 14498  0F2A  2F47               	goto	i1l6741
 14499  0F2B                     u396_20:
 14500                           	
 14501  0F2B                     i1l10622:	
 14502  0F2B  1283               	bcf	status, 5	;RP0=0, select bank0
 14503  0F2C  1303               	bcf	status, 6	;RP1=0, select bank0
 14504  0F2D  085F               	movf	(_txoptr),w
 14505  0F2E  3EB0               	addlw	_txfifo&0ffh
 14506  0F2F  0084               	movwf	fsr0
 14507  0F30  1383               	bcf	status, 7	;select IRP bank1
 14508  0F31  0800               	movf	indf,w
 14509  0F32  0099               	movwf	(25)	;volatile
 14510                           	
 14511  0F33                     i1l10624:	
 14512  0F33  3001               	movlw	(01h)
 14513  0F34  00F2               	movwf	(??_isr1+0)+0
 14514  0F35  0872               	movf	(??_isr1+0)+0,w
 14515  0F36  07DF               	addwf	(_txoptr),f	;volatile
 14516                           	
 14517  0F37                     i1l10626:	
 14518  0F37  300F               	movlw	(0Fh)
 14519  0F38  00F2               	movwf	(??_isr1+0)+0
 14520  0F39  0872               	movf	(??_isr1+0)+0,w
 14521  0F3A  05DF               	andwf	(_txoptr),f	;volatile
 14522                           	
 14523  0F3B                     i1l10628:	
 14524  0F3B  085F               	movf	(_txoptr),w	;volatile
 14525  0F3C  067D               	xorwf	(_txiptr),w	;volatile
 14526  0F3D  1D03               	skipz
 14527  0F3E  2F40               	goto	u397_21
 14528  0F3F  2F41               	goto	u397_20
 14529  0F40                     u397_21:
 14530  0F40  2F47               	goto	i1l6741
 14531  0F41                     u397_20:
 14532                           	
 14533  0F41                     i1l10630:	
 14534  0F41  1683               	bsf	status, 5	;RP0=1, select bank1
 14535  0F42  1303               	bcf	status, 6	;RP1=0, select bank1
 14536  0F43  120C               	bcf	(1124/8)^080h,(1124)&7
 14537  0F44  2F47               	goto	i1l6741
 14538                           	
 14539  0F45                     i1l6740:	
 14540  0F45  2F47               	goto	i1l6741
 14541                           	
 14542  0F46                     i1l6739:	
 14543  0F46  2F47               	goto	i1l6741
 14544                           	line	118
 14545                           	
 14546  0F47                     i1l6730:	
 14547                           	line	119
 14548                           	
 14549  0F47                     i1l6741:	
 14550  0F47  087B               	movf	(??_isr1+9),w
 14551  0F48  1283               	bcf	status, 5	;RP0=0, select bank0
 14552  0F49  00FF               	movwf	btemp+1
 14553  0F4A  087A               	movf	(??_isr1+8),w
 14554  0F4B  008A               	movwf	pclath
 14555  0F4C  0879               	movf	(??_isr1+7),w
 14556  0F4D  0084               	movwf	fsr0
 14557  0F4E  0E78               	swapf	(??_isr1+6)^0FFFFFF80h,w
 14558  0F4F  0083               	movwf	status
 14559  0F50  0EFE               	swapf	saved_w,f
 14560  0F51  0E7E               	swapf	saved_w,w
 14561  0F52  0009               	retfie
 14562                           	opt stack 0
 14563                           GLOBAL	__end_of_isr1
 14564  0F53                     	__end_of_isr1:
 14565 ;; =============== function _isr1 ends ============
 14566                           
 14567                           	signat	_isr1,88
 14568                           psect	text1365,local,class=CODE,delta=2
 14569                           global __ptext1365
 14570  0000                     __ptext1365:
 14571                           	global	btemp
 14572  007E                     	btemp set 07Eh
 14573                           
 14574                           	DABS	1,126,2	;btemp
 14575                           	global	wtemp0
 14576  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Fri May 31 17:55:47 2013

               __end_of_lookForVictim 0CF0             __end_of_lcd_write_control 1286  
           __end_of_updateOrientation 123A                                     pc 0002  
                                  _GO 00FA                                    _RD 0C60  
                                  _WR 0C61                          ___awdiv@sign 002C  
                                  fsr 0004                   ___wmul@multiplicand 0022  
                    ??_getOrientation 0020                    readEEPROM@addressH 0025  
                  readEEPROM@addressL 0021                                   l700 129B  
                                 l703 1640                                   l704 1640  
                                 l705 1645                                   l706 1674  
                                 l690 16F8                                   l691 1722  
                                 l692 16FC                                   l693 1700  
                                 l694 1704                                   l695 1708  
                                 l696 170C                                   l689 1711  
                                 l697 1734                                   _GIE 005F  
                                 _RB0 0030                                   _RB1 0031  
                                 _RE0 0048                                   _RE1 0049  
                                 _RE2 004A                          _stepPosition 005D  
                                 _RX9 00C6                                   _TX9 04C6  
                     ??_getVictimZone 0021                                   fsr0 0004  
                                 indf 0000                    drive@highByteSpeed 0028  
             __size_of_EEPROMToSerial 007F             lcd_write_1_digit_bcd@data 0023  
                     ?_lcd_set_cursor 0072                __end_of_updateLocation 0E13  
                                l1401 1213                                  l1402 1213  
                                l1410 17BA                                  l1403 1218  
                                l1404 1218                                  l2132 1200  
                                l1413 16E8                                  l2141 120B  
                                l1414 16E8                                  l2126 1285  
                                l1430 097E                                  l1407 11DA  
                                l1415 16ED                                  l2135 13AE  
                                l1416 16F3                                  l2136 139B  
                                l1424 12F1                                  l2129 125E  
                                l2137 13BB                                  l1433 0C3C  
                                l2153 14AD                                  l2138 13BB  
                                l1434 0C0B                                  l1435 0C3C  
                                l1427 0EA9                                  l1437 0C49  
                                l1438 0C4A                                  l1439 0C65  
                                l2900 0B6C                                  l2901 0B79  
                                l2910 0B97                                  l2902 0B6D  
                                l5070 0476                                  l2911 0B88  
                                l2903 0B81                                  l5071 034F  
                                l2920 0BBA                                  l2912 0B8D  
                                l2904 0B72                                  l3632 0898  
                                l5072 0475                                  l5080 0471  
                                l2921 0BAE                                  l2913 0B98  
                                l2905 0B77                                  l3633 08A3  
                                l5073 0396                                  l3650 133E  
                                l2906 0BE4                                  l2930 0BD1  
                                l2922 0BC2                                  l2914 0BA4  
                                l3642 153A                                  l5074 0474  
                                l5066 02C1                                  l2850 065B  
                                l3651 1351                                  l2931 0BE6  
                                l2923 0BB3                                  l2915 0B99  
                                l2907 0B82                                  l3643 1516  
                                l5075 03DD                                  l5067 0477  
                                l2851 0648                                  l5083 1396  
                                l2924 0BB8                                  l2916 0BAC  
                                l2908 0B8F                                  l3636 1354  
                                l3644 1549                                  l5068 0477  
                                l5076 0473                                  l2860 0694  
                                l2852 0666                                  l2925 0BC3  
                                l2917 0B9E                                  l2909 0B83  
                                l3637 1353                                  l3645 1549  
                                l5077 0424                                  l5069 0308  
                                l2861 066D                                  l2853 064D  
                                l2926 0BCB                                  l2918 0BA2  
                                l3638 135D                                  l4374 124B  
                                l5078 0472                                  l5086 15A9  
                                l2870 06A4                                  l2862 0674  
                                l2854 0653                                  l2927 0BC4  
                                l2919 0BAD                                  l3639 1373  
                                l5079 046B                                  l5087 1591  
                                l2871 06AC                                  l2863 067C  
                                l2855 0659                                  l3648 1336  
                                l2928 0BD0                                  l5088 15B0  
                                l2856 072B                                  l2848 071A  
                                l2880 06E5                                  l2872 06BB  
                                l2864 0684                                  l3649 1335  
                                l2929 0BC9                                  l3673 1430  
                                l5089 15BE                                  l4377 0A84  
                                l2881 0709                                  l2873 06BC  
                                l2865 0695                                  l2857 0667  
                                l2849 0647                                  l2890 0747  
                                l2882 06E6                                  l2874 06CA  
                                l2866 06BE                                  l2858 0686  
                                l2883 0717                                  l2875 06DC  
                                l2867 0696                                  l2859 0668  
                                l2884 06EC                                  l2876 06CB  
                                l2868 06A3                                  l2893 11BE  
                                l2885 06F4                                  l2877 06E4  
                                l2869 06C9                                  l2886 0703  
                                l2878 06D1                                  l2887 0704  
                                l2879 06DA                                  l2896 11C3  
                                l2888 0707                                  l2889 0718  
                                l2899 0BD3                                  l5820 1510  
                                l5900 0FDD                                  l5901 0FCF  
                                l5830 0537                                  l5902 0FED  
                                l5823 063D                                  l5831 0551  
                                l5903 0FFF                                  l6800 0ADA  
                                l5840 0642                                  l5832 054F  
                                l5824 0490                                  l6801 0AED  
                                l5841 0642                                  l5825 0554  
                                l5833 0551                                  l5850 07FF  
                                l6802 0AEA                                  l5834 05E6  
                                l5826 0509                                  l6803 0AEC  
                                l5835 05CA                                  l5827 0508  
                                l6811 02A1                                  l5844 11D2  
                                l6804 0AF1                                  l5836 05E4  
                                l5828 0507                                  l6820 02A0  
                                l6812 0041                                  l5853 11F5  
                                l5837 05E2                                  l5829 0553  
                                l6821 010C                                  l6813 0094  
                                l7710 0B02                                  l5870 0931  
                                l6750 15F9                                  l5838 05E4  
                                l5862 1629                                  l6830 0149  
                                l6822 011C                                  l6814 0062  
                                l5847 07FD                                  l7711 0B10  
                                l6807 1330                                  l6751 15F9  
                                l5839 063C                                  l5863 1635  
                                l6823 0236                                  l6831 0160  
                                l6815 0080                                  l7720 0B67  
                                l7712 0B56                                  l5880 0A0F  
                                l6808 1330                                  l6744 1583  
                                l5864 1635                                  l6760 0D18  
                                l6840 01A0                                  l6832 0159  
                                l6824 0123                                  l6816 0070  
                                l7713 0B28                                  l5881 0A29  
                                l5873 1408                                  l6761 0D1E  
                                l6825 024F                                  l6841 0199  
                                l6833 015F                                  l6817 007F  
                                l7570 14B3                                  l7714 0B1C  
                                l6754 0CEF                                  l6762 0D40  
                                l6770 17FF                                  l6850 01D9  
                                l6842 019F                                  l6834 0168  
                                l6826 0129                                  l6818 007E  
                                l7571 14BD                                  l7715 0B2D  
                                l5891 1459                                  l6747 12B7  
                                l6755 0CC8                                  l5859 1482  
                                l5867 13E1                                  l6763 0D46  
                                l6771 17E3                                  l6851 01DF  
                                l6843 01A8                                  l6835 0169  
                                l6827 0162                                  l6819 00CE  
                                l7572 14D2                                  l7716 0B2E  
                                l5884 16B3                                  l5876 08EA  
                                l6756 0CEE                                  l6780 0DD0  
                                l6764 0D6E                                  l6772 17FE  
                                l6860 022D                                  l6852 01E8  
                                l6844 01A9                                  l6836 01A2  
                                l6828 0139                                  l7573 14D9  
                                l7717 0B47                                  l6757 0CEF  
                                l6781 0D95                                  l6765 0D74  
                                l6773 17F7                                  l6861 0233  
                                l6853 01E9                                  l6845 01E2  
                                l6837 0179                                  l6829 0161  
                                l7718 0B55                                  l6782 0DA2  
                                l5894 0FAE                                  l6870 12D0  
                                l6766 0D80                                  l6774 17FD  
                                l6862 0234                                  l6854 01F9  
                                l6846 01B9                                  l6838 01A1  
                                l5887 1239                                  l7719 0B60  
                                l5879 0A02                                  l6783 0DAF  
                                l5895 0F8D                                  l6871 12D3  
                                l6775 17FF                                  l6863 029F  
                                l6855 01FF                                  l6847 01E1  
                                l6839 0189                                  l5888 1239  
                                l6792 0A97                                  l6784 0DBC  
                                l5896 0F7F                                  l6872 12D3  
                                l6864 0270                                  l6856 0200  
                                l6848 01C9                                  l6881 1228  
                                l6793 0AF1                                  l6785 0DD8  
                                l5897 0F9D                                  l6769 17CF  
                                l6865 029E                                  l6857 0210  
                                l6849 01E0                                  l6794 0AA8  
                                l6786 0DE4                                  l6778 0DBE  
                                l5898 0FFF                                  l6866 02A6  
                                l6858 0216                                  l6875 11C8  
                                l6795 0AF0                                  l6787 0DEA  
                                l6779 0D88                                  l5899 0FFE  
                                l6867 02A6                                  l6859 0217  
                                l6796 0AB8                                  l6788 0DF6  
                                l6884 07A9                                  l6797 0AEF  
                                l6789 0E12                                  l6885 07F8  
                                l6878 11CD                                  l6798 0AC9  
                                l6886 07F7                                  l6799 0AEE  
                                l6887 07F8                                  _CHS0 00FB  
                                _CHS1 00FC                                  _CHS2 00FD  
                                STR_1 086D                                  STR_2 087C  
                                STR_3 084B                                  STR_4 085C  
                                STR_5 081D                                  STR_6 0834  
                                STR_7 0806                                  _BRGH 04C2  
                                _CREN 00C4                                  u4000 0A9D  
                                u4001 0A9C                                  u4010 0AA3  
                                u4011 0AA2                                  u4020 0AAE  
                                u4100 14B7                        ?_updateMapData 0029  
                                u4021 0AAD                                  u4101 14B6  
                                u4030 0AB3                                  u4031 0AB2  
                                u4040 0ABE                                  u4200 0B3F  
                                u5000 004B                                  u4041 0ABD  
                                u4201 0B3E                                  u5001 004A  
                                u4050 0AC4                                  u4130 14D1  
                                u5010 0054                                  u4051 0AC3  
                                u4131 14D0                                  u4115 14BE  
                                u5011 0053                                  u4060 0ACF  
                                u4220 0B54                                  u4140 0AF9  
                                u4300 02B8                                  u5100 00D4  
                                u5020 0058                                  u4061 0ACE  
                                u4125 14C5                                  u4221 0B53  
                                u4205 0B3B                                  u4141 0AF8  
                                u4301 02B7                                  u5021 0057  
                                u4070 0AD5                                  u4230 0B5A  
                                u4150 0B06                                  u4310 02D0  
                                u5110 00EE                                  u5030 005C  
                                u4071 0AD4                                  u4215 0B48  
                                u4151 0B05                                  u4311 02CF  
                                u5111 00ED                                  u5031 005B  
           updateMapData@completeData 0031                                  u4080 0AE0  
                                u4160 0B18                                  u4240 1644  
                                u4320 0317                                  u4400 0C43  
                                u5200 0193                                  u5120 0116  
                                u5040 0066                                  u4081 0ADF  
                                u4161 0B17                                  u4241 1643  
                                u4321 0316                                  u4305 02B4  
                                u4401 0C42                                  u5201 0192  
                                u5121 0115                                  u5041 0065  
                                u4090 0AE5                                  u4330 035E  
                                u4410 0C48                                  u5210 01AD  
                                u5130 012D                                  u5050 006A  
                                u4091 0AE4                                  u4331 035D  
                                u4315 02CC                                  u4411 0C47  
                                u5211 01AC                                  u5131 012C  
                                u5051 0069                                  u3700 1217  
                                u4180 0B2C                                  u4260 16EC  
                                u4340 03A5                                  u4420 09EA  
                                u4500 069B                                  u5300 026C  
                                u5220 01B3                                  u5140 0133  
                                u5060 0074                                  u3701 1216  
                                u4181 0B2B                                  u4261 16EB  
                                u4341 03A4                                  u4325 0313  
                                u4421 09E9                                  u4501 069A  
                                u5301 026B                                  u5221 01B2  
                                u5141 0132                                  u5061 0073  
                                u4270 135D                                  u4350 03EC  
                                u4430 09F4                                  u4510 06B2  
                                u5310 0298                                  u5230 01C3  
                                u5150 0143                                  u5070 0078  
                                u4175 0B1D                                  u4255 1660  
                                u4271 135C                                  u4351 03EB  
                                u4335 035A                                  u4431 09F3  
                                u4511 06B1                                  u5311 0297  
                                u5231 01C2                                  u5151 0142  
                                u5071 0077                                  u4280 1522  
                                u4360 0433                                  u4440 1319  
                                u4520 06FA                                  u4600 0DE8  
                                u5320 02A5                                  u5240 01D3  
                                u5160 0153                                  u5080 009A  
                                u4361 0432                                  u4345 03A1  
                                u4441 1318                                  u4521 06F9  
                                u4601 0DE7                                  u5321 02A4  
                                u5241 01D2                                  u5161 0152  
                                u3730 133E                                  u4290 1548  
                                u4370 15AF                                  u4450 131F  
                                u4530 15D3                                  u4610 0DF1  
                                u5250 01F3                                  u5170 016D  
                                u5090 009E                                  u3731 133D  
                                u4195 0B2F                                  u4291 1547  
                                u4355 03E8                                  u4371 15AE  
                                u4451 131E                                  u4531 15D2  
                                u4611 0DF0                                  u5251 01F2  
                                u5171 016C                                  u5091 009D  
                                _PEIE 005E                                  u4380 13BA  
                                u4540 15E5                                  u4700 05BB  
                                u4620 049F                                  u5260 020A  
                                u5180 0173                                  u4365 042F  
                                u4381 13B9                                  u4541 15E4  
                                u4701 05BA                                  u4621 049E  
                                u5261 0209                                  u5181 0172  
                                u3830 1236                                  u4390 0C38  
                                u4550 0C82                                  u4710 05D2  
                                u4630 04BA                                  u5270 0221  
                                u5190 0183                                  u3831 1235  
                                u4295 1544                                  u4391 0C37  
                                u5407 0A22                                  u4551 0C81  
                                u4711 05D1                                  u4631 04B9  
                                u5271 0220                                  u5191 0182  
                                u3760 0893                                  u3840 11F0  
                                u4560 0C88                                  u4720 0628  
                                u4640 04D5                                  u4800 0771  
                                u5280 025E                                  u3761 0892  
                                u3841 11EF                                  u5417 16AC  
                                u4465 0943                                  u4561 0C87  
                                u4721 0627                                  u4641 04D4  
                                u4625 049B                                  u5337 07A1  
                                u4801 0770                                  u5281 025D  
                                u3770 089E                                  u4570 0C8C  
                                u4730 0641                                  u4650 04F0  
                                u4810 07B8                                  u5290 0266  
                                u3771 089D                                  u5507 15B7  
                                u5427 0BFD                                  u4475 0950  
                                u4571 0C8B                                  u4731 0640  
                                u4651 04EF                                  u5347 07EF  
                                u4811 07B7                                  u5291 0265  
                                _RCIE 0465                                  u4580 0DD6  
                                u4660 050D                                  u4740 0F6D  
                                u4820 1613                                  u4900 0D5C  
                                _RCIF 0065                                  u5517 125A  
                                u5437 0C25                                  u4485 095D  
                                u5357 0C92                                  u4581 0DD5  
                                u4725 0624                                  u4741 0F6C  
                                u4805 076D                                  u4821 1612  
                                u4901 0D5A                                  u4590 0DDF  
                                u4670 0528                                  u4750 0F9C  
                                u4830 161D                                  u5527 1280  
                                u5447 0C58                                  u4495 096A  
                                u5367 0CA7                                  u4591 0DDE  
                                u4671 0527                                  u4751 0F9B  
                                u4815 07B4                                  u4831 161C  
                                u4680 053F                                  u4760 0FBD  
                                u4920 0D61                                  u4840 0D0C  
                                u5537 16BD                                  u5457 1724  
                                u5377 092B                                  u4681 053E  
                                u4761 0FBC                                  u4745 0F69  
                                u4921 0D60                                  u4841 0D0A  
                                u4690 0570                                  u4770 0FEC  
                                u4914 0D5D                                  u4930 17BF  
                                u5547 1780                                  u5467 12A4  
                                u5387 08D4                                  u4691 056F  
                                u4771 0FEB                                  u4755 0F98  
                                u4931 17BE                                  u3980 0A8D  
                                u4780 12CC                                  u4860 0D11  
                                u4940 17C9                                  u3981 0A8C  
                                u5557 1299                                  u5477 143A  
                                u5397 08E3                                  u4765 0FB9  
                                u4781 12CB                                  u4861 0D10  
                                u4941 17C8                                  u3990 0A93  
                                u4790 0762                                  u4870 0D34  
                                u4854 0D0D                                  u4950 17D3  
                                u3991 0A92                                  u5487 14E3  
                                u4775 0FE8                                  u4791 0761  
                                u4871 0D32                                  u4951 17D2  
                                u4960 17DD                                  u5497 159C  
                                u4785 12C8                                  u4961 17DC  
                                u4890 0D39                                  u4970 17E7  
                                _OERR 00C1                                  u4795 075E  
                                u4891 0D38                                  u4971 17E6  
                                u4884 0D35                                  u4980 17F1  
                                u4981 17F0                                  u4990 0047  
                                _TMR0 0001                                  _SPEN 00C7  
                                _TXIE 0464                                  _WREN 0C62  
                                _TXEN 04C5                                  _TXIF 0064  
                                _SYNC 04C4                __end_of_lcd_write_data 125F  
                                _beep 00D5                                  _isr1 0EAA  
                                _main 0015                                  _home 0386  
                                _init 154A                                  _node 005A  
                 drive@highByteRadius 0023                                  btemp 007E  
                                start 0012                ??_findFinalDestination 0026  
                     rotateIR@stepNum 0025                           _writeEEPROM 1777  
               _lcd_write_1_digit_bcd 1201                     ?_driveForDistance 002C  
                         _turnRight90 1675                                 l11000 0A2A  
                               l11002 1675                                 l11010 09EA  
                               l11004 16A4                                 l11012 09F4  
                               l11020 08CC                                 l11100 06EA  
                               l11014 0A02                                 l11006 09D0  
                               l11022 08DB                                 l11030 132E  
                               l11110 0708                                 l11102 06EC  
                               l10400 11BE                                 l11016 0A1A  
                               l11008 09E0                                 l11024 1311  
                               l11032 0E13                                 l11104 06F0  
                               l11112 0709                                 l11040 0646  
                               l11120 1374                                 l11200 0CB7  
                               l10402 11BF                                 l10410 0B72  
                               l11018 08A4                                 l11026 1319  
                               l11034 0935                                 l11114 0719  
                               l11106 06F4                                 l11042 0649  
                               l11050 065B                                 l11122 138F  
                               l11130 0908                                 l11210 0CDF  
                               l11202 0CBD                                 l10404 11C3  
                               l10420 0B8E                                 l10412 0B78  
                               l10340 11F2                                 l11028 131F  
                               l11036 0936                                 l11108 06FA  
                               l11060 0677                                 l11052 0668  
                               l11044 064E                                 l11116 071A  
                               l11124 1396                                 l11132 0918  
                               l11140 1550                                 l11212 0CE5  
                               l11204 0CC3                                 l11220 0D95  
                               l11300 0543                                 l10350 11D9  
                               l10430 0BA4                                 l10422 0B8F  
                               l10414 0B79                                 l10406 0B6B  
                               l10510 1417                                 l10502 1409  
                               l10342 11F4                                 l11038 0978  
                               l11070 0696                                 l11062 067C  
                               l11054 066B                                 l11046 0654  
                               l11118 072B                                 l11134 0923  
                               l11126 08EB                                 l11150 1564  
                               l11142 1554                                 l11206 0CC8  
                               l11230 0DB5                                 l11222 0D9B  
                               l11214 0D81                                 l11310 0591  
                               l11302 0548                                 l10344 120F  
                               l10440 0BC4                                 l10432 0BAE  
                               l10424 0B99                                 l10416 0B83  
                               l10408 0B6D                                 l10336 08A0  
                               l10520 1422                                 l10512 1418  
                               l10504 140C                                 l11080 06AC  
                               l11072 069B                                 l11064 067F  
                               l11056 066D                                 l11048 065A  
                               l11128 08F7                                 l11160 1572  
                               l11152 1565                                 l11144 1559  
                               l11136 154A                                 l11208 0CD0  
                               l11240 0DDF                                 l11232 0DBD  
                               l11224 0DA2                                 l11216 0D88  
                               l11320 05C3                                 l11312 05A9  
                               l11304 0554                                 l11400 07E7  
                               l10346 1210                                 l10370 1334  
                               l10442 0BCA                                 l10434 0BB3  
                               l10426 0B9E                                 l10418 0B88  
                               l10450 0BE4                                 l10338 08A2  
                               l10522 1425                                 l10514 141B  
                               l10506 1414                                 l10530 122C  
                               l11090 06CF                                 l11082 06B2  
                               l11074 069F                                 l11066 0685  
                               l11058 0674                                 l11162 1573  
                               l11154 1567                                 l11146 155E  
                               l11138 154D                                 l11170 15BF  
                               l11250 0DF6                                 l11242 0DE4  
                               l11226 0DA8                                 l11218 0D8E  
                               l11234 0DBE                                 l11322 05CA  
                               l11314 05AE                                 l11330 05E6  
                               l11306 056A                                 l11410 147C  
                               l11402 145A                                 l10348 11D3  
                               l10380 1350                                 l10372 1336  
                               l10452 0BE6                                 l10444 0BCB  
                               l10436 0BB9                                 l10428 0BA3  
                               l10460 0897                                 l10524 1426  
                               l10516 141E                                 l10508 1415  
                               l10532 1230                                 l10540 11C9  
                               l10700 0B28                                 l11092 06D1  
                               l11084 06BD                                 l11076 06A4  
                               l11068 0686                                 l11164 1574  
                               l11156 156B                                 l11148 1562  
                               l11180 15F2                                 l11172 15D3  
                               l11252 0DFC                                 l11244 0DE8  
                               l11236 0DD6                                 l11228 0DAF  
                               l11340 0633                                 l11332 0606  
                               l11324 05D2                                 l11316 05BB  
                               l11308 0570                                 l11260 047E  
                               l11404 1466                                 l11420 161D  
                               l11412 15FA                                 l11500 0047  
                               l10374 133F                                 l10446 0BD2  
                               l10438 0BBA                                 l10462 0898  
                               l10454 088D                                 l10526 1427  
                               l10518 1421                                 l10534 1236  
                               l10542 11CD                                 l10550 07F9  
                               l10710 0B4E                                 l10702 0B2E  
                               l11094 06DB                                 l11078 06A8  
                               l11086 06BE                                 l11166 1579  
                               l11158 156F                                 l11174 15E5  
                               l11190 0C8C                                 l11182 0C66  
                               l11254 0E04                                 l11246 0DEA  
                               l11238 0DD8                                 l11342 0634  
                               l11334 0614                                 l11326 05D6  
                               l11318 05BE                                 l11270 04B5  
                               l11262 047F                                 l11350 0F60  
                               l11406 146B                                 l11422 1629  
                               l11414 1606                                 l11430 13D3  
                               l11510 005C                                 l11502 004B  
                               l10376 1347                                 l10448 0BD3  
                               l10464 089E                                 l10456 0893  
                               l10528 07FE                                 l10536 11C4  
                               l10544 121C                                 l10552 07FD  
                               l10560 11F5                                 l10640 0A9D  
                               l10632 0A85                                 l10704 0B3F  
                               l10712 0B56                                 l10720 1636  
                               l10800 136C                                 l11088 06CB  
                               l11096 06DC                                 l11168 157E  
                               l11176 15EB                                 l11192 0C99  
                               l11184 0C7C                                 l11256 0E0A  
                               l11248 0DF1                                 l11344 0635  
                               l11336 061A                                 l11328 05DB  
                               l11280 04F0                                 l11272 04BA  
                               l11264 048E                                 l11360 0FA8  
                               l11352 0F6D                                 l11408 1471  
                               l11416 1609                                 l11432 13D8  
                               l11424 13BC                                 l11440 13F9  
                               l11600 0199                                 l11512 0066  
                               l11520 0080                                 l11504 0050  
                  ??_driveForDistance 002E                                 l10378 134D  
                               l10466 08A0                                 l10458 0895  
                               l10538 11C8                                 l10546 11CE  
                               l10554 11EC                                 l10650 0AB8  
                               l10642 0AA3                                 l10634 0A8D  
                               l10714 0B5A                                 l10706 0B45  
                               l10722 163C                                 l10730 1286  
                               l10802 1370                                 l10810 1516  
                               l11098 06E6                                 l11178 15EC  
                               l11194 0C9F                                 l11186 0C82  
                               l11338 0628                                 l11290 0528  
                               l11274 04D0                                 l11282 0509  
                               l11266 0490                                 l11346 063D  
                               l11258 0478                                 l11370 0FED  
                               l11354 0F7F                                 l11362 0FAE  
                               l11418 1613                                 l11426 13C8  
                               l11442 13FF                                 l11434 13E2  
                               l11450 0D11                                 l11610 01C3  
                               l11602 01A2                                 l11530 009E  
                               l11522 0081                                 l11514 006A  
                               l11506 0054                                 l10468 08A3  
                               l10548 11D2                                 l10556 11F0  
                               l10660 0AD5                                 l10652 0ABE  
                               l10644 0AA8                                 l10636 0A93  
                               l10716 0B60                                 l10708 0B47  
                               l10724 1645                                 l10732 1289  
                               l10740 177A                                 l10804 1371  
                               l10812 1531                                 l10820 02B8  
                               l10900 1500                                 l11196 0CAE  
                               l11188 0C88                                 l11292 052B  
                               l11284 050D                                 l11276 04D5  
                               l11268 049F                                 l11372 0FF8  
                               l11364 0FBD                                 l11356 0F8D  
                               l11348 0F53                                 l11380 12CF  
                               l11428 13CD                                 l11436 13EE  
                               l11460 0D40                                 l11452 0D18  
                               l11444 0CF0                                 l11620 01E9  
                               l11612 01C9                                 l11604 01AD  
                               l11540 00BC                                 l11532 009F  
                               l11524 0087                                 l11516 0074  
                               l11508 0058                                 l10398 11BA  
                               l10558 11F2                                 l10662 0ADA  
                               l10654 0AC4                                 l10646 0AAE  
                               l10638 0A97                                 l10670 14B3  
                               l10718 0B67                                 l10726 166D  
                               l10734 128D                                 l10750 179D  
                               l10742 1787                                 l10806 1373  
                               l10814 153A                                 l10830 0306  
                               l10822 02BF                                 l10902 1508  
                               l10910 1451                                 l11198 0CB1  
                               l11294 0530                                 l11286 051B  
                               l11278 04EB                                 l11366 0FCF  
                               l11358 0F9D                                 l11382 12D0  
                               l11374 12B8                                 l11390 0762  
                               l11438 13F3                                 l11470 0D6E  
                               l11462 0D52                                 l11454 0D2A  
                               l11446 0D02                                 l11630 0210  
                               l11622 01F3                                 l11614 01D3  
                               l11606 01B3                                 l11550 00DF  
                               l11542 00C7                                 l11534 00A5  
                               l11518 0078                                 l11526 0094  
                               l10664 0AE0                                 l10656 0AC9  
                               l10648 0AB3                                 l10672 14B7  
                               l10680 0AF2                                 l10728 1674  
                               l10736 1291                                 l10752 17A5  
                               l10744 178C                                 l10760 16C4  
                               l10808 1511                                 l10816 123D  
                               l10840 034E                                 l10832 0307  
                               l10824 02C0                                 l10904 1434  
                               l10912 129C                                 l10920 170C  
                               l11296 0537                                 l11288 0520  
                               l11368 0FDD                                 l11384 12D2  
                               l11376 12CC                                 l11392 0771  
                               l11464 0D5D                                 l11456 0D35  
                               l11448 0D0D                                 l11480 17DD  
                               l11472 17BB                                 l11640 0235  
                               l11632 0217                                 l11624 01F9  
                               l11616 01D9                                 l11608 01B9  
                               l11560 00FF                                 l11552 00E4  
                               l11536 00AB                                 l11528 009A  
                               l11544 00CE                                 l10666 0AE5  
                               l10658 0ACF                                 l10674 14C4  
                               l10690 0B10                                 l10682 0AF9  
                               l10738 1295                                 l10754 17AD  
                               l10746 1792                                 l10770 16E2  
                               l10762 16C9                                 l10850 0396  
                               l10842 034F                                 l10834 0308  
                               l10826 02C1                                 l10818 02A9  
                               l10906 1441                                 l10914 12AB  
                               l10930 1726                                 l10922 170F  
                               l11298 053F                                 l11378 12CE  
                               l11394 0799                                 l11386 0748  
                               l11466 0D61                                 l11458 0D39  
                               l11482 17E7                                 l11474 17BF  
                               l11650 0266                                 l11634 0221  
                               l11626 0200                                 l11618 01E2  
                               l11570 0123                                 l11642 0236  
                               l11562 010C                                 l11554 00EA  
                               l11546 00D4                                 l11538 00B7  
                               l11490 0025                                 l10676 14D2  
                               l10668 14AE                                 l10692 0B12  
                               l10684 0B02                                 l10756 17B5  
                               l10748 1797                                 l10772 16ED  
                               l10764 16CC                                 l10780 127A  
                               l10860 03EC                                 l10852 03A5  
                               l10844 035E                                 l10836 0317  
                               l10828 02D0                                 l10908 1449  
                               l10916 12B1                                 l10932 1734  
                               l10924 1710                                 l10940 13AE  
                               l11396 07A9                                 l11388 0755  
                               l11468 0D67                                 l11484 17F1  
                               l11476 17C9                                 l11660 028F  
                               l11652 026C                                 l11636 0227  
                               l11628 020A                                 l11580 0149  
                               l11572 012D                                 l11644 024F  
                               l11564 0112                                 l11556 00EE  
                               l11548 00D5                                 l11492 002B  
                               l10678 14D9                                 l10694 0B18  
                               l10686 0B06                                 l10774 16F3  
                               l10766 16D2                                 l10758 16B7  
                               l10782 127B                                 l10790 1255  
                               l10870 0469                                 l10862 0422  
                               l10854 03DB                                 l10846 0394  
                               l10838 034D                                 l10926 1711  
                               l10918 16F7                                 l10934 139A  
                               l10942 12D7                                 l10950 0BEB  
                               l11398 07B8                                 l11486 17F7  
                               l11478 17D3                                 l11662 0294  
                               l11654 0270                                 l11646 0255  
                               l11638 022D                                 l11590 0173  
                               l11582 0153                                 l11574 0133  
                               l11566 0116                                 l11558 00FA  
                               l11494 0037                                 l10696 0B1C  
                               l10688 0B0B                                 l10768 16DA  
                               l10776 1275                                 l10784 124F  
                               l10792 1352                                 l10872 046A  
                               l10864 0423                                 l10856 03DC  
                               l10848 0395                                 l10880 158B  
                               l10928 1722                                 l10936 139B  
                               l10944 12E3                                 l10960 0C2C  
                               l10952 0BF7                                 l11664 0298  
                               l11656 0287                                 l11648 025E  
                               l11592 0179                                 l11584 0159  
                               l11576 0139                                 l11568 011C  
                               l11496 003D                                 l11488 0015  
                               l10698 0B23                                 l10778 1278  
                               l10786 1252                                 l10794 1354  
                               l10874 046B                                 l10866 0424  
                               l10858 03DD                                 l10890 15B1  
                               l10882 1592                                 l10938 13A7  
                               l10946 12E9                                 l10970 0C50  
                               l10962 0C32                                 l10954 0C04  
                               l11658 028A                                 l11594 0183  
                               l11578 0143                                 l11586 0162  
                               l11498 0041                                 l11666 02A1  
                               l10788 1254                                 l10796 135E  
                               l10876 0470                                 l10868 0433  
                               l10884 1596                                 l10892 14DD  
                               l10972 0C5F                                 l10964 0C38  
                               l10956 0C0B                                 l10948 0BE7  
                               l10980 1483                                 l11596 0189  
                               l11588 016D                                 l10798 1368  
                               l10886 15A3                                 l10878 1587  
                               l10894 14EA                                 l10966 0C43  
                               l10958 0C1D                                 l10974 11F9  
                               l10990 148F                                 l10982 1487  
                               l11598 0193                                 l10888 15B0  
                               l10896 14F0                                 l10968 0C4A  
                               l10976 11FA                                 l10992 1495  
                               l10984 148A                                 l10898 14F8  
                               l10978 1204                                 l10994 149B  
                               l10986 148B                                 l10996 14A1  
                               l10988 148E                                 l10998 14A7  
                               ?_isr1 0072                                 ?_main 0072  
                               ?_init 0072                       __end_of___awdiv 0B68  
                __size_of_checkIfHome 0020                                 _EEADR 010D  
                               _CARRY 0018                       ___awdiv@divisor 0026  
                     ___awdiv@counter 002B                                 _RCREG 001A  
                               _SPBRG 0099                                 _PORTA 0005  
                               _PORTC 0007                                 _PORTD 0008  
                               _PORTE 0009                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                                 _TRISE 0089  
                               _SSPIF 0063         __size_of_getSomethingInTheWay 0005  
                               _TXREG 0019                lcd_write_data@databyte 0022  
                     __end_of_goRight 1409  findFinalDestination@robotOrientation 0025  
                  _getSuccessfulDrive 11EC                       __end_of_convert 0478  
                               _drive 14DA                       ?_updateLocation 0072  
                               _ready 0389                 __size_of_writeSPIByte 000D  
                               _start 004E                        __pbitbssCOMMON 0380  
                     __end_of_waitFor 145A                                 pclath 000A  
                 ?_getSuccessfulDrive 0072                       ?_lcd_write_data 0072  
                   ?_adc_read_channel 003B                       _successfulDrive 038B  
                               status 0003                                 wtemp0 007E  
                   ?_frontWallCorrect 0072                    ??_adc_read_channel 003D  
                __end_of_goToNextCell 1800                    ??_frontWallCorrect 0043  
                      _initEEPROMMode 11D3            __size_of_lcd_write_control 0014  
                        __end_of_isr1 0F53                          __end_of_main 02A9  
                        __end_of_init 1584            __size_of_updateOrientation 0011  
                ??_getSuccessfulDrive 0020                                ??_isr1 0072  
                              ??_main 0048                                ??_init 002B  
                        _writeSPIByte 120C                  __size_of_getCurrentX 0005  
                __size_of_getCurrentY 0005                       ??_updateMapData 002E  
                 writeEEPROM@addressH 0021                   writeEEPROM@addressL 0022  
                              _ADCON0 001F                                _ADCON1 009F  
                              ?_drive 0022                                _ADRESH 001E  
                              _ADRESL 009E                                _EEDATA 010C  
                              _EECON1 018C                                _EECON2 018D  
    findFinalDestination@virtualWallX 0027      findFinalDestination@virtualWallY 0024  
                    ___awdiv@dividend 0028                      __end_of_adc_read 1675  
                              i1l6730 0F47                                i1l6731 0ED5  
                              i1l6740 0F45                                i1l6732 0ED4  
                              i1l6733 0EDA                                i1l6741 0F47  
                              i1l6734 0EFE                                i1l6735 0EFD  
                              i1l6736 0F03                                i1l6737 0F21  
                              i1l6738 0F20                                i1l6739 0F46  
                        _addressCount 0055                                u390_20 0ECF  
                              u390_21 0ECE                                u391_20 0EDE  
                              u391_21 0EDD                                u392_20 0EF8  
                              u392_21 0EF7                                u393_20 0F07  
                              u393_21 0F06                                u394_20 0F1B  
                              u394_21 0F1A                                u395_20 0F25  
                              u395_21 0F24                                u396_20 0F2B  
                              u388_20 0EAE                                u396_21 0F2A  
                              u388_21 0EAD                                u397_20 0F41  
                              u389_20 0EB5                                u397_21 0F40  
                              u389_21 0EB4                                _TMR0IE 005D  
                              _TMR0IF 005A                                _SSPCON 0014  
                              _SSPBUF 0013                      convert@adc_value 0037  
                   rotateIR@direction 0020                __end_of_initEEPROMMode 11DB  
                    writeSPIByte@data 0020                ?_lcd_write_1_digit_bcd 0072  
                    __end_of_findWall 12D4                      __end_of_lcd_init 14AE  
                              ___wmul 14AE                             ??___awdiv 002A  
                              _goLeft 13BC                                _finalX 0063  
                              _finalY 0064                                _xCoord 0066  
                              _yCoord 0069                                _readIR 1374  
                    __end_of_init_adc 129C                      ___awdiv@quotient 002D  
            __end_of_lcd_write_string 13BC                                _moving 0388  
                           ??_goRight 0038                                _rxfifo 00A0  
                              clrloop 11DC                                _txfifo 00B0  
                              _rxiptr 007C            frontWallCorrect@distToWall 0045  
                              _rxoptr 005B                                _txiptr 007D  
                           ??_convert 0039                                _txoptr 005F  
                    __end_of_ser_init 1431                      __end_of_ser_isrx 08A4  
                              saved_w 007E                        _EEPROMToSerial 0BE7  
                           ??_waitFor 0024                      __end_of_rotateIR 15BF  
                readEEPROM@returnData 0026                     lcd_write_string@s 0024  
        __end_of_clearSuccessfulDrive 0800                            _addNewData 12D4  
                     ?_initEEPROMMode 0072                       writeEEPROM@data 0026  
               play_iCreate_song@song 0022          __size_of_writeEEPROMTestData 0097  
                       rotateIR@steps 0024                        __pcstackCOMMON 0072  
                        __pidataBANK0 11E3                          __pidataBANK1 12F2  
                        __pidataBANK3 097F                         __end_of_drive 1511  
                   _play_iCreate_song 123A                    __size_of_goForward 003C  
                  __size_of_getFinalX 0005                    __size_of_getFinalY 0005  
              __end_of_EEPROMToSerial 0C66                      ??_lcd_set_cursor 0023  
         __size_of_setVirtualLocation 0010                    __size_of_goReverse 0047  
                  ?_play_iCreate_song 0072                    __size_of_findWalls 0091  
                          _goBackward 145A                               ??_drive 0025  
                 ??_play_iCreate_song 0022                            __pbssBANK0 004B  
                          __pbssBANK1 00A0                 __size_of_goToNextCell 0045  
                  __size_of_initSongs 005B                     drive@lowByteSpeed 0022  
                          __pmaintext 0015                          ?_writeEEPROM 0021  
                             ?___wmul 0020                               ?_goLeft 0072  
                          __pintentry 0004             __end_of_play_iCreate_song 124C  
                             ?_readIR 003F                          ?_turnRight90 0072  
                          __ptext1300 17BB                            __ptext1301 0CF0  
                          __ptext1310 0D81                            __ptext1302 13E2  
                          __ptext1311 0C66                            __ptext1303 13BC  
                          __ptext1320 08A4                            __ptext1312 15BF  
                          __ptext1304 15FA                            __ptext1321 09D0  
                          __ptext1313 154A                            __ptext1305 145A  
                          __ptext1330 16F4                            __ptext1322 1675  
                          __ptext1314 08EB                            __ptext1306 0748  
                          __ptext1331 129C                            __ptext1323 0A2A  
                          __ptext1315 1374                            __ptext1307 12B8  
                          __ptext1340 1272                            __ptext1332 1431  
                          __ptext1324 1483                            __ptext1316 0643  
                          __ptext1308 0F53                            __ptext1341 16B4  
                          __ptext1333 14DA                            __ptext1325 1201  
                          __ptext1317 0932                            __ptext1309 0478  
                          __ptext1350 11CE                            __ptext1342 1777  
                          __ptext1334 1584                            __ptext1326 11F6  
                          __ptext1318 0E13                            __ptext1351 1219  
                          __ptext1343 1286                            __ptext1335 02A9  
                          __ptext1327 0BE7                            __ptext1319 1311  
                          __ptext1360 11BA                            __ptext1352 11C9  
                          __ptext1344 1636                            __ptext1336 123A  
                          __ptext1328 12D4                            __ptext1361 1331  
                          __ptext1353 11C4                            __ptext1345 0AF2  
                          __ptext1337 1511                            __ptext1329 1397  
                          __ptext1362 11D3                            __ptext1354 1229  
                          __ptext1346 14AE                            __ptext1338 1352  
                          __ptext1363 120C                            __ptext1355 07FE  
                          __ptext1347 0A85                            __ptext1339 124C  
                          __ptext1364 0EAA                            __ptext1356 1409  
                          __ptext1348 11EC                            __ptext1365 0000  
                          __ptext1357 088D                            __ptext1349 07F9  
                          __ptext1358 0B68                            __ptext1359 11BF  
                  __size_of_ser_getch 0022                             ?_adc_read 002F  
                  __size_of_ser_putch 0021              _checkForFinalDestination 15BF  
                     ?_EEPROMToSerial 0072                               i1l10600 0EE2  
                             i1l10610 0F07                               i1l10602 0EF8  
                    ??_updateLocation 0024                               i1l10620 0F25  
                             i1l10612 0F0F                               i1l10604 0EFB  
                             i1l10630 0F41                               i1l10622 0F2B  
                             i1l10614 0F15                               i1l10606 0EFF  
                             i1l10624 0F33                               i1l10616 0F1B  
                             i1l10608 0F03                               i1l10626 0F37  
                             i1l10618 0F21                               i1l10628 0F3B  
                             i1l10580 0EAE                               i1l10590 0ECF  
                             i1l10582 0EAF                               i1l10592 0ED2  
                             i1l10584 0EB1                               i1l10594 0ED6  
                             i1l10586 0EB5                               i1l10578 0EAA  
                             i1l10596 0EDA                               i1l10588 0EB9  
                             i1l10598 0EDE                 __end_of_getVictimZone 0BE7  
                        _goToNextCell 17BB                      ??_lcd_write_data 0020  
                           ?_findWall 0072             __size_of_driveForDistance 01CB  
                      waitFor@lowByte 0023                __size_of_lookForVictim 008A  
                           ?_lcd_init 0072                               _SSPSTAT 0094  
                           ?_init_adc 0072                           ?_addNewData 0072  
                   __end_of_goForward 1636                            _readEEPROM 16B4  
                   __end_of_getFinalX 11BF                     __end_of_getFinalY 11C4  
        __end_of_getSomethingInTheWay 07FE                     __end_of_goReverse 0932  
                          _initIRobot 129C                     __end_of_findWalls 0D81  
                           ?_ser_init 0072                             ?_ser_isrx 0072  
       __size_of_findFinalDestination 0105                               ___awdiv 0AF2  
                           ?_rotateIR 0020                       __size_of___wmul 002C  
                       ??_checkIfHome 0029                       __size_of_goLeft 0026  
                     __size_of_readIR 0023             __size_of_adc_read_channel 0041  
                             _goRight 13E2                            ??_adc_read 0031  
           __size_of_frontWallCorrect 00AD                               _convert 02A9  
                         waitFor@type 0027                  _clearSuccessfulDrive 07FE  
                   __end_of_initSongs 0A85          driveForDistance@moveDistance 002C  
                             _xVictim 0067                               _yVictim 006A  
                             _waitFor 1431                               _ser_tmp 005C  
                             _vicZone 0060                           ?_goBackward 0072  
                             _wayWent 0062                   driveForDistance@low 0035  
                         ser_putArr@i 0029                            ??_findWall 0043  
             __size_of_getOrientation 0005                            ??_lcd_init 0023  
                        _eepromSerial 004B                  end_of_initialization 1773  
                   __end_of_ser_getch 1374                               init_ram 1263  
                      _superMarioBros 01C8                            ??_init_adc 0020  
             ??_lcd_write_1_digit_bcd 0023                     __end_of_ser_putch 1352  
                          _wallFollow 0748                            ??_ser_init 0020  
                          ??_ser_isrx 0020                            _ser_putArr 1511  
                       _lookForVictim 0C66                            ??_rotateIR 0021  
          __size_of_play_iCreate_song 0012           __size_of_getSuccessfulDrive 000A  
                   ?_lcd_write_string 0072                         ??_getCurrentX 0020  
                       ??_getCurrentY 0020                 ?_clearSuccessfulDrive 0072  
                 __size_of_addNewData 001E                            _victimZone 0061  
                  ??_lcd_write_string 0023                   __end_of_checkIfHome 1331  
                 _writeEEPROMTestData 0E13                     adc_read@adc_value 0035  
                          _updateNode 0A85                 __end_of_updateMapData 097F  
                    ??_initEEPROMMode 0020                           ?_readEEPROM 0021  
                ?_writeEEPROMTestData 0072                           ?_initIRobot 0072  
                          _turnLeft90 09D0                        ?_lookForVictim 0072  
                          _turnAround 08A4                   __size_of_goBackward 0029  
                __size_of_writeEEPROM 0044                        __end_of___wmul 14DA  
                      __end_of_goLeft 13E2                        __end_of_readIR 1397  
                __size_of_turnRight90 003F            EEPROMToSerial@transferDone 002A  
                _getSomethingInTheWay 07F9                   start_initialization 1735  
                 __end_of_getCurrentX 11C9                   __end_of_getCurrentY 11CE  
                    _driveForDistance 0478           driveForDistance@virtualWall 0036  
               ??_writeEEPROMTestData 0029                 lcd_set_cursor@address 0023  
                         ?_wallFollow 0072                           ?_ser_putArr 0022  
          ??_checkForFinalDestination 0024                        _RTC_FLAG_500MS 0382  
                            ??___wmul 0024                              ??_goLeft 0038  
                    ??_EEPROMToSerial 0027                           __pdataBANK0 0063  
                         __pdataBANK1 00C0                           __pdataBANK3 0190  
                         _checkIfHome 1311                              ??_readIR 0041  
                    _adc_read_channel 16F4                ??_clearSuccessfulDrive 0020  
          __end_of_setVirtualLocation 1229                      _frontWallCorrect 0F53  
               ?_getSomethingInTheWay 0072                   __size_of_readEEPROM 0040  
                   __size_of_adc_read 003F                           __pbssCOMMON 007C  
                         ?_updateNode 0072                         __pcstackBANK0 0020  
                 __size_of_initIRobot 001C                        _getOrientation 11CE  
                   _somethingInTheWay 0065                     __size_of_findWall 001C  
                 main@victimIndicator 004A                     __size_of_lcd_init 002B  
                  drive@lowByteRadius 0024                          ??_addNewData 0027  
                      addNewData@data 0028                             _champions 00C0  
                   __size_of_init_adc 0016                       ??_lookForVictim 0024  
                           _goForward 15FA                           ?_turnLeft90 0072  
                           _getFinalX 11BA                             _getFinalY 11BF  
                         ?_turnAround 0072                              ?___awdiv 0026  
                           _goReverse 08EB                     __size_of_ser_init 0028  
                   __size_of_ser_isrx 0017                             _findWalls 0CF0  
                           __pstrings 0800                     __size_of_rotateIR 003B  
                            ?_goRight 0072                           _getCurrentX 11C4  
                       ?_writeSPIByte 0072                           _getCurrentY 11C9  
                            ?_convert 0037                        _finalCountdown 01AD  
                  __end_of_addNewData 12F2                             _goingHome 0385  
            wallFollow@distanceToWall 0046                __end_of_getOrientation 11D3  
        __end_of_findFinalDestination 0748                              ?_waitFor 0022  
                        ??_goBackward 0038                   __size_of_wallFollow 00B1  
                          ser_getch@c 0021                             _initSongs 0A2A  
                 __size_of_ser_putArr 0039                        __size_of_drive 0037  
                           _frontWall 0384               __size_of_lcd_set_cursor 000B  
                   interrupt_function 0004                        ___wmul@product 0024  
                          ser_putch@c 0021        __size_of_lcd_write_1_digit_bcd 000B  
       __end_of_lcd_write_1_digit_bcd 120C                       waitFor@highByte 0022  
                           _rightWall 038A                        _addressCurrent 0056  
                           _ser_getch 1352                            ?_goForward 0072  
                           _ser_putch 1331                            ?_getFinalX 0072  
                          ?_getFinalY 0072                   __size_of_updateNode 006D  
              __size_of_getVictimZone 007F                            ?_goReverse 0072  
                   updateMapData@move 002D                    __end_of_goBackward 1483  
                          ?_findWalls 0072                 driveForDistance@cliff 0037  
                      ??_writeSPIByte 0020                           __stringbase 0805  
              ??_getSomethingInTheWay 0020                     ___wmul@multiplier 0020  
                     ?_getOrientation 0072                            ?_initSongs 0072  
                 __size_of_turnLeft90 005A                   __size_of_turnAround 0047  
             __size_of_updateLocation 0092             __size_of_lcd_write_string 0025  
                 lookForVictim@victim 0027                          ??_readEEPROM 0022  
                        ??_initIRobot 0022               __size_of_lcd_write_data 0013  
                          ?_ser_getch 0072      __end_of_checkForFinalDestination 15FA  
                        _lookingForU2 0190                            ?_ser_putch 0072  
             adc_read_channel@channel 003E                         _RTC_FLAG_10MS 0380  
                       _RTC_FLAG_50MS 0383                             init_fetch 125F  
            __end_of_driveForDistance 0643            __end_of_getSuccessfulDrive 11F6  
                    __size_of___awdiv 0076                    _currentOrientation 0057  
                getVictimZone@victimX 0022                  getVictimZone@victimY 0020  
                            _adc_read 1636                              _dVirtual 0058  
                    __size_of_goRight 0027                      __size_of_convert 01CF  
                  __end_of_readEEPROM 16F4                    __end_of_initIRobot 12B8  
                       _getVictimZone 0B68                      __size_of_waitFor 0029  
                            _findWall 12B8                              _lcd_init 1483  
                setVirtualLocation@dV 0021                  setVirtualLocation@xV 0023  
                setVirtualLocation@yV 0020                              _leftWall 0387  
            __end_of_adc_read_channel 1735             lcd_write_control@databyte 0022  
                            _lastMove 0059                              _init_adc 1286  
                       __size_of_isr1 00A9                         __size_of_main 0294  
                       __size_of_init 003A              __end_of_frontWallCorrect 1000  
                            _longbeep 00DA                          ??_wallFollow 0043  
                            _xVirtual 0068                              clear_ram 11DB  
                            _yVirtual 006B                         ??_writeEEPROM 0023  
                            _ser_init 1409                           ??_goForward 0038  
                        ??_ser_putArr 0026                              _ser_isrx 088D  
                         ??_getFinalX 0020                           ??_getFinalY 0020  
                _findFinalDestination 0643                  driveForDistance@high 0034  
                         ??_goReverse 0029                              _rotateIR 1584  
                         ??_findWalls 0043                          ?_checkIfHome 0072  
                       ??_turnRight90 0029                 updateMapData@virtualE 002A  
               updateMapData@virtualN 002B                 updateMapData@virtualS 0029  
               updateMapData@virtualW 0030                __size_of_updateMapData 004D  
                            readIR@cm 0041                          ??_updateNode 0020  
                       ?_goToNextCell 0072                        ?_getVictimZone 0020  
       driveForDistance@deltaDistance 0030                          _RTC_FLAG_1MS 0381  
                         ??_initSongs 002B                    __end_of_wallFollow 07F9  
                  __end_of_ser_putArr 154A                    _setVirtualLocation 1219  
         __end_of_writeEEPROMTestData 0EAA                              intlevel1 0000  
                      _lcd_set_cursor 11F6                  __end_of_writeSPIByte 1219  
                 ?_setVirtualLocation 0020                             stringcode 0800  
                         ??_ser_getch 0020                          ??_turnLeft90 0029  
               ?_findFinalDestination 0024                           ??_ser_putch 0020  
                        ??_turnAround 0029                  _stepsToPerpendicular 005E  
             __size_of_initEEPROMMode 0008                    __end_of_updateNode 0AF2  
                   _lcd_write_control 1272                     _updateOrientation 1229  
                 __end_of_writeEEPROM 17BB                    ?_lcd_write_control 0072  
              updateOrientation@moved 0021                          ?_getCurrentX 0072  
                        ?_getCurrentY 0072                            _OPTION_REG 0081  
                  ?_updateOrientation 0072         __size_of_clearSuccessfulDrive 0002  
                ??_setVirtualLocation 0022                        ??_goToNextCell 0039  
                 __end_of_turnRight90 16B4                              stringdir 0800  
            driveForDistance@distance 0032                              stringtab 0800  
   __size_of_checkForFinalDestination 003B                         _closestObject 0053  
           ?_checkForFinalDestination 0072                   updateMapData@victim 002C  
                 ??_lcd_write_control 0020                __end_of_lcd_set_cursor 1201  
                 ??_updateOrientation 0020                    __end_of_turnLeft90 0A2A  
                  __end_of_turnAround 08EB                        _updateLocation 0D81  
                    _lcd_write_string 1397                         _updateMapData 0932  
                         _RTC_Counter 0051                        _lcd_write_data 124C  
                     ser_putArr@array 0022                      ser_putArr@length 0024  
