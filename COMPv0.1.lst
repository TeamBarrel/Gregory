

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sat May 18 18:13:14 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COM
                                 PETITIONv0.1\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COM
                                 PETITIONv0.1\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_run
    49                           	FNCALL	_run,_lcd_set_cursor
    50                           	FNCALL	_run,_lcd_write_string
    51                           	FNCALL	_run,_goToNextCell
    52                           	FNCALL	_run,_updateLocation
    53                           	FNCALL	_goToNextCell,_findWalls
    54                           	FNCALL	_goToNextCell,_goRight
    55                           	FNCALL	_goToNextCell,_goForward
    56                           	FNCALL	_goToNextCell,_goLeft
    57                           	FNCALL	_goToNextCell,_goBackward
    58                           	FNCALL	_findWalls,_findWall
    59                           	FNCALL	_findWalls,_rotateIR
    60                           	FNCALL	_findWalls,_lcd_write_data
    61                           	FNCALL	_findWall,_readIR
    62                           	FNCALL	_updateLocation,_lcd_set_cursor
    63                           	FNCALL	_updateLocation,_lcd_write_data
    64                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
    65                           	FNCALL	_goRight,_turnRight90
    66                           	FNCALL	_goRight,_driveForDistance
    67                           	FNCALL	_goRight,_lcd_set_cursor
    68                           	FNCALL	_goRight,_lcd_write_data
    69                           	FNCALL	_goLeft,_turnLeft90
    70                           	FNCALL	_goLeft,_driveForDistance
    71                           	FNCALL	_goLeft,_lcd_set_cursor
    72                           	FNCALL	_goLeft,_lcd_write_data
    73                           	FNCALL	_goForward,_driveForDistance
    74                           	FNCALL	_goForward,_lcd_set_cursor
    75                           	FNCALL	_goForward,_lcd_write_data
    76                           	FNCALL	_goBackward,_turnAround
    77                           	FNCALL	_goBackward,_driveForDistance
    78                           	FNCALL	_goBackward,_lcd_set_cursor
    79                           	FNCALL	_goBackward,_lcd_write_data
    80                           	FNCALL	_readIR,_adc_read_channel
    81                           	FNCALL	_readIR,_convert
    82                           	FNCALL	_init,_init_adc
    83                           	FNCALL	_init,_lcd_init
    84                           	FNCALL	_init,_ser_init
    85                           	FNCALL	_init,_initIRobot
    86                           	FNCALL	_lcd_init,_lcd_write_control
    87                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
    88                           	FNCALL	_lcd_write_string,_lcd_write_data
    89                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    90                           	FNCALL	_turnRight90,_drive
    91                           	FNCALL	_turnRight90,_waitFor
    92                           	FNCALL	_turnLeft90,_drive
    93                           	FNCALL	_turnLeft90,_waitFor
    94                           	FNCALL	_turnAround,_drive
    95                           	FNCALL	_turnAround,_waitFor
    96                           	FNCALL	_driveForDistance,_drive
    97                           	FNCALL	_driveForDistance,_ser_putch
    98                           	FNCALL	_driveForDistance,_ser_getch
    99                           	FNCALL	_adc_read_channel,_adc_read
   100                           	FNCALL	_convert,___wmul
   101                           	FNCALL	_convert,___awdiv
   102                           	FNCALL	_initIRobot,_ser_putch
   103                           	FNCALL	_waitFor,_ser_putch
   104                           	FNCALL	_ser_getch,_ser_isrx
   105                           	FNCALL	_drive,_ser_putch
   106                           	FNCALL	_adc_read,___awdiv
   107                           	FNROOT	_main
   108                           	FNCALL	_isr1,___lwmod
   109                           	FNCALL	intlevel1,_isr1
   110                           	global	intlevel1
   111                           	FNROOT	intlevel1
   112                           	global	_xCoord
   113                           psect	idataBANK0,class=CODE,space=0,delta=2
   114                           global __pidataBANK0
   115  07FE                     __pidataBANK0:
   116                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
   117                           	line	39
   118                           
   119                           ;initializer for _xCoord
   120  07FE  3401               	retlw	01h
   121                           	global	_rxfifo
   122                           	global	_start
   123                           	global	_RTC_Counter
   124                           	global	_directionMoved
   125                           	global	_ser_tmp
   126                           	global	_yCoord
   127                           	global	_currentOrientation
   128                           	global	_rxiptr
   129                           	global	_rxoptr
   130                           	global	_txiptr
   131                           	global	_txoptr
   132                           	global	_RTC_FLAG_10MS
   133                           	global	_RTC_FLAG_1MS
   134                           	global	_RTC_FLAG_500MS
   135                           	global	_RTC_FLAG_50MS
   136                           	global	_frontWall
   137                           	global	_leftWall
   138                           	global	_rightWall
   139                           	global	_txfifo
   140                           	global	_ADCON0
   141  001F                     _ADCON0	set	31
   142                           	global	_ADRESH
   143  001E                     _ADRESH	set	30
   144                           	global	_PORTA
   145  0005                     _PORTA	set	5
   146                           	global	_PORTC
   147  0007                     _PORTC	set	7
   148                           	global	_PORTD
   149  0008                     _PORTD	set	8
   150                           	global	_PORTE
   151  0009                     _PORTE	set	9
   152                           	global	_RCREG
   153  001A                     _RCREG	set	26
   154                           	global	_SSPBUF
   155  0013                     _SSPBUF	set	19
   156                           	global	_SSPCON
   157  0014                     _SSPCON	set	20
   158                           	global	_TMR0
   159  0001                     _TMR0	set	1
   160                           	global	_TXREG
   161  0019                     _TXREG	set	25
   162                           	global	_CARRY
   163  0018                     _CARRY	set	24
   164                           	global	_CHS0
   165  00FB                     _CHS0	set	251
   166                           	global	_CHS1
   167  00FC                     _CHS1	set	252
   168                           	global	_CHS2
   169  00FD                     _CHS2	set	253
   170                           	global	_CREN
   171  00C4                     _CREN	set	196
   172                           	global	_GIE
   173  005F                     _GIE	set	95
   174                           	global	_GO
   175  00FA                     _GO	set	250
   176                           	global	_OERR
   177  00C1                     _OERR	set	193
   178                           	global	_PEIE
   179  005E                     _PEIE	set	94
   180                           	global	_RB0
   181  0030                     _RB0	set	48
   182                           	global	_RCIF
   183  0065                     _RCIF	set	101
   184                           	global	_RE0
   185  0048                     _RE0	set	72
   186                           	global	_RE1
   187  0049                     _RE1	set	73
   188                           	global	_RE2
   189  004A                     _RE2	set	74
   190                           	global	_RX9
   191  00C6                     _RX9	set	198
   192                           	global	_SPEN
   193  00C7                     _SPEN	set	199
   194                           	global	_TMR0IE
   195  005D                     _TMR0IE	set	93
   196                           	global	_TMR0IF
   197  005A                     _TMR0IF	set	90
   198                           	global	_TXIF
   199  0064                     _TXIF	set	100
   200                           	global	_ADCON1
   201  009F                     _ADCON1	set	159
   202                           	global	_ADRESL
   203  009E                     _ADRESL	set	158
   204                           	global	_OPTION_REG
   205  0081                     _OPTION_REG	set	129
   206                           	global	_SPBRG
   207  0099                     _SPBRG	set	153
   208                           	global	_SSPSTAT
   209  0094                     _SSPSTAT	set	148
   210                           	global	_TRISA
   211  0085                     _TRISA	set	133
   212                           	global	_TRISB
   213  0086                     _TRISB	set	134
   214                           	global	_TRISC
   215  0087                     _TRISC	set	135
   216                           	global	_TRISD
   217  0088                     _TRISD	set	136
   218                           	global	_TRISE
   219  0089                     _TRISE	set	137
   220                           	global	_BRGH
   221  04C2                     _BRGH	set	1218
   222                           	global	_RCIE
   223  0465                     _RCIE	set	1125
   224                           	global	_SYNC
   225  04C4                     _SYNC	set	1220
   226                           	global	_TX9
   227  04C6                     _TX9	set	1222
   228                           	global	_TXEN
   229  04C5                     _TXEN	set	1221
   230                           	global	_TXIE
   231  0464                     _TXIE	set	1124
   232                           	global	_EEADR
   233  010D                     _EEADR	set	269
   234                           	global	_EEDATA
   235  010C                     _EEDATA	set	268
   236                           	global	_EECON1
   237  018C                     _EECON1	set	396
   238                           	global	_EECON2
   239  018D                     _EECON2	set	397
   240                           	global	_RD
   241  0C60                     _RD	set	3168
   242                           	global	_WR
   243  0C61                     _WR	set	3169
   244                           	global	_WREN
   245  0C62                     _WREN	set	3170
   246                           psect	strings,class=STRING,delta=2
   247                           global __pstrings
   248  0700                     __pstrings:
   249                           ;	global	stringdir,stringtab,__stringbase
   250  0700                     stringtab:
   251                           ;	String table - string pointers are 1 byte each
   252  0700                     stringcode:stringdir:
      + 0700                     stringdir:	
   253  0700  3007               movlw high(stringdir)
   254  0701  008A               movwf pclath
   255  0702  0804               movf fsr,w
   256  0703  0A84               incf fsr
   257  0704  0782               	addwf pc
   258  0705                     __stringbase:
   259  0705  3400               	retlw	0
   260                           psect	strings
   261                           	
   262  0706                     STR_1:	
   263  0706  3457               	retlw	87	;'W'
   264  0707  3461               	retlw	97	;'a'
   265  0708  346C               	retlw	108	;'l'
   266  0709  346C               	retlw	108	;'l'
   267  070A  3473               	retlw	115	;'s'
   268  070B  3440               	retlw	64	;'@'
   269  070C  3420               	retlw	32	;' '
   270  070D  3452               	retlw	82	;'R'
   271  070E  3420               	retlw	32	;' '
   272  070F  344C               	retlw	76	;'L'
   273  0710  3420               	retlw	32	;' '
   274  0711  3428               	retlw	40	;'('
   275  0712  3431               	retlw	49	;'1'
   276  0713  342C               	retlw	44	;','
   277  0714  3430               	retlw	48	;'0'
   278  0715  3429               	retlw	41	;')'
   279  0716  3400               	retlw	0
   280                           psect	strings
   281                           	
   282  0717                     STR_2:	
   283  0717  3463               	retlw	99	;'c'
   284  0718  3475               	retlw	117	;'u'
   285  0719  344F               	retlw	79	;'O'
   286  071A  3472               	retlw	114	;'r'
   287  071B  343A               	retlw	58	;':'
   288  071C  3420               	retlw	32	;' '
   289  071D  3457               	retlw	87	;'W'
   290  071E  3420               	retlw	32	;' '
   291  071F  3464               	retlw	100	;'d'
   292  0720  3469               	retlw	105	;'i'
   293  0721  3472               	retlw	114	;'r'
   294  0722  344D               	retlw	77	;'M'
   295  0723  346F               	retlw	111	;'o'
   296  0724  343A               	retlw	58	;':'
   297  0725  3420               	retlw	32	;' '
   298  0726  342D               	retlw	45	;'-'
   299  0727  3400               	retlw	0
   300                           psect	strings
   301                           	file	"COMPv0.1.as"
   302                           	line	#
   303                           psect cinit,class=CODE,delta=2
   304                           global start_initialization
   305  0F56                     start_initialization:
   306                           
   307                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   308                           global __pbitbssCOMMON
   309  0380                     __pbitbssCOMMON:
   310  0380                     _RTC_FLAG_10MS:
   311  0380                            ds      1
   312                           
   313  0381                     _RTC_FLAG_1MS:
   314  0381                            ds      1
   315                           
   316  0382                     _RTC_FLAG_500MS:
   317  0382                            ds      1
   318                           
   319  0383                     _RTC_FLAG_50MS:
   320  0383                            ds      1
   321                           
   322  0384                     _frontWall:
   323  0384                            ds      1
   324                           
   325  0385                     _leftWall:
   326  0385                            ds      1
   327                           
   328  0386                     _rightWall:
   329  0386                            ds      1
   330                           
   331                           psect	bssCOMMON,class=COMMON,space=1
   332                           global __pbssCOMMON
   333  0077                     __pbssCOMMON:
   334  0077                     _currentOrientation:
   335  0077                            ds      1
   336                           
   337  0078                     _rxiptr:
   338  0078                            ds      1
   339                           
   340  0079                     _rxoptr:
   341  0079                            ds      1
   342                           
   343  007A                     _txiptr:
   344  007A                            ds      1
   345                           
   346  007B                     _txoptr:
   347  007B                            ds      1
   348                           
   349                           psect	bssBANK0,class=BANK0,space=1
   350                           global __pbssBANK0
   351  004D                     __pbssBANK0:
   352  004D                     _rxfifo:
   353  004D                            ds      16
   354                           
   355  005D                     _start:
   356  005D                            ds      3
   357                           
   358  0060                     _RTC_Counter:
   359  0060                            ds      2
   360                           
   361  0062                     _directionMoved:
   362  0062                            ds      1
   363                           
   364  0063                     _ser_tmp:
   365  0063                            ds      1
   366                           
   367  0064                     _yCoord:
   368  0064                            ds      1
   369                           
   370                           psect	dataBANK0,class=BANK0,space=1
   371                           global __pdataBANK0
   372  0065                     __pdataBANK0:
   373                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
   374  0065                     _xCoord:
   375  0065                            ds      1
   376                           
   377                           psect	bssBANK1,class=BANK1,space=1
   378                           global __pbssBANK1
   379  00A0                     __pbssBANK1:
   380  00A0                     _txfifo:
   381  00A0                            ds      16
   382                           
   383                           psect clrtext,class=CODE,delta=2
   384                           global clear_ram
   385                           ;	Called with FSR containing the base address, and
   386                           ;	W with the last address+1
   387  0E83                     clear_ram:
   388  0E83  0064               	clrwdt			;clear the watchdog before getting into this loop
   389  0E84                     clrloop:
   390  0E84  0180               	clrf	indf		;clear RAM location pointed to by FSR
   391  0E85  0A84               	incf	fsr,f		;increment pointer
   392  0E86  0604               	xorwf	fsr,w		;XOR with final address
   393  0E87  1903               	btfsc	status,2	;have we reached the end yet?
   394  0E88  3400               	retlw	0		;all done for this memory range, return
   395  0E89  0604               	xorwf	fsr,w		;XOR again to restore value
   396  0E8A  2E84               	goto	clrloop		;do the next byte
   397                           
   398                           ; Clear objects allocated to BITCOMMON
   399                           psect cinit,class=CODE,delta=2
   400  0F56  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   401                           ; Clear objects allocated to COMMON
   402                           psect cinit,class=CODE,delta=2
   403  0F57  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   404  0F58  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   405  0F59  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   406  0F5A  01FA               	clrf	((__pbssCOMMON)+3)&07Fh
   407  0F5B  01FB               	clrf	((__pbssCOMMON)+4)&07Fh
   408                           ; Clear objects allocated to BANK0
   409                           psect cinit,class=CODE,delta=2
   410  0F5C  1383               	bcf	status, 7	;select IRP bank0
   411  0F5D  304D               	movlw	low(__pbssBANK0)
   412  0F5E  0084               	movwf	fsr
   413  0F5F  3065               	movlw	low((__pbssBANK0)+018h)
   414  0F60  120A  158A  2683   	fcall	clear_ram
              120A  158A         
   415                           ; Clear objects allocated to BANK1
   416                           psect cinit,class=CODE,delta=2
   417  0F65  30A0               	movlw	low(__pbssBANK1)
   418  0F66  0084               	movwf	fsr
   419  0F67  30B0               	movlw	low((__pbssBANK1)+010h)
   420  0F68  120A  158A  2683   	fcall	clear_ram
              120A  158A         
   421                           ; Initialize objects allocated to BANK0
   422                           	global __pidataBANK0
   423                           psect cinit,class=CODE,delta=2
   424  0F6D  120A  118A  27FE   	fcall	__pidataBANK0+0		;fetch initializer
              120A  158A         
   425  0F72  00E5               	movwf	__pdataBANK0+0&07fh		
   426                           psect cinit,class=CODE,delta=2
   427                           global end_of_initialization
   428                           
   429                           ;End of C runtime variable initialization code
   430                           
   431  0F73                     end_of_initialization:
   432  0F73  0183               clrf status
   433  0F74  120A  158A  2FBB   ljmp _main	;jump to C main() function
   434                           psect	cstackBANK1,class=BANK1,space=1
   435                           global __pcstackBANK1
   436  00B0                     __pcstackBANK1:
   437                           	global	??_findWalls
   438  00B0                     ??_findWalls:	; 0 bytes @ 0x0
   439  00B0                     	ds	3
   440                           psect	cstackCOMMON,class=COMMON,space=1
   441                           global __pcstackCOMMON
   442  0071                     __pcstackCOMMON:
   443                           	global	?_ser_putch
   444  0071                     ?_ser_putch:	; 0 bytes @ 0x0
   445                           	global	?_ser_init
   446  0071                     ?_ser_init:	; 0 bytes @ 0x0
   447                           	global	?_initIRobot
   448  0071                     ?_initIRobot:	; 0 bytes @ 0x0
   449                           	global	?_rotateIR
   450  0071                     ?_rotateIR:	; 0 bytes @ 0x0
   451                           	global	?_goRight
   452  0071                     ?_goRight:	; 0 bytes @ 0x0
   453                           	global	?_updateLocation
   454  0071                     ?_updateLocation:	; 0 bytes @ 0x0
   455                           	global	?_init_adc
   456  0071                     ?_init_adc:	; 0 bytes @ 0x0
   457                           	global	?_turnAround
   458  0071                     ?_turnAround:	; 0 bytes @ 0x0
   459                           	global	?_turnLeft90
   460  0071                     ?_turnLeft90:	; 0 bytes @ 0x0
   461                           	global	?_turnRight90
   462  0071                     ?_turnRight90:	; 0 bytes @ 0x0
   463                           	global	?_lcd_write_control
   464  0071                     ?_lcd_write_control:	; 0 bytes @ 0x0
   465                           	global	?_lcd_write_data
   466  0071                     ?_lcd_write_data:	; 0 bytes @ 0x0
   467                           	global	?_lcd_set_cursor
   468  0071                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   469                           	global	?_lcd_write_string
   470  0071                     ?_lcd_write_string:	; 0 bytes @ 0x0
   471                           	global	?_lcd_write_1_digit_bcd
   472  0071                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
   473                           	global	?_lcd_init
   474  0071                     ?_lcd_init:	; 0 bytes @ 0x0
   475                           	global	?_isr1
   476  0071                     ?_isr1:	; 0 bytes @ 0x0
   477                           	global	?_init
   478  0071                     ?_init:	; 0 bytes @ 0x0
   479                           	global	?_findWall
   480  0071                     ?_findWall:	; 1 bit 
   481                           	global	?_findWalls
   482  0071                     ?_findWalls:	; 0 bytes @ 0x0
   483                           	global	?_goBackward
   484  0071                     ?_goBackward:	; 0 bytes @ 0x0
   485                           	global	?_goForward
   486  0071                     ?_goForward:	; 0 bytes @ 0x0
   487                           	global	?_goLeft
   488  0071                     ?_goLeft:	; 0 bytes @ 0x0
   489                           	global	?_goToNextCell
   490  0071                     ?_goToNextCell:	; 0 bytes @ 0x0
   491                           	global	?_run
   492  0071                     ?_run:	; 0 bytes @ 0x0
   493                           	global	?_main
   494  0071                     ?_main:	; 0 bytes @ 0x0
   495                           	global	?_ser_isrx
   496  0071                     ?_ser_isrx:	; 1 bit 
   497                           	global	?_ser_getch
   498  0071                     ?_ser_getch:	; 1 bytes @ 0x0
   499                           	global	?___lwmod
   500  0071                     ?___lwmod:	; 2 bytes @ 0x0
   501                           	global	___lwmod@divisor
   502  0071                     ___lwmod@divisor:	; 2 bytes @ 0x0
   503  0071                     	ds	2
   504                           	global	___lwmod@dividend
   505  0073                     ___lwmod@dividend:	; 2 bytes @ 0x2
   506  0073                     	ds	2
   507                           	global	??___lwmod
   508  0075                     ??___lwmod:	; 0 bytes @ 0x4
   509  0075                     	ds	1
   510                           	global	___lwmod@counter
   511  0076                     ___lwmod@counter:	; 1 bytes @ 0x5
   512  0076                     	ds	1
   513                           psect	cstackBANK0,class=BANK0,space=1
   514                           global __pcstackBANK0
   515  0020                     __pcstackBANK0:
   516                           	global	??_isr1
   517  0020                     ??_isr1:	; 0 bytes @ 0x0
   518  0020                     	ds	10
   519                           	global	??_ser_putch
   520  002A                     ??_ser_putch:	; 0 bytes @ 0xA
   521                           	global	??_ser_getch
   522  002A                     ??_ser_getch:	; 0 bytes @ 0xA
   523                           	global	??_ser_init
   524  002A                     ??_ser_init:	; 0 bytes @ 0xA
   525                           	global	??_rotateIR
   526  002A                     ??_rotateIR:	; 0 bytes @ 0xA
   527                           	global	??_init_adc
   528  002A                     ??_init_adc:	; 0 bytes @ 0xA
   529                           	global	??_lcd_write_control
   530  002A                     ??_lcd_write_control:	; 0 bytes @ 0xA
   531                           	global	??_lcd_write_data
   532  002A                     ??_lcd_write_data:	; 0 bytes @ 0xA
   533                           	global	??_ser_isrx
   534  002A                     ??_ser_isrx:	; 0 bytes @ 0xA
   535                           	global	?___wmul
   536  002A                     ?___wmul:	; 2 bytes @ 0xA
   537                           	global	___wmul@multiplier
   538  002A                     ___wmul@multiplier:	; 2 bytes @ 0xA
   539  002A                     	ds	1
   540                           	global	ser_getch@c
   541  002B                     ser_getch@c:	; 1 bytes @ 0xB
   542                           	global	ser_putch@c
   543  002B                     ser_putch@c:	; 1 bytes @ 0xB
   544  002B                     	ds	1
   545                           	global	?_waitFor
   546  002C                     ?_waitFor:	; 0 bytes @ 0xC
   547                           	global	??_initIRobot
   548  002C                     ??_initIRobot:	; 0 bytes @ 0xC
   549                           	global	?_drive
   550  002C                     ?_drive:	; 0 bytes @ 0xC
   551                           	global	drive@lowByteSpeed
   552  002C                     drive@lowByteSpeed:	; 1 bytes @ 0xC
   553                           	global	waitFor@highByte
   554  002C                     waitFor@highByte:	; 1 bytes @ 0xC
   555                           	global	lcd_write_control@databyte
   556  002C                     lcd_write_control@databyte:	; 1 bytes @ 0xC
   557                           	global	lcd_write_data@databyte
   558  002C                     lcd_write_data@databyte:	; 1 bytes @ 0xC
   559                           	global	___wmul@multiplicand
   560  002C                     ___wmul@multiplicand:	; 2 bytes @ 0xC
   561  002C                     	ds	1
   562                           	global	??_lcd_set_cursor
   563  002D                     ??_lcd_set_cursor:	; 0 bytes @ 0xD
   564                           	global	??_lcd_write_string
   565  002D                     ??_lcd_write_string:	; 0 bytes @ 0xD
   566                           	global	??_lcd_write_1_digit_bcd
   567  002D                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0xD
   568                           	global	??_lcd_init
   569  002D                     ??_lcd_init:	; 0 bytes @ 0xD
   570                           	global	drive@highByteRadius
   571  002D                     drive@highByteRadius:	; 1 bytes @ 0xD
   572                           	global	waitFor@lowByte
   573  002D                     waitFor@lowByte:	; 1 bytes @ 0xD
   574                           	global	lcd_set_cursor@address
   575  002D                     lcd_set_cursor@address:	; 1 bytes @ 0xD
   576                           	global	lcd_write_1_digit_bcd@data
   577  002D                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0xD
   578                           	global	rotateIR@steps
   579  002D                     rotateIR@steps:	; 1 bytes @ 0xD
   580  002D                     	ds	1
   581                           	global	??_waitFor
   582  002E                     ??_waitFor:	; 0 bytes @ 0xE
   583                           	global	??_updateLocation
   584  002E                     ??_updateLocation:	; 0 bytes @ 0xE
   585                           	global	??___wmul
   586  002E                     ??___wmul:	; 0 bytes @ 0xE
   587                           	global	drive@lowByteRadius
   588  002E                     drive@lowByteRadius:	; 1 bytes @ 0xE
   589                           	global	lcd_write_string@s
   590  002E                     lcd_write_string@s:	; 1 bytes @ 0xE
   591                           	global	rotateIR@stepNum
   592  002E                     rotateIR@stepNum:	; 1 bytes @ 0xE
   593                           	global	___wmul@product
   594  002E                     ___wmul@product:	; 2 bytes @ 0xE
   595  002E                     	ds	1
   596                           	global	??_drive
   597  002F                     ??_drive:	; 0 bytes @ 0xF
   598                           	global	??_init
   599  002F                     ??_init:	; 0 bytes @ 0xF
   600  002F                     	ds	1
   601                           	global	?___awdiv
   602  0030                     ?___awdiv:	; 2 bytes @ 0x10
   603                           	global	___awdiv@divisor
   604  0030                     ___awdiv@divisor:	; 2 bytes @ 0x10
   605  0030                     	ds	1
   606                           	global	waitFor@type
   607  0031                     waitFor@type:	; 1 bytes @ 0x11
   608  0031                     	ds	1
   609                           	global	drive@highByteSpeed
   610  0032                     drive@highByteSpeed:	; 1 bytes @ 0x12
   611                           	global	___awdiv@dividend
   612  0032                     ___awdiv@dividend:	; 2 bytes @ 0x12
   613  0032                     	ds	1
   614                           	global	?_driveForDistance
   615  0033                     ?_driveForDistance:	; 0 bytes @ 0x13
   616                           	global	??_turnAround
   617  0033                     ??_turnAround:	; 0 bytes @ 0x13
   618                           	global	??_turnLeft90
   619  0033                     ??_turnLeft90:	; 0 bytes @ 0x13
   620                           	global	??_turnRight90
   621  0033                     ??_turnRight90:	; 0 bytes @ 0x13
   622                           	global	driveForDistance@moveDistance
   623  0033                     driveForDistance@moveDistance:	; 2 bytes @ 0x13
   624  0033                     	ds	1
   625                           	global	??___awdiv
   626  0034                     ??___awdiv:	; 0 bytes @ 0x14
   627  0034                     	ds	1
   628                           	global	??_driveForDistance
   629  0035                     ??_driveForDistance:	; 0 bytes @ 0x15
   630                           	global	___awdiv@counter
   631  0035                     ___awdiv@counter:	; 1 bytes @ 0x15
   632  0035                     	ds	1
   633                           	global	___awdiv@sign
   634  0036                     ___awdiv@sign:	; 1 bytes @ 0x16
   635  0036                     	ds	1
   636                           	global	driveForDistance@deltaDistance
   637  0037                     driveForDistance@deltaDistance:	; 2 bytes @ 0x17
   638                           	global	___awdiv@quotient
   639  0037                     ___awdiv@quotient:	; 2 bytes @ 0x17
   640  0037                     	ds	2
   641                           	global	?_adc_read
   642  0039                     ?_adc_read:	; 2 bytes @ 0x19
   643                           	global	driveForDistance@distance
   644  0039                     driveForDistance@distance:	; 2 bytes @ 0x19
   645  0039                     	ds	2
   646                           	global	??_adc_read
   647  003B                     ??_adc_read:	; 0 bytes @ 0x1B
   648                           	global	driveForDistance@high
   649  003B                     driveForDistance@high:	; 1 bytes @ 0x1B
   650  003B                     	ds	1
   651                           	global	driveForDistance@low
   652  003C                     driveForDistance@low:	; 1 bytes @ 0x1C
   653  003C                     	ds	1
   654                           	global	??_goRight
   655  003D                     ??_goRight:	; 0 bytes @ 0x1D
   656                           	global	??_goBackward
   657  003D                     ??_goBackward:	; 0 bytes @ 0x1D
   658                           	global	??_goForward
   659  003D                     ??_goForward:	; 0 bytes @ 0x1D
   660                           	global	??_goLeft
   661  003D                     ??_goLeft:	; 0 bytes @ 0x1D
   662  003D                     	ds	2
   663                           	global	adc_read@adc_value
   664  003F                     adc_read@adc_value:	; 2 bytes @ 0x1F
   665  003F                     	ds	2
   666                           	global	?_convert
   667  0041                     ?_convert:	; 2 bytes @ 0x21
   668                           	global	convert@adc_value
   669  0041                     convert@adc_value:	; 2 bytes @ 0x21
   670  0041                     	ds	2
   671                           	global	??_convert
   672  0043                     ??_convert:	; 0 bytes @ 0x23
   673  0043                     	ds	2
   674                           	global	?_adc_read_channel
   675  0045                     ?_adc_read_channel:	; 2 bytes @ 0x25
   676  0045                     	ds	2
   677                           	global	??_adc_read_channel
   678  0047                     ??_adc_read_channel:	; 0 bytes @ 0x27
   679  0047                     	ds	1
   680                           	global	adc_read_channel@channel
   681  0048                     adc_read_channel@channel:	; 1 bytes @ 0x28
   682  0048                     	ds	1
   683                           	global	?_readIR
   684  0049                     ?_readIR:	; 2 bytes @ 0x29
   685  0049                     	ds	2
   686                           	global	??_readIR
   687  004B                     ??_readIR:	; 0 bytes @ 0x2B
   688                           	global	readIR@cm
   689  004B                     readIR@cm:	; 2 bytes @ 0x2B
   690  004B                     	ds	2
   691                           	global	??_findWall
   692  004D                     ??_findWall:	; 0 bytes @ 0x2D
   693                           	global	??_goToNextCell
   694  004D                     ??_goToNextCell:	; 0 bytes @ 0x2D
   695                           	global	??_run
   696  004D                     ??_run:	; 0 bytes @ 0x2D
   697                           	global	??_main
   698  004D                     ??_main:	; 0 bytes @ 0x2D
   699 ;;Data sizes: Strings 34, constant 0, data 1, bss 45, persistent 0 stack 0
   700 ;;Auto spaces:   Size  Autos    Used
   701 ;; COMMON          14      6      12
   702 ;; BANK0           80     45      70
   703 ;; BANK1           80      3      19
   704 ;; BANK3           96      0       0
   705 ;; BANK2           96      0       0
   706                           
   707 ;;
   708 ;; Pointer list with targets:
   709                           
   710 ;; ?_readIR	int  size(1) Largest target is 0
   711 ;;
   712 ;; ?_convert	int  size(1) Largest target is 2
   713 ;;		 -> convert@adc_value(BANK0[2]), 
   714 ;;
   715 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   716 ;;
   717 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   718 ;;
   719 ;; ?_adc_read	int  size(1) Largest target is 0
   720 ;;
   721 ;; ?___awdiv	int  size(1) Largest target is 0
   722 ;;
   723 ;; ?_adc_read_channel	int  size(1) Largest target is 0
   724 ;;
   725 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 17
   726 ;;		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
   727 ;;
   728                           
   729                           
   730 ;;
   731 ;; Critical Paths under _main in COMMON
   732 ;;
   733 ;;   None.
   734 ;;
   735 ;; Critical Paths under _isr1 in COMMON
   736 ;;
   737 ;;   _isr1->___lwmod
   738 ;;
   739 ;; Critical Paths under _main in BANK0
   740 ;;
   741 ;;   _findWall->_readIR
   742 ;;   _updateLocation->_lcd_set_cursor
   743 ;;   _updateLocation->_lcd_write_1_digit_bcd
   744 ;;   _goRight->_driveForDistance
   745 ;;   _goLeft->_driveForDistance
   746 ;;   _goForward->_driveForDistance
   747 ;;   _goBackward->_driveForDistance
   748 ;;   _readIR->_adc_read_channel
   749 ;;   _init->_initIRobot
   750 ;;   _lcd_init->_lcd_write_control
   751 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
   752 ;;   _lcd_write_string->_lcd_write_data
   753 ;;   _lcd_set_cursor->_lcd_write_control
   754 ;;   _turnRight90->_drive
   755 ;;   _turnLeft90->_drive
   756 ;;   _turnAround->_drive
   757 ;;   _driveForDistance->_drive
   758 ;;   _adc_read_channel->_convert
   759 ;;   _convert->_adc_read
   760 ;;   _initIRobot->_ser_putch
   761 ;;   _waitFor->_ser_putch
   762 ;;   _drive->_ser_putch
   763 ;;   _adc_read->___awdiv
   764 ;;   ___awdiv->___wmul
   765 ;;
   766 ;; Critical Paths under _isr1 in BANK0
   767 ;;
   768 ;;   None.
   769 ;;
   770 ;; Critical Paths under _main in BANK1
   771 ;;
   772 ;;   _goToNextCell->_findWalls
   773 ;;
   774 ;; Critical Paths under _isr1 in BANK1
   775 ;;
   776 ;;   None.
   777 ;;
   778 ;; Critical Paths under _main in BANK3
   779 ;;
   780 ;;   None.
   781 ;;
   782 ;; Critical Paths under _isr1 in BANK3
   783 ;;
   784 ;;   None.
   785 ;;
   786 ;; Critical Paths under _main in BANK2
   787 ;;
   788 ;;   None.
   789 ;;
   790 ;; Critical Paths under _isr1 in BANK2
   791 ;;
   792 ;;   None.
   793                           
   794 ;;
   795 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   796 ;;
   797                           
   798 ;;
   799 ;;Call Graph Tables:
   800 ;;
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   803 ;; ---------------------------------------------------------------------------------
   804 ;; (0) _main                                                 0     0      0    4646
   805 ;;                               _init
   806 ;;                              _drive
   807 ;;                                _run
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _run                                                  0     0      0    4429
   810 ;;                     _lcd_set_cursor
   811 ;;                   _lcd_write_string
   812 ;;                       _goToNextCell
   813 ;;                     _updateLocation
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (2) _goToNextCell                                         0     0      0    4110
   816 ;;                          _findWalls
   817 ;;                            _goRight
   818 ;;                          _goForward
   819 ;;                             _goLeft
   820 ;;                         _goBackward
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (3) _findWalls                                            3     3      0    1317
   823 ;;                                              0 BANK1      3     3      0
   824 ;;                           _findWall
   825 ;;                           _rotateIR
   826 ;;                     _lcd_write_data
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (4) _findWall                                             0     0      0    1218
   829 ;;                             _readIR
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (2) _updateLocation                                       1     1      0     158
   832 ;;                                             14 BANK0      1     1      0
   833 ;;                     _lcd_set_cursor
   834 ;;                     _lcd_write_data
   835 ;;              _lcd_write_1_digit_bcd
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (3) _goRight                                              1     1      0     768
   838 ;;                                             29 BANK0      1     1      0
   839 ;;                        _turnRight90
   840 ;;                   _driveForDistance
   841 ;;                     _lcd_set_cursor
   842 ;;                     _lcd_write_data
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (3) _goLeft                                               0     0      0     768
   845 ;;                         _turnLeft90
   846 ;;                   _driveForDistance
   847 ;;                     _lcd_set_cursor
   848 ;;                     _lcd_write_data
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (3) _goForward                                            0     0      0     489
   851 ;;                   _driveForDistance
   852 ;;                     _lcd_set_cursor
   853 ;;                     _lcd_write_data
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (3) _goBackward                                           1     1      0     768
   856 ;;                                             29 BANK0      1     1      0
   857 ;;                         _turnAround
   858 ;;                   _driveForDistance
   859 ;;                     _lcd_set_cursor
   860 ;;                     _lcd_write_data
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (5) _readIR                                               4     2      2    1218
   863 ;;                                             41 BANK0      4     2      2
   864 ;;                   _adc_read_channel
   865 ;;                            _convert
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _init                                                 0     0      0      62
   868 ;;                           _init_adc
   869 ;;                           _lcd_init
   870 ;;                           _ser_init
   871 ;;                         _initIRobot
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (2) _lcd_init                                             0     0      0      31
   874 ;;                  _lcd_write_control
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (3) _lcd_write_1_digit_bcd                                1     1      0      62
   877 ;;                                             13 BANK0      1     1      0
   878 ;;                     _lcd_write_data
   879 ;; ---------------------------------------------------------------------------------
   880 ;; (2) _lcd_write_string                                     2     2      0      96
   881 ;;                                             13 BANK0      2     2      0
   882 ;;                     _lcd_write_data
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (3) _lcd_set_cursor                                       1     1      0      65
   885 ;;                                             13 BANK0      1     1      0
   886 ;;                  _lcd_write_control
   887 ;; ---------------------------------------------------------------------------------
   888 ;; (4) _turnRight90                                          3     3      0     279
   889 ;;                                             19 BANK0      3     3      0
   890 ;;                              _drive
   891 ;;                            _waitFor
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (4) _turnLeft90                                           1     1      0     279
   894 ;;                                             19 BANK0      1     1      0
   895 ;;                              _drive
   896 ;;                            _waitFor
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (4) _turnAround                                           1     1      0     279
   899 ;;                                             19 BANK0      1     1      0
   900 ;;                              _drive
   901 ;;                            _waitFor
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (4) _driveForDistance                                    10     8      2     393
   904 ;;                                             19 BANK0     10     8      2
   905 ;;                              _drive
   906 ;;                          _ser_putch
   907 ;;                          _ser_getch
   908 ;; ---------------------------------------------------------------------------------
   909 ;; (6) _adc_read_channel                                     4     2      2     345
   910 ;;                                             37 BANK0      4     2      2
   911 ;;                           _adc_read
   912 ;;                            _convert (ARG)
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (6) _convert                                              4     2      2     839
   915 ;;                                             33 BANK0      4     2      2
   916 ;;                             ___wmul
   917 ;;                            ___awdiv
   918 ;;                           _adc_read (ARG)
   919 ;; ---------------------------------------------------------------------------------
   920 ;; (4) _rotateIR                                             5     5      0      68
   921 ;;                                             10 BANK0      5     5      0
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (2) _initIRobot                                           3     3      0      31
   924 ;;                                             12 BANK0      3     3      0
   925 ;;                          _ser_putch
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (4) _lcd_write_data                                       3     3      0      31
   928 ;;                                             10 BANK0      3     3      0
   929 ;; ---------------------------------------------------------------------------------
   930 ;; (4) _lcd_write_control                                    3     3      0      31
   931 ;;                                             10 BANK0      3     3      0
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (5) _waitFor                                              6     4      2     124
   934 ;;                                             12 BANK0      6     4      2
   935 ;;                          _ser_putch
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (5) _ser_getch                                            2     2      0      34
   938 ;;                                             10 BANK0      2     2      0
   939 ;;                           _ser_isrx
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (5) _drive                                                7     4      3     155
   942 ;;                                             12 BANK0      7     4      3
   943 ;;                          _ser_putch
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) _init_adc                                             1     1      0       0
   946 ;;                                             10 BANK0      1     1      0
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (7) _adc_read                                             8     6      2     323
   949 ;;                                             25 BANK0      8     6      2
   950 ;;                            ___awdiv
   951 ;; ---------------------------------------------------------------------------------
   952 ;; (7) ___awdiv                                              9     5      4     300
   953 ;;                                             16 BANK0      9     5      4
   954 ;;                             ___wmul (ARG)
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (7) ___wmul                                               6     2      4     136
   957 ;;                                             10 BANK0      6     2      4
   958 ;; ---------------------------------------------------------------------------------
   959 ;; (6) _ser_isrx                                             0     0      0       0
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (2) _ser_init                                             1     1      0       0
   962 ;;                                             10 BANK0      1     1      0
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (5) _ser_putch                                            2     2      0      31
   965 ;;                                             10 BANK0      2     2      0
   966 ;; ---------------------------------------------------------------------------------
   967 ;; Estimated maximum stack depth 7
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   970 ;; ---------------------------------------------------------------------------------
   971 ;; (9) _isr1                                                10    10      0     159
   972 ;;                                              0 BANK0     10    10      0
   973 ;;                            ___lwmod
   974 ;; ---------------------------------------------------------------------------------
   975 ;; (10) ___lwmod                                             6     2      4     159
   976 ;;                                              0 COMMON     6     2      4
   977 ;; ---------------------------------------------------------------------------------
   978 ;; Estimated maximum stack depth 10
   979 ;; ---------------------------------------------------------------------------------
   980                           
   981 ;; Call Graph Graphs:
   982                           
   983 ;; _main (ROOT)
   984 ;;   _init
   985 ;;     _init_adc
   986 ;;     _lcd_init
   987 ;;       _lcd_write_control
   988 ;;     _ser_init
   989 ;;     _initIRobot
   990 ;;       _ser_putch
   991 ;;   _drive
   992 ;;     _ser_putch
   993 ;;   _run
   994 ;;     _lcd_set_cursor
   995 ;;       _lcd_write_control
   996 ;;     _lcd_write_string
   997 ;;       _lcd_write_data
   998 ;;     _goToNextCell
   999 ;;       _findWalls
  1000 ;;         _findWall
  1001 ;;           _readIR
  1002 ;;             _adc_read_channel
  1003 ;;               _adc_read
  1004 ;;                 ___awdiv
  1005 ;;                   ___wmul (ARG)
  1006 ;;               _convert (ARG)
  1007 ;;                 ___wmul
  1008 ;;                 ___awdiv
  1009 ;;                   ___wmul (ARG)
  1010 ;;                 _adc_read (ARG)
  1011 ;;                   ___awdiv
  1012 ;;                     ___wmul (ARG)
  1013 ;;             _convert
  1014 ;;               ___wmul
  1015 ;;               ___awdiv
  1016 ;;                 ___wmul (ARG)
  1017 ;;               _adc_read (ARG)
  1018 ;;                 ___awdiv
  1019 ;;                   ___wmul (ARG)
  1020 ;;         _rotateIR
  1021 ;;         _lcd_write_data
  1022 ;;       _goRight
  1023 ;;         _turnRight90
  1024 ;;           _drive
  1025 ;;             _ser_putch
  1026 ;;           _waitFor
  1027 ;;             _ser_putch
  1028 ;;         _driveForDistance
  1029 ;;           _drive
  1030 ;;             _ser_putch
  1031 ;;           _ser_putch
  1032 ;;           _ser_getch
  1033 ;;             _ser_isrx
  1034 ;;         _lcd_set_cursor
  1035 ;;           _lcd_write_control
  1036 ;;         _lcd_write_data
  1037 ;;       _goForward
  1038 ;;         _driveForDistance
  1039 ;;           _drive
  1040 ;;             _ser_putch
  1041 ;;           _ser_putch
  1042 ;;           _ser_getch
  1043 ;;             _ser_isrx
  1044 ;;         _lcd_set_cursor
  1045 ;;           _lcd_write_control
  1046 ;;         _lcd_write_data
  1047 ;;       _goLeft
  1048 ;;         _turnLeft90
  1049 ;;           _drive
  1050 ;;             _ser_putch
  1051 ;;           _waitFor
  1052 ;;             _ser_putch
  1053 ;;         _driveForDistance
  1054 ;;           _drive
  1055 ;;             _ser_putch
  1056 ;;           _ser_putch
  1057 ;;           _ser_getch
  1058 ;;             _ser_isrx
  1059 ;;         _lcd_set_cursor
  1060 ;;           _lcd_write_control
  1061 ;;         _lcd_write_data
  1062 ;;       _goBackward
  1063 ;;         _turnAround
  1064 ;;           _drive
  1065 ;;             _ser_putch
  1066 ;;           _waitFor
  1067 ;;             _ser_putch
  1068 ;;         _driveForDistance
  1069 ;;           _drive
  1070 ;;             _ser_putch
  1071 ;;           _ser_putch
  1072 ;;           _ser_getch
  1073 ;;             _ser_isrx
  1074 ;;         _lcd_set_cursor
  1075 ;;           _lcd_write_control
  1076 ;;         _lcd_write_data
  1077 ;;     _updateLocation
  1078 ;;       _lcd_set_cursor
  1079 ;;         _lcd_write_control
  1080 ;;       _lcd_write_data
  1081 ;;       _lcd_write_1_digit_bcd
  1082 ;;         _lcd_write_data
  1083 ;;
  1084 ;; _isr1 (ROOT)
  1085 ;;   ___lwmod
  1086 ;;
  1087                           
  1088 ;; Address spaces:
  1089                           
  1090 ;;Name               Size   Autos  Total    Cost      Usage
  1091 ;;BANK3               60      0       0       9        0.0%
  1092 ;;BITBANK3            60      0       0       8        0.0%
  1093 ;;SFR3                 0      0       0       4        0.0%
  1094 ;;BITSFR3              0      0       0       4        0.0%
  1095 ;;BANK2               60      0       0      11        0.0%
  1096 ;;BITBANK2            60      0       0      10        0.0%
  1097 ;;SFR2                 0      0       0       5        0.0%
  1098 ;;BITSFR2              0      0       0       5        0.0%
  1099 ;;SFR1                 0      0       0       2        0.0%
  1100 ;;BITSFR1              0      0       0       2        0.0%
  1101 ;;BANK1               50      3      13       7       23.8%
  1102 ;;BITBANK1            50      0       0       6        0.0%
  1103 ;;CODE                 0      0       0       0        0.0%
  1104 ;;DATA                 0      0      71      12        0.0%
  1105 ;;ABS                  0      0      65       3        0.0%
  1106 ;;NULL                 0      0       0       0        0.0%
  1107 ;;STACK                0      0       C       2        0.0%
  1108 ;;BANK0               50     2D      46       5       87.5%
  1109 ;;BITBANK0            50      0       0       4        0.0%
  1110 ;;SFR0                 0      0       0       1        0.0%
  1111 ;;BITSFR0              0      0       0       1        0.0%
  1112 ;;COMMON               E      6       C       1       85.7%
  1113 ;;BITCOMMON            E      0       1       0        7.1%
  1114 ;;EEDATA             100      0       0       0        0.0%
  1115                           
  1116                           	global	_main
  1117                           psect	maintext,global,class=CODE,delta=2
  1118                           global __pmaintext
  1119  0FBB                     __pmaintext:
  1120                           
  1121 ;; *************** function _main *****************
  1122 ;; Defined at:
  1123 ;;		line 273 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;		None               void
  1130 ;; Registers used:
  1131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 17F/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels required when called:   10
  1143 ;; This function calls:
  1144 ;;		_init
  1145 ;;		_drive
  1146 ;;		_run
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           psect	maintext
  1152                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  1153                           	line	273
  1154                           	global	__size_of_main
  1155  0022                     	__size_of_main	equ	__end_of_main-_main
  1156                           	
  1157  0FBB                     _main:	
  1158 ;; hardware stack exceeded
  1159                           	opt	stack 0
  1160                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1161                           	line	274
  1162                           	
  1163  0FBB                     l8316:	
  1164                           ;main.c: 274: init();
  1165  0FBB  120A  118A  2589   	fcall	_init
              120A  158A         
  1166                           	line	275
  1167                           ;main.c: 275: drive(0, 0, 0, 0);
  1168  0FC0  1283               	bcf	status, 5	;RP0=0, select bank0
  1169  0FC1  1303               	bcf	status, 6	;RP1=0, select bank0
  1170  0FC2  01AC               	clrf	(?_drive)
  1171  0FC3  01AD               	clrf	0+(?_drive)+01h
  1172  0FC4  01AE               	clrf	0+(?_drive)+02h
  1173  0FC5  3000               	movlw	(0)
  1174  0FC6  120A  118A  2552   	fcall	_drive
              120A  158A         
  1175  0FCB  2FCC               	goto	l8318
  1176                           	line	276
  1177                           ;main.c: 276: while(1)
  1178                           	
  1179  0FCC                     l2969:	
  1180                           	line	278
  1181                           	
  1182  0FCC                     l8318:	
  1183                           ;main.c: 277: {
  1184                           ;main.c: 278: if(start.pressed)
  1185  0FCC  1283               	bcf	status, 5	;RP0=0, select bank0
  1186  0FCD  1303               	bcf	status, 6	;RP1=0, select bank0
  1187  0FCE  085D               	movf	(_start),w
  1188  0FCF  1D03               	skipz
  1189  0FD0  2FD2               	goto	u3790
  1190  0FD1  2FCC               	goto	l8318
  1191  0FD2                     u3790:
  1192                           	line	279
  1193                           	
  1194  0FD2                     l8320:	
  1195                           ;main.c: 279: run();
  1196  0FD2  120A  158A  2715   	fcall	_run
              120A  158A         
  1197  0FD7  2FCC               	goto	l8318
  1198                           	
  1199  0FD8                     l2970:	
  1200  0FD8  2FCC               	goto	l8318
  1201                           	line	280
  1202                           	
  1203  0FD9                     l2971:	
  1204                           	line	276
  1205  0FD9  2FCC               	goto	l8318
  1206                           	
  1207  0FDA                     l2972:	
  1208                           	line	281
  1209                           	
  1210  0FDA                     l2973:	
  1211                           	global	start
  1212  0FDA  120A  118A  2812   	ljmp	start
  1213                           	opt stack 0
  1214                           GLOBAL	__end_of_main
  1215  0FDD                     	__end_of_main:
  1216 ;; =============== function _main ends ============
  1217                           
  1218                           	signat	_main,88
  1219                           	global	_run
  1220                           psect	text1218,local,class=CODE,delta=2
  1221                           global __ptext1218
  1222  0F15                     __ptext1218:
  1223                           
  1224 ;; *************** function _run *****************
  1225 ;; Defined at:
  1226 ;;		line 223 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;		None               void
  1233 ;; Registers used:
  1234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    9
  1247 ;; This function calls:
  1248 ;;		_lcd_set_cursor
  1249 ;;		_lcd_write_string
  1250 ;;		_goToNextCell
  1251 ;;		_updateLocation
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           psect	text1218
  1257                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  1258                           	line	223
  1259                           	global	__size_of_run
  1260  0020                     	__size_of_run	equ	__end_of_run-_run
  1261                           	
  1262  0F15                     _run:	
  1263 ;; hardware stack exceeded
  1264                           	opt	stack 0
  1265                           ; Regs used in _run: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1266                           	line	224
  1267                           	
  1268  0F15                     l8306:	
  1269                           ;main.c: 224: lcd_set_cursor(0x00);
  1270  0F15  3000               	movlw	(0)
  1271  0F16  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  158A         
  1272                           	line	225
  1273                           	
  1274  0F1B                     l8308:	
  1275                           ;main.c: 225: lcd_write_string("Walls@ R L (1,0)");
  1276  0F1B  3001               	movlw	((STR_1-__stringbase))&0ffh
  1277  0F1C  120A  118A  2777   	fcall	_lcd_write_string
              120A  158A         
  1278                           	line	226
  1279                           	
  1280  0F21                     l8310:	
  1281                           ;main.c: 226: lcd_write_string("cuOr: W dirMo: -");
  1282  0F21  3012               	movlw	((STR_2-__stringbase))&0ffh
  1283  0F22  120A  118A  2777   	fcall	_lcd_write_string
              120A  158A         
  1284  0F27  2F28               	goto	l8312
  1285                           	line	227
  1286                           ;main.c: 227: while(1)
  1287                           	
  1288  0F28                     l2952:	
  1289                           	line	229
  1290                           	
  1291  0F28                     l8312:	
  1292                           ;main.c: 228: {
  1293                           ;main.c: 229: goToNextCell();
  1294  0F28  120A  118A  25EA   	fcall	_goToNextCell
              120A  158A         
  1295                           	line	230
  1296                           	
  1297  0F2D                     l8314:	
  1298                           ;main.c: 230: updateLocation();
  1299  0F2D  120A  118A  23B3   	fcall	_updateLocation
              120A  158A         
  1300  0F32  2F28               	goto	l8312
  1301                           	line	232
  1302                           	
  1303  0F33                     l2953:	
  1304                           	line	227
  1305  0F33  2F28               	goto	l8312
  1306                           	
  1307  0F34                     l2954:	
  1308                           	line	233
  1309                           	
  1310  0F34                     l2955:	
  1311  0F34  0008               	return
  1312                           	opt stack 0
  1313                           GLOBAL	__end_of_run
  1314  0F35                     	__end_of_run:
  1315 ;; =============== function _run ends ============
  1316                           
  1317                           	signat	_run,88
  1318                           	global	_goToNextCell
  1319                           psect	text1219,local,class=CODE,delta=2
  1320                           global __ptext1219
  1321  05EA                     __ptext1219:
  1322                           
  1323 ;; *************** function _goToNextCell *****************
  1324 ;; Defined at:
  1325 ;;		line 200 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;		None               void
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    8
  1346 ;; This function calls:
  1347 ;;		_findWalls
  1348 ;;		_goRight
  1349 ;;		_goForward
  1350 ;;		_goLeft
  1351 ;;		_goBackward
  1352 ;; This function is called by:
  1353 ;;		_run
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           psect	text1219
  1357                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  1358                           	line	200
  1359                           	global	__size_of_goToNextCell
  1360  002C                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  1361                           	
  1362  05EA                     _goToNextCell:	
  1363 ;; hardware stack exceeded
  1364                           	opt	stack 0
  1365                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1366                           	line	201
  1367                           	
  1368  05EA                     l8294:	
  1369                           ;main.c: 201: findWalls();
  1370  05EA  120A  118A  22BA   	fcall	_findWalls
              120A  118A         
  1371                           	line	202
  1372                           	
  1373  05EF                     l8296:	
  1374                           ;main.c: 202: if(!rightWall)
  1375  05EF  1B70               	btfsc	(_rightWall/8),(_rightWall)&7
  1376  05F0  2DF2               	goto	u3761
  1377  05F1  2DF3               	goto	u3760
  1378  05F2                     u3761:
  1379  05F2  2DF9               	goto	l2940
  1380  05F3                     u3760:
  1381                           	line	203
  1382                           	
  1383  05F3                     l8298:	
  1384                           ;main.c: 203: goRight();
  1385  05F3  120A  118A  279C   	fcall	_goRight
              120A  118A         
  1386  05F8  2E15               	goto	l2946
  1387                           	line	204
  1388                           	
  1389  05F9                     l2940:	
  1390                           ;main.c: 204: else if(!frontWall)
  1391  05F9  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  1392  05FA  2DFC               	goto	u3771
  1393  05FB  2DFD               	goto	u3770
  1394  05FC                     u3771:
  1395  05FC  2E03               	goto	l2942
  1396  05FD                     u3770:
  1397                           	line	205
  1398                           	
  1399  05FD                     l8300:	
  1400                           ;main.c: 205: goForward();
  1401  05FD  120A  158A  26DE   	fcall	_goForward
              120A  118A         
  1402  0602  2E15               	goto	l2946
  1403                           	line	206
  1404                           	
  1405  0603                     l2942:	
  1406                           ;main.c: 206: else if(!leftWall)
  1407  0603  1AF0               	btfsc	(_leftWall/8),(_leftWall)&7
  1408  0604  2E06               	goto	u3781
  1409  0605  2E07               	goto	u3780
  1410  0606                     u3781:
  1411  0606  2E0D               	goto	l8304
  1412  0607                     u3780:
  1413                           	line	207
  1414                           	
  1415  0607                     l8302:	
  1416                           ;main.c: 207: goLeft();
  1417  0607  120A  158A  2799   	fcall	_goLeft
              120A  118A         
  1418  060C  2E15               	goto	l2946
  1419                           	line	208
  1420                           	
  1421  060D                     l2944:	
  1422                           	line	209
  1423                           	
  1424  060D                     l8304:	
  1425                           ;main.c: 208: else
  1426                           ;main.c: 209: goBackward();
  1427  060D  120A  118A  27BF   	fcall	_goBackward
              120A  118A         
  1428  0612  2E15               	goto	l2946
  1429                           	
  1430  0613                     l2945:	
  1431  0613  2E15               	goto	l2946
  1432                           	
  1433  0614                     l2943:	
  1434  0614  2E15               	goto	l2946
  1435                           	
  1436  0615                     l2941:	
  1437                           	line	210
  1438                           	
  1439  0615                     l2946:	
  1440  0615  0008               	return
  1441                           	opt stack 0
  1442                           GLOBAL	__end_of_goToNextCell
  1443  0616                     	__end_of_goToNextCell:
  1444 ;; =============== function _goToNextCell ends ============
  1445                           
  1446                           	signat	_goToNextCell,88
  1447                           	global	_findWalls
  1448                           psect	text1220,local,class=CODE,delta=2
  1449                           global __ptext1220
  1450  02BA                     __ptext1220:
  1451                           
  1452 ;; *************** function _findWalls *****************
  1453 ;; Defined at:
  1454 ;;		line 137 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          0       0       3       0       0
  1471 ;;      Totals:         0       0       3       0       0
  1472 ;;Total ram usage:        3 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    7
  1475 ;; This function calls:
  1476 ;;		_findWall
  1477 ;;		_rotateIR
  1478 ;;		_lcd_write_data
  1479 ;; This function is called by:
  1480 ;;		_goToNextCell
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           psect	text1220
  1484                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  1485                           	line	137
  1486                           	global	__size_of_findWalls
  1487  0083                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  1488                           	
  1489  02BA                     _findWalls:	
  1490 ;; hardware stack exceeded
  1491                           	opt	stack 0
  1492                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1493                           	line	138
  1494                           	
  1495  02BA                     l8258:	
  1496                           ;main.c: 138: PORTC |= 0b00000011;
  1497  02BA  3003               	movlw	(03h)
  1498  02BB  1683               	bsf	status, 5	;RP0=1, select bank1
  1499  02BC  1303               	bcf	status, 6	;RP1=0, select bank1
  1500  02BD  00B0               	movwf	(??_findWalls+0)^080h+0
  1501  02BE  0830               	movf	(??_findWalls+0)^080h+0,w
  1502  02BF  1283               	bcf	status, 5	;RP0=0, select bank0
  1503  02C0  1303               	bcf	status, 6	;RP1=0, select bank0
  1504  02C1  0487               	iorwf	(7),f	;volatile
  1505                           	line	139
  1506                           	
  1507  02C2                     l8260:	
  1508                           ;main.c: 139: SSPBUF = 0b00001111;
  1509  02C2  300F               	movlw	(0Fh)
  1510  02C3  0093               	movwf	(19)	;volatile
  1511                           	line	140
  1512                           	
  1513  02C4                     l8262:	
  1514                           ;main.c: 140: _delay((unsigned long)((200)*(20000000/4000.0)));
  1515                           	opt asmopt_off
  1516  02C4  3006               movlw  6
  1517  02C5  1683               	bsf	status, 5	;RP0=1, select bank1
  1518  02C6  1303               	bcf	status, 6	;RP1=0, select bank1
  1519  02C7  00B2               movwf	((??_findWalls+0)^080h+0+2),f
  1520  02C8  3013               movlw	19
  1521  02C9  00B1               movwf	((??_findWalls+0)^080h+0+1),f
  1522  02CA  30B1               	movlw	177
  1523  02CB  00B0               movwf	((??_findWalls+0)^080h+0),f
  1524  02CC                     u3807:
  1525  02CC  0BB0               	decfsz	((??_findWalls+0)^080h+0),f
  1526  02CD  2ACC               	goto	u3807
  1527  02CE  0BB1               	decfsz	((??_findWalls+0)^080h+0+1),f
  1528  02CF  2ACC               	goto	u3807
  1529  02D0  0BB2               	decfsz	((??_findWalls+0)^080h+0+2),f
  1530  02D1  2ACC               	goto	u3807
  1531  02D2  2AD3               	nop2
  1532                           opt asmopt_on
  1533                           
  1534                           	line	142
  1535                           	
  1536  02D3                     l8264:	
  1537                           ;main.c: 142: frontWall = findWall();
  1538  02D3  120A  118A  27E2   	fcall	_findWall
              120A  118A         
  1539  02D8  1803               	btfsc	status,0
  1540  02D9  2ADB               	goto	u3671
  1541  02DA  2ADD               	goto	u3670
  1542                           	
  1543  02DB                     u3671:
  1544  02DB  1670               	bsf	(_frontWall/8),(_frontWall)&7
  1545  02DC  2ADE               	goto	u3684
  1546  02DD                     u3670:
  1547  02DD  1270               	bcf	(_frontWall/8),(_frontWall)&7
  1548  02DE                     u3684:
  1549                           	line	143
  1550                           	
  1551  02DE                     l8266:	
  1552                           ;main.c: 143: rotateIR(24);
  1553  02DE  3018               	movlw	(018h)
  1554  02DF  120A  118A  2750   	fcall	_rotateIR
              120A  118A         
  1555                           	line	144
  1556                           	
  1557  02E4                     l8268:	
  1558                           ;main.c: 144: rightWall = findWall();
  1559  02E4  120A  118A  27E2   	fcall	_findWall
              120A  118A         
  1560  02E9  1803               	btfsc	status,0
  1561  02EA  2AEC               	goto	u3691
  1562  02EB  2AEE               	goto	u3690
  1563                           	
  1564  02EC                     u3691:
  1565  02EC  1770               	bsf	(_rightWall/8),(_rightWall)&7
  1566  02ED  2AEF               	goto	u3704
  1567  02EE                     u3690:
  1568  02EE  1370               	bcf	(_rightWall/8),(_rightWall)&7
  1569  02EF                     u3704:
  1570                           	line	145
  1571                           	
  1572  02EF                     l8270:	
  1573                           ;main.c: 145: rotateIR(48);
  1574  02EF  3030               	movlw	(030h)
  1575  02F0  120A  118A  2750   	fcall	_rotateIR
              120A  118A         
  1576                           	line	146
  1577                           	
  1578  02F5                     l8272:	
  1579                           ;main.c: 146: leftWall = findWall();
  1580  02F5  120A  118A  27E2   	fcall	_findWall
              120A  118A         
  1581  02FA  1803               	btfsc	status,0
  1582  02FB  2AFD               	goto	u3711
  1583  02FC  2AFF               	goto	u3710
  1584                           	
  1585  02FD                     u3711:
  1586  02FD  16F0               	bsf	(_leftWall/8),(_leftWall)&7
  1587  02FE  2B00               	goto	u3724
  1588  02FF                     u3710:
  1589  02FF  12F0               	bcf	(_leftWall/8),(_leftWall)&7
  1590  0300                     u3724:
  1591                           	line	147
  1592                           	
  1593  0300                     l8274:	
  1594                           ;main.c: 147: rotateIR(24);
  1595  0300  3018               	movlw	(018h)
  1596  0301  120A  118A  2750   	fcall	_rotateIR
              120A  118A         
  1597                           	line	149
  1598                           	
  1599  0306                     l8276:	
  1600                           ;main.c: 149: if(rightWall)
  1601  0306  1F70               	btfss	(_rightWall/8),(_rightWall)&7
  1602  0307  2B09               	goto	u3731
  1603  0308  2B0A               	goto	u3730
  1604  0309                     u3731:
  1605  0309  2B11               	goto	l8280
  1606  030A                     u3730:
  1607                           	line	150
  1608                           	
  1609  030A                     l8278:	
  1610                           ;main.c: 150: lcd_write_data('R');
  1611  030A  3052               	movlw	(052h)
  1612  030B  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1613  0310  2B18               	goto	l8282
  1614                           	line	151
  1615                           	
  1616  0311                     l2919:	
  1617                           	line	152
  1618                           	
  1619  0311                     l8280:	
  1620                           ;main.c: 151: else
  1621                           ;main.c: 152: lcd_write_data(' ');
  1622  0311  3020               	movlw	(020h)
  1623  0312  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1624  0317  2B18               	goto	l8282
  1625                           	
  1626  0318                     l2920:	
  1627                           	line	153
  1628                           	
  1629  0318                     l8282:	
  1630                           ;main.c: 153: if(frontWall)
  1631  0318  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  1632  0319  2B1B               	goto	u3741
  1633  031A  2B1C               	goto	u3740
  1634  031B                     u3741:
  1635  031B  2B23               	goto	l8286
  1636  031C                     u3740:
  1637                           	line	154
  1638                           	
  1639  031C                     l8284:	
  1640                           ;main.c: 154: lcd_write_data('F');
  1641  031C  3046               	movlw	(046h)
  1642  031D  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1643  0322  2B2A               	goto	l8288
  1644                           	line	155
  1645                           	
  1646  0323                     l2921:	
  1647                           	line	156
  1648                           	
  1649  0323                     l8286:	
  1650                           ;main.c: 155: else
  1651                           ;main.c: 156: lcd_write_data(' ');
  1652  0323  3020               	movlw	(020h)
  1653  0324  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1654  0329  2B2A               	goto	l8288
  1655                           	
  1656  032A                     l2922:	
  1657                           	line	157
  1658                           	
  1659  032A                     l8288:	
  1660                           ;main.c: 157: if(leftWall)
  1661  032A  1EF0               	btfss	(_leftWall/8),(_leftWall)&7
  1662  032B  2B2D               	goto	u3751
  1663  032C  2B2E               	goto	u3750
  1664  032D                     u3751:
  1665  032D  2B35               	goto	l8292
  1666  032E                     u3750:
  1667                           	line	158
  1668                           	
  1669  032E                     l8290:	
  1670                           ;main.c: 158: lcd_write_data('L');
  1671  032E  304C               	movlw	(04Ch)
  1672  032F  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1673  0334  2B3C               	goto	l2925
  1674                           	line	159
  1675                           	
  1676  0335                     l2923:	
  1677                           	line	160
  1678                           	
  1679  0335                     l8292:	
  1680                           ;main.c: 159: else
  1681                           ;main.c: 160: lcd_write_data(' ');
  1682  0335  3020               	movlw	(020h)
  1683  0336  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1684  033B  2B3C               	goto	l2925
  1685                           	
  1686  033C                     l2924:	
  1687                           	line	161
  1688                           	
  1689  033C                     l2925:	
  1690  033C  0008               	return
  1691                           	opt stack 0
  1692                           GLOBAL	__end_of_findWalls
  1693  033D                     	__end_of_findWalls:
  1694 ;; =============== function _findWalls ends ============
  1695                           
  1696                           	signat	_findWalls,88
  1697                           	global	_findWall
  1698                           psect	text1221,local,class=CODE,delta=2
  1699                           global __ptext1221
  1700  07E2                     __ptext1221:
  1701                           
  1702 ;; *************** function _findWall *****************
  1703 ;; Defined at:
  1704 ;;		line 128 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;		None               void
  1711 ;; Registers used:
  1712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    6
  1725 ;; This function calls:
  1726 ;;		_readIR
  1727 ;; This function is called by:
  1728 ;;		_findWalls
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           psect	text1221
  1732                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  1733                           	line	128
  1734                           	global	__size_of_findWall
  1735  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  1736                           	
  1737  07E2                     _findWall:	
  1738 ;; hardware stack exceeded
  1739                           	opt	stack 0
  1740                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1741                           	line	129
  1742                           	
  1743  07E2                     l8246:	
  1744                           ;main.c: 129: if(readIR() > 100)
  1745  07E2  120A  158A  27DD   	fcall	_readIR
              120A  118A         
  1746  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1747  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1748  07E9  084A               	movf	(1+(?_readIR)),w
  1749  07EA  3A80               	xorlw	80h
  1750  07EB  00FF               	movwf	btemp+1
  1751  07EC  3080               	movlw	(high(065h))^80h
  1752  07ED  027F               	subwf	btemp+1,w
  1753  07EE  1D03               	skipz
  1754  07EF  2FF2               	goto	u3665
  1755  07F0  3065               	movlw	low(065h)
  1756  07F1  0249               	subwf	(0+(?_readIR)),w
  1757  07F2                     u3665:
  1758                           
  1759  07F2  1C03               	skipc
  1760  07F3  2FF5               	goto	u3661
  1761  07F4  2FF6               	goto	u3660
  1762  07F5                     u3661:
  1763  07F5  2FFA               	goto	l8254
  1764  07F6                     u3660:
  1765                           	line	130
  1766                           	
  1767  07F6                     l8248:	
  1768                           ;main.c: 130: return 0;
  1769  07F6  1003               	clrc
  1770                           	
  1771  07F7  2FFD               	goto	l2915
  1772                           	
  1773  07F8                     l8250:	
  1774  07F8  2FFD               	goto	l2915
  1775                           	
  1776  07F9                     l8252:	
  1777  07F9  2FFD               	goto	l2915
  1778                           	line	131
  1779                           	
  1780  07FA                     l2914:	
  1781                           	line	132
  1782                           	
  1783  07FA                     l8254:	
  1784                           ;main.c: 131: else
  1785                           ;main.c: 132: return 1;
  1786  07FA  1403               	setc
  1787                           	
  1788  07FB  2FFD               	goto	l2915
  1789                           	
  1790  07FC                     l8256:	
  1791  07FC  2FFD               	goto	l2915
  1792                           	
  1793  07FD                     l2916:	
  1794                           	line	133
  1795                           	
  1796  07FD                     l2915:	
  1797  07FD  0008               	return
  1798                           	opt stack 0
  1799                           GLOBAL	__end_of_findWall
  1800  07FE                     	__end_of_findWall:
  1801 ;; =============== function _findWall ends ============
  1802                           
  1803                           	signat	_findWall,88
  1804                           	global	_updateLocation
  1805                           psect	text1222,local,class=CODE,delta=2
  1806                           global __ptext1222
  1807  03B3                     __ptext1222:
  1808                           
  1809 ;; *************** function _updateLocation *****************
  1810 ;; Defined at:
  1811 ;;		line 236 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;		None               void
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0
  1827 ;;      Temps:          0       1       0       0       0
  1828 ;;      Totals:         0       1       0       0       0
  1829 ;;Total ram usage:        1 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    4
  1832 ;; This function calls:
  1833 ;;		_lcd_set_cursor
  1834 ;;		_lcd_write_data
  1835 ;;		_lcd_write_1_digit_bcd
  1836 ;; This function is called by:
  1837 ;;		_run
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           psect	text1222
  1841                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  1842                           	line	236
  1843                           	global	__size_of_updateLocation
  1844  0073                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  1845                           	
  1846  03B3                     _updateLocation:	
  1847                           	opt	stack 2
  1848                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1849                           	line	237
  1850                           	
  1851  03B3                     l8216:	
  1852                           ;main.c: 237: currentOrientation += directionMoved;
  1853  03B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1854  03B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1855  03B5  0862               	movf	(_directionMoved),w	;volatile
  1856  03B6  00AE               	movwf	(??_updateLocation+0)+0
  1857  03B7  082E               	movf	(??_updateLocation+0)+0,w
  1858  03B8  07F7               	addwf	(_currentOrientation),f	;volatile
  1859                           	line	239
  1860                           	
  1861  03B9                     l8218:	
  1862                           ;main.c: 239: if(currentOrientation >= 4)
  1863  03B9  3004               	movlw	(04h)
  1864  03BA  0277               	subwf	(_currentOrientation),w	;volatile
  1865  03BB  1C03               	skipc
  1866  03BC  2BBE               	goto	u3651
  1867  03BD  2BBF               	goto	u3650
  1868  03BE                     u3651:
  1869  03BE  2BC2               	goto	l8222
  1870  03BF                     u3650:
  1871                           	line	240
  1872                           	
  1873  03BF                     l8220:	
  1874                           ;main.c: 240: currentOrientation -= 4;
  1875  03BF  3004               	movlw	low(04h)
  1876  03C0  02F7               	subwf	(_currentOrientation),f	;volatile
  1877  03C1  2BC2               	goto	l8222
  1878                           	
  1879  03C2                     l2958:	
  1880                           	line	242
  1881                           	
  1882  03C2                     l8222:	
  1883                           ;main.c: 242: lcd_set_cursor(0x06);
  1884  03C2  3006               	movlw	(06h)
  1885  03C3  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  118A         
  1886                           	line	243
  1887                           ;main.c: 243: switch(currentOrientation)
  1888  03C8  2BFB               	goto	l8242
  1889                           	line	245
  1890                           ;main.c: 244: {
  1891                           ;main.c: 245: case NORTH:
  1892                           	
  1893  03C9                     l2960:	
  1894                           	line	246
  1895                           	
  1896  03C9                     l8224:	
  1897                           ;main.c: 246: ++yCoord;
  1898  03C9  3001               	movlw	(01h)
  1899  03CA  1283               	bcf	status, 5	;RP0=0, select bank0
  1900  03CB  1303               	bcf	status, 6	;RP1=0, select bank0
  1901  03CC  00AE               	movwf	(??_updateLocation+0)+0
  1902  03CD  082E               	movf	(??_updateLocation+0)+0,w
  1903  03CE  07E4               	addwf	(_yCoord),f	;volatile
  1904                           	line	247
  1905                           	
  1906  03CF                     l8226:	
  1907                           ;main.c: 247: lcd_write_data('N');
  1908  03CF  304E               	movlw	(04Eh)
  1909  03D0  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1910                           	line	248
  1911                           ;main.c: 248: break;
  1912  03D5  2C09               	goto	l8244
  1913                           	line	249
  1914                           ;main.c: 249: case SOUTH:
  1915                           	
  1916  03D6                     l2962:	
  1917                           	line	250
  1918                           	
  1919  03D6                     l8228:	
  1920                           ;main.c: 250: --yCoord;
  1921  03D6  3001               	movlw	low(01h)
  1922  03D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1923  03D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1924  03D9  02E4               	subwf	(_yCoord),f	;volatile
  1925                           	line	251
  1926                           	
  1927  03DA                     l8230:	
  1928                           ;main.c: 251: lcd_write_data('S');
  1929  03DA  3053               	movlw	(053h)
  1930  03DB  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1931                           	line	252
  1932                           ;main.c: 252: break;
  1933  03E0  2C09               	goto	l8244
  1934                           	line	253
  1935                           ;main.c: 253: case EAST:
  1936                           	
  1937  03E1                     l2963:	
  1938                           	line	254
  1939                           	
  1940  03E1                     l8232:	
  1941                           ;main.c: 254: ++xCoord;
  1942  03E1  3001               	movlw	(01h)
  1943  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1944  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1945  03E4  00AE               	movwf	(??_updateLocation+0)+0
  1946  03E5  082E               	movf	(??_updateLocation+0)+0,w
  1947  03E6  07E5               	addwf	(_xCoord),f	;volatile
  1948                           	line	255
  1949                           	
  1950  03E7                     l8234:	
  1951                           ;main.c: 255: lcd_write_data('E');
  1952  03E7  3045               	movlw	(045h)
  1953  03E8  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1954                           	line	256
  1955                           ;main.c: 256: break;
  1956  03ED  2C09               	goto	l8244
  1957                           	line	257
  1958                           ;main.c: 257: case WEST:
  1959                           	
  1960  03EE                     l2964:	
  1961                           	line	258
  1962                           	
  1963  03EE                     l8236:	
  1964                           ;main.c: 258: --xCoord;
  1965  03EE  3001               	movlw	low(01h)
  1966  03EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1967  03F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1968  03F1  02E5               	subwf	(_xCoord),f	;volatile
  1969                           	line	259
  1970                           	
  1971  03F2                     l8238:	
  1972                           ;main.c: 259: lcd_write_data('W');
  1973  03F2  3057               	movlw	(057h)
  1974  03F3  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  1975                           	line	260
  1976                           ;main.c: 260: break;
  1977  03F8  2C09               	goto	l8244
  1978                           	line	261
  1979                           ;main.c: 261: default:
  1980                           	
  1981  03F9                     l2965:	
  1982                           	line	262
  1983                           ;main.c: 262: break;
  1984  03F9  2C09               	goto	l8244
  1985                           	line	263
  1986                           	
  1987  03FA                     l8240:	
  1988                           ;main.c: 263: }
  1989  03FA  2C09               	goto	l8244
  1990                           	line	243
  1991                           	
  1992  03FB                     l2959:	
  1993                           	
  1994  03FB                     l8242:	
  1995  03FB  0877               	movf	(_currentOrientation),w	;volatile
  1996                           	; Switch size 1, requested type "space"
  1997                           ; Number of cases is 4, Range of values is 0 to 3
  1998                           ; switch strategies available:
  1999                           ; Name         Instructions Cycles
  2000                           ; simple_byte           13     7 (average)
  2001                           ; direct_byte           20     8 (fixed)
  2002                           ; jumptable            260     6 (fixed)
  2003                           ; rangetable             8     6 (fixed)
  2004                           ; spacedrange           14     9 (fixed)
  2005                           ; locatedrange           4     3 (fixed)
  2006                           ;	Chosen strategy is simple_byte
  2007                           
  2008                           	opt asmopt_off
  2009  03FC  3A00               	xorlw	0^0	; case 0
  2010  03FD  1903               	skipnz
  2011  03FE  2BEE               	goto	l8236
  2012  03FF  3A01               	xorlw	1^0	; case 1
  2013  0400  1903               	skipnz
  2014  0401  2BD6               	goto	l8228
  2015  0402  3A03               	xorlw	2^1	; case 2
  2016  0403  1903               	skipnz
  2017  0404  2BE1               	goto	l8232
  2018  0405  3A01               	xorlw	3^2	; case 3
  2019  0406  1903               	skipnz
  2020  0407  2BC9               	goto	l8224
  2021  0408  2C09               	goto	l8244
  2022                           	opt asmopt_on
  2023                           
  2024                           	line	263
  2025                           	
  2026  0409                     l2961:	
  2027                           	line	265
  2028                           	
  2029  0409                     l8244:	
  2030                           ;main.c: 265: lcd_set_cursor(0x0C);
  2031  0409  300C               	movlw	(0Ch)
  2032  040A  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  118A         
  2033                           	line	266
  2034                           ;main.c: 266: lcd_write_1_digit_bcd(xCoord);
  2035  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  2036  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  2037  0411  0865               	movf	(_xCoord),w	;volatile
  2038  0412  120A  158A  2696   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  2039                           	line	267
  2040                           ;main.c: 267: lcd_set_cursor(0x03);
  2041  0417  3003               	movlw	(03h)
  2042  0418  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  118A         
  2043                           	line	268
  2044                           ;main.c: 268: lcd_write_1_digit_bcd(yCoord);
  2045  041D  1283               	bcf	status, 5	;RP0=0, select bank0
  2046  041E  1303               	bcf	status, 6	;RP1=0, select bank0
  2047  041F  0864               	movf	(_yCoord),w	;volatile
  2048  0420  120A  158A  2696   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  2049                           	line	270
  2050                           	
  2051  0425                     l2966:	
  2052  0425  0008               	return
  2053                           	opt stack 0
  2054                           GLOBAL	__end_of_updateLocation
  2055  0426                     	__end_of_updateLocation:
  2056 ;; =============== function _updateLocation ends ============
  2057                           
  2058                           	signat	_updateLocation,88
  2059                           	global	_goRight
  2060                           psect	text1223,local,class=CODE,delta=2
  2061                           global __ptext1223
  2062  079C                     __ptext1223:
  2063                           
  2064 ;; *************** function _goRight *****************
  2065 ;; Defined at:
  2066 ;;		line 214 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0
  2082 ;;      Temps:          0       1       0       0       0
  2083 ;;      Totals:         0       1       0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    5
  2087 ;; This function calls:
  2088 ;;		_turnRight90
  2089 ;;		_driveForDistance
  2090 ;;		_lcd_set_cursor
  2091 ;;		_lcd_write_data
  2092 ;; This function is called by:
  2093 ;;		_goToNextCell
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           psect	text1223
  2097                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  2098                           	line	214
  2099                           	global	__size_of_goRight
  2100  0023                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  2101                           	
  2102  079C                     _goRight:	
  2103                           	opt	stack 0
  2104                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2105                           	line	215
  2106                           	
  2107  079C                     l8206:	
  2108                           ;main.c: 215: turnRight90();
  2109  079C  120A  118A  25BA   	fcall	_turnRight90
              120A  118A         
  2110                           	line	216
  2111                           	
  2112  07A1                     l8208:	
  2113                           ;main.c: 216: driveForDistance(1000);
  2114  07A1  30E8               	movlw	low(03E8h)
  2115  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2116  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2117  07A4  00B3               	movwf	(?_driveForDistance)
  2118  07A5  3003               	movlw	high(03E8h)
  2119  07A6  00B4               	movwf	((?_driveForDistance))+1
  2120  07A7  120A  118A  2426   	fcall	_driveForDistance
              120A  118A         
  2121                           	line	217
  2122                           	
  2123  07AC                     l8210:	
  2124                           ;main.c: 217: directionMoved = RIGHT;
  2125  07AC  3003               	movlw	(03h)
  2126  07AD  1283               	bcf	status, 5	;RP0=0, select bank0
  2127  07AE  1303               	bcf	status, 6	;RP1=0, select bank0
  2128  07AF  00BD               	movwf	(??_goRight+0)+0
  2129  07B0  083D               	movf	(??_goRight+0)+0,w
  2130  07B1  00E2               	movwf	(_directionMoved)	;volatile
  2131                           	line	218
  2132                           	
  2133  07B2                     l8212:	
  2134                           ;main.c: 218: lcd_set_cursor(0x4F);
  2135  07B2  304F               	movlw	(04Fh)
  2136  07B3  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  118A         
  2137                           	line	219
  2138                           	
  2139  07B8                     l8214:	
  2140                           ;main.c: 219: lcd_write_data('R');
  2141  07B8  3052               	movlw	(052h)
  2142  07B9  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  2143                           	line	220
  2144                           	
  2145  07BE                     l2949:	
  2146  07BE  0008               	return
  2147                           	opt stack 0
  2148                           GLOBAL	__end_of_goRight
  2149  07BF                     	__end_of_goRight:
  2150 ;; =============== function _goRight ends ============
  2151                           
  2152                           	signat	_goRight,88
  2153                           	global	_goLeft
  2154                           psect	text1224,local,class=CODE,delta=2
  2155                           global __ptext1224
  2156  0F99                     __ptext1224:
  2157                           
  2158 ;; *************** function _goLeft *****************
  2159 ;; Defined at:
  2160 ;;		line 190 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    5
  2181 ;; This function calls:
  2182 ;;		_turnLeft90
  2183 ;;		_driveForDistance
  2184 ;;		_lcd_set_cursor
  2185 ;;		_lcd_write_data
  2186 ;; This function is called by:
  2187 ;;		_goToNextCell
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           psect	text1224
  2191                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  2192                           	line	190
  2193                           	global	__size_of_goLeft
  2194  0022                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  2195                           	
  2196  0F99                     _goLeft:	
  2197                           	opt	stack 0
  2198                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2199                           	line	191
  2200                           	
  2201  0F99                     l8196:	
  2202                           ;main.c: 191: turnLeft90();
  2203  0F99  120A  118A  266D   	fcall	_turnLeft90
              120A  158A         
  2204                           	line	192
  2205                           	
  2206  0F9E                     l8198:	
  2207                           ;main.c: 192: driveForDistance(1000);
  2208  0F9E  30E8               	movlw	low(03E8h)
  2209  0F9F  1283               	bcf	status, 5	;RP0=0, select bank0
  2210  0FA0  1303               	bcf	status, 6	;RP1=0, select bank0
  2211  0FA1  00B3               	movwf	(?_driveForDistance)
  2212  0FA2  3003               	movlw	high(03E8h)
  2213  0FA3  00B4               	movwf	((?_driveForDistance))+1
  2214  0FA4  120A  118A  2426   	fcall	_driveForDistance
              120A  158A         
  2215                           	line	193
  2216                           	
  2217  0FA9                     l8200:	
  2218                           ;main.c: 193: directionMoved = LEFT;
  2219  0FA9  1283               	bcf	status, 5	;RP0=0, select bank0
  2220  0FAA  1303               	bcf	status, 6	;RP1=0, select bank0
  2221  0FAB  01E2               	clrf	(_directionMoved)	;volatile
  2222  0FAC  1403               	bsf	status,0
  2223  0FAD  0DE2               	rlf	(_directionMoved),f	;volatile
  2224                           	line	194
  2225                           	
  2226  0FAE                     l8202:	
  2227                           ;main.c: 194: lcd_set_cursor(0x4F);
  2228  0FAE  304F               	movlw	(04Fh)
  2229  0FAF  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  158A         
  2230                           	line	195
  2231                           	
  2232  0FB4                     l8204:	
  2233                           ;main.c: 195: lcd_write_data('L');
  2234  0FB4  304C               	movlw	(04Ch)
  2235  0FB5  120A  158A  26A1   	fcall	_lcd_write_data
              120A  158A         
  2236                           	line	196
  2237                           	
  2238  0FBA                     l2937:	
  2239  0FBA  0008               	return
  2240                           	opt stack 0
  2241                           GLOBAL	__end_of_goLeft
  2242  0FBB                     	__end_of_goLeft:
  2243 ;; =============== function _goLeft ends ============
  2244                           
  2245                           	signat	_goLeft,88
  2246                           	global	_goForward
  2247                           psect	text1225,local,class=CODE,delta=2
  2248                           global __ptext1225
  2249  0EDE                     __ptext1225:
  2250                           
  2251 ;; *************** function _goForward *****************
  2252 ;; Defined at:
  2253 ;;		line 181 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;		None               void
  2260 ;; Registers used:
  2261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    5
  2274 ;; This function calls:
  2275 ;;		_driveForDistance
  2276 ;;		_lcd_set_cursor
  2277 ;;		_lcd_write_data
  2278 ;; This function is called by:
  2279 ;;		_goToNextCell
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           psect	text1225
  2283                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  2284                           	line	181
  2285                           	global	__size_of_goForward
  2286  001B                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  2287                           	
  2288  0EDE                     _goForward:	
  2289                           	opt	stack 0
  2290                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2291                           	line	182
  2292                           	
  2293  0EDE                     l8188:	
  2294                           ;main.c: 182: driveForDistance(1000);
  2295  0EDE  30E8               	movlw	low(03E8h)
  2296  0EDF  1283               	bcf	status, 5	;RP0=0, select bank0
  2297  0EE0  1303               	bcf	status, 6	;RP1=0, select bank0
  2298  0EE1  00B3               	movwf	(?_driveForDistance)
  2299  0EE2  3003               	movlw	high(03E8h)
  2300  0EE3  00B4               	movwf	((?_driveForDistance))+1
  2301  0EE4  120A  118A  2426   	fcall	_driveForDistance
              120A  158A         
  2302                           	line	183
  2303                           	
  2304  0EE9                     l8190:	
  2305                           ;main.c: 183: directionMoved = FORWARD;
  2306  0EE9  1283               	bcf	status, 5	;RP0=0, select bank0
  2307  0EEA  1303               	bcf	status, 6	;RP1=0, select bank0
  2308  0EEB  01E2               	clrf	(_directionMoved)	;volatile
  2309                           	line	184
  2310                           	
  2311  0EEC                     l8192:	
  2312                           ;main.c: 184: lcd_set_cursor(0x4F);
  2313  0EEC  304F               	movlw	(04Fh)
  2314  0EED  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  158A         
  2315                           	line	185
  2316                           	
  2317  0EF2                     l8194:	
  2318                           ;main.c: 185: lcd_write_data('F');
  2319  0EF2  3046               	movlw	(046h)
  2320  0EF3  120A  158A  26A1   	fcall	_lcd_write_data
              120A  158A         
  2321                           	line	186
  2322                           	
  2323  0EF8                     l2934:	
  2324  0EF8  0008               	return
  2325                           	opt stack 0
  2326                           GLOBAL	__end_of_goForward
  2327  0EF9                     	__end_of_goForward:
  2328 ;; =============== function _goForward ends ============
  2329                           
  2330                           	signat	_goForward,88
  2331                           	global	_goBackward
  2332                           psect	text1226,local,class=CODE,delta=2
  2333                           global __ptext1226
  2334  07BF                     __ptext1226:
  2335                           
  2336 ;; *************** function _goBackward *****************
  2337 ;; Defined at:
  2338 ;;		line 171 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;		None               void
  2345 ;; Registers used:
  2346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         0       0       0       0       0
  2353 ;;      Locals:         0       0       0       0       0
  2354 ;;      Temps:          0       1       0       0       0
  2355 ;;      Totals:         0       1       0       0       0
  2356 ;;Total ram usage:        1 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    5
  2359 ;; This function calls:
  2360 ;;		_turnAround
  2361 ;;		_driveForDistance
  2362 ;;		_lcd_set_cursor
  2363 ;;		_lcd_write_data
  2364 ;; This function is called by:
  2365 ;;		_goToNextCell
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           psect	text1226
  2369                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  2370                           	line	171
  2371                           	global	__size_of_goBackward
  2372  0023                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  2373                           	
  2374  07BF                     _goBackward:	
  2375                           	opt	stack 0
  2376                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2377                           	line	172
  2378                           	
  2379  07BF                     l8178:	
  2380                           ;main.c: 172: turnAround();
  2381  07BF  120A  118A  2696   	fcall	_turnAround
              120A  118A         
  2382                           	line	173
  2383                           	
  2384  07C4                     l8180:	
  2385                           ;main.c: 173: driveForDistance(1000);
  2386  07C4  30E8               	movlw	low(03E8h)
  2387  07C5  1283               	bcf	status, 5	;RP0=0, select bank0
  2388  07C6  1303               	bcf	status, 6	;RP1=0, select bank0
  2389  07C7  00B3               	movwf	(?_driveForDistance)
  2390  07C8  3003               	movlw	high(03E8h)
  2391  07C9  00B4               	movwf	((?_driveForDistance))+1
  2392  07CA  120A  118A  2426   	fcall	_driveForDistance
              120A  118A         
  2393                           	line	174
  2394                           	
  2395  07CF                     l8182:	
  2396                           ;main.c: 174: directionMoved = BACKWARD;
  2397  07CF  3002               	movlw	(02h)
  2398  07D0  1283               	bcf	status, 5	;RP0=0, select bank0
  2399  07D1  1303               	bcf	status, 6	;RP1=0, select bank0
  2400  07D2  00BD               	movwf	(??_goBackward+0)+0
  2401  07D3  083D               	movf	(??_goBackward+0)+0,w
  2402  07D4  00E2               	movwf	(_directionMoved)	;volatile
  2403                           	line	175
  2404                           	
  2405  07D5                     l8184:	
  2406                           ;main.c: 175: lcd_set_cursor(0x4F);
  2407  07D5  304F               	movlw	(04Fh)
  2408  07D6  120A  158A  268B   	fcall	_lcd_set_cursor
              120A  118A         
  2409                           	line	176
  2410                           	
  2411  07DB                     l8186:	
  2412                           ;main.c: 176: lcd_write_data('B');
  2413  07DB  3042               	movlw	(042h)
  2414  07DC  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  2415                           	line	177
  2416                           	
  2417  07E1                     l2931:	
  2418  07E1  0008               	return
  2419                           	opt stack 0
  2420                           GLOBAL	__end_of_goBackward
  2421  07E2                     	__end_of_goBackward:
  2422 ;; =============== function _goBackward ends ============
  2423                           
  2424                           	signat	_goBackward,88
  2425                           	global	_readIR
  2426                           psect	text1227,local,class=CODE,delta=2
  2427                           global __ptext1227
  2428  0FDD                     __ptext1227:
  2429                           
  2430 ;; *************** function _readIR *****************
  2431 ;; Defined at:
  2432 ;;		line 33 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\ir.c
       "
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  cm              2   43[BANK0 ] int 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2   41[BANK0 ] int 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       2       0       0       0
  2447 ;;      Locals:         0       2       0       0       0
  2448 ;;      Temps:          0       0       0       0       0
  2449 ;;      Totals:         0       4       0       0       0
  2450 ;;Total ram usage:        4 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    5
  2453 ;; This function calls:
  2454 ;;		_adc_read_channel
  2455 ;;		_convert
  2456 ;; This function is called by:
  2457 ;;		_findWall
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           psect	text1227
  2461                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\ir.c"
  2462                           	line	33
  2463                           	global	__size_of_readIR
  2464  0023                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  2465                           	
  2466  0FDD                     _readIR:	
  2467 ;; hardware stack exceeded
  2468                           	opt	stack 0
  2469                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2470                           	line	34
  2471                           	
  2472  0FDD                     l8172:	
  2473                           ;ir.c: 34: int cm = convert(adc_read_channel(0));
  2474  0FDD  3000               	movlw	(0)
  2475  0FDE  120A  118A  24D2   	fcall	_adc_read_channel
              120A  158A         
  2476  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  2477  0FE4  1303               	bcf	status, 6	;RP1=0, select bank0
  2478  0FE5  0846               	movf	(1+(?_adc_read_channel)),w
  2479  0FE6  01C2               	clrf	(?_convert+1)
  2480  0FE7  07C2               	addwf	(?_convert+1)
  2481  0FE8  0845               	movf	(0+(?_adc_read_channel)),w
  2482  0FE9  01C1               	clrf	(?_convert)
  2483  0FEA  07C1               	addwf	(?_convert)
  2484                           
  2485  0FEB  120A  118A  2015   	fcall	_convert
              120A  158A         
  2486  0FF0  1283               	bcf	status, 5	;RP0=0, select bank0
  2487  0FF1  1303               	bcf	status, 6	;RP1=0, select bank0
  2488  0FF2  0842               	movf	(1+(?_convert)),w
  2489  0FF3  01CC               	clrf	(readIR@cm+1)
  2490  0FF4  07CC               	addwf	(readIR@cm+1)
  2491  0FF5  0841               	movf	(0+(?_convert)),w
  2492  0FF6  01CB               	clrf	(readIR@cm)
  2493  0FF7  07CB               	addwf	(readIR@cm)
  2494                           
  2495                           	line	35
  2496                           	
  2497  0FF8                     l8174:	
  2498                           ;ir.c: 35: return cm;
  2499  0FF8  084C               	movf	(readIR@cm+1),w
  2500  0FF9  01CA               	clrf	(?_readIR+1)
  2501  0FFA  07CA               	addwf	(?_readIR+1)
  2502  0FFB  084B               	movf	(readIR@cm),w
  2503  0FFC  01C9               	clrf	(?_readIR)
  2504  0FFD  07C9               	addwf	(?_readIR)
  2505                           
  2506  0FFE  2FFF               	goto	l4413
  2507                           	
  2508  0FFF                     l8176:	
  2509                           	line	36
  2510                           	
  2511  0FFF                     l4413:	
  2512  0FFF  0008               	return
  2513                           	opt stack 0
  2514                           GLOBAL	__end_of_readIR
  2515  1000                     	__end_of_readIR:
  2516 ;; =============== function _readIR ends ============
  2517                           
  2518                           	signat	_readIR,90
  2519                           	global	_init
  2520                           psect	text1228,local,class=CODE,delta=2
  2521                           global __ptext1228
  2522  0589                     __ptext1228:
  2523                           
  2524 ;; *************** function _init *****************
  2525 ;; Defined at:
  2526 ;;		line 90 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\main
       .c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0
  2543 ;;      Totals:         0       0       0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    4
  2547 ;; This function calls:
  2548 ;;		_init_adc
  2549 ;;		_lcd_init
  2550 ;;		_ser_init
  2551 ;;		_initIRobot
  2552 ;; This function is called by:
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           psect	text1228
  2557                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  2558                           	line	90
  2559                           	global	__size_of_init
  2560  0031                     	__size_of_init	equ	__end_of_init-_init
  2561                           	
  2562  0589                     _init:	
  2563                           	opt	stack 3
  2564                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2565                           	line	91
  2566                           	
  2567  0589                     l8142:	
  2568                           ;main.c: 91: start.pressed = 0;
  2569  0589  1283               	bcf	status, 5	;RP0=0, select bank0
  2570  058A  1303               	bcf	status, 6	;RP1=0, select bank0
  2571  058B  01DD               	clrf	(_start)
  2572                           	line	92
  2573                           	
  2574  058C                     l8144:	
  2575                           ;main.c: 92: start.released = 1;
  2576  058C  01DE               	clrf	0+(_start)+01h
  2577  058D  1403               	bsf	status,0
  2578  058E  0DDE               	rlf	0+(_start)+01h,f
  2579                           	line	94
  2580                           	
  2581  058F                     l8146:	
  2582                           ;main.c: 94: init_adc();
  2583  058F  120A  158A  26C8   	fcall	_init_adc
              120A  118A         
  2584                           	line	95
  2585                           	
  2586  0594                     l8148:	
  2587                           ;main.c: 95: lcd_init();
  2588  0594  120A  118A  2642   	fcall	_lcd_init
              120A  118A         
  2589                           	line	97
  2590                           	
  2591  0599                     l8150:	
  2592                           ;main.c: 97: TRISB = 0b00011110;
  2593  0599  301E               	movlw	(01Eh)
  2594  059A  1683               	bsf	status, 5	;RP0=1, select bank1
  2595  059B  1303               	bcf	status, 6	;RP1=0, select bank1
  2596  059C  0086               	movwf	(134)^080h	;volatile
  2597                           	line	100
  2598                           	
  2599  059D                     l8152:	
  2600                           ;main.c: 100: OPTION_REG = 0b00000100;
  2601  059D  3004               	movlw	(04h)
  2602  059E  0081               	movwf	(129)^080h	;volatile
  2603                           	line	102
  2604                           	
  2605  059F                     l8154:	
  2606                           ;main.c: 102: TMR0IE = 1;
  2607  059F  168B               	bsf	(93/8),(93)&7
  2608                           	line	103
  2609                           	
  2610  05A0                     l8156:	
  2611                           ;main.c: 103: SSPSTAT = 0b01000000;
  2612  05A0  3040               	movlw	(040h)
  2613  05A1  0094               	movwf	(148)^080h	;volatile
  2614                           	line	104
  2615                           	
  2616  05A2                     l8158:	
  2617                           ;main.c: 104: SSPCON = 0b00100010;
  2618  05A2  3022               	movlw	(022h)
  2619  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  2620  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  2621  05A5  0094               	movwf	(20)	;volatile
  2622                           	line	105
  2623                           	
  2624  05A6                     l8160:	
  2625                           ;main.c: 105: TRISC = 0b10010000;
  2626  05A6  3090               	movlw	(090h)
  2627  05A7  1683               	bsf	status, 5	;RP0=1, select bank1
  2628  05A8  1303               	bcf	status, 6	;RP1=0, select bank1
  2629  05A9  0087               	movwf	(135)^080h	;volatile
  2630                           	line	106
  2631                           	
  2632  05AA                     l8162:	
  2633                           ;main.c: 106: PORTC = 0b00000000;
  2634  05AA  1283               	bcf	status, 5	;RP0=0, select bank0
  2635  05AB  1303               	bcf	status, 6	;RP1=0, select bank0
  2636  05AC  0187               	clrf	(7)	;volatile
  2637                           	line	109
  2638                           	
  2639  05AD                     l8164:	
  2640                           ;main.c: 109: PEIE = 1;
  2641  05AD  170B               	bsf	(94/8),(94)&7
  2642                           	line	110
  2643                           	
  2644  05AE                     l8166:	
  2645                           ;main.c: 110: GIE = 1;
  2646  05AE  178B               	bsf	(95/8),(95)&7
  2647                           	line	112
  2648                           	
  2649  05AF                     l8168:	
  2650                           ;main.c: 112: ser_init();
  2651  05AF  120A  118A  2728   	fcall	_ser_init
              120A  118A         
  2652                           	line	113
  2653                           	
  2654  05B4                     l8170:	
  2655                           ;main.c: 113: initIRobot();
  2656  05B4  120A  158A  26F9   	fcall	_initIRobot
              120A  118A         
  2657                           	line	114
  2658                           	
  2659  05B9                     l2908:	
  2660  05B9  0008               	return
  2661                           	opt stack 0
  2662                           GLOBAL	__end_of_init
  2663  05BA                     	__end_of_init:
  2664 ;; =============== function _init ends ============
  2665                           
  2666                           	signat	_init,88
  2667                           	global	_lcd_init
  2668                           psect	text1229,local,class=CODE,delta=2
  2669                           global __ptext1229
  2670  0642                     __ptext1229:
  2671                           
  2672 ;; *************** function _lcd_init *****************
  2673 ;; Defined at:
  2674 ;;		line 78 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\lcd.
       c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    3
  2695 ;; This function calls:
  2696 ;;		_lcd_write_control
  2697 ;; This function is called by:
  2698 ;;		_init
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           psect	text1229
  2702                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\lcd.c"
  2703                           	line	78
  2704                           	global	__size_of_lcd_init
  2705  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2706                           	
  2707  0642                     _lcd_init:	
  2708                           	opt	stack 3
  2709                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2710                           	line	82
  2711                           	
  2712  0642                     l8122:	
  2713                           ;lcd.c: 82: ADCON1 = 0b00000010;
  2714  0642  3002               	movlw	(02h)
  2715  0643  1683               	bsf	status, 5	;RP0=1, select bank1
  2716  0644  1303               	bcf	status, 6	;RP1=0, select bank1
  2717  0645  009F               	movwf	(159)^080h	;volatile
  2718                           	line	85
  2719                           	
  2720  0646                     l8124:	
  2721                           ;lcd.c: 85: PORTD = 0;
  2722  0646  1283               	bcf	status, 5	;RP0=0, select bank0
  2723  0647  1303               	bcf	status, 6	;RP1=0, select bank0
  2724  0648  0188               	clrf	(8)	;volatile
  2725                           	line	86
  2726                           	
  2727  0649                     l8126:	
  2728                           ;lcd.c: 86: PORTE = 0;
  2729  0649  0189               	clrf	(9)	;volatile
  2730                           	line	88
  2731                           	
  2732  064A                     l8128:	
  2733                           ;lcd.c: 88: TRISD = 0b00000000;
  2734  064A  1683               	bsf	status, 5	;RP0=1, select bank1
  2735  064B  1303               	bcf	status, 6	;RP1=0, select bank1
  2736  064C  0188               	clrf	(136)^080h	;volatile
  2737                           	line	89
  2738                           	
  2739  064D                     l8130:	
  2740                           ;lcd.c: 89: TRISE = 0b00000000;
  2741  064D  0189               	clrf	(137)^080h	;volatile
  2742                           	line	92
  2743                           	
  2744  064E                     l8132:	
  2745                           ;lcd.c: 92: lcd_write_control(0b00000001);
  2746  064E  3001               	movlw	(01h)
  2747  064F  120A  158A  26B4   	fcall	_lcd_write_control
              120A  118A         
  2748                           	line	93
  2749                           	
  2750  0654                     l8134:	
  2751                           ;lcd.c: 93: lcd_write_control(0b00111000);
  2752  0654  3038               	movlw	(038h)
  2753  0655  120A  158A  26B4   	fcall	_lcd_write_control
              120A  118A         
  2754                           	line	94
  2755                           	
  2756  065A                     l8136:	
  2757                           ;lcd.c: 94: lcd_write_control(0b00001100);
  2758  065A  300C               	movlw	(0Ch)
  2759  065B  120A  158A  26B4   	fcall	_lcd_write_control
              120A  118A         
  2760                           	line	95
  2761                           	
  2762  0660                     l8138:	
  2763                           ;lcd.c: 95: lcd_write_control(0b00000110);
  2764  0660  3006               	movlw	(06h)
  2765  0661  120A  158A  26B4   	fcall	_lcd_write_control
              120A  118A         
  2766                           	line	96
  2767                           	
  2768  0666                     l8140:	
  2769                           ;lcd.c: 96: lcd_write_control(0b00000010);
  2770  0666  3002               	movlw	(02h)
  2771  0667  120A  158A  26B4   	fcall	_lcd_write_control
              120A  118A         
  2772                           	line	98
  2773                           	
  2774  066C                     l2131:	
  2775  066C  0008               	return
  2776                           	opt stack 0
  2777                           GLOBAL	__end_of_lcd_init
  2778  066D                     	__end_of_lcd_init:
  2779 ;; =============== function _lcd_init ends ============
  2780                           
  2781                           	signat	_lcd_init,88
  2782                           	global	_lcd_write_1_digit_bcd
  2783                           psect	text1230,local,class=CODE,delta=2
  2784                           global __ptext1230
  2785  0E96                     __ptext1230:
  2786                           
  2787 ;; *************** function _lcd_write_1_digit_bcd *****************
  2788 ;; Defined at:
  2789 ;;		line 44 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\lcd.
       c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  data            1    wreg     unsigned char 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  data            1   13[BANK0 ] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;		None               void
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2803 ;;      Params:         0       0       0       0       0
  2804 ;;      Locals:         0       1       0       0       0
  2805 ;;      Temps:          0       0       0       0       0
  2806 ;;      Totals:         0       1       0       0       0
  2807 ;;Total ram usage:        1 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    3
  2810 ;; This function calls:
  2811 ;;		_lcd_write_data
  2812 ;; This function is called by:
  2813 ;;		_updateLocation
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           psect	text1230
  2817                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\lcd.c"
  2818                           	line	44
  2819                           	global	__size_of_lcd_write_1_digit_bcd
  2820  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  2821                           	
  2822  0E96                     _lcd_write_1_digit_bcd:	
  2823                           	opt	stack 2
  2824                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  2825                           ;lcd_write_1_digit_bcd@data stored from wreg
  2826  0E96  1283               	bcf	status, 5	;RP0=0, select bank0
  2827  0E97  1303               	bcf	status, 6	;RP1=0, select bank0
  2828  0E98  00AD               	movwf	(lcd_write_1_digit_bcd@data)
  2829                           	line	45
  2830                           	
  2831  0E99                     l8120:	
  2832                           ;lcd.c: 45: lcd_write_data(data + 48);
  2833  0E99  082D               	movf	(lcd_write_1_digit_bcd@data),w
  2834  0E9A  3E30               	addlw	030h
  2835  0E9B  120A  158A  26A1   	fcall	_lcd_write_data
              120A  158A         
  2836                           	line	46
  2837                           	
  2838  0EA0                     l2119:	
  2839  0EA0  0008               	return
  2840                           	opt stack 0
  2841                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  2842  0EA1                     	__end_of_lcd_write_1_digit_bcd:
  2843 ;; =============== function _lcd_write_1_digit_bcd ends ============
  2844                           
  2845                           	signat	_lcd_write_1_digit_bcd,4216
  2846                           	global	_lcd_write_string
  2847                           psect	text1231,local,class=CODE,delta=2
  2848                           global __ptext1231
  2849  0777                     __ptext1231:
  2850                           
  2851 ;; *************** function _lcd_write_string *****************
  2852 ;; Defined at:
  2853 ;;		line 38 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\lcd.
       c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  s               1    wreg     PTR const unsigned char 
  2856 ;;		 -> STR_2(17), STR_1(17), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  2859 ;;		 -> STR_2(17), STR_1(17), 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;		None               void
  2862 ;; Registers used:
  2863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       1       0       0       0
  2871 ;;      Temps:          0       1       0       0       0
  2872 ;;      Totals:         0       2       0       0       0
  2873 ;;Total ram usage:        2 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    3
  2876 ;; This function calls:
  2877 ;;		_lcd_write_data
  2878 ;; This function is called by:
  2879 ;;		_run
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           psect	text1231
  2883                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\lcd.c"
  2884                           	line	38
  2885                           	global	__size_of_lcd_write_string
  2886  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  2887                           	
  2888  0777                     _lcd_write_string:	
  2889                           	opt	stack 3
  2890                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2891                           ;lcd_write_string@s stored from wreg
  2892  0777  1283               	bcf	status, 5	;RP0=0, select bank0
  2893  0778  1303               	bcf	status, 6	;RP1=0, select bank0
  2894  0779  00AE               	movwf	(lcd_write_string@s)
  2895                           	line	40
  2896                           	
  2897  077A                     l8112:	
  2898                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  2899  077A  2F8E               	goto	l8118
  2900                           	
  2901  077B                     l2114:	
  2902                           	
  2903  077B                     l8114:	
  2904  077B  082E               	movf	(lcd_write_string@s),w
  2905  077C  0084               	movwf	fsr0
  2906  077D  120A  118A  2700   	fcall	stringdir
              120A  118A         
  2907  0782  120A  158A  26A1   	fcall	_lcd_write_data
              120A  118A         
  2908                           	
  2909  0787                     l8116:	
  2910  0787  3001               	movlw	(01h)
  2911  0788  1283               	bcf	status, 5	;RP0=0, select bank0
  2912  0789  1303               	bcf	status, 6	;RP1=0, select bank0
  2913  078A  00AD               	movwf	(??_lcd_write_string+0)+0
  2914  078B  082D               	movf	(??_lcd_write_string+0)+0,w
  2915  078C  07AE               	addwf	(lcd_write_string@s),f
  2916  078D  2F8E               	goto	l8118
  2917                           	
  2918  078E                     l2113:	
  2919                           	
  2920  078E                     l8118:	
  2921  078E  082E               	movf	(lcd_write_string@s),w
  2922  078F  0084               	movwf	fsr0
  2923  0790  120A  118A  2700   	fcall	stringdir
              120A  118A         
  2924  0795  3800               	iorlw	0
  2925  0796  1D03               	skipz
  2926  0797  2F99               	goto	u3641
  2927  0798  2F9A               	goto	u3640
  2928  0799                     u3641:
  2929  0799  2F7B               	goto	l8114
  2930  079A                     u3640:
  2931  079A  2F9B               	goto	l2116
  2932                           	
  2933  079B                     l2115:	
  2934                           	line	41
  2935                           	
  2936  079B                     l2116:	
  2937  079B  0008               	return
  2938                           	opt stack 0
  2939                           GLOBAL	__end_of_lcd_write_string
  2940  079C                     	__end_of_lcd_write_string:
  2941 ;; =============== function _lcd_write_string ends ============
  2942                           
  2943                           	signat	_lcd_write_string,4216
  2944                           	global	_lcd_set_cursor
  2945                           psect	text1232,local,class=CODE,delta=2
  2946                           global __ptext1232
  2947  0E8B                     __ptext1232:
  2948                           
  2949 ;; *************** function _lcd_set_cursor *****************
  2950 ;; Defined at:
  2951 ;;		line 32 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\lcd.
       c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  address         1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  address         1   13[BANK0 ] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       0       0       0       0
  2966 ;;      Locals:         0       1       0       0       0
  2967 ;;      Temps:          0       0       0       0       0
  2968 ;;      Totals:         0       1       0       0       0
  2969 ;;Total ram usage:        1 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    3
  2972 ;; This function calls:
  2973 ;;		_lcd_write_control
  2974 ;; This function is called by:
  2975 ;;		_goBackward
  2976 ;;		_goForward
  2977 ;;		_goLeft
  2978 ;;		_goRight
  2979 ;;		_run
  2980 ;;		_updateLocation
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           psect	text1232
  2984                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\lcd.c"
  2985                           	line	32
  2986                           	global	__size_of_lcd_set_cursor
  2987  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  2988                           	
  2989  0E8B                     _lcd_set_cursor:	
  2990                           	opt	stack 2
  2991                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2992                           ;lcd_set_cursor@address stored from wreg
  2993  0E8B  1283               	bcf	status, 5	;RP0=0, select bank0
  2994  0E8C  1303               	bcf	status, 6	;RP1=0, select bank0
  2995  0E8D  00AD               	movwf	(lcd_set_cursor@address)
  2996                           	line	33
  2997                           	
  2998  0E8E                     l8108:	
  2999                           ;lcd.c: 33: address |= 0b10000000;
  3000  0E8E  17AD               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3001                           	line	34
  3002                           	
  3003  0E8F                     l8110:	
  3004                           ;lcd.c: 34: lcd_write_control(address);
  3005  0E8F  082D               	movf	(lcd_set_cursor@address),w
  3006  0E90  120A  158A  26B4   	fcall	_lcd_write_control
              120A  158A         
  3007                           	line	35
  3008                           	
  3009  0E95                     l2110:	
  3010  0E95  0008               	return
  3011                           	opt stack 0
  3012                           GLOBAL	__end_of_lcd_set_cursor
  3013  0E96                     	__end_of_lcd_set_cursor:
  3014 ;; =============== function _lcd_set_cursor ends ============
  3015                           
  3016                           	signat	_lcd_set_cursor,4216
  3017                           	global	_turnRight90
  3018                           psect	text1233,local,class=CODE,delta=2
  3019                           global __ptext1233
  3020  05BA                     __ptext1233:
  3021                           
  3022 ;; *************** function _turnRight90 *****************
  3023 ;; Defined at:
  3024 ;;		line 54 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\driv
       e.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;		None               void
  3031 ;; Registers used:
  3032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0
  3040 ;;      Temps:          0       3       0       0       0
  3041 ;;      Totals:         0       3       0       0       0
  3042 ;;Total ram usage:        3 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    4
  3045 ;; This function calls:
  3046 ;;		_drive
  3047 ;;		_waitFor
  3048 ;; This function is called by:
  3049 ;;		_goRight
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           psect	text1233
  3053                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\drive.c"
  3054                           	line	54
  3055                           	global	__size_of_turnRight90
  3056  0030                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  3057                           	
  3058  05BA                     _turnRight90:	
  3059                           	opt	stack 0
  3060                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3061                           	line	55
  3062                           	
  3063  05BA                     l8106:	
  3064                           ;drive.c: 55: drive(0, 25, 255, 255);
  3065  05BA  3019               	movlw	(019h)
  3066  05BB  1283               	bcf	status, 5	;RP0=0, select bank0
  3067  05BC  1303               	bcf	status, 6	;RP1=0, select bank0
  3068  05BD  00B3               	movwf	(??_turnRight90+0)+0
  3069  05BE  0833               	movf	(??_turnRight90+0)+0,w
  3070  05BF  00AC               	movwf	(?_drive)
  3071  05C0  30FF               	movlw	(0FFh)
  3072  05C1  00B4               	movwf	(??_turnRight90+1)+0
  3073  05C2  0834               	movf	(??_turnRight90+1)+0,w
  3074  05C3  00AD               	movwf	0+(?_drive)+01h
  3075  05C4  30FF               	movlw	(0FFh)
  3076  05C5  00B5               	movwf	(??_turnRight90+2)+0
  3077  05C6  0835               	movf	(??_turnRight90+2)+0,w
  3078  05C7  00AE               	movwf	0+(?_drive)+02h
  3079  05C8  3000               	movlw	(0)
  3080  05C9  120A  118A  2552   	fcall	_drive
              120A  118A         
  3081                           	line	56
  3082                           ;drive.c: 56: waitFor(157,255,169);
  3083  05CE  30FF               	movlw	(0FFh)
  3084  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3085  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3086  05D1  00B3               	movwf	(??_turnRight90+0)+0
  3087  05D2  0833               	movf	(??_turnRight90+0)+0,w
  3088  05D3  00AC               	movwf	(?_waitFor)
  3089  05D4  30A9               	movlw	(0A9h)
  3090  05D5  00B4               	movwf	(??_turnRight90+1)+0
  3091  05D6  0834               	movf	(??_turnRight90+1)+0,w
  3092  05D7  00AD               	movwf	0+(?_waitFor)+01h
  3093  05D8  309D               	movlw	(09Dh)
  3094  05D9  120A  118A  26BF   	fcall	_waitFor
              120A  118A         
  3095                           	line	57
  3096                           ;drive.c: 57: drive(0, 0, 0, 0);
  3097  05DE  1283               	bcf	status, 5	;RP0=0, select bank0
  3098  05DF  1303               	bcf	status, 6	;RP1=0, select bank0
  3099  05E0  01AC               	clrf	(?_drive)
  3100  05E1  01AD               	clrf	0+(?_drive)+01h
  3101  05E2  01AE               	clrf	0+(?_drive)+02h
  3102  05E3  3000               	movlw	(0)
  3103  05E4  120A  118A  2552   	fcall	_drive
              120A  118A         
  3104                           	line	58
  3105                           	
  3106  05E9                     l1414:	
  3107  05E9  0008               	return
  3108                           	opt stack 0
  3109                           GLOBAL	__end_of_turnRight90
  3110  05EA                     	__end_of_turnRight90:
  3111 ;; =============== function _turnRight90 ends ============
  3112                           
  3113                           	signat	_turnRight90,88
  3114                           	global	_turnLeft90
  3115                           psect	text1234,local,class=CODE,delta=2
  3116                           global __ptext1234
  3117  066D                     __ptext1234:
  3118                           
  3119 ;; *************** function _turnLeft90 *****************
  3120 ;; Defined at:
  3121 ;;		line 47 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\driv
       e.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;		None               void
  3128 ;; Registers used:
  3129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0
  3137 ;;      Temps:          0       1       0       0       0
  3138 ;;      Totals:         0       1       0       0       0
  3139 ;;Total ram usage:        1 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    4
  3142 ;; This function calls:
  3143 ;;		_drive
  3144 ;;		_waitFor
  3145 ;; This function is called by:
  3146 ;;		_goLeft
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           psect	text1234
  3150                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\drive.c"
  3151                           	line	47
  3152                           	global	__size_of_turnLeft90
  3153  0029                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  3154                           	
  3155  066D                     _turnLeft90:	
  3156                           	opt	stack 0
  3157                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3158                           	line	48
  3159                           	
  3160  066D                     l8104:	
  3161                           ;drive.c: 48: drive(0, 25, 0, 1);
  3162  066D  3019               	movlw	(019h)
  3163  066E  1283               	bcf	status, 5	;RP0=0, select bank0
  3164  066F  1303               	bcf	status, 6	;RP1=0, select bank0
  3165  0670  00B3               	movwf	(??_turnLeft90+0)+0
  3166  0671  0833               	movf	(??_turnLeft90+0)+0,w
  3167  0672  00AC               	movwf	(?_drive)
  3168  0673  01AD               	clrf	0+(?_drive)+01h
  3169  0674  01AE               	clrf	0+(?_drive)+02h
  3170  0675  1403               	bsf	status,0
  3171  0676  0DAE               	rlf	0+(?_drive)+02h,f
  3172  0677  3000               	movlw	(0)
  3173  0678  120A  118A  2552   	fcall	_drive
              120A  118A         
  3174                           	line	49
  3175                           ;drive.c: 49: waitFor(157,0,85);
  3176  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  3177  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  3178  067F  01AC               	clrf	(?_waitFor)
  3179  0680  3055               	movlw	(055h)
  3180  0681  00B3               	movwf	(??_turnLeft90+0)+0
  3181  0682  0833               	movf	(??_turnLeft90+0)+0,w
  3182  0683  00AD               	movwf	0+(?_waitFor)+01h
  3183  0684  309D               	movlw	(09Dh)
  3184  0685  120A  118A  26BF   	fcall	_waitFor
              120A  118A         
  3185                           	line	50
  3186                           ;drive.c: 50: drive(0, 0, 0, 0);
  3187  068A  1283               	bcf	status, 5	;RP0=0, select bank0
  3188  068B  1303               	bcf	status, 6	;RP1=0, select bank0
  3189  068C  01AC               	clrf	(?_drive)
  3190  068D  01AD               	clrf	0+(?_drive)+01h
  3191  068E  01AE               	clrf	0+(?_drive)+02h
  3192  068F  3000               	movlw	(0)
  3193  0690  120A  118A  2552   	fcall	_drive
              120A  118A         
  3194                           	line	51
  3195                           	
  3196  0695                     l1411:	
  3197  0695  0008               	return
  3198                           	opt stack 0
  3199                           GLOBAL	__end_of_turnLeft90
  3200  0696                     	__end_of_turnLeft90:
  3201 ;; =============== function _turnLeft90 ends ============
  3202                           
  3203                           	signat	_turnLeft90,88
  3204                           	global	_turnAround
  3205                           psect	text1235,local,class=CODE,delta=2
  3206                           global __ptext1235
  3207  0696                     __ptext1235:
  3208                           
  3209 ;; *************** function _turnAround *****************
  3210 ;; Defined at:
  3211 ;;		line 40 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\driv
       e.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       1       0       0       0
  3228 ;;      Totals:         0       1       0       0       0
  3229 ;;Total ram usage:        1 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    4
  3232 ;; This function calls:
  3233 ;;		_drive
  3234 ;;		_waitFor
  3235 ;; This function is called by:
  3236 ;;		_goBackward
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           psect	text1235
  3240                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\drive.c"
  3241                           	line	40
  3242                           	global	__size_of_turnAround
  3243  0029                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  3244                           	
  3245  0696                     _turnAround:	
  3246                           	opt	stack 0
  3247                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3248                           	line	41
  3249                           	
  3250  0696                     l8102:	
  3251                           ;drive.c: 41: drive(0, 25, 0, 1);
  3252  0696  3019               	movlw	(019h)
  3253  0697  1283               	bcf	status, 5	;RP0=0, select bank0
  3254  0698  1303               	bcf	status, 6	;RP1=0, select bank0
  3255  0699  00B3               	movwf	(??_turnAround+0)+0
  3256  069A  0833               	movf	(??_turnAround+0)+0,w
  3257  069B  00AC               	movwf	(?_drive)
  3258  069C  01AD               	clrf	0+(?_drive)+01h
  3259  069D  01AE               	clrf	0+(?_drive)+02h
  3260  069E  1403               	bsf	status,0
  3261  069F  0DAE               	rlf	0+(?_drive)+02h,f
  3262  06A0  3000               	movlw	(0)
  3263  06A1  120A  118A  2552   	fcall	_drive
              120A  118A         
  3264                           	line	42
  3265                           ;drive.c: 42: waitFor(157,0,170);
  3266  06A6  1283               	bcf	status, 5	;RP0=0, select bank0
  3267  06A7  1303               	bcf	status, 6	;RP1=0, select bank0
  3268  06A8  01AC               	clrf	(?_waitFor)
  3269  06A9  30AA               	movlw	(0AAh)
  3270  06AA  00B3               	movwf	(??_turnAround+0)+0
  3271  06AB  0833               	movf	(??_turnAround+0)+0,w
  3272  06AC  00AD               	movwf	0+(?_waitFor)+01h
  3273  06AD  309D               	movlw	(09Dh)
  3274  06AE  120A  118A  26BF   	fcall	_waitFor
              120A  118A         
  3275                           	line	43
  3276                           ;drive.c: 43: drive(0, 0, 0, 0);
  3277  06B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3278  06B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3279  06B5  01AC               	clrf	(?_drive)
  3280  06B6  01AD               	clrf	0+(?_drive)+01h
  3281  06B7  01AE               	clrf	0+(?_drive)+02h
  3282  06B8  3000               	movlw	(0)
  3283  06B9  120A  118A  2552   	fcall	_drive
              120A  118A         
  3284                           	line	44
  3285                           	
  3286  06BE                     l1408:	
  3287  06BE  0008               	return
  3288                           	opt stack 0
  3289                           GLOBAL	__end_of_turnAround
  3290  06BF                     	__end_of_turnAround:
  3291 ;; =============== function _turnAround ends ============
  3292                           
  3293                           	signat	_turnAround,88
  3294                           	global	_driveForDistance
  3295                           psect	text1236,local,class=CODE,delta=2
  3296                           global __ptext1236
  3297  0426                     __ptext1236:
  3298                           
  3299 ;; *************** function _driveForDistance *****************
  3300 ;; Defined at:
  3301 ;;		line 19 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\driv
       e.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  moveDistance    2   19[BANK0 ] int 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  distance        2   25[BANK0 ] int 
  3306 ;;  deltaDistanc    2   23[BANK0 ] int 
  3307 ;;  low             1   28[BANK0 ] volatile unsigned char 
  3308 ;;  high            1   27[BANK0 ] volatile unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;		None               void
  3311 ;; Registers used:
  3312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3318 ;;      Params:         0       2       0       0       0
  3319 ;;      Locals:         0       6       0       0       0
  3320 ;;      Temps:          0       2       0       0       0
  3321 ;;      Totals:         0      10       0       0       0
  3322 ;;Total ram usage:       10 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    4
  3325 ;; This function calls:
  3326 ;;		_drive
  3327 ;;		_ser_putch
  3328 ;;		_ser_getch
  3329 ;; This function is called by:
  3330 ;;		_goBackward
  3331 ;;		_goForward
  3332 ;;		_goLeft
  3333 ;;		_goRight
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           psect	text1236
  3337                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\drive.c"
  3338                           	line	19
  3339                           	global	__size_of_driveForDistance
  3340  0068                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  3341                           	
  3342  0426                     _driveForDistance:	
  3343                           	opt	stack 0
  3344                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3345                           	line	22
  3346                           	
  3347  0426                     l8088:	
  3348                           ;drive.c: 21: volatile char high, low;
  3349                           ;drive.c: 22: int deltaDistance = 0;
  3350  0426  1283               	bcf	status, 5	;RP0=0, select bank0
  3351  0427  1303               	bcf	status, 6	;RP1=0, select bank0
  3352  0428  01B7               	clrf	(driveForDistance@deltaDistance)
  3353  0429  01B8               	clrf	(driveForDistance@deltaDistance+1)
  3354                           	line	23
  3355                           ;drive.c: 23: int distance = 0;
  3356  042A  01B9               	clrf	(driveForDistance@distance)
  3357  042B  01BA               	clrf	(driveForDistance@distance+1)
  3358                           	line	25
  3359                           	
  3360  042C                     l8090:	
  3361                           ;drive.c: 25: drive(0, 125, 128, 0);
  3362  042C  307D               	movlw	(07Dh)
  3363  042D  00B5               	movwf	(??_driveForDistance+0)+0
  3364  042E  0835               	movf	(??_driveForDistance+0)+0,w
  3365  042F  00AC               	movwf	(?_drive)
  3366  0430  3080               	movlw	(080h)
  3367  0431  00B6               	movwf	(??_driveForDistance+1)+0
  3368  0432  0836               	movf	(??_driveForDistance+1)+0,w
  3369  0433  00AD               	movwf	0+(?_drive)+01h
  3370  0434  01AE               	clrf	0+(?_drive)+02h
  3371  0435  3000               	movlw	(0)
  3372  0436  120A  118A  2552   	fcall	_drive
              120A  118A         
  3373                           	line	27
  3374                           ;drive.c: 27: while(distance >= moveDistance)
  3375  043B  2C71               	goto	l8098
  3376                           	
  3377  043C                     l1403:	
  3378                           	line	29
  3379                           	
  3380  043C                     l8092:	
  3381                           ;drive.c: 28: {
  3382                           ;drive.c: 29: ser_putch(137);
  3383  043C  3089               	movlw	(089h)
  3384  043D  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  3385                           	line	30
  3386                           ;drive.c: 30: ser_putch(19);
  3387  0442  3013               	movlw	(013h)
  3388  0443  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  3389                           	line	31
  3390                           ;drive.c: 31: high = ser_getch();
  3391  0448  120A  158A  2777   	fcall	_ser_getch
              120A  118A         
  3392  044D  1283               	bcf	status, 5	;RP0=0, select bank0
  3393  044E  1303               	bcf	status, 6	;RP1=0, select bank0
  3394  044F  00B5               	movwf	(??_driveForDistance+0)+0
  3395  0450  0835               	movf	(??_driveForDistance+0)+0,w
  3396  0451  00BB               	movwf	(driveForDistance@high)	;volatile
  3397                           	line	32
  3398                           ;drive.c: 32: low = ser_getch();
  3399  0452  120A  158A  2777   	fcall	_ser_getch
              120A  118A         
  3400  0457  1283               	bcf	status, 5	;RP0=0, select bank0
  3401  0458  1303               	bcf	status, 6	;RP1=0, select bank0
  3402  0459  00B5               	movwf	(??_driveForDistance+0)+0
  3403  045A  0835               	movf	(??_driveForDistance+0)+0,w
  3404  045B  00BC               	movwf	(driveForDistance@low)	;volatile
  3405                           	line	33
  3406                           	
  3407  045C                     l8094:	
  3408                           ;drive.c: 33: deltaDistance = high*256 + low;
  3409  045C  083B               	movf	(driveForDistance@high),w	;volatile
  3410  045D  00B5               	movwf	(??_driveForDistance+0)+0
  3411  045E  01B6               	clrf	(??_driveForDistance+0)+0+1
  3412  045F  0835               	movf	(??_driveForDistance+0)+0,w
  3413  0460  00B6               	movwf	(??_driveForDistance+0)+1
  3414  0461  01B5               	clrf	(??_driveForDistance+0)+0
  3415  0462  083C               	movf	(driveForDistance@low),w	;volatile
  3416  0463  0735               	addwf	0+(??_driveForDistance+0)+0,w
  3417  0464  00B7               	movwf	(driveForDistance@deltaDistance)
  3418  0465  3000               	movlw	0
  3419  0466  1803               	skipnc
  3420  0467  3001               	movlw	1
  3421  0468  0736               	addwf	1+(??_driveForDistance+0)+0,w
  3422  0469  00B8               	movwf	1+(driveForDistance@deltaDistance)
  3423                           	line	34
  3424                           	
  3425  046A                     l8096:	
  3426                           ;drive.c: 34: distance += deltaDistance;
  3427  046A  0837               	movf	(driveForDistance@deltaDistance),w
  3428  046B  07B9               	addwf	(driveForDistance@distance),f
  3429  046C  1803               	skipnc
  3430  046D  0ABA               	incf	(driveForDistance@distance+1),f
  3431  046E  0838               	movf	(driveForDistance@deltaDistance+1),w
  3432  046F  07BA               	addwf	(driveForDistance@distance+1),f
  3433  0470  2C71               	goto	l8098
  3434                           	line	35
  3435                           	
  3436  0471                     l1402:	
  3437                           	line	27
  3438                           	
  3439  0471                     l8098:	
  3440  0471  1283               	bcf	status, 5	;RP0=0, select bank0
  3441  0472  1303               	bcf	status, 6	;RP1=0, select bank0
  3442  0473  083A               	movf	(driveForDistance@distance+1),w
  3443  0474  3A80               	xorlw	80h
  3444  0475  00B5               	movwf	(??_driveForDistance+0)+0
  3445  0476  0834               	movf	(driveForDistance@moveDistance+1),w
  3446  0477  3A80               	xorlw	80h
  3447  0478  0235               	subwf	(??_driveForDistance+0)+0,w
  3448  0479  1D03               	skipz
  3449  047A  2C7D               	goto	u3635
  3450  047B  0833               	movf	(driveForDistance@moveDistance),w
  3451  047C  0239               	subwf	(driveForDistance@distance),w
  3452  047D                     u3635:
  3453                           
  3454  047D  1803               	skipnc
  3455  047E  2C80               	goto	u3631
  3456  047F  2C81               	goto	u3630
  3457  0480                     u3631:
  3458  0480  2C3C               	goto	l8092
  3459  0481                     u3630:
  3460  0481  2C82               	goto	l8100
  3461                           	
  3462  0482                     l1404:	
  3463                           	line	36
  3464                           	
  3465  0482                     l8100:	
  3466                           ;drive.c: 35: }
  3467                           ;drive.c: 36: drive(0, 0, 0, 0);
  3468  0482  1283               	bcf	status, 5	;RP0=0, select bank0
  3469  0483  1303               	bcf	status, 6	;RP1=0, select bank0
  3470  0484  01AC               	clrf	(?_drive)
  3471  0485  01AD               	clrf	0+(?_drive)+01h
  3472  0486  01AE               	clrf	0+(?_drive)+02h
  3473  0487  3000               	movlw	(0)
  3474  0488  120A  118A  2552   	fcall	_drive
              120A  118A         
  3475                           	line	37
  3476                           	
  3477  048D                     l1405:	
  3478  048D  0008               	return
  3479                           	opt stack 0
  3480                           GLOBAL	__end_of_driveForDistance
  3481  048E                     	__end_of_driveForDistance:
  3482 ;; =============== function _driveForDistance ends ============
  3483                           
  3484                           	signat	_driveForDistance,4216
  3485                           	global	_adc_read_channel
  3486                           psect	text1237,local,class=CODE,delta=2
  3487                           global __ptext1237
  3488  04D2                     __ptext1237:
  3489                           
  3490 ;; *************** function _adc_read_channel *****************
  3491 ;; Defined at:
  3492 ;;		line 7 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\adc.c
       "
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  channel         1    wreg     unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  channel         1   40[BANK0 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   37[BANK0 ] int 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       2       0       0       0
  3507 ;;      Locals:         0       1       0       0       0
  3508 ;;      Temps:          0       1       0       0       0
  3509 ;;      Totals:         0       4       0       0       0
  3510 ;;Total ram usage:        4 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    4
  3513 ;; This function calls:
  3514 ;;		_adc_read
  3515 ;; This function is called by:
  3516 ;;		_readIR
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           psect	text1237
  3520                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\adc.c"
  3521                           	line	7
  3522                           	global	__size_of_adc_read_channel
  3523  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  3524                           	
  3525  04D2                     _adc_read_channel:	
  3526 ;; hardware stack exceeded
  3527                           	opt	stack 0
  3528                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3529                           ;adc_read_channel@channel stored from wreg
  3530  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  3531  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  3532  04D4  00C8               	movwf	(adc_read_channel@channel)
  3533                           	line	8
  3534                           	
  3535  04D5                     l7560:	
  3536                           ;adc.c: 8: switch(channel)
  3537  04D5  2CEF               	goto	l7568
  3538                           	line	10
  3539                           ;adc.c: 9: {
  3540                           ;adc.c: 10: case 0:
  3541                           	
  3542  04D6                     l690:	
  3543                           	line	11
  3544                           ;adc.c: 11: CHS0 = 0;
  3545  04D6  119F               	bcf	(251/8),(251)&7
  3546                           	line	12
  3547                           ;adc.c: 12: CHS1 = 0;
  3548  04D7  121F               	bcf	(252/8),(252)&7
  3549                           	line	13
  3550                           ;adc.c: 13: CHS2 = 0;
  3551  04D8  129F               	bcf	(253/8),(253)&7
  3552                           	line	14
  3553                           ;adc.c: 14: break;
  3554  04D9  2D00               	goto	l7570
  3555                           	line	15
  3556                           ;adc.c: 15: case 1:
  3557                           	
  3558  04DA                     l692:	
  3559                           	line	16
  3560                           ;adc.c: 16: CHS0 = 1;
  3561  04DA  159F               	bsf	(251/8),(251)&7
  3562                           	line	17
  3563                           ;adc.c: 17: CHS1 = 0;
  3564  04DB  121F               	bcf	(252/8),(252)&7
  3565                           	line	18
  3566                           ;adc.c: 18: CHS2 = 0;
  3567  04DC  129F               	bcf	(253/8),(253)&7
  3568                           	line	19
  3569                           ;adc.c: 19: break;
  3570  04DD  2D00               	goto	l7570
  3571                           	line	20
  3572                           ;adc.c: 20: case 2:
  3573                           	
  3574  04DE                     l693:	
  3575                           	line	21
  3576                           ;adc.c: 21: CHS0 = 0;
  3577  04DE  119F               	bcf	(251/8),(251)&7
  3578                           	line	22
  3579                           ;adc.c: 22: CHS1 = 1;
  3580  04DF  161F               	bsf	(252/8),(252)&7
  3581                           	line	23
  3582                           ;adc.c: 23: CHS2 = 0;
  3583  04E0  129F               	bcf	(253/8),(253)&7
  3584                           	line	24
  3585                           ;adc.c: 24: break;
  3586  04E1  2D00               	goto	l7570
  3587                           	line	25
  3588                           ;adc.c: 25: case 3:
  3589                           	
  3590  04E2                     l694:	
  3591                           	line	26
  3592                           ;adc.c: 26: CHS0 = 1;
  3593  04E2  159F               	bsf	(251/8),(251)&7
  3594                           	line	27
  3595                           ;adc.c: 27: CHS1 = 1;
  3596  04E3  161F               	bsf	(252/8),(252)&7
  3597                           	line	28
  3598                           ;adc.c: 28: CHS2 = 0;
  3599  04E4  129F               	bcf	(253/8),(253)&7
  3600                           	line	29
  3601                           ;adc.c: 29: break;
  3602  04E5  2D00               	goto	l7570
  3603                           	line	30
  3604                           ;adc.c: 30: case 4:
  3605                           	
  3606  04E6                     l695:	
  3607                           	line	31
  3608                           ;adc.c: 31: CHS0 = 0;
  3609  04E6  119F               	bcf	(251/8),(251)&7
  3610                           	line	32
  3611                           ;adc.c: 32: CHS1 = 0;
  3612  04E7  121F               	bcf	(252/8),(252)&7
  3613                           	line	33
  3614                           ;adc.c: 33: CHS2 = 1;
  3615  04E8  169F               	bsf	(253/8),(253)&7
  3616                           	line	34
  3617                           ;adc.c: 34: break;
  3618  04E9  2D00               	goto	l7570
  3619                           	line	37
  3620                           ;adc.c: 37: default:
  3621                           	
  3622  04EA                     l696:	
  3623                           	line	38
  3624                           	
  3625  04EA                     l7562:	
  3626                           ;adc.c: 38: return 0;
  3627  04EA  01C5               	clrf	(?_adc_read_channel)
  3628  04EB  01C6               	clrf	(?_adc_read_channel+1)
  3629  04EC  2D12               	goto	l697
  3630                           	
  3631  04ED                     l7564:	
  3632  04ED  2D12               	goto	l697
  3633                           	line	39
  3634                           	
  3635  04EE                     l7566:	
  3636                           ;adc.c: 39: }
  3637  04EE  2D00               	goto	l7570
  3638                           	line	8
  3639                           	
  3640  04EF                     l689:	
  3641                           	
  3642  04EF                     l7568:	
  3643  04EF  0848               	movf	(adc_read_channel@channel),w
  3644                           	; Switch size 1, requested type "space"
  3645                           ; Number of cases is 5, Range of values is 0 to 4
  3646                           ; switch strategies available:
  3647                           ; Name         Instructions Cycles
  3648                           ; simple_byte           16     9 (average)
  3649                           ; direct_byte           23     8 (fixed)
  3650                           ; jumptable            260     6 (fixed)
  3651                           ; rangetable             9     6 (fixed)
  3652                           ; spacedrange           16     9 (fixed)
  3653                           ; locatedrange           5     3 (fixed)
  3654                           ;	Chosen strategy is simple_byte
  3655                           
  3656                           	opt asmopt_off
  3657  04F0  3A00               	xorlw	0^0	; case 0
  3658  04F1  1903               	skipnz
  3659  04F2  2CD6               	goto	l690
  3660  04F3  3A01               	xorlw	1^0	; case 1
  3661  04F4  1903               	skipnz
  3662  04F5  2CDA               	goto	l692
  3663  04F6  3A03               	xorlw	2^1	; case 2
  3664  04F7  1903               	skipnz
  3665  04F8  2CDE               	goto	l693
  3666  04F9  3A01               	xorlw	3^2	; case 3
  3667  04FA  1903               	skipnz
  3668  04FB  2CE2               	goto	l694
  3669  04FC  3A07               	xorlw	4^3	; case 4
  3670  04FD  1903               	skipnz
  3671  04FE  2CE6               	goto	l695
  3672  04FF  2CEA               	goto	l7562
  3673                           	opt asmopt_on
  3674                           
  3675                           	line	39
  3676                           	
  3677  0500                     l691:	
  3678                           	line	41
  3679                           	
  3680  0500                     l7570:	
  3681                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  3682                           	opt asmopt_off
  3683  0500  3053               movlw	83
  3684  0501  00C7               movwf	(??_adc_read_channel+0)+0,f
  3685  0502                     u3817:
  3686  0502  0BC7               decfsz	(??_adc_read_channel+0)+0,f
  3687  0503  2D02               	goto	u3817
  3688                           opt asmopt_on
  3689                           
  3690                           	line	43
  3691                           	
  3692  0504                     l7572:	
  3693                           ;adc.c: 43: return adc_read();
  3694  0504  120A  118A  2513   	fcall	_adc_read
              120A  118A         
  3695  0509  1283               	bcf	status, 5	;RP0=0, select bank0
  3696  050A  1303               	bcf	status, 6	;RP1=0, select bank0
  3697  050B  083A               	movf	(1+(?_adc_read)),w
  3698  050C  01C6               	clrf	(?_adc_read_channel+1)
  3699  050D  07C6               	addwf	(?_adc_read_channel+1)
  3700  050E  0839               	movf	(0+(?_adc_read)),w
  3701  050F  01C5               	clrf	(?_adc_read_channel)
  3702  0510  07C5               	addwf	(?_adc_read_channel)
  3703                           
  3704  0511  2D12               	goto	l697
  3705                           	
  3706  0512                     l7574:	
  3707                           	line	45
  3708                           	
  3709  0512                     l697:	
  3710  0512  0008               	return
  3711                           	opt stack 0
  3712                           GLOBAL	__end_of_adc_read_channel
  3713  0513                     	__end_of_adc_read_channel:
  3714 ;; =============== function _adc_read_channel ends ============
  3715                           
  3716                           	signat	_adc_read_channel,4218
  3717                           	global	_convert
  3718                           psect	text1238,local,class=CODE,delta=2
  3719                           global __ptext1238
  3720  0015                     __ptext1238:
  3721                           
  3722 ;; *************** function _convert *****************
  3723 ;; Defined at:
  3724 ;;		line 11 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\ir.c
       "
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  adc_value       2   33[BANK0 ] int 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2   33[BANK0 ] int 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       2       0       0       0
  3739 ;;      Locals:         0       0       0       0       0
  3740 ;;      Temps:          0       2       0       0       0
  3741 ;;      Totals:         0       4       0       0       0
  3742 ;;Total ram usage:        4 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    3
  3745 ;; This function calls:
  3746 ;;		___wmul
  3747 ;;		___awdiv
  3748 ;; This function is called by:
  3749 ;;		_readIR
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           psect	text1238
  3753                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\ir.c"
  3754                           	line	11
  3755                           	global	__size_of_convert
  3756  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
  3757                           	
  3758  0015                     _convert:	
  3759 ;; hardware stack exceeded
  3760                           	opt	stack 0
  3761                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3762                           	line	12
  3763                           	
  3764  0015                     l8028:	
  3765                           ;ir.c: 12: if(adc_value < 82)
  3766  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  3767  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  3768  0017  0842               	movf	(convert@adc_value+1),w
  3769  0018  3A80               	xorlw	80h
  3770  0019  00FF               	movwf	btemp+1
  3771  001A  3080               	movlw	(high(052h))^80h
  3772  001B  027F               	subwf	btemp+1,w
  3773  001C  1D03               	skipz
  3774  001D  2820               	goto	u3565
  3775  001E  3052               	movlw	low(052h)
  3776  001F  0241               	subwf	(convert@adc_value),w
  3777  0020                     u3565:
  3778                           
  3779  0020  1803               	skipnc
  3780  0021  2823               	goto	u3561
  3781  0022  2824               	goto	u3560
  3782  0023                     u3561:
  3783  0023  282D               	goto	l8036
  3784  0024                     u3560:
  3785                           	line	13
  3786                           	
  3787  0024                     l8030:	
  3788                           ;ir.c: 13: return 999;
  3789  0024  30E7               	movlw	low(03E7h)
  3790  0025  1283               	bcf	status, 5	;RP0=0, select bank0
  3791  0026  1303               	bcf	status, 6	;RP1=0, select bank0
  3792  0027  00C1               	movwf	(?_convert)
  3793  0028  3003               	movlw	high(03E7h)
  3794  0029  00C2               	movwf	((?_convert))+1
  3795  002A  29E3               	goto	l4397
  3796                           	
  3797  002B                     l8032:	
  3798  002B  29E3               	goto	l4397
  3799                           	
  3800  002C                     l8034:	
  3801  002C  29E3               	goto	l4397
  3802                           	line	14
  3803                           	
  3804  002D                     l4396:	
  3805                           	
  3806  002D                     l8036:	
  3807                           ;ir.c: 14: else if(adc_value < 133)
  3808  002D  1283               	bcf	status, 5	;RP0=0, select bank0
  3809  002E  1303               	bcf	status, 6	;RP1=0, select bank0
  3810  002F  0842               	movf	(convert@adc_value+1),w
  3811  0030  3A80               	xorlw	80h
  3812  0031  00FF               	movwf	btemp+1
  3813  0032  3080               	movlw	(high(085h))^80h
  3814  0033  027F               	subwf	btemp+1,w
  3815  0034  1D03               	skipz
  3816  0035  2838               	goto	u3575
  3817  0036  3085               	movlw	low(085h)
  3818  0037  0241               	subwf	(convert@adc_value),w
  3819  0038                     u3575:
  3820                           
  3821  0038  1803               	skipnc
  3822  0039  283B               	goto	u3571
  3823  003A  283C               	goto	u3570
  3824  003B                     u3571:
  3825  003B  2874               	goto	l8044
  3826  003C                     u3570:
  3827                           	line	15
  3828                           	
  3829  003C                     l8038:	
  3830                           ;ir.c: 15: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
  3831  003C  3033               	movlw	low(033h)
  3832  003D  1283               	bcf	status, 5	;RP0=0, select bank0
  3833  003E  1303               	bcf	status, 6	;RP1=0, select bank0
  3834  003F  00B0               	movwf	(?___awdiv)
  3835  0040  3000               	movlw	high(033h)
  3836  0041  00B1               	movwf	((?___awdiv))+1
  3837  0042  0941               	comf	(convert@adc_value),w
  3838  0043  00C3               	movwf	(??_convert+0)+0
  3839  0044  0942               	comf	(convert@adc_value+1),w
  3840  0045  00C4               	movwf	((??_convert+0)+0+1)
  3841  0046  0AC3               	incf	(??_convert+0)+0,f
  3842  0047  1903               	skipnz
  3843  0048  0AC4               	incf	((??_convert+0)+0+1),f
  3844  0049  0843               	movf	0+(??_convert+0)+0,w
  3845  004A  3E85               	addlw	low(085h)
  3846  004B  00AA               	movwf	(?___wmul)
  3847  004C  0844               	movf	1+(??_convert+0)+0,w
  3848  004D  1803               	skipnc
  3849  004E  3E01               	addlw	1
  3850  004F  3E00               	addlw	high(085h)
  3851  0050  00AB               	movwf	1+(?___wmul)
  3852  0051  3032               	movlw	low(032h)
  3853  0052  00AC               	movwf	0+(?___wmul)+02h
  3854  0053  3000               	movlw	high(032h)
  3855  0054  00AD               	movwf	(0+(?___wmul)+02h)+1
  3856  0055  120A  118A  2616   	fcall	___wmul
              120A  118A         
  3857  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  3858  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  3859  005C  082B               	movf	(1+(?___wmul)),w
  3860  005D  01B3               	clrf	1+(?___awdiv)+02h
  3861  005E  07B3               	addwf	1+(?___awdiv)+02h
  3862  005F  082A               	movf	(0+(?___wmul)),w
  3863  0060  01B2               	clrf	0+(?___awdiv)+02h
  3864  0061  07B2               	addwf	0+(?___awdiv)+02h
  3865                           
  3866  0062  120A  118A  233D   	fcall	___awdiv
              120A  118A         
  3867  0067  1283               	bcf	status, 5	;RP0=0, select bank0
  3868  0068  1303               	bcf	status, 6	;RP1=0, select bank0
  3869  0069  0830               	movf	(0+(?___awdiv)),w
  3870  006A  3E61               	addlw	low(061h)
  3871  006B  00C1               	movwf	(?_convert)
  3872  006C  0831               	movf	(1+(?___awdiv)),w
  3873  006D  1803               	skipnc
  3874  006E  3E01               	addlw	1
  3875  006F  3E00               	addlw	high(061h)
  3876  0070  00C2               	movwf	1+(?_convert)
  3877  0071  29E3               	goto	l4397
  3878                           	
  3879  0072                     l8040:	
  3880  0072  29E3               	goto	l4397
  3881                           	
  3882  0073                     l8042:	
  3883  0073  29E3               	goto	l4397
  3884                           	line	16
  3885                           	
  3886  0074                     l4399:	
  3887                           	
  3888  0074                     l8044:	
  3889                           ;ir.c: 16: else if(adc_value < 184)
  3890  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  3891  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  3892  0076  0842               	movf	(convert@adc_value+1),w
  3893  0077  3A80               	xorlw	80h
  3894  0078  00FF               	movwf	btemp+1
  3895  0079  3080               	movlw	(high(0B8h))^80h
  3896  007A  027F               	subwf	btemp+1,w
  3897  007B  1D03               	skipz
  3898  007C  287F               	goto	u3585
  3899  007D  30B8               	movlw	low(0B8h)
  3900  007E  0241               	subwf	(convert@adc_value),w
  3901  007F                     u3585:
  3902                           
  3903  007F  1803               	skipnc
  3904  0080  2882               	goto	u3581
  3905  0081  2883               	goto	u3580
  3906  0082                     u3581:
  3907  0082  28BB               	goto	l8052
  3908  0083                     u3580:
  3909                           	line	17
  3910                           	
  3911  0083                     l8046:	
  3912                           ;ir.c: 17: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
  3913  0083  3033               	movlw	low(033h)
  3914  0084  1283               	bcf	status, 5	;RP0=0, select bank0
  3915  0085  1303               	bcf	status, 6	;RP1=0, select bank0
  3916  0086  00B0               	movwf	(?___awdiv)
  3917  0087  3000               	movlw	high(033h)
  3918  0088  00B1               	movwf	((?___awdiv))+1
  3919  0089  0941               	comf	(convert@adc_value),w
  3920  008A  00C3               	movwf	(??_convert+0)+0
  3921  008B  0942               	comf	(convert@adc_value+1),w
  3922  008C  00C4               	movwf	((??_convert+0)+0+1)
  3923  008D  0AC3               	incf	(??_convert+0)+0,f
  3924  008E  1903               	skipnz
  3925  008F  0AC4               	incf	((??_convert+0)+0+1),f
  3926  0090  0843               	movf	0+(??_convert+0)+0,w
  3927  0091  3EB8               	addlw	low(0B8h)
  3928  0092  00AA               	movwf	(?___wmul)
  3929  0093  0844               	movf	1+(??_convert+0)+0,w
  3930  0094  1803               	skipnc
  3931  0095  3E01               	addlw	1
  3932  0096  3E00               	addlw	high(0B8h)
  3933  0097  00AB               	movwf	1+(?___wmul)
  3934  0098  301E               	movlw	low(01Eh)
  3935  0099  00AC               	movwf	0+(?___wmul)+02h
  3936  009A  3000               	movlw	high(01Eh)
  3937  009B  00AD               	movwf	(0+(?___wmul)+02h)+1
  3938  009C  120A  118A  2616   	fcall	___wmul
              120A  118A         
  3939  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  3940  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  3941  00A3  082B               	movf	(1+(?___wmul)),w
  3942  00A4  01B3               	clrf	1+(?___awdiv)+02h
  3943  00A5  07B3               	addwf	1+(?___awdiv)+02h
  3944  00A6  082A               	movf	(0+(?___wmul)),w
  3945  00A7  01B2               	clrf	0+(?___awdiv)+02h
  3946  00A8  07B2               	addwf	0+(?___awdiv)+02h
  3947                           
  3948  00A9  120A  118A  233D   	fcall	___awdiv
              120A  118A         
  3949  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  3950  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  3951  00B0  0830               	movf	(0+(?___awdiv)),w
  3952  00B1  3E43               	addlw	low(043h)
  3953  00B2  00C1               	movwf	(?_convert)
  3954  00B3  0831               	movf	(1+(?___awdiv)),w
  3955  00B4  1803               	skipnc
  3956  00B5  3E01               	addlw	1
  3957  00B6  3E00               	addlw	high(043h)
  3958  00B7  00C2               	movwf	1+(?_convert)
  3959  00B8  29E3               	goto	l4397
  3960                           	
  3961  00B9                     l8048:	
  3962  00B9  29E3               	goto	l4397
  3963                           	
  3964  00BA                     l8050:	
  3965  00BA  29E3               	goto	l4397
  3966                           	line	18
  3967                           	
  3968  00BB                     l4401:	
  3969                           	
  3970  00BB                     l8052:	
  3971                           ;ir.c: 18: else if(adc_value < 256)
  3972  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  3973  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  3974  00BD  0842               	movf	(convert@adc_value+1),w
  3975  00BE  3A80               	xorlw	80h
  3976  00BF  00FF               	movwf	btemp+1
  3977  00C0  3081               	movlw	(high(0100h))^80h
  3978  00C1  027F               	subwf	btemp+1,w
  3979  00C2  1D03               	skipz
  3980  00C3  28C6               	goto	u3595
  3981  00C4  3000               	movlw	low(0100h)
  3982  00C5  0241               	subwf	(convert@adc_value),w
  3983  00C6                     u3595:
  3984                           
  3985  00C6  1803               	skipnc
  3986  00C7  28C9               	goto	u3591
  3987  00C8  28CA               	goto	u3590
  3988  00C9                     u3591:
  3989  00C9  2902               	goto	l8060
  3990  00CA                     u3590:
  3991                           	line	19
  3992                           	
  3993  00CA                     l8054:	
  3994                           ;ir.c: 19: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
  3995  00CA  3048               	movlw	low(048h)
  3996  00CB  1283               	bcf	status, 5	;RP0=0, select bank0
  3997  00CC  1303               	bcf	status, 6	;RP1=0, select bank0
  3998  00CD  00B0               	movwf	(?___awdiv)
  3999  00CE  3000               	movlw	high(048h)
  4000  00CF  00B1               	movwf	((?___awdiv))+1
  4001  00D0  0941               	comf	(convert@adc_value),w
  4002  00D1  00C3               	movwf	(??_convert+0)+0
  4003  00D2  0942               	comf	(convert@adc_value+1),w
  4004  00D3  00C4               	movwf	((??_convert+0)+0+1)
  4005  00D4  0AC3               	incf	(??_convert+0)+0,f
  4006  00D5  1903               	skipnz
  4007  00D6  0AC4               	incf	((??_convert+0)+0+1),f
  4008  00D7  0843               	movf	0+(??_convert+0)+0,w
  4009  00D8  3E00               	addlw	low(0100h)
  4010  00D9  00AA               	movwf	(?___wmul)
  4011  00DA  0844               	movf	1+(??_convert+0)+0,w
  4012  00DB  1803               	skipnc
  4013  00DC  3E01               	addlw	1
  4014  00DD  3E01               	addlw	high(0100h)
  4015  00DE  00AB               	movwf	1+(?___wmul)
  4016  00DF  3014               	movlw	low(014h)
  4017  00E0  00AC               	movwf	0+(?___wmul)+02h
  4018  00E1  3000               	movlw	high(014h)
  4019  00E2  00AD               	movwf	(0+(?___wmul)+02h)+1
  4020  00E3  120A  118A  2616   	fcall	___wmul
              120A  118A         
  4021  00E8  1283               	bcf	status, 5	;RP0=0, select bank0
  4022  00E9  1303               	bcf	status, 6	;RP1=0, select bank0
  4023  00EA  082B               	movf	(1+(?___wmul)),w
  4024  00EB  01B3               	clrf	1+(?___awdiv)+02h
  4025  00EC  07B3               	addwf	1+(?___awdiv)+02h
  4026  00ED  082A               	movf	(0+(?___wmul)),w
  4027  00EE  01B2               	clrf	0+(?___awdiv)+02h
  4028  00EF  07B2               	addwf	0+(?___awdiv)+02h
  4029                           
  4030  00F0  120A  118A  233D   	fcall	___awdiv
              120A  118A         
  4031  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
  4032  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
  4033  00F7  0830               	movf	(0+(?___awdiv)),w
  4034  00F8  3E2E               	addlw	low(02Eh)
  4035  00F9  00C1               	movwf	(?_convert)
  4036  00FA  0831               	movf	(1+(?___awdiv)),w
  4037  00FB  1803               	skipnc
  4038  00FC  3E01               	addlw	1
  4039  00FD  3E00               	addlw	high(02Eh)
  4040  00FE  00C2               	movwf	1+(?_convert)
  4041  00FF  29E3               	goto	l4397
  4042                           	
  4043  0100                     l8056:	
  4044  0100  29E3               	goto	l4397
  4045                           	
  4046  0101                     l8058:	
  4047  0101  29E3               	goto	l4397
  4048                           	line	20
  4049                           	
  4050  0102                     l4403:	
  4051                           	
  4052  0102                     l8060:	
  4053                           ;ir.c: 20: else if(adc_value < 317)
  4054  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  4055  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  4056  0104  0842               	movf	(convert@adc_value+1),w
  4057  0105  3A80               	xorlw	80h
  4058  0106  00FF               	movwf	btemp+1
  4059  0107  3081               	movlw	(high(013Dh))^80h
  4060  0108  027F               	subwf	btemp+1,w
  4061  0109  1D03               	skipz
  4062  010A  290D               	goto	u3605
  4063  010B  303D               	movlw	low(013Dh)
  4064  010C  0241               	subwf	(convert@adc_value),w
  4065  010D                     u3605:
  4066                           
  4067  010D  1803               	skipnc
  4068  010E  2910               	goto	u3601
  4069  010F  2911               	goto	u3600
  4070  0110                     u3601:
  4071  0110  2949               	goto	l8068
  4072  0111                     u3600:
  4073                           	line	21
  4074                           	
  4075  0111                     l8062:	
  4076                           ;ir.c: 21: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
  4077  0111  303D               	movlw	low(03Dh)
  4078  0112  1283               	bcf	status, 5	;RP0=0, select bank0
  4079  0113  1303               	bcf	status, 6	;RP1=0, select bank0
  4080  0114  00B0               	movwf	(?___awdiv)
  4081  0115  3000               	movlw	high(03Dh)
  4082  0116  00B1               	movwf	((?___awdiv))+1
  4083  0117  0941               	comf	(convert@adc_value),w
  4084  0118  00C3               	movwf	(??_convert+0)+0
  4085  0119  0942               	comf	(convert@adc_value+1),w
  4086  011A  00C4               	movwf	((??_convert+0)+0+1)
  4087  011B  0AC3               	incf	(??_convert+0)+0,f
  4088  011C  1903               	skipnz
  4089  011D  0AC4               	incf	((??_convert+0)+0+1),f
  4090  011E  0843               	movf	0+(??_convert+0)+0,w
  4091  011F  3E3D               	addlw	low(013Dh)
  4092  0120  00AA               	movwf	(?___wmul)
  4093  0121  0844               	movf	1+(??_convert+0)+0,w
  4094  0122  1803               	skipnc
  4095  0123  3E01               	addlw	1
  4096  0124  3E01               	addlw	high(013Dh)
  4097  0125  00AB               	movwf	1+(?___wmul)
  4098  0126  300A               	movlw	low(0Ah)
  4099  0127  00AC               	movwf	0+(?___wmul)+02h
  4100  0128  3000               	movlw	high(0Ah)
  4101  0129  00AD               	movwf	(0+(?___wmul)+02h)+1
  4102  012A  120A  118A  2616   	fcall	___wmul
              120A  118A         
  4103  012F  1283               	bcf	status, 5	;RP0=0, select bank0
  4104  0130  1303               	bcf	status, 6	;RP1=0, select bank0
  4105  0131  082B               	movf	(1+(?___wmul)),w
  4106  0132  01B3               	clrf	1+(?___awdiv)+02h
  4107  0133  07B3               	addwf	1+(?___awdiv)+02h
  4108  0134  082A               	movf	(0+(?___wmul)),w
  4109  0135  01B2               	clrf	0+(?___awdiv)+02h
  4110  0136  07B2               	addwf	0+(?___awdiv)+02h
  4111                           
  4112  0137  120A  118A  233D   	fcall	___awdiv
              120A  118A         
  4113  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  4114  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  4115  013E  0830               	movf	(0+(?___awdiv)),w
  4116  013F  3E25               	addlw	low(025h)
  4117  0140  00C1               	movwf	(?_convert)
  4118  0141  0831               	movf	(1+(?___awdiv)),w
  4119  0142  1803               	skipnc
  4120  0143  3E01               	addlw	1
  4121  0144  3E00               	addlw	high(025h)
  4122  0145  00C2               	movwf	1+(?_convert)
  4123  0146  29E3               	goto	l4397
  4124                           	
  4125  0147                     l8064:	
  4126  0147  29E3               	goto	l4397
  4127                           	
  4128  0148                     l8066:	
  4129  0148  29E3               	goto	l4397
  4130                           	line	22
  4131                           	
  4132  0149                     l4405:	
  4133                           	
  4134  0149                     l8068:	
  4135                           ;ir.c: 22: else if(adc_value < 410)
  4136  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  4137  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  4138  014B  0842               	movf	(convert@adc_value+1),w
  4139  014C  3A80               	xorlw	80h
  4140  014D  00FF               	movwf	btemp+1
  4141  014E  3081               	movlw	(high(019Ah))^80h
  4142  014F  027F               	subwf	btemp+1,w
  4143  0150  1D03               	skipz
  4144  0151  2954               	goto	u3615
  4145  0152  309A               	movlw	low(019Ah)
  4146  0153  0241               	subwf	(convert@adc_value),w
  4147  0154                     u3615:
  4148                           
  4149  0154  1803               	skipnc
  4150  0155  2957               	goto	u3611
  4151  0156  2958               	goto	u3610
  4152  0157                     u3611:
  4153  0157  2990               	goto	l8076
  4154  0158                     u3610:
  4155                           	line	23
  4156                           	
  4157  0158                     l8070:	
  4158                           ;ir.c: 23: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
  4159  0158  305D               	movlw	low(05Dh)
  4160  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  4161  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  4162  015B  00B0               	movwf	(?___awdiv)
  4163  015C  3000               	movlw	high(05Dh)
  4164  015D  00B1               	movwf	((?___awdiv))+1
  4165  015E  0941               	comf	(convert@adc_value),w
  4166  015F  00C3               	movwf	(??_convert+0)+0
  4167  0160  0942               	comf	(convert@adc_value+1),w
  4168  0161  00C4               	movwf	((??_convert+0)+0+1)
  4169  0162  0AC3               	incf	(??_convert+0)+0,f
  4170  0163  1903               	skipnz
  4171  0164  0AC4               	incf	((??_convert+0)+0+1),f
  4172  0165  0843               	movf	0+(??_convert+0)+0,w
  4173  0166  3E9A               	addlw	low(019Ah)
  4174  0167  00AA               	movwf	(?___wmul)
  4175  0168  0844               	movf	1+(??_convert+0)+0,w
  4176  0169  1803               	skipnc
  4177  016A  3E01               	addlw	1
  4178  016B  3E01               	addlw	high(019Ah)
  4179  016C  00AB               	movwf	1+(?___wmul)
  4180  016D  300A               	movlw	low(0Ah)
  4181  016E  00AC               	movwf	0+(?___wmul)+02h
  4182  016F  3000               	movlw	high(0Ah)
  4183  0170  00AD               	movwf	(0+(?___wmul)+02h)+1
  4184  0171  120A  118A  2616   	fcall	___wmul
              120A  118A         
  4185  0176  1283               	bcf	status, 5	;RP0=0, select bank0
  4186  0177  1303               	bcf	status, 6	;RP1=0, select bank0
  4187  0178  082B               	movf	(1+(?___wmul)),w
  4188  0179  01B3               	clrf	1+(?___awdiv)+02h
  4189  017A  07B3               	addwf	1+(?___awdiv)+02h
  4190  017B  082A               	movf	(0+(?___wmul)),w
  4191  017C  01B2               	clrf	0+(?___awdiv)+02h
  4192  017D  07B2               	addwf	0+(?___awdiv)+02h
  4193                           
  4194  017E  120A  118A  233D   	fcall	___awdiv
              120A  118A         
  4195  0183  1283               	bcf	status, 5	;RP0=0, select bank0
  4196  0184  1303               	bcf	status, 6	;RP1=0, select bank0
  4197  0185  0830               	movf	(0+(?___awdiv)),w
  4198  0186  3E1C               	addlw	low(01Ch)
  4199  0187  00C1               	movwf	(?_convert)
  4200  0188  0831               	movf	(1+(?___awdiv)),w
  4201  0189  1803               	skipnc
  4202  018A  3E01               	addlw	1
  4203  018B  3E00               	addlw	high(01Ch)
  4204  018C  00C2               	movwf	1+(?_convert)
  4205  018D  29E3               	goto	l4397
  4206                           	
  4207  018E                     l8072:	
  4208  018E  29E3               	goto	l4397
  4209                           	
  4210  018F                     l8074:	
  4211  018F  29E3               	goto	l4397
  4212                           	line	24
  4213                           	
  4214  0190                     l4407:	
  4215                           	
  4216  0190                     l8076:	
  4217                           ;ir.c: 24: else if(adc_value < 522)
  4218  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  4219  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  4220  0192  0842               	movf	(convert@adc_value+1),w
  4221  0193  3A80               	xorlw	80h
  4222  0194  00FF               	movwf	btemp+1
  4223  0195  3082               	movlw	(high(020Ah))^80h
  4224  0196  027F               	subwf	btemp+1,w
  4225  0197  1D03               	skipz
  4226  0198  299B               	goto	u3625
  4227  0199  300A               	movlw	low(020Ah)
  4228  019A  0241               	subwf	(convert@adc_value),w
  4229  019B                     u3625:
  4230                           
  4231  019B  1803               	skipnc
  4232  019C  299E               	goto	u3621
  4233  019D  299F               	goto	u3620
  4234  019E                     u3621:
  4235  019E  29D7               	goto	l8084
  4236  019F                     u3620:
  4237                           	line	25
  4238                           	
  4239  019F                     l8078:	
  4240                           ;ir.c: 25: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
  4241  019F  3070               	movlw	low(070h)
  4242  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  4243  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  4244  01A2  00B0               	movwf	(?___awdiv)
  4245  01A3  3000               	movlw	high(070h)
  4246  01A4  00B1               	movwf	((?___awdiv))+1
  4247  01A5  0941               	comf	(convert@adc_value),w
  4248  01A6  00C3               	movwf	(??_convert+0)+0
  4249  01A7  0942               	comf	(convert@adc_value+1),w
  4250  01A8  00C4               	movwf	((??_convert+0)+0+1)
  4251  01A9  0AC3               	incf	(??_convert+0)+0,f
  4252  01AA  1903               	skipnz
  4253  01AB  0AC4               	incf	((??_convert+0)+0+1),f
  4254  01AC  0843               	movf	0+(??_convert+0)+0,w
  4255  01AD  3E0A               	addlw	low(020Ah)
  4256  01AE  00AA               	movwf	(?___wmul)
  4257  01AF  0844               	movf	1+(??_convert+0)+0,w
  4258  01B0  1803               	skipnc
  4259  01B1  3E01               	addlw	1
  4260  01B2  3E02               	addlw	high(020Ah)
  4261  01B3  00AB               	movwf	1+(?___wmul)
  4262  01B4  300A               	movlw	low(0Ah)
  4263  01B5  00AC               	movwf	0+(?___wmul)+02h
  4264  01B6  3000               	movlw	high(0Ah)
  4265  01B7  00AD               	movwf	(0+(?___wmul)+02h)+1
  4266  01B8  120A  118A  2616   	fcall	___wmul
              120A  118A         
  4267  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4268  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4269  01BF  082B               	movf	(1+(?___wmul)),w
  4270  01C0  01B3               	clrf	1+(?___awdiv)+02h
  4271  01C1  07B3               	addwf	1+(?___awdiv)+02h
  4272  01C2  082A               	movf	(0+(?___wmul)),w
  4273  01C3  01B2               	clrf	0+(?___awdiv)+02h
  4274  01C4  07B2               	addwf	0+(?___awdiv)+02h
  4275                           
  4276  01C5  120A  118A  233D   	fcall	___awdiv
              120A  118A         
  4277  01CA  1283               	bcf	status, 5	;RP0=0, select bank0
  4278  01CB  1303               	bcf	status, 6	;RP1=0, select bank0
  4279  01CC  0830               	movf	(0+(?___awdiv)),w
  4280  01CD  3E12               	addlw	low(012h)
  4281  01CE  00C1               	movwf	(?_convert)
  4282  01CF  0831               	movf	(1+(?___awdiv)),w
  4283  01D0  1803               	skipnc
  4284  01D1  3E01               	addlw	1
  4285  01D2  3E00               	addlw	high(012h)
  4286  01D3  00C2               	movwf	1+(?_convert)
  4287  01D4  29E3               	goto	l4397
  4288                           	
  4289  01D5                     l8080:	
  4290  01D5  29E3               	goto	l4397
  4291                           	
  4292  01D6                     l8082:	
  4293  01D6  29E3               	goto	l4397
  4294                           	line	26
  4295                           	
  4296  01D7                     l4409:	
  4297                           	
  4298  01D7                     l8084:	
  4299                           ;ir.c: 26: else return 0;
  4300  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4301  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  4302  01D9  01C1               	clrf	(?_convert)
  4303  01DA  01C2               	clrf	(?_convert+1)
  4304  01DB  29E3               	goto	l4397
  4305                           	
  4306  01DC                     l8086:	
  4307  01DC  29E3               	goto	l4397
  4308                           	
  4309  01DD                     l4410:	
  4310  01DD  29E3               	goto	l4397
  4311                           	
  4312  01DE                     l4408:	
  4313  01DE  29E3               	goto	l4397
  4314                           	
  4315  01DF                     l4406:	
  4316  01DF  29E3               	goto	l4397
  4317                           	
  4318  01E0                     l4404:	
  4319  01E0  29E3               	goto	l4397
  4320                           	
  4321  01E1                     l4402:	
  4322  01E1  29E3               	goto	l4397
  4323                           	
  4324  01E2                     l4400:	
  4325  01E2  29E3               	goto	l4397
  4326                           	
  4327  01E3                     l4398:	
  4328                           	line	27
  4329                           	
  4330  01E3                     l4397:	
  4331  01E3  0008               	return
  4332                           	opt stack 0
  4333                           GLOBAL	__end_of_convert
  4334  01E4                     	__end_of_convert:
  4335 ;; =============== function _convert ends ============
  4336                           
  4337                           	signat	_convert,4218
  4338                           	global	_rotateIR
  4339                           psect	text1239,local,class=CODE,delta=2
  4340                           global __ptext1239
  4341  0750                     __ptext1239:
  4342                           
  4343 ;; *************** function _rotateIR *****************
  4344 ;; Defined at:
  4345 ;;		line 39 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\ir.c
       "
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  steps           1    wreg     unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  steps           1   13[BANK0 ] unsigned char 
  4350 ;;  stepNum         1   14[BANK0 ] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;		None               void
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4360 ;;      Params:         0       0       0       0       0
  4361 ;;      Locals:         0       2       0       0       0
  4362 ;;      Temps:          0       3       0       0       0
  4363 ;;      Totals:         0       5       0       0       0
  4364 ;;Total ram usage:        5 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    2
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_findWalls
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           psect	text1239
  4374                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\ir.c"
  4375                           	line	39
  4376                           	global	__size_of_rotateIR
  4377  0027                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
  4378                           	
  4379  0750                     _rotateIR:	
  4380                           	opt	stack 2
  4381                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
  4382                           ;rotateIR@steps stored from wreg
  4383  0750  1283               	bcf	status, 5	;RP0=0, select bank0
  4384  0751  1303               	bcf	status, 6	;RP1=0, select bank0
  4385  0752  00AD               	movwf	(rotateIR@steps)
  4386                           	line	40
  4387                           	
  4388  0753                     l8020:	
  4389                           ;ir.c: 40: for (char stepNum = 1; stepNum <= steps; ++stepNum)
  4390  0753  01AE               	clrf	(rotateIR@stepNum)
  4391  0754  1403               	bsf	status,0
  4392  0755  0DAE               	rlf	(rotateIR@stepNum),f
  4393  0756  2F6F               	goto	l4416
  4394                           	line	41
  4395                           	
  4396  0757                     l4417:	
  4397                           	line	42
  4398                           ;ir.c: 41: {
  4399                           ;ir.c: 42: PORTC |= 0b00000100;
  4400  0757  1507               	bsf	(7)+(2/8),(2)&7	;volatile
  4401                           	line	43
  4402                           	
  4403  0758                     l8022:	
  4404                           ;ir.c: 43: PORTC &= 0b11111011;
  4405  0758  30FB               	movlw	(0FBh)
  4406  0759  00AA               	movwf	(??_rotateIR+0)+0
  4407  075A  082A               	movf	(??_rotateIR+0)+0,w
  4408  075B  0587               	andwf	(7),f	;volatile
  4409                           	line	44
  4410                           	
  4411  075C                     l8024:	
  4412                           ;ir.c: 44: _delay((unsigned long)((100)*(20000000/4000.0)));
  4413                           	opt asmopt_off
  4414  075C  3003               movlw  3
  4415  075D  00AC               movwf	((??_rotateIR+0)+0+2),f
  4416  075E  308A               movlw	138
  4417  075F  00AB               movwf	((??_rotateIR+0)+0+1),f
  4418  0760  3056               	movlw	86
  4419  0761  00AA               movwf	((??_rotateIR+0)+0),f
  4420  0762                     u3827:
  4421  0762  0BAA               	decfsz	((??_rotateIR+0)+0),f
  4422  0763  2F62               	goto	u3827
  4423  0764  0BAB               	decfsz	((??_rotateIR+0)+0+1),f
  4424  0765  2F62               	goto	u3827
  4425  0766  0BAC               	decfsz	((??_rotateIR+0)+0+2),f
  4426  0767  2F62               	goto	u3827
  4427  0768  2F69               	nop2
  4428                           opt asmopt_on
  4429                           
  4430                           	line	40
  4431                           	
  4432  0769                     l8026:	
  4433  0769  3001               	movlw	(01h)
  4434  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  4435  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  4436  076C  00AA               	movwf	(??_rotateIR+0)+0
  4437  076D  082A               	movf	(??_rotateIR+0)+0,w
  4438  076E  07AE               	addwf	(rotateIR@stepNum),f
  4439                           	
  4440  076F                     l4416:	
  4441  076F  082E               	movf	(rotateIR@stepNum),w
  4442  0770  022D               	subwf	(rotateIR@steps),w
  4443  0771  1803               	skipnc
  4444  0772  2F74               	goto	u3551
  4445  0773  2F75               	goto	u3550
  4446  0774                     u3551:
  4447  0774  2F57               	goto	l4417
  4448  0775                     u3550:
  4449  0775  2F76               	goto	l4419
  4450                           	
  4451  0776                     l4418:	
  4452                           	line	46
  4453                           	
  4454  0776                     l4419:	
  4455  0776  0008               	return
  4456                           	opt stack 0
  4457                           GLOBAL	__end_of_rotateIR
  4458  0777                     	__end_of_rotateIR:
  4459 ;; =============== function _rotateIR ends ============
  4460                           
  4461                           	signat	_rotateIR,4216
  4462                           	global	_initIRobot
  4463                           psect	text1240,local,class=CODE,delta=2
  4464                           global __ptext1240
  4465  0EF9                     __ptext1240:
  4466                           
  4467 ;; *************** function _initIRobot *****************
  4468 ;; Defined at:
  4469 ;;		line 117 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\mai
       n.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;		None               void
  4476 ;; Registers used:
  4477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4483 ;;      Params:         0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0
  4485 ;;      Temps:          0       3       0       0       0
  4486 ;;      Totals:         0       3       0       0       0
  4487 ;;Total ram usage:        3 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    3
  4490 ;; This function calls:
  4491 ;;		_ser_putch
  4492 ;; This function is called by:
  4493 ;;		_init
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           psect	text1240
  4497                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  4498                           	line	117
  4499                           	global	__size_of_initIRobot
  4500  001C                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
  4501                           	
  4502  0EF9                     _initIRobot:	
  4503                           	opt	stack 3
  4504                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4505                           	line	118
  4506                           	
  4507  0EF9                     l8014:	
  4508                           ;main.c: 118: _delay((unsigned long)((100)*(20000000/4000.0)));
  4509                           	opt asmopt_off
  4510  0EF9  3003               movlw  3
  4511  0EFA  1283               	bcf	status, 5	;RP0=0, select bank0
  4512  0EFB  1303               	bcf	status, 6	;RP1=0, select bank0
  4513  0EFC  00AE               movwf	((??_initIRobot+0)+0+2),f
  4514  0EFD  308A               movlw	138
  4515  0EFE  00AD               movwf	((??_initIRobot+0)+0+1),f
  4516  0EFF  3056               	movlw	86
  4517  0F00  00AC               movwf	((??_initIRobot+0)+0),f
  4518  0F01                     u3837:
  4519  0F01  0BAC               	decfsz	((??_initIRobot+0)+0),f
  4520  0F02  2F01               	goto	u3837
  4521  0F03  0BAD               	decfsz	((??_initIRobot+0)+0+1),f
  4522  0F04  2F01               	goto	u3837
  4523  0F05  0BAE               	decfsz	((??_initIRobot+0)+0+2),f
  4524  0F06  2F01               	goto	u3837
  4525  0F07  2F08               	nop2
  4526                           opt asmopt_on
  4527                           
  4528                           	line	119
  4529                           	
  4530  0F08                     l8016:	
  4531                           ;main.c: 119: ser_putch(128);
  4532  0F08  3080               	movlw	(080h)
  4533  0F09  120A  158A  2735   	fcall	_ser_putch
              120A  158A         
  4534                           	line	120
  4535                           	
  4536  0F0E                     l8018:	
  4537                           ;main.c: 120: ser_putch(132);
  4538  0F0E  3084               	movlw	(084h)
  4539  0F0F  120A  158A  2735   	fcall	_ser_putch
              120A  158A         
  4540                           	line	121
  4541                           	
  4542  0F14                     l2911:	
  4543  0F14  0008               	return
  4544                           	opt stack 0
  4545                           GLOBAL	__end_of_initIRobot
  4546  0F15                     	__end_of_initIRobot:
  4547 ;; =============== function _initIRobot ends ============
  4548                           
  4549                           	signat	_initIRobot,88
  4550                           	global	_lcd_write_data
  4551                           psect	text1241,local,class=CODE,delta=2
  4552                           global __ptext1241
  4553  0EA1                     __ptext1241:
  4554                           
  4555 ;; *************** function _lcd_write_data *****************
  4556 ;; Defined at:
  4557 ;;		line 20 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\lcd.
       c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  databyte        1    wreg     unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  databyte        1   12[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;		None               void
  4564 ;; Registers used:
  4565 ;;		wreg
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       0       0       0       0
  4572 ;;      Locals:         0       1       0       0       0
  4573 ;;      Temps:          0       2       0       0       0
  4574 ;;      Totals:         0       3       0       0       0
  4575 ;;Total ram usage:        3 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    2
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_lcd_write_string
  4582 ;;		_lcd_write_1_digit_bcd
  4583 ;;		_findWalls
  4584 ;;		_goBackward
  4585 ;;		_goForward
  4586 ;;		_goLeft
  4587 ;;		_goRight
  4588 ;;		_updateLocation
  4589 ;;		_lcd_write_3_digit_bcd
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           psect	text1241
  4593                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\lcd.c"
  4594                           	line	20
  4595                           	global	__size_of_lcd_write_data
  4596  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  4597                           	
  4598  0EA1                     _lcd_write_data:	
  4599                           	opt	stack 2
  4600                           ; Regs used in _lcd_write_data: [wreg]
  4601                           ;lcd_write_data@databyte stored from wreg
  4602  0EA1  1283               	bcf	status, 5	;RP0=0, select bank0
  4603  0EA2  1303               	bcf	status, 6	;RP1=0, select bank0
  4604  0EA3  00AC               	movwf	(lcd_write_data@databyte)
  4605                           	line	21
  4606                           	
  4607  0EA4                     l8006:	
  4608                           ;lcd.c: 21: RE2 = 0;
  4609  0EA4  1109               	bcf	(74/8),(74)&7
  4610                           	line	22
  4611                           ;lcd.c: 22: RE1 = 0;
  4612  0EA5  1089               	bcf	(73/8),(73)&7
  4613                           	line	23
  4614                           ;lcd.c: 23: RE0 = 1;
  4615  0EA6  1409               	bsf	(72/8),(72)&7
  4616                           	line	24
  4617                           	
  4618  0EA7                     l8008:	
  4619                           ;lcd.c: 24: PORTD = databyte;
  4620  0EA7  082C               	movf	(lcd_write_data@databyte),w
  4621  0EA8  0088               	movwf	(8)	;volatile
  4622                           	line	25
  4623                           	
  4624  0EA9                     l8010:	
  4625                           ;lcd.c: 25: RE2 = 1;
  4626  0EA9  1509               	bsf	(74/8),(74)&7
  4627                           	line	26
  4628                           	
  4629  0EAA                     l8012:	
  4630                           ;lcd.c: 26: RE2 = 0;
  4631  0EAA  1109               	bcf	(74/8),(74)&7
  4632                           	line	27
  4633                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
  4634                           	opt asmopt_off
  4635  0EAB  3007               movlw	7
  4636  0EAC  00AB               movwf	((??_lcd_write_data+0)+0+1),f
  4637  0EAD  307D               	movlw	125
  4638  0EAE  00AA               movwf	((??_lcd_write_data+0)+0),f
  4639  0EAF                     u3847:
  4640  0EAF  0BAA               	decfsz	((??_lcd_write_data+0)+0),f
  4641  0EB0  2EAF               	goto	u3847
  4642  0EB1  0BAB               	decfsz	((??_lcd_write_data+0)+0+1),f
  4643  0EB2  2EAF               	goto	u3847
  4644                           opt asmopt_on
  4645                           
  4646                           	line	28
  4647                           	
  4648  0EB3                     l2107:	
  4649  0EB3  0008               	return
  4650                           	opt stack 0
  4651                           GLOBAL	__end_of_lcd_write_data
  4652  0EB4                     	__end_of_lcd_write_data:
  4653 ;; =============== function _lcd_write_data ends ============
  4654                           
  4655                           	signat	_lcd_write_data,4216
  4656                           	global	_lcd_write_control
  4657                           psect	text1242,local,class=CODE,delta=2
  4658                           global __ptext1242
  4659  0EB4                     __ptext1242:
  4660                           
  4661 ;; *************** function _lcd_write_control *****************
  4662 ;; Defined at:
  4663 ;;		line 8 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\lcd.c
       "
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  databyte        1    wreg     unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  databyte        1   12[BANK0 ] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;		None               void
  4670 ;; Registers used:
  4671 ;;		wreg
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4677 ;;      Params:         0       0       0       0       0
  4678 ;;      Locals:         0       1       0       0       0
  4679 ;;      Temps:          0       2       0       0       0
  4680 ;;      Totals:         0       3       0       0       0
  4681 ;;Total ram usage:        3 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    2
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_lcd_set_cursor
  4688 ;;		_lcd_init
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           psect	text1242
  4692                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\lcd.c"
  4693                           	line	8
  4694                           	global	__size_of_lcd_write_control
  4695  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  4696                           	
  4697  0EB4                     _lcd_write_control:	
  4698                           	opt	stack 2
  4699                           ; Regs used in _lcd_write_control: [wreg]
  4700                           ;lcd_write_control@databyte stored from wreg
  4701  0EB4  1283               	bcf	status, 5	;RP0=0, select bank0
  4702  0EB5  1303               	bcf	status, 6	;RP1=0, select bank0
  4703  0EB6  00AC               	movwf	(lcd_write_control@databyte)
  4704                           	line	9
  4705                           	
  4706  0EB7                     l7998:	
  4707                           ;lcd.c: 9: RE2 = 0;
  4708  0EB7  1109               	bcf	(74/8),(74)&7
  4709                           	line	10
  4710                           ;lcd.c: 10: RE1 = 0;
  4711  0EB8  1089               	bcf	(73/8),(73)&7
  4712                           	line	11
  4713                           ;lcd.c: 11: RE0 = 0;
  4714  0EB9  1009               	bcf	(72/8),(72)&7
  4715                           	line	12
  4716                           	
  4717  0EBA                     l8000:	
  4718                           ;lcd.c: 12: PORTD = databyte;
  4719  0EBA  082C               	movf	(lcd_write_control@databyte),w
  4720  0EBB  0088               	movwf	(8)	;volatile
  4721                           	line	13
  4722                           	
  4723  0EBC                     l8002:	
  4724                           ;lcd.c: 13: RE2 = 1;
  4725  0EBC  1509               	bsf	(74/8),(74)&7
  4726                           	line	14
  4727                           	
  4728  0EBD                     l8004:	
  4729                           ;lcd.c: 14: RE2 = 0;
  4730  0EBD  1109               	bcf	(74/8),(74)&7
  4731                           	line	15
  4732                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
  4733                           	opt asmopt_off
  4734  0EBE  300D               movlw	13
  4735  0EBF  00AB               movwf	((??_lcd_write_control+0)+0+1),f
  4736  0EC0  30FB               	movlw	251
  4737  0EC1  00AA               movwf	((??_lcd_write_control+0)+0),f
  4738  0EC2                     u3857:
  4739  0EC2  0BAA               	decfsz	((??_lcd_write_control+0)+0),f
  4740  0EC3  2EC2               	goto	u3857
  4741  0EC4  0BAB               	decfsz	((??_lcd_write_control+0)+0+1),f
  4742  0EC5  2EC2               	goto	u3857
  4743  0EC6  2EC7               	nop2
  4744                           opt asmopt_on
  4745                           
  4746                           	line	16
  4747                           	
  4748  0EC7                     l2104:	
  4749  0EC7  0008               	return
  4750                           	opt stack 0
  4751                           GLOBAL	__end_of_lcd_write_control
  4752  0EC8                     	__end_of_lcd_write_control:
  4753 ;; =============== function _lcd_write_control ends ============
  4754                           
  4755                           	signat	_lcd_write_control,4216
  4756                           	global	_waitFor
  4757                           psect	text1243,local,class=CODE,delta=2
  4758                           global __ptext1243
  4759  06BF                     __ptext1243:
  4760                           
  4761 ;; *************** function _waitFor *****************
  4762 ;; Defined at:
  4763 ;;		line 61 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\driv
       e.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  type            1    wreg     unsigned char 
  4766 ;;  highByte        1   12[BANK0 ] unsigned char 
  4767 ;;  lowByte         1   13[BANK0 ] unsigned char 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  type            1   17[BANK0 ] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;		None               void
  4772 ;; Registers used:
  4773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         0       2       0       0       0
  4780 ;;      Locals:         0       1       0       0       0
  4781 ;;      Temps:          0       3       0       0       0
  4782 ;;      Totals:         0       6       0       0       0
  4783 ;;Total ram usage:        6 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    3
  4786 ;; This function calls:
  4787 ;;		_ser_putch
  4788 ;; This function is called by:
  4789 ;;		_turnAround
  4790 ;;		_turnLeft90
  4791 ;;		_turnRight90
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           psect	text1243
  4795                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\drive.c"
  4796                           	line	61
  4797                           	global	__size_of_waitFor
  4798  0029                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
  4799                           	
  4800  06BF                     _waitFor:	
  4801                           	opt	stack 0
  4802                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4803                           ;waitFor@type stored from wreg
  4804  06BF  1283               	bcf	status, 5	;RP0=0, select bank0
  4805  06C0  1303               	bcf	status, 6	;RP1=0, select bank0
  4806  06C1  00B1               	movwf	(waitFor@type)
  4807                           	line	62
  4808                           	
  4809  06C2                     l7990:	
  4810                           ;drive.c: 62: _delay((unsigned long)((100)*(20000000/4000.0)));
  4811                           	opt asmopt_off
  4812  06C2  3003               movlw  3
  4813  06C3  00B0               movwf	((??_waitFor+0)+0+2),f
  4814  06C4  308A               movlw	138
  4815  06C5  00AF               movwf	((??_waitFor+0)+0+1),f
  4816  06C6  3056               	movlw	86
  4817  06C7  00AE               movwf	((??_waitFor+0)+0),f
  4818  06C8                     u3867:
  4819  06C8  0BAE               	decfsz	((??_waitFor+0)+0),f
  4820  06C9  2EC8               	goto	u3867
  4821  06CA  0BAF               	decfsz	((??_waitFor+0)+0+1),f
  4822  06CB  2EC8               	goto	u3867
  4823  06CC  0BB0               	decfsz	((??_waitFor+0)+0+2),f
  4824  06CD  2EC8               	goto	u3867
  4825  06CE  2ECF               	nop2
  4826                           opt asmopt_on
  4827                           
  4828                           	line	63
  4829                           	
  4830  06CF                     l7992:	
  4831                           ;drive.c: 63: ser_putch(type);
  4832  06CF  1283               	bcf	status, 5	;RP0=0, select bank0
  4833  06D0  1303               	bcf	status, 6	;RP1=0, select bank0
  4834  06D1  0831               	movf	(waitFor@type),w
  4835  06D2  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  4836                           	line	64
  4837                           	
  4838  06D7                     l7994:	
  4839                           ;drive.c: 64: ser_putch(highByte);
  4840  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4841  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  4842  06D9  082C               	movf	(waitFor@highByte),w
  4843  06DA  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  4844                           	line	65
  4845                           	
  4846  06DF                     l7996:	
  4847                           ;drive.c: 65: ser_putch(lowByte);
  4848  06DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4849  06E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4850  06E1  082D               	movf	(waitFor@lowByte),w
  4851  06E2  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  4852                           	line	66
  4853                           	
  4854  06E7                     l1417:	
  4855  06E7  0008               	return
  4856                           	opt stack 0
  4857                           GLOBAL	__end_of_waitFor
  4858  06E8                     	__end_of_waitFor:
  4859 ;; =============== function _waitFor ends ============
  4860                           
  4861                           	signat	_waitFor,12408
  4862                           	global	_ser_getch
  4863                           psect	text1244,local,class=CODE,delta=2
  4864                           global __ptext1244
  4865  0F77                     __ptext1244:
  4866                           
  4867 ;; *************** function _ser_getch *****************
  4868 ;; Defined at:
  4869 ;;		line 58 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\ser.
       c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  c               1   11[BANK0 ] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      unsigned char 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4883 ;;      Params:         0       0       0       0       0
  4884 ;;      Locals:         0       1       0       0       0
  4885 ;;      Temps:          0       1       0       0       0
  4886 ;;      Totals:         0       2       0       0       0
  4887 ;;Total ram usage:        2 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    3
  4890 ;; This function calls:
  4891 ;;		_ser_isrx
  4892 ;; This function is called by:
  4893 ;;		_driveForDistance
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           psect	text1244
  4897                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\ser.c"
  4898                           	line	58
  4899                           	global	__size_of_ser_getch
  4900  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  4901                           	
  4902  0F77                     _ser_getch:	
  4903                           	opt	stack 0
  4904                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4905                           	line	61
  4906                           	
  4907  0F77                     l7974:	
  4908                           ;ser.c: 59: unsigned char c;
  4909                           ;ser.c: 61: while (ser_isrx()==0)
  4910  0F77  2F79               	goto	l7976
  4911                           	
  4912  0F78                     l3677:	
  4913                           	line	62
  4914                           ;ser.c: 62: continue;
  4915  0F78  2F79               	goto	l7976
  4916                           	
  4917  0F79                     l3676:	
  4918                           	line	61
  4919                           	
  4920  0F79                     l7976:	
  4921  0F79  120A  118A  26E8   	fcall	_ser_isrx
              120A  158A         
  4922  0F7E  1C03               	btfss	status,0
  4923  0F7F  2F81               	goto	u3541
  4924  0F80  2F82               	goto	u3540
  4925  0F81                     u3541:
  4926  0F81  2F79               	goto	l7976
  4927  0F82                     u3540:
  4928                           	
  4929  0F82                     l3678:	
  4930                           	line	64
  4931                           ;ser.c: 64: GIE=0;
  4932  0F82  138B               	bcf	(95/8),(95)&7
  4933                           	line	65
  4934                           	
  4935  0F83                     l7978:	
  4936                           ;ser.c: 65: c=rxfifo[rxoptr];
  4937  0F83  0879               	movf	(_rxoptr),w
  4938  0F84  3E4D               	addlw	_rxfifo&0ffh
  4939  0F85  0084               	movwf	fsr0
  4940  0F86  1383               	bcf	status, 7	;select IRP bank0
  4941  0F87  0800               	movf	indf,w
  4942  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  4943  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  4944  0F8A  00AA               	movwf	(??_ser_getch+0)+0
  4945  0F8B  082A               	movf	(??_ser_getch+0)+0,w
  4946  0F8C  00AB               	movwf	(ser_getch@c)
  4947                           	line	66
  4948                           	
  4949  0F8D                     l7980:	
  4950                           ;ser.c: 66: ++rxoptr;
  4951  0F8D  3001               	movlw	(01h)
  4952  0F8E  00AA               	movwf	(??_ser_getch+0)+0
  4953  0F8F  082A               	movf	(??_ser_getch+0)+0,w
  4954  0F90  07F9               	addwf	(_rxoptr),f	;volatile
  4955                           	line	67
  4956                           	
  4957  0F91                     l7982:	
  4958                           ;ser.c: 67: rxoptr &= (16-1);
  4959  0F91  300F               	movlw	(0Fh)
  4960  0F92  00AA               	movwf	(??_ser_getch+0)+0
  4961  0F93  082A               	movf	(??_ser_getch+0)+0,w
  4962  0F94  05F9               	andwf	(_rxoptr),f	;volatile
  4963                           	line	68
  4964                           	
  4965  0F95                     l7984:	
  4966                           ;ser.c: 68: GIE=1;
  4967  0F95  178B               	bsf	(95/8),(95)&7
  4968                           	line	69
  4969                           	
  4970  0F96                     l7986:	
  4971                           ;ser.c: 69: return c;
  4972  0F96  082B               	movf	(ser_getch@c),w
  4973  0F97  2F98               	goto	l3679
  4974                           	
  4975  0F98                     l7988:	
  4976                           	line	70
  4977                           	
  4978  0F98                     l3679:	
  4979  0F98  0008               	return
  4980                           	opt stack 0
  4981                           GLOBAL	__end_of_ser_getch
  4982  0F99                     	__end_of_ser_getch:
  4983 ;; =============== function _ser_getch ends ============
  4984                           
  4985                           	signat	_ser_getch,89
  4986                           	global	_drive
  4987                           psect	text1245,local,class=CODE,delta=2
  4988                           global __ptext1245
  4989  0552                     __ptext1245:
  4990                           
  4991 ;; *************** function _drive *****************
  4992 ;; Defined at:
  4993 ;;		line 9 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\drive
       .c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  highByteSpee    1    wreg     unsigned char 
  4996 ;;  lowByteSpeed    1   12[BANK0 ] unsigned char 
  4997 ;;  highByteRadi    1   13[BANK0 ] unsigned char 
  4998 ;;  lowByteRadiu    1   14[BANK0 ] unsigned char 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  highByteSpee    1   18[BANK0 ] unsigned char 
  5001 ;; Return value:  Size  Location     Type
  5002 ;;		None               void
  5003 ;; Registers used:
  5004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5010 ;;      Params:         0       3       0       0       0
  5011 ;;      Locals:         0       1       0       0       0
  5012 ;;      Temps:          0       3       0       0       0
  5013 ;;      Totals:         0       7       0       0       0
  5014 ;;Total ram usage:        7 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    3
  5017 ;; This function calls:
  5018 ;;		_ser_putch
  5019 ;; This function is called by:
  5020 ;;		_driveForDistance
  5021 ;;		_turnAround
  5022 ;;		_turnLeft90
  5023 ;;		_turnRight90
  5024 ;;		_main
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           psect	text1245
  5028                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\drive.c"
  5029                           	line	9
  5030                           	global	__size_of_drive
  5031  0037                     	__size_of_drive	equ	__end_of_drive-_drive
  5032                           	
  5033  0552                     _drive:	
  5034                           	opt	stack 0
  5035                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5036                           ;drive@highByteSpeed stored from wreg
  5037  0552  1283               	bcf	status, 5	;RP0=0, select bank0
  5038  0553  1303               	bcf	status, 6	;RP1=0, select bank0
  5039  0554  00B2               	movwf	(drive@highByteSpeed)
  5040                           	line	10
  5041                           	
  5042  0555                     l7962:	
  5043                           ;drive.c: 10: _delay((unsigned long)((100)*(20000000/4000.0)));
  5044                           	opt asmopt_off
  5045  0555  3003               movlw  3
  5046  0556  00B1               movwf	((??_drive+0)+0+2),f
  5047  0557  308A               movlw	138
  5048  0558  00B0               movwf	((??_drive+0)+0+1),f
  5049  0559  3056               	movlw	86
  5050  055A  00AF               movwf	((??_drive+0)+0),f
  5051  055B                     u3877:
  5052  055B  0BAF               	decfsz	((??_drive+0)+0),f
  5053  055C  2D5B               	goto	u3877
  5054  055D  0BB0               	decfsz	((??_drive+0)+0+1),f
  5055  055E  2D5B               	goto	u3877
  5056  055F  0BB1               	decfsz	((??_drive+0)+0+2),f
  5057  0560  2D5B               	goto	u3877
  5058  0561  2D62               	nop2
  5059                           opt asmopt_on
  5060                           
  5061                           	line	11
  5062                           	
  5063  0562                     l7964:	
  5064                           ;drive.c: 11: ser_putch(137);
  5065  0562  3089               	movlw	(089h)
  5066  0563  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  5067                           	line	12
  5068                           	
  5069  0568                     l7966:	
  5070                           ;drive.c: 12: ser_putch(highByteSpeed);
  5071  0568  1283               	bcf	status, 5	;RP0=0, select bank0
  5072  0569  1303               	bcf	status, 6	;RP1=0, select bank0
  5073  056A  0832               	movf	(drive@highByteSpeed),w
  5074  056B  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  5075                           	line	13
  5076                           	
  5077  0570                     l7968:	
  5078                           ;drive.c: 13: ser_putch(lowByteSpeed);
  5079  0570  1283               	bcf	status, 5	;RP0=0, select bank0
  5080  0571  1303               	bcf	status, 6	;RP1=0, select bank0
  5081  0572  082C               	movf	(drive@lowByteSpeed),w
  5082  0573  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  5083                           	line	14
  5084                           	
  5085  0578                     l7970:	
  5086                           ;drive.c: 14: ser_putch(highByteRadius);
  5087  0578  1283               	bcf	status, 5	;RP0=0, select bank0
  5088  0579  1303               	bcf	status, 6	;RP1=0, select bank0
  5089  057A  082D               	movf	(drive@highByteRadius),w
  5090  057B  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  5091                           	line	15
  5092                           	
  5093  0580                     l7972:	
  5094                           ;drive.c: 15: ser_putch(lowByteRadius);
  5095  0580  1283               	bcf	status, 5	;RP0=0, select bank0
  5096  0581  1303               	bcf	status, 6	;RP1=0, select bank0
  5097  0582  082E               	movf	(drive@lowByteRadius),w
  5098  0583  120A  158A  2735   	fcall	_ser_putch
              120A  118A         
  5099                           	line	16
  5100                           	
  5101  0588                     l1399:	
  5102  0588  0008               	return
  5103                           	opt stack 0
  5104                           GLOBAL	__end_of_drive
  5105  0589                     	__end_of_drive:
  5106 ;; =============== function _drive ends ============
  5107                           
  5108                           	signat	_drive,16504
  5109                           	global	_init_adc
  5110                           psect	text1246,local,class=CODE,delta=2
  5111                           global __ptext1246
  5112  0EC8                     __ptext1246:
  5113                           
  5114 ;; *************** function _init_adc *****************
  5115 ;; Defined at:
  5116 ;;		line 48 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\adc.
       c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;		None               void
  5123 ;; Registers used:
  5124 ;;		wreg, status,2
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5130 ;;      Params:         0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0
  5132 ;;      Temps:          0       1       0       0       0
  5133 ;;      Totals:         0       1       0       0       0
  5134 ;;Total ram usage:        1 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    2
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_init
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           psect	text1246
  5144                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\adc.c"
  5145                           	line	48
  5146                           	global	__size_of_init_adc
  5147  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5148                           	
  5149  0EC8                     _init_adc:	
  5150                           	opt	stack 4
  5151                           ; Regs used in _init_adc: [wreg+status,2]
  5152                           	line	50
  5153                           	
  5154  0EC8                     l7952:	
  5155                           ;adc.c: 50: PORTA = 0;
  5156  0EC8  1283               	bcf	status, 5	;RP0=0, select bank0
  5157  0EC9  1303               	bcf	status, 6	;RP1=0, select bank0
  5158  0ECA  0185               	clrf	(5)	;volatile
  5159                           	line	51
  5160                           	
  5161  0ECB                     l7954:	
  5162                           ;adc.c: 51: TRISA = 0b00111111;
  5163  0ECB  303F               	movlw	(03Fh)
  5164  0ECC  1683               	bsf	status, 5	;RP0=1, select bank1
  5165  0ECD  1303               	bcf	status, 6	;RP1=0, select bank1
  5166  0ECE  0085               	movwf	(133)^080h	;volatile
  5167                           	line	54
  5168                           	
  5169  0ECF                     l7956:	
  5170                           ;adc.c: 54: ADCON0 = 0b10100001;
  5171  0ECF  30A1               	movlw	(0A1h)
  5172  0ED0  1283               	bcf	status, 5	;RP0=0, select bank0
  5173  0ED1  1303               	bcf	status, 6	;RP1=0, select bank0
  5174  0ED2  009F               	movwf	(31)	;volatile
  5175                           	line	55
  5176                           	
  5177  0ED3                     l7958:	
  5178                           ;adc.c: 55: ADCON1 = 0b00000010;
  5179  0ED3  3002               	movlw	(02h)
  5180  0ED4  1683               	bsf	status, 5	;RP0=1, select bank1
  5181  0ED5  1303               	bcf	status, 6	;RP1=0, select bank1
  5182  0ED6  009F               	movwf	(159)^080h	;volatile
  5183                           	line	57
  5184                           	
  5185  0ED7                     l7960:	
  5186                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5187                           	opt asmopt_off
  5188  0ED7  3053               movlw	83
  5189  0ED8  1283               	bcf	status, 5	;RP0=0, select bank0
  5190  0ED9  1303               	bcf	status, 6	;RP1=0, select bank0
  5191  0EDA  00AA               movwf	(??_init_adc+0)+0,f
  5192  0EDB                     u3887:
  5193  0EDB  0BAA               decfsz	(??_init_adc+0)+0,f
  5194  0EDC  2EDB               	goto	u3887
  5195                           opt asmopt_on
  5196                           
  5197                           	line	58
  5198                           	
  5199  0EDD                     l700:	
  5200  0EDD  0008               	return
  5201                           	opt stack 0
  5202                           GLOBAL	__end_of_init_adc
  5203  0EDE                     	__end_of_init_adc:
  5204 ;; =============== function _init_adc ends ============
  5205                           
  5206                           	signat	_init_adc,88
  5207                           	global	_adc_read
  5208                           psect	text1247,local,class=CODE,delta=2
  5209                           global __ptext1247
  5210  0513                     __ptext1247:
  5211                           
  5212 ;; *************** function _adc_read *****************
  5213 ;; Defined at:
  5214 ;;		line 62 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\adc.
       c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  adc_value       2   31[BANK0 ] volatile int 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  2   25[BANK0 ] int 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5228 ;;      Params:         0       2       0       0       0
  5229 ;;      Locals:         0       2       0       0       0
  5230 ;;      Temps:          0       4       0       0       0
  5231 ;;      Totals:         0       8       0       0       0
  5232 ;;Total ram usage:        8 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    3
  5235 ;; This function calls:
  5236 ;;		___awdiv
  5237 ;; This function is called by:
  5238 ;;		_adc_read_channel
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           psect	text1247
  5242                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\adc.c"
  5243                           	line	62
  5244                           	global	__size_of_adc_read
  5245  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  5246                           	
  5247  0513                     _adc_read:	
  5248 ;; hardware stack exceeded
  5249                           	opt	stack 0
  5250                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5251                           	line	65
  5252                           	
  5253  0513                     l7414:	
  5254                           ;adc.c: 63: volatile int adc_value;
  5255                           ;adc.c: 65: ADRESH = 0;
  5256  0513  1283               	bcf	status, 5	;RP0=0, select bank0
  5257  0514  1303               	bcf	status, 6	;RP1=0, select bank0
  5258  0515  019E               	clrf	(30)	;volatile
  5259                           	line	66
  5260                           ;adc.c: 66: ADRESL = 0;
  5261  0516  1683               	bsf	status, 5	;RP0=1, select bank1
  5262  0517  1303               	bcf	status, 6	;RP1=0, select bank1
  5263  0518  019E               	clrf	(158)^080h	;volatile
  5264                           	line	68
  5265                           	
  5266  0519                     l7416:	
  5267                           ;adc.c: 68: GO = 1;
  5268  0519  1283               	bcf	status, 5	;RP0=0, select bank0
  5269  051A  1303               	bcf	status, 6	;RP1=0, select bank0
  5270  051B  151F               	bsf	(250/8),(250)&7
  5271                           	line	69
  5272                           ;adc.c: 69: while(GO) continue;
  5273  051C  2D1D               	goto	l703
  5274                           	
  5275  051D                     l704:	
  5276                           	
  5277  051D                     l703:	
  5278  051D  191F               	btfsc	(250/8),(250)&7
  5279  051E  2D20               	goto	u3121
  5280  051F  2D21               	goto	u3120
  5281  0520                     u3121:
  5282  0520  2D1D               	goto	l703
  5283  0521                     u3120:
  5284  0521  2D22               	goto	l7418
  5285                           	
  5286  0522                     l705:	
  5287                           	line	75
  5288                           	
  5289  0522                     l7418:	
  5290                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
  5291  0522  3040               	movlw	low(040h)
  5292  0523  00B0               	movwf	(?___awdiv)
  5293  0524  3000               	movlw	high(040h)
  5294  0525  00B1               	movwf	((?___awdiv))+1
  5295  0526  1683               	bsf	status, 5	;RP0=1, select bank1
  5296  0527  1303               	bcf	status, 6	;RP1=0, select bank1
  5297  0528  081E               	movf	(158)^080h,w	;volatile
  5298  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  5299  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  5300  052B  00BB               	movwf	(??_adc_read+0)+0
  5301  052C  01BC               	clrf	(??_adc_read+0)+0+1
  5302  052D  083B               	movf	0+(??_adc_read+0)+0,w
  5303  052E  00B2               	movwf	0+(?___awdiv)+02h
  5304  052F  083C               	movf	1+(??_adc_read+0)+0,w
  5305  0530  00B3               	movwf	1+(?___awdiv)+02h
  5306  0531  120A  118A  233D   	fcall	___awdiv
              120A  118A         
  5307  0536  1283               	bcf	status, 5	;RP0=0, select bank0
  5308  0537  1303               	bcf	status, 6	;RP1=0, select bank0
  5309  0538  081E               	movf	(30),w	;volatile
  5310  0539  00BD               	movwf	(??_adc_read+2)+0
  5311  053A  01BE               	clrf	(??_adc_read+2)+0+1
  5312  053B  3002               	movlw	02h
  5313  053C  00FF               	movwf	btemp+1
  5314  053D                     u3135:
  5315  053D  1003               	clrc
  5316  053E  0DBD               	rlf	(??_adc_read+2)+0,f
  5317  053F  0DBE               	rlf	(??_adc_read+2)+1,f
  5318  0540  0BFF               	decfsz	btemp+1,f
  5319  0541  2D3D               	goto	u3135
  5320  0542  0830               	movf	(0+(?___awdiv)),w
  5321  0543  073D               	addwf	0+(??_adc_read+2)+0,w
  5322  0544  00BF               	movwf	(adc_read@adc_value)	;volatile
  5323  0545  0831               	movf	(1+(?___awdiv)),w
  5324  0546  1803               	skipnc
  5325  0547  0A31               	incf	(1+(?___awdiv)),w
  5326  0548  073E               	addwf	1+(??_adc_read+2)+0,w
  5327  0549  00C0               	movwf	1+(adc_read@adc_value)	;volatile
  5328                           	line	77
  5329                           	
  5330  054A                     l7420:	
  5331                           ;adc.c: 77: return (adc_value);
  5332  054A  0840               	movf	(adc_read@adc_value+1),w	;volatile
  5333  054B  01BA               	clrf	(?_adc_read+1)
  5334  054C  07BA               	addwf	(?_adc_read+1)
  5335  054D  083F               	movf	(adc_read@adc_value),w	;volatile
  5336  054E  01B9               	clrf	(?_adc_read)
  5337  054F  07B9               	addwf	(?_adc_read)
  5338                           
  5339  0550  2D51               	goto	l706
  5340                           	
  5341  0551                     l7422:	
  5342                           	line	78
  5343                           	
  5344  0551                     l706:	
  5345  0551  0008               	return
  5346                           	opt stack 0
  5347                           GLOBAL	__end_of_adc_read
  5348  0552                     	__end_of_adc_read:
  5349 ;; =============== function _adc_read ends ============
  5350                           
  5351                           	signat	_adc_read,90
  5352                           	global	___awdiv
  5353                           psect	text1248,local,class=CODE,delta=2
  5354                           global __ptext1248
  5355  033D                     __ptext1248:
  5356                           
  5357 ;; *************** function ___awdiv *****************
  5358 ;; Defined at:
  5359 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  divisor         2   16[BANK0 ] int 
  5362 ;;  dividend        2   18[BANK0 ] int 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  quotient        2   23[BANK0 ] int 
  5365 ;;  sign            1   22[BANK0 ] unsigned char 
  5366 ;;  counter         1   21[BANK0 ] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2   16[BANK0 ] int 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5376 ;;      Params:         0       4       0       0       0
  5377 ;;      Locals:         0       4       0       0       0
  5378 ;;      Temps:          0       1       0       0       0
  5379 ;;      Totals:         0       9       0       0       0
  5380 ;;Total ram usage:        9 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    2
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_adc_read
  5387 ;;		_convert
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           psect	text1248
  5391                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5392                           	line	5
  5393                           	global	__size_of___awdiv
  5394  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5395                           	
  5396  033D                     ___awdiv:	
  5397 ;; hardware stack exceeded
  5398                           	opt	stack 0
  5399                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5400                           	line	9
  5401                           	
  5402  033D                     l7374:	
  5403  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  5404  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  5405  033F  01B6               	clrf	(___awdiv@sign)
  5406                           	line	10
  5407  0340  1FB1               	btfss	(___awdiv@divisor+1),7
  5408  0341  2B43               	goto	u3021
  5409  0342  2B44               	goto	u3020
  5410  0343                     u3021:
  5411  0343  2B4D               	goto	l7378
  5412  0344                     u3020:
  5413                           	line	11
  5414                           	
  5415  0344                     l7376:	
  5416  0344  09B0               	comf	(___awdiv@divisor),f
  5417  0345  09B1               	comf	(___awdiv@divisor+1),f
  5418  0346  0AB0               	incf	(___awdiv@divisor),f
  5419  0347  1903               	skipnz
  5420  0348  0AB1               	incf	(___awdiv@divisor+1),f
  5421                           	line	12
  5422  0349  01B6               	clrf	(___awdiv@sign)
  5423  034A  1403               	bsf	status,0
  5424  034B  0DB6               	rlf	(___awdiv@sign),f
  5425  034C  2B4D               	goto	l7378
  5426                           	line	13
  5427                           	
  5428  034D                     l5242:	
  5429                           	line	14
  5430                           	
  5431  034D                     l7378:	
  5432  034D  1FB3               	btfss	(___awdiv@dividend+1),7
  5433  034E  2B50               	goto	u3031
  5434  034F  2B51               	goto	u3030
  5435  0350                     u3031:
  5436  0350  2B5B               	goto	l7384
  5437  0351                     u3030:
  5438                           	line	15
  5439                           	
  5440  0351                     l7380:	
  5441  0351  09B2               	comf	(___awdiv@dividend),f
  5442  0352  09B3               	comf	(___awdiv@dividend+1),f
  5443  0353  0AB2               	incf	(___awdiv@dividend),f
  5444  0354  1903               	skipnz
  5445  0355  0AB3               	incf	(___awdiv@dividend+1),f
  5446                           	line	16
  5447                           	
  5448  0356                     l7382:	
  5449  0356  3001               	movlw	(01h)
  5450  0357  00B4               	movwf	(??___awdiv+0)+0
  5451  0358  0834               	movf	(??___awdiv+0)+0,w
  5452  0359  06B6               	xorwf	(___awdiv@sign),f
  5453  035A  2B5B               	goto	l7384
  5454                           	line	17
  5455                           	
  5456  035B                     l5243:	
  5457                           	line	18
  5458                           	
  5459  035B                     l7384:	
  5460  035B  01B7               	clrf	(___awdiv@quotient)
  5461  035C  01B8               	clrf	(___awdiv@quotient+1)
  5462                           	line	19
  5463                           	
  5464  035D                     l7386:	
  5465  035D  0831               	movf	(___awdiv@divisor+1),w
  5466  035E  0430               	iorwf	(___awdiv@divisor),w
  5467  035F  1903               	skipnz
  5468  0360  2B62               	goto	u3041
  5469  0361  2B63               	goto	u3040
  5470  0362                     u3041:
  5471  0362  2BA1               	goto	l7406
  5472  0363                     u3040:
  5473                           	line	20
  5474                           	
  5475  0363                     l7388:	
  5476  0363  01B5               	clrf	(___awdiv@counter)
  5477  0364  1403               	bsf	status,0
  5478  0365  0DB5               	rlf	(___awdiv@counter),f
  5479                           	line	21
  5480  0366  2B73               	goto	l7394
  5481                           	
  5482  0367                     l5246:	
  5483                           	line	22
  5484                           	
  5485  0367                     l7390:	
  5486  0367  3001               	movlw	01h
  5487                           	
  5488  0368                     u3055:
  5489  0368  1003               	clrc
  5490  0369  0DB0               	rlf	(___awdiv@divisor),f
  5491  036A  0DB1               	rlf	(___awdiv@divisor+1),f
  5492  036B  3EFF               	addlw	-1
  5493  036C  1D03               	skipz
  5494  036D  2B68               	goto	u3055
  5495                           	line	23
  5496                           	
  5497  036E                     l7392:	
  5498  036E  3001               	movlw	(01h)
  5499  036F  00B4               	movwf	(??___awdiv+0)+0
  5500  0370  0834               	movf	(??___awdiv+0)+0,w
  5501  0371  07B5               	addwf	(___awdiv@counter),f
  5502  0372  2B73               	goto	l7394
  5503                           	line	24
  5504                           	
  5505  0373                     l5245:	
  5506                           	line	21
  5507                           	
  5508  0373                     l7394:	
  5509  0373  1FB1               	btfss	(___awdiv@divisor+1),(15)&7
  5510  0374  2B76               	goto	u3061
  5511  0375  2B77               	goto	u3060
  5512  0376                     u3061:
  5513  0376  2B67               	goto	l7390
  5514  0377                     u3060:
  5515  0377  2B79               	goto	l7396
  5516                           	
  5517  0378                     l5247:	
  5518  0378  2B79               	goto	l7396
  5519                           	line	25
  5520                           	
  5521  0379                     l5248:	
  5522                           	line	26
  5523                           	
  5524  0379                     l7396:	
  5525  0379  3001               	movlw	01h
  5526                           	
  5527  037A                     u3075:
  5528  037A  1003               	clrc
  5529  037B  0DB7               	rlf	(___awdiv@quotient),f
  5530  037C  0DB8               	rlf	(___awdiv@quotient+1),f
  5531  037D  3EFF               	addlw	-1
  5532  037E  1D03               	skipz
  5533  037F  2B7A               	goto	u3075
  5534                           	line	27
  5535  0380  0831               	movf	(___awdiv@divisor+1),w
  5536  0381  0233               	subwf	(___awdiv@dividend+1),w
  5537  0382  1D03               	skipz
  5538  0383  2B86               	goto	u3085
  5539  0384  0830               	movf	(___awdiv@divisor),w
  5540  0385  0232               	subwf	(___awdiv@dividend),w
  5541  0386                     u3085:
  5542  0386  1C03               	skipc
  5543  0387  2B89               	goto	u3081
  5544  0388  2B8A               	goto	u3080
  5545  0389                     u3081:
  5546  0389  2B92               	goto	l7402
  5547  038A                     u3080:
  5548                           	line	28
  5549                           	
  5550  038A                     l7398:	
  5551  038A  0830               	movf	(___awdiv@divisor),w
  5552  038B  02B2               	subwf	(___awdiv@dividend),f
  5553  038C  0831               	movf	(___awdiv@divisor+1),w
  5554  038D  1C03               	skipc
  5555  038E  03B3               	decf	(___awdiv@dividend+1),f
  5556  038F  02B3               	subwf	(___awdiv@dividend+1),f
  5557                           	line	29
  5558                           	
  5559  0390                     l7400:	
  5560  0390  1437               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5561  0391  2B92               	goto	l7402
  5562                           	line	30
  5563                           	
  5564  0392                     l5249:	
  5565                           	line	31
  5566                           	
  5567  0392                     l7402:	
  5568  0392  3001               	movlw	01h
  5569                           	
  5570  0393                     u3095:
  5571  0393  1003               	clrc
  5572  0394  0CB1               	rrf	(___awdiv@divisor+1),f
  5573  0395  0CB0               	rrf	(___awdiv@divisor),f
  5574  0396  3EFF               	addlw	-1
  5575  0397  1D03               	skipz
  5576  0398  2B93               	goto	u3095
  5577                           	line	32
  5578                           	
  5579  0399                     l7404:	
  5580  0399  3001               	movlw	low(01h)
  5581  039A  02B5               	subwf	(___awdiv@counter),f
  5582  039B  1D03               	btfss	status,2
  5583  039C  2B9E               	goto	u3101
  5584  039D  2B9F               	goto	u3100
  5585  039E                     u3101:
  5586  039E  2B79               	goto	l7396
  5587  039F                     u3100:
  5588  039F  2BA1               	goto	l7406
  5589                           	
  5590  03A0                     l5250:	
  5591  03A0  2BA1               	goto	l7406
  5592                           	line	33
  5593                           	
  5594  03A1                     l5244:	
  5595                           	line	34
  5596                           	
  5597  03A1                     l7406:	
  5598  03A1  0836               	movf	(___awdiv@sign),w
  5599  03A2  1D03               	skipz
  5600  03A3  2BA5               	goto	u3110
  5601  03A4  2BAB               	goto	l7410
  5602  03A5                     u3110:
  5603                           	line	35
  5604                           	
  5605  03A5                     l7408:	
  5606  03A5  09B7               	comf	(___awdiv@quotient),f
  5607  03A6  09B8               	comf	(___awdiv@quotient+1),f
  5608  03A7  0AB7               	incf	(___awdiv@quotient),f
  5609  03A8  1903               	skipnz
  5610  03A9  0AB8               	incf	(___awdiv@quotient+1),f
  5611  03AA  2BAB               	goto	l7410
  5612                           	
  5613  03AB                     l5251:	
  5614                           	line	36
  5615                           	
  5616  03AB                     l7410:	
  5617  03AB  0838               	movf	(___awdiv@quotient+1),w
  5618  03AC  01B1               	clrf	(?___awdiv+1)
  5619  03AD  07B1               	addwf	(?___awdiv+1)
  5620  03AE  0837               	movf	(___awdiv@quotient),w
  5621  03AF  01B0               	clrf	(?___awdiv)
  5622  03B0  07B0               	addwf	(?___awdiv)
  5623                           
  5624  03B1  2BB2               	goto	l5252
  5625                           	
  5626  03B2                     l7412:	
  5627                           	line	37
  5628                           	
  5629  03B2                     l5252:	
  5630  03B2  0008               	return
  5631                           	opt stack 0
  5632                           GLOBAL	__end_of___awdiv
  5633  03B3                     	__end_of___awdiv:
  5634 ;; =============== function ___awdiv ends ============
  5635                           
  5636                           	signat	___awdiv,8314
  5637                           	global	___wmul
  5638                           psect	text1249,local,class=CODE,delta=2
  5639                           global __ptext1249
  5640  0616                     __ptext1249:
  5641                           
  5642 ;; *************** function ___wmul *****************
  5643 ;; Defined at:
  5644 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\wmul.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  multiplier      2   10[BANK0 ] unsigned int 
  5647 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  product         2   14[BANK0 ] unsigned int 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  2   10[BANK0 ] unsigned int 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5659 ;;      Params:         0       4       0       0       0
  5660 ;;      Locals:         0       2       0       0       0
  5661 ;;      Temps:          0       0       0       0       0
  5662 ;;      Totals:         0       6       0       0       0
  5663 ;;Total ram usage:        6 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    2
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_convert
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           psect	text1249
  5673                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\wmul.c"
  5674                           	line	3
  5675                           	global	__size_of___wmul
  5676  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  5677                           	
  5678  0616                     ___wmul:	
  5679 ;; hardware stack exceeded
  5680                           	opt	stack 0
  5681                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5682                           	line	4
  5683                           	
  5684  0616                     l7940:	
  5685  0616  1283               	bcf	status, 5	;RP0=0, select bank0
  5686  0617  1303               	bcf	status, 6	;RP1=0, select bank0
  5687  0618  01AE               	clrf	(___wmul@product)
  5688  0619  01AF               	clrf	(___wmul@product+1)
  5689  061A  2E1B               	goto	l7942
  5690                           	line	6
  5691                           	
  5692  061B                     l5102:	
  5693                           	line	7
  5694                           	
  5695  061B                     l7942:	
  5696  061B  1C2A               	btfss	(___wmul@multiplier),(0)&7
  5697  061C  2E1E               	goto	u3501
  5698  061D  2E1F               	goto	u3500
  5699  061E                     u3501:
  5700  061E  2E25               	goto	l5103
  5701  061F                     u3500:
  5702                           	line	8
  5703                           	
  5704  061F                     l7944:	
  5705  061F  082C               	movf	(___wmul@multiplicand),w
  5706  0620  07AE               	addwf	(___wmul@product),f
  5707  0621  1803               	skipnc
  5708  0622  0AAF               	incf	(___wmul@product+1),f
  5709  0623  082D               	movf	(___wmul@multiplicand+1),w
  5710  0624  07AF               	addwf	(___wmul@product+1),f
  5711                           	
  5712  0625                     l5103:	
  5713                           	line	9
  5714  0625  3001               	movlw	01h
  5715                           	
  5716  0626                     u3515:
  5717  0626  1003               	clrc
  5718  0627  0DAC               	rlf	(___wmul@multiplicand),f
  5719  0628  0DAD               	rlf	(___wmul@multiplicand+1),f
  5720  0629  3EFF               	addlw	-1
  5721  062A  1D03               	skipz
  5722  062B  2E26               	goto	u3515
  5723                           	line	10
  5724                           	
  5725  062C                     l7946:	
  5726  062C  3001               	movlw	01h
  5727                           	
  5728  062D                     u3525:
  5729  062D  1003               	clrc
  5730  062E  0CAB               	rrf	(___wmul@multiplier+1),f
  5731  062F  0CAA               	rrf	(___wmul@multiplier),f
  5732  0630  3EFF               	addlw	-1
  5733  0631  1D03               	skipz
  5734  0632  2E2D               	goto	u3525
  5735                           	line	11
  5736  0633  082B               	movf	((___wmul@multiplier+1)),w
  5737  0634  042A               	iorwf	((___wmul@multiplier)),w
  5738  0635  1D03               	skipz
  5739  0636  2E38               	goto	u3531
  5740  0637  2E39               	goto	u3530
  5741  0638                     u3531:
  5742  0638  2E1B               	goto	l7942
  5743  0639                     u3530:
  5744  0639  2E3A               	goto	l7948
  5745                           	
  5746  063A                     l5104:	
  5747                           	line	12
  5748                           	
  5749  063A                     l7948:	
  5750  063A  082F               	movf	(___wmul@product+1),w
  5751  063B  01AB               	clrf	(?___wmul+1)
  5752  063C  07AB               	addwf	(?___wmul+1)
  5753  063D  082E               	movf	(___wmul@product),w
  5754  063E  01AA               	clrf	(?___wmul)
  5755  063F  07AA               	addwf	(?___wmul)
  5756                           
  5757  0640  2E41               	goto	l5105
  5758                           	
  5759  0641                     l7950:	
  5760                           	line	13
  5761                           	
  5762  0641                     l5105:	
  5763  0641  0008               	return
  5764                           	opt stack 0
  5765                           GLOBAL	__end_of___wmul
  5766  0642                     	__end_of___wmul:
  5767 ;; =============== function ___wmul ends ============
  5768                           
  5769                           	signat	___wmul,8314
  5770                           	global	_ser_isrx
  5771                           psect	text1250,local,class=CODE,delta=2
  5772                           global __ptext1250
  5773  06E8                     __ptext1250:
  5774                           
  5775 ;; *************** function _ser_isrx *****************
  5776 ;; Defined at:
  5777 ;;		line 48 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\ser.
       c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;		None               void
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5791 ;;      Params:         0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0
  5794 ;;      Totals:         0       0       0       0       0
  5795 ;;Total ram usage:        0 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    2
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_ser_getch
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           psect	text1250
  5805                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\ser.c"
  5806                           	line	48
  5807                           	global	__size_of_ser_isrx
  5808  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  5809                           	
  5810  06E8                     _ser_isrx:	
  5811                           	opt	stack 0
  5812                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  5813                           	line	49
  5814                           	
  5815  06E8                     l7892:	
  5816                           ;ser.c: 49: if(OERR) {
  5817  06E8  1283               	bcf	status, 5	;RP0=0, select bank0
  5818  06E9  1303               	bcf	status, 6	;RP1=0, select bank0
  5819  06EA  1C98               	btfss	(193/8),(193)&7
  5820  06EB  2EED               	goto	u3431
  5821  06EC  2EEE               	goto	u3430
  5822  06ED                     u3431:
  5823  06ED  2EF3               	goto	l7900
  5824  06EE                     u3430:
  5825                           	line	50
  5826                           	
  5827  06EE                     l7894:	
  5828                           ;ser.c: 50: CREN = 0;
  5829  06EE  1218               	bcf	(196/8),(196)&7
  5830                           	line	51
  5831                           ;ser.c: 51: CREN = 1;
  5832  06EF  1618               	bsf	(196/8),(196)&7
  5833                           	line	52
  5834                           	
  5835  06F0                     l7896:	
  5836                           ;ser.c: 52: return 0;
  5837  06F0  1003               	clrc
  5838                           	
  5839  06F1  2EFE               	goto	l3673
  5840                           	
  5841  06F2                     l7898:	
  5842  06F2  2EFE               	goto	l3673
  5843                           	line	53
  5844                           	
  5845  06F3                     l3672:	
  5846                           	line	54
  5847                           	
  5848  06F3                     l7900:	
  5849                           ;ser.c: 53: }
  5850                           ;ser.c: 54: return (rxiptr!=rxoptr);
  5851  06F3  0878               	movf	(_rxiptr),w	;volatile
  5852  06F4  0679               	xorwf	(_rxoptr),w	;volatile
  5853  06F5  1D03               	skipz
  5854  06F6  2EF8               	goto	u3441
  5855  06F7  2EF9               	goto	u3440
  5856  06F8                     u3441:
  5857  06F8  2EFB               	goto	l7904
  5858  06F9                     u3440:
  5859                           	
  5860  06F9                     l7902:	
  5861  06F9  1003               	clrc
  5862                           	
  5863  06FA  2EFE               	goto	l3673
  5864                           	
  5865  06FB                     l7810:	
  5866                           	
  5867  06FB                     l7904:	
  5868  06FB  1403               	setc
  5869                           	
  5870  06FC  2EFE               	goto	l3673
  5871                           	
  5872  06FD                     l7812:	
  5873  06FD  2EFE               	goto	l3673
  5874                           	
  5875  06FE                     l7906:	
  5876                           	line	55
  5877                           	
  5878  06FE                     l3673:	
  5879  06FE  0008               	return
  5880                           	opt stack 0
  5881                           GLOBAL	__end_of_ser_isrx
  5882  06FF                     	__end_of_ser_isrx:
  5883 ;; =============== function _ser_isrx ends ============
  5884                           
  5885                           	signat	_ser_isrx,88
  5886                           	global	_ser_init
  5887                           psect	text1251,local,class=CODE,delta=2
  5888                           global __ptext1251
  5889  0728                     __ptext1251:
  5890                           
  5891 ;; *************** function _ser_init *****************
  5892 ;; Defined at:
  5893 ;;		line 116 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\ser
       .c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;		None
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;		None               void
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         0       0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0
  5909 ;;      Temps:          0       1       0       0       0
  5910 ;;      Totals:         0       1       0       0       0
  5911 ;;Total ram usage:        1 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    2
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_init
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           psect	text1251
  5921                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\ser.c"
  5922                           	line	116
  5923                           	global	__size_of_ser_init
  5924  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  5925                           	
  5926  0728                     _ser_init:	
  5927                           	opt	stack 4
  5928                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  5929                           	line	117
  5930                           	
  5931  0728                     l7866:	
  5932                           ;ser.c: 117: TRISC |= 0b10000000;
  5933  0728  1683               	bsf	status, 5	;RP0=1, select bank1
  5934  0729  1303               	bcf	status, 6	;RP1=0, select bank1
  5935  072A  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  5936                           	line	118
  5937                           	
  5938  072B                     l7868:	
  5939                           ;ser.c: 118: TRISC &= 0b10111111;
  5940  072B  30BF               	movlw	(0BFh)
  5941  072C  1283               	bcf	status, 5	;RP0=0, select bank0
  5942  072D  1303               	bcf	status, 6	;RP1=0, select bank0
  5943  072E  00AA               	movwf	(??_ser_init+0)+0
  5944  072F  082A               	movf	(??_ser_init+0)+0,w
  5945  0730  1683               	bsf	status, 5	;RP0=1, select bank1
  5946  0731  1303               	bcf	status, 6	;RP1=0, select bank1
  5947  0732  0587               	andwf	(135)^080h,f	;volatile
  5948                           	line	119
  5949                           	
  5950  0733                     l7870:	
  5951                           ;ser.c: 119: BRGH=1;
  5952  0733  1518               	bsf	(1218/8)^080h,(1218)&7
  5953                           	line	121
  5954                           	
  5955  0734                     l7872:	
  5956                           ;ser.c: 121: SPBRG=20;
  5957  0734  3014               	movlw	(014h)
  5958  0735  0099               	movwf	(153)^080h	;volatile
  5959                           	line	124
  5960                           	
  5961  0736                     l7874:	
  5962                           ;ser.c: 124: TX9=0;
  5963  0736  1318               	bcf	(1222/8)^080h,(1222)&7
  5964                           	line	125
  5965                           	
  5966  0737                     l7876:	
  5967                           ;ser.c: 125: RX9=0;
  5968  0737  1283               	bcf	status, 5	;RP0=0, select bank0
  5969  0738  1303               	bcf	status, 6	;RP1=0, select bank0
  5970  0739  1318               	bcf	(198/8),(198)&7
  5971                           	line	127
  5972                           	
  5973  073A                     l7878:	
  5974                           ;ser.c: 127: SYNC=0;
  5975  073A  1683               	bsf	status, 5	;RP0=1, select bank1
  5976  073B  1303               	bcf	status, 6	;RP1=0, select bank1
  5977  073C  1218               	bcf	(1220/8)^080h,(1220)&7
  5978                           	line	128
  5979                           	
  5980  073D                     l7880:	
  5981                           ;ser.c: 128: SPEN=1;
  5982  073D  1283               	bcf	status, 5	;RP0=0, select bank0
  5983  073E  1303               	bcf	status, 6	;RP1=0, select bank0
  5984  073F  1798               	bsf	(199/8),(199)&7
  5985                           	line	129
  5986                           	
  5987  0740                     l7882:	
  5988                           ;ser.c: 129: CREN=1;
  5989  0740  1618               	bsf	(196/8),(196)&7
  5990                           	line	130
  5991                           	
  5992  0741                     l7884:	
  5993                           ;ser.c: 130: TXIE=0;
  5994  0741  1683               	bsf	status, 5	;RP0=1, select bank1
  5995  0742  1303               	bcf	status, 6	;RP1=0, select bank1
  5996  0743  120C               	bcf	(1124/8)^080h,(1124)&7
  5997                           	line	131
  5998                           	
  5999  0744                     l7886:	
  6000                           ;ser.c: 131: RCIE=1;
  6001  0744  168C               	bsf	(1125/8)^080h,(1125)&7
  6002                           	line	132
  6003                           	
  6004  0745                     l7888:	
  6005                           ;ser.c: 132: TXEN=1;
  6006  0745  1698               	bsf	(1221/8)^080h,(1221)&7
  6007                           	line	135
  6008                           	
  6009  0746                     l7890:	
  6010                           ;ser.c: 135: rxiptr=rxoptr=txiptr=txoptr=0;
  6011  0746  3000               	movlw	(0)
  6012  0747  00FB               	movwf	(_txoptr)	;volatile
  6013  0748  00FA               	movwf	(_txiptr)	;volatile
  6014  0749  00F9               	movwf	(_rxoptr)	;volatile
  6015  074A  1283               	bcf	status, 5	;RP0=0, select bank0
  6016  074B  1303               	bcf	status, 6	;RP1=0, select bank0
  6017  074C  00AA               	movwf	(??_ser_init+0)+0
  6018  074D  082A               	movf	(??_ser_init+0)+0,w
  6019  074E  00F8               	movwf	(_rxiptr)	;volatile
  6020                           	line	136
  6021                           	
  6022  074F                     l3707:	
  6023  074F  0008               	return
  6024                           	opt stack 0
  6025                           GLOBAL	__end_of_ser_init
  6026  0750                     	__end_of_ser_init:
  6027 ;; =============== function _ser_init ends ============
  6028                           
  6029                           	signat	_ser_init,88
  6030                           	global	_ser_putch
  6031                           psect	text1252,local,class=CODE,delta=2
  6032                           global __ptext1252
  6033  0F35                     __ptext1252:
  6034                           
  6035 ;; *************** function _ser_putch *****************
  6036 ;; Defined at:
  6037 ;;		line 73 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\ser.
       c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  c               1    wreg     unsigned char 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  c               1   11[BANK0 ] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;		None               void
  6044 ;; Registers used:
  6045 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6051 ;;      Params:         0       0       0       0       0
  6052 ;;      Locals:         0       1       0       0       0
  6053 ;;      Temps:          0       1       0       0       0
  6054 ;;      Totals:         0       2       0       0       0
  6055 ;;Total ram usage:        2 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    2
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_drive
  6062 ;;		_driveForDistance
  6063 ;;		_waitFor
  6064 ;;		_initIRobot
  6065 ;;		_ser_puts
  6066 ;;		_ser_puts2
  6067 ;;		_ser_puthex
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           psect	text1252
  6071                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\ser.c"
  6072                           	line	73
  6073                           	global	__size_of_ser_putch
  6074  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  6075                           	
  6076  0F35                     _ser_putch:	
  6077                           	opt	stack 1
  6078                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  6079                           ;ser_putch@c stored from wreg
  6080  0F35  1283               	bcf	status, 5	;RP0=0, select bank0
  6081  0F36  1303               	bcf	status, 6	;RP1=0, select bank0
  6082  0F37  00AB               	movwf	(ser_putch@c)
  6083                           	line	74
  6084                           	
  6085  0F38                     l7838:	
  6086                           ;ser.c: 74: while (((txiptr+1) & (16-1))==txoptr)
  6087  0F38  2F3A               	goto	l7840
  6088                           	
  6089  0F39                     l3683:	
  6090                           	line	75
  6091                           ;ser.c: 75: continue;
  6092  0F39  2F3A               	goto	l7840
  6093                           	
  6094  0F3A                     l3682:	
  6095                           	line	74
  6096                           	
  6097  0F3A                     l7840:	
  6098  0F3A  087A               	movf	(_txiptr),w	;volatile
  6099  0F3B  3E01               	addlw	01h
  6100  0F3C  390F               	andlw	0Fh
  6101  0F3D  067B               	xorwf	(_txoptr),w	;volatile
  6102  0F3E  1903               	skipnz
  6103  0F3F  2F41               	goto	u3401
  6104  0F40  2F42               	goto	u3400
  6105  0F41                     u3401:
  6106  0F41  2F3A               	goto	l7840
  6107  0F42                     u3400:
  6108                           	
  6109  0F42                     l3684:	
  6110                           	line	76
  6111                           ;ser.c: 76: GIE=0;
  6112  0F42  138B               	bcf	(95/8),(95)&7
  6113                           	line	77
  6114                           	
  6115  0F43                     l7842:	
  6116                           ;ser.c: 77: txfifo[txiptr] = c;
  6117  0F43  082B               	movf	(ser_putch@c),w
  6118  0F44  00AA               	movwf	(??_ser_putch+0)+0
  6119  0F45  087A               	movf	(_txiptr),w
  6120  0F46  3EA0               	addlw	_txfifo&0ffh
  6121  0F47  0084               	movwf	fsr0
  6122  0F48  082A               	movf	(??_ser_putch+0)+0,w
  6123  0F49  1383               	bcf	status, 7	;select IRP bank1
  6124  0F4A  0080               	movwf	indf
  6125                           	line	78
  6126                           	
  6127  0F4B                     l7844:	
  6128                           ;ser.c: 78: txiptr=(txiptr+1) & (16-1);
  6129  0F4B  087A               	movf	(_txiptr),w	;volatile
  6130  0F4C  3E01               	addlw	01h
  6131  0F4D  390F               	andlw	0Fh
  6132  0F4E  00AA               	movwf	(??_ser_putch+0)+0
  6133  0F4F  082A               	movf	(??_ser_putch+0)+0,w
  6134  0F50  00FA               	movwf	(_txiptr)	;volatile
  6135                           	line	79
  6136                           	
  6137  0F51                     l7846:	
  6138                           ;ser.c: 79: TXIE=1;
  6139  0F51  1683               	bsf	status, 5	;RP0=1, select bank1
  6140  0F52  1303               	bcf	status, 6	;RP1=0, select bank1
  6141  0F53  160C               	bsf	(1124/8)^080h,(1124)&7
  6142                           	line	80
  6143                           	
  6144  0F54                     l7848:	
  6145                           ;ser.c: 80: GIE=1;
  6146  0F54  178B               	bsf	(95/8),(95)&7
  6147                           	line	81
  6148                           	
  6149  0F55                     l3685:	
  6150  0F55  0008               	return
  6151                           	opt stack 0
  6152                           GLOBAL	__end_of_ser_putch
  6153  0F56                     	__end_of_ser_putch:
  6154 ;; =============== function _ser_putch ends ============
  6155                           
  6156                           	signat	_ser_putch,4216
  6157                           	global	_isr1
  6158                           psect	text1253,local,class=CODE,delta=2
  6159                           global __ptext1253
  6160  01E4                     __ptext1253:
  6161                           
  6162 ;; *************** function _isr1 *****************
  6163 ;; Defined at:
  6164 ;;		line 48 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.1\main
       .c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;		None               void
  6171 ;; Registers used:
  6172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6178 ;;      Params:         0       0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0
  6180 ;;      Temps:          0      10       0       0       0
  6181 ;;      Totals:         0      10       0       0       0
  6182 ;;Total ram usage:       10 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    1
  6185 ;; This function calls:
  6186 ;;		___lwmod
  6187 ;; This function is called by:
  6188 ;;		Interrupt level 1
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           psect	text1253
  6192                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.1\main.c"
  6193                           	line	48
  6194                           	global	__size_of_isr1
  6195  00D6                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  6196                           	
  6197  01E4                     _isr1:	
  6198 ;; hardware stack exceeded
  6199                           	opt	stack 0
  6200                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6201                           psect	intentry,class=CODE,delta=2
  6202                           global __pintentry
  6203  0004                     __pintentry:
  6204                           global interrupt_function
  6205  0004                     interrupt_function:
  6206                           	global saved_w
  6207  007E                     	saved_w	set	btemp+0
  6208  0004  00FE               	movwf	saved_w
  6209  0005  0E03               	swapf	status,w
  6210  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  6211  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  6212  0008  00A6               	movwf	(??_isr1+6)
  6213  0009  0804               	movf	fsr0,w
  6214  000A  00A7               	movwf	(??_isr1+7)
  6215  000B  080A               	movf	pclath,w
  6216  000C  00A8               	movwf	(??_isr1+8)
  6217  000D  087F               	movf	btemp+1,w
  6218  000E  00A9               	movwf	(??_isr1+9)
  6219  000F  120A  118A  29E4   	ljmp	_isr1
  6220                           psect	text1253
  6221                           	line	50
  6222                           	
  6223  01E4                     i1l7208:	
  6224                           ;main.c: 50: if(TMR0IF)
  6225  01E4  1D0B               	btfss	(90/8),(90)&7
  6226  01E5  29E7               	goto	u274_21
  6227  01E6  29E8               	goto	u274_20
  6228  01E7                     u274_21:
  6229  01E7  2AAE               	goto	i1l2905
  6230  01E8                     u274_20:
  6231                           	line	52
  6232                           	
  6233  01E8                     i1l7210:	
  6234                           ;main.c: 51: {
  6235                           ;main.c: 52: TMR0IF = 0;
  6236  01E8  110B               	bcf	(90/8),(90)&7
  6237                           	line	53
  6238                           	
  6239  01E9                     i1l7212:	
  6240                           ;main.c: 53: TMR0 = 100;
  6241  01E9  3064               	movlw	(064h)
  6242  01EA  0081               	movwf	(1)	;volatile
  6243                           	line	55
  6244                           ;main.c: 55: RTC_Counter++;
  6245  01EB  3001               	movlw	low(01h)
  6246  01EC  07E0               	addwf	(_RTC_Counter),f	;volatile
  6247  01ED  1803               	skipnc
  6248  01EE  0AE1               	incf	(_RTC_Counter+1),f	;volatile
  6249  01EF  3000               	movlw	high(01h)
  6250  01F0  07E1               	addwf	(_RTC_Counter+1),f	;volatile
  6251                           	line	57
  6252                           	
  6253  01F1                     i1l7214:	
  6254                           ;main.c: 57: RTC_FLAG_1MS = 1;
  6255  01F1  14F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  6256                           	line	59
  6257                           	
  6258  01F2                     i1l7216:	
  6259                           ;main.c: 59: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  6260  01F2  300A               	movlw	low(0Ah)
  6261  01F3  00F1               	movwf	(?___lwmod)
  6262  01F4  3000               	movlw	high(0Ah)
  6263  01F5  00F2               	movwf	((?___lwmod))+1
  6264  01F6  0861               	movf	(_RTC_Counter+1),w	;volatile
  6265  01F7  01F4               	clrf	1+(?___lwmod)+02h
  6266  01F8  07F4               	addwf	1+(?___lwmod)+02h
  6267  01F9  0860               	movf	(_RTC_Counter),w	;volatile
  6268  01FA  01F3               	clrf	0+(?___lwmod)+02h
  6269  01FB  07F3               	addwf	0+(?___lwmod)+02h
  6270                           
  6271  01FC  120A  118A  248E   	fcall	___lwmod
              120A  118A         
  6272  0201  0872               	movf	((1+(?___lwmod))),w
  6273  0202  0471               	iorwf	((0+(?___lwmod))),w
  6274  0203  1D03               	skipz
  6275  0204  2A06               	goto	u275_21
  6276  0205  2A07               	goto	u275_20
  6277  0206                     u275_21:
  6278  0206  2A09               	goto	i1l7220
  6279  0207                     u275_20:
  6280                           	
  6281  0207                     i1l7218:	
  6282  0207  1470               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  6283  0208  2A09               	goto	i1l7220
  6284                           	
  6285  0209                     i1l2895:	
  6286                           	line	60
  6287                           	
  6288  0209                     i1l7220:	
  6289                           ;main.c: 60: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  6290  0209  3032               	movlw	low(032h)
  6291  020A  00F1               	movwf	(?___lwmod)
  6292  020B  3000               	movlw	high(032h)
  6293  020C  00F2               	movwf	((?___lwmod))+1
  6294  020D  1283               	bcf	status, 5	;RP0=0, select bank0
  6295  020E  1303               	bcf	status, 6	;RP1=0, select bank0
  6296  020F  0861               	movf	(_RTC_Counter+1),w	;volatile
  6297  0210  01F4               	clrf	1+(?___lwmod)+02h
  6298  0211  07F4               	addwf	1+(?___lwmod)+02h
  6299  0212  0860               	movf	(_RTC_Counter),w	;volatile
  6300  0213  01F3               	clrf	0+(?___lwmod)+02h
  6301  0214  07F3               	addwf	0+(?___lwmod)+02h
  6302                           
  6303  0215  120A  118A  248E   	fcall	___lwmod
              120A  118A         
  6304  021A  0872               	movf	((1+(?___lwmod))),w
  6305  021B  0471               	iorwf	((0+(?___lwmod))),w
  6306  021C  1D03               	skipz
  6307  021D  2A1F               	goto	u276_21
  6308  021E  2A20               	goto	u276_20
  6309  021F                     u276_21:
  6310  021F  2A22               	goto	i1l7224
  6311  0220                     u276_20:
  6312                           	
  6313  0220                     i1l7222:	
  6314  0220  15F0               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  6315  0221  2A22               	goto	i1l7224
  6316                           	
  6317  0222                     i1l2896:	
  6318                           	line	61
  6319                           	
  6320  0222                     i1l7224:	
  6321                           ;main.c: 61: if(RTC_Counter % 500 == 0)
  6322  0222  30F4               	movlw	low(01F4h)
  6323  0223  00F1               	movwf	(?___lwmod)
  6324  0224  3001               	movlw	high(01F4h)
  6325  0225  00F2               	movwf	((?___lwmod))+1
  6326  0226  1283               	bcf	status, 5	;RP0=0, select bank0
  6327  0227  1303               	bcf	status, 6	;RP1=0, select bank0
  6328  0228  0861               	movf	(_RTC_Counter+1),w	;volatile
  6329  0229  01F4               	clrf	1+(?___lwmod)+02h
  6330  022A  07F4               	addwf	1+(?___lwmod)+02h
  6331  022B  0860               	movf	(_RTC_Counter),w	;volatile
  6332  022C  01F3               	clrf	0+(?___lwmod)+02h
  6333  022D  07F3               	addwf	0+(?___lwmod)+02h
  6334                           
  6335  022E  120A  118A  248E   	fcall	___lwmod
              120A  118A         
  6336  0233  0872               	movf	((1+(?___lwmod))),w
  6337  0234  0471               	iorwf	((0+(?___lwmod))),w
  6338  0235  1D03               	skipz
  6339  0236  2A38               	goto	u277_21
  6340  0237  2A39               	goto	u277_20
  6341  0238                     u277_21:
  6342  0238  2A3F               	goto	i1l7230
  6343  0239                     u277_20:
  6344                           	line	63
  6345                           	
  6346  0239                     i1l7226:	
  6347                           ;main.c: 62: {
  6348                           ;main.c: 63: RTC_FLAG_500MS = 1;
  6349  0239  1570               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  6350                           	line	64
  6351                           	
  6352  023A                     i1l7228:	
  6353                           ;main.c: 64: RTC_Counter = 0;
  6354  023A  1283               	bcf	status, 5	;RP0=0, select bank0
  6355  023B  1303               	bcf	status, 6	;RP1=0, select bank0
  6356  023C  01E0               	clrf	(_RTC_Counter)	;volatile
  6357  023D  01E1               	clrf	(_RTC_Counter+1)	;volatile
  6358  023E  2A3F               	goto	i1l7230
  6359                           	line	66
  6360                           	
  6361  023F                     i1l2897:	
  6362                           	line	68
  6363                           	
  6364  023F                     i1l7230:	
  6365                           ;main.c: 66: }
  6366                           ;main.c: 68: if(RB0)
  6367  023F  1283               	bcf	status, 5	;RP0=0, select bank0
  6368  0240  1303               	bcf	status, 6	;RP1=0, select bank0
  6369  0241  1C06               	btfss	(48/8),(48)&7
  6370  0242  2A44               	goto	u278_21
  6371  0243  2A45               	goto	u278_20
  6372  0244                     u278_21:
  6373  0244  2A65               	goto	i1l2898
  6374  0245                     u278_20:
  6375                           	line	70
  6376                           	
  6377  0245                     i1l7232:	
  6378                           ;main.c: 69: {
  6379                           ;main.c: 70: start.debounceCount++;
  6380  0245  3001               	movlw	(01h)
  6381  0246  00A0               	movwf	(??_isr1+0)+0
  6382  0247  0820               	movf	(??_isr1+0)+0,w
  6383  0248  07DF               	addwf	0+(_start)+02h,f
  6384                           	line	71
  6385                           	
  6386  0249                     i1l7234:	
  6387                           ;main.c: 71: if(start.debounceCount >= 10 & start.released)
  6388  0249  085E               	movf	0+(_start)+01h,w
  6389  024A  00A0               	movwf	(??_isr1+0)+0
  6390  024B  01A1               	clrf	(??_isr1+0)+0+1
  6391  024C  300A               	movlw	(0Ah)
  6392  024D  025F               	subwf	0+(_start)+02h,w
  6393  024E  3000               	movlw	0
  6394  024F  1803               	skipnc
  6395  0250  3001               	movlw	1
  6396  0251  00A2               	movwf	(??_isr1+2)+0
  6397  0252  01A3               	clrf	(??_isr1+2)+0+1
  6398  0253  0820               	movf	0+(??_isr1+0)+0,w
  6399  0254  0522               	andwf	0+(??_isr1+2)+0,w
  6400  0255  00A4               	movwf	(??_isr1+4)+0
  6401  0256  0821               	movf	1+(??_isr1+0)+0,w
  6402  0257  0523               	andwf	1+(??_isr1+2)+0,w
  6403  0258  00A5               	movwf	1+(??_isr1+4)+0
  6404  0259  0825               	movf	1+(??_isr1+4)+0,w
  6405  025A  0424               	iorwf	0+(??_isr1+4)+0,w
  6406  025B  1903               	skipnz
  6407  025C  2A5E               	goto	u279_21
  6408  025D  2A5F               	goto	u279_20
  6409  025E                     u279_21:
  6410  025E  2A6A               	goto	i1l7242
  6411  025F                     u279_20:
  6412                           	line	73
  6413                           	
  6414  025F                     i1l7236:	
  6415                           ;main.c: 72: {
  6416                           ;main.c: 73: start.pressed = 1;
  6417  025F  01DD               	clrf	(_start)
  6418  0260  1403               	bsf	status,0
  6419  0261  0DDD               	rlf	(_start),f
  6420                           	line	74
  6421                           	
  6422  0262                     i1l7238:	
  6423                           ;main.c: 74: start.released = 0;
  6424  0262  01DE               	clrf	0+(_start)+01h
  6425  0263  2A6A               	goto	i1l7242
  6426                           	line	75
  6427                           	
  6428  0264                     i1l2899:	
  6429                           	line	76
  6430                           ;main.c: 75: }
  6431                           ;main.c: 76: }
  6432  0264  2A6A               	goto	i1l7242
  6433                           	line	77
  6434                           	
  6435  0265                     i1l2898:	
  6436                           	line	79
  6437                           ;main.c: 77: else
  6438                           ;main.c: 78: {
  6439                           ;main.c: 79: start.debounceCount = 0;
  6440  0265  01DF               	clrf	0+(_start)+02h
  6441                           	line	80
  6442                           	
  6443  0266                     i1l7240:	
  6444                           ;main.c: 80: start.released = 1;
  6445  0266  01DE               	clrf	0+(_start)+01h
  6446  0267  1403               	bsf	status,0
  6447  0268  0DDE               	rlf	0+(_start)+01h,f
  6448  0269  2A6A               	goto	i1l7242
  6449                           	line	81
  6450                           	
  6451  026A                     i1l2900:	
  6452                           	line	83
  6453                           	
  6454  026A                     i1l7242:	
  6455                           ;main.c: 81: }
  6456                           ;main.c: 83: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  6457  026A  1E8C               	btfss	(101/8),(101)&7
  6458  026B  2A6D               	goto	u280_21
  6459  026C  2A6E               	goto	u280_20
  6460  026D                     u280_21:
  6461  026D  2A88               	goto	i1l7252
  6462  026E                     u280_20:
  6463                           	
  6464  026E                     i1l7244:	
  6465  026E  081A               	movf	(26),w	;volatile
  6466  026F  00A0               	movwf	(??_isr1+0)+0
  6467  0270  0878               	movf	(_rxiptr),w
  6468  0271  3E4D               	addlw	_rxfifo&0ffh
  6469  0272  0084               	movwf	fsr0
  6470  0273  0820               	movf	(??_isr1+0)+0,w
  6471  0274  1383               	bcf	status, 7	;select IRP bank0
  6472  0275  0080               	movwf	indf
  6473                           	
  6474  0276                     i1l7246:	
  6475  0276  0878               	movf	(_rxiptr),w	;volatile
  6476  0277  3E01               	addlw	01h
  6477  0278  390F               	andlw	0Fh
  6478  0279  00A0               	movwf	(??_isr1+0)+0
  6479  027A  0820               	movf	(??_isr1+0)+0,w
  6480  027B  00E3               	movwf	(_ser_tmp)
  6481                           	
  6482  027C                     i1l7248:	
  6483  027C  0863               	movf	(_ser_tmp),w
  6484  027D  0679               	xorwf	(_rxoptr),w	;volatile
  6485  027E  1903               	skipnz
  6486  027F  2A81               	goto	u281_21
  6487  0280  2A82               	goto	u281_20
  6488  0281                     u281_21:
  6489  0281  2A88               	goto	i1l7252
  6490  0282                     u281_20:
  6491                           	
  6492  0282                     i1l7250:	
  6493  0282  0863               	movf	(_ser_tmp),w
  6494  0283  00A0               	movwf	(??_isr1+0)+0
  6495  0284  0820               	movf	(??_isr1+0)+0,w
  6496  0285  00F8               	movwf	(_rxiptr)	;volatile
  6497  0286  2A88               	goto	i1l7252
  6498                           	
  6499  0287                     i1l2902:	
  6500  0287  2A88               	goto	i1l7252
  6501                           	
  6502  0288                     i1l2901:	
  6503                           	
  6504  0288                     i1l7252:	
  6505  0288  1E0C               	btfss	(100/8),(100)&7
  6506  0289  2A8B               	goto	u282_21
  6507  028A  2A8C               	goto	u282_20
  6508  028B                     u282_21:
  6509  028B  2AAE               	goto	i1l2905
  6510  028C                     u282_20:
  6511                           	
  6512  028C                     i1l7254:	
  6513  028C  1683               	bsf	status, 5	;RP0=1, select bank1
  6514  028D  1303               	bcf	status, 6	;RP1=0, select bank1
  6515  028E  1E0C               	btfss	(1124/8)^080h,(1124)&7
  6516  028F  2A91               	goto	u283_21
  6517  0290  2A92               	goto	u283_20
  6518  0291                     u283_21:
  6519  0291  2AAE               	goto	i1l2905
  6520  0292                     u283_20:
  6521                           	
  6522  0292                     i1l7256:	
  6523  0292  087B               	movf	(_txoptr),w
  6524  0293  3EA0               	addlw	_txfifo&0ffh
  6525  0294  0084               	movwf	fsr0
  6526  0295  1383               	bcf	status, 7	;select IRP bank1
  6527  0296  0800               	movf	indf,w
  6528  0297  1283               	bcf	status, 5	;RP0=0, select bank0
  6529  0298  1303               	bcf	status, 6	;RP1=0, select bank0
  6530  0299  0099               	movwf	(25)	;volatile
  6531                           	
  6532  029A                     i1l7258:	
  6533  029A  3001               	movlw	(01h)
  6534  029B  00A0               	movwf	(??_isr1+0)+0
  6535  029C  0820               	movf	(??_isr1+0)+0,w
  6536  029D  07FB               	addwf	(_txoptr),f	;volatile
  6537                           	
  6538  029E                     i1l7260:	
  6539  029E  300F               	movlw	(0Fh)
  6540  029F  00A0               	movwf	(??_isr1+0)+0
  6541  02A0  0820               	movf	(??_isr1+0)+0,w
  6542  02A1  05FB               	andwf	(_txoptr),f	;volatile
  6543                           	
  6544  02A2                     i1l7262:	
  6545  02A2  087B               	movf	(_txoptr),w	;volatile
  6546  02A3  067A               	xorwf	(_txiptr),w	;volatile
  6547  02A4  1D03               	skipz
  6548  02A5  2AA7               	goto	u284_21
  6549  02A6  2AA8               	goto	u284_20
  6550  02A7                     u284_21:
  6551  02A7  2AAE               	goto	i1l2905
  6552  02A8                     u284_20:
  6553                           	
  6554  02A8                     i1l7264:	
  6555  02A8  1683               	bsf	status, 5	;RP0=1, select bank1
  6556  02A9  1303               	bcf	status, 6	;RP1=0, select bank1
  6557  02AA  120C               	bcf	(1124/8)^080h,(1124)&7
  6558  02AB  2AAE               	goto	i1l2905
  6559                           	
  6560  02AC                     i1l2904:	
  6561  02AC  2AAE               	goto	i1l2905
  6562                           	
  6563  02AD                     i1l2903:	
  6564  02AD  2AAE               	goto	i1l2905
  6565                           	line	84
  6566                           	
  6567  02AE                     i1l2894:	
  6568                           	line	85
  6569                           	
  6570  02AE                     i1l2905:	
  6571  02AE  1283               	bcf	status, 5	;RP0=0, select bank0
  6572  02AF  0829               	movf	(??_isr1+9),w
  6573  02B0  00FF               	movwf	btemp+1
  6574  02B1  0828               	movf	(??_isr1+8),w
  6575  02B2  008A               	movwf	pclath
  6576  02B3  0827               	movf	(??_isr1+7),w
  6577  02B4  0084               	movwf	fsr0
  6578  02B5  0E26               	swapf	(??_isr1+6)^00h,w
  6579  02B6  0083               	movwf	status
  6580  02B7  0EFE               	swapf	saved_w,f
  6581  02B8  0E7E               	swapf	saved_w,w
  6582  02B9  0009               	retfie
  6583                           	opt stack 0
  6584                           GLOBAL	__end_of_isr1
  6585  02BA                     	__end_of_isr1:
  6586 ;; =============== function _isr1 ends ============
  6587                           
  6588                           	signat	_isr1,88
  6589                           	global	___lwmod
  6590                           psect	text1254,local,class=CODE,delta=2
  6591                           global __ptext1254
  6592  048E                     __ptext1254:
  6593                           
  6594 ;; *************** function ___lwmod *****************
  6595 ;; Defined at:
  6596 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  divisor         2    0[COMMON] unsigned int 
  6599 ;;  dividend        2    2[COMMON] unsigned int 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  counter         1    5[COMMON] unsigned char 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  2    0[COMMON] unsigned int 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6611 ;;      Params:         4       0       0       0       0
  6612 ;;      Locals:         1       0       0       0       0
  6613 ;;      Temps:          1       0       0       0       0
  6614 ;;      Totals:         6       0       0       0       0
  6615 ;;Total ram usage:        6 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_isr1
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           psect	text1254
  6624                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  6625                           	line	5
  6626                           	global	__size_of___lwmod
  6627  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6628                           	
  6629  048E                     ___lwmod:	
  6630 ;; hardware stack exceeded
  6631                           	opt	stack 0
  6632                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6633                           	line	8
  6634                           	
  6635  048E                     i1l7352:	
  6636  048E  0872               	movf	(___lwmod@divisor+1),w
  6637  048F  0471               	iorwf	(___lwmod@divisor),w
  6638  0490  1903               	skipnz
  6639  0491  2C93               	goto	u296_21
  6640  0492  2C94               	goto	u296_20
  6641  0493                     u296_21:
  6642  0493  2CCA               	goto	i1l7370
  6643  0494                     u296_20:
  6644                           	line	9
  6645                           	
  6646  0494                     i1l7354:	
  6647  0494  01F6               	clrf	(___lwmod@counter)
  6648  0495  1403               	bsf	status,0
  6649  0496  0DF6               	rlf	(___lwmod@counter),f
  6650                           	line	10
  6651  0497  2CA4               	goto	i1l7360
  6652                           	
  6653  0498                     i1l5120:	
  6654                           	line	11
  6655                           	
  6656  0498                     i1l7356:	
  6657  0498  3001               	movlw	01h
  6658                           	
  6659  0499                     u297_25:
  6660  0499  1003               	clrc
  6661  049A  0DF1               	rlf	(___lwmod@divisor),f
  6662  049B  0DF2               	rlf	(___lwmod@divisor+1),f
  6663  049C  3EFF               	addlw	-1
  6664  049D  1D03               	skipz
  6665  049E  2C99               	goto	u297_25
  6666                           	line	12
  6667                           	
  6668  049F                     i1l7358:	
  6669  049F  3001               	movlw	(01h)
  6670  04A0  00F5               	movwf	(??___lwmod+0)+0
  6671  04A1  0875               	movf	(??___lwmod+0)+0,w
  6672  04A2  07F6               	addwf	(___lwmod@counter),f
  6673  04A3  2CA4               	goto	i1l7360
  6674                           	line	13
  6675                           	
  6676  04A4                     i1l5119:	
  6677                           	line	10
  6678                           	
  6679  04A4                     i1l7360:	
  6680  04A4  1FF2               	btfss	(___lwmod@divisor+1),(15)&7
  6681  04A5  2CA7               	goto	u298_21
  6682  04A6  2CA8               	goto	u298_20
  6683  04A7                     u298_21:
  6684  04A7  2C98               	goto	i1l7356
  6685  04A8                     u298_20:
  6686  04A8  2CAA               	goto	i1l7362
  6687                           	
  6688  04A9                     i1l5121:	
  6689  04A9  2CAA               	goto	i1l7362
  6690                           	line	14
  6691                           	
  6692  04AA                     i1l5122:	
  6693                           	line	15
  6694                           	
  6695  04AA                     i1l7362:	
  6696  04AA  0872               	movf	(___lwmod@divisor+1),w
  6697  04AB  0274               	subwf	(___lwmod@dividend+1),w
  6698  04AC  1D03               	skipz
  6699  04AD  2CB0               	goto	u299_25
  6700  04AE  0871               	movf	(___lwmod@divisor),w
  6701  04AF  0273               	subwf	(___lwmod@dividend),w
  6702  04B0                     u299_25:
  6703  04B0  1C03               	skipc
  6704  04B1  2CB3               	goto	u299_21
  6705  04B2  2CB4               	goto	u299_20
  6706  04B3                     u299_21:
  6707  04B3  2CBB               	goto	i1l7366
  6708  04B4                     u299_20:
  6709                           	line	16
  6710                           	
  6711  04B4                     i1l7364:	
  6712  04B4  0871               	movf	(___lwmod@divisor),w
  6713  04B5  02F3               	subwf	(___lwmod@dividend),f
  6714  04B6  0872               	movf	(___lwmod@divisor+1),w
  6715  04B7  1C03               	skipc
  6716  04B8  03F4               	decf	(___lwmod@dividend+1),f
  6717  04B9  02F4               	subwf	(___lwmod@dividend+1),f
  6718  04BA  2CBB               	goto	i1l7366
  6719                           	
  6720  04BB                     i1l5123:	
  6721                           	line	17
  6722                           	
  6723  04BB                     i1l7366:	
  6724  04BB  3001               	movlw	01h
  6725                           	
  6726  04BC                     u300_25:
  6727  04BC  1003               	clrc
  6728  04BD  0CF2               	rrf	(___lwmod@divisor+1),f
  6729  04BE  0CF1               	rrf	(___lwmod@divisor),f
  6730  04BF  3EFF               	addlw	-1
  6731  04C0  1D03               	skipz
  6732  04C1  2CBC               	goto	u300_25
  6733                           	line	18
  6734                           	
  6735  04C2                     i1l7368:	
  6736  04C2  3001               	movlw	low(01h)
  6737  04C3  02F6               	subwf	(___lwmod@counter),f
  6738  04C4  1D03               	btfss	status,2
  6739  04C5  2CC7               	goto	u301_21
  6740  04C6  2CC8               	goto	u301_20
  6741  04C7                     u301_21:
  6742  04C7  2CAA               	goto	i1l7362
  6743  04C8                     u301_20:
  6744  04C8  2CCA               	goto	i1l7370
  6745                           	
  6746  04C9                     i1l5124:	
  6747  04C9  2CCA               	goto	i1l7370
  6748                           	line	19
  6749                           	
  6750  04CA                     i1l5118:	
  6751                           	line	20
  6752                           	
  6753  04CA                     i1l7370:	
  6754  04CA  0874               	movf	(___lwmod@dividend+1),w
  6755  04CB  01F2               	clrf	(?___lwmod+1)
  6756  04CC  07F2               	addwf	(?___lwmod+1)
  6757  04CD  0873               	movf	(___lwmod@dividend),w
  6758  04CE  01F1               	clrf	(?___lwmod)
  6759  04CF  07F1               	addwf	(?___lwmod)
  6760                           
  6761  04D0  2CD1               	goto	i1l5125
  6762                           	
  6763  04D1                     i1l7372:	
  6764                           	line	21
  6765                           	
  6766  04D1                     i1l5125:	
  6767  04D1  0008               	return
  6768                           	opt stack 0
  6769                           GLOBAL	__end_of___lwmod
  6770  04D2                     	__end_of___lwmod:
  6771 ;; =============== function ___lwmod ends ============
  6772                           
  6773                           	signat	___lwmod,8314
  6774                           psect	text1255,local,class=CODE,delta=2
  6775                           global __ptext1255
  6776  0000                     __ptext1255:
  6777                           	global	btemp
  6778  007E                     	btemp set 07Eh
  6779                           
  6780                           	DABS	1,126,2	;btemp
  6781                           	global	wtemp0
  6782  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat May 18 18:13:14 2013

     __end_of_lcd_write_control 0EC8                               pc 0002                              _GO 00FA  
                            _RD 0C60                              _WR 0C61                    ___awdiv@sign 0036  
                            fsr 0004             ___wmul@multiplicand 002C                             l700 0EDD  
                           l703 051D                             l704 051D                             l705 0522  
                           l706 0551                             l690 04D6                             l691 0500  
                           l692 04DA                             l693 04DE                             l694 04E2  
                           l695 04E6                             l696 04EA                             l689 04EF  
                           l697 0512                             _GIE 005F                             _RB0 0030  
                           _RE0 0048                             _RE1 0049                             _RE2 004A  
                           _RX9 00C6                             _TX9 04C6                             fsr0 0004  
                           _run 0F15                             indf 0000              drive@highByteSpeed 0032  
     lcd_write_1_digit_bcd@data 002D                 ?_lcd_set_cursor 0071          __end_of_updateLocation 0426  
                          l2110 0E95                            l2104 0EC7                            l2113 078E  
                          l1402 0471                            l2114 077B                            l2107 0EB3  
                          l1403 043C                            l1411 0695                            l2115 079B  
                          l2131 066C                            l1404 0482                            l2116 079B  
                          l1405 048D                            l1414 05E9                            l2119 0EA0  
                          l1408 06BE                            l1417 06E7                            l5102 061B  
                          l5103 0625                            l1399 0588                            l5104 063A  
                          l4400 01E2                            l5105 0641                            l4401 00BB  
                          l4402 01E1                            l4410 01DD                            l4403 0102  
                          l4404 01E0                            l4405 0149                            l4413 0FFF  
                          l4406 01DF                            l2911 0F14                            l4407 0190  
                          l4416 076F                            l4408 01DE                            l2920 0318  
                          l4417 0757                            l4409 01D7                            l2921 0323  
                          l5250 03A0                            l5242 034D                            l4418 0776  
                          l2914 07FA                            l2922 032A                            l3707 074F  
                          l5251 03AB                            l5243 035B                            l4419 0776  
                          l2931 07E1                            l2915 07FD                            l2923 0335  
                          l5252 03B2                            l5244 03A1                            l2908 05B9  
                          l2916 07FD                            l2924 033C                            l2940 05F9  
                          l5245 0373                            l2925 033C                            l2941 0615  
                          l5246 0367                            l2934 0EF8                            l2942 0603  
                          l5247 0378                            l2919 0311                            l2943 0614  
                          l3672 06F3                            l5248 0379                            l8000 0EBA  
                          l2960 03C9                            l2944 060D                            l2952 0F28  
                          l3673 06FE                            l5249 0392                            l2937 0FBA  
                          l2961 0409                            l2945 0613                            l2953 0F33  
                          l3682 0F3A                            l8002 0EBC                            l8010 0EA9  
                          l2962 03D6                            l2946 0615                            l2954 0F34  
                          l2970 0FD8                            l3683 0F39                            l2963 03E1  
                          l2955 0F34                            l2971 0FD9                            l3684 0F42  
                          l3676 0F79                            l8004 0EBD                            l8012 0EAA  
                          l8020 0753                            l4396 002D                            l8100 0482  
                          l2964 03EE                            l2972 0FDA                            l3685 0F55  
                          l3677 0F78                            l4397 01E3                            l2949 07BE  
                          l2965 03F9                            l2973 0FDA                            l3678 0F82  
                          l8006 0EA4                            l8014 0EF9                            l8022 0758  
                          l4398 01E3                            l8030 0024                            l8102 0696  
                          l8110 0E8F                            l2966 0425                            l2958 03C2  
                          l3679 0F98                            l4399 0074                            l2959 03FB  
                          l7400 0390                            l8008 0EA7                            l8016 0F08  
                          l8024 075C                            l8040 0072                            l8032 002B  
                          l8104 066D                            l8112 077A                            l8120 0E99  
                          l8200 0FA9                            l2969 0FCC                            l7410 03AB  
                          l7402 0392                            l8018 0F0E                            l8026 0769  
                          l8050 00BA                            l8042 0073                            l8034 002C  
                          l8106 05BA                            l8114 077B                            l8130 064D  
                          l8122 0642                            l8202 0FAE                            l8210 07AC  
                          l7412 03B2                            l7404 0399                            l7420 054A  
                          l8060 0102                            l8052 00BB                            l8044 0074  
                          l8036 002D                            l8028 0015                            l8108 0E8E  
                          l8116 0787                            l8140 0666                            l8132 064E  
                          l8124 0646                            l8204 0FB4                            l8212 07B2  
                          l8220 03BF                            l8300 05FD                            l7406 03A1  
                          l7422 0551                            l7414 0513                            l8070 0158  
                          l8062 0111                            l8054 00CA                            l8046 0083  
                          l8038 003C                            l8118 078E                            l8134 0654  
                          l8126 0649                            l8150 0599                            l8142 0589  
                          l8214 07B8                            l8206 079C                            l8230 03DA  
                          l8222 03C2                            l8302 0607                            l8310 0F21  
                          l7408 03A5                            l7416 0519                            l8080 01D5  
                          l8072 018E                            l8064 0147                            l8056 0100  
                          l8048 00B9                            l8136 065A                            l8128 064A  
                          l8160 05A6                            l8152 059D                            l8144 058C  
                          l8208 07A1                            l8240 03FA                            l8232 03E1  
                          l8224 03C9                            l8216 03B3                            l8304 060D  
                          l8312 0F28                            l8320 0FD2                            l7418 0522  
                          l8082 01D6                            l8074 018F                            l8066 0148  
                          l8058 0101                            l8090 042C                            l8138 0660  
                          l8170 05B4                            l8162 05AA                            l8154 059F  
                          l8146 058F                            l8234 03E7                            l8226 03CF  
                          l8242 03FB                            l8218 03B9                            l8250 07F8  
                          l8314 0F2D                            l8306 0F15                            l7380 0351  
                          l8084 01D7                            l8076 0190                            l8068 0149  
                          l8092 043C                            l8164 05AD                            l8156 05A0  
                          l8148 0594                            l8172 0FDD                            l8180 07C4  
                          l8236 03EE                            l8228 03D6                            l8244 0409  
                          l8252 07F9                            l8260 02C2                            l8308 0F1B  
                          l8316 0FBB                            l7390 0367                            l7382 0356  
                          l7374 033D                            l8086 01DC                            l8078 019F  
                          l8094 045C                            l8166 05AE                            l8158 05A2  
                          l8174 0FF8                            l8182 07CF                            l8190 0EE9  
                          l8238 03F2                            l8254 07FA                            l8246 07E2  
                          l8270 02EF                            l8262 02C4                            l8318 0FCC  
                          l7392 036E                            l7384 035B                            l7376 0344  
                          l7560 04D5                            l8096 046A                            l8088 0426  
                          l8168 05AF                            l8176 0FFF                            l8184 07D5  
                          l8192 0EEC                            l8256 07FC                            l8248 07F6  
                          l8280 0311                            l8272 02F5                            l8264 02D3  
                          l7810 06FB                            l7394 0373                            l7386 035D  
                          l7378 034D                            l7562 04EA                            l7570 0500  
                          l8098 0471                            l8186 07DB                            l8178 07BF  
                          l8194 0EF2                            l8290 032E                            l8282 0318  
                          l8274 0300                            l8266 02DE                            l8258 02BA  
                          l7812 06FD                            l7900 06F3                            l7396 0379  
                          l7388 0363                            l7572 0504                            l7564 04ED  
                          l8188 0EDE                            l8196 0F99                            l8292 0335  
                          l8284 031C                            l8276 0306                            l8268 02E4  
                          l7902 06F9                            l7398 038A                            l7574 0512  
                          l7566 04EE                            l8198 0F9E                            l8286 0323  
                          l8278 030A                            l8294 05EA                            l7840 0F3A  
                          l7904 06FB                            l7568 04EF                            l8288 032A  
                          l8296 05EF                            l7842 0F43                            l7906 06FE  
                          l8298 05F3                            l7844 0F4B                            l7940 0616  
                          l7846 0F51                            l7838 0F38                            l7870 0733  
                          l7950 0641                            l7942 061B                            l7848 0F54  
                          l7880 073D                            l7872 0734                            l7944 061F  
                          l7960 0ED7                            l7952 0EC8                            l7890 0746  
                          l7882 0740                            l7874 0736                            l7866 0728  
                          l7946 062C                            l7954 0ECB                            l7970 0578  
                          l7962 0555                            l7884 0741                            l7876 0737  
                          l7868 072B                            l7892 06E8                            l7948 063A  
                          l7956 0ECF                            l7972 0580                            l7964 0562  
                          l7980 0F8D                            l7886 0744                            l7878 073A  
                          l7894 06EE                            l7958 0ED3                            l7966 0568  
                          l7982 0F91                            l7974 0F77                            l7990 06C2  
                          _CHS0 00FB                            _CHS1 00FC                            l7888 0745  
                          l7896 06F0                            l7968 0570                            l7984 0F95  
                          l7976 0F79                            l7992 06CF                            _CHS2 00FD  
                          l7898 06F2                            l7986 0F96                            l7978 0F83  
                          l7994 06D7                            l7988 0F98                            l7996 06DF  
                          l7998 0EB7                            STR_1 0706                            ?_run 0071  
                          STR_2 0717                            _BRGH 04C2                            _CREN 00C4  
                          u3100 039F                            u3020 0344                            u3101 039E  
                          u3021 0343                            u3110 03A5                            u3030 0351  
                          u3031 0350                            u3040 0363                            u3120 0521  
                          u3041 0362                            u3121 0520                            u3060 0377  
                          u3061 0376                            u3055 0368                            u3135 053D  
                          u3400 0F42                            u3080 038A                            u3401 0F41  
                          u3081 0389                            u3075 037A                            u3500 061F  
                          u3501 061E                            u3085 0386                            u3430 06EE  
                          u3431 06ED                            u3095 0393                            u3440 06F9  
                          u3600 0111                            u3441 06F8                            u3601 0110  
                          u3530 0639                            u3610 0158                            u3531 0638  
                          u3515 0626                            u3611 0157                            u3540 0F82  
                          u3620 019F                            u3525 062D                            u3541 0F81  
                          u3621 019E                            u3605 010D                            u3550 0775  
                          u3630 0481                            u3710 02FF                            u3551 0774  
                          u3615 0154                            u3631 0480                            u3711 02FD  
                          u3560 0024                            u3640 079A                            u3704 02EF  
                          u3625 019B                            u3561 0023                            u3641 0799  
                          u3570 003C                            u3650 03BF                            u3730 030A  
                          u3571 003B                            u3635 047D                            u3651 03BE  
                          u3731 0309                            _PEIE 005E                            u3580 0083  
                          u3660 07F6                            u3740 031C                            u3724 0300  
                          u3581 0082                            u3565 0020                            u3661 07F5  
                          u3741 031B                            u3590 00CA                            u3750 032E  
                          u3670 02DD                            u3591 00C9                            u3575 0038  
                          u3751 032D                            u3671 02DB                            u3807 02CC  
                          u3760 05F3                            u3585 007F                            u3817 0502  
                          u3665 07F2                            u3761 05F2                            u3690 02EE  
                          u3770 05FD                            u3827 0762                            u3595 00C6  
                          u3691 02EC                            u3771 05FC                            _RCIE 0465  
                          u3684 02DE                            u3780 0607                            _RCIF 0065  
                          u3837 0F01                            u3781 0606                            u3790 0FD2  
                          u3847 0EAF                            u3857 0EC2                            u3867 06C8  
                          u3877 055B                            u3887 0EDB                            _OERR 00C1  
                          _TMR0 0001                            _SPEN 00C7                            _TXIE 0464  
                          _WREN 0C62                            _TXEN 04C5                            _TXIF 0064  
                          _SYNC 04C4          __end_of_lcd_write_data 0EB4                            _isr1 01E4  
                          _main 0FBB                            _init 0589             drive@highByteRadius 002D  
                          btemp 007E                            start 0012                 rotateIR@stepNum 002E  
         _lcd_write_1_digit_bcd 0E96               ?_driveForDistance 0033                           ??_run 004D  
                   _turnRight90 05BA              ??_driveForDistance 0035                           ?_isr1 0071  
                         ?_main 0071                           ?_init 0071                 __end_of___awdiv 03B3  
                         _EEADR 010D                           _CARRY 0018                 ___awdiv@divisor 0030  
               __end_of___lwmod 04D2                 ___awdiv@counter 0035                           _RCREG 001A  
                         _SPBRG 0099                           _PORTA 0005                           _PORTC 0007  
                         _PORTD 0008                           _PORTE 0009                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087                           _TRISD 0088  
                         _TRISE 0089                           _TXREG 0019          lcd_write_data@databyte 002C  
               __end_of_goRight 07BF                 __end_of_convert 01E4                           _drive 0552  
               ?_updateLocation 0071                           _start 005D                  __pbitbssCOMMON 0380  
               __end_of_waitFor 06E8                           pclath 000A                 ?_lcd_write_data 0071  
             ?_adc_read_channel 0045                           status 0003                           wtemp0 007E  
            ??_adc_read_channel 0047            __end_of_goToNextCell 0616      __size_of_lcd_write_control 0014  
                  __end_of_isr1 02BA                    __end_of_main 0FDD                    __end_of_init 05BA  
                        ??_isr1 0020                          ??_main 004D                          ??_init 002F  
                        _ADCON0 001F                          _ADCON1 009F                          ?_drive 002C  
                        _ADRESH 001E                          _ADRESL 009E                          _EEDATA 010C  
                        _EECON1 018C                          _EECON2 018D                ___awdiv@dividend 0032  
              __end_of_adc_read 0552                          i1l5120 0498                          i1l5121 04A9  
                        i1l5122 04AA                          i1l5123 04BB                          i1l5124 04C9  
                        i1l2900 026A                          i1l5125 04D1                          i1l2901 0288  
                        i1l5118 04CA                          i1l2902 0287                          i1l5119 04A4  
                        i1l2903 02AD                          i1l2904 02AC                          i1l2905 02AE  
                        i1l7210 01E8                          i1l7220 0209                          i1l7212 01E9  
                        u300_25 04BC                          i1l2894 02AE                          i1l7230 023F  
                        i1l7222 0220                          i1l7214 01F1                          i1l2895 0209  
                        u301_20 04C8                          i1l7240 0266                          i1l7232 0245  
                        i1l2896 0222                          i1l7224 0222                          i1l7216 01F2  
                        i1l7208 01E4                          u301_21 04C7                          i1l2897 023F  
                        i1l7250 0282                          i1l7242 026A                          i1l7234 0249  
                        i1l2898 0265                          i1l7226 0239                          i1l7218 0207  
                        i1l2899 0264                          i1l7260 029E                          i1l7244 026E  
                        i1l7252 0288                          i1l7236 025F                          i1l7228 023A  
                        i1l7262 02A2                          i1l7254 028C                          i1l7246 0276  
                        i1l7238 0262                          i1l7360 04A4                          i1l7352 048E  
                        i1l7264 02A8                          i1l7256 0292                          i1l7248 027C  
                        i1l7362 04AA                          i1l7354 0494                          i1l7370 04CA  
                        i1l7258 029A                          i1l7372 04D1                          i1l7364 04B4  
                        i1l7356 0498                          i1l7366 04BB                          i1l7358 049F  
                        i1l7368 04C2                          u280_20 026E                          u280_21 026D  
                        u281_20 0282                          u281_21 0281                          u282_20 028C  
                        u274_20 01E8                          u282_21 028B                          u274_21 01E7  
                        u283_20 0292                          u275_20 0207                          u283_21 0291  
                        u275_21 0206                          u284_20 02A8                          u276_20 0220  
                        u284_21 02A7                          u276_21 021F                          u277_20 0239  
                        u277_21 0238                          u278_20 0245                          u278_21 0244  
                        u279_20 025F                          u279_21 025E                          u296_20 0494  
                        u296_21 0493                          u297_25 0499                          u298_20 04A8  
                        u298_21 04A7                          u299_20 04B4                          u299_21 04B3  
                        u299_25 04B0                          _TMR0IE 005D                          _TMR0IF 005A  
                        _SSPCON 0014                          _SSPBUF 0013                convert@adc_value 0041  
        ?_lcd_write_1_digit_bcd 0071                __end_of_findWall 07FE                __end_of_lcd_init 066D  
                        ___wmul 0616                       ??___awdiv 0034                          _goLeft 0F99  
                     ??___lwmod 0075                          _xCoord 0065                          _yCoord 0064  
                        _readIR 0FDD                __end_of_init_adc 0EDE                ___awdiv@quotient 0037  
      __end_of_lcd_write_string 079C                       ??_goRight 003D                          _rxfifo 004D  
                        clrloop 0E84                          _txfifo 00A0                          _rxiptr 0078  
                        _rxoptr 0079                          _txiptr 007A                       ??_convert 0043  
                        _txoptr 007B                __end_of_ser_init 0750                __end_of_ser_isrx 06FF  
                        saved_w 007E                       ??_waitFor 002E                __end_of_rotateIR 0777  
             lcd_write_string@s 002E                   rotateIR@steps 002D                  __pcstackCOMMON 0071  
                  __pidataBANK0 07FE                   __end_of_drive 0589              __size_of_goForward 001B  
              ??_lcd_set_cursor 002D              __size_of_findWalls 0083                      _goBackward 07BF  
                       ??_drive 002F                      __pbssBANK0 004D                      __pbssBANK1 00A0  
         __size_of_goToNextCell 002C               drive@lowByteSpeed 002C                      __pmaintext 0FBB  
                       ?___wmul 002A                         ?_goLeft 0071                      __pintentry 0004  
                       ?_readIR 0049                    ?_turnRight90 0071                      __ptext1220 02BA  
                    __ptext1221 07E2                      __ptext1230 0E96                      __ptext1222 03B3  
                    __ptext1231 0777                      __ptext1223 079C                      __ptext1240 0EF9  
                    __ptext1232 0E8B                      __ptext1224 0F99                      __ptext1241 0EA1  
                    __ptext1233 05BA                      __ptext1225 0EDE                      __ptext1250 06E8  
                    __ptext1242 0EB4                      __ptext1234 066D                      __ptext1226 07BF  
                    __ptext1218 0F15                      __ptext1251 0728                      __ptext1243 06BF  
                    __ptext1235 0696                      __ptext1227 0FDD                      __ptext1219 05EA  
                    __ptext1252 0F35                      __ptext1244 0F77                      __ptext1236 0426  
                    __ptext1228 0589                      __ptext1253 01E4                      __ptext1245 0552  
                    __ptext1237 04D2                      __ptext1229 0642                      __ptext1254 048E  
                    __ptext1246 0EC8                      __ptext1238 0015                      __ptext1255 0000  
                    __ptext1247 0513                      __ptext1239 0750                      __ptext1248 033D  
                    __ptext1249 0616              __size_of_ser_getch 0022                       ?_adc_read 0039  
            __size_of_ser_putch 0021                ??_updateLocation 002E                    _goToNextCell 05EA  
              ??_lcd_write_data 002A                       ?_findWall 0071       __size_of_driveForDistance 0068  
                waitFor@lowByte 002D                       ?_lcd_init 0071                         _SSPSTAT 0094  
                     ?_init_adc 0071               __end_of_goForward 0EF9                      _initIRobot 0EF9  
             __end_of_findWalls 033D                       ?_ser_init 0071                       ?_ser_isrx 0071  
                       ___awdiv 033D                       ?_rotateIR 0071                 __size_of___wmul 002C  
                       ___lwmod 048E                 __size_of_goLeft 0022                 __size_of_readIR 0023  
     __size_of_adc_read_channel 0041                         _goRight 079C                      ??_adc_read 003B  
                       _convert 0015                     waitFor@type 0031    driveForDistance@moveDistance 0033  
                  __size_of_run 0020                         _waitFor 06BF                         _ser_tmp 0063  
                   ?_goBackward 0071             driveForDistance@low 003C                      ??_findWall 004D  
                    ??_lcd_init 002D            end_of_initialization 0F73               __end_of_ser_getch 0F99  
                    ??_init_adc 002A         ??_lcd_write_1_digit_bcd 002D               __end_of_ser_putch 0F56  
                    ??_ser_init 002A                      ??_ser_isrx 002A                      ??_rotateIR 002A  
             ?_lcd_write_string 0071              ??_lcd_write_string 002D               adc_read@adc_value 003F  
                   ?_initIRobot 0071                      _turnLeft90 066D                      _turnAround 0696  
           __size_of_goBackward 0023                  __end_of___wmul 0642                  __end_of_goLeft 0FBB  
                __end_of_readIR 1000            __size_of_turnRight90 0030             start_initialization 0F56  
                   __end_of_run 0F35                _driveForDistance 0426           lcd_set_cursor@address 002D  
                _RTC_FLAG_500MS 0382                        ??___wmul 002E                        ??_goLeft 003D  
                   __pdataBANK0 0065                        ??_readIR 004B                _adc_read_channel 04D2  
             __size_of_adc_read 003F                     __pbssCOMMON 0077                   __pcstackBANK0 0020  
                 __pcstackBANK1 00B0             __size_of_initIRobot 001C               __size_of_findWall 001C  
             __size_of_lcd_init 002B              drive@lowByteRadius 002E               __size_of_init_adc 0016  
                     _goForward 0EDE                     ?_turnLeft90 0071                     ?_turnAround 0071  
                      ?___awdiv 0030               __size_of_ser_init 0028               __size_of_ser_isrx 0017  
                      ?___lwmod 0071                       _findWalls 02BA                       __pstrings 0700  
             __size_of_rotateIR 0027                        ?_goRight 0071                        ?_convert 0041  
                      ?_waitFor 002C                    ??_goBackward 003D                      ser_getch@c 002B  
                __size_of_drive 0037                       _frontWall 0384         __size_of_lcd_set_cursor 000B  
             interrupt_function 0004                  ___wmul@product 002E                      ser_putch@c 002B  
__size_of_lcd_write_1_digit_bcd 000B   __end_of_lcd_write_1_digit_bcd 0EA1                  _directionMoved 0062  
               waitFor@highByte 002C                       _rightWall 0386                       _ser_getch 0F77  
                    ?_goForward 0071                       _ser_putch 0F35              __end_of_goBackward 07E2  
                    ?_findWalls 0071                     __stringbase 0705               ___wmul@multiplier 002A  
           __size_of_turnLeft90 0029             __size_of_turnAround 0029         __size_of_updateLocation 0073  
     __size_of_lcd_write_string 0025                    ??_initIRobot 002C         __size_of_lcd_write_data 0013  
                    ?_ser_getch 0071                      ?_ser_putch 0071         adc_read_channel@channel 0048  
                 _RTC_FLAG_10MS 0380                   _RTC_FLAG_50MS 0383        __end_of_driveForDistance 048E  
              __size_of___awdiv 0076              _currentOrientation 0077                __size_of___lwmod 0044  
                      _adc_read 0513                __size_of_goRight 0023                __size_of_convert 01CF  
            __end_of_initIRobot 0F15                __size_of_waitFor 0029                        _findWall 07E2  
                      _lcd_init 0642                        _leftWall 0385        __end_of_adc_read_channel 0513  
     lcd_write_control@databyte 002C                        _init_adc 0EC8                   __size_of_isr1 00D6  
                 __size_of_main 0022                   __size_of_init 0031                        clear_ram 0E83  
                      _ser_init 0728                     ??_goForward 003D                        _ser_isrx 06E8  
          driveForDistance@high 003B                        _rotateIR 0750                     ??_findWalls 00B0  
                 ??_turnRight90 0033                        readIR@cm 004B                   ?_goToNextCell 0071  
 driveForDistance@deltaDistance 0037                    _RTC_FLAG_1MS 0381                        intlevel1 0000  
                _lcd_set_cursor 0E8B                ___lwmod@dividend 0073                       stringcode 0700  
                   ??_ser_getch 002A                    ??_turnLeft90 0033                     ??_ser_putch 002A  
                  ??_turnAround 0033               _lcd_write_control 0EB4              ?_lcd_write_control 0071  
                    _OPTION_REG 0081                 ___lwmod@divisor 0071                  ??_goToNextCell 004D  
               ___lwmod@counter 0076             __end_of_turnRight90 05EA                        stringdir 0700  
      driveForDistance@distance 0039                        stringtab 0700             ??_lcd_write_control 002A  
        __end_of_lcd_set_cursor 0E96              __end_of_turnLeft90 0696              __end_of_turnAround 06BF  
                _updateLocation 03B3                _lcd_write_string 0777                     _RTC_Counter 0060  
                _lcd_write_data 0EA1  
