

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Mon May 20 22:26:35 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_lcd_set_cursor
    49                           	FNCALL	_main,_lcd_write_string
    50                           	FNCALL	_main,_play_iCreate_song
    51                           	FNCALL	_main,_findWalls
    52                           	FNCALL	_main,_goToNextCell
    53                           	FNCALL	_main,_updateLocation
    54                           	FNCALL	_findWalls,_rotateIR
    55                           	FNCALL	_findWalls,_findWall
    56                           	FNCALL	_findWalls,_lcd_set_cursor
    57                           	FNCALL	_findWalls,_lcd_write_data
    58                           	FNCALL	_goToNextCell,_goRight
    59                           	FNCALL	_goToNextCell,_goForward
    60                           	FNCALL	_goToNextCell,_goLeft
    61                           	FNCALL	_goToNextCell,_goBackward
    62                           	FNCALL	_findWall,_readIR
    63                           	FNCALL	_updateLocation,_lcd_set_cursor
    64                           	FNCALL	_updateLocation,_lcd_write_data
    65                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
    66                           	FNCALL	_goRight,_turnRight90
    67                           	FNCALL	_goRight,_driveForDistance
    68                           	FNCALL	_goRight,_lcd_set_cursor
    69                           	FNCALL	_goRight,_lcd_write_data
    70                           	FNCALL	_goLeft,_turnLeft90
    71                           	FNCALL	_goLeft,_driveForDistance
    72                           	FNCALL	_goLeft,_lcd_set_cursor
    73                           	FNCALL	_goLeft,_lcd_write_data
    74                           	FNCALL	_goForward,_driveForDistance
    75                           	FNCALL	_goForward,_lcd_set_cursor
    76                           	FNCALL	_goForward,_lcd_write_data
    77                           	FNCALL	_goBackward,_turnAround
    78                           	FNCALL	_goBackward,_driveForDistance
    79                           	FNCALL	_goBackward,_lcd_set_cursor
    80                           	FNCALL	_goBackward,_lcd_write_data
    81                           	FNCALL	_readIR,_adc_read_channel
    82                           	FNCALL	_readIR,_convert
    83                           	FNCALL	_init,_init_adc
    84                           	FNCALL	_init,_lcd_init
    85                           	FNCALL	_init,_ser_init
    86                           	FNCALL	_init,_initIRobot
    87                           	FNCALL	_init,_initSongs
    88                           	FNCALL	_initSongs,_ser_putArr
    89                           	FNCALL	_lcd_init,_lcd_write_control
    90                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
    91                           	FNCALL	_lcd_write_string,_lcd_write_data
    92                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    93                           	FNCALL	_turnRight90,_drive
    94                           	FNCALL	_turnRight90,_waitFor
    95                           	FNCALL	_turnLeft90,_drive
    96                           	FNCALL	_turnLeft90,_waitFor
    97                           	FNCALL	_turnAround,_drive
    98                           	FNCALL	_turnAround,_waitFor
    99                           	FNCALL	_driveForDistance,_drive
   100                           	FNCALL	_driveForDistance,_ser_putch
   101                           	FNCALL	_driveForDistance,_ser_getch
   102                           	FNCALL	_adc_read_channel,_adc_read
   103                           	FNCALL	_convert,___wmul
   104                           	FNCALL	_convert,___awdiv
   105                           	FNCALL	_ser_putArr,_ser_putch
   106                           	FNCALL	_play_iCreate_song,_ser_putch
   107                           	FNCALL	_initIRobot,_ser_putch
   108                           	FNCALL	_waitFor,_ser_putch
   109                           	FNCALL	_ser_getch,_ser_isrx
   110                           	FNCALL	_drive,_ser_putch
   111                           	FNCALL	_adc_read,___awdiv
   112                           	FNROOT	_main
   113                           	FNCALL	_isr1,___lwmod
   114                           	FNCALL	intlevel1,_isr1
   115                           	global	intlevel1
   116                           	FNROOT	intlevel1
   117                           	global	_walls
   118                           	global	_yCoord
   119                           	global	_xCoord
   120                           	global	_lookingForU2
   121                           	global	_finalCountdown
   122                           	global	_superMarioBros
   123                           	global	_champions
   124                           psect	idataBANK0,class=CODE,space=0,delta=2
   125                           global __pidataBANK0
   126  0C56                     __pidataBANK0:
   127                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
   128                           	line	35
   129                           
   130                           ;initializer for _walls
   131  0C56  3401               	retlw	01h
   132  0C57  3401               	retlw	01h
   133  0C58  3401               	retlw	01h
   134  0C59  3400               	retlw	0
   135                           	line	42
   136                           
   137                           ;initializer for _yCoord
   138  0C5A  3404               	retlw	04h
   139                           psect	idataCOMMON,class=CODE,space=0,delta=2
   140                           global __pidataCOMMON
   141  07FD                     __pidataCOMMON:
   142                           	line	41
   143                           
   144                           ;initializer for _xCoord
   145  07FD  3401               	retlw	01h
   146                           psect	idataBANK3,class=CODE,space=0,delta=2
   147                           global __pidataBANK3
   148  0FC8                     __pidataBANK3:
   149                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
   150                           	line	11
   151                           
   152                           ;initializer for _lookingForU2
   153  0FC8  348C               	retlw	08Ch
   154  0FC9  3402               	retlw	02h
   155  0FCA  340D               	retlw	0Dh
   156  0FCB  3448               	retlw	048h
   157  0FCC  341C               	retlw	01Ch
   158  0FCD  3448               	retlw	048h
   159  0FCE  341C               	retlw	01Ch
   160  0FCF  344F               	retlw	04Fh
   161  0FD0  3440               	retlw	040h
   162  0FD1  3480               	retlw	080h
   163  0FD2  3410               	retlw	010h
   164  0FD3  344D               	retlw	04Dh
   165  0FD4  341C               	retlw	01Ch
   166  0FD5  344C               	retlw	04Ch
   167  0FD6  341C               	retlw	01Ch
   168  0FD7  3448               	retlw	048h
   169  0FD8  3440               	retlw	040h
   170  0FD9  3480               	retlw	080h
   171  0FDA  3410               	retlw	010h
   172  0FDB  3445               	retlw	045h
   173  0FDC  341C               	retlw	01Ch
   174  0FDD  3445               	retlw	045h
   175  0FDE  341C               	retlw	01Ch
   176  0FDF  3445               	retlw	045h
   177  0FE0  341C               	retlw	01Ch
   178  0FE1  3448               	retlw	048h
   179  0FE2  341C               	retlw	01Ch
   180  0FE3  3448               	retlw	048h
   181  0FE4  3440               	retlw	040h
   182                           	line	12
   183                           
   184                           ;initializer for _finalCountdown
   185  0FE5  348C               	retlw	08Ch
   186  0FE6  3403               	retlw	03h
   187  0FE7  340C               	retlw	0Ch
   188  0FE8  3449               	retlw	049h
   189  0FE9  3408               	retlw	08h
   190  0FEA  3447               	retlw	047h
   191  0FEB  3408               	retlw	08h
   192  0FEC  3449               	retlw	049h
   193  0FED  3420               	retlw	020h
   194  0FEE  3442               	retlw	042h
   195  0FEF  3440               	retlw	040h
   196  0FF0  3480               	retlw	080h
   197  0FF1  3420               	retlw	020h
   198  0FF2  344A               	retlw	04Ah
   199  0FF3  3408               	retlw	08h
   200  0FF4  3449               	retlw	049h
   201  0FF5  3408               	retlw	08h
   202  0FF6  344A               	retlw	04Ah
   203  0FF7  3408               	retlw	08h
   204  0FF8  3480               	retlw	080h
   205  0FF9  340C               	retlw	0Ch
   206  0FFA  3449               	retlw	049h
   207  0FFB  3406               	retlw	06h
   208  0FFC  3480               	retlw	080h
   209  0FFD  340C               	retlw	0Ch
   210  0FFE  3447               	retlw	047h
   211  0FFF  3430               	retlw	030h
   212                           psect	idataBANK1,class=CODE,space=0,delta=2
   213                           global __pidataBANK1
   214  0EF6                     __pidataBANK1:
   215                           	line	10
   216                           
   217                           ;initializer for _superMarioBros
   218  0EF6  348C               	retlw	08Ch
   219  0EF7  3401               	retlw	01h
   220  0EF8  340B               	retlw	0Bh
   221  0EF9  344C               	retlw	04Ch
   222  0EFA  3408               	retlw	08h
   223  0EFB  3480               	retlw	080h
   224  0EFC  3404               	retlw	04h
   225  0EFD  344C               	retlw	04Ch
   226  0EFE  3410               	retlw	010h
   227  0EFF  3480               	retlw	080h
   228  0F00  3404               	retlw	04h
   229  0F01  344C               	retlw	04Ch
   230  0F02  3410               	retlw	010h
   231  0F03  3480               	retlw	080h
   232  0F04  3404               	retlw	04h
   233  0F05  3448               	retlw	048h
   234  0F06  3408               	retlw	08h
   235  0F07  344C               	retlw	04Ch
   236  0F08  3410               	retlw	010h
   237  0F09  344F               	retlw	04Fh
   238  0F0A  3420               	retlw	020h
   239  0F0B  3480               	retlw	080h
   240  0F0C  3408               	retlw	08h
   241  0F0D  3443               	retlw	043h
   242  0F0E  3410               	retlw	010h
   243                           	line	13
   244                           
   245                           ;initializer for _champions
   246  0F0F  348C               	retlw	08Ch
   247  0F10  3404               	retlw	04h
   248  0F11  3409               	retlw	09h
   249  0F12  344A               	retlw	04Ah
   250  0F13  3440               	retlw	040h
   251  0F14  3449               	retlw	049h
   252  0F15  3410               	retlw	010h
   253  0F16  344A               	retlw	04Ah
   254  0F17  3410               	retlw	010h
   255  0F18  3449               	retlw	049h
   256  0F19  3430               	retlw	030h
   257  0F1A  3445               	retlw	045h
   258  0F1B  3430               	retlw	030h
   259  0F1C  3480               	retlw	080h
   260  0F1D  3420               	retlw	020h
   261  0F1E  3442               	retlw	042h
   262  0F1F  341C               	retlw	01Ch
   263  0F20  3447               	retlw	047h
   264  0F21  3420               	retlw	020h
   265  0F22  3442               	retlw	042h
   266  0F23  3430               	retlw	030h
   267                           	global	_rxfifo
   268                           	global	_start
   269                           	global	_RTC_Counter
   270                           	global	_currentOrientation
   271                           	global	_directionMoved
   272                           	global	_ser_tmp
   273                           	global	_rxiptr
   274                           	global	_rxoptr
   275                           	global	_txiptr
   276                           	global	_txoptr
   277                           	global	_RTC_FLAG_10MS
   278                           	global	_RTC_FLAG_1MS
   279                           	global	_RTC_FLAG_500MS
   280                           	global	_RTC_FLAG_50MS
   281                           	global	_frontWall
   282                           	global	_leftWall
   283                           	global	_moving
   284                           	global	_rightWall
   285                           	global	_txfifo
   286                           	global	_ADCON0
   287  001F                     _ADCON0	set	31
   288                           	global	_ADRESH
   289  001E                     _ADRESH	set	30
   290                           	global	_PORTA
   291  0005                     _PORTA	set	5
   292                           	global	_PORTC
   293  0007                     _PORTC	set	7
   294                           	global	_PORTD
   295  0008                     _PORTD	set	8
   296                           	global	_PORTE
   297  0009                     _PORTE	set	9
   298                           	global	_RCREG
   299  001A                     _RCREG	set	26
   300                           	global	_SSPBUF
   301  0013                     _SSPBUF	set	19
   302                           	global	_SSPCON
   303  0014                     _SSPCON	set	20
   304                           	global	_TMR0
   305  0001                     _TMR0	set	1
   306                           	global	_TXREG
   307  0019                     _TXREG	set	25
   308                           	global	_CARRY
   309  0018                     _CARRY	set	24
   310                           	global	_CHS0
   311  00FB                     _CHS0	set	251
   312                           	global	_CHS1
   313  00FC                     _CHS1	set	252
   314                           	global	_CHS2
   315  00FD                     _CHS2	set	253
   316                           	global	_CREN
   317  00C4                     _CREN	set	196
   318                           	global	_GIE
   319  005F                     _GIE	set	95
   320                           	global	_GO
   321  00FA                     _GO	set	250
   322                           	global	_OERR
   323  00C1                     _OERR	set	193
   324                           	global	_PEIE
   325  005E                     _PEIE	set	94
   326                           	global	_RB0
   327  0030                     _RB0	set	48
   328                           	global	_RCIF
   329  0065                     _RCIF	set	101
   330                           	global	_RE0
   331  0048                     _RE0	set	72
   332                           	global	_RE1
   333  0049                     _RE1	set	73
   334                           	global	_RE2
   335  004A                     _RE2	set	74
   336                           	global	_RX9
   337  00C6                     _RX9	set	198
   338                           	global	_SPEN
   339  00C7                     _SPEN	set	199
   340                           	global	_SSPIF
   341  0063                     _SSPIF	set	99
   342                           	global	_TMR0IE
   343  005D                     _TMR0IE	set	93
   344                           	global	_TMR0IF
   345  005A                     _TMR0IF	set	90
   346                           	global	_TXIF
   347  0064                     _TXIF	set	100
   348                           	global	_ADCON1
   349  009F                     _ADCON1	set	159
   350                           	global	_ADRESL
   351  009E                     _ADRESL	set	158
   352                           	global	_OPTION_REG
   353  0081                     _OPTION_REG	set	129
   354                           	global	_SPBRG
   355  0099                     _SPBRG	set	153
   356                           	global	_SSPSTAT
   357  0094                     _SSPSTAT	set	148
   358                           	global	_TRISA
   359  0085                     _TRISA	set	133
   360                           	global	_TRISB
   361  0086                     _TRISB	set	134
   362                           	global	_TRISC
   363  0087                     _TRISC	set	135
   364                           	global	_TRISD
   365  0088                     _TRISD	set	136
   366                           	global	_TRISE
   367  0089                     _TRISE	set	137
   368                           	global	_BRGH
   369  04C2                     _BRGH	set	1218
   370                           	global	_RCIE
   371  0465                     _RCIE	set	1125
   372                           	global	_SYNC
   373  04C4                     _SYNC	set	1220
   374                           	global	_TX9
   375  04C6                     _TX9	set	1222
   376                           	global	_TXEN
   377  04C5                     _TXEN	set	1221
   378                           	global	_TXIE
   379  0464                     _TXIE	set	1124
   380                           	global	_EEADR
   381  010D                     _EEADR	set	269
   382                           	global	_EEDATA
   383  010C                     _EEDATA	set	268
   384                           	global	_EECON1
   385  018C                     _EECON1	set	396
   386                           	global	_EECON2
   387  018D                     _EECON2	set	397
   388                           	global	_RD
   389  0C60                     _RD	set	3168
   390                           	global	_WR
   391  0C61                     _WR	set	3169
   392                           	global	_WREN
   393  0C62                     _WREN	set	3170
   394                           psect	strings,class=STRING,delta=2
   395                           global __pstrings
   396  062A                     __pstrings:
   397                           ;	global	stringdir,stringtab,__stringbase
   398  062A                     stringtab:
   399                           ;	String table - string pointers are 1 byte each
   400  062A                     stringcode:stringdir:
      + 062A                     stringdir:	
   401  062A  3006               movlw high(stringdir)
   402  062B  008A               movwf pclath
   403  062C  0804               movf fsr,w
   404  062D  0A84               incf fsr
   405  062E  0782               	addwf pc
   406  062F                     __stringbase:
   407  062F  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  0630                     STR_3:	
   411  0630  3457               	retlw	87	;'W'
   412  0631  3461               	retlw	97	;'a'
   413  0632  346C               	retlw	108	;'l'
   414  0633  346C               	retlw	108	;'l'
   415  0634  3473               	retlw	115	;'s'
   416  0635  3440               	retlw	64	;'@'
   417  0636  3420               	retlw	32	;' '
   418  0637  342D               	retlw	45	;'-'
   419  0638  342D               	retlw	45	;'-'
   420  0639  342D               	retlw	45	;'-'
   421  063A  3420               	retlw	32	;' '
   422  063B  3428               	retlw	40	;'('
   423  063C  3431               	retlw	49	;'1'
   424  063D  342C               	retlw	44	;','
   425  063E  3430               	retlw	48	;'0'
   426  063F  3429               	retlw	41	;')'
   427  0640  3400               	retlw	0
   428                           psect	strings
   429                           	
   430  0641                     STR_4:	
   431  0641  3463               	retlw	99	;'c'
   432  0642  3475               	retlw	117	;'u'
   433  0643  344F               	retlw	79	;'O'
   434  0644  3472               	retlw	114	;'r'
   435  0645  343A               	retlw	58	;':'
   436  0646  3420               	retlw	32	;' '
   437  0647  342D               	retlw	45	;'-'
   438  0648  3420               	retlw	32	;' '
   439  0649  3464               	retlw	100	;'d'
   440  064A  3469               	retlw	105	;'i'
   441  064B  3472               	retlw	114	;'r'
   442  064C  344D               	retlw	77	;'M'
   443  064D  346F               	retlw	111	;'o'
   444  064E  343A               	retlw	58	;':'
   445  064F  3420               	retlw	32	;' '
   446  0650  342D               	retlw	45	;'-'
   447  0651  3400               	retlw	0
   448                           psect	strings
   449                           	
   450  0652                     STR_1:	
   451  0652  3445               	retlw	69	;'E'
   452  0653  3445               	retlw	69	;'E'
   453  0654  3450               	retlw	80	;'P'
   454  0655  3452               	retlw	82	;'R'
   455  0656  344F               	retlw	79	;'O'
   456  0657  344D               	retlw	77	;'M'
   457  0658  3420               	retlw	32	;' '
   458  0659  3457               	retlw	87	;'W'
   459  065A  346F               	retlw	111	;'o'
   460  065B  3472               	retlw	114	;'r'
   461  065C  346B               	retlw	107	;'k'
   462  065D  3465               	retlw	101	;'e'
   463  065E  3464               	retlw	100	;'d'
   464  065F  3400               	retlw	0
   465                           psect	strings
   466                           	
   467  0660                     STR_2:	
   468  0660  3445               	retlw	69	;'E'
   469  0661  3445               	retlw	69	;'E'
   470  0662  3450               	retlw	80	;'P'
   471  0663  3452               	retlw	82	;'R'
   472  0664  344F               	retlw	79	;'O'
   473  0665  344D               	retlw	77	;'M'
   474  0666  3420               	retlw	32	;' '
   475  0667  3446               	retlw	70	;'F'
   476  0668  3461               	retlw	97	;'a'
   477  0669  3469               	retlw	105	;'i'
   478  066A  346C               	retlw	108	;'l'
   479  066B  3465               	retlw	101	;'e'
   480  066C  3464               	retlw	100	;'d'
   481  066D  3400               	retlw	0
   482                           psect	strings
   483                           	file	"COMPv0.1.as"
   484                           	line	#
   485                           psect cinit,class=CODE,delta=2
   486                           global start_initialization
   487  0556                     start_initialization:
   488                           
   489                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   490                           global __pbitbssCOMMON
   491  0380                     __pbitbssCOMMON:
   492  0380                     _RTC_FLAG_10MS:
   493  0380                            ds      1
   494                           
   495  0381                     _RTC_FLAG_1MS:
   496  0381                            ds      1
   497                           
   498  0382                     _RTC_FLAG_500MS:
   499  0382                            ds      1
   500                           
   501  0383                     _RTC_FLAG_50MS:
   502  0383                            ds      1
   503                           
   504  0384                     _frontWall:
   505  0384                            ds      1
   506                           
   507  0385                     _leftWall:
   508  0385                            ds      1
   509                           
   510  0386                     _moving:
   511  0386                            ds      1
   512                           
   513  0387                     _rightWall:
   514  0387                            ds      1
   515                           
   516                           psect	bssCOMMON,class=COMMON,space=1
   517                           global __pbssCOMMON
   518  0077                     __pbssCOMMON:
   519  0077                     _rxiptr:
   520  0077                            ds      1
   521                           
   522  0078                     _rxoptr:
   523  0078                            ds      1
   524                           
   525  0079                     _txiptr:
   526  0079                            ds      1
   527                           
   528  007A                     _txoptr:
   529  007A                            ds      1
   530                           
   531                           psect	dataCOMMON,class=COMMON,space=1
   532                           global __pdataCOMMON
   533  007B                     __pdataCOMMON:
   534                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
   535                           	line	41
   536  007B                     _xCoord:
   537  007B                            ds      1
   538                           
   539                           psect	bssBANK0,class=BANK0,space=1
   540                           global __pbssBANK0
   541  0049                     __pbssBANK0:
   542  0049                     _rxfifo:
   543  0049                            ds      16
   544                           
   545  0059                     _start:
   546  0059                            ds      3
   547                           
   548  005C                     _RTC_Counter:
   549  005C                            ds      2
   550                           
   551  005E                     _currentOrientation:
   552  005E                            ds      1
   553                           
   554  005F                     _directionMoved:
   555  005F                            ds      1
   556                           
   557  0060                     _ser_tmp:
   558  0060                            ds      1
   559                           
   560                           psect	dataBANK0,class=BANK0,space=1
   561                           global __pdataBANK0
   562  0061                     __pdataBANK0:
   563                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
   564                           	line	35
   565  0061                     _walls:
   566  0061                            ds      4
   567                           
   568                           psect	dataBANK0
   569                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
   570                           	line	42
   571  0065                     _yCoord:
   572  0065                            ds      1
   573                           
   574                           psect	bssBANK1,class=BANK1,space=1
   575                           global __pbssBANK1
   576  00CE                     __pbssBANK1:
   577  00CE                     _txfifo:
   578  00CE                            ds      16
   579                           
   580                           psect	dataBANK1,class=BANK1,space=1
   581                           global __pdataBANK1
   582  00A0                     __pdataBANK1:
   583                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
   584                           	line	10
   585  00A0                     _superMarioBros:
   586  00A0                            ds      25
   587                           
   588                           psect	dataBANK1
   589                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
   590                           	line	13
   591  00B9                     _champions:
   592  00B9                            ds      21
   593                           
   594                           psect	dataBANK3,class=BANK3,space=1
   595                           global __pdataBANK3
   596  0190                     __pdataBANK3:
   597                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
   598                           	line	11
   599  0190                     _lookingForU2:
   600  0190                            ds      29
   601                           
   602                           psect	dataBANK3
   603                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
   604                           	line	12
   605  01AD                     _finalCountdown:
   606  01AD                            ds      27
   607                           
   608                           psect clrtext,class=CODE,delta=2
   609                           global clear_ram
   610                           ;	Called with FSR containing the base address, and
   611                           ;	W with the last address+1
   612  0C5B                     clear_ram:
   613  0C5B  0064               	clrwdt			;clear the watchdog before getting into this loop
   614  0C5C                     clrloop:
   615  0C5C  0180               	clrf	indf		;clear RAM location pointed to by FSR
   616  0C5D  0A84               	incf	fsr,f		;increment pointer
   617  0C5E  0604               	xorwf	fsr,w		;XOR with final address
   618  0C5F  1903               	btfsc	status,2	;have we reached the end yet?
   619  0C60  3400               	retlw	0		;all done for this memory range, return
   620  0C61  0604               	xorwf	fsr,w		;XOR again to restore value
   621  0C62  2C5C               	goto	clrloop		;do the next byte
   622                           
   623                           ; Clear objects allocated to BITCOMMON
   624                           psect cinit,class=CODE,delta=2
   625  0556  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   626                           ; Clear objects allocated to COMMON
   627                           psect cinit,class=CODE,delta=2
   628  0557  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   629  0558  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   630  0559  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   631  055A  01FA               	clrf	((__pbssCOMMON)+3)&07Fh
   632                           ; Clear objects allocated to BANK0
   633                           psect cinit,class=CODE,delta=2
   634  055B  1383               	bcf	status, 7	;select IRP bank0
   635  055C  3049               	movlw	low(__pbssBANK0)
   636  055D  0084               	movwf	fsr
   637  055E  3061               	movlw	low((__pbssBANK0)+018h)
   638  055F  120A  158A  245B   	fcall	clear_ram
              120A  118A         
   639                           ; Clear objects allocated to BANK1
   640                           psect cinit,class=CODE,delta=2
   641  0564  30CE               	movlw	low(__pbssBANK1)
   642  0565  0084               	movwf	fsr
   643  0566  30DE               	movlw	low((__pbssBANK1)+010h)
   644  0567  120A  158A  245B   	fcall	clear_ram
              120A  118A         
   645                           global btemp
   646                           psect inittext,class=CODE,delta=2
   647                           global init_fetch,btemp
   648                           ;	Called with low address in FSR and high address in W
   649  0C9E                     init_fetch:
   650  0C9E  087E               	movf btemp,w
   651  0C9F  008A               	movwf pclath
   652  0CA0  087F               	movf btemp+1,w
   653  0CA1  0082               	movwf pc
   654                           global init_ram
   655                           ;Called with:
   656                           ;	high address of idata address in btemp 
   657                           ;	low address of idata address in btemp+1 
   658                           ;	low address of data in FSR
   659                           ;	high address + 1 of data in btemp-1
   660  0CA2                     init_ram:
   661  0CA2  120A  158A  249E   	fcall init_fetch
              120A  158A         
   662  0CA7  0080               	movwf indf,f
   663  0CA8  0A84               	incf fsr,f
   664  0CA9  0804               	movf fsr,w
   665  0CAA  067D               	xorwf btemp-1,w
   666  0CAB  1903               	btfsc status,2
   667  0CAC  3400               	retlw 0
   668  0CAD  0AFF               	incf btemp+1,f
   669  0CAE  1903               	btfsc status,2
   670  0CAF  0AFE               	incf btemp,f
   671  0CB0  2CA2               	goto init_ram
   672                           ; Initialize objects allocated to BANK3
   673                           psect cinit,class=CODE,delta=2
   674                           global init_ram, __pidataBANK3
   675  056C  1783               	bsf	status, 7	;select IRP bank2
   676  056D  30C8               	movlw low(__pdataBANK3+56)
   677  056E  00FD               	movwf btemp-1,f
   678  056F  300F               	movlw high(__pidataBANK3)
   679  0570  00FE               	movwf btemp,f
   680  0571  30C8               	movlw low(__pidataBANK3)
   681  0572  00FF               	movwf btemp+1,f
   682  0573  3090               	movlw low(__pdataBANK3)
   683  0574  0084               	movwf fsr,f
   684  0575  120A  158A  24A2   	fcall init_ram
              120A  118A         
   685                           ; Initialize objects allocated to BANK1
   686                           psect cinit,class=CODE,delta=2
   687                           global init_ram, __pidataBANK1
   688  057A  1383               	bcf	status, 7	;select IRP bank0
   689  057B  30CE               	movlw low(__pdataBANK1+46)
   690  057C  00FD               	movwf btemp-1,f
   691  057D  300E               	movlw high(__pidataBANK1)
   692  057E  00FE               	movwf btemp,f
   693  057F  30F6               	movlw low(__pidataBANK1)
   694  0580  00FF               	movwf btemp+1,f
   695  0581  30A0               	movlw low(__pdataBANK1)
   696  0582  0084               	movwf fsr,f
   697  0583  120A  158A  24A2   	fcall init_ram
              120A  118A         
   698                           ; Initialize objects allocated to BANK0
   699                           psect cinit,class=CODE,delta=2
   700                           global init_ram, __pidataBANK0
   701  0588  3066               	movlw low(__pdataBANK0+5)
   702  0589  00FD               	movwf btemp-1,f
   703  058A  300C               	movlw high(__pidataBANK0)
   704  058B  00FE               	movwf btemp,f
   705  058C  3056               	movlw low(__pidataBANK0)
   706  058D  00FF               	movwf btemp+1,f
   707  058E  3061               	movlw low(__pdataBANK0)
   708  058F  0084               	movwf fsr,f
   709  0590  120A  158A  24A2   	fcall init_ram
              120A  118A         
   710                           ; Initialize objects allocated to COMMON
   711                           	global __pidataCOMMON
   712                           psect cinit,class=CODE,delta=2
   713  0595  120A  118A  27FD   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  118A         
   714  059A  00FB               	movwf	__pdataCOMMON+0&07fh		
   715                           psect cinit,class=CODE,delta=2
   716                           global end_of_initialization
   717                           
   718                           ;End of C runtime variable initialization code
   719                           
   720  059B                     end_of_initialization:
   721  059B  0183               clrf status
   722  059C  120A  118A  2D0C   ljmp _main	;jump to C main() function
   723                           psect	cstackBANK1,class=BANK1,space=1
   724                           global __pcstackBANK1
   725  00DE                     __pcstackBANK1:
   726                           	global	?_readIR
   727  00DE                     ?_readIR:	; 2 bytes @ 0x0
   728  00DE                     	ds	2
   729                           	global	readIR@cm
   730  00E0                     readIR@cm:	; 2 bytes @ 0x2
   731  00E0                     	ds	2
   732                           	global	??_findWalls
   733  00E2                     ??_findWalls:	; 0 bytes @ 0x4
   734  00E2                     	ds	1
   735                           	global	findWalls@wallAtOrientation
   736  00E3                     findWalls@wallAtOrientation:	; 2 bytes @ 0x5
   737  00E3                     	ds	2
   738                           psect	cstackCOMMON,class=COMMON,space=1
   739                           global __pcstackCOMMON
   740  0071                     __pcstackCOMMON:
   741                           	global	?_ser_putch
   742  0071                     ?_ser_putch:	; 0 bytes @ 0x0
   743                           	global	?_lcd_write_data
   744  0071                     ?_lcd_write_data:	; 0 bytes @ 0x0
   745                           	global	?_ser_init
   746  0071                     ?_ser_init:	; 0 bytes @ 0x0
   747                           	global	?_initIRobot
   748  0071                     ?_initIRobot:	; 0 bytes @ 0x0
   749                           	global	?_initSongs
   750  0071                     ?_initSongs:	; 0 bytes @ 0x0
   751                           	global	?_goRight
   752  0071                     ?_goRight:	; 0 bytes @ 0x0
   753                           	global	?_play_iCreate_song
   754  0071                     ?_play_iCreate_song:	; 0 bytes @ 0x0
   755                           	global	?_init_adc
   756  0071                     ?_init_adc:	; 0 bytes @ 0x0
   757                           	global	?_turnAround
   758  0071                     ?_turnAround:	; 0 bytes @ 0x0
   759                           	global	?_turnLeft90
   760  0071                     ?_turnLeft90:	; 0 bytes @ 0x0
   761                           	global	?_turnRight90
   762  0071                     ?_turnRight90:	; 0 bytes @ 0x0
   763                           	global	?_lcd_write_control
   764  0071                     ?_lcd_write_control:	; 0 bytes @ 0x0
   765                           	global	?_lcd_set_cursor
   766  0071                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   767                           	global	?_lcd_write_string
   768  0071                     ?_lcd_write_string:	; 0 bytes @ 0x0
   769                           	global	?_lcd_write_1_digit_bcd
   770  0071                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
   771                           	global	?_lcd_init
   772  0071                     ?_lcd_init:	; 0 bytes @ 0x0
   773                           	global	?_isr1
   774  0071                     ?_isr1:	; 0 bytes @ 0x0
   775                           	global	?_init
   776  0071                     ?_init:	; 0 bytes @ 0x0
   777                           	global	?_findWall
   778  0071                     ?_findWall:	; 1 bit 
   779                           	global	?_findWalls
   780  0071                     ?_findWalls:	; 0 bytes @ 0x0
   781                           	global	?_goBackward
   782  0071                     ?_goBackward:	; 0 bytes @ 0x0
   783                           	global	?_goForward
   784  0071                     ?_goForward:	; 0 bytes @ 0x0
   785                           	global	?_goLeft
   786  0071                     ?_goLeft:	; 0 bytes @ 0x0
   787                           	global	?_goToNextCell
   788  0071                     ?_goToNextCell:	; 0 bytes @ 0x0
   789                           	global	?_updateLocation
   790  0071                     ?_updateLocation:	; 0 bytes @ 0x0
   791                           	global	?_main
   792  0071                     ?_main:	; 0 bytes @ 0x0
   793                           	global	?_ser_isrx
   794  0071                     ?_ser_isrx:	; 1 bit 
   795                           	global	?_ser_getch
   796  0071                     ?_ser_getch:	; 1 bytes @ 0x0
   797                           	global	?___lwmod
   798  0071                     ?___lwmod:	; 2 bytes @ 0x0
   799                           	global	___lwmod@divisor
   800  0071                     ___lwmod@divisor:	; 2 bytes @ 0x0
   801  0071                     	ds	2
   802                           	global	___lwmod@dividend
   803  0073                     ___lwmod@dividend:	; 2 bytes @ 0x2
   804  0073                     	ds	2
   805                           	global	??___lwmod
   806  0075                     ??___lwmod:	; 0 bytes @ 0x4
   807  0075                     	ds	1
   808                           	global	___lwmod@counter
   809  0076                     ___lwmod@counter:	; 1 bytes @ 0x5
   810  0076                     	ds	1
   811                           psect	cstackBANK0,class=BANK0,space=1
   812                           global __pcstackBANK0
   813  0020                     __pcstackBANK0:
   814                           	global	??_isr1
   815  0020                     ??_isr1:	; 0 bytes @ 0x0
   816  0020                     	ds	10
   817                           	global	??_ser_putch
   818  002A                     ??_ser_putch:	; 0 bytes @ 0xA
   819                           	global	??_ser_getch
   820  002A                     ??_ser_getch:	; 0 bytes @ 0xA
   821                           	global	??_lcd_write_data
   822  002A                     ??_lcd_write_data:	; 0 bytes @ 0xA
   823                           	global	??_ser_init
   824  002A                     ??_ser_init:	; 0 bytes @ 0xA
   825                           	global	?_rotateIR
   826  002A                     ?_rotateIR:	; 0 bytes @ 0xA
   827                           	global	??_init_adc
   828  002A                     ??_init_adc:	; 0 bytes @ 0xA
   829                           	global	??_lcd_write_control
   830  002A                     ??_lcd_write_control:	; 0 bytes @ 0xA
   831                           	global	??_ser_isrx
   832  002A                     ??_ser_isrx:	; 0 bytes @ 0xA
   833                           	global	?___wmul
   834  002A                     ?___wmul:	; 2 bytes @ 0xA
   835                           	global	rotateIR@direction
   836  002A                     rotateIR@direction:	; 1 bytes @ 0xA
   837                           	global	___wmul@multiplier
   838  002A                     ___wmul@multiplier:	; 2 bytes @ 0xA
   839  002A                     	ds	1
   840                           	global	??_rotateIR
   841  002B                     ??_rotateIR:	; 0 bytes @ 0xB
   842                           	global	ser_getch@c
   843  002B                     ser_getch@c:	; 1 bytes @ 0xB
   844                           	global	ser_putch@c
   845  002B                     ser_putch@c:	; 1 bytes @ 0xB
   846  002B                     	ds	1
   847                           	global	?_waitFor
   848  002C                     ?_waitFor:	; 0 bytes @ 0xC
   849                           	global	??_initIRobot
   850  002C                     ??_initIRobot:	; 0 bytes @ 0xC
   851                           	global	??_play_iCreate_song
   852  002C                     ??_play_iCreate_song:	; 0 bytes @ 0xC
   853                           	global	?_drive
   854  002C                     ?_drive:	; 0 bytes @ 0xC
   855                           	global	?_ser_putArr
   856  002C                     ?_ser_putArr:	; 0 bytes @ 0xC
   857                           	global	drive@lowByteSpeed
   858  002C                     drive@lowByteSpeed:	; 1 bytes @ 0xC
   859                           	global	waitFor@highByte
   860  002C                     waitFor@highByte:	; 1 bytes @ 0xC
   861                           	global	lcd_write_control@databyte
   862  002C                     lcd_write_control@databyte:	; 1 bytes @ 0xC
   863                           	global	lcd_write_data@databyte
   864  002C                     lcd_write_data@databyte:	; 1 bytes @ 0xC
   865                           	global	play_iCreate_song@song
   866  002C                     play_iCreate_song@song:	; 1 bytes @ 0xC
   867                           	global	ser_putArr@array
   868  002C                     ser_putArr@array:	; 2 bytes @ 0xC
   869                           	global	___wmul@multiplicand
   870  002C                     ___wmul@multiplicand:	; 2 bytes @ 0xC
   871  002C                     	ds	1
   872                           	global	??_lcd_set_cursor
   873  002D                     ??_lcd_set_cursor:	; 0 bytes @ 0xD
   874                           	global	??_lcd_write_string
   875  002D                     ??_lcd_write_string:	; 0 bytes @ 0xD
   876                           	global	??_lcd_write_1_digit_bcd
   877  002D                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0xD
   878                           	global	??_lcd_init
   879  002D                     ??_lcd_init:	; 0 bytes @ 0xD
   880                           	global	drive@highByteRadius
   881  002D                     drive@highByteRadius:	; 1 bytes @ 0xD
   882                           	global	waitFor@lowByte
   883  002D                     waitFor@lowByte:	; 1 bytes @ 0xD
   884                           	global	lcd_set_cursor@address
   885  002D                     lcd_set_cursor@address:	; 1 bytes @ 0xD
   886                           	global	lcd_write_1_digit_bcd@data
   887  002D                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0xD
   888  002D                     	ds	1
   889                           	global	??_waitFor
   890  002E                     ??_waitFor:	; 0 bytes @ 0xE
   891                           	global	??_updateLocation
   892  002E                     ??_updateLocation:	; 0 bytes @ 0xE
   893                           	global	??___wmul
   894  002E                     ??___wmul:	; 0 bytes @ 0xE
   895                           	global	drive@lowByteRadius
   896  002E                     drive@lowByteRadius:	; 1 bytes @ 0xE
   897                           	global	lcd_write_string@s
   898  002E                     lcd_write_string@s:	; 1 bytes @ 0xE
   899                           	global	rotateIR@steps
   900  002E                     rotateIR@steps:	; 1 bytes @ 0xE
   901                           	global	ser_putArr@length
   902  002E                     ser_putArr@length:	; 2 bytes @ 0xE
   903                           	global	___wmul@product
   904  002E                     ___wmul@product:	; 2 bytes @ 0xE
   905  002E                     	ds	1
   906                           	global	??_drive
   907  002F                     ??_drive:	; 0 bytes @ 0xF
   908                           	global	rotateIR@stepNum
   909  002F                     rotateIR@stepNum:	; 1 bytes @ 0xF
   910  002F                     	ds	1
   911                           	global	??_ser_putArr
   912  0030                     ??_ser_putArr:	; 0 bytes @ 0x10
   913                           	global	?___awdiv
   914  0030                     ?___awdiv:	; 2 bytes @ 0x10
   915                           	global	___awdiv@divisor
   916  0030                     ___awdiv@divisor:	; 2 bytes @ 0x10
   917  0030                     	ds	1
   918                           	global	waitFor@type
   919  0031                     waitFor@type:	; 1 bytes @ 0x11
   920  0031                     	ds	1
   921                           	global	drive@highByteSpeed
   922  0032                     drive@highByteSpeed:	; 1 bytes @ 0x12
   923                           	global	___awdiv@dividend
   924  0032                     ___awdiv@dividend:	; 2 bytes @ 0x12
   925  0032                     	ds	1
   926                           	global	?_driveForDistance
   927  0033                     ?_driveForDistance:	; 0 bytes @ 0x13
   928                           	global	??_turnAround
   929  0033                     ??_turnAround:	; 0 bytes @ 0x13
   930                           	global	??_turnLeft90
   931  0033                     ??_turnLeft90:	; 0 bytes @ 0x13
   932                           	global	??_turnRight90
   933  0033                     ??_turnRight90:	; 0 bytes @ 0x13
   934                           	global	driveForDistance@moveDistance
   935  0033                     driveForDistance@moveDistance:	; 2 bytes @ 0x13
   936                           	global	ser_putArr@i
   937  0033                     ser_putArr@i:	; 2 bytes @ 0x13
   938  0033                     	ds	1
   939                           	global	??___awdiv
   940  0034                     ??___awdiv:	; 0 bytes @ 0x14
   941  0034                     	ds	1
   942                           	global	??_initSongs
   943  0035                     ??_initSongs:	; 0 bytes @ 0x15
   944                           	global	??_driveForDistance
   945  0035                     ??_driveForDistance:	; 0 bytes @ 0x15
   946                           	global	??_init
   947  0035                     ??_init:	; 0 bytes @ 0x15
   948                           	global	___awdiv@counter
   949  0035                     ___awdiv@counter:	; 1 bytes @ 0x15
   950  0035                     	ds	1
   951                           	global	___awdiv@sign
   952  0036                     ___awdiv@sign:	; 1 bytes @ 0x16
   953  0036                     	ds	1
   954                           	global	driveForDistance@deltaDistance
   955  0037                     driveForDistance@deltaDistance:	; 2 bytes @ 0x17
   956                           	global	___awdiv@quotient
   957  0037                     ___awdiv@quotient:	; 2 bytes @ 0x17
   958  0037                     	ds	2
   959                           	global	?_adc_read
   960  0039                     ?_adc_read:	; 2 bytes @ 0x19
   961                           	global	driveForDistance@distance
   962  0039                     driveForDistance@distance:	; 2 bytes @ 0x19
   963  0039                     	ds	2
   964                           	global	??_adc_read
   965  003B                     ??_adc_read:	; 0 bytes @ 0x1B
   966                           	global	driveForDistance@high
   967  003B                     driveForDistance@high:	; 1 bytes @ 0x1B
   968  003B                     	ds	1
   969                           	global	driveForDistance@low
   970  003C                     driveForDistance@low:	; 1 bytes @ 0x1C
   971  003C                     	ds	1
   972                           	global	??_goRight
   973  003D                     ??_goRight:	; 0 bytes @ 0x1D
   974                           	global	??_goBackward
   975  003D                     ??_goBackward:	; 0 bytes @ 0x1D
   976                           	global	??_goForward
   977  003D                     ??_goForward:	; 0 bytes @ 0x1D
   978                           	global	??_goLeft
   979  003D                     ??_goLeft:	; 0 bytes @ 0x1D
   980  003D                     	ds	1
   981                           	global	??_goToNextCell
   982  003E                     ??_goToNextCell:	; 0 bytes @ 0x1E
   983  003E                     	ds	1
   984                           	global	adc_read@adc_value
   985  003F                     adc_read@adc_value:	; 2 bytes @ 0x1F
   986  003F                     	ds	2
   987                           	global	?_convert
   988  0041                     ?_convert:	; 2 bytes @ 0x21
   989                           	global	convert@adc_value
   990  0041                     convert@adc_value:	; 2 bytes @ 0x21
   991  0041                     	ds	2
   992                           	global	??_convert
   993  0043                     ??_convert:	; 0 bytes @ 0x23
   994  0043                     	ds	2
   995                           	global	?_adc_read_channel
   996  0045                     ?_adc_read_channel:	; 2 bytes @ 0x25
   997  0045                     	ds	2
   998                           	global	??_adc_read_channel
   999  0047                     ??_adc_read_channel:	; 0 bytes @ 0x27
  1000  0047                     	ds	1
  1001                           	global	adc_read_channel@channel
  1002  0048                     adc_read_channel@channel:	; 1 bytes @ 0x28
  1003  0048                     	ds	1
  1004                           	global	??_readIR
  1005  0049                     ??_readIR:	; 0 bytes @ 0x29
  1006                           	global	??_findWall
  1007  0049                     ??_findWall:	; 0 bytes @ 0x29
  1008                           	global	??_main
  1009  0049                     ??_main:	; 0 bytes @ 0x29
  1010 ;;Data sizes: Strings 62, constant 0, data 108, bss 44, persistent 0 stack 0
  1011 ;;Auto spaces:   Size  Autos    Used
  1012 ;; COMMON          14      6      12
  1013 ;; BANK0           80     41      70
  1014 ;; BANK1           80      7      69
  1015 ;; BANK3           96      0      56
  1016 ;; BANK2           96      0       0
  1017                           
  1018 ;;
  1019 ;; Pointer list with targets:
  1020                           
  1021 ;; ?_readIR	int  size(1) Largest target is 0
  1022 ;;
  1023 ;; ?_convert	int  size(1) Largest target is 2
  1024 ;;		 -> convert@adc_value(BANK0[2]), 
  1025 ;;
  1026 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1027 ;;
  1028 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1029 ;;
  1030 ;; ?_adc_read	int  size(1) Largest target is 0
  1031 ;;
  1032 ;; ?___awdiv	int  size(1) Largest target is 0
  1033 ;;
  1034 ;; ?_adc_read_channel	int  size(1) Largest target is 0
  1035 ;;
  1036 ;; ser_putArr@array	PTR unsigned char  size(2) Largest target is 29
  1037 ;;		 -> champions(BANK1[21]), lookingForU2(BANK3[29]), superMarioBros(BANK1[25]), finalCountdown(BANK3[27]), 
  1038 ;;
  1039 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 17
  1040 ;;		 -> STR_4(CODE[17]), STR_3(CODE[17]), 
  1041 ;;
  1042                           
  1043                           
  1044 ;;
  1045 ;; Critical Paths under _main in COMMON
  1046 ;;
  1047 ;;   None.
  1048 ;;
  1049 ;; Critical Paths under _isr1 in COMMON
  1050 ;;
  1051 ;;   _isr1->___lwmod
  1052 ;;
  1053 ;; Critical Paths under _main in BANK0
  1054 ;;
  1055 ;;   _goToNextCell->_goRight
  1056 ;;   _goToNextCell->_goBackward
  1057 ;;   _updateLocation->_lcd_set_cursor
  1058 ;;   _updateLocation->_lcd_write_1_digit_bcd
  1059 ;;   _goRight->_driveForDistance
  1060 ;;   _goLeft->_driveForDistance
  1061 ;;   _goForward->_driveForDistance
  1062 ;;   _goBackward->_driveForDistance
  1063 ;;   _readIR->_adc_read_channel
  1064 ;;   _initSongs->_ser_putArr
  1065 ;;   _lcd_init->_lcd_write_control
  1066 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
  1067 ;;   _lcd_write_string->_lcd_write_data
  1068 ;;   _lcd_set_cursor->_lcd_write_control
  1069 ;;   _turnRight90->_drive
  1070 ;;   _turnLeft90->_drive
  1071 ;;   _turnAround->_drive
  1072 ;;   _driveForDistance->_drive
  1073 ;;   _adc_read_channel->_convert
  1074 ;;   _convert->_adc_read
  1075 ;;   _ser_putArr->_ser_putch
  1076 ;;   _play_iCreate_song->_ser_putch
  1077 ;;   _initIRobot->_ser_putch
  1078 ;;   _waitFor->_ser_putch
  1079 ;;   _drive->_ser_putch
  1080 ;;   _adc_read->___awdiv
  1081 ;;   ___awdiv->___wmul
  1082 ;;
  1083 ;; Critical Paths under _isr1 in BANK0
  1084 ;;
  1085 ;;   None.
  1086 ;;
  1087 ;; Critical Paths under _main in BANK1
  1088 ;;
  1089 ;;   _main->_findWalls
  1090 ;;   _findWall->_readIR
  1091 ;;
  1092 ;; Critical Paths under _isr1 in BANK1
  1093 ;;
  1094 ;;   None.
  1095 ;;
  1096 ;; Critical Paths under _main in BANK3
  1097 ;;
  1098 ;;   None.
  1099 ;;
  1100 ;; Critical Paths under _isr1 in BANK3
  1101 ;;
  1102 ;;   None.
  1103 ;;
  1104 ;; Critical Paths under _main in BANK2
  1105 ;;
  1106 ;;   None.
  1107 ;;
  1108 ;; Critical Paths under _isr1 in BANK2
  1109 ;;
  1110 ;;   None.
  1111                           
  1112 ;;
  1113 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1114 ;;
  1115                           
  1116 ;;
  1117 ;;Call Graph Tables:
  1118 ;;
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (0) _main                                                 0     0      0    5414
  1123 ;;                               _init
  1124 ;;                              _drive
  1125 ;;                     _lcd_set_cursor
  1126 ;;                   _lcd_write_string
  1127 ;;                  _play_iCreate_song
  1128 ;;                          _findWalls
  1129 ;;                       _goToNextCell
  1130 ;;                     _updateLocation
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (1) _findWalls                                            3     3      0    1862
  1133 ;;                                              4 BANK1      3     3      0
  1134 ;;                           _rotateIR
  1135 ;;                           _findWall
  1136 ;;                     _lcd_set_cursor
  1137 ;;                     _lcd_write_data
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (1) _goToNextCell                                         0     0      0    2793
  1140 ;;                            _goRight
  1141 ;;                          _goForward
  1142 ;;                             _goLeft
  1143 ;;                         _goBackward
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; (2) _findWall                                             0     0      0    1528
  1146 ;;                             _readIR
  1147 ;; ---------------------------------------------------------------------------------
  1148 ;; (1) _updateLocation                                       1     1      0     158
  1149 ;;                                             14 BANK0      1     1      0
  1150 ;;                     _lcd_set_cursor
  1151 ;;                     _lcd_write_data
  1152 ;;              _lcd_write_1_digit_bcd
  1153 ;; ---------------------------------------------------------------------------------
  1154 ;; (2) _goRight                                              1     1      0     768
  1155 ;;                                             29 BANK0      1     1      0
  1156 ;;                        _turnRight90
  1157 ;;                   _driveForDistance
  1158 ;;                     _lcd_set_cursor
  1159 ;;                     _lcd_write_data
  1160 ;; ---------------------------------------------------------------------------------
  1161 ;; (2) _goLeft                                               0     0      0     768
  1162 ;;                         _turnLeft90
  1163 ;;                   _driveForDistance
  1164 ;;                     _lcd_set_cursor
  1165 ;;                     _lcd_write_data
  1166 ;; ---------------------------------------------------------------------------------
  1167 ;; (2) _goForward                                            0     0      0     489
  1168 ;;                   _driveForDistance
  1169 ;;                     _lcd_set_cursor
  1170 ;;                     _lcd_write_data
  1171 ;; ---------------------------------------------------------------------------------
  1172 ;; (2) _goBackward                                           1     1      0     768
  1173 ;;                                             29 BANK0      1     1      0
  1174 ;;                         _turnAround
  1175 ;;                   _driveForDistance
  1176 ;;                     _lcd_set_cursor
  1177 ;;                     _lcd_write_data
  1178 ;; ---------------------------------------------------------------------------------
  1179 ;; (3) _readIR                                               4     2      2    1528
  1180 ;;                                              0 BANK1      4     2      2
  1181 ;;                   _adc_read_channel
  1182 ;;                            _convert
  1183 ;; ---------------------------------------------------------------------------------
  1184 ;; (1) _init                                                 0     0      0     223
  1185 ;;                           _init_adc
  1186 ;;                           _lcd_init
  1187 ;;                           _ser_init
  1188 ;;                         _initIRobot
  1189 ;;                          _initSongs
  1190 ;; ---------------------------------------------------------------------------------
  1191 ;; (2) _initSongs                                            0     0      0     161
  1192 ;;                         _ser_putArr
  1193 ;; ---------------------------------------------------------------------------------
  1194 ;; (2) _lcd_init                                             0     0      0      31
  1195 ;;                  _lcd_write_control
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (2) _lcd_write_1_digit_bcd                                1     1      0      62
  1198 ;;                                             13 BANK0      1     1      0
  1199 ;;                     _lcd_write_data
  1200 ;; ---------------------------------------------------------------------------------
  1201 ;; (1) _lcd_write_string                                     2     2      0      96
  1202 ;;                                             13 BANK0      2     2      0
  1203 ;;                     _lcd_write_data
  1204 ;; ---------------------------------------------------------------------------------
  1205 ;; (2) _lcd_set_cursor                                       1     1      0      65
  1206 ;;                                             13 BANK0      1     1      0
  1207 ;;                  _lcd_write_control
  1208 ;; ---------------------------------------------------------------------------------
  1209 ;; (3) _turnRight90                                          3     3      0     279
  1210 ;;                                             19 BANK0      3     3      0
  1211 ;;                              _drive
  1212 ;;                            _waitFor
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (3) _turnLeft90                                           3     3      0     279
  1215 ;;                                             19 BANK0      3     3      0
  1216 ;;                              _drive
  1217 ;;                            _waitFor
  1218 ;; ---------------------------------------------------------------------------------
  1219 ;; (3) _turnAround                                           3     3      0     279
  1220 ;;                                             19 BANK0      3     3      0
  1221 ;;                              _drive
  1222 ;;                            _waitFor
  1223 ;; ---------------------------------------------------------------------------------
  1224 ;; (3) _driveForDistance                                    10     8      2     393
  1225 ;;                                             19 BANK0     10     8      2
  1226 ;;                              _drive
  1227 ;;                          _ser_putch
  1228 ;;                          _ser_getch
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (4) _adc_read_channel                                     4     2      2     510
  1231 ;;                                             37 BANK0      4     2      2
  1232 ;;                           _adc_read
  1233 ;;                            _convert (ARG)
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (4) _convert                                              4     2      2     984
  1236 ;;                                             33 BANK0      4     2      2
  1237 ;;                             ___wmul
  1238 ;;                            ___awdiv
  1239 ;;                           _adc_read (ARG)
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (3) _ser_putArr                                           9     5      4     161
  1242 ;;                                             12 BANK0      9     5      4
  1243 ;;                          _ser_putch
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (1) _play_iCreate_song                                    1     1      0      62
  1246 ;;                                             12 BANK0      1     1      0
  1247 ;;                          _ser_putch
  1248 ;; ---------------------------------------------------------------------------------
  1249 ;; (2) _rotateIR                                             6     5      1      99
  1250 ;;                                             10 BANK0      6     5      1
  1251 ;; ---------------------------------------------------------------------------------
  1252 ;; (2) _initIRobot                                           3     3      0      31
  1253 ;;                                             12 BANK0      3     3      0
  1254 ;;                          _ser_putch
  1255 ;; ---------------------------------------------------------------------------------
  1256 ;; (3) _lcd_write_control                                    3     3      0      31
  1257 ;;                                             10 BANK0      3     3      0
  1258 ;; ---------------------------------------------------------------------------------
  1259 ;; (3) _lcd_write_data                                       3     3      0      31
  1260 ;;                                             10 BANK0      3     3      0
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (4) _waitFor                                              6     4      2     124
  1263 ;;                                             12 BANK0      6     4      2
  1264 ;;                          _ser_putch
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (4) _ser_getch                                            2     2      0      34
  1267 ;;                                             10 BANK0      2     2      0
  1268 ;;                           _ser_isrx
  1269 ;; ---------------------------------------------------------------------------------
  1270 ;; (4) _drive                                                7     4      3     155
  1271 ;;                                             12 BANK0      7     4      3
  1272 ;;                          _ser_putch
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (2) _init_adc                                             1     1      0       0
  1275 ;;                                             10 BANK0      1     1      0
  1276 ;; ---------------------------------------------------------------------------------
  1277 ;; (5) _adc_read                                             8     6      2     479
  1278 ;;                                             25 BANK0      8     6      2
  1279 ;;                            ___awdiv
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; (5) ___awdiv                                              9     5      4     445
  1282 ;;                                             16 BANK0      9     5      4
  1283 ;;                             ___wmul (ARG)
  1284 ;; ---------------------------------------------------------------------------------
  1285 ;; (5) ___wmul                                               6     2      4     136
  1286 ;;                                             10 BANK0      6     2      4
  1287 ;; ---------------------------------------------------------------------------------
  1288 ;; (5) _ser_isrx                                             0     0      0       0
  1289 ;; ---------------------------------------------------------------------------------
  1290 ;; (2) _ser_init                                             1     1      0       0
  1291 ;;                                             10 BANK0      1     1      0
  1292 ;; ---------------------------------------------------------------------------------
  1293 ;; (4) _ser_putch                                            2     2      0      31
  1294 ;;                                             10 BANK0      2     2      0
  1295 ;; ---------------------------------------------------------------------------------
  1296 ;; Estimated maximum stack depth 5
  1297 ;; ---------------------------------------------------------------------------------
  1298 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1299 ;; ---------------------------------------------------------------------------------
  1300 ;; (7) _isr1                                                10    10      0     159
  1301 ;;                                              0 BANK0     10    10      0
  1302 ;;                            ___lwmod
  1303 ;; ---------------------------------------------------------------------------------
  1304 ;; (8) ___lwmod                                              6     2      4     159
  1305 ;;                                              0 COMMON     6     2      4
  1306 ;; ---------------------------------------------------------------------------------
  1307 ;; Estimated maximum stack depth 8
  1308 ;; ---------------------------------------------------------------------------------
  1309                           
  1310 ;; Call Graph Graphs:
  1311                           
  1312 ;; _main (ROOT)
  1313 ;;   _init
  1314 ;;     _init_adc
  1315 ;;     _lcd_init
  1316 ;;       _lcd_write_control
  1317 ;;     _ser_init
  1318 ;;     _initIRobot
  1319 ;;       _ser_putch
  1320 ;;     _initSongs
  1321 ;;       _ser_putArr
  1322 ;;         _ser_putch
  1323 ;;   _drive
  1324 ;;     _ser_putch
  1325 ;;   _lcd_set_cursor
  1326 ;;     _lcd_write_control
  1327 ;;   _lcd_write_string
  1328 ;;     _lcd_write_data
  1329 ;;   _play_iCreate_song
  1330 ;;     _ser_putch
  1331 ;;   _findWalls
  1332 ;;     _rotateIR
  1333 ;;     _findWall
  1334 ;;       _readIR
  1335 ;;         _adc_read_channel
  1336 ;;           _adc_read
  1337 ;;             ___awdiv
  1338 ;;               ___wmul (ARG)
  1339 ;;           _convert (ARG)
  1340 ;;             ___wmul
  1341 ;;             ___awdiv
  1342 ;;               ___wmul (ARG)
  1343 ;;             _adc_read (ARG)
  1344 ;;               ___awdiv
  1345 ;;                 ___wmul (ARG)
  1346 ;;         _convert
  1347 ;;           ___wmul
  1348 ;;           ___awdiv
  1349 ;;             ___wmul (ARG)
  1350 ;;           _adc_read (ARG)
  1351 ;;             ___awdiv
  1352 ;;               ___wmul (ARG)
  1353 ;;     _lcd_set_cursor
  1354 ;;       _lcd_write_control
  1355 ;;     _lcd_write_data
  1356 ;;   _goToNextCell
  1357 ;;     _goRight
  1358 ;;       _turnRight90
  1359 ;;         _drive
  1360 ;;           _ser_putch
  1361 ;;         _waitFor
  1362 ;;           _ser_putch
  1363 ;;       _driveForDistance
  1364 ;;         _drive
  1365 ;;           _ser_putch
  1366 ;;         _ser_putch
  1367 ;;         _ser_getch
  1368 ;;           _ser_isrx
  1369 ;;       _lcd_set_cursor
  1370 ;;         _lcd_write_control
  1371 ;;       _lcd_write_data
  1372 ;;     _goForward
  1373 ;;       _driveForDistance
  1374 ;;         _drive
  1375 ;;           _ser_putch
  1376 ;;         _ser_putch
  1377 ;;         _ser_getch
  1378 ;;           _ser_isrx
  1379 ;;       _lcd_set_cursor
  1380 ;;         _lcd_write_control
  1381 ;;       _lcd_write_data
  1382 ;;     _goLeft
  1383 ;;       _turnLeft90
  1384 ;;         _drive
  1385 ;;           _ser_putch
  1386 ;;         _waitFor
  1387 ;;           _ser_putch
  1388 ;;       _driveForDistance
  1389 ;;         _drive
  1390 ;;           _ser_putch
  1391 ;;         _ser_putch
  1392 ;;         _ser_getch
  1393 ;;           _ser_isrx
  1394 ;;       _lcd_set_cursor
  1395 ;;         _lcd_write_control
  1396 ;;       _lcd_write_data
  1397 ;;     _goBackward
  1398 ;;       _turnAround
  1399 ;;         _drive
  1400 ;;           _ser_putch
  1401 ;;         _waitFor
  1402 ;;           _ser_putch
  1403 ;;       _driveForDistance
  1404 ;;         _drive
  1405 ;;           _ser_putch
  1406 ;;         _ser_putch
  1407 ;;         _ser_getch
  1408 ;;           _ser_isrx
  1409 ;;       _lcd_set_cursor
  1410 ;;         _lcd_write_control
  1411 ;;       _lcd_write_data
  1412 ;;   _updateLocation
  1413 ;;     _lcd_set_cursor
  1414 ;;       _lcd_write_control
  1415 ;;     _lcd_write_data
  1416 ;;     _lcd_write_1_digit_bcd
  1417 ;;       _lcd_write_data
  1418 ;;
  1419 ;; _isr1 (ROOT)
  1420 ;;   ___lwmod
  1421 ;;
  1422                           
  1423 ;; Address spaces:
  1424                           
  1425 ;;Name               Size   Autos  Total    Cost      Usage
  1426 ;;BANK3               60      0      38       9       58.3%
  1427 ;;BITBANK3            60      0       0       8        0.0%
  1428 ;;SFR3                 0      0       0       4        0.0%
  1429 ;;BITSFR3              0      0       0       4        0.0%
  1430 ;;BANK2               60      0       0      11        0.0%
  1431 ;;BITBANK2            60      0       0      10        0.0%
  1432 ;;SFR2                 0      0       0       5        0.0%
  1433 ;;BITSFR2              0      0       0       5        0.0%
  1434 ;;SFR1                 0      0       0       2        0.0%
  1435 ;;BITSFR1              0      0       0       2        0.0%
  1436 ;;BANK1               50      7      45       7       86.3%
  1437 ;;BITBANK1            50      0       0       6        0.0%
  1438 ;;CODE                 0      0       0       0        0.0%
  1439 ;;DATA                 0      0      D9      12        0.0%
  1440 ;;ABS                  0      0      CF       3        0.0%
  1441 ;;NULL                 0      0       0       0        0.0%
  1442 ;;STACK                0      0       A       2        0.0%
  1443 ;;BANK0               50     29      46       5       87.5%
  1444 ;;BITBANK0            50      0       0       4        0.0%
  1445 ;;SFR0                 0      0       0       1        0.0%
  1446 ;;BITSFR0              0      0       0       1        0.0%
  1447 ;;COMMON               E      6       C       1       85.7%
  1448 ;;BITCOMMON            E      0       1       0        7.1%
  1449 ;;EEDATA             100      0       0       0        0.0%
  1450                           
  1451                           	global	_main
  1452                           psect	maintext,global,class=CODE,delta=2
  1453                           global __pmaintext
  1454  050C                     __pmaintext:
  1455                           
  1456 ;; *************** function _main *****************
  1457 ;; Defined at:
  1458 ;;		line 277 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 17F/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels required when called:    8
  1478 ;; This function calls:
  1479 ;;		_init
  1480 ;;		_drive
  1481 ;;		_lcd_set_cursor
  1482 ;;		_lcd_write_string
  1483 ;;		_play_iCreate_song
  1484 ;;		_findWalls
  1485 ;;		_goToNextCell
  1486 ;;		_updateLocation
  1487 ;; This function is called by:
  1488 ;;		Startup code after reset
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           psect	maintext
  1492                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  1493                           	line	277
  1494                           	global	__size_of_main
  1495  004A                     	__size_of_main	equ	__end_of_main-_main
  1496                           	
  1497  050C                     _main:	
  1498                           	opt	stack 0
  1499                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1500                           	line	278
  1501                           	
  1502  050C                     l10045:	
  1503                           ;main.c: 278: init();
  1504  050C  120A  158A  2724   	fcall	_init
              120A  118A         
  1505                           	line	279
  1506                           ;main.c: 279: drive(0, 0, 0, 0);
  1507  0511  1283               	bcf	status, 5	;RP0=0, select bank0
  1508  0512  1303               	bcf	status, 6	;RP1=0, select bank0
  1509  0513  01AC               	clrf	(?_drive)
  1510  0514  01AD               	clrf	0+(?_drive)+01h
  1511  0515  01AE               	clrf	0+(?_drive)+02h
  1512  0516  3000               	movlw	(0)
  1513  0517  120A  158A  275A   	fcall	_drive
              120A  118A         
  1514                           	line	283
  1515                           	
  1516  051C                     l10047:	
  1517                           ;main.c: 283: lcd_set_cursor(0x00);
  1518  051C  3000               	movlw	(0)
  1519  051D  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  118A         
  1520                           	line	284
  1521                           	
  1522  0522                     l10049:	
  1523                           ;main.c: 284: lcd_write_string("Walls@ --- (1,0)");
  1524  0522  3001               	movlw	((STR_3-__stringbase))&0ffh
  1525  0523  120A  158A  25D9   	fcall	_lcd_write_string
              120A  118A         
  1526                           	line	285
  1527                           ;main.c: 285: lcd_set_cursor(0x40);
  1528  0528  3040               	movlw	(040h)
  1529  0529  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  118A         
  1530                           	line	286
  1531                           	
  1532  052E                     l10051:	
  1533                           ;main.c: 286: lcd_write_string("cuOr: - dirMo: -");
  1534  052E  3012               	movlw	((STR_4-__stringbase))&0ffh
  1535  052F  120A  158A  25D9   	fcall	_lcd_write_string
              120A  118A         
  1536                           	line	287
  1537                           	
  1538  0534                     l10053:	
  1539                           ;main.c: 287: play_iCreate_song(4);
  1540  0534  3004               	movlw	(04h)
  1541  0535  120A  158A  2479   	fcall	_play_iCreate_song
              120A  118A         
  1542  053A  2D3B               	goto	l10055
  1543                           	line	288
  1544                           ;main.c: 288: while(1)
  1545                           	
  1546  053B                     l3676:	
  1547                           	line	290
  1548                           	
  1549  053B                     l10055:	
  1550                           ;main.c: 289: {
  1551                           ;main.c: 290: if(start.pressed)
  1552  053B  1283               	bcf	status, 5	;RP0=0, select bank0
  1553  053C  1303               	bcf	status, 6	;RP1=0, select bank0
  1554  053D  0859               	movf	(_start),w
  1555  053E  1D03               	skipz
  1556  053F  2D41               	goto	u4070
  1557  0540  2D3B               	goto	l10055
  1558  0541                     u4070:
  1559                           	line	294
  1560                           	
  1561  0541                     l10057:	
  1562                           ;main.c: 291: {
  1563                           ;main.c: 294: findWalls();
  1564  0541  120A  118A  21E4   	fcall	_findWalls
              120A  118A         
  1565                           	line	296
  1566                           ;main.c: 296: goToNextCell();
  1567  0546  120A  158A  25FE   	fcall	_goToNextCell
              120A  118A         
  1568                           	line	297
  1569                           	
  1570  054B                     l10059:	
  1571                           ;main.c: 297: updateLocation();
  1572  054B  120A  118A  242E   	fcall	_updateLocation
              120A  118A         
  1573  0550  2D3B               	goto	l10055
  1574                           	line	300
  1575                           	
  1576  0551                     l3677:	
  1577  0551  2D3B               	goto	l10055
  1578                           	line	301
  1579                           	
  1580  0552                     l3678:	
  1581                           	line	288
  1582  0552  2D3B               	goto	l10055
  1583                           	
  1584  0553                     l3679:	
  1585                           	line	302
  1586                           	
  1587  0553                     l3680:	
  1588                           	global	start
  1589  0553  120A  118A  2812   	ljmp	start
  1590                           	opt stack 0
  1591                           GLOBAL	__end_of_main
  1592  0556                     	__end_of_main:
  1593 ;; =============== function _main ends ============
  1594                           
  1595                           	signat	_main,88
  1596                           	global	_findWalls
  1597                           psect	text1302,local,class=CODE,delta=2
  1598                           global __ptext1302
  1599  01E4                     __ptext1302:
  1600                           
  1601 ;; *************** function _findWalls *****************
  1602 ;; Defined at:
  1603 ;;		line 142 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  wallAtOrient    2    5[BANK1 ] int 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;		None               void
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         0       0       2       0       0
  1619 ;;      Temps:          0       0       1       0       0
  1620 ;;      Totals:         0       0       3       0       0
  1621 ;;Total ram usage:        3 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    7
  1624 ;; This function calls:
  1625 ;;		_rotateIR
  1626 ;;		_findWall
  1627 ;;		_lcd_set_cursor
  1628 ;;		_lcd_write_data
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           psect	text1302
  1634                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  1635                           	line	142
  1636                           	global	__size_of_findWalls
  1637  00FE                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  1638                           	
  1639  01E4                     _findWalls:	
  1640                           	opt	stack 0
  1641                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1642                           	line	145
  1643                           	
  1644  01E4                     l9995:	
  1645                           ;main.c: 145: rotateIR(24, 0b00001111);
  1646  01E4  300F               	movlw	(0Fh)
  1647  01E5  1683               	bsf	status, 5	;RP0=1, select bank1
  1648  01E6  1303               	bcf	status, 6	;RP1=0, select bank1
  1649  01E7  00E2               	movwf	(??_findWalls+0)^080h+0
  1650  01E8  0862               	movf	(??_findWalls+0)^080h+0,w
  1651  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  1652  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  1653  01EB  00AA               	movwf	(?_rotateIR)
  1654  01EC  3018               	movlw	(018h)
  1655  01ED  120A  118A  259F   	fcall	_rotateIR
              120A  118A         
  1656                           	line	146
  1657                           	
  1658  01F2                     l9997:	
  1659                           ;main.c: 146: rightWall = findWall();
  1660  01F2  120A  158A  2512   	fcall	_findWall
              120A  118A         
  1661  01F7  1803               	btfsc	status,0
  1662  01F8  29FA               	goto	u3961
  1663  01F9  29FC               	goto	u3960
  1664                           	
  1665  01FA                     u3961:
  1666  01FA  17F0               	bsf	(_rightWall/8),(_rightWall)&7
  1667  01FB  29FD               	goto	u3974
  1668  01FC                     u3960:
  1669  01FC  13F0               	bcf	(_rightWall/8),(_rightWall)&7
  1670  01FD                     u3974:
  1671                           	line	147
  1672                           	
  1673  01FD                     l9999:	
  1674                           ;main.c: 147: rotateIR(24, 0b00001101);
  1675  01FD  300D               	movlw	(0Dh)
  1676  01FE  1683               	bsf	status, 5	;RP0=1, select bank1
  1677  01FF  1303               	bcf	status, 6	;RP1=0, select bank1
  1678  0200  00E2               	movwf	(??_findWalls+0)^080h+0
  1679  0201  0862               	movf	(??_findWalls+0)^080h+0,w
  1680  0202  1283               	bcf	status, 5	;RP0=0, select bank0
  1681  0203  1303               	bcf	status, 6	;RP1=0, select bank0
  1682  0204  00AA               	movwf	(?_rotateIR)
  1683  0205  3018               	movlw	(018h)
  1684  0206  120A  118A  259F   	fcall	_rotateIR
              120A  118A         
  1685                           	line	148
  1686                           ;main.c: 148: frontWall = findWall();
  1687  020B  120A  158A  2512   	fcall	_findWall
              120A  118A         
  1688  0210  1803               	btfsc	status,0
  1689  0211  2A13               	goto	u3981
  1690  0212  2A15               	goto	u3980
  1691                           	
  1692  0213                     u3981:
  1693  0213  1670               	bsf	(_frontWall/8),(_frontWall)&7
  1694  0214  2A16               	goto	u3994
  1695  0215                     u3980:
  1696  0215  1270               	bcf	(_frontWall/8),(_frontWall)&7
  1697  0216                     u3994:
  1698                           	line	149
  1699                           	
  1700  0216                     l10001:	
  1701                           ;main.c: 149: rotateIR(24, 0b00001101);
  1702  0216  300D               	movlw	(0Dh)
  1703  0217  1683               	bsf	status, 5	;RP0=1, select bank1
  1704  0218  1303               	bcf	status, 6	;RP1=0, select bank1
  1705  0219  00E2               	movwf	(??_findWalls+0)^080h+0
  1706  021A  0862               	movf	(??_findWalls+0)^080h+0,w
  1707  021B  1283               	bcf	status, 5	;RP0=0, select bank0
  1708  021C  1303               	bcf	status, 6	;RP1=0, select bank0
  1709  021D  00AA               	movwf	(?_rotateIR)
  1710  021E  3018               	movlw	(018h)
  1711  021F  120A  118A  259F   	fcall	_rotateIR
              120A  118A         
  1712                           	line	150
  1713                           	
  1714  0224                     l10003:	
  1715                           ;main.c: 150: leftWall = findWall();
  1716  0224  120A  158A  2512   	fcall	_findWall
              120A  118A         
  1717  0229  1803               	btfsc	status,0
  1718  022A  2A2C               	goto	u4001
  1719  022B  2A2E               	goto	u4000
  1720                           	
  1721  022C                     u4001:
  1722  022C  16F0               	bsf	(_leftWall/8),(_leftWall)&7
  1723  022D  2A2F               	goto	u4014
  1724  022E                     u4000:
  1725  022E  12F0               	bcf	(_leftWall/8),(_leftWall)&7
  1726  022F                     u4014:
  1727                           	line	151
  1728                           ;main.c: 151: rotateIR(24, 0b00001111);
  1729  022F  300F               	movlw	(0Fh)
  1730  0230  1683               	bsf	status, 5	;RP0=1, select bank1
  1731  0231  1303               	bcf	status, 6	;RP1=0, select bank1
  1732  0232  00E2               	movwf	(??_findWalls+0)^080h+0
  1733  0233  0862               	movf	(??_findWalls+0)^080h+0,w
  1734  0234  1283               	bcf	status, 5	;RP0=0, select bank0
  1735  0235  1303               	bcf	status, 6	;RP1=0, select bank0
  1736  0236  00AA               	movwf	(?_rotateIR)
  1737  0237  3018               	movlw	(018h)
  1738  0238  120A  118A  259F   	fcall	_rotateIR
              120A  118A         
  1739                           	line	153
  1740                           	
  1741  023D                     l10005:	
  1742                           ;main.c: 153: int wallAtOrientation = 0;
  1743  023D  1683               	bsf	status, 5	;RP0=1, select bank1
  1744  023E  1303               	bcf	status, 6	;RP1=0, select bank1
  1745  023F  01E3               	clrf	(findWalls@wallAtOrientation)^080h
  1746  0240  01E4               	clrf	(findWalls@wallAtOrientation+1)^080h
  1747                           	line	154
  1748                           	
  1749  0241                     l10007:	
  1750                           ;main.c: 154: lcd_set_cursor(0x07);
  1751  0241  3007               	movlw	(07h)
  1752  0242  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  118A         
  1753                           	line	155
  1754                           	
  1755  0247                     l10009:	
  1756                           ;main.c: 155: if(rightWall)
  1757  0247  1FF0               	btfss	(_rightWall/8),(_rightWall)&7
  1758  0248  2A4A               	goto	u4021
  1759  0249  2A4B               	goto	u4020
  1760  024A                     u4021:
  1761  024A  2A7D               	goto	l10021
  1762  024B                     u4020:
  1763                           	line	157
  1764                           	
  1765  024B                     l10011:	
  1766                           ;main.c: 156: {
  1767                           ;main.c: 157: lcd_write_data('R');
  1768  024B  3052               	movlw	(052h)
  1769  024C  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  1770                           	line	158
  1771                           	
  1772  0251                     l10013:	
  1773                           ;main.c: 158: wallAtOrientation = RIGHT + currentOrientation;
  1774  0251  1283               	bcf	status, 5	;RP0=0, select bank0
  1775  0252  1303               	bcf	status, 6	;RP1=0, select bank0
  1776  0253  085E               	movf	(_currentOrientation),w	;volatile
  1777  0254  3E03               	addlw	low(03h)
  1778  0255  1683               	bsf	status, 5	;RP0=1, select bank1
  1779  0256  1303               	bcf	status, 6	;RP1=0, select bank1
  1780  0257  00E3               	movwf	(findWalls@wallAtOrientation)^080h
  1781  0258  3000               	movlw	high(03h)
  1782  0259  1803               	skipnc
  1783  025A  3001               	movlw	(high(03h)+1)&0ffh
  1784  025B  00E4               	movwf	((findWalls@wallAtOrientation)^080h)+1
  1785                           	line	159
  1786                           	
  1787  025C                     l10015:	
  1788                           ;main.c: 159: if(wallAtOrientation >= 4)
  1789  025C  0864               	movf	(findWalls@wallAtOrientation+1)^080h,w
  1790  025D  3A80               	xorlw	80h
  1791  025E  00FF               	movwf	btemp+1
  1792  025F  3080               	movlw	(high(04h))^80h
  1793  0260  027F               	subwf	btemp+1,w
  1794  0261  1D03               	skipz
  1795  0262  2A65               	goto	u4035
  1796  0263  3004               	movlw	low(04h)
  1797  0264  0263               	subwf	(findWalls@wallAtOrientation)^080h,w
  1798  0265                     u4035:
  1799                           
  1800  0265  1C03               	skipc
  1801  0266  2A68               	goto	u4031
  1802  0267  2A69               	goto	u4030
  1803  0268                     u4031:
  1804  0268  2A72               	goto	l10019
  1805  0269                     u4030:
  1806                           	line	160
  1807                           	
  1808  0269                     l10017:	
  1809                           ;main.c: 160: wallAtOrientation -= 4;
  1810  0269  30FC               	movlw	low(-4)
  1811  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  1812  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  1813  026C  07E3               	addwf	(findWalls@wallAtOrientation)^080h,f
  1814  026D  1803               	skipnc
  1815  026E  0AE4               	incf	(findWalls@wallAtOrientation+1)^080h,f
  1816  026F  30FF               	movlw	high(-4)
  1817  0270  07E4               	addwf	(findWalls@wallAtOrientation+1)^080h,f
  1818  0271  2A72               	goto	l10019
  1819                           	
  1820  0272                     l3634:	
  1821                           	line	161
  1822                           	
  1823  0272                     l10019:	
  1824                           ;main.c: 161: walls[wallAtOrientation] = 1;
  1825  0272  3001               	movlw	(01h)
  1826  0273  1683               	bsf	status, 5	;RP0=1, select bank1
  1827  0274  1303               	bcf	status, 6	;RP1=0, select bank1
  1828  0275  00E2               	movwf	(??_findWalls+0)^080h+0
  1829  0276  0863               	movf	(findWalls@wallAtOrientation)^080h,w
  1830  0277  3E61               	addlw	_walls&0ffh
  1831  0278  0084               	movwf	fsr0
  1832  0279  0862               	movf	(??_findWalls+0)^080h+0,w
  1833  027A  1383               	bcf	status, 7	;select IRP bank0
  1834  027B  0080               	movwf	indf
  1835                           	line	162
  1836                           ;main.c: 162: }
  1837  027C  2A84               	goto	l10023
  1838                           	line	163
  1839                           	
  1840  027D                     l3633:	
  1841                           	line	165
  1842                           	
  1843  027D                     l10021:	
  1844                           ;main.c: 163: else
  1845                           ;main.c: 164: {
  1846                           ;main.c: 165: lcd_write_data(' ');
  1847  027D  3020               	movlw	(020h)
  1848  027E  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  1849  0283  2A84               	goto	l10023
  1850                           	line	166
  1851                           	
  1852  0284                     l3635:	
  1853                           	line	167
  1854                           	
  1855  0284                     l10023:	
  1856                           ;main.c: 166: }
  1857                           ;main.c: 167: if(frontWall)
  1858  0284  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  1859  0285  2A87               	goto	u4041
  1860  0286  2A88               	goto	u4040
  1861  0287                     u4041:
  1862  0287  2A9D               	goto	l10029
  1863  0288                     u4040:
  1864                           	line	169
  1865                           	
  1866  0288                     l10025:	
  1867                           ;main.c: 168: {
  1868                           ;main.c: 169: lcd_write_data('F');
  1869  0288  3046               	movlw	(046h)
  1870  0289  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  1871                           	line	170
  1872                           	
  1873  028E                     l10027:	
  1874                           ;main.c: 170: walls[FORWARD+currentOrientation] = 1;
  1875  028E  3001               	movlw	(01h)
  1876  028F  1683               	bsf	status, 5	;RP0=1, select bank1
  1877  0290  1303               	bcf	status, 6	;RP1=0, select bank1
  1878  0291  00E2               	movwf	(??_findWalls+0)^080h+0
  1879  0292  1283               	bcf	status, 5	;RP0=0, select bank0
  1880  0293  1303               	bcf	status, 6	;RP1=0, select bank0
  1881  0294  085E               	movf	(_currentOrientation),w
  1882  0295  3E61               	addlw	_walls&0ffh
  1883  0296  0084               	movwf	fsr0
  1884  0297  1683               	bsf	status, 5	;RP0=1, select bank1
  1885  0298  1303               	bcf	status, 6	;RP1=0, select bank1
  1886  0299  0862               	movf	(??_findWalls+0)^080h+0,w
  1887  029A  1383               	bcf	status, 7	;select IRP bank0
  1888  029B  0080               	movwf	indf
  1889                           	line	171
  1890                           ;main.c: 171: }
  1891  029C  2AA4               	goto	l10031
  1892                           	line	172
  1893                           	
  1894  029D                     l3636:	
  1895                           	line	173
  1896                           	
  1897  029D                     l10029:	
  1898                           ;main.c: 172: else
  1899                           ;main.c: 173: lcd_write_data(' ');
  1900  029D  3020               	movlw	(020h)
  1901  029E  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  1902  02A3  2AA4               	goto	l10031
  1903                           	
  1904  02A4                     l3637:	
  1905                           	line	174
  1906                           	
  1907  02A4                     l10031:	
  1908                           ;main.c: 174: if(leftWall)
  1909  02A4  1EF0               	btfss	(_leftWall/8),(_leftWall)&7
  1910  02A5  2AA7               	goto	u4051
  1911  02A6  2AA8               	goto	u4050
  1912  02A7                     u4051:
  1913  02A7  2ADA               	goto	l10043
  1914  02A8                     u4050:
  1915                           	line	176
  1916                           	
  1917  02A8                     l10033:	
  1918                           ;main.c: 175: {
  1919                           ;main.c: 176: lcd_write_data('L');
  1920  02A8  304C               	movlw	(04Ch)
  1921  02A9  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  1922                           	line	177
  1923                           	
  1924  02AE                     l10035:	
  1925                           ;main.c: 177: wallAtOrientation = LEFT + currentOrientation;
  1926  02AE  1283               	bcf	status, 5	;RP0=0, select bank0
  1927  02AF  1303               	bcf	status, 6	;RP1=0, select bank0
  1928  02B0  085E               	movf	(_currentOrientation),w	;volatile
  1929  02B1  3E01               	addlw	low(01h)
  1930  02B2  1683               	bsf	status, 5	;RP0=1, select bank1
  1931  02B3  1303               	bcf	status, 6	;RP1=0, select bank1
  1932  02B4  00E3               	movwf	(findWalls@wallAtOrientation)^080h
  1933  02B5  3000               	movlw	high(01h)
  1934  02B6  1803               	skipnc
  1935  02B7  3001               	movlw	(high(01h)+1)&0ffh
  1936  02B8  00E4               	movwf	((findWalls@wallAtOrientation)^080h)+1
  1937                           	line	178
  1938                           	
  1939  02B9                     l10037:	
  1940                           ;main.c: 178: if(wallAtOrientation >= 4)
  1941  02B9  0864               	movf	(findWalls@wallAtOrientation+1)^080h,w
  1942  02BA  3A80               	xorlw	80h
  1943  02BB  00FF               	movwf	btemp+1
  1944  02BC  3080               	movlw	(high(04h))^80h
  1945  02BD  027F               	subwf	btemp+1,w
  1946  02BE  1D03               	skipz
  1947  02BF  2AC2               	goto	u4065
  1948  02C0  3004               	movlw	low(04h)
  1949  02C1  0263               	subwf	(findWalls@wallAtOrientation)^080h,w
  1950  02C2                     u4065:
  1951                           
  1952  02C2  1C03               	skipc
  1953  02C3  2AC5               	goto	u4061
  1954  02C4  2AC6               	goto	u4060
  1955  02C5                     u4061:
  1956  02C5  2ACF               	goto	l10041
  1957  02C6                     u4060:
  1958                           	line	179
  1959                           	
  1960  02C6                     l10039:	
  1961                           ;main.c: 179: wallAtOrientation -= 4;
  1962  02C6  30FC               	movlw	low(-4)
  1963  02C7  1683               	bsf	status, 5	;RP0=1, select bank1
  1964  02C8  1303               	bcf	status, 6	;RP1=0, select bank1
  1965  02C9  07E3               	addwf	(findWalls@wallAtOrientation)^080h,f
  1966  02CA  1803               	skipnc
  1967  02CB  0AE4               	incf	(findWalls@wallAtOrientation+1)^080h,f
  1968  02CC  30FF               	movlw	high(-4)
  1969  02CD  07E4               	addwf	(findWalls@wallAtOrientation+1)^080h,f
  1970  02CE  2ACF               	goto	l10041
  1971                           	
  1972  02CF                     l3639:	
  1973                           	line	180
  1974                           	
  1975  02CF                     l10041:	
  1976                           ;main.c: 180: walls[wallAtOrientation] = 1;
  1977  02CF  3001               	movlw	(01h)
  1978  02D0  1683               	bsf	status, 5	;RP0=1, select bank1
  1979  02D1  1303               	bcf	status, 6	;RP1=0, select bank1
  1980  02D2  00E2               	movwf	(??_findWalls+0)^080h+0
  1981  02D3  0863               	movf	(findWalls@wallAtOrientation)^080h,w
  1982  02D4  3E61               	addlw	_walls&0ffh
  1983  02D5  0084               	movwf	fsr0
  1984  02D6  0862               	movf	(??_findWalls+0)^080h+0,w
  1985  02D7  1383               	bcf	status, 7	;select IRP bank0
  1986  02D8  0080               	movwf	indf
  1987                           	line	181
  1988                           ;main.c: 181: }
  1989  02D9  2AE1               	goto	l3641
  1990                           	line	182
  1991                           	
  1992  02DA                     l3638:	
  1993                           	line	183
  1994                           	
  1995  02DA                     l10043:	
  1996                           ;main.c: 182: else
  1997                           ;main.c: 183: lcd_write_data(' ');
  1998  02DA  3020               	movlw	(020h)
  1999  02DB  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  2000  02E0  2AE1               	goto	l3641
  2001                           	
  2002  02E1                     l3640:	
  2003                           	line	184
  2004                           	
  2005  02E1                     l3641:	
  2006  02E1  0008               	return
  2007                           	opt stack 0
  2008                           GLOBAL	__end_of_findWalls
  2009  02E2                     	__end_of_findWalls:
  2010 ;; =============== function _findWalls ends ============
  2011                           
  2012                           	signat	_findWalls,88
  2013                           	global	_goToNextCell
  2014                           psect	text1303,local,class=CODE,delta=2
  2015                           global __ptext1303
  2016  0DFE                     __ptext1303:
  2017                           
  2018 ;; *************** function _goToNextCell *****************
  2019 ;; Defined at:
  2020 ;;		line 218 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;		None               void
  2027 ;; Registers used:
  2028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    6
  2041 ;; This function calls:
  2042 ;;		_goRight
  2043 ;;		_goForward
  2044 ;;		_goLeft
  2045 ;;		_goBackward
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           psect	text1303
  2051                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2052                           	line	218
  2053                           	global	__size_of_goToNextCell
  2054  0027                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  2055                           	
  2056  0DFE                     _goToNextCell:	
  2057                           	opt	stack 1
  2058                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2059                           	line	219
  2060                           	
  2061  0DFE                     l9985:	
  2062                           ;main.c: 219: if(!rightWall)
  2063  0DFE  1BF0               	btfsc	(_rightWall/8),(_rightWall)&7
  2064  0DFF  2E01               	goto	u3931
  2065  0E00  2E02               	goto	u3930
  2066  0E01                     u3931:
  2067  0E01  2E08               	goto	l3653
  2068  0E02                     u3930:
  2069                           	line	220
  2070                           	
  2071  0E02                     l9987:	
  2072                           ;main.c: 220: goRight();
  2073  0E02  120A  158A  25B6   	fcall	_goRight
              120A  158A         
  2074  0E07  2E24               	goto	l3659
  2075                           	line	221
  2076                           	
  2077  0E08                     l3653:	
  2078                           ;main.c: 221: else if(!frontWall)
  2079  0E08  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  2080  0E09  2E0B               	goto	u3941
  2081  0E0A  2E0C               	goto	u3940
  2082  0E0B                     u3941:
  2083  0E0B  2E12               	goto	l3655
  2084  0E0C                     u3940:
  2085                           	line	222
  2086                           	
  2087  0E0C                     l9989:	
  2088                           ;main.c: 222: goForward();
  2089  0E0C  120A  158A  24DB   	fcall	_goForward
              120A  158A         
  2090  0E11  2E24               	goto	l3659
  2091                           	line	223
  2092                           	
  2093  0E12                     l3655:	
  2094                           ;main.c: 223: else if(!leftWall)
  2095  0E12  1AF0               	btfsc	(_leftWall/8),(_leftWall)&7
  2096  0E13  2E15               	goto	u3951
  2097  0E14  2E16               	goto	u3950
  2098  0E15                     u3951:
  2099  0E15  2E1C               	goto	l9993
  2100  0E16                     u3950:
  2101                           	line	224
  2102                           	
  2103  0E16                     l9991:	
  2104                           ;main.c: 224: goLeft();
  2105  0E16  120A  158A  2571   	fcall	_goLeft
              120A  158A         
  2106  0E1B  2E24               	goto	l3659
  2107                           	line	225
  2108                           	
  2109  0E1C                     l3657:	
  2110                           	line	226
  2111                           	
  2112  0E1C                     l9993:	
  2113                           ;main.c: 225: else
  2114                           ;main.c: 226: goBackward();
  2115  0E1C  120A  158A  2593   	fcall	_goBackward
              120A  158A         
  2116  0E21  2E24               	goto	l3659
  2117                           	
  2118  0E22                     l3658:	
  2119  0E22  2E24               	goto	l3659
  2120                           	
  2121  0E23                     l3656:	
  2122  0E23  2E24               	goto	l3659
  2123                           	
  2124  0E24                     l3654:	
  2125                           	line	227
  2126                           	
  2127  0E24                     l3659:	
  2128  0E24  0008               	return
  2129                           	opt stack 0
  2130                           GLOBAL	__end_of_goToNextCell
  2131  0E25                     	__end_of_goToNextCell:
  2132 ;; =============== function _goToNextCell ends ============
  2133                           
  2134                           	signat	_goToNextCell,88
  2135                           	global	_findWall
  2136                           psect	text1304,local,class=CODE,delta=2
  2137                           global __ptext1304
  2138  0D12                     __ptext1304:
  2139                           
  2140 ;; *************** function _findWall *****************
  2141 ;; Defined at:
  2142 ;;		line 133 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;		None               void
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    6
  2163 ;; This function calls:
  2164 ;;		_readIR
  2165 ;; This function is called by:
  2166 ;;		_findWalls
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           psect	text1304
  2170                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2171                           	line	133
  2172                           	global	__size_of_findWall
  2173  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  2174                           	
  2175  0D12                     _findWall:	
  2176                           	opt	stack 0
  2177                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2178                           	line	134
  2179                           	
  2180  0D12                     l9973:	
  2181                           ;main.c: 134: if(readIR() > 100)
  2182  0D12  120A  158A  2676   	fcall	_readIR
              120A  158A         
  2183  0D17  1683               	bsf	status, 5	;RP0=1, select bank1
  2184  0D18  1303               	bcf	status, 6	;RP1=0, select bank1
  2185  0D19  085F               	movf	(1+(?_readIR))^080h,w
  2186  0D1A  3A80               	xorlw	80h
  2187  0D1B  00FF               	movwf	btemp+1
  2188  0D1C  3080               	movlw	(high(065h))^80h
  2189  0D1D  027F               	subwf	btemp+1,w
  2190  0D1E  1D03               	skipz
  2191  0D1F  2D22               	goto	u3925
  2192  0D20  3065               	movlw	low(065h)
  2193  0D21  025E               	subwf	(0+(?_readIR))^080h,w
  2194  0D22                     u3925:
  2195                           
  2196  0D22  1C03               	skipc
  2197  0D23  2D25               	goto	u3921
  2198  0D24  2D26               	goto	u3920
  2199  0D25                     u3921:
  2200  0D25  2D2A               	goto	l9981
  2201  0D26                     u3920:
  2202                           	line	135
  2203                           	
  2204  0D26                     l9975:	
  2205                           ;main.c: 135: return 0;
  2206  0D26  1003               	clrc
  2207                           	
  2208  0D27  2D2D               	goto	l3629
  2209                           	
  2210  0D28                     l9977:	
  2211  0D28  2D2D               	goto	l3629
  2212                           	
  2213  0D29                     l9979:	
  2214  0D29  2D2D               	goto	l3629
  2215                           	line	136
  2216                           	
  2217  0D2A                     l3628:	
  2218                           	line	137
  2219                           	
  2220  0D2A                     l9981:	
  2221                           ;main.c: 136: else
  2222                           ;main.c: 137: return 1;
  2223  0D2A  1403               	setc
  2224                           	
  2225  0D2B  2D2D               	goto	l3629
  2226                           	
  2227  0D2C                     l9983:	
  2228  0D2C  2D2D               	goto	l3629
  2229                           	
  2230  0D2D                     l3630:	
  2231                           	line	138
  2232                           	
  2233  0D2D                     l3629:	
  2234  0D2D  0008               	return
  2235                           	opt stack 0
  2236                           GLOBAL	__end_of_findWall
  2237  0D2E                     	__end_of_findWall:
  2238 ;; =============== function _findWall ends ============
  2239                           
  2240                           	signat	_findWall,88
  2241                           	global	_updateLocation
  2242                           psect	text1305,local,class=CODE,delta=2
  2243                           global __ptext1305
  2244  042E                     __ptext1305:
  2245                           
  2246 ;; *************** function _updateLocation *****************
  2247 ;; Defined at:
  2248 ;;		line 240 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;		None               void
  2255 ;; Registers used:
  2256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0
  2264 ;;      Temps:          0       1       0       0       0
  2265 ;;      Totals:         0       1       0       0       0
  2266 ;;Total ram usage:        1 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    4
  2269 ;; This function calls:
  2270 ;;		_lcd_set_cursor
  2271 ;;		_lcd_write_data
  2272 ;;		_lcd_write_1_digit_bcd
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           psect	text1305
  2278                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2279                           	line	240
  2280                           	global	__size_of_updateLocation
  2281  0071                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  2282                           	
  2283  042E                     _updateLocation:	
  2284                           	opt	stack 3
  2285                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2286                           	line	241
  2287                           	
  2288  042E                     l9943:	
  2289                           ;main.c: 241: currentOrientation += directionMoved;
  2290  042E  1283               	bcf	status, 5	;RP0=0, select bank0
  2291  042F  1303               	bcf	status, 6	;RP1=0, select bank0
  2292  0430  085F               	movf	(_directionMoved),w	;volatile
  2293  0431  00AE               	movwf	(??_updateLocation+0)+0
  2294  0432  082E               	movf	(??_updateLocation+0)+0,w
  2295  0433  07DE               	addwf	(_currentOrientation),f	;volatile
  2296                           	line	243
  2297                           	
  2298  0434                     l9945:	
  2299                           ;main.c: 243: if(currentOrientation >= 4)
  2300  0434  3004               	movlw	(04h)
  2301  0435  025E               	subwf	(_currentOrientation),w	;volatile
  2302  0436  1C03               	skipc
  2303  0437  2C39               	goto	u3911
  2304  0438  2C3A               	goto	u3910
  2305  0439                     u3911:
  2306  0439  2C3D               	goto	l9949
  2307  043A                     u3910:
  2308                           	line	244
  2309                           	
  2310  043A                     l9947:	
  2311                           ;main.c: 244: currentOrientation -= 4;
  2312  043A  3004               	movlw	low(04h)
  2313  043B  02DE               	subwf	(_currentOrientation),f	;volatile
  2314  043C  2C3D               	goto	l9949
  2315                           	
  2316  043D                     l3665:	
  2317                           	line	246
  2318                           	
  2319  043D                     l9949:	
  2320                           ;main.c: 246: lcd_set_cursor(0x46);
  2321  043D  3046               	movlw	(046h)
  2322  043E  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  118A         
  2323                           	line	247
  2324                           ;main.c: 247: switch(currentOrientation)
  2325  0443  2C74               	goto	l9969
  2326                           	line	249
  2327                           ;main.c: 248: {
  2328                           ;main.c: 249: case NORTH:
  2329                           	
  2330  0444                     l3667:	
  2331                           	line	250
  2332                           	
  2333  0444                     l9951:	
  2334                           ;main.c: 250: ++yCoord;
  2335  0444  3001               	movlw	(01h)
  2336  0445  1283               	bcf	status, 5	;RP0=0, select bank0
  2337  0446  1303               	bcf	status, 6	;RP1=0, select bank0
  2338  0447  00AE               	movwf	(??_updateLocation+0)+0
  2339  0448  082E               	movf	(??_updateLocation+0)+0,w
  2340  0449  07E5               	addwf	(_yCoord),f	;volatile
  2341                           	line	251
  2342                           	
  2343  044A                     l9953:	
  2344                           ;main.c: 251: lcd_write_data('N');
  2345  044A  304E               	movlw	(04Eh)
  2346  044B  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  2347                           	line	252
  2348                           ;main.c: 252: break;
  2349  0450  2C84               	goto	l9971
  2350                           	line	253
  2351                           ;main.c: 253: case SOUTH:
  2352                           	
  2353  0451                     l3669:	
  2354                           	line	254
  2355                           	
  2356  0451                     l9955:	
  2357                           ;main.c: 254: --yCoord;
  2358  0451  3001               	movlw	low(01h)
  2359  0452  1283               	bcf	status, 5	;RP0=0, select bank0
  2360  0453  1303               	bcf	status, 6	;RP1=0, select bank0
  2361  0454  02E5               	subwf	(_yCoord),f	;volatile
  2362                           	line	255
  2363                           	
  2364  0455                     l9957:	
  2365                           ;main.c: 255: lcd_write_data('S');
  2366  0455  3053               	movlw	(053h)
  2367  0456  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  2368                           	line	256
  2369                           ;main.c: 256: break;
  2370  045B  2C84               	goto	l9971
  2371                           	line	257
  2372                           ;main.c: 257: case EAST:
  2373                           	
  2374  045C                     l3670:	
  2375                           	line	258
  2376                           	
  2377  045C                     l9959:	
  2378                           ;main.c: 258: ++xCoord;
  2379  045C  3001               	movlw	(01h)
  2380  045D  1283               	bcf	status, 5	;RP0=0, select bank0
  2381  045E  1303               	bcf	status, 6	;RP1=0, select bank0
  2382  045F  00AE               	movwf	(??_updateLocation+0)+0
  2383  0460  082E               	movf	(??_updateLocation+0)+0,w
  2384  0461  07FB               	addwf	(_xCoord),f	;volatile
  2385                           	line	259
  2386                           	
  2387  0462                     l9961:	
  2388                           ;main.c: 259: lcd_write_data('E');
  2389  0462  3045               	movlw	(045h)
  2390  0463  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  2391                           	line	260
  2392                           ;main.c: 260: break;
  2393  0468  2C84               	goto	l9971
  2394                           	line	261
  2395                           ;main.c: 261: case WEST:
  2396                           	
  2397  0469                     l3671:	
  2398                           	line	262
  2399                           	
  2400  0469                     l9963:	
  2401                           ;main.c: 262: --xCoord;
  2402  0469  3001               	movlw	low(01h)
  2403  046A  02FB               	subwf	(_xCoord),f	;volatile
  2404                           	line	263
  2405                           	
  2406  046B                     l9965:	
  2407                           ;main.c: 263: lcd_write_data('W');
  2408  046B  3057               	movlw	(057h)
  2409  046C  120A  158A  248B   	fcall	_lcd_write_data
              120A  118A         
  2410                           	line	264
  2411                           ;main.c: 264: break;
  2412  0471  2C84               	goto	l9971
  2413                           	line	265
  2414                           ;main.c: 265: default:
  2415                           	
  2416  0472                     l3672:	
  2417                           	line	266
  2418                           ;main.c: 266: break;
  2419  0472  2C84               	goto	l9971
  2420                           	line	267
  2421                           	
  2422  0473                     l9967:	
  2423                           ;main.c: 267: }
  2424  0473  2C84               	goto	l9971
  2425                           	line	247
  2426                           	
  2427  0474                     l3666:	
  2428                           	
  2429  0474                     l9969:	
  2430  0474  1283               	bcf	status, 5	;RP0=0, select bank0
  2431  0475  1303               	bcf	status, 6	;RP1=0, select bank0
  2432  0476  085E               	movf	(_currentOrientation),w	;volatile
  2433                           	; Switch size 1, requested type "space"
  2434                           ; Number of cases is 4, Range of values is 0 to 3
  2435                           ; switch strategies available:
  2436                           ; Name         Instructions Cycles
  2437                           ; simple_byte           13     7 (average)
  2438                           ; direct_byte           20     8 (fixed)
  2439                           ; jumptable            260     6 (fixed)
  2440                           ; rangetable             8     6 (fixed)
  2441                           ; spacedrange           14     9 (fixed)
  2442                           ; locatedrange           4     3 (fixed)
  2443                           ;	Chosen strategy is simple_byte
  2444                           
  2445                           	opt asmopt_off
  2446  0477  3A00               	xorlw	0^0	; case 0
  2447  0478  1903               	skipnz
  2448  0479  2C69               	goto	l9963
  2449  047A  3A01               	xorlw	1^0	; case 1
  2450  047B  1903               	skipnz
  2451  047C  2C51               	goto	l9955
  2452  047D  3A03               	xorlw	2^1	; case 2
  2453  047E  1903               	skipnz
  2454  047F  2C5C               	goto	l9959
  2455  0480  3A01               	xorlw	3^2	; case 3
  2456  0481  1903               	skipnz
  2457  0482  2C44               	goto	l9951
  2458  0483  2C84               	goto	l9971
  2459                           	opt asmopt_on
  2460                           
  2461                           	line	267
  2462                           	
  2463  0484                     l3668:	
  2464                           	line	269
  2465                           	
  2466  0484                     l9971:	
  2467                           ;main.c: 269: lcd_set_cursor(0x0C);
  2468  0484  300C               	movlw	(0Ch)
  2469  0485  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  118A         
  2470                           	line	270
  2471                           ;main.c: 270: lcd_write_1_digit_bcd(xCoord);
  2472  048A  087B               	movf	(_xCoord),w	;volatile
  2473  048B  120A  158A  246E   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  2474                           	line	271
  2475                           ;main.c: 271: lcd_set_cursor(0x0E);
  2476  0490  300E               	movlw	(0Eh)
  2477  0491  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  118A         
  2478                           	line	272
  2479                           ;main.c: 272: lcd_write_1_digit_bcd(yCoord);
  2480  0496  1283               	bcf	status, 5	;RP0=0, select bank0
  2481  0497  1303               	bcf	status, 6	;RP1=0, select bank0
  2482  0498  0865               	movf	(_yCoord),w	;volatile
  2483  0499  120A  158A  246E   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  2484                           	line	274
  2485                           	
  2486  049E                     l3673:	
  2487  049E  0008               	return
  2488                           	opt stack 0
  2489                           GLOBAL	__end_of_updateLocation
  2490  049F                     	__end_of_updateLocation:
  2491 ;; =============== function _updateLocation ends ============
  2492                           
  2493                           	signat	_updateLocation,88
  2494                           	global	_goRight
  2495                           psect	text1306,local,class=CODE,delta=2
  2496                           global __ptext1306
  2497  0DB6                     __ptext1306:
  2498                           
  2499 ;; *************** function _goRight *****************
  2500 ;; Defined at:
  2501 ;;		line 231 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0
  2517 ;;      Temps:          0       1       0       0       0
  2518 ;;      Totals:         0       1       0       0       0
  2519 ;;Total ram usage:        1 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    5
  2522 ;; This function calls:
  2523 ;;		_turnRight90
  2524 ;;		_driveForDistance
  2525 ;;		_lcd_set_cursor
  2526 ;;		_lcd_write_data
  2527 ;; This function is called by:
  2528 ;;		_goToNextCell
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           psect	text1306
  2532                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2533                           	line	231
  2534                           	global	__size_of_goRight
  2535  0023                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  2536                           	
  2537  0DB6                     _goRight:	
  2538                           	opt	stack 1
  2539                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2540                           	line	232
  2541                           	
  2542  0DB6                     l9933:	
  2543                           ;main.c: 232: turnRight90();
  2544  0DB6  120A  118A  2732   	fcall	_turnRight90
              120A  158A         
  2545                           	line	233
  2546                           	
  2547  0DBB                     l9935:	
  2548                           ;main.c: 233: driveForDistance(1000);
  2549  0DBB  30E8               	movlw	low(03E8h)
  2550  0DBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2551  0DBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2552  0DBE  00B3               	movwf	(?_driveForDistance)
  2553  0DBF  3003               	movlw	high(03E8h)
  2554  0DC0  00B4               	movwf	((?_driveForDistance))+1
  2555  0DC1  120A  118A  249F   	fcall	_driveForDistance
              120A  158A         
  2556                           	line	234
  2557                           	
  2558  0DC6                     l9937:	
  2559                           ;main.c: 234: directionMoved = RIGHT;
  2560  0DC6  3003               	movlw	(03h)
  2561  0DC7  1283               	bcf	status, 5	;RP0=0, select bank0
  2562  0DC8  1303               	bcf	status, 6	;RP1=0, select bank0
  2563  0DC9  00BD               	movwf	(??_goRight+0)+0
  2564  0DCA  083D               	movf	(??_goRight+0)+0,w
  2565  0DCB  00DF               	movwf	(_directionMoved)	;volatile
  2566                           	line	235
  2567                           	
  2568  0DCC                     l9939:	
  2569                           ;main.c: 235: lcd_set_cursor(0x4F);
  2570  0DCC  304F               	movlw	(04Fh)
  2571  0DCD  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  158A         
  2572                           	line	236
  2573                           	
  2574  0DD2                     l9941:	
  2575                           ;main.c: 236: lcd_write_data('R');
  2576  0DD2  3052               	movlw	(052h)
  2577  0DD3  120A  158A  248B   	fcall	_lcd_write_data
              120A  158A         
  2578                           	line	237
  2579                           	
  2580  0DD8                     l3662:	
  2581  0DD8  0008               	return
  2582                           	opt stack 0
  2583                           GLOBAL	__end_of_goRight
  2584  0DD9                     	__end_of_goRight:
  2585 ;; =============== function _goRight ends ============
  2586                           
  2587                           	signat	_goRight,88
  2588                           	global	_goLeft
  2589                           psect	text1307,local,class=CODE,delta=2
  2590                           global __ptext1307
  2591  0D71                     __ptext1307:
  2592                           
  2593 ;; *************** function _goLeft *****************
  2594 ;; Defined at:
  2595 ;;		line 208 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    5
  2616 ;; This function calls:
  2617 ;;		_turnLeft90
  2618 ;;		_driveForDistance
  2619 ;;		_lcd_set_cursor
  2620 ;;		_lcd_write_data
  2621 ;; This function is called by:
  2622 ;;		_goToNextCell
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           psect	text1307
  2626                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2627                           	line	208
  2628                           	global	__size_of_goLeft
  2629  0022                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  2630                           	
  2631  0D71                     _goLeft:	
  2632                           	opt	stack 1
  2633                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2634                           	line	209
  2635                           	
  2636  0D71                     l9923:	
  2637                           ;main.c: 209: turnLeft90();
  2638  0D71  120A  158A  2791   	fcall	_turnLeft90
              120A  158A         
  2639                           	line	210
  2640                           	
  2641  0D76                     l9925:	
  2642                           ;main.c: 210: driveForDistance(1000);
  2643  0D76  30E8               	movlw	low(03E8h)
  2644  0D77  1283               	bcf	status, 5	;RP0=0, select bank0
  2645  0D78  1303               	bcf	status, 6	;RP1=0, select bank0
  2646  0D79  00B3               	movwf	(?_driveForDistance)
  2647  0D7A  3003               	movlw	high(03E8h)
  2648  0D7B  00B4               	movwf	((?_driveForDistance))+1
  2649  0D7C  120A  118A  249F   	fcall	_driveForDistance
              120A  158A         
  2650                           	line	211
  2651                           	
  2652  0D81                     l9927:	
  2653                           ;main.c: 211: directionMoved = LEFT;
  2654  0D81  1283               	bcf	status, 5	;RP0=0, select bank0
  2655  0D82  1303               	bcf	status, 6	;RP1=0, select bank0
  2656  0D83  01DF               	clrf	(_directionMoved)	;volatile
  2657  0D84  1403               	bsf	status,0
  2658  0D85  0DDF               	rlf	(_directionMoved),f	;volatile
  2659                           	line	212
  2660                           	
  2661  0D86                     l9929:	
  2662                           ;main.c: 212: lcd_set_cursor(0x4F);
  2663  0D86  304F               	movlw	(04Fh)
  2664  0D87  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  158A         
  2665                           	line	213
  2666                           	
  2667  0D8C                     l9931:	
  2668                           ;main.c: 213: lcd_write_data('L');
  2669  0D8C  304C               	movlw	(04Ch)
  2670  0D8D  120A  158A  248B   	fcall	_lcd_write_data
              120A  158A         
  2671                           	line	214
  2672                           	
  2673  0D92                     l3650:	
  2674  0D92  0008               	return
  2675                           	opt stack 0
  2676                           GLOBAL	__end_of_goLeft
  2677  0D93                     	__end_of_goLeft:
  2678 ;; =============== function _goLeft ends ============
  2679                           
  2680                           	signat	_goLeft,88
  2681                           	global	_goForward
  2682                           psect	text1308,local,class=CODE,delta=2
  2683                           global __ptext1308
  2684  0CDB                     __ptext1308:
  2685                           
  2686 ;; *************** function _goForward *****************
  2687 ;; Defined at:
  2688 ;;		line 199 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;		None               void
  2695 ;; Registers used:
  2696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    5
  2709 ;; This function calls:
  2710 ;;		_driveForDistance
  2711 ;;		_lcd_set_cursor
  2712 ;;		_lcd_write_data
  2713 ;; This function is called by:
  2714 ;;		_goToNextCell
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           psect	text1308
  2718                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2719                           	line	199
  2720                           	global	__size_of_goForward
  2721  001B                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  2722                           	
  2723  0CDB                     _goForward:	
  2724                           	opt	stack 1
  2725                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2726                           	line	200
  2727                           	
  2728  0CDB                     l9915:	
  2729                           ;main.c: 200: driveForDistance(1000);
  2730  0CDB  30E8               	movlw	low(03E8h)
  2731  0CDC  1283               	bcf	status, 5	;RP0=0, select bank0
  2732  0CDD  1303               	bcf	status, 6	;RP1=0, select bank0
  2733  0CDE  00B3               	movwf	(?_driveForDistance)
  2734  0CDF  3003               	movlw	high(03E8h)
  2735  0CE0  00B4               	movwf	((?_driveForDistance))+1
  2736  0CE1  120A  118A  249F   	fcall	_driveForDistance
              120A  158A         
  2737                           	line	201
  2738                           	
  2739  0CE6                     l9917:	
  2740                           ;main.c: 201: directionMoved = FORWARD;
  2741  0CE6  1283               	bcf	status, 5	;RP0=0, select bank0
  2742  0CE7  1303               	bcf	status, 6	;RP1=0, select bank0
  2743  0CE8  01DF               	clrf	(_directionMoved)	;volatile
  2744                           	line	202
  2745                           	
  2746  0CE9                     l9919:	
  2747                           ;main.c: 202: lcd_set_cursor(0x4F);
  2748  0CE9  304F               	movlw	(04Fh)
  2749  0CEA  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  158A         
  2750                           	line	203
  2751                           	
  2752  0CEF                     l9921:	
  2753                           ;main.c: 203: lcd_write_data('F');
  2754  0CEF  3046               	movlw	(046h)
  2755  0CF0  120A  158A  248B   	fcall	_lcd_write_data
              120A  158A         
  2756                           	line	204
  2757                           	
  2758  0CF5                     l3647:	
  2759  0CF5  0008               	return
  2760                           	opt stack 0
  2761                           GLOBAL	__end_of_goForward
  2762  0CF6                     	__end_of_goForward:
  2763 ;; =============== function _goForward ends ============
  2764                           
  2765                           	signat	_goForward,88
  2766                           	global	_goBackward
  2767                           psect	text1309,local,class=CODE,delta=2
  2768                           global __ptext1309
  2769  0D93                     __ptext1309:
  2770                           
  2771 ;; *************** function _goBackward *****************
  2772 ;; Defined at:
  2773 ;;		line 189 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;		None               void
  2780 ;; Registers used:
  2781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0
  2789 ;;      Temps:          0       1       0       0       0
  2790 ;;      Totals:         0       1       0       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    5
  2794 ;; This function calls:
  2795 ;;		_turnAround
  2796 ;;		_driveForDistance
  2797 ;;		_lcd_set_cursor
  2798 ;;		_lcd_write_data
  2799 ;; This function is called by:
  2800 ;;		_goToNextCell
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           psect	text1309
  2804                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2805                           	line	189
  2806                           	global	__size_of_goBackward
  2807  0023                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  2808                           	
  2809  0D93                     _goBackward:	
  2810                           	opt	stack 1
  2811                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2812                           	line	190
  2813                           	
  2814  0D93                     l9905:	
  2815                           ;main.c: 190: turnAround();
  2816  0D93  120A  118A  25E5   	fcall	_turnAround
              120A  158A         
  2817                           	line	191
  2818                           	
  2819  0D98                     l9907:	
  2820                           ;main.c: 191: driveForDistance(1000);
  2821  0D98  30E8               	movlw	low(03E8h)
  2822  0D99  1283               	bcf	status, 5	;RP0=0, select bank0
  2823  0D9A  1303               	bcf	status, 6	;RP1=0, select bank0
  2824  0D9B  00B3               	movwf	(?_driveForDistance)
  2825  0D9C  3003               	movlw	high(03E8h)
  2826  0D9D  00B4               	movwf	((?_driveForDistance))+1
  2827  0D9E  120A  118A  249F   	fcall	_driveForDistance
              120A  158A         
  2828                           	line	192
  2829                           	
  2830  0DA3                     l9909:	
  2831                           ;main.c: 192: directionMoved = BACKWARD;
  2832  0DA3  3002               	movlw	(02h)
  2833  0DA4  1283               	bcf	status, 5	;RP0=0, select bank0
  2834  0DA5  1303               	bcf	status, 6	;RP1=0, select bank0
  2835  0DA6  00BD               	movwf	(??_goBackward+0)+0
  2836  0DA7  083D               	movf	(??_goBackward+0)+0,w
  2837  0DA8  00DF               	movwf	(_directionMoved)	;volatile
  2838                           	line	193
  2839                           	
  2840  0DA9                     l9911:	
  2841                           ;main.c: 193: lcd_set_cursor(0x4F);
  2842  0DA9  304F               	movlw	(04Fh)
  2843  0DAA  120A  158A  2463   	fcall	_lcd_set_cursor
              120A  158A         
  2844                           	line	194
  2845                           	
  2846  0DAF                     l9913:	
  2847                           ;main.c: 194: lcd_write_data('B');
  2848  0DAF  3042               	movlw	(042h)
  2849  0DB0  120A  158A  248B   	fcall	_lcd_write_data
              120A  158A         
  2850                           	line	195
  2851                           	
  2852  0DB5                     l3644:	
  2853  0DB5  0008               	return
  2854                           	opt stack 0
  2855                           GLOBAL	__end_of_goBackward
  2856  0DB6                     	__end_of_goBackward:
  2857 ;; =============== function _goBackward ends ============
  2858                           
  2859                           	signat	_goBackward,88
  2860                           	global	_readIR
  2861                           psect	text1310,local,class=CODE,delta=2
  2862                           global __ptext1310
  2863  0E76                     __ptext1310:
  2864                           
  2865 ;; *************** function _readIR *****************
  2866 ;; Defined at:
  2867 ;;		line 33 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ir.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  cm              2    2[BANK1 ] int 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  2    0[BANK1 ] int 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       0       2       0       0
  2882 ;;      Locals:         0       0       2       0       0
  2883 ;;      Temps:          0       0       0       0       0
  2884 ;;      Totals:         0       0       4       0       0
  2885 ;;Total ram usage:        4 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    5
  2888 ;; This function calls:
  2889 ;;		_adc_read_channel
  2890 ;;		_convert
  2891 ;; This function is called by:
  2892 ;;		_findWall
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           psect	text1310
  2896                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ir.c"
  2897                           	line	33
  2898                           	global	__size_of_readIR
  2899  0029                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  2900                           	
  2901  0E76                     _readIR:	
  2902                           	opt	stack 0
  2903                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2904                           	line	34
  2905                           	
  2906  0E76                     l9899:	
  2907                           ;ir.c: 34: int cm = convert(adc_read_channel(0));
  2908  0E76  3000               	movlw	(0)
  2909  0E77  120A  118A  26B2   	fcall	_adc_read_channel
              120A  158A         
  2910  0E7C  1283               	bcf	status, 5	;RP0=0, select bank0
  2911  0E7D  1303               	bcf	status, 6	;RP1=0, select bank0
  2912  0E7E  0846               	movf	(1+(?_adc_read_channel)),w
  2913  0E7F  01C2               	clrf	(?_convert+1)
  2914  0E80  07C2               	addwf	(?_convert+1)
  2915  0E81  0845               	movf	(0+(?_adc_read_channel)),w
  2916  0E82  01C1               	clrf	(?_convert)
  2917  0E83  07C1               	addwf	(?_convert)
  2918                           
  2919  0E84  120A  118A  2015   	fcall	_convert
              120A  158A         
  2920  0E89  1283               	bcf	status, 5	;RP0=0, select bank0
  2921  0E8A  1303               	bcf	status, 6	;RP1=0, select bank0
  2922  0E8B  0842               	movf	(1+(?_convert)),w
  2923  0E8C  1683               	bsf	status, 5	;RP0=1, select bank1
  2924  0E8D  1303               	bcf	status, 6	;RP1=0, select bank1
  2925  0E8E  01E1               	clrf	(readIR@cm+1)^080h
  2926  0E8F  07E1               	addwf	(readIR@cm+1)^080h
  2927  0E90  1283               	bcf	status, 5	;RP0=0, select bank0
  2928  0E91  1303               	bcf	status, 6	;RP1=0, select bank0
  2929  0E92  0841               	movf	(0+(?_convert)),w
  2930  0E93  1683               	bsf	status, 5	;RP0=1, select bank1
  2931  0E94  1303               	bcf	status, 6	;RP1=0, select bank1
  2932  0E95  01E0               	clrf	(readIR@cm)^080h
  2933  0E96  07E0               	addwf	(readIR@cm)^080h
  2934                           
  2935                           	line	35
  2936                           	
  2937  0E97                     l9901:	
  2938                           ;ir.c: 35: return cm;
  2939  0E97  0861               	movf	(readIR@cm+1)^080h,w
  2940  0E98  01DF               	clrf	(?_readIR+1)^080h
  2941  0E99  07DF               	addwf	(?_readIR+1)^080h
  2942  0E9A  0860               	movf	(readIR@cm)^080h,w
  2943  0E9B  01DE               	clrf	(?_readIR)^080h
  2944  0E9C  07DE               	addwf	(?_readIR)^080h
  2945                           
  2946  0E9D  2E9E               	goto	l5828
  2947                           	
  2948  0E9E                     l9903:	
  2949                           	line	36
  2950                           	
  2951  0E9E                     l5828:	
  2952  0E9E  0008               	return
  2953                           	opt stack 0
  2954                           GLOBAL	__end_of_readIR
  2955  0E9F                     	__end_of_readIR:
  2956 ;; =============== function _readIR ends ============
  2957                           
  2958                           	signat	_readIR,90
  2959                           	global	_init
  2960                           psect	text1311,local,class=CODE,delta=2
  2961                           global __ptext1311
  2962  0F24                     __ptext1311:
  2963                           
  2964 ;; *************** function _init *****************
  2965 ;; Defined at:
  2966 ;;		line 93 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;		None               void
  2973 ;; Registers used:
  2974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0
  2983 ;;      Totals:         0       0       0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    5
  2987 ;; This function calls:
  2988 ;;		_init_adc
  2989 ;;		_lcd_init
  2990 ;;		_ser_init
  2991 ;;		_initIRobot
  2992 ;;		_initSongs
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           psect	text1311
  2998                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  2999                           	line	93
  3000                           	global	__size_of_init
  3001  0036                     	__size_of_init	equ	__end_of_init-_init
  3002                           	
  3003  0F24                     _init:	
  3004                           	opt	stack 2
  3005                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3006                           	line	94
  3007                           	
  3008  0F24                     l9867:	
  3009                           ;main.c: 94: start.pressed = 0;
  3010  0F24  1283               	bcf	status, 5	;RP0=0, select bank0
  3011  0F25  1303               	bcf	status, 6	;RP1=0, select bank0
  3012  0F26  01D9               	clrf	(_start)
  3013                           	line	95
  3014                           	
  3015  0F27                     l9869:	
  3016                           ;main.c: 95: start.released = 1;
  3017  0F27  01DA               	clrf	0+(_start)+01h
  3018  0F28  1403               	bsf	status,0
  3019  0F29  0DDA               	rlf	0+(_start)+01h,f
  3020                           	line	97
  3021                           	
  3022  0F2A                     l9871:	
  3023                           ;main.c: 97: init_adc();
  3024  0F2A  120A  158A  24C5   	fcall	_init_adc
              120A  158A         
  3025                           	line	98
  3026                           	
  3027  0F2F                     l9873:	
  3028                           ;main.c: 98: lcd_init();
  3029  0F2F  120A  158A  269F   	fcall	_lcd_init
              120A  158A         
  3030                           	line	101
  3031                           	
  3032  0F34                     l9875:	
  3033                           ;main.c: 101: TRISB = 0b00000001;
  3034  0F34  3001               	movlw	(01h)
  3035  0F35  1683               	bsf	status, 5	;RP0=1, select bank1
  3036  0F36  1303               	bcf	status, 6	;RP1=0, select bank1
  3037  0F37  0086               	movwf	(134)^080h	;volatile
  3038                           	line	104
  3039                           	
  3040  0F38                     l9877:	
  3041                           ;main.c: 104: OPTION_REG = 0b00000100;
  3042  0F38  3004               	movlw	(04h)
  3043  0F39  0081               	movwf	(129)^080h	;volatile
  3044                           	line	106
  3045                           	
  3046  0F3A                     l9879:	
  3047                           ;main.c: 106: TMR0IE = 1;
  3048  0F3A  168B               	bsf	(93/8),(93)&7
  3049                           	line	107
  3050                           	
  3051  0F3B                     l9881:	
  3052                           ;main.c: 107: SSPSTAT = 0b01000000;
  3053  0F3B  3040               	movlw	(040h)
  3054  0F3C  0094               	movwf	(148)^080h	;volatile
  3055                           	line	108
  3056                           	
  3057  0F3D                     l9883:	
  3058                           ;main.c: 108: SSPCON = 0b00100010;
  3059  0F3D  3022               	movlw	(022h)
  3060  0F3E  1283               	bcf	status, 5	;RP0=0, select bank0
  3061  0F3F  1303               	bcf	status, 6	;RP1=0, select bank0
  3062  0F40  0094               	movwf	(20)	;volatile
  3063                           	line	109
  3064                           	
  3065  0F41                     l9885:	
  3066                           ;main.c: 109: TRISC = 0b10010000;
  3067  0F41  3090               	movlw	(090h)
  3068  0F42  1683               	bsf	status, 5	;RP0=1, select bank1
  3069  0F43  1303               	bcf	status, 6	;RP1=0, select bank1
  3070  0F44  0087               	movwf	(135)^080h	;volatile
  3071                           	line	110
  3072                           	
  3073  0F45                     l9887:	
  3074                           ;main.c: 110: PORTC = 0b00000000;
  3075  0F45  1283               	bcf	status, 5	;RP0=0, select bank0
  3076  0F46  1303               	bcf	status, 6	;RP1=0, select bank0
  3077  0F47  0187               	clrf	(7)	;volatile
  3078                           	line	113
  3079                           	
  3080  0F48                     l9889:	
  3081                           ;main.c: 113: PEIE = 1;
  3082  0F48  170B               	bsf	(94/8),(94)&7
  3083                           	line	114
  3084                           	
  3085  0F49                     l9891:	
  3086                           ;main.c: 114: GIE = 1;
  3087  0F49  178B               	bsf	(95/8),(95)&7
  3088                           	line	116
  3089                           	
  3090  0F4A                     l9893:	
  3091                           ;main.c: 116: ser_init();
  3092  0F4A  120A  158A  2625   	fcall	_ser_init
              120A  158A         
  3093                           	line	117
  3094                           	
  3095  0F4F                     l9895:	
  3096                           ;main.c: 117: initIRobot();
  3097  0F4F  120A  158A  24F6   	fcall	_initIRobot
              120A  158A         
  3098                           	line	118
  3099                           	
  3100  0F54                     l9897:	
  3101                           ;main.c: 118: initSongs();
  3102  0F54  120A  118A  2770   	fcall	_initSongs
              120A  158A         
  3103                           	line	119
  3104                           	
  3105  0F59                     l3622:	
  3106  0F59  0008               	return
  3107                           	opt stack 0
  3108                           GLOBAL	__end_of_init
  3109  0F5A                     	__end_of_init:
  3110 ;; =============== function _init ends ============
  3111                           
  3112                           	signat	_init,88
  3113                           	global	_initSongs
  3114                           psect	text1312,local,class=CODE,delta=2
  3115                           global __ptext1312
  3116  0770                     __ptext1312:
  3117                           
  3118 ;; *************** function _initSongs *****************
  3119 ;; Defined at:
  3120 ;;		line 30 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;		None               void
  3127 ;; Registers used:
  3128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3134 ;;      Params:         0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    4
  3141 ;; This function calls:
  3142 ;;		_ser_putArr
  3143 ;; This function is called by:
  3144 ;;		_init
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           psect	text1312
  3148                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
  3149                           	line	30
  3150                           	global	__size_of_initSongs
  3151  003D                     	__size_of_initSongs	equ	__end_of_initSongs-_initSongs
  3152                           	
  3153  0770                     _initSongs:	
  3154                           	opt	stack 2
  3155                           ; Regs used in _initSongs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3156                           	line	31
  3157                           	
  3158  0770                     l9865:	
  3159                           ;songs.c: 31: ser_putArr(finalCountdown, 27);
  3160  0770  30AD               	movlw	(_finalCountdown&0ffh)
  3161  0771  1283               	bcf	status, 5	;RP0=0, select bank0
  3162  0772  1303               	bcf	status, 6	;RP1=0, select bank0
  3163  0773  00AC               	movwf	(?_ser_putArr)
  3164  0774  3001               	movlw	(0x3/2)
  3165  0775  00AD               	movwf	(?_ser_putArr+1)
  3166  0776  301B               	movlw	low(01Bh)
  3167  0777  00AE               	movwf	0+(?_ser_putArr)+02h
  3168  0778  3000               	movlw	high(01Bh)
  3169  0779  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  3170  077A  120A  118A  27AD   	fcall	_ser_putArr
              120A  118A         
  3171                           	line	32
  3172                           ;songs.c: 32: ser_putArr(superMarioBros, 25);
  3173  077F  30A0               	movlw	(_superMarioBros&0ffh)
  3174  0780  1283               	bcf	status, 5	;RP0=0, select bank0
  3175  0781  1303               	bcf	status, 6	;RP1=0, select bank0
  3176  0782  00AC               	movwf	(?_ser_putArr)
  3177  0783  3000               	movlw	(0x1/2)
  3178  0784  00AD               	movwf	(?_ser_putArr+1)
  3179  0785  3019               	movlw	low(019h)
  3180  0786  00AE               	movwf	0+(?_ser_putArr)+02h
  3181  0787  3000               	movlw	high(019h)
  3182  0788  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  3183  0789  120A  118A  27AD   	fcall	_ser_putArr
              120A  118A         
  3184                           	line	33
  3185                           ;songs.c: 33: ser_putArr(lookingForU2, 29);
  3186  078E  3090               	movlw	(_lookingForU2&0ffh)
  3187  078F  1283               	bcf	status, 5	;RP0=0, select bank0
  3188  0790  1303               	bcf	status, 6	;RP1=0, select bank0
  3189  0791  00AC               	movwf	(?_ser_putArr)
  3190  0792  3001               	movlw	(0x3/2)
  3191  0793  00AD               	movwf	(?_ser_putArr+1)
  3192  0794  301D               	movlw	low(01Dh)
  3193  0795  00AE               	movwf	0+(?_ser_putArr)+02h
  3194  0796  3000               	movlw	high(01Dh)
  3195  0797  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  3196  0798  120A  118A  27AD   	fcall	_ser_putArr
              120A  118A         
  3197                           	line	34
  3198                           ;songs.c: 34: ser_putArr(champions, 21);
  3199  079D  30B9               	movlw	(_champions&0ffh)
  3200  079E  1283               	bcf	status, 5	;RP0=0, select bank0
  3201  079F  1303               	bcf	status, 6	;RP1=0, select bank0
  3202  07A0  00AC               	movwf	(?_ser_putArr)
  3203  07A1  3000               	movlw	(0x1/2)
  3204  07A2  00AD               	movwf	(?_ser_putArr+1)
  3205  07A3  3015               	movlw	low(015h)
  3206  07A4  00AE               	movwf	0+(?_ser_putArr)+02h
  3207  07A5  3000               	movlw	high(015h)
  3208  07A6  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  3209  07A7  120A  118A  27AD   	fcall	_ser_putArr
              120A  118A         
  3210                           	line	35
  3211                           	
  3212  07AC                     l5122:	
  3213  07AC  0008               	return
  3214                           	opt stack 0
  3215                           GLOBAL	__end_of_initSongs
  3216  07AD                     	__end_of_initSongs:
  3217 ;; =============== function _initSongs ends ============
  3218                           
  3219                           	signat	_initSongs,88
  3220                           	global	_lcd_init
  3221                           psect	text1313,local,class=CODE,delta=2
  3222                           global __ptext1313
  3223  0E9F                     __ptext1313:
  3224                           
  3225 ;; *************** function _lcd_init *****************
  3226 ;; Defined at:
  3227 ;;		line 78 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0
  3244 ;;      Totals:         0       0       0       0       0
  3245 ;;Total ram usage:        0 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    3
  3248 ;; This function calls:
  3249 ;;		_lcd_write_control
  3250 ;; This function is called by:
  3251 ;;		_init
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           psect	text1313
  3255                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3256                           	line	78
  3257                           	global	__size_of_lcd_init
  3258  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3259                           	
  3260  0E9F                     _lcd_init:	
  3261                           	opt	stack 3
  3262                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3263                           	line	82
  3264                           	
  3265  0E9F                     l9845:	
  3266                           ;lcd.c: 82: ADCON1 = 0b00000010;
  3267  0E9F  3002               	movlw	(02h)
  3268  0EA0  1683               	bsf	status, 5	;RP0=1, select bank1
  3269  0EA1  1303               	bcf	status, 6	;RP1=0, select bank1
  3270  0EA2  009F               	movwf	(159)^080h	;volatile
  3271                           	line	85
  3272                           	
  3273  0EA3                     l9847:	
  3274                           ;lcd.c: 85: PORTD = 0;
  3275  0EA3  1283               	bcf	status, 5	;RP0=0, select bank0
  3276  0EA4  1303               	bcf	status, 6	;RP1=0, select bank0
  3277  0EA5  0188               	clrf	(8)	;volatile
  3278                           	line	86
  3279                           	
  3280  0EA6                     l9849:	
  3281                           ;lcd.c: 86: PORTE = 0;
  3282  0EA6  0189               	clrf	(9)	;volatile
  3283                           	line	88
  3284                           	
  3285  0EA7                     l9851:	
  3286                           ;lcd.c: 88: TRISD = 0b00000000;
  3287  0EA7  1683               	bsf	status, 5	;RP0=1, select bank1
  3288  0EA8  1303               	bcf	status, 6	;RP1=0, select bank1
  3289  0EA9  0188               	clrf	(136)^080h	;volatile
  3290                           	line	89
  3291                           	
  3292  0EAA                     l9853:	
  3293                           ;lcd.c: 89: TRISE = 0b00000000;
  3294  0EAA  0189               	clrf	(137)^080h	;volatile
  3295                           	line	92
  3296                           	
  3297  0EAB                     l9855:	
  3298                           ;lcd.c: 92: lcd_write_control(0b00000001);
  3299  0EAB  3001               	movlw	(01h)
  3300  0EAC  120A  158A  24B1   	fcall	_lcd_write_control
              120A  158A         
  3301                           	line	93
  3302                           	
  3303  0EB1                     l9857:	
  3304                           ;lcd.c: 93: lcd_write_control(0b00111000);
  3305  0EB1  3038               	movlw	(038h)
  3306  0EB2  120A  158A  24B1   	fcall	_lcd_write_control
              120A  158A         
  3307                           	line	94
  3308                           	
  3309  0EB7                     l9859:	
  3310                           ;lcd.c: 94: lcd_write_control(0b00001100);
  3311  0EB7  300C               	movlw	(0Ch)
  3312  0EB8  120A  158A  24B1   	fcall	_lcd_write_control
              120A  158A         
  3313                           	line	95
  3314                           	
  3315  0EBD                     l9861:	
  3316                           ;lcd.c: 95: lcd_write_control(0b00000110);
  3317  0EBD  3006               	movlw	(06h)
  3318  0EBE  120A  158A  24B1   	fcall	_lcd_write_control
              120A  158A         
  3319                           	line	96
  3320                           	
  3321  0EC3                     l9863:	
  3322                           ;lcd.c: 96: lcd_write_control(0b00000010);
  3323  0EC3  3002               	movlw	(02h)
  3324  0EC4  120A  158A  24B1   	fcall	_lcd_write_control
              120A  158A         
  3325                           	line	98
  3326                           	
  3327  0EC9                     l2841:	
  3328  0EC9  0008               	return
  3329                           	opt stack 0
  3330                           GLOBAL	__end_of_lcd_init
  3331  0ECA                     	__end_of_lcd_init:
  3332 ;; =============== function _lcd_init ends ============
  3333                           
  3334                           	signat	_lcd_init,88
  3335                           	global	_lcd_write_1_digit_bcd
  3336                           psect	text1314,local,class=CODE,delta=2
  3337                           global __ptext1314
  3338  0C6E                     __ptext1314:
  3339                           
  3340 ;; *************** function _lcd_write_1_digit_bcd *****************
  3341 ;; Defined at:
  3342 ;;		line 44 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  data            1    wreg     unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  data            1   13[BANK0 ] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, pclath, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       0       0       0       0
  3357 ;;      Locals:         0       1       0       0       0
  3358 ;;      Temps:          0       0       0       0       0
  3359 ;;      Totals:         0       1       0       0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    3
  3363 ;; This function calls:
  3364 ;;		_lcd_write_data
  3365 ;; This function is called by:
  3366 ;;		_updateLocation
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           psect	text1314
  3370                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3371                           	line	44
  3372                           	global	__size_of_lcd_write_1_digit_bcd
  3373  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  3374                           	
  3375  0C6E                     _lcd_write_1_digit_bcd:	
  3376                           	opt	stack 3
  3377                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  3378                           ;lcd_write_1_digit_bcd@data stored from wreg
  3379  0C6E  1283               	bcf	status, 5	;RP0=0, select bank0
  3380  0C6F  1303               	bcf	status, 6	;RP1=0, select bank0
  3381  0C70  00AD               	movwf	(lcd_write_1_digit_bcd@data)
  3382                           	line	45
  3383                           	
  3384  0C71                     l9843:	
  3385                           ;lcd.c: 45: lcd_write_data(data + 48);
  3386  0C71  082D               	movf	(lcd_write_1_digit_bcd@data),w
  3387  0C72  3E30               	addlw	030h
  3388  0C73  120A  158A  248B   	fcall	_lcd_write_data
              120A  158A         
  3389                           	line	46
  3390                           	
  3391  0C78                     l2829:	
  3392  0C78  0008               	return
  3393                           	opt stack 0
  3394                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  3395  0C79                     	__end_of_lcd_write_1_digit_bcd:
  3396 ;; =============== function _lcd_write_1_digit_bcd ends ============
  3397                           
  3398                           	signat	_lcd_write_1_digit_bcd,4216
  3399                           	global	_lcd_write_string
  3400                           psect	text1315,local,class=CODE,delta=2
  3401                           global __ptext1315
  3402  0DD9                     __ptext1315:
  3403                           
  3404 ;; *************** function _lcd_write_string *****************
  3405 ;; Defined at:
  3406 ;;		line 38 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  s               1    wreg     PTR const unsigned char 
  3409 ;;		 -> STR_4(17), STR_3(17), 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  3412 ;;		 -> STR_4(17), STR_3(17), 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         0       1       0       0       0
  3424 ;;      Temps:          0       1       0       0       0
  3425 ;;      Totals:         0       2       0       0       0
  3426 ;;Total ram usage:        2 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    3
  3429 ;; This function calls:
  3430 ;;		_lcd_write_data
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           psect	text1315
  3436                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3437                           	line	38
  3438                           	global	__size_of_lcd_write_string
  3439  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3440                           	
  3441  0DD9                     _lcd_write_string:	
  3442                           	opt	stack 4
  3443                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3444                           ;lcd_write_string@s stored from wreg
  3445  0DD9  1283               	bcf	status, 5	;RP0=0, select bank0
  3446  0DDA  1303               	bcf	status, 6	;RP1=0, select bank0
  3447  0DDB  00AE               	movwf	(lcd_write_string@s)
  3448                           	line	40
  3449                           	
  3450  0DDC                     l9835:	
  3451                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  3452  0DDC  2DF0               	goto	l9841
  3453                           	
  3454  0DDD                     l2824:	
  3455                           	
  3456  0DDD                     l9837:	
  3457  0DDD  082E               	movf	(lcd_write_string@s),w
  3458  0DDE  0084               	movwf	fsr0
  3459  0DDF  120A  118A  262A   	fcall	stringdir
              120A  158A         
  3460  0DE4  120A  158A  248B   	fcall	_lcd_write_data
              120A  158A         
  3461                           	
  3462  0DE9                     l9839:	
  3463  0DE9  3001               	movlw	(01h)
  3464  0DEA  1283               	bcf	status, 5	;RP0=0, select bank0
  3465  0DEB  1303               	bcf	status, 6	;RP1=0, select bank0
  3466  0DEC  00AD               	movwf	(??_lcd_write_string+0)+0
  3467  0DED  082D               	movf	(??_lcd_write_string+0)+0,w
  3468  0DEE  07AE               	addwf	(lcd_write_string@s),f
  3469  0DEF  2DF0               	goto	l9841
  3470                           	
  3471  0DF0                     l2823:	
  3472                           	
  3473  0DF0                     l9841:	
  3474  0DF0  082E               	movf	(lcd_write_string@s),w
  3475  0DF1  0084               	movwf	fsr0
  3476  0DF2  120A  118A  262A   	fcall	stringdir
              120A  158A         
  3477  0DF7  3800               	iorlw	0
  3478  0DF8  1D03               	skipz
  3479  0DF9  2DFB               	goto	u3901
  3480  0DFA  2DFC               	goto	u3900
  3481  0DFB                     u3901:
  3482  0DFB  2DDD               	goto	l9837
  3483  0DFC                     u3900:
  3484  0DFC  2DFD               	goto	l2826
  3485                           	
  3486  0DFD                     l2825:	
  3487                           	line	41
  3488                           	
  3489  0DFD                     l2826:	
  3490  0DFD  0008               	return
  3491                           	opt stack 0
  3492                           GLOBAL	__end_of_lcd_write_string
  3493  0DFE                     	__end_of_lcd_write_string:
  3494 ;; =============== function _lcd_write_string ends ============
  3495                           
  3496                           	signat	_lcd_write_string,4216
  3497                           	global	_lcd_set_cursor
  3498                           psect	text1316,local,class=CODE,delta=2
  3499                           global __ptext1316
  3500  0C63                     __ptext1316:
  3501                           
  3502 ;; *************** function _lcd_set_cursor *****************
  3503 ;; Defined at:
  3504 ;;		line 32 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  address         1    wreg     unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  address         1   13[BANK0 ] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;		None               void
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       0       0       0       0
  3519 ;;      Locals:         0       1       0       0       0
  3520 ;;      Temps:          0       0       0       0       0
  3521 ;;      Totals:         0       1       0       0       0
  3522 ;;Total ram usage:        1 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    3
  3525 ;; This function calls:
  3526 ;;		_lcd_write_control
  3527 ;; This function is called by:
  3528 ;;		_findWalls
  3529 ;;		_goBackward
  3530 ;;		_goForward
  3531 ;;		_goLeft
  3532 ;;		_goRight
  3533 ;;		_updateLocation
  3534 ;;		_main
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           psect	text1316
  3538                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  3539                           	line	32
  3540                           	global	__size_of_lcd_set_cursor
  3541  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3542                           	
  3543  0C63                     _lcd_set_cursor:	
  3544                           	opt	stack 3
  3545                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3546                           ;lcd_set_cursor@address stored from wreg
  3547  0C63  1283               	bcf	status, 5	;RP0=0, select bank0
  3548  0C64  1303               	bcf	status, 6	;RP1=0, select bank0
  3549  0C65  00AD               	movwf	(lcd_set_cursor@address)
  3550                           	line	33
  3551                           	
  3552  0C66                     l9831:	
  3553                           ;lcd.c: 33: address |= 0b10000000;
  3554  0C66  17AD               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3555                           	line	34
  3556                           	
  3557  0C67                     l9833:	
  3558                           ;lcd.c: 34: lcd_write_control(address);
  3559  0C67  082D               	movf	(lcd_set_cursor@address),w
  3560  0C68  120A  158A  24B1   	fcall	_lcd_write_control
              120A  158A         
  3561                           	line	35
  3562                           	
  3563  0C6D                     l2820:	
  3564  0C6D  0008               	return
  3565                           	opt stack 0
  3566                           GLOBAL	__end_of_lcd_set_cursor
  3567  0C6E                     	__end_of_lcd_set_cursor:
  3568 ;; =============== function _lcd_set_cursor ends ============
  3569                           
  3570                           	signat	_lcd_set_cursor,4216
  3571                           	global	_turnRight90
  3572                           psect	text1317,local,class=CODE,delta=2
  3573                           global __ptext1317
  3574  0732                     __ptext1317:
  3575                           
  3576 ;; *************** function _turnRight90 *****************
  3577 ;; Defined at:
  3578 ;;		line 74 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;		None               void
  3585 ;; Registers used:
  3586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3592 ;;      Params:         0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0
  3594 ;;      Temps:          0       3       0       0       0
  3595 ;;      Totals:         0       3       0       0       0
  3596 ;;Total ram usage:        3 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    4
  3599 ;; This function calls:
  3600 ;;		_drive
  3601 ;;		_waitFor
  3602 ;; This function is called by:
  3603 ;;		_goRight
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           psect	text1317
  3607                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3608                           	line	74
  3609                           	global	__size_of_turnRight90
  3610  003E                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  3611                           	
  3612  0732                     _turnRight90:	
  3613                           	opt	stack 1
  3614                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3615                           	line	75
  3616                           	
  3617  0732                     l9827:	
  3618                           ;drive.c: 75: drive(0, 25, 255, 255);
  3619  0732  3019               	movlw	(019h)
  3620  0733  1283               	bcf	status, 5	;RP0=0, select bank0
  3621  0734  1303               	bcf	status, 6	;RP1=0, select bank0
  3622  0735  00B3               	movwf	(??_turnRight90+0)+0
  3623  0736  0833               	movf	(??_turnRight90+0)+0,w
  3624  0737  00AC               	movwf	(?_drive)
  3625  0738  30FF               	movlw	(0FFh)
  3626  0739  00B4               	movwf	(??_turnRight90+1)+0
  3627  073A  0834               	movf	(??_turnRight90+1)+0,w
  3628  073B  00AD               	movwf	0+(?_drive)+01h
  3629  073C  30FF               	movlw	(0FFh)
  3630  073D  00B5               	movwf	(??_turnRight90+2)+0
  3631  073E  0835               	movf	(??_turnRight90+2)+0,w
  3632  073F  00AE               	movwf	0+(?_drive)+02h
  3633  0740  3000               	movlw	(0)
  3634  0741  120A  158A  275A   	fcall	_drive
              120A  118A         
  3635                           	line	76
  3636                           ;drive.c: 76: waitFor(157,255,169);
  3637  0746  30FF               	movlw	(0FFh)
  3638  0747  1283               	bcf	status, 5	;RP0=0, select bank0
  3639  0748  1303               	bcf	status, 6	;RP1=0, select bank0
  3640  0749  00B3               	movwf	(??_turnRight90+0)+0
  3641  074A  0833               	movf	(??_turnRight90+0)+0,w
  3642  074B  00AC               	movwf	(?_waitFor)
  3643  074C  30A9               	movlw	(0A9h)
  3644  074D  00B4               	movwf	(??_turnRight90+1)+0
  3645  074E  0834               	movf	(??_turnRight90+1)+0,w
  3646  074F  00AD               	movwf	0+(?_waitFor)+01h
  3647  0750  309D               	movlw	(09Dh)
  3648  0751  120A  158A  264D   	fcall	_waitFor
              120A  118A         
  3649                           	line	77
  3650                           ;drive.c: 77: drive(0, 0, 0, 0);
  3651  0756  1283               	bcf	status, 5	;RP0=0, select bank0
  3652  0757  1303               	bcf	status, 6	;RP1=0, select bank0
  3653  0758  01AC               	clrf	(?_drive)
  3654  0759  01AD               	clrf	0+(?_drive)+01h
  3655  075A  01AE               	clrf	0+(?_drive)+02h
  3656  075B  3000               	movlw	(0)
  3657  075C  120A  158A  275A   	fcall	_drive
              120A  118A         
  3658                           	line	78
  3659                           	
  3660  0761                     l9829:	
  3661                           ;drive.c: 78: _delay((unsigned long)((6500)*(20000000/4000.0)));
  3662                           	opt asmopt_off
  3663  0761  30A5               movlw  165
  3664  0762  1283               	bcf	status, 5	;RP0=0, select bank0
  3665  0763  1303               	bcf	status, 6	;RP1=0, select bank0
  3666  0764  00B5               movwf	((??_turnRight90+0)+0+2),f
  3667  0765  30E0               movlw	224
  3668  0766  00B4               movwf	((??_turnRight90+0)+0+1),f
  3669  0767  30FE               	movlw	254
  3670  0768  00B3               movwf	((??_turnRight90+0)+0),f
  3671  0769                     u4087:
  3672  0769  0BB3               	decfsz	((??_turnRight90+0)+0),f
  3673  076A  2F69               	goto	u4087
  3674  076B  0BB4               	decfsz	((??_turnRight90+0)+0+1),f
  3675  076C  2F69               	goto	u4087
  3676  076D  0BB5               	decfsz	((??_turnRight90+0)+0+2),f
  3677  076E  2F69               	goto	u4087
  3678                           opt asmopt_on
  3679                           
  3680                           	line	79
  3681                           	
  3682  076F                     l1420:	
  3683  076F  0008               	return
  3684                           	opt stack 0
  3685                           GLOBAL	__end_of_turnRight90
  3686  0770                     	__end_of_turnRight90:
  3687 ;; =============== function _turnRight90 ends ============
  3688                           
  3689                           	signat	_turnRight90,88
  3690                           	global	_turnLeft90
  3691                           psect	text1318,local,class=CODE,delta=2
  3692                           global __ptext1318
  3693  0F91                     __ptext1318:
  3694                           
  3695 ;; *************** function _turnLeft90 *****************
  3696 ;; Defined at:
  3697 ;;		line 66 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;		None               void
  3704 ;; Registers used:
  3705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0
  3713 ;;      Temps:          0       3       0       0       0
  3714 ;;      Totals:         0       3       0       0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    4
  3718 ;; This function calls:
  3719 ;;		_drive
  3720 ;;		_waitFor
  3721 ;; This function is called by:
  3722 ;;		_goLeft
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           psect	text1318
  3726                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3727                           	line	66
  3728                           	global	__size_of_turnLeft90
  3729  0037                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  3730                           	
  3731  0F91                     _turnLeft90:	
  3732                           	opt	stack 1
  3733                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3734                           	line	67
  3735                           	
  3736  0F91                     l9823:	
  3737                           ;drive.c: 67: drive(0, 25, 0, 1);
  3738  0F91  3019               	movlw	(019h)
  3739  0F92  1283               	bcf	status, 5	;RP0=0, select bank0
  3740  0F93  1303               	bcf	status, 6	;RP1=0, select bank0
  3741  0F94  00B3               	movwf	(??_turnLeft90+0)+0
  3742  0F95  0833               	movf	(??_turnLeft90+0)+0,w
  3743  0F96  00AC               	movwf	(?_drive)
  3744  0F97  01AD               	clrf	0+(?_drive)+01h
  3745  0F98  01AE               	clrf	0+(?_drive)+02h
  3746  0F99  1403               	bsf	status,0
  3747  0F9A  0DAE               	rlf	0+(?_drive)+02h,f
  3748  0F9B  3000               	movlw	(0)
  3749  0F9C  120A  158A  275A   	fcall	_drive
              120A  158A         
  3750                           	line	68
  3751                           ;drive.c: 68: waitFor(157,0,85);
  3752  0FA1  1283               	bcf	status, 5	;RP0=0, select bank0
  3753  0FA2  1303               	bcf	status, 6	;RP1=0, select bank0
  3754  0FA3  01AC               	clrf	(?_waitFor)
  3755  0FA4  3055               	movlw	(055h)
  3756  0FA5  00B3               	movwf	(??_turnLeft90+0)+0
  3757  0FA6  0833               	movf	(??_turnLeft90+0)+0,w
  3758  0FA7  00AD               	movwf	0+(?_waitFor)+01h
  3759  0FA8  309D               	movlw	(09Dh)
  3760  0FA9  120A  158A  264D   	fcall	_waitFor
              120A  158A         
  3761                           	line	69
  3762                           ;drive.c: 69: drive(0, 0, 0, 0);
  3763  0FAE  1283               	bcf	status, 5	;RP0=0, select bank0
  3764  0FAF  1303               	bcf	status, 6	;RP1=0, select bank0
  3765  0FB0  01AC               	clrf	(?_drive)
  3766  0FB1  01AD               	clrf	0+(?_drive)+01h
  3767  0FB2  01AE               	clrf	0+(?_drive)+02h
  3768  0FB3  3000               	movlw	(0)
  3769  0FB4  120A  158A  275A   	fcall	_drive
              120A  158A         
  3770                           	line	70
  3771                           	
  3772  0FB9                     l9825:	
  3773                           ;drive.c: 70: _delay((unsigned long)((6500)*(20000000/4000.0)));
  3774                           	opt asmopt_off
  3775  0FB9  30A5               movlw  165
  3776  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  3777  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  3778  0FBC  00B5               movwf	((??_turnLeft90+0)+0+2),f
  3779  0FBD  30E0               movlw	224
  3780  0FBE  00B4               movwf	((??_turnLeft90+0)+0+1),f
  3781  0FBF  30FE               	movlw	254
  3782  0FC0  00B3               movwf	((??_turnLeft90+0)+0),f
  3783  0FC1                     u4097:
  3784  0FC1  0BB3               	decfsz	((??_turnLeft90+0)+0),f
  3785  0FC2  2FC1               	goto	u4097
  3786  0FC3  0BB4               	decfsz	((??_turnLeft90+0)+0+1),f
  3787  0FC4  2FC1               	goto	u4097
  3788  0FC5  0BB5               	decfsz	((??_turnLeft90+0)+0+2),f
  3789  0FC6  2FC1               	goto	u4097
  3790                           opt asmopt_on
  3791                           
  3792                           	line	71
  3793                           	
  3794  0FC7                     l1417:	
  3795  0FC7  0008               	return
  3796                           	opt stack 0
  3797                           GLOBAL	__end_of_turnLeft90
  3798  0FC8                     	__end_of_turnLeft90:
  3799 ;; =============== function _turnLeft90 ends ============
  3800                           
  3801                           	signat	_turnLeft90,88
  3802                           	global	_turnAround
  3803                           psect	text1319,local,class=CODE,delta=2
  3804                           global __ptext1319
  3805  05E5                     __ptext1319:
  3806                           
  3807 ;; *************** function _turnAround *****************
  3808 ;; Defined at:
  3809 ;;		line 57 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;		None               void
  3816 ;; Registers used:
  3817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0
  3825 ;;      Temps:          0       3       0       0       0
  3826 ;;      Totals:         0       3       0       0       0
  3827 ;;Total ram usage:        3 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    4
  3830 ;; This function calls:
  3831 ;;		_drive
  3832 ;;		_waitFor
  3833 ;; This function is called by:
  3834 ;;		_goBackward
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           psect	text1319
  3838                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3839                           	line	57
  3840                           	global	__size_of_turnAround
  3841  0045                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  3842                           	
  3843  05E5                     _turnAround:	
  3844                           	opt	stack 1
  3845                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3846                           	line	58
  3847                           	
  3848  05E5                     l9817:	
  3849                           ;drive.c: 58: drive(0, 25, 0, 1);
  3850  05E5  3019               	movlw	(019h)
  3851  05E6  1283               	bcf	status, 5	;RP0=0, select bank0
  3852  05E7  1303               	bcf	status, 6	;RP1=0, select bank0
  3853  05E8  00B3               	movwf	(??_turnAround+0)+0
  3854  05E9  0833               	movf	(??_turnAround+0)+0,w
  3855  05EA  00AC               	movwf	(?_drive)
  3856  05EB  01AD               	clrf	0+(?_drive)+01h
  3857  05EC  01AE               	clrf	0+(?_drive)+02h
  3858  05ED  1403               	bsf	status,0
  3859  05EE  0DAE               	rlf	0+(?_drive)+02h,f
  3860  05EF  3000               	movlw	(0)
  3861  05F0  120A  158A  275A   	fcall	_drive
              120A  118A         
  3862                           	line	59
  3863                           ;drive.c: 59: waitFor(157,0,170);
  3864  05F5  1283               	bcf	status, 5	;RP0=0, select bank0
  3865  05F6  1303               	bcf	status, 6	;RP1=0, select bank0
  3866  05F7  01AC               	clrf	(?_waitFor)
  3867  05F8  30AA               	movlw	(0AAh)
  3868  05F9  00B3               	movwf	(??_turnAround+0)+0
  3869  05FA  0833               	movf	(??_turnAround+0)+0,w
  3870  05FB  00AD               	movwf	0+(?_waitFor)+01h
  3871  05FC  309D               	movlw	(09Dh)
  3872  05FD  120A  158A  264D   	fcall	_waitFor
              120A  118A         
  3873                           	line	60
  3874                           ;drive.c: 60: drive(0, 0, 0, 0);
  3875  0602  1283               	bcf	status, 5	;RP0=0, select bank0
  3876  0603  1303               	bcf	status, 6	;RP1=0, select bank0
  3877  0604  01AC               	clrf	(?_drive)
  3878  0605  01AD               	clrf	0+(?_drive)+01h
  3879  0606  01AE               	clrf	0+(?_drive)+02h
  3880  0607  3000               	movlw	(0)
  3881  0608  120A  158A  275A   	fcall	_drive
              120A  118A         
  3882                           	line	61
  3883                           	
  3884  060D                     l9819:	
  3885                           ;drive.c: 61: _delay((unsigned long)((6500)*(20000000/4000.0)));
  3886                           	opt asmopt_off
  3887  060D  30A5               movlw  165
  3888  060E  1283               	bcf	status, 5	;RP0=0, select bank0
  3889  060F  1303               	bcf	status, 6	;RP1=0, select bank0
  3890  0610  00B5               movwf	((??_turnAround+0)+0+2),f
  3891  0611  30E0               movlw	224
  3892  0612  00B4               movwf	((??_turnAround+0)+0+1),f
  3893  0613  30FE               	movlw	254
  3894  0614  00B3               movwf	((??_turnAround+0)+0),f
  3895  0615                     u4107:
  3896  0615  0BB3               	decfsz	((??_turnAround+0)+0),f
  3897  0616  2E15               	goto	u4107
  3898  0617  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  3899  0618  2E15               	goto	u4107
  3900  0619  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  3901  061A  2E15               	goto	u4107
  3902                           opt asmopt_on
  3903                           
  3904                           	line	62
  3905                           	
  3906  061B                     l9821:	
  3907                           ;drive.c: 62: _delay((unsigned long)((6500)*(20000000/4000.0)));
  3908                           	opt asmopt_off
  3909  061B  30A5               movlw  165
  3910  061C  1283               	bcf	status, 5	;RP0=0, select bank0
  3911  061D  1303               	bcf	status, 6	;RP1=0, select bank0
  3912  061E  00B5               movwf	((??_turnAround+0)+0+2),f
  3913  061F  30E0               movlw	224
  3914  0620  00B4               movwf	((??_turnAround+0)+0+1),f
  3915  0621  30FE               	movlw	254
  3916  0622  00B3               movwf	((??_turnAround+0)+0),f
  3917  0623                     u4117:
  3918  0623  0BB3               	decfsz	((??_turnAround+0)+0),f
  3919  0624  2E23               	goto	u4117
  3920  0625  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  3921  0626  2E23               	goto	u4117
  3922  0627  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  3923  0628  2E23               	goto	u4117
  3924                           opt asmopt_on
  3925                           
  3926                           	line	63
  3927                           	
  3928  0629                     l1414:	
  3929  0629  0008               	return
  3930                           	opt stack 0
  3931                           GLOBAL	__end_of_turnAround
  3932  062A                     	__end_of_turnAround:
  3933 ;; =============== function _turnAround ends ============
  3934                           
  3935                           	signat	_turnAround,88
  3936                           	global	_driveForDistance
  3937                           psect	text1320,local,class=CODE,delta=2
  3938                           global __ptext1320
  3939  049F                     __ptext1320:
  3940                           
  3941 ;; *************** function _driveForDistance *****************
  3942 ;; Defined at:
  3943 ;;		line 22 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  moveDistance    2   19[BANK0 ] int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  distance        2   25[BANK0 ] int 
  3948 ;;  deltaDistanc    2   23[BANK0 ] int 
  3949 ;;  low             1   28[BANK0 ] volatile unsigned char 
  3950 ;;  high            1   27[BANK0 ] volatile unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;		None               void
  3953 ;; Registers used:
  3954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3960 ;;      Params:         0       2       0       0       0
  3961 ;;      Locals:         0       6       0       0       0
  3962 ;;      Temps:          0       2       0       0       0
  3963 ;;      Totals:         0      10       0       0       0
  3964 ;;Total ram usage:       10 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    4
  3967 ;; This function calls:
  3968 ;;		_drive
  3969 ;;		_ser_putch
  3970 ;;		_ser_getch
  3971 ;; This function is called by:
  3972 ;;		_goBackward
  3973 ;;		_goForward
  3974 ;;		_goLeft
  3975 ;;		_goRight
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           psect	text1320
  3979                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  3980                           	line	22
  3981                           	global	__size_of_driveForDistance
  3982  006D                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  3983                           	
  3984  049F                     _driveForDistance:	
  3985                           	opt	stack 1
  3986                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3987                           	line	25
  3988                           	
  3989  049F                     l9797:	
  3990                           ;drive.c: 24: volatile char high, low;
  3991                           ;drive.c: 25: int deltaDistance = 0;
  3992  049F  1283               	bcf	status, 5	;RP0=0, select bank0
  3993  04A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3994  04A1  01B7               	clrf	(driveForDistance@deltaDistance)
  3995  04A2  01B8               	clrf	(driveForDistance@deltaDistance+1)
  3996                           	line	26
  3997                           ;drive.c: 26: int distance = 0;
  3998  04A3  01B9               	clrf	(driveForDistance@distance)
  3999  04A4  01BA               	clrf	(driveForDistance@distance+1)
  4000                           	line	28
  4001                           	
  4002  04A5                     l9799:	
  4003                           ;drive.c: 28: moving = 1;
  4004  04A5  1770               	bsf	(_moving/8),(_moving)&7
  4005                           	line	29
  4006                           	
  4007  04A6                     l9801:	
  4008                           ;drive.c: 29: drive(0, 250, 128, 0);
  4009  04A6  30FA               	movlw	(0FAh)
  4010  04A7  00B5               	movwf	(??_driveForDistance+0)+0
  4011  04A8  0835               	movf	(??_driveForDistance+0)+0,w
  4012  04A9  00AC               	movwf	(?_drive)
  4013  04AA  3080               	movlw	(080h)
  4014  04AB  00B6               	movwf	(??_driveForDistance+1)+0
  4015  04AC  0836               	movf	(??_driveForDistance+1)+0,w
  4016  04AD  00AD               	movwf	0+(?_drive)+01h
  4017  04AE  01AE               	clrf	0+(?_drive)+02h
  4018  04AF  3000               	movlw	(0)
  4019  04B0  120A  158A  275A   	fcall	_drive
              120A  118A         
  4020                           	line	32
  4021                           ;drive.c: 32: while(moving)
  4022  04B5  2D06               	goto	l9815
  4023                           	
  4024  04B6                     l1405:	
  4025                           	line	36
  4026                           	
  4027  04B6                     l9803:	
  4028                           ;drive.c: 33: {
  4029                           ;drive.c: 36: ser_putch(142);
  4030  04B6  308E               	movlw	(08Eh)
  4031  04B7  120A  158A  252E   	fcall	_ser_putch
              120A  118A         
  4032                           	line	37
  4033                           ;drive.c: 37: ser_putch(19);
  4034  04BC  3013               	movlw	(013h)
  4035  04BD  120A  158A  252E   	fcall	_ser_putch
              120A  118A         
  4036                           	line	38
  4037                           ;drive.c: 38: high = ser_getch();
  4038  04C2  120A  158A  254F   	fcall	_ser_getch
              120A  118A         
  4039  04C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4040  04C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4041  04C9  00B5               	movwf	(??_driveForDistance+0)+0
  4042  04CA  0835               	movf	(??_driveForDistance+0)+0,w
  4043  04CB  00BB               	movwf	(driveForDistance@high)	;volatile
  4044                           	line	39
  4045                           ;drive.c: 39: low = ser_getch();
  4046  04CC  120A  158A  254F   	fcall	_ser_getch
              120A  118A         
  4047  04D1  1283               	bcf	status, 5	;RP0=0, select bank0
  4048  04D2  1303               	bcf	status, 6	;RP1=0, select bank0
  4049  04D3  00B5               	movwf	(??_driveForDistance+0)+0
  4050  04D4  0835               	movf	(??_driveForDistance+0)+0,w
  4051  04D5  00BC               	movwf	(driveForDistance@low)	;volatile
  4052                           	line	40
  4053                           	
  4054  04D6                     l9805:	
  4055                           ;drive.c: 40: deltaDistance = high*256 + low;
  4056  04D6  083B               	movf	(driveForDistance@high),w	;volatile
  4057  04D7  00B5               	movwf	(??_driveForDistance+0)+0
  4058  04D8  01B6               	clrf	(??_driveForDistance+0)+0+1
  4059  04D9  0835               	movf	(??_driveForDistance+0)+0,w
  4060  04DA  00B6               	movwf	(??_driveForDistance+0)+1
  4061  04DB  01B5               	clrf	(??_driveForDistance+0)+0
  4062  04DC  083C               	movf	(driveForDistance@low),w	;volatile
  4063  04DD  0735               	addwf	0+(??_driveForDistance+0)+0,w
  4064  04DE  00B7               	movwf	(driveForDistance@deltaDistance)
  4065  04DF  3000               	movlw	0
  4066  04E0  1803               	skipnc
  4067  04E1  3001               	movlw	1
  4068  04E2  0736               	addwf	1+(??_driveForDistance+0)+0,w
  4069  04E3  00B8               	movwf	1+(driveForDistance@deltaDistance)
  4070                           	line	41
  4071                           	
  4072  04E4                     l9807:	
  4073                           ;drive.c: 41: distance += deltaDistance;
  4074  04E4  0837               	movf	(driveForDistance@deltaDistance),w
  4075  04E5  07B9               	addwf	(driveForDistance@distance),f
  4076  04E6  1803               	skipnc
  4077  04E7  0ABA               	incf	(driveForDistance@distance+1),f
  4078  04E8  0838               	movf	(driveForDistance@deltaDistance+1),w
  4079  04E9  07BA               	addwf	(driveForDistance@distance+1),f
  4080                           	line	43
  4081                           	
  4082  04EA                     l9809:	
  4083                           ;drive.c: 43: if(distance >= moveDistance)
  4084  04EA  083A               	movf	(driveForDistance@distance+1),w
  4085  04EB  3A80               	xorlw	80h
  4086  04EC  00B5               	movwf	(??_driveForDistance+0)+0
  4087  04ED  0834               	movf	(driveForDistance@moveDistance+1),w
  4088  04EE  3A80               	xorlw	80h
  4089  04EF  0235               	subwf	(??_driveForDistance+0)+0,w
  4090  04F0  1D03               	skipz
  4091  04F1  2CF4               	goto	u3885
  4092  04F2  0833               	movf	(driveForDistance@moveDistance),w
  4093  04F3  0239               	subwf	(driveForDistance@distance),w
  4094  04F4                     u3885:
  4095                           
  4096  04F4  1C03               	skipc
  4097  04F5  2CF7               	goto	u3881
  4098  04F6  2CF8               	goto	u3880
  4099  04F7                     u3881:
  4100  04F7  2D06               	goto	l9815
  4101  04F8                     u3880:
  4102                           	line	45
  4103                           	
  4104  04F8                     l9811:	
  4105                           ;drive.c: 44: {
  4106                           ;drive.c: 45: drive(0, 0, 0, 0);
  4107  04F8  1283               	bcf	status, 5	;RP0=0, select bank0
  4108  04F9  1303               	bcf	status, 6	;RP1=0, select bank0
  4109  04FA  01AC               	clrf	(?_drive)
  4110  04FB  01AD               	clrf	0+(?_drive)+01h
  4111  04FC  01AE               	clrf	0+(?_drive)+02h
  4112  04FD  3000               	movlw	(0)
  4113  04FE  120A  158A  275A   	fcall	_drive
              120A  118A         
  4114                           	line	46
  4115                           	
  4116  0503                     l9813:	
  4117                           ;drive.c: 46: moving = 0;
  4118  0503  1370               	bcf	(_moving/8),(_moving)&7
  4119  0504  2D06               	goto	l9815
  4120                           	line	47
  4121                           	
  4122  0505                     l1406:	
  4123  0505  2D06               	goto	l9815
  4124                           	line	48
  4125                           	
  4126  0506                     l1404:	
  4127                           	line	32
  4128                           	
  4129  0506                     l9815:	
  4130  0506  1B70               	btfsc	(_moving/8),(_moving)&7
  4131  0507  2D09               	goto	u3891
  4132  0508  2D0A               	goto	u3890
  4133  0509                     u3891:
  4134  0509  2CB6               	goto	l9803
  4135  050A                     u3890:
  4136  050A  2D0B               	goto	l1408
  4137                           	
  4138  050B                     l1407:	
  4139                           	line	49
  4140                           	
  4141  050B                     l1408:	
  4142  050B  0008               	return
  4143                           	opt stack 0
  4144                           GLOBAL	__end_of_driveForDistance
  4145  050C                     	__end_of_driveForDistance:
  4146 ;; =============== function _driveForDistance ends ============
  4147                           
  4148                           	signat	_driveForDistance,4216
  4149                           	global	_adc_read_channel
  4150                           psect	text1321,local,class=CODE,delta=2
  4151                           global __ptext1321
  4152  06B2                     __ptext1321:
  4153                           
  4154 ;; *************** function _adc_read_channel *****************
  4155 ;; Defined at:
  4156 ;;		line 7 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\adc.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  channel         1    wreg     unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  channel         1   40[BANK0 ] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  2   37[BANK0 ] int 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         0       2       0       0       0
  4171 ;;      Locals:         0       1       0       0       0
  4172 ;;      Temps:          0       1       0       0       0
  4173 ;;      Totals:         0       4       0       0       0
  4174 ;;Total ram usage:        4 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    4
  4177 ;; This function calls:
  4178 ;;		_adc_read
  4179 ;; This function is called by:
  4180 ;;		_readIR
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           psect	text1321
  4184                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\adc.c"
  4185                           	line	7
  4186                           	global	__size_of_adc_read_channel
  4187  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  4188                           	
  4189  06B2                     _adc_read_channel:	
  4190                           	opt	stack 0
  4191                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4192                           ;adc_read_channel@channel stored from wreg
  4193  06B2  1283               	bcf	status, 5	;RP0=0, select bank0
  4194  06B3  1303               	bcf	status, 6	;RP1=0, select bank0
  4195  06B4  00C8               	movwf	(adc_read_channel@channel)
  4196                           	line	8
  4197                           	
  4198  06B5                     l9781:	
  4199                           ;adc.c: 8: switch(channel)
  4200  06B5  2ECF               	goto	l9789
  4201                           	line	10
  4202                           ;adc.c: 9: {
  4203                           ;adc.c: 10: case 0:
  4204                           	
  4205  06B6                     l690:	
  4206                           	line	11
  4207                           ;adc.c: 11: CHS0 = 0;
  4208  06B6  119F               	bcf	(251/8),(251)&7
  4209                           	line	12
  4210                           ;adc.c: 12: CHS1 = 0;
  4211  06B7  121F               	bcf	(252/8),(252)&7
  4212                           	line	13
  4213                           ;adc.c: 13: CHS2 = 0;
  4214  06B8  129F               	bcf	(253/8),(253)&7
  4215                           	line	14
  4216                           ;adc.c: 14: break;
  4217  06B9  2EE0               	goto	l9791
  4218                           	line	15
  4219                           ;adc.c: 15: case 1:
  4220                           	
  4221  06BA                     l692:	
  4222                           	line	16
  4223                           ;adc.c: 16: CHS0 = 1;
  4224  06BA  159F               	bsf	(251/8),(251)&7
  4225                           	line	17
  4226                           ;adc.c: 17: CHS1 = 0;
  4227  06BB  121F               	bcf	(252/8),(252)&7
  4228                           	line	18
  4229                           ;adc.c: 18: CHS2 = 0;
  4230  06BC  129F               	bcf	(253/8),(253)&7
  4231                           	line	19
  4232                           ;adc.c: 19: break;
  4233  06BD  2EE0               	goto	l9791
  4234                           	line	20
  4235                           ;adc.c: 20: case 2:
  4236                           	
  4237  06BE                     l693:	
  4238                           	line	21
  4239                           ;adc.c: 21: CHS0 = 0;
  4240  06BE  119F               	bcf	(251/8),(251)&7
  4241                           	line	22
  4242                           ;adc.c: 22: CHS1 = 1;
  4243  06BF  161F               	bsf	(252/8),(252)&7
  4244                           	line	23
  4245                           ;adc.c: 23: CHS2 = 0;
  4246  06C0  129F               	bcf	(253/8),(253)&7
  4247                           	line	24
  4248                           ;adc.c: 24: break;
  4249  06C1  2EE0               	goto	l9791
  4250                           	line	25
  4251                           ;adc.c: 25: case 3:
  4252                           	
  4253  06C2                     l694:	
  4254                           	line	26
  4255                           ;adc.c: 26: CHS0 = 1;
  4256  06C2  159F               	bsf	(251/8),(251)&7
  4257                           	line	27
  4258                           ;adc.c: 27: CHS1 = 1;
  4259  06C3  161F               	bsf	(252/8),(252)&7
  4260                           	line	28
  4261                           ;adc.c: 28: CHS2 = 0;
  4262  06C4  129F               	bcf	(253/8),(253)&7
  4263                           	line	29
  4264                           ;adc.c: 29: break;
  4265  06C5  2EE0               	goto	l9791
  4266                           	line	30
  4267                           ;adc.c: 30: case 4:
  4268                           	
  4269  06C6                     l695:	
  4270                           	line	31
  4271                           ;adc.c: 31: CHS0 = 0;
  4272  06C6  119F               	bcf	(251/8),(251)&7
  4273                           	line	32
  4274                           ;adc.c: 32: CHS1 = 0;
  4275  06C7  121F               	bcf	(252/8),(252)&7
  4276                           	line	33
  4277                           ;adc.c: 33: CHS2 = 1;
  4278  06C8  169F               	bsf	(253/8),(253)&7
  4279                           	line	34
  4280                           ;adc.c: 34: break;
  4281  06C9  2EE0               	goto	l9791
  4282                           	line	37
  4283                           ;adc.c: 37: default:
  4284                           	
  4285  06CA                     l696:	
  4286                           	line	38
  4287                           	
  4288  06CA                     l9783:	
  4289                           ;adc.c: 38: return 0;
  4290  06CA  01C5               	clrf	(?_adc_read_channel)
  4291  06CB  01C6               	clrf	(?_adc_read_channel+1)
  4292  06CC  2EF2               	goto	l697
  4293                           	
  4294  06CD                     l9785:	
  4295  06CD  2EF2               	goto	l697
  4296                           	line	39
  4297                           	
  4298  06CE                     l9787:	
  4299                           ;adc.c: 39: }
  4300  06CE  2EE0               	goto	l9791
  4301                           	line	8
  4302                           	
  4303  06CF                     l689:	
  4304                           	
  4305  06CF                     l9789:	
  4306  06CF  0848               	movf	(adc_read_channel@channel),w
  4307                           	; Switch size 1, requested type "space"
  4308                           ; Number of cases is 5, Range of values is 0 to 4
  4309                           ; switch strategies available:
  4310                           ; Name         Instructions Cycles
  4311                           ; simple_byte           16     9 (average)
  4312                           ; direct_byte           23     8 (fixed)
  4313                           ; jumptable            260     6 (fixed)
  4314                           ; rangetable             9     6 (fixed)
  4315                           ; spacedrange           16     9 (fixed)
  4316                           ; locatedrange           5     3 (fixed)
  4317                           ;	Chosen strategy is simple_byte
  4318                           
  4319                           	opt asmopt_off
  4320  06D0  3A00               	xorlw	0^0	; case 0
  4321  06D1  1903               	skipnz
  4322  06D2  2EB6               	goto	l690
  4323  06D3  3A01               	xorlw	1^0	; case 1
  4324  06D4  1903               	skipnz
  4325  06D5  2EBA               	goto	l692
  4326  06D6  3A03               	xorlw	2^1	; case 2
  4327  06D7  1903               	skipnz
  4328  06D8  2EBE               	goto	l693
  4329  06D9  3A01               	xorlw	3^2	; case 3
  4330  06DA  1903               	skipnz
  4331  06DB  2EC2               	goto	l694
  4332  06DC  3A07               	xorlw	4^3	; case 4
  4333  06DD  1903               	skipnz
  4334  06DE  2EC6               	goto	l695
  4335  06DF  2ECA               	goto	l9783
  4336                           	opt asmopt_on
  4337                           
  4338                           	line	39
  4339                           	
  4340  06E0                     l691:	
  4341                           	line	41
  4342                           	
  4343  06E0                     l9791:	
  4344                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  4345                           	opt asmopt_off
  4346  06E0  3053               movlw	83
  4347  06E1  00C7               movwf	(??_adc_read_channel+0)+0,f
  4348  06E2                     u4127:
  4349  06E2  0BC7               decfsz	(??_adc_read_channel+0)+0,f
  4350  06E3  2EE2               	goto	u4127
  4351                           opt asmopt_on
  4352                           
  4353                           	line	43
  4354                           	
  4355  06E4                     l9793:	
  4356                           ;adc.c: 43: return adc_read();
  4357  06E4  120A  118A  26F3   	fcall	_adc_read
              120A  118A         
  4358  06E9  1283               	bcf	status, 5	;RP0=0, select bank0
  4359  06EA  1303               	bcf	status, 6	;RP1=0, select bank0
  4360  06EB  083A               	movf	(1+(?_adc_read)),w
  4361  06EC  01C6               	clrf	(?_adc_read_channel+1)
  4362  06ED  07C6               	addwf	(?_adc_read_channel+1)
  4363  06EE  0839               	movf	(0+(?_adc_read)),w
  4364  06EF  01C5               	clrf	(?_adc_read_channel)
  4365  06F0  07C5               	addwf	(?_adc_read_channel)
  4366                           
  4367  06F1  2EF2               	goto	l697
  4368                           	
  4369  06F2                     l9795:	
  4370                           	line	45
  4371                           	
  4372  06F2                     l697:	
  4373  06F2  0008               	return
  4374                           	opt stack 0
  4375                           GLOBAL	__end_of_adc_read_channel
  4376  06F3                     	__end_of_adc_read_channel:
  4377 ;; =============== function _adc_read_channel ends ============
  4378                           
  4379                           	signat	_adc_read_channel,4218
  4380                           	global	_convert
  4381                           psect	text1322,local,class=CODE,delta=2
  4382                           global __ptext1322
  4383  0015                     __ptext1322:
  4384                           
  4385 ;; *************** function _convert *****************
  4386 ;; Defined at:
  4387 ;;		line 11 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ir.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  adc_value       2   33[BANK0 ] int 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2   33[BANK0 ] int 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       2       0       0       0
  4402 ;;      Locals:         0       0       0       0       0
  4403 ;;      Temps:          0       2       0       0       0
  4404 ;;      Totals:         0       4       0       0       0
  4405 ;;Total ram usage:        4 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    3
  4408 ;; This function calls:
  4409 ;;		___wmul
  4410 ;;		___awdiv
  4411 ;; This function is called by:
  4412 ;;		_readIR
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           psect	text1322
  4416                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ir.c"
  4417                           	line	11
  4418                           	global	__size_of_convert
  4419  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
  4420                           	
  4421  0015                     _convert:	
  4422                           	opt	stack 1
  4423                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4424                           	line	12
  4425                           	
  4426  0015                     l9721:	
  4427                           ;ir.c: 12: if(adc_value < 82)
  4428  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  4429  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  4430  0017  0842               	movf	(convert@adc_value+1),w
  4431  0018  3A80               	xorlw	80h
  4432  0019  00FF               	movwf	btemp+1
  4433  001A  3080               	movlw	(high(052h))^80h
  4434  001B  027F               	subwf	btemp+1,w
  4435  001C  1D03               	skipz
  4436  001D  2820               	goto	u3815
  4437  001E  3052               	movlw	low(052h)
  4438  001F  0241               	subwf	(convert@adc_value),w
  4439  0020                     u3815:
  4440                           
  4441  0020  1803               	skipnc
  4442  0021  2823               	goto	u3811
  4443  0022  2824               	goto	u3810
  4444  0023                     u3811:
  4445  0023  282D               	goto	l9729
  4446  0024                     u3810:
  4447                           	line	13
  4448                           	
  4449  0024                     l9723:	
  4450                           ;ir.c: 13: return 999;
  4451  0024  30E7               	movlw	low(03E7h)
  4452  0025  1283               	bcf	status, 5	;RP0=0, select bank0
  4453  0026  1303               	bcf	status, 6	;RP1=0, select bank0
  4454  0027  00C1               	movwf	(?_convert)
  4455  0028  3003               	movlw	high(03E7h)
  4456  0029  00C2               	movwf	((?_convert))+1
  4457  002A  29E3               	goto	l5812
  4458                           	
  4459  002B                     l9725:	
  4460  002B  29E3               	goto	l5812
  4461                           	
  4462  002C                     l9727:	
  4463  002C  29E3               	goto	l5812
  4464                           	line	14
  4465                           	
  4466  002D                     l5811:	
  4467                           	
  4468  002D                     l9729:	
  4469                           ;ir.c: 14: else if(adc_value < 133)
  4470  002D  1283               	bcf	status, 5	;RP0=0, select bank0
  4471  002E  1303               	bcf	status, 6	;RP1=0, select bank0
  4472  002F  0842               	movf	(convert@adc_value+1),w
  4473  0030  3A80               	xorlw	80h
  4474  0031  00FF               	movwf	btemp+1
  4475  0032  3080               	movlw	(high(085h))^80h
  4476  0033  027F               	subwf	btemp+1,w
  4477  0034  1D03               	skipz
  4478  0035  2838               	goto	u3825
  4479  0036  3085               	movlw	low(085h)
  4480  0037  0241               	subwf	(convert@adc_value),w
  4481  0038                     u3825:
  4482                           
  4483  0038  1803               	skipnc
  4484  0039  283B               	goto	u3821
  4485  003A  283C               	goto	u3820
  4486  003B                     u3821:
  4487  003B  2874               	goto	l9737
  4488  003C                     u3820:
  4489                           	line	15
  4490                           	
  4491  003C                     l9731:	
  4492                           ;ir.c: 15: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
  4493  003C  3033               	movlw	low(033h)
  4494  003D  1283               	bcf	status, 5	;RP0=0, select bank0
  4495  003E  1303               	bcf	status, 6	;RP1=0, select bank0
  4496  003F  00B0               	movwf	(?___awdiv)
  4497  0040  3000               	movlw	high(033h)
  4498  0041  00B1               	movwf	((?___awdiv))+1
  4499  0042  0941               	comf	(convert@adc_value),w
  4500  0043  00C3               	movwf	(??_convert+0)+0
  4501  0044  0942               	comf	(convert@adc_value+1),w
  4502  0045  00C4               	movwf	((??_convert+0)+0+1)
  4503  0046  0AC3               	incf	(??_convert+0)+0,f
  4504  0047  1903               	skipnz
  4505  0048  0AC4               	incf	((??_convert+0)+0+1),f
  4506  0049  0843               	movf	0+(??_convert+0)+0,w
  4507  004A  3E85               	addlw	low(085h)
  4508  004B  00AA               	movwf	(?___wmul)
  4509  004C  0844               	movf	1+(??_convert+0)+0,w
  4510  004D  1803               	skipnc
  4511  004E  3E01               	addlw	1
  4512  004F  3E00               	addlw	high(085h)
  4513  0050  00AB               	movwf	1+(?___wmul)
  4514  0051  3032               	movlw	low(032h)
  4515  0052  00AC               	movwf	0+(?___wmul)+02h
  4516  0053  3000               	movlw	high(032h)
  4517  0054  00AD               	movwf	(0+(?___wmul)+02h)+1
  4518  0055  120A  158A  26CA   	fcall	___wmul
              120A  118A         
  4519  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  4520  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  4521  005C  082B               	movf	(1+(?___wmul)),w
  4522  005D  01B3               	clrf	1+(?___awdiv)+02h
  4523  005E  07B3               	addwf	1+(?___awdiv)+02h
  4524  005F  082A               	movf	(0+(?___wmul)),w
  4525  0060  01B2               	clrf	0+(?___awdiv)+02h
  4526  0061  07B2               	addwf	0+(?___awdiv)+02h
  4527                           
  4528  0062  120A  118A  23B8   	fcall	___awdiv
              120A  118A         
  4529  0067  1283               	bcf	status, 5	;RP0=0, select bank0
  4530  0068  1303               	bcf	status, 6	;RP1=0, select bank0
  4531  0069  0830               	movf	(0+(?___awdiv)),w
  4532  006A  3E61               	addlw	low(061h)
  4533  006B  00C1               	movwf	(?_convert)
  4534  006C  0831               	movf	(1+(?___awdiv)),w
  4535  006D  1803               	skipnc
  4536  006E  3E01               	addlw	1
  4537  006F  3E00               	addlw	high(061h)
  4538  0070  00C2               	movwf	1+(?_convert)
  4539  0071  29E3               	goto	l5812
  4540                           	
  4541  0072                     l9733:	
  4542  0072  29E3               	goto	l5812
  4543                           	
  4544  0073                     l9735:	
  4545  0073  29E3               	goto	l5812
  4546                           	line	16
  4547                           	
  4548  0074                     l5814:	
  4549                           	
  4550  0074                     l9737:	
  4551                           ;ir.c: 16: else if(adc_value < 184)
  4552  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  4553  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  4554  0076  0842               	movf	(convert@adc_value+1),w
  4555  0077  3A80               	xorlw	80h
  4556  0078  00FF               	movwf	btemp+1
  4557  0079  3080               	movlw	(high(0B8h))^80h
  4558  007A  027F               	subwf	btemp+1,w
  4559  007B  1D03               	skipz
  4560  007C  287F               	goto	u3835
  4561  007D  30B8               	movlw	low(0B8h)
  4562  007E  0241               	subwf	(convert@adc_value),w
  4563  007F                     u3835:
  4564                           
  4565  007F  1803               	skipnc
  4566  0080  2882               	goto	u3831
  4567  0081  2883               	goto	u3830
  4568  0082                     u3831:
  4569  0082  28BB               	goto	l9745
  4570  0083                     u3830:
  4571                           	line	17
  4572                           	
  4573  0083                     l9739:	
  4574                           ;ir.c: 17: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
  4575  0083  3033               	movlw	low(033h)
  4576  0084  1283               	bcf	status, 5	;RP0=0, select bank0
  4577  0085  1303               	bcf	status, 6	;RP1=0, select bank0
  4578  0086  00B0               	movwf	(?___awdiv)
  4579  0087  3000               	movlw	high(033h)
  4580  0088  00B1               	movwf	((?___awdiv))+1
  4581  0089  0941               	comf	(convert@adc_value),w
  4582  008A  00C3               	movwf	(??_convert+0)+0
  4583  008B  0942               	comf	(convert@adc_value+1),w
  4584  008C  00C4               	movwf	((??_convert+0)+0+1)
  4585  008D  0AC3               	incf	(??_convert+0)+0,f
  4586  008E  1903               	skipnz
  4587  008F  0AC4               	incf	((??_convert+0)+0+1),f
  4588  0090  0843               	movf	0+(??_convert+0)+0,w
  4589  0091  3EB8               	addlw	low(0B8h)
  4590  0092  00AA               	movwf	(?___wmul)
  4591  0093  0844               	movf	1+(??_convert+0)+0,w
  4592  0094  1803               	skipnc
  4593  0095  3E01               	addlw	1
  4594  0096  3E00               	addlw	high(0B8h)
  4595  0097  00AB               	movwf	1+(?___wmul)
  4596  0098  301E               	movlw	low(01Eh)
  4597  0099  00AC               	movwf	0+(?___wmul)+02h
  4598  009A  3000               	movlw	high(01Eh)
  4599  009B  00AD               	movwf	(0+(?___wmul)+02h)+1
  4600  009C  120A  158A  26CA   	fcall	___wmul
              120A  118A         
  4601  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  4602  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  4603  00A3  082B               	movf	(1+(?___wmul)),w
  4604  00A4  01B3               	clrf	1+(?___awdiv)+02h
  4605  00A5  07B3               	addwf	1+(?___awdiv)+02h
  4606  00A6  082A               	movf	(0+(?___wmul)),w
  4607  00A7  01B2               	clrf	0+(?___awdiv)+02h
  4608  00A8  07B2               	addwf	0+(?___awdiv)+02h
  4609                           
  4610  00A9  120A  118A  23B8   	fcall	___awdiv
              120A  118A         
  4611  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  4612  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  4613  00B0  0830               	movf	(0+(?___awdiv)),w
  4614  00B1  3E43               	addlw	low(043h)
  4615  00B2  00C1               	movwf	(?_convert)
  4616  00B3  0831               	movf	(1+(?___awdiv)),w
  4617  00B4  1803               	skipnc
  4618  00B5  3E01               	addlw	1
  4619  00B6  3E00               	addlw	high(043h)
  4620  00B7  00C2               	movwf	1+(?_convert)
  4621  00B8  29E3               	goto	l5812
  4622                           	
  4623  00B9                     l9741:	
  4624  00B9  29E3               	goto	l5812
  4625                           	
  4626  00BA                     l9743:	
  4627  00BA  29E3               	goto	l5812
  4628                           	line	18
  4629                           	
  4630  00BB                     l5816:	
  4631                           	
  4632  00BB                     l9745:	
  4633                           ;ir.c: 18: else if(adc_value < 256)
  4634  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  4635  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  4636  00BD  0842               	movf	(convert@adc_value+1),w
  4637  00BE  3A80               	xorlw	80h
  4638  00BF  00FF               	movwf	btemp+1
  4639  00C0  3081               	movlw	(high(0100h))^80h
  4640  00C1  027F               	subwf	btemp+1,w
  4641  00C2  1D03               	skipz
  4642  00C3  28C6               	goto	u3845
  4643  00C4  3000               	movlw	low(0100h)
  4644  00C5  0241               	subwf	(convert@adc_value),w
  4645  00C6                     u3845:
  4646                           
  4647  00C6  1803               	skipnc
  4648  00C7  28C9               	goto	u3841
  4649  00C8  28CA               	goto	u3840
  4650  00C9                     u3841:
  4651  00C9  2902               	goto	l9753
  4652  00CA                     u3840:
  4653                           	line	19
  4654                           	
  4655  00CA                     l9747:	
  4656                           ;ir.c: 19: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
  4657  00CA  3048               	movlw	low(048h)
  4658  00CB  1283               	bcf	status, 5	;RP0=0, select bank0
  4659  00CC  1303               	bcf	status, 6	;RP1=0, select bank0
  4660  00CD  00B0               	movwf	(?___awdiv)
  4661  00CE  3000               	movlw	high(048h)
  4662  00CF  00B1               	movwf	((?___awdiv))+1
  4663  00D0  0941               	comf	(convert@adc_value),w
  4664  00D1  00C3               	movwf	(??_convert+0)+0
  4665  00D2  0942               	comf	(convert@adc_value+1),w
  4666  00D3  00C4               	movwf	((??_convert+0)+0+1)
  4667  00D4  0AC3               	incf	(??_convert+0)+0,f
  4668  00D5  1903               	skipnz
  4669  00D6  0AC4               	incf	((??_convert+0)+0+1),f
  4670  00D7  0843               	movf	0+(??_convert+0)+0,w
  4671  00D8  3E00               	addlw	low(0100h)
  4672  00D9  00AA               	movwf	(?___wmul)
  4673  00DA  0844               	movf	1+(??_convert+0)+0,w
  4674  00DB  1803               	skipnc
  4675  00DC  3E01               	addlw	1
  4676  00DD  3E01               	addlw	high(0100h)
  4677  00DE  00AB               	movwf	1+(?___wmul)
  4678  00DF  3014               	movlw	low(014h)
  4679  00E0  00AC               	movwf	0+(?___wmul)+02h
  4680  00E1  3000               	movlw	high(014h)
  4681  00E2  00AD               	movwf	(0+(?___wmul)+02h)+1
  4682  00E3  120A  158A  26CA   	fcall	___wmul
              120A  118A         
  4683  00E8  1283               	bcf	status, 5	;RP0=0, select bank0
  4684  00E9  1303               	bcf	status, 6	;RP1=0, select bank0
  4685  00EA  082B               	movf	(1+(?___wmul)),w
  4686  00EB  01B3               	clrf	1+(?___awdiv)+02h
  4687  00EC  07B3               	addwf	1+(?___awdiv)+02h
  4688  00ED  082A               	movf	(0+(?___wmul)),w
  4689  00EE  01B2               	clrf	0+(?___awdiv)+02h
  4690  00EF  07B2               	addwf	0+(?___awdiv)+02h
  4691                           
  4692  00F0  120A  118A  23B8   	fcall	___awdiv
              120A  118A         
  4693  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
  4694  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
  4695  00F7  0830               	movf	(0+(?___awdiv)),w
  4696  00F8  3E2E               	addlw	low(02Eh)
  4697  00F9  00C1               	movwf	(?_convert)
  4698  00FA  0831               	movf	(1+(?___awdiv)),w
  4699  00FB  1803               	skipnc
  4700  00FC  3E01               	addlw	1
  4701  00FD  3E00               	addlw	high(02Eh)
  4702  00FE  00C2               	movwf	1+(?_convert)
  4703  00FF  29E3               	goto	l5812
  4704                           	
  4705  0100                     l9749:	
  4706  0100  29E3               	goto	l5812
  4707                           	
  4708  0101                     l9751:	
  4709  0101  29E3               	goto	l5812
  4710                           	line	20
  4711                           	
  4712  0102                     l5818:	
  4713                           	
  4714  0102                     l9753:	
  4715                           ;ir.c: 20: else if(adc_value < 317)
  4716  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  4717  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  4718  0104  0842               	movf	(convert@adc_value+1),w
  4719  0105  3A80               	xorlw	80h
  4720  0106  00FF               	movwf	btemp+1
  4721  0107  3081               	movlw	(high(013Dh))^80h
  4722  0108  027F               	subwf	btemp+1,w
  4723  0109  1D03               	skipz
  4724  010A  290D               	goto	u3855
  4725  010B  303D               	movlw	low(013Dh)
  4726  010C  0241               	subwf	(convert@adc_value),w
  4727  010D                     u3855:
  4728                           
  4729  010D  1803               	skipnc
  4730  010E  2910               	goto	u3851
  4731  010F  2911               	goto	u3850
  4732  0110                     u3851:
  4733  0110  2949               	goto	l9761
  4734  0111                     u3850:
  4735                           	line	21
  4736                           	
  4737  0111                     l9755:	
  4738                           ;ir.c: 21: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
  4739  0111  303D               	movlw	low(03Dh)
  4740  0112  1283               	bcf	status, 5	;RP0=0, select bank0
  4741  0113  1303               	bcf	status, 6	;RP1=0, select bank0
  4742  0114  00B0               	movwf	(?___awdiv)
  4743  0115  3000               	movlw	high(03Dh)
  4744  0116  00B1               	movwf	((?___awdiv))+1
  4745  0117  0941               	comf	(convert@adc_value),w
  4746  0118  00C3               	movwf	(??_convert+0)+0
  4747  0119  0942               	comf	(convert@adc_value+1),w
  4748  011A  00C4               	movwf	((??_convert+0)+0+1)
  4749  011B  0AC3               	incf	(??_convert+0)+0,f
  4750  011C  1903               	skipnz
  4751  011D  0AC4               	incf	((??_convert+0)+0+1),f
  4752  011E  0843               	movf	0+(??_convert+0)+0,w
  4753  011F  3E3D               	addlw	low(013Dh)
  4754  0120  00AA               	movwf	(?___wmul)
  4755  0121  0844               	movf	1+(??_convert+0)+0,w
  4756  0122  1803               	skipnc
  4757  0123  3E01               	addlw	1
  4758  0124  3E01               	addlw	high(013Dh)
  4759  0125  00AB               	movwf	1+(?___wmul)
  4760  0126  300A               	movlw	low(0Ah)
  4761  0127  00AC               	movwf	0+(?___wmul)+02h
  4762  0128  3000               	movlw	high(0Ah)
  4763  0129  00AD               	movwf	(0+(?___wmul)+02h)+1
  4764  012A  120A  158A  26CA   	fcall	___wmul
              120A  118A         
  4765  012F  1283               	bcf	status, 5	;RP0=0, select bank0
  4766  0130  1303               	bcf	status, 6	;RP1=0, select bank0
  4767  0131  082B               	movf	(1+(?___wmul)),w
  4768  0132  01B3               	clrf	1+(?___awdiv)+02h
  4769  0133  07B3               	addwf	1+(?___awdiv)+02h
  4770  0134  082A               	movf	(0+(?___wmul)),w
  4771  0135  01B2               	clrf	0+(?___awdiv)+02h
  4772  0136  07B2               	addwf	0+(?___awdiv)+02h
  4773                           
  4774  0137  120A  118A  23B8   	fcall	___awdiv
              120A  118A         
  4775  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  4776  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  4777  013E  0830               	movf	(0+(?___awdiv)),w
  4778  013F  3E25               	addlw	low(025h)
  4779  0140  00C1               	movwf	(?_convert)
  4780  0141  0831               	movf	(1+(?___awdiv)),w
  4781  0142  1803               	skipnc
  4782  0143  3E01               	addlw	1
  4783  0144  3E00               	addlw	high(025h)
  4784  0145  00C2               	movwf	1+(?_convert)
  4785  0146  29E3               	goto	l5812
  4786                           	
  4787  0147                     l9757:	
  4788  0147  29E3               	goto	l5812
  4789                           	
  4790  0148                     l9759:	
  4791  0148  29E3               	goto	l5812
  4792                           	line	22
  4793                           	
  4794  0149                     l5820:	
  4795                           	
  4796  0149                     l9761:	
  4797                           ;ir.c: 22: else if(adc_value < 410)
  4798  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  4799  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  4800  014B  0842               	movf	(convert@adc_value+1),w
  4801  014C  3A80               	xorlw	80h
  4802  014D  00FF               	movwf	btemp+1
  4803  014E  3081               	movlw	(high(019Ah))^80h
  4804  014F  027F               	subwf	btemp+1,w
  4805  0150  1D03               	skipz
  4806  0151  2954               	goto	u3865
  4807  0152  309A               	movlw	low(019Ah)
  4808  0153  0241               	subwf	(convert@adc_value),w
  4809  0154                     u3865:
  4810                           
  4811  0154  1803               	skipnc
  4812  0155  2957               	goto	u3861
  4813  0156  2958               	goto	u3860
  4814  0157                     u3861:
  4815  0157  2990               	goto	l9769
  4816  0158                     u3860:
  4817                           	line	23
  4818                           	
  4819  0158                     l9763:	
  4820                           ;ir.c: 23: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
  4821  0158  305D               	movlw	low(05Dh)
  4822  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  4823  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  4824  015B  00B0               	movwf	(?___awdiv)
  4825  015C  3000               	movlw	high(05Dh)
  4826  015D  00B1               	movwf	((?___awdiv))+1
  4827  015E  0941               	comf	(convert@adc_value),w
  4828  015F  00C3               	movwf	(??_convert+0)+0
  4829  0160  0942               	comf	(convert@adc_value+1),w
  4830  0161  00C4               	movwf	((??_convert+0)+0+1)
  4831  0162  0AC3               	incf	(??_convert+0)+0,f
  4832  0163  1903               	skipnz
  4833  0164  0AC4               	incf	((??_convert+0)+0+1),f
  4834  0165  0843               	movf	0+(??_convert+0)+0,w
  4835  0166  3E9A               	addlw	low(019Ah)
  4836  0167  00AA               	movwf	(?___wmul)
  4837  0168  0844               	movf	1+(??_convert+0)+0,w
  4838  0169  1803               	skipnc
  4839  016A  3E01               	addlw	1
  4840  016B  3E01               	addlw	high(019Ah)
  4841  016C  00AB               	movwf	1+(?___wmul)
  4842  016D  300A               	movlw	low(0Ah)
  4843  016E  00AC               	movwf	0+(?___wmul)+02h
  4844  016F  3000               	movlw	high(0Ah)
  4845  0170  00AD               	movwf	(0+(?___wmul)+02h)+1
  4846  0171  120A  158A  26CA   	fcall	___wmul
              120A  118A         
  4847  0176  1283               	bcf	status, 5	;RP0=0, select bank0
  4848  0177  1303               	bcf	status, 6	;RP1=0, select bank0
  4849  0178  082B               	movf	(1+(?___wmul)),w
  4850  0179  01B3               	clrf	1+(?___awdiv)+02h
  4851  017A  07B3               	addwf	1+(?___awdiv)+02h
  4852  017B  082A               	movf	(0+(?___wmul)),w
  4853  017C  01B2               	clrf	0+(?___awdiv)+02h
  4854  017D  07B2               	addwf	0+(?___awdiv)+02h
  4855                           
  4856  017E  120A  118A  23B8   	fcall	___awdiv
              120A  118A         
  4857  0183  1283               	bcf	status, 5	;RP0=0, select bank0
  4858  0184  1303               	bcf	status, 6	;RP1=0, select bank0
  4859  0185  0830               	movf	(0+(?___awdiv)),w
  4860  0186  3E1C               	addlw	low(01Ch)
  4861  0187  00C1               	movwf	(?_convert)
  4862  0188  0831               	movf	(1+(?___awdiv)),w
  4863  0189  1803               	skipnc
  4864  018A  3E01               	addlw	1
  4865  018B  3E00               	addlw	high(01Ch)
  4866  018C  00C2               	movwf	1+(?_convert)
  4867  018D  29E3               	goto	l5812
  4868                           	
  4869  018E                     l9765:	
  4870  018E  29E3               	goto	l5812
  4871                           	
  4872  018F                     l9767:	
  4873  018F  29E3               	goto	l5812
  4874                           	line	24
  4875                           	
  4876  0190                     l5822:	
  4877                           	
  4878  0190                     l9769:	
  4879                           ;ir.c: 24: else if(adc_value < 522)
  4880  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  4881  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  4882  0192  0842               	movf	(convert@adc_value+1),w
  4883  0193  3A80               	xorlw	80h
  4884  0194  00FF               	movwf	btemp+1
  4885  0195  3082               	movlw	(high(020Ah))^80h
  4886  0196  027F               	subwf	btemp+1,w
  4887  0197  1D03               	skipz
  4888  0198  299B               	goto	u3875
  4889  0199  300A               	movlw	low(020Ah)
  4890  019A  0241               	subwf	(convert@adc_value),w
  4891  019B                     u3875:
  4892                           
  4893  019B  1803               	skipnc
  4894  019C  299E               	goto	u3871
  4895  019D  299F               	goto	u3870
  4896  019E                     u3871:
  4897  019E  29D7               	goto	l9777
  4898  019F                     u3870:
  4899                           	line	25
  4900                           	
  4901  019F                     l9771:	
  4902                           ;ir.c: 25: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
  4903  019F  3070               	movlw	low(070h)
  4904  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  4905  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  4906  01A2  00B0               	movwf	(?___awdiv)
  4907  01A3  3000               	movlw	high(070h)
  4908  01A4  00B1               	movwf	((?___awdiv))+1
  4909  01A5  0941               	comf	(convert@adc_value),w
  4910  01A6  00C3               	movwf	(??_convert+0)+0
  4911  01A7  0942               	comf	(convert@adc_value+1),w
  4912  01A8  00C4               	movwf	((??_convert+0)+0+1)
  4913  01A9  0AC3               	incf	(??_convert+0)+0,f
  4914  01AA  1903               	skipnz
  4915  01AB  0AC4               	incf	((??_convert+0)+0+1),f
  4916  01AC  0843               	movf	0+(??_convert+0)+0,w
  4917  01AD  3E0A               	addlw	low(020Ah)
  4918  01AE  00AA               	movwf	(?___wmul)
  4919  01AF  0844               	movf	1+(??_convert+0)+0,w
  4920  01B0  1803               	skipnc
  4921  01B1  3E01               	addlw	1
  4922  01B2  3E02               	addlw	high(020Ah)
  4923  01B3  00AB               	movwf	1+(?___wmul)
  4924  01B4  300A               	movlw	low(0Ah)
  4925  01B5  00AC               	movwf	0+(?___wmul)+02h
  4926  01B6  3000               	movlw	high(0Ah)
  4927  01B7  00AD               	movwf	(0+(?___wmul)+02h)+1
  4928  01B8  120A  158A  26CA   	fcall	___wmul
              120A  118A         
  4929  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4930  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4931  01BF  082B               	movf	(1+(?___wmul)),w
  4932  01C0  01B3               	clrf	1+(?___awdiv)+02h
  4933  01C1  07B3               	addwf	1+(?___awdiv)+02h
  4934  01C2  082A               	movf	(0+(?___wmul)),w
  4935  01C3  01B2               	clrf	0+(?___awdiv)+02h
  4936  01C4  07B2               	addwf	0+(?___awdiv)+02h
  4937                           
  4938  01C5  120A  118A  23B8   	fcall	___awdiv
              120A  118A         
  4939  01CA  1283               	bcf	status, 5	;RP0=0, select bank0
  4940  01CB  1303               	bcf	status, 6	;RP1=0, select bank0
  4941  01CC  0830               	movf	(0+(?___awdiv)),w
  4942  01CD  3E12               	addlw	low(012h)
  4943  01CE  00C1               	movwf	(?_convert)
  4944  01CF  0831               	movf	(1+(?___awdiv)),w
  4945  01D0  1803               	skipnc
  4946  01D1  3E01               	addlw	1
  4947  01D2  3E00               	addlw	high(012h)
  4948  01D3  00C2               	movwf	1+(?_convert)
  4949  01D4  29E3               	goto	l5812
  4950                           	
  4951  01D5                     l9773:	
  4952  01D5  29E3               	goto	l5812
  4953                           	
  4954  01D6                     l9775:	
  4955  01D6  29E3               	goto	l5812
  4956                           	line	26
  4957                           	
  4958  01D7                     l5824:	
  4959                           	
  4960  01D7                     l9777:	
  4961                           ;ir.c: 26: else return 0;
  4962  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4963  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  4964  01D9  01C1               	clrf	(?_convert)
  4965  01DA  01C2               	clrf	(?_convert+1)
  4966  01DB  29E3               	goto	l5812
  4967                           	
  4968  01DC                     l9779:	
  4969  01DC  29E3               	goto	l5812
  4970                           	
  4971  01DD                     l5825:	
  4972  01DD  29E3               	goto	l5812
  4973                           	
  4974  01DE                     l5823:	
  4975  01DE  29E3               	goto	l5812
  4976                           	
  4977  01DF                     l5821:	
  4978  01DF  29E3               	goto	l5812
  4979                           	
  4980  01E0                     l5819:	
  4981  01E0  29E3               	goto	l5812
  4982                           	
  4983  01E1                     l5817:	
  4984  01E1  29E3               	goto	l5812
  4985                           	
  4986  01E2                     l5815:	
  4987  01E2  29E3               	goto	l5812
  4988                           	
  4989  01E3                     l5813:	
  4990                           	line	27
  4991                           	
  4992  01E3                     l5812:	
  4993  01E3  0008               	return
  4994                           	opt stack 0
  4995                           GLOBAL	__end_of_convert
  4996  01E4                     	__end_of_convert:
  4997 ;; =============== function _convert ends ============
  4998                           
  4999                           	signat	_convert,4218
  5000                           	global	_ser_putArr
  5001                           psect	text1323,local,class=CODE,delta=2
  5002                           global __ptext1323
  5003  07AD                     __ptext1323:
  5004                           
  5005 ;; *************** function _ser_putArr *****************
  5006 ;; Defined at:
  5007 ;;		line 73 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  array           2   12[BANK0 ] PTR unsigned char 
  5010 ;;		 -> champions(21), lookingForU2(29), superMarioBros(25), finalCountdown(27), 
  5011 ;;  length          2   14[BANK0 ] int 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  i               2   19[BANK0 ] int 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;		None               void
  5016 ;; Registers used:
  5017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5023 ;;      Params:         0       4       0       0       0
  5024 ;;      Locals:         0       2       0       0       0
  5025 ;;      Temps:          0       3       0       0       0
  5026 ;;      Totals:         0       9       0       0       0
  5027 ;;Total ram usage:        9 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    3
  5030 ;; This function calls:
  5031 ;;		_ser_putch
  5032 ;; This function is called by:
  5033 ;;		_initSongs
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           psect	text1323
  5037                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  5038                           	line	73
  5039                           	global	__size_of_ser_putArr
  5040  0039                     	__size_of_ser_putArr	equ	__end_of_ser_putArr-_ser_putArr
  5041                           	
  5042  07AD                     _ser_putArr:	
  5043                           	opt	stack 2
  5044                           ; Regs used in _ser_putArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5045                           	line	74
  5046                           	
  5047  07AD                     l9713:	
  5048                           ;ser.c: 74: for(int i =0; i< length; i++)
  5049  07AD  1283               	bcf	status, 5	;RP0=0, select bank0
  5050  07AE  1303               	bcf	status, 6	;RP1=0, select bank0
  5051  07AF  01B3               	clrf	(ser_putArr@i)
  5052  07B0  01B4               	clrf	(ser_putArr@i+1)
  5053  07B1  2FD6               	goto	l9719
  5054                           	line	75
  5055                           	
  5056  07B2                     l4392:	
  5057                           	line	76
  5058                           	
  5059  07B2                     l9715:	
  5060                           ;ser.c: 75: {
  5061                           ;ser.c: 76: ser_putch(array[i]);
  5062  07B2  1283               	bcf	status, 5	;RP0=0, select bank0
  5063  07B3  1303               	bcf	status, 6	;RP1=0, select bank0
  5064  07B4  0833               	movf	(ser_putArr@i),w
  5065  07B5  072C               	addwf	(ser_putArr@array),w
  5066  07B6  00B1               	movwf	(??_ser_putArr+1)+0
  5067  07B7  082D               	movf	(ser_putArr@array+1),w
  5068  07B8  00B0               	movwf	(??_ser_putArr+0)+0
  5069  07B9  1803               	skipnc
  5070  07BA  0AB0               	incf	(??_ser_putArr+0)+0,f
  5071  07BB  1FB3               	btfss	(ser_putArr@i),7
  5072  07BC  2FBE               	goto	u3790
  5073  07BD  03B0               	decf	(??_ser_putArr+0)+0,f
  5074  07BE                     u3790:
  5075  07BE  1283               	bcf	status, 5	;RP0=0, select bank0
  5076  07BF  1303               	bcf	status, 6	;RP1=0, select bank0
  5077  07C0  0830               	movf	(??_ser_putArr+0)+0,w
  5078  07C1  00B2               	movwf	0+((??_ser_putArr+1)+0)+1
  5079  07C2  0831               	movf	0+(??_ser_putArr+1)+0,w
  5080  07C3  0084               	movwf	fsr0
  5081  07C4  1783               	bsf	status,7
  5082  07C5  1C32               	btfss	1+(??_ser_putArr+1)+0,0
  5083  07C6  1383               	bcf	status,7
  5084  07C7  0800               	movf	indf,w
  5085  07C8  120A  158A  252E   	fcall	_ser_putch
              120A  118A         
  5086                           	line	74
  5087                           	
  5088  07CD                     l9717:	
  5089  07CD  3001               	movlw	low(01h)
  5090  07CE  1283               	bcf	status, 5	;RP0=0, select bank0
  5091  07CF  1303               	bcf	status, 6	;RP1=0, select bank0
  5092  07D0  07B3               	addwf	(ser_putArr@i),f
  5093  07D1  1803               	skipnc
  5094  07D2  0AB4               	incf	(ser_putArr@i+1),f
  5095  07D3  3000               	movlw	high(01h)
  5096  07D4  07B4               	addwf	(ser_putArr@i+1),f
  5097  07D5  2FD6               	goto	l9719
  5098                           	
  5099  07D6                     l4391:	
  5100                           	
  5101  07D6                     l9719:	
  5102  07D6  0834               	movf	(ser_putArr@i+1),w
  5103  07D7  3A80               	xorlw	80h
  5104  07D8  00B0               	movwf	(??_ser_putArr+0)+0
  5105  07D9  082F               	movf	(ser_putArr@length+1),w
  5106  07DA  3A80               	xorlw	80h
  5107  07DB  0230               	subwf	(??_ser_putArr+0)+0,w
  5108  07DC  1D03               	skipz
  5109  07DD  2FE0               	goto	u3805
  5110  07DE  082E               	movf	(ser_putArr@length),w
  5111  07DF  0233               	subwf	(ser_putArr@i),w
  5112  07E0                     u3805:
  5113                           
  5114  07E0  1C03               	skipc
  5115  07E1  2FE3               	goto	u3801
  5116  07E2  2FE4               	goto	u3800
  5117  07E3                     u3801:
  5118  07E3  2FB2               	goto	l9715
  5119  07E4                     u3800:
  5120  07E4  2FE5               	goto	l4394
  5121                           	
  5122  07E5                     l4393:	
  5123                           	line	78
  5124                           	
  5125  07E5                     l4394:	
  5126  07E5  0008               	return
  5127                           	opt stack 0
  5128                           GLOBAL	__end_of_ser_putArr
  5129  07E6                     	__end_of_ser_putArr:
  5130 ;; =============== function _ser_putArr ends ============
  5131                           
  5132                           	signat	_ser_putArr,8312
  5133                           	global	_play_iCreate_song
  5134                           psect	text1324,local,class=CODE,delta=2
  5135                           global __ptext1324
  5136  0C79                     __ptext1324:
  5137                           
  5138 ;; *************** function _play_iCreate_song *****************
  5139 ;; Defined at:
  5140 ;;		line 24 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  song            1    wreg     unsigned char 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  song            1   12[BANK0 ] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;		None               void
  5147 ;; Registers used:
  5148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5154 ;;      Params:         0       0       0       0       0
  5155 ;;      Locals:         0       1       0       0       0
  5156 ;;      Temps:          0       0       0       0       0
  5157 ;;      Totals:         0       1       0       0       0
  5158 ;;Total ram usage:        1 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    3
  5161 ;; This function calls:
  5162 ;;		_ser_putch
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           psect	text1324
  5168                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\songs.c"
  5169                           	line	24
  5170                           	global	__size_of_play_iCreate_song
  5171  0012                     	__size_of_play_iCreate_song	equ	__end_of_play_iCreate_song-_play_iCreate_song
  5172                           	
  5173  0C79                     _play_iCreate_song:	
  5174                           	opt	stack 4
  5175                           ; Regs used in _play_iCreate_song: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5176                           ;play_iCreate_song@song stored from wreg
  5177  0C79  1283               	bcf	status, 5	;RP0=0, select bank0
  5178  0C7A  1303               	bcf	status, 6	;RP1=0, select bank0
  5179  0C7B  00AC               	movwf	(play_iCreate_song@song)
  5180                           	line	25
  5181                           	
  5182  0C7C                     l9711:	
  5183                           ;songs.c: 25: ser_putch(141);
  5184  0C7C  308D               	movlw	(08Dh)
  5185  0C7D  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5186                           	line	26
  5187                           ;songs.c: 26: ser_putch(song);
  5188  0C82  1283               	bcf	status, 5	;RP0=0, select bank0
  5189  0C83  1303               	bcf	status, 6	;RP1=0, select bank0
  5190  0C84  082C               	movf	(play_iCreate_song@song),w
  5191  0C85  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5192                           	line	27
  5193                           	
  5194  0C8A                     l5119:	
  5195  0C8A  0008               	return
  5196                           	opt stack 0
  5197                           GLOBAL	__end_of_play_iCreate_song
  5198  0C8B                     	__end_of_play_iCreate_song:
  5199 ;; =============== function _play_iCreate_song ends ============
  5200                           
  5201                           	signat	_play_iCreate_song,4216
  5202                           	global	_rotateIR
  5203                           psect	text1325,local,class=CODE,delta=2
  5204                           global __ptext1325
  5205  059F                     __ptext1325:
  5206                           
  5207 ;; *************** function _rotateIR *****************
  5208 ;; Defined at:
  5209 ;;		line 39 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ir.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  steps           1    wreg     unsigned char 
  5212 ;;  direction       1   10[BANK0 ] unsigned char 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  steps           1   14[BANK0 ] unsigned char 
  5215 ;;  stepNum         1   15[BANK0 ] unsigned char 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;		None               void
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5225 ;;      Params:         0       1       0       0       0
  5226 ;;      Locals:         0       2       0       0       0
  5227 ;;      Temps:          0       3       0       0       0
  5228 ;;      Totals:         0       6       0       0       0
  5229 ;;Total ram usage:        6 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    2
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_findWalls
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           psect	text1325
  5239                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ir.c"
  5240                           	line	39
  5241                           	global	__size_of_rotateIR
  5242  0046                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
  5243                           	
  5244  059F                     _rotateIR:	
  5245                           	opt	stack 4
  5246                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
  5247                           ;rotateIR@steps stored from wreg
  5248  059F  1283               	bcf	status, 5	;RP0=0, select bank0
  5249  05A0  1303               	bcf	status, 6	;RP1=0, select bank0
  5250  05A1  00AE               	movwf	(rotateIR@steps)
  5251                           	line	40
  5252                           	
  5253  05A2                     l9693:	
  5254                           ;ir.c: 40: PORTC |= 0b00000011;
  5255  05A2  3003               	movlw	(03h)
  5256  05A3  00AB               	movwf	(??_rotateIR+0)+0
  5257  05A4  082B               	movf	(??_rotateIR+0)+0,w
  5258  05A5  0487               	iorwf	(7),f	;volatile
  5259                           	line	41
  5260                           	
  5261  05A6                     l9695:	
  5262                           ;ir.c: 41: SSPBUF = direction;
  5263  05A6  082A               	movf	(rotateIR@direction),w
  5264  05A7  0093               	movwf	(19)	;volatile
  5265                           	line	42
  5266                           	
  5267  05A8                     l9697:	
  5268                           ;ir.c: 42: _delay((unsigned long)((200)*(20000000/4000.0)));
  5269                           	opt asmopt_off
  5270  05A8  3006               movlw  6
  5271  05A9  00AD               movwf	((??_rotateIR+0)+0+2),f
  5272  05AA  3013               movlw	19
  5273  05AB  00AC               movwf	((??_rotateIR+0)+0+1),f
  5274  05AC  30B1               	movlw	177
  5275  05AD  00AB               movwf	((??_rotateIR+0)+0),f
  5276  05AE                     u4137:
  5277  05AE  0BAB               	decfsz	((??_rotateIR+0)+0),f
  5278  05AF  2DAE               	goto	u4137
  5279  05B0  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  5280  05B1  2DAE               	goto	u4137
  5281  05B2  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  5282  05B3  2DAE               	goto	u4137
  5283  05B4  2DB5               	nop2
  5284                           opt asmopt_on
  5285                           
  5286                           	line	44
  5287                           	
  5288  05B5                     l9699:	
  5289                           ;ir.c: 44: for (char stepNum = 1; stepNum <= steps; ++stepNum)
  5290  05B5  1283               	bcf	status, 5	;RP0=0, select bank0
  5291  05B6  1303               	bcf	status, 6	;RP1=0, select bank0
  5292  05B7  01AF               	clrf	(rotateIR@stepNum)
  5293  05B8  1403               	bsf	status,0
  5294  05B9  0DAF               	rlf	(rotateIR@stepNum),f
  5295  05BA  2DCF               	goto	l5831
  5296                           	line	45
  5297                           	
  5298  05BB                     l5832:	
  5299                           	line	46
  5300                           ;ir.c: 45: {
  5301                           ;ir.c: 46: PORTC |= 0b00000100;
  5302  05BB  1507               	bsf	(7)+(2/8),(2)&7	;volatile
  5303                           	line	47
  5304                           	
  5305  05BC                     l9701:	
  5306                           ;ir.c: 47: PORTC &= 0b11111011;
  5307  05BC  30FB               	movlw	(0FBh)
  5308  05BD  00AB               	movwf	(??_rotateIR+0)+0
  5309  05BE  082B               	movf	(??_rotateIR+0)+0,w
  5310  05BF  0587               	andwf	(7),f	;volatile
  5311                           	line	48
  5312                           	
  5313  05C0                     l9703:	
  5314                           ;ir.c: 48: _delay((unsigned long)((20)*(20000000/4000.0)));
  5315                           	opt asmopt_off
  5316  05C0  3082               movlw	130
  5317  05C1  00AC               movwf	((??_rotateIR+0)+0+1),f
  5318  05C2  30DD               	movlw	221
  5319  05C3  00AB               movwf	((??_rotateIR+0)+0),f
  5320  05C4                     u4147:
  5321  05C4  0BAB               	decfsz	((??_rotateIR+0)+0),f
  5322  05C5  2DC4               	goto	u4147
  5323  05C6  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  5324  05C7  2DC4               	goto	u4147
  5325  05C8  2DC9               	nop2
  5326                           opt asmopt_on
  5327                           
  5328                           	line	44
  5329                           	
  5330  05C9                     l9705:	
  5331  05C9  3001               	movlw	(01h)
  5332  05CA  1283               	bcf	status, 5	;RP0=0, select bank0
  5333  05CB  1303               	bcf	status, 6	;RP1=0, select bank0
  5334  05CC  00AB               	movwf	(??_rotateIR+0)+0
  5335  05CD  082B               	movf	(??_rotateIR+0)+0,w
  5336  05CE  07AF               	addwf	(rotateIR@stepNum),f
  5337                           	
  5338  05CF                     l5831:	
  5339  05CF  082F               	movf	(rotateIR@stepNum),w
  5340  05D0  022E               	subwf	(rotateIR@steps),w
  5341  05D1  1803               	skipnc
  5342  05D2  2DD4               	goto	u3781
  5343  05D3  2DD5               	goto	u3780
  5344  05D4                     u3781:
  5345  05D4  2DBB               	goto	l5832
  5346  05D5                     u3780:
  5347  05D5  2DD6               	goto	l9707
  5348                           	
  5349  05D6                     l5833:	
  5350                           	line	51
  5351                           	
  5352  05D6                     l9707:	
  5353                           ;ir.c: 49: }
  5354                           ;ir.c: 51: SSPBUF = 0b00000000;
  5355  05D6  0193               	clrf	(19)	;volatile
  5356                           	line	52
  5357                           	
  5358  05D7                     l9709:	
  5359                           ;ir.c: 52: _delay((unsigned long)((200)*(20000000/4000.0)));
  5360                           	opt asmopt_off
  5361  05D7  3006               movlw  6
  5362  05D8  00AD               movwf	((??_rotateIR+0)+0+2),f
  5363  05D9  3013               movlw	19
  5364  05DA  00AC               movwf	((??_rotateIR+0)+0+1),f
  5365  05DB  30B1               	movlw	177
  5366  05DC  00AB               movwf	((??_rotateIR+0)+0),f
  5367  05DD                     u4157:
  5368  05DD  0BAB               	decfsz	((??_rotateIR+0)+0),f
  5369  05DE  2DDD               	goto	u4157
  5370  05DF  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  5371  05E0  2DDD               	goto	u4157
  5372  05E1  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  5373  05E2  2DDD               	goto	u4157
  5374  05E3  2DE4               	nop2
  5375                           opt asmopt_on
  5376                           
  5377                           	line	54
  5378                           	
  5379  05E4                     l5834:	
  5380  05E4  0008               	return
  5381                           	opt stack 0
  5382                           GLOBAL	__end_of_rotateIR
  5383  05E5                     	__end_of_rotateIR:
  5384 ;; =============== function _rotateIR ends ============
  5385                           
  5386                           	signat	_rotateIR,8312
  5387                           	global	_initIRobot
  5388                           psect	text1326,local,class=CODE,delta=2
  5389                           global __ptext1326
  5390  0CF6                     __ptext1326:
  5391                           
  5392 ;; *************** function _initIRobot *****************
  5393 ;; Defined at:
  5394 ;;		line 122 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;		None               void
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         0       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0
  5410 ;;      Temps:          0       3       0       0       0
  5411 ;;      Totals:         0       3       0       0       0
  5412 ;;Total ram usage:        3 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    3
  5415 ;; This function calls:
  5416 ;;		_ser_putch
  5417 ;; This function is called by:
  5418 ;;		_init
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           psect	text1326
  5422                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  5423                           	line	122
  5424                           	global	__size_of_initIRobot
  5425  001C                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
  5426                           	
  5427  0CF6                     _initIRobot:	
  5428                           	opt	stack 3
  5429                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5430                           	line	123
  5431                           	
  5432  0CF6                     l9687:	
  5433                           ;main.c: 123: _delay((unsigned long)((100)*(20000000/4000.0)));
  5434                           	opt asmopt_off
  5435  0CF6  3003               movlw  3
  5436  0CF7  1283               	bcf	status, 5	;RP0=0, select bank0
  5437  0CF8  1303               	bcf	status, 6	;RP1=0, select bank0
  5438  0CF9  00AE               movwf	((??_initIRobot+0)+0+2),f
  5439  0CFA  308A               movlw	138
  5440  0CFB  00AD               movwf	((??_initIRobot+0)+0+1),f
  5441  0CFC  3056               	movlw	86
  5442  0CFD  00AC               movwf	((??_initIRobot+0)+0),f
  5443  0CFE                     u4167:
  5444  0CFE  0BAC               	decfsz	((??_initIRobot+0)+0),f
  5445  0CFF  2CFE               	goto	u4167
  5446  0D00  0BAD               	decfsz	((??_initIRobot+0)+0+1),f
  5447  0D01  2CFE               	goto	u4167
  5448  0D02  0BAE               	decfsz	((??_initIRobot+0)+0+2),f
  5449  0D03  2CFE               	goto	u4167
  5450  0D04  2D05               	nop2
  5451                           opt asmopt_on
  5452                           
  5453                           	line	124
  5454                           	
  5455  0D05                     l9689:	
  5456                           ;main.c: 124: ser_putch(128);
  5457  0D05  3080               	movlw	(080h)
  5458  0D06  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5459                           	line	125
  5460                           	
  5461  0D0B                     l9691:	
  5462                           ;main.c: 125: ser_putch(132);
  5463  0D0B  3084               	movlw	(084h)
  5464  0D0C  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5465                           	line	126
  5466                           	
  5467  0D11                     l3625:	
  5468  0D11  0008               	return
  5469                           	opt stack 0
  5470                           GLOBAL	__end_of_initIRobot
  5471  0D12                     	__end_of_initIRobot:
  5472 ;; =============== function _initIRobot ends ============
  5473                           
  5474                           	signat	_initIRobot,88
  5475                           	global	_lcd_write_control
  5476                           psect	text1327,local,class=CODE,delta=2
  5477                           global __ptext1327
  5478  0CB1                     __ptext1327:
  5479                           
  5480 ;; *************** function _lcd_write_control *****************
  5481 ;; Defined at:
  5482 ;;		line 8 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  databyte        1    wreg     unsigned char 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  databyte        1   12[BANK0 ] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;		None               void
  5489 ;; Registers used:
  5490 ;;		wreg
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5496 ;;      Params:         0       0       0       0       0
  5497 ;;      Locals:         0       1       0       0       0
  5498 ;;      Temps:          0       2       0       0       0
  5499 ;;      Totals:         0       3       0       0       0
  5500 ;;Total ram usage:        3 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    2
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_lcd_set_cursor
  5507 ;;		_lcd_init
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           psect	text1327
  5511                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  5512                           	line	8
  5513                           	global	__size_of_lcd_write_control
  5514  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  5515                           	
  5516  0CB1                     _lcd_write_control:	
  5517                           	opt	stack 3
  5518                           ; Regs used in _lcd_write_control: [wreg]
  5519                           ;lcd_write_control@databyte stored from wreg
  5520  0CB1  1283               	bcf	status, 5	;RP0=0, select bank0
  5521  0CB2  1303               	bcf	status, 6	;RP1=0, select bank0
  5522  0CB3  00AC               	movwf	(lcd_write_control@databyte)
  5523                           	line	9
  5524                           	
  5525  0CB4                     l9679:	
  5526                           ;lcd.c: 9: RE2 = 0;
  5527  0CB4  1109               	bcf	(74/8),(74)&7
  5528                           	line	10
  5529                           ;lcd.c: 10: RE1 = 0;
  5530  0CB5  1089               	bcf	(73/8),(73)&7
  5531                           	line	11
  5532                           ;lcd.c: 11: RE0 = 0;
  5533  0CB6  1009               	bcf	(72/8),(72)&7
  5534                           	line	12
  5535                           	
  5536  0CB7                     l9681:	
  5537                           ;lcd.c: 12: PORTD = databyte;
  5538  0CB7  082C               	movf	(lcd_write_control@databyte),w
  5539  0CB8  0088               	movwf	(8)	;volatile
  5540                           	line	13
  5541                           	
  5542  0CB9                     l9683:	
  5543                           ;lcd.c: 13: RE2 = 1;
  5544  0CB9  1509               	bsf	(74/8),(74)&7
  5545                           	line	14
  5546                           	
  5547  0CBA                     l9685:	
  5548                           ;lcd.c: 14: RE2 = 0;
  5549  0CBA  1109               	bcf	(74/8),(74)&7
  5550                           	line	15
  5551                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
  5552                           	opt asmopt_off
  5553  0CBB  300D               movlw	13
  5554  0CBC  00AB               movwf	((??_lcd_write_control+0)+0+1),f
  5555  0CBD  30FB               	movlw	251
  5556  0CBE  00AA               movwf	((??_lcd_write_control+0)+0),f
  5557  0CBF                     u4177:
  5558  0CBF  0BAA               	decfsz	((??_lcd_write_control+0)+0),f
  5559  0CC0  2CBF               	goto	u4177
  5560  0CC1  0BAB               	decfsz	((??_lcd_write_control+0)+0+1),f
  5561  0CC2  2CBF               	goto	u4177
  5562  0CC3  2CC4               	nop2
  5563                           opt asmopt_on
  5564                           
  5565                           	line	16
  5566                           	
  5567  0CC4                     l2814:	
  5568  0CC4  0008               	return
  5569                           	opt stack 0
  5570                           GLOBAL	__end_of_lcd_write_control
  5571  0CC5                     	__end_of_lcd_write_control:
  5572 ;; =============== function _lcd_write_control ends ============
  5573                           
  5574                           	signat	_lcd_write_control,4216
  5575                           	global	_lcd_write_data
  5576                           psect	text1328,local,class=CODE,delta=2
  5577                           global __ptext1328
  5578  0C8B                     __ptext1328:
  5579                           
  5580 ;; *************** function _lcd_write_data *****************
  5581 ;; Defined at:
  5582 ;;		line 20 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  databyte        1    wreg     unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  databyte        1   12[BANK0 ] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;		None               void
  5589 ;; Registers used:
  5590 ;;		wreg
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5596 ;;      Params:         0       0       0       0       0
  5597 ;;      Locals:         0       1       0       0       0
  5598 ;;      Temps:          0       2       0       0       0
  5599 ;;      Totals:         0       3       0       0       0
  5600 ;;Total ram usage:        3 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    2
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_lcd_write_string
  5607 ;;		_lcd_write_1_digit_bcd
  5608 ;;		_findWalls
  5609 ;;		_goBackward
  5610 ;;		_goForward
  5611 ;;		_goLeft
  5612 ;;		_goRight
  5613 ;;		_updateLocation
  5614 ;;		_testEEPROM
  5615 ;;		_lcd_write_3_digit_bcd
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           psect	text1328
  5619                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\lcd.c"
  5620                           	line	20
  5621                           	global	__size_of_lcd_write_data
  5622  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5623                           	
  5624  0C8B                     _lcd_write_data:	
  5625                           	opt	stack 3
  5626                           ; Regs used in _lcd_write_data: [wreg]
  5627                           ;lcd_write_data@databyte stored from wreg
  5628  0C8B  1283               	bcf	status, 5	;RP0=0, select bank0
  5629  0C8C  1303               	bcf	status, 6	;RP1=0, select bank0
  5630  0C8D  00AC               	movwf	(lcd_write_data@databyte)
  5631                           	line	21
  5632                           	
  5633  0C8E                     l9671:	
  5634                           ;lcd.c: 21: RE2 = 0;
  5635  0C8E  1109               	bcf	(74/8),(74)&7
  5636                           	line	22
  5637                           ;lcd.c: 22: RE1 = 0;
  5638  0C8F  1089               	bcf	(73/8),(73)&7
  5639                           	line	23
  5640                           ;lcd.c: 23: RE0 = 1;
  5641  0C90  1409               	bsf	(72/8),(72)&7
  5642                           	line	24
  5643                           	
  5644  0C91                     l9673:	
  5645                           ;lcd.c: 24: PORTD = databyte;
  5646  0C91  082C               	movf	(lcd_write_data@databyte),w
  5647  0C92  0088               	movwf	(8)	;volatile
  5648                           	line	25
  5649                           	
  5650  0C93                     l9675:	
  5651                           ;lcd.c: 25: RE2 = 1;
  5652  0C93  1509               	bsf	(74/8),(74)&7
  5653                           	line	26
  5654                           	
  5655  0C94                     l9677:	
  5656                           ;lcd.c: 26: RE2 = 0;
  5657  0C94  1109               	bcf	(74/8),(74)&7
  5658                           	line	27
  5659                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
  5660                           	opt asmopt_off
  5661  0C95  3007               movlw	7
  5662  0C96  00AB               movwf	((??_lcd_write_data+0)+0+1),f
  5663  0C97  307D               	movlw	125
  5664  0C98  00AA               movwf	((??_lcd_write_data+0)+0),f
  5665  0C99                     u4187:
  5666  0C99  0BAA               	decfsz	((??_lcd_write_data+0)+0),f
  5667  0C9A  2C99               	goto	u4187
  5668  0C9B  0BAB               	decfsz	((??_lcd_write_data+0)+0+1),f
  5669  0C9C  2C99               	goto	u4187
  5670                           opt asmopt_on
  5671                           
  5672                           	line	28
  5673                           	
  5674  0C9D                     l2817:	
  5675  0C9D  0008               	return
  5676                           	opt stack 0
  5677                           GLOBAL	__end_of_lcd_write_data
  5678  0C9E                     	__end_of_lcd_write_data:
  5679 ;; =============== function _lcd_write_data ends ============
  5680                           
  5681                           	signat	_lcd_write_data,4216
  5682                           	global	_waitFor
  5683                           psect	text1329,local,class=CODE,delta=2
  5684                           global __ptext1329
  5685  0E4D                     __ptext1329:
  5686                           
  5687 ;; *************** function _waitFor *****************
  5688 ;; Defined at:
  5689 ;;		line 82 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  type            1    wreg     unsigned char 
  5692 ;;  highByte        1   12[BANK0 ] unsigned char 
  5693 ;;  lowByte         1   13[BANK0 ] unsigned char 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  type            1   17[BANK0 ] unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;		None               void
  5698 ;; Registers used:
  5699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5705 ;;      Params:         0       2       0       0       0
  5706 ;;      Locals:         0       1       0       0       0
  5707 ;;      Temps:          0       3       0       0       0
  5708 ;;      Totals:         0       6       0       0       0
  5709 ;;Total ram usage:        6 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    3
  5712 ;; This function calls:
  5713 ;;		_ser_putch
  5714 ;; This function is called by:
  5715 ;;		_turnAround
  5716 ;;		_turnLeft90
  5717 ;;		_turnRight90
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           psect	text1329
  5721                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  5722                           	line	82
  5723                           	global	__size_of_waitFor
  5724  0029                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
  5725                           	
  5726  0E4D                     _waitFor:	
  5727                           	opt	stack 1
  5728                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5729                           ;waitFor@type stored from wreg
  5730  0E4D  1283               	bcf	status, 5	;RP0=0, select bank0
  5731  0E4E  1303               	bcf	status, 6	;RP1=0, select bank0
  5732  0E4F  00B1               	movwf	(waitFor@type)
  5733                           	line	83
  5734                           	
  5735  0E50                     l9663:	
  5736                           ;drive.c: 83: _delay((unsigned long)((100)*(20000000/4000.0)));
  5737                           	opt asmopt_off
  5738  0E50  3003               movlw  3
  5739  0E51  00B0               movwf	((??_waitFor+0)+0+2),f
  5740  0E52  308A               movlw	138
  5741  0E53  00AF               movwf	((??_waitFor+0)+0+1),f
  5742  0E54  3056               	movlw	86
  5743  0E55  00AE               movwf	((??_waitFor+0)+0),f
  5744  0E56                     u4197:
  5745  0E56  0BAE               	decfsz	((??_waitFor+0)+0),f
  5746  0E57  2E56               	goto	u4197
  5747  0E58  0BAF               	decfsz	((??_waitFor+0)+0+1),f
  5748  0E59  2E56               	goto	u4197
  5749  0E5A  0BB0               	decfsz	((??_waitFor+0)+0+2),f
  5750  0E5B  2E56               	goto	u4197
  5751  0E5C  2E5D               	nop2
  5752                           opt asmopt_on
  5753                           
  5754                           	line	84
  5755                           	
  5756  0E5D                     l9665:	
  5757                           ;drive.c: 84: ser_putch(type);
  5758  0E5D  1283               	bcf	status, 5	;RP0=0, select bank0
  5759  0E5E  1303               	bcf	status, 6	;RP1=0, select bank0
  5760  0E5F  0831               	movf	(waitFor@type),w
  5761  0E60  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5762                           	line	85
  5763                           	
  5764  0E65                     l9667:	
  5765                           ;drive.c: 85: ser_putch(highByte);
  5766  0E65  1283               	bcf	status, 5	;RP0=0, select bank0
  5767  0E66  1303               	bcf	status, 6	;RP1=0, select bank0
  5768  0E67  082C               	movf	(waitFor@highByte),w
  5769  0E68  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5770                           	line	86
  5771                           	
  5772  0E6D                     l9669:	
  5773                           ;drive.c: 86: ser_putch(lowByte);
  5774  0E6D  1283               	bcf	status, 5	;RP0=0, select bank0
  5775  0E6E  1303               	bcf	status, 6	;RP1=0, select bank0
  5776  0E6F  082D               	movf	(waitFor@lowByte),w
  5777  0E70  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5778                           	line	87
  5779                           	
  5780  0E75                     l1423:	
  5781  0E75  0008               	return
  5782                           	opt stack 0
  5783                           GLOBAL	__end_of_waitFor
  5784  0E76                     	__end_of_waitFor:
  5785 ;; =============== function _waitFor ends ============
  5786                           
  5787                           	signat	_waitFor,12408
  5788                           	global	_ser_getch
  5789                           psect	text1330,local,class=CODE,delta=2
  5790                           global __ptext1330
  5791  0D4F                     __ptext1330:
  5792                           
  5793 ;; *************** function _ser_getch *****************
  5794 ;; Defined at:
  5795 ;;		line 58 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  c               1   11[BANK0 ] unsigned char 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      unsigned char 
  5802 ;; Registers used:
  5803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5809 ;;      Params:         0       0       0       0       0
  5810 ;;      Locals:         0       1       0       0       0
  5811 ;;      Temps:          0       1       0       0       0
  5812 ;;      Totals:         0       2       0       0       0
  5813 ;;Total ram usage:        2 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    3
  5816 ;; This function calls:
  5817 ;;		_ser_isrx
  5818 ;; This function is called by:
  5819 ;;		_driveForDistance
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           psect	text1330
  5823                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  5824                           	line	58
  5825                           	global	__size_of_ser_getch
  5826  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  5827                           	
  5828  0D4F                     _ser_getch:	
  5829                           	opt	stack 1
  5830                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5831                           	line	61
  5832                           	
  5833  0D4F                     l9647:	
  5834                           ;ser.c: 59: unsigned char c;
  5835                           ;ser.c: 61: while (ser_isrx()==0)
  5836  0D4F  2D51               	goto	l9649
  5837                           	
  5838  0D50                     l4386:	
  5839                           	line	62
  5840                           ;ser.c: 62: continue;
  5841  0D50  2D51               	goto	l9649
  5842                           	
  5843  0D51                     l4385:	
  5844                           	line	61
  5845                           	
  5846  0D51                     l9649:	
  5847  0D51  120A  118A  27E6   	fcall	_ser_isrx
              120A  158A         
  5848  0D56  1C03               	btfss	status,0
  5849  0D57  2D59               	goto	u3771
  5850  0D58  2D5A               	goto	u3770
  5851  0D59                     u3771:
  5852  0D59  2D51               	goto	l9649
  5853  0D5A                     u3770:
  5854                           	
  5855  0D5A                     l4387:	
  5856                           	line	64
  5857                           ;ser.c: 64: GIE=0;
  5858  0D5A  138B               	bcf	(95/8),(95)&7
  5859                           	line	65
  5860                           	
  5861  0D5B                     l9651:	
  5862                           ;ser.c: 65: c=rxfifo[rxoptr];
  5863  0D5B  0878               	movf	(_rxoptr),w
  5864  0D5C  3E49               	addlw	_rxfifo&0ffh
  5865  0D5D  0084               	movwf	fsr0
  5866  0D5E  1383               	bcf	status, 7	;select IRP bank0
  5867  0D5F  0800               	movf	indf,w
  5868  0D60  1283               	bcf	status, 5	;RP0=0, select bank0
  5869  0D61  1303               	bcf	status, 6	;RP1=0, select bank0
  5870  0D62  00AA               	movwf	(??_ser_getch+0)+0
  5871  0D63  082A               	movf	(??_ser_getch+0)+0,w
  5872  0D64  00AB               	movwf	(ser_getch@c)
  5873                           	line	66
  5874                           	
  5875  0D65                     l9653:	
  5876                           ;ser.c: 66: ++rxoptr;
  5877  0D65  3001               	movlw	(01h)
  5878  0D66  00AA               	movwf	(??_ser_getch+0)+0
  5879  0D67  082A               	movf	(??_ser_getch+0)+0,w
  5880  0D68  07F8               	addwf	(_rxoptr),f	;volatile
  5881                           	line	67
  5882                           	
  5883  0D69                     l9655:	
  5884                           ;ser.c: 67: rxoptr &= (16-1);
  5885  0D69  300F               	movlw	(0Fh)
  5886  0D6A  00AA               	movwf	(??_ser_getch+0)+0
  5887  0D6B  082A               	movf	(??_ser_getch+0)+0,w
  5888  0D6C  05F8               	andwf	(_rxoptr),f	;volatile
  5889                           	line	68
  5890                           	
  5891  0D6D                     l9657:	
  5892                           ;ser.c: 68: GIE=1;
  5893  0D6D  178B               	bsf	(95/8),(95)&7
  5894                           	line	69
  5895                           	
  5896  0D6E                     l9659:	
  5897                           ;ser.c: 69: return c;
  5898  0D6E  082B               	movf	(ser_getch@c),w
  5899  0D6F  2D70               	goto	l4388
  5900                           	
  5901  0D70                     l9661:	
  5902                           	line	70
  5903                           	
  5904  0D70                     l4388:	
  5905  0D70  0008               	return
  5906                           	opt stack 0
  5907                           GLOBAL	__end_of_ser_getch
  5908  0D71                     	__end_of_ser_getch:
  5909 ;; =============== function _ser_getch ends ============
  5910                           
  5911                           	signat	_ser_getch,89
  5912                           	global	_drive
  5913                           psect	text1331,local,class=CODE,delta=2
  5914                           global __ptext1331
  5915  0F5A                     __ptext1331:
  5916                           
  5917 ;; *************** function _drive *****************
  5918 ;; Defined at:
  5919 ;;		line 12 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  highByteSpee    1    wreg     unsigned char 
  5922 ;;  lowByteSpeed    1   12[BANK0 ] unsigned char 
  5923 ;;  highByteRadi    1   13[BANK0 ] unsigned char 
  5924 ;;  lowByteRadiu    1   14[BANK0 ] unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  highByteSpee    1   18[BANK0 ] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;		None               void
  5929 ;; Registers used:
  5930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5936 ;;      Params:         0       3       0       0       0
  5937 ;;      Locals:         0       1       0       0       0
  5938 ;;      Temps:          0       3       0       0       0
  5939 ;;      Totals:         0       7       0       0       0
  5940 ;;Total ram usage:        7 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    3
  5943 ;; This function calls:
  5944 ;;		_ser_putch
  5945 ;; This function is called by:
  5946 ;;		_driveForDistance
  5947 ;;		_turnAround
  5948 ;;		_turnLeft90
  5949 ;;		_turnRight90
  5950 ;;		_main
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           psect	text1331
  5954                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\drive.c"
  5955                           	line	12
  5956                           	global	__size_of_drive
  5957  0037                     	__size_of_drive	equ	__end_of_drive-_drive
  5958                           	
  5959  0F5A                     _drive:	
  5960                           	opt	stack 1
  5961                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5962                           ;drive@highByteSpeed stored from wreg
  5963  0F5A  1283               	bcf	status, 5	;RP0=0, select bank0
  5964  0F5B  1303               	bcf	status, 6	;RP1=0, select bank0
  5965  0F5C  00B2               	movwf	(drive@highByteSpeed)
  5966                           	line	13
  5967                           	
  5968  0F5D                     l9635:	
  5969                           ;drive.c: 13: _delay((unsigned long)((100)*(20000000/4000.0)));
  5970                           	opt asmopt_off
  5971  0F5D  3003               movlw  3
  5972  0F5E  00B1               movwf	((??_drive+0)+0+2),f
  5973  0F5F  308A               movlw	138
  5974  0F60  00B0               movwf	((??_drive+0)+0+1),f
  5975  0F61  3056               	movlw	86
  5976  0F62  00AF               movwf	((??_drive+0)+0),f
  5977  0F63                     u4207:
  5978  0F63  0BAF               	decfsz	((??_drive+0)+0),f
  5979  0F64  2F63               	goto	u4207
  5980  0F65  0BB0               	decfsz	((??_drive+0)+0+1),f
  5981  0F66  2F63               	goto	u4207
  5982  0F67  0BB1               	decfsz	((??_drive+0)+0+2),f
  5983  0F68  2F63               	goto	u4207
  5984  0F69  2F6A               	nop2
  5985                           opt asmopt_on
  5986                           
  5987                           	line	14
  5988                           	
  5989  0F6A                     l9637:	
  5990                           ;drive.c: 14: ser_putch(137);
  5991  0F6A  3089               	movlw	(089h)
  5992  0F6B  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  5993                           	line	15
  5994                           	
  5995  0F70                     l9639:	
  5996                           ;drive.c: 15: ser_putch(highByteSpeed);
  5997  0F70  1283               	bcf	status, 5	;RP0=0, select bank0
  5998  0F71  1303               	bcf	status, 6	;RP1=0, select bank0
  5999  0F72  0832               	movf	(drive@highByteSpeed),w
  6000  0F73  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  6001                           	line	16
  6002                           	
  6003  0F78                     l9641:	
  6004                           ;drive.c: 16: ser_putch(lowByteSpeed);
  6005  0F78  1283               	bcf	status, 5	;RP0=0, select bank0
  6006  0F79  1303               	bcf	status, 6	;RP1=0, select bank0
  6007  0F7A  082C               	movf	(drive@lowByteSpeed),w
  6008  0F7B  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  6009                           	line	17
  6010                           	
  6011  0F80                     l9643:	
  6012                           ;drive.c: 17: ser_putch(highByteRadius);
  6013  0F80  1283               	bcf	status, 5	;RP0=0, select bank0
  6014  0F81  1303               	bcf	status, 6	;RP1=0, select bank0
  6015  0F82  082D               	movf	(drive@highByteRadius),w
  6016  0F83  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  6017                           	line	18
  6018                           	
  6019  0F88                     l9645:	
  6020                           ;drive.c: 18: ser_putch(lowByteRadius);
  6021  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  6022  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  6023  0F8A  082E               	movf	(drive@lowByteRadius),w
  6024  0F8B  120A  158A  252E   	fcall	_ser_putch
              120A  158A         
  6025                           	line	19
  6026                           	
  6027  0F90                     l1401:	
  6028  0F90  0008               	return
  6029                           	opt stack 0
  6030                           GLOBAL	__end_of_drive
  6031  0F91                     	__end_of_drive:
  6032 ;; =============== function _drive ends ============
  6033                           
  6034                           	signat	_drive,16504
  6035                           	global	_init_adc
  6036                           psect	text1332,local,class=CODE,delta=2
  6037                           global __ptext1332
  6038  0CC5                     __ptext1332:
  6039                           
  6040 ;; *************** function _init_adc *****************
  6041 ;; Defined at:
  6042 ;;		line 48 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\adc.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;		None               void
  6049 ;; Registers used:
  6050 ;;		wreg, status,2
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6056 ;;      Params:         0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0
  6058 ;;      Temps:          0       1       0       0       0
  6059 ;;      Totals:         0       1       0       0       0
  6060 ;;Total ram usage:        1 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    2
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_init
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           psect	text1332
  6070                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\adc.c"
  6071                           	line	48
  6072                           	global	__size_of_init_adc
  6073  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  6074                           	
  6075  0CC5                     _init_adc:	
  6076                           	opt	stack 4
  6077                           ; Regs used in _init_adc: [wreg+status,2]
  6078                           	line	50
  6079                           	
  6080  0CC5                     l9625:	
  6081                           ;adc.c: 50: PORTA = 0;
  6082  0CC5  1283               	bcf	status, 5	;RP0=0, select bank0
  6083  0CC6  1303               	bcf	status, 6	;RP1=0, select bank0
  6084  0CC7  0185               	clrf	(5)	;volatile
  6085                           	line	51
  6086                           	
  6087  0CC8                     l9627:	
  6088                           ;adc.c: 51: TRISA = 0b00111111;
  6089  0CC8  303F               	movlw	(03Fh)
  6090  0CC9  1683               	bsf	status, 5	;RP0=1, select bank1
  6091  0CCA  1303               	bcf	status, 6	;RP1=0, select bank1
  6092  0CCB  0085               	movwf	(133)^080h	;volatile
  6093                           	line	54
  6094                           	
  6095  0CCC                     l9629:	
  6096                           ;adc.c: 54: ADCON0 = 0b10100001;
  6097  0CCC  30A1               	movlw	(0A1h)
  6098  0CCD  1283               	bcf	status, 5	;RP0=0, select bank0
  6099  0CCE  1303               	bcf	status, 6	;RP1=0, select bank0
  6100  0CCF  009F               	movwf	(31)	;volatile
  6101                           	line	55
  6102                           	
  6103  0CD0                     l9631:	
  6104                           ;adc.c: 55: ADCON1 = 0b00000010;
  6105  0CD0  3002               	movlw	(02h)
  6106  0CD1  1683               	bsf	status, 5	;RP0=1, select bank1
  6107  0CD2  1303               	bcf	status, 6	;RP1=0, select bank1
  6108  0CD3  009F               	movwf	(159)^080h	;volatile
  6109                           	line	57
  6110                           	
  6111  0CD4                     l9633:	
  6112                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6113                           	opt asmopt_off
  6114  0CD4  3053               movlw	83
  6115  0CD5  1283               	bcf	status, 5	;RP0=0, select bank0
  6116  0CD6  1303               	bcf	status, 6	;RP1=0, select bank0
  6117  0CD7  00AA               movwf	(??_init_adc+0)+0,f
  6118  0CD8                     u4217:
  6119  0CD8  0BAA               decfsz	(??_init_adc+0)+0,f
  6120  0CD9  2CD8               	goto	u4217
  6121                           opt asmopt_on
  6122                           
  6123                           	line	58
  6124                           	
  6125  0CDA                     l700:	
  6126  0CDA  0008               	return
  6127                           	opt stack 0
  6128                           GLOBAL	__end_of_init_adc
  6129  0CDB                     	__end_of_init_adc:
  6130 ;; =============== function _init_adc ends ============
  6131                           
  6132                           	signat	_init_adc,88
  6133                           	global	_adc_read
  6134                           psect	text1333,local,class=CODE,delta=2
  6135                           global __ptext1333
  6136  06F3                     __ptext1333:
  6137                           
  6138 ;; *************** function _adc_read *****************
  6139 ;; Defined at:
  6140 ;;		line 62 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\adc.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  adc_value       2   31[BANK0 ] volatile int 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  2   25[BANK0 ] int 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6154 ;;      Params:         0       2       0       0       0
  6155 ;;      Locals:         0       2       0       0       0
  6156 ;;      Temps:          0       4       0       0       0
  6157 ;;      Totals:         0       8       0       0       0
  6158 ;;Total ram usage:        8 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    3
  6161 ;; This function calls:
  6162 ;;		___awdiv
  6163 ;; This function is called by:
  6164 ;;		_adc_read_channel
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           psect	text1333
  6168                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\adc.c"
  6169                           	line	62
  6170                           	global	__size_of_adc_read
  6171  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  6172                           	
  6173  06F3                     _adc_read:	
  6174                           	opt	stack 0
  6175                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6176                           	line	65
  6177                           	
  6178  06F3                     l9615:	
  6179                           ;adc.c: 63: volatile int adc_value;
  6180                           ;adc.c: 65: ADRESH = 0;
  6181  06F3  1283               	bcf	status, 5	;RP0=0, select bank0
  6182  06F4  1303               	bcf	status, 6	;RP1=0, select bank0
  6183  06F5  019E               	clrf	(30)	;volatile
  6184                           	line	66
  6185                           ;adc.c: 66: ADRESL = 0;
  6186  06F6  1683               	bsf	status, 5	;RP0=1, select bank1
  6187  06F7  1303               	bcf	status, 6	;RP1=0, select bank1
  6188  06F8  019E               	clrf	(158)^080h	;volatile
  6189                           	line	68
  6190                           	
  6191  06F9                     l9617:	
  6192                           ;adc.c: 68: GO = 1;
  6193  06F9  1283               	bcf	status, 5	;RP0=0, select bank0
  6194  06FA  1303               	bcf	status, 6	;RP1=0, select bank0
  6195  06FB  151F               	bsf	(250/8),(250)&7
  6196                           	line	69
  6197                           ;adc.c: 69: while(GO) continue;
  6198  06FC  2EFD               	goto	l703
  6199                           	
  6200  06FD                     l704:	
  6201                           	
  6202  06FD                     l703:	
  6203  06FD  191F               	btfsc	(250/8),(250)&7
  6204  06FE  2F00               	goto	u3751
  6205  06FF  2F01               	goto	u3750
  6206  0700                     u3751:
  6207  0700  2EFD               	goto	l703
  6208  0701                     u3750:
  6209  0701  2F02               	goto	l9619
  6210                           	
  6211  0702                     l705:	
  6212                           	line	75
  6213                           	
  6214  0702                     l9619:	
  6215                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
  6216  0702  3040               	movlw	low(040h)
  6217  0703  00B0               	movwf	(?___awdiv)
  6218  0704  3000               	movlw	high(040h)
  6219  0705  00B1               	movwf	((?___awdiv))+1
  6220  0706  1683               	bsf	status, 5	;RP0=1, select bank1
  6221  0707  1303               	bcf	status, 6	;RP1=0, select bank1
  6222  0708  081E               	movf	(158)^080h,w	;volatile
  6223  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  6224  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  6225  070B  00BB               	movwf	(??_adc_read+0)+0
  6226  070C  01BC               	clrf	(??_adc_read+0)+0+1
  6227  070D  083B               	movf	0+(??_adc_read+0)+0,w
  6228  070E  00B2               	movwf	0+(?___awdiv)+02h
  6229  070F  083C               	movf	1+(??_adc_read+0)+0,w
  6230  0710  00B3               	movwf	1+(?___awdiv)+02h
  6231  0711  120A  118A  23B8   	fcall	___awdiv
              120A  118A         
  6232  0716  1283               	bcf	status, 5	;RP0=0, select bank0
  6233  0717  1303               	bcf	status, 6	;RP1=0, select bank0
  6234  0718  081E               	movf	(30),w	;volatile
  6235  0719  00BD               	movwf	(??_adc_read+2)+0
  6236  071A  01BE               	clrf	(??_adc_read+2)+0+1
  6237  071B  3002               	movlw	02h
  6238  071C  00FF               	movwf	btemp+1
  6239  071D                     u3765:
  6240  071D  1003               	clrc
  6241  071E  0DBD               	rlf	(??_adc_read+2)+0,f
  6242  071F  0DBE               	rlf	(??_adc_read+2)+1,f
  6243  0720  0BFF               	decfsz	btemp+1,f
  6244  0721  2F1D               	goto	u3765
  6245  0722  0830               	movf	(0+(?___awdiv)),w
  6246  0723  073D               	addwf	0+(??_adc_read+2)+0,w
  6247  0724  00BF               	movwf	(adc_read@adc_value)	;volatile
  6248  0725  0831               	movf	(1+(?___awdiv)),w
  6249  0726  1803               	skipnc
  6250  0727  0A31               	incf	(1+(?___awdiv)),w
  6251  0728  073E               	addwf	1+(??_adc_read+2)+0,w
  6252  0729  00C0               	movwf	1+(adc_read@adc_value)	;volatile
  6253                           	line	77
  6254                           	
  6255  072A                     l9621:	
  6256                           ;adc.c: 77: return (adc_value);
  6257  072A  0840               	movf	(adc_read@adc_value+1),w	;volatile
  6258  072B  01BA               	clrf	(?_adc_read+1)
  6259  072C  07BA               	addwf	(?_adc_read+1)
  6260  072D  083F               	movf	(adc_read@adc_value),w	;volatile
  6261  072E  01B9               	clrf	(?_adc_read)
  6262  072F  07B9               	addwf	(?_adc_read)
  6263                           
  6264  0730  2F31               	goto	l706
  6265                           	
  6266  0731                     l9623:	
  6267                           	line	78
  6268                           	
  6269  0731                     l706:	
  6270  0731  0008               	return
  6271                           	opt stack 0
  6272                           GLOBAL	__end_of_adc_read
  6273  0732                     	__end_of_adc_read:
  6274 ;; =============== function _adc_read ends ============
  6275                           
  6276                           	signat	_adc_read,90
  6277                           	global	___awdiv
  6278                           psect	text1334,local,class=CODE,delta=2
  6279                           global __ptext1334
  6280  03B8                     __ptext1334:
  6281                           
  6282 ;; *************** function ___awdiv *****************
  6283 ;; Defined at:
  6284 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  divisor         2   16[BANK0 ] int 
  6287 ;;  dividend        2   18[BANK0 ] int 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  quotient        2   23[BANK0 ] int 
  6290 ;;  sign            1   22[BANK0 ] unsigned char 
  6291 ;;  counter         1   21[BANK0 ] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  2   16[BANK0 ] int 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6301 ;;      Params:         0       4       0       0       0
  6302 ;;      Locals:         0       4       0       0       0
  6303 ;;      Temps:          0       1       0       0       0
  6304 ;;      Totals:         0       9       0       0       0
  6305 ;;Total ram usage:        9 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    2
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_adc_read
  6312 ;;		_convert
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           psect	text1334
  6316                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  6317                           	line	5
  6318                           	global	__size_of___awdiv
  6319  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  6320                           	
  6321  03B8                     ___awdiv:	
  6322                           	opt	stack 1
  6323                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6324                           	line	9
  6325                           	
  6326  03B8                     l9575:	
  6327  03B8  1283               	bcf	status, 5	;RP0=0, select bank0
  6328  03B9  1303               	bcf	status, 6	;RP1=0, select bank0
  6329  03BA  01B6               	clrf	(___awdiv@sign)
  6330                           	line	10
  6331  03BB  1FB1               	btfss	(___awdiv@divisor+1),7
  6332  03BC  2BBE               	goto	u3651
  6333  03BD  2BBF               	goto	u3650
  6334  03BE                     u3651:
  6335  03BE  2BC8               	goto	l9579
  6336  03BF                     u3650:
  6337                           	line	11
  6338                           	
  6339  03BF                     l9577:	
  6340  03BF  09B0               	comf	(___awdiv@divisor),f
  6341  03C0  09B1               	comf	(___awdiv@divisor+1),f
  6342  03C1  0AB0               	incf	(___awdiv@divisor),f
  6343  03C2  1903               	skipnz
  6344  03C3  0AB1               	incf	(___awdiv@divisor+1),f
  6345                           	line	12
  6346  03C4  01B6               	clrf	(___awdiv@sign)
  6347  03C5  1403               	bsf	status,0
  6348  03C6  0DB6               	rlf	(___awdiv@sign),f
  6349  03C7  2BC8               	goto	l9579
  6350                           	line	13
  6351                           	
  6352  03C8                     l6657:	
  6353                           	line	14
  6354                           	
  6355  03C8                     l9579:	
  6356  03C8  1FB3               	btfss	(___awdiv@dividend+1),7
  6357  03C9  2BCB               	goto	u3661
  6358  03CA  2BCC               	goto	u3660
  6359  03CB                     u3661:
  6360  03CB  2BD6               	goto	l9585
  6361  03CC                     u3660:
  6362                           	line	15
  6363                           	
  6364  03CC                     l9581:	
  6365  03CC  09B2               	comf	(___awdiv@dividend),f
  6366  03CD  09B3               	comf	(___awdiv@dividend+1),f
  6367  03CE  0AB2               	incf	(___awdiv@dividend),f
  6368  03CF  1903               	skipnz
  6369  03D0  0AB3               	incf	(___awdiv@dividend+1),f
  6370                           	line	16
  6371                           	
  6372  03D1                     l9583:	
  6373  03D1  3001               	movlw	(01h)
  6374  03D2  00B4               	movwf	(??___awdiv+0)+0
  6375  03D3  0834               	movf	(??___awdiv+0)+0,w
  6376  03D4  06B6               	xorwf	(___awdiv@sign),f
  6377  03D5  2BD6               	goto	l9585
  6378                           	line	17
  6379                           	
  6380  03D6                     l6658:	
  6381                           	line	18
  6382                           	
  6383  03D6                     l9585:	
  6384  03D6  01B7               	clrf	(___awdiv@quotient)
  6385  03D7  01B8               	clrf	(___awdiv@quotient+1)
  6386                           	line	19
  6387                           	
  6388  03D8                     l9587:	
  6389  03D8  0831               	movf	(___awdiv@divisor+1),w
  6390  03D9  0430               	iorwf	(___awdiv@divisor),w
  6391  03DA  1903               	skipnz
  6392  03DB  2BDD               	goto	u3671
  6393  03DC  2BDE               	goto	u3670
  6394  03DD                     u3671:
  6395  03DD  2C1C               	goto	l9607
  6396  03DE                     u3670:
  6397                           	line	20
  6398                           	
  6399  03DE                     l9589:	
  6400  03DE  01B5               	clrf	(___awdiv@counter)
  6401  03DF  1403               	bsf	status,0
  6402  03E0  0DB5               	rlf	(___awdiv@counter),f
  6403                           	line	21
  6404  03E1  2BEE               	goto	l9595
  6405                           	
  6406  03E2                     l6661:	
  6407                           	line	22
  6408                           	
  6409  03E2                     l9591:	
  6410  03E2  3001               	movlw	01h
  6411                           	
  6412  03E3                     u3685:
  6413  03E3  1003               	clrc
  6414  03E4  0DB0               	rlf	(___awdiv@divisor),f
  6415  03E5  0DB1               	rlf	(___awdiv@divisor+1),f
  6416  03E6  3EFF               	addlw	-1
  6417  03E7  1D03               	skipz
  6418  03E8  2BE3               	goto	u3685
  6419                           	line	23
  6420                           	
  6421  03E9                     l9593:	
  6422  03E9  3001               	movlw	(01h)
  6423  03EA  00B4               	movwf	(??___awdiv+0)+0
  6424  03EB  0834               	movf	(??___awdiv+0)+0,w
  6425  03EC  07B5               	addwf	(___awdiv@counter),f
  6426  03ED  2BEE               	goto	l9595
  6427                           	line	24
  6428                           	
  6429  03EE                     l6660:	
  6430                           	line	21
  6431                           	
  6432  03EE                     l9595:	
  6433  03EE  1FB1               	btfss	(___awdiv@divisor+1),(15)&7
  6434  03EF  2BF1               	goto	u3691
  6435  03F0  2BF2               	goto	u3690
  6436  03F1                     u3691:
  6437  03F1  2BE2               	goto	l9591
  6438  03F2                     u3690:
  6439  03F2  2BF4               	goto	l9597
  6440                           	
  6441  03F3                     l6662:	
  6442  03F3  2BF4               	goto	l9597
  6443                           	line	25
  6444                           	
  6445  03F4                     l6663:	
  6446                           	line	26
  6447                           	
  6448  03F4                     l9597:	
  6449  03F4  3001               	movlw	01h
  6450                           	
  6451  03F5                     u3705:
  6452  03F5  1003               	clrc
  6453  03F6  0DB7               	rlf	(___awdiv@quotient),f
  6454  03F7  0DB8               	rlf	(___awdiv@quotient+1),f
  6455  03F8  3EFF               	addlw	-1
  6456  03F9  1D03               	skipz
  6457  03FA  2BF5               	goto	u3705
  6458                           	line	27
  6459  03FB  0831               	movf	(___awdiv@divisor+1),w
  6460  03FC  0233               	subwf	(___awdiv@dividend+1),w
  6461  03FD  1D03               	skipz
  6462  03FE  2C01               	goto	u3715
  6463  03FF  0830               	movf	(___awdiv@divisor),w
  6464  0400  0232               	subwf	(___awdiv@dividend),w
  6465  0401                     u3715:
  6466  0401  1C03               	skipc
  6467  0402  2C04               	goto	u3711
  6468  0403  2C05               	goto	u3710
  6469  0404                     u3711:
  6470  0404  2C0D               	goto	l9603
  6471  0405                     u3710:
  6472                           	line	28
  6473                           	
  6474  0405                     l9599:	
  6475  0405  0830               	movf	(___awdiv@divisor),w
  6476  0406  02B2               	subwf	(___awdiv@dividend),f
  6477  0407  0831               	movf	(___awdiv@divisor+1),w
  6478  0408  1C03               	skipc
  6479  0409  03B3               	decf	(___awdiv@dividend+1),f
  6480  040A  02B3               	subwf	(___awdiv@dividend+1),f
  6481                           	line	29
  6482                           	
  6483  040B                     l9601:	
  6484  040B  1437               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  6485  040C  2C0D               	goto	l9603
  6486                           	line	30
  6487                           	
  6488  040D                     l6664:	
  6489                           	line	31
  6490                           	
  6491  040D                     l9603:	
  6492  040D  3001               	movlw	01h
  6493                           	
  6494  040E                     u3725:
  6495  040E  1003               	clrc
  6496  040F  0CB1               	rrf	(___awdiv@divisor+1),f
  6497  0410  0CB0               	rrf	(___awdiv@divisor),f
  6498  0411  3EFF               	addlw	-1
  6499  0412  1D03               	skipz
  6500  0413  2C0E               	goto	u3725
  6501                           	line	32
  6502                           	
  6503  0414                     l9605:	
  6504  0414  3001               	movlw	low(01h)
  6505  0415  02B5               	subwf	(___awdiv@counter),f
  6506  0416  1D03               	btfss	status,2
  6507  0417  2C19               	goto	u3731
  6508  0418  2C1A               	goto	u3730
  6509  0419                     u3731:
  6510  0419  2BF4               	goto	l9597
  6511  041A                     u3730:
  6512  041A  2C1C               	goto	l9607
  6513                           	
  6514  041B                     l6665:	
  6515  041B  2C1C               	goto	l9607
  6516                           	line	33
  6517                           	
  6518  041C                     l6659:	
  6519                           	line	34
  6520                           	
  6521  041C                     l9607:	
  6522  041C  0836               	movf	(___awdiv@sign),w
  6523  041D  1D03               	skipz
  6524  041E  2C20               	goto	u3740
  6525  041F  2C26               	goto	l9611
  6526  0420                     u3740:
  6527                           	line	35
  6528                           	
  6529  0420                     l9609:	
  6530  0420  09B7               	comf	(___awdiv@quotient),f
  6531  0421  09B8               	comf	(___awdiv@quotient+1),f
  6532  0422  0AB7               	incf	(___awdiv@quotient),f
  6533  0423  1903               	skipnz
  6534  0424  0AB8               	incf	(___awdiv@quotient+1),f
  6535  0425  2C26               	goto	l9611
  6536                           	
  6537  0426                     l6666:	
  6538                           	line	36
  6539                           	
  6540  0426                     l9611:	
  6541  0426  0838               	movf	(___awdiv@quotient+1),w
  6542  0427  01B1               	clrf	(?___awdiv+1)
  6543  0428  07B1               	addwf	(?___awdiv+1)
  6544  0429  0837               	movf	(___awdiv@quotient),w
  6545  042A  01B0               	clrf	(?___awdiv)
  6546  042B  07B0               	addwf	(?___awdiv)
  6547                           
  6548  042C  2C2D               	goto	l6667
  6549                           	
  6550  042D                     l9613:	
  6551                           	line	37
  6552                           	
  6553  042D                     l6667:	
  6554  042D  0008               	return
  6555                           	opt stack 0
  6556                           GLOBAL	__end_of___awdiv
  6557  042E                     	__end_of___awdiv:
  6558 ;; =============== function ___awdiv ends ============
  6559                           
  6560                           	signat	___awdiv,8314
  6561                           	global	___wmul
  6562                           psect	text1335,local,class=CODE,delta=2
  6563                           global __ptext1335
  6564  0ECA                     __ptext1335:
  6565                           
  6566 ;; *************** function ___wmul *****************
  6567 ;; Defined at:
  6568 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  multiplier      2   10[BANK0 ] unsigned int 
  6571 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  product         2   14[BANK0 ] unsigned int 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  2   10[BANK0 ] unsigned int 
  6576 ;; Registers used:
  6577 ;;		wreg, status,2, status,0
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6583 ;;      Params:         0       4       0       0       0
  6584 ;;      Locals:         0       2       0       0       0
  6585 ;;      Temps:          0       0       0       0       0
  6586 ;;      Totals:         0       6       0       0       0
  6587 ;;Total ram usage:        6 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    2
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_convert
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           psect	text1335
  6597                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  6598                           	line	3
  6599                           	global	__size_of___wmul
  6600  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6601                           	
  6602  0ECA                     ___wmul:	
  6603                           	opt	stack 1
  6604                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6605                           	line	4
  6606                           	
  6607  0ECA                     l9563:	
  6608  0ECA  1283               	bcf	status, 5	;RP0=0, select bank0
  6609  0ECB  1303               	bcf	status, 6	;RP1=0, select bank0
  6610  0ECC  01AE               	clrf	(___wmul@product)
  6611  0ECD  01AF               	clrf	(___wmul@product+1)
  6612  0ECE  2ECF               	goto	l9565
  6613                           	line	6
  6614                           	
  6615  0ECF                     l6517:	
  6616                           	line	7
  6617                           	
  6618  0ECF                     l9565:	
  6619  0ECF  1C2A               	btfss	(___wmul@multiplier),(0)&7
  6620  0ED0  2ED2               	goto	u3611
  6621  0ED1  2ED3               	goto	u3610
  6622  0ED2                     u3611:
  6623  0ED2  2ED9               	goto	l6518
  6624  0ED3                     u3610:
  6625                           	line	8
  6626                           	
  6627  0ED3                     l9567:	
  6628  0ED3  082C               	movf	(___wmul@multiplicand),w
  6629  0ED4  07AE               	addwf	(___wmul@product),f
  6630  0ED5  1803               	skipnc
  6631  0ED6  0AAF               	incf	(___wmul@product+1),f
  6632  0ED7  082D               	movf	(___wmul@multiplicand+1),w
  6633  0ED8  07AF               	addwf	(___wmul@product+1),f
  6634                           	
  6635  0ED9                     l6518:	
  6636                           	line	9
  6637  0ED9  3001               	movlw	01h
  6638                           	
  6639  0EDA                     u3625:
  6640  0EDA  1003               	clrc
  6641  0EDB  0DAC               	rlf	(___wmul@multiplicand),f
  6642  0EDC  0DAD               	rlf	(___wmul@multiplicand+1),f
  6643  0EDD  3EFF               	addlw	-1
  6644  0EDE  1D03               	skipz
  6645  0EDF  2EDA               	goto	u3625
  6646                           	line	10
  6647                           	
  6648  0EE0                     l9569:	
  6649  0EE0  3001               	movlw	01h
  6650                           	
  6651  0EE1                     u3635:
  6652  0EE1  1003               	clrc
  6653  0EE2  0CAB               	rrf	(___wmul@multiplier+1),f
  6654  0EE3  0CAA               	rrf	(___wmul@multiplier),f
  6655  0EE4  3EFF               	addlw	-1
  6656  0EE5  1D03               	skipz
  6657  0EE6  2EE1               	goto	u3635
  6658                           	line	11
  6659  0EE7  082B               	movf	((___wmul@multiplier+1)),w
  6660  0EE8  042A               	iorwf	((___wmul@multiplier)),w
  6661  0EE9  1D03               	skipz
  6662  0EEA  2EEC               	goto	u3641
  6663  0EEB  2EED               	goto	u3640
  6664  0EEC                     u3641:
  6665  0EEC  2ECF               	goto	l9565
  6666  0EED                     u3640:
  6667  0EED  2EEE               	goto	l9571
  6668                           	
  6669  0EEE                     l6519:	
  6670                           	line	12
  6671                           	
  6672  0EEE                     l9571:	
  6673  0EEE  082F               	movf	(___wmul@product+1),w
  6674  0EEF  01AB               	clrf	(?___wmul+1)
  6675  0EF0  07AB               	addwf	(?___wmul+1)
  6676  0EF1  082E               	movf	(___wmul@product),w
  6677  0EF2  01AA               	clrf	(?___wmul)
  6678  0EF3  07AA               	addwf	(?___wmul)
  6679                           
  6680  0EF4  2EF5               	goto	l6520
  6681                           	
  6682  0EF5                     l9573:	
  6683                           	line	13
  6684                           	
  6685  0EF5                     l6520:	
  6686  0EF5  0008               	return
  6687                           	opt stack 0
  6688                           GLOBAL	__end_of___wmul
  6689  0EF6                     	__end_of___wmul:
  6690 ;; =============== function ___wmul ends ============
  6691                           
  6692                           	signat	___wmul,8314
  6693                           	global	_ser_isrx
  6694                           psect	text1336,local,class=CODE,delta=2
  6695                           global __ptext1336
  6696  07E6                     __ptext1336:
  6697                           
  6698 ;; *************** function _ser_isrx *****************
  6699 ;; Defined at:
  6700 ;;		line 48 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;		None               void
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6714 ;;      Params:         0       0       0       0       0
  6715 ;;      Locals:         0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0
  6717 ;;      Totals:         0       0       0       0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    2
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_ser_getch
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           psect	text1336
  6728                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  6729                           	line	48
  6730                           	global	__size_of_ser_isrx
  6731  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  6732                           	
  6733  07E6                     _ser_isrx:	
  6734                           	opt	stack 1
  6735                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  6736                           	line	49
  6737                           	
  6738  07E6                     l9515:	
  6739                           ;ser.c: 49: if(OERR) {
  6740  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
  6741  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
  6742  07E8  1C98               	btfss	(193/8),(193)&7
  6743  07E9  2FEB               	goto	u3541
  6744  07EA  2FEC               	goto	u3540
  6745  07EB                     u3541:
  6746  07EB  2FF1               	goto	l9523
  6747  07EC                     u3540:
  6748                           	line	50
  6749                           	
  6750  07EC                     l9517:	
  6751                           ;ser.c: 50: CREN = 0;
  6752  07EC  1218               	bcf	(196/8),(196)&7
  6753                           	line	51
  6754                           ;ser.c: 51: CREN = 1;
  6755  07ED  1618               	bsf	(196/8),(196)&7
  6756                           	line	52
  6757                           	
  6758  07EE                     l9519:	
  6759                           ;ser.c: 52: return 0;
  6760  07EE  1003               	clrc
  6761                           	
  6762  07EF  2FFC               	goto	l4382
  6763                           	
  6764  07F0                     l9521:	
  6765  07F0  2FFC               	goto	l4382
  6766                           	line	53
  6767                           	
  6768  07F1                     l4381:	
  6769                           	line	54
  6770                           	
  6771  07F1                     l9523:	
  6772                           ;ser.c: 53: }
  6773                           ;ser.c: 54: return (rxiptr!=rxoptr);
  6774  07F1  0877               	movf	(_rxiptr),w	;volatile
  6775  07F2  0678               	xorwf	(_rxoptr),w	;volatile
  6776  07F3  1D03               	skipz
  6777  07F4  2FF6               	goto	u3551
  6778  07F5  2FF7               	goto	u3550
  6779  07F6                     u3551:
  6780  07F6  2FF9               	goto	l9527
  6781  07F7                     u3550:
  6782                           	
  6783  07F7                     l9525:	
  6784  07F7  1003               	clrc
  6785                           	
  6786  07F8  2FFC               	goto	l4382
  6787                           	
  6788  07F9                     l9411:	
  6789                           	
  6790  07F9                     l9527:	
  6791  07F9  1403               	setc
  6792                           	
  6793  07FA  2FFC               	goto	l4382
  6794                           	
  6795  07FB                     l9413:	
  6796  07FB  2FFC               	goto	l4382
  6797                           	
  6798  07FC                     l9529:	
  6799                           	line	55
  6800                           	
  6801  07FC                     l4382:	
  6802  07FC  0008               	return
  6803                           	opt stack 0
  6804                           GLOBAL	__end_of_ser_isrx
  6805  07FD                     	__end_of_ser_isrx:
  6806 ;; =============== function _ser_isrx ends ============
  6807                           
  6808                           	signat	_ser_isrx,88
  6809                           	global	_ser_init
  6810                           psect	text1337,local,class=CODE,delta=2
  6811                           global __ptext1337
  6812  0E25                     __ptext1337:
  6813                           
  6814 ;; *************** function _ser_init *****************
  6815 ;; Defined at:
  6816 ;;		line 124 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;		None               void
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6830 ;;      Params:         0       0       0       0       0
  6831 ;;      Locals:         0       0       0       0       0
  6832 ;;      Temps:          0       1       0       0       0
  6833 ;;      Totals:         0       1       0       0       0
  6834 ;;Total ram usage:        1 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    2
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_init
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           psect	text1337
  6844                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  6845                           	line	124
  6846                           	global	__size_of_ser_init
  6847  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  6848                           	
  6849  0E25                     _ser_init:	
  6850                           	opt	stack 4
  6851                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  6852                           	line	125
  6853                           	
  6854  0E25                     l9489:	
  6855                           ;ser.c: 125: TRISC |= 0b10000000;
  6856  0E25  1683               	bsf	status, 5	;RP0=1, select bank1
  6857  0E26  1303               	bcf	status, 6	;RP1=0, select bank1
  6858  0E27  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  6859                           	line	126
  6860                           	
  6861  0E28                     l9491:	
  6862                           ;ser.c: 126: TRISC &= 0b10111111;
  6863  0E28  30BF               	movlw	(0BFh)
  6864  0E29  1283               	bcf	status, 5	;RP0=0, select bank0
  6865  0E2A  1303               	bcf	status, 6	;RP1=0, select bank0
  6866  0E2B  00AA               	movwf	(??_ser_init+0)+0
  6867  0E2C  082A               	movf	(??_ser_init+0)+0,w
  6868  0E2D  1683               	bsf	status, 5	;RP0=1, select bank1
  6869  0E2E  1303               	bcf	status, 6	;RP1=0, select bank1
  6870  0E2F  0587               	andwf	(135)^080h,f	;volatile
  6871                           	line	127
  6872                           	
  6873  0E30                     l9493:	
  6874                           ;ser.c: 127: BRGH=1;
  6875  0E30  1518               	bsf	(1218/8)^080h,(1218)&7
  6876                           	line	129
  6877                           	
  6878  0E31                     l9495:	
  6879                           ;ser.c: 129: SPBRG=20;
  6880  0E31  3014               	movlw	(014h)
  6881  0E32  0099               	movwf	(153)^080h	;volatile
  6882                           	line	132
  6883                           	
  6884  0E33                     l9497:	
  6885                           ;ser.c: 132: TX9=0;
  6886  0E33  1318               	bcf	(1222/8)^080h,(1222)&7
  6887                           	line	133
  6888                           	
  6889  0E34                     l9499:	
  6890                           ;ser.c: 133: RX9=0;
  6891  0E34  1283               	bcf	status, 5	;RP0=0, select bank0
  6892  0E35  1303               	bcf	status, 6	;RP1=0, select bank0
  6893  0E36  1318               	bcf	(198/8),(198)&7
  6894                           	line	135
  6895                           	
  6896  0E37                     l9501:	
  6897                           ;ser.c: 135: SYNC=0;
  6898  0E37  1683               	bsf	status, 5	;RP0=1, select bank1
  6899  0E38  1303               	bcf	status, 6	;RP1=0, select bank1
  6900  0E39  1218               	bcf	(1220/8)^080h,(1220)&7
  6901                           	line	136
  6902                           	
  6903  0E3A                     l9503:	
  6904                           ;ser.c: 136: SPEN=1;
  6905  0E3A  1283               	bcf	status, 5	;RP0=0, select bank0
  6906  0E3B  1303               	bcf	status, 6	;RP1=0, select bank0
  6907  0E3C  1798               	bsf	(199/8),(199)&7
  6908                           	line	137
  6909                           	
  6910  0E3D                     l9505:	
  6911                           ;ser.c: 137: CREN=1;
  6912  0E3D  1618               	bsf	(196/8),(196)&7
  6913                           	line	138
  6914                           	
  6915  0E3E                     l9507:	
  6916                           ;ser.c: 138: TXIE=0;
  6917  0E3E  1683               	bsf	status, 5	;RP0=1, select bank1
  6918  0E3F  1303               	bcf	status, 6	;RP1=0, select bank1
  6919  0E40  120C               	bcf	(1124/8)^080h,(1124)&7
  6920                           	line	139
  6921                           	
  6922  0E41                     l9509:	
  6923                           ;ser.c: 139: RCIE=1;
  6924  0E41  168C               	bsf	(1125/8)^080h,(1125)&7
  6925                           	line	140
  6926                           	
  6927  0E42                     l9511:	
  6928                           ;ser.c: 140: TXEN=1;
  6929  0E42  1698               	bsf	(1221/8)^080h,(1221)&7
  6930                           	line	143
  6931                           	
  6932  0E43                     l9513:	
  6933                           ;ser.c: 143: rxiptr=rxoptr=txiptr=txoptr=0;
  6934  0E43  3000               	movlw	(0)
  6935  0E44  00FA               	movwf	(_txoptr)	;volatile
  6936  0E45  00F9               	movwf	(_txiptr)	;volatile
  6937  0E46  00F8               	movwf	(_rxoptr)	;volatile
  6938  0E47  1283               	bcf	status, 5	;RP0=0, select bank0
  6939  0E48  1303               	bcf	status, 6	;RP1=0, select bank0
  6940  0E49  00AA               	movwf	(??_ser_init+0)+0
  6941  0E4A  082A               	movf	(??_ser_init+0)+0,w
  6942  0E4B  00F7               	movwf	(_rxiptr)	;volatile
  6943                           	line	144
  6944                           	
  6945  0E4C                     l4422:	
  6946  0E4C  0008               	return
  6947                           	opt stack 0
  6948                           GLOBAL	__end_of_ser_init
  6949  0E4D                     	__end_of_ser_init:
  6950 ;; =============== function _ser_init ends ============
  6951                           
  6952                           	signat	_ser_init,88
  6953                           	global	_ser_putch
  6954                           psect	text1338,local,class=CODE,delta=2
  6955                           global __ptext1338
  6956  0D2E                     __ptext1338:
  6957                           
  6958 ;; *************** function _ser_putch *****************
  6959 ;; Defined at:
  6960 ;;		line 81 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  c               1    wreg     unsigned char 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  c               1   11[BANK0 ] unsigned char 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;		None               void
  6967 ;; Registers used:
  6968 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6974 ;;      Params:         0       0       0       0       0
  6975 ;;      Locals:         0       1       0       0       0
  6976 ;;      Temps:          0       1       0       0       0
  6977 ;;      Totals:         0       2       0       0       0
  6978 ;;Total ram usage:        2 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    2
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_drive
  6985 ;;		_driveForDistance
  6986 ;;		_waitFor
  6987 ;;		_initIRobot
  6988 ;;		_ser_putArr
  6989 ;;		_play_iCreate_song
  6990 ;;		_ser_puts
  6991 ;;		_ser_puts2
  6992 ;;		_ser_puthex
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           psect	text1338
  6996                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\ser.c"
  6997                           	line	81
  6998                           	global	__size_of_ser_putch
  6999  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  7000                           	
  7001  0D2E                     _ser_putch:	
  7002                           	opt	stack 2
  7003                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7004                           ;ser_putch@c stored from wreg
  7005  0D2E  1283               	bcf	status, 5	;RP0=0, select bank0
  7006  0D2F  1303               	bcf	status, 6	;RP1=0, select bank0
  7007  0D30  00AB               	movwf	(ser_putch@c)
  7008                           	line	82
  7009                           	
  7010  0D31                     l9441:	
  7011                           ;ser.c: 82: while (((txiptr+1) & (16-1))==txoptr)
  7012  0D31  2D33               	goto	l9443
  7013                           	
  7014  0D32                     l4398:	
  7015                           	line	83
  7016                           ;ser.c: 83: continue;
  7017  0D32  2D33               	goto	l9443
  7018                           	
  7019  0D33                     l4397:	
  7020                           	line	82
  7021                           	
  7022  0D33                     l9443:	
  7023  0D33  0879               	movf	(_txiptr),w	;volatile
  7024  0D34  3E01               	addlw	01h
  7025  0D35  390F               	andlw	0Fh
  7026  0D36  067A               	xorwf	(_txoptr),w	;volatile
  7027  0D37  1903               	skipnz
  7028  0D38  2D3A               	goto	u3511
  7029  0D39  2D3B               	goto	u3510
  7030  0D3A                     u3511:
  7031  0D3A  2D33               	goto	l9443
  7032  0D3B                     u3510:
  7033                           	
  7034  0D3B                     l4399:	
  7035                           	line	84
  7036                           ;ser.c: 84: GIE=0;
  7037  0D3B  138B               	bcf	(95/8),(95)&7
  7038                           	line	85
  7039                           	
  7040  0D3C                     l9445:	
  7041                           ;ser.c: 85: txfifo[txiptr] = c;
  7042  0D3C  082B               	movf	(ser_putch@c),w
  7043  0D3D  00AA               	movwf	(??_ser_putch+0)+0
  7044  0D3E  0879               	movf	(_txiptr),w
  7045  0D3F  3ECE               	addlw	_txfifo&0ffh
  7046  0D40  0084               	movwf	fsr0
  7047  0D41  082A               	movf	(??_ser_putch+0)+0,w
  7048  0D42  1383               	bcf	status, 7	;select IRP bank1
  7049  0D43  0080               	movwf	indf
  7050                           	line	86
  7051                           	
  7052  0D44                     l9447:	
  7053                           ;ser.c: 86: txiptr=(txiptr+1) & (16-1);
  7054  0D44  0879               	movf	(_txiptr),w	;volatile
  7055  0D45  3E01               	addlw	01h
  7056  0D46  390F               	andlw	0Fh
  7057  0D47  00AA               	movwf	(??_ser_putch+0)+0
  7058  0D48  082A               	movf	(??_ser_putch+0)+0,w
  7059  0D49  00F9               	movwf	(_txiptr)	;volatile
  7060                           	line	87
  7061                           	
  7062  0D4A                     l9449:	
  7063                           ;ser.c: 87: TXIE=1;
  7064  0D4A  1683               	bsf	status, 5	;RP0=1, select bank1
  7065  0D4B  1303               	bcf	status, 6	;RP1=0, select bank1
  7066  0D4C  160C               	bsf	(1124/8)^080h,(1124)&7
  7067                           	line	88
  7068                           	
  7069  0D4D                     l9451:	
  7070                           ;ser.c: 88: GIE=1;
  7071  0D4D  178B               	bsf	(95/8),(95)&7
  7072                           	line	89
  7073                           	
  7074  0D4E                     l4400:	
  7075  0D4E  0008               	return
  7076                           	opt stack 0
  7077                           GLOBAL	__end_of_ser_putch
  7078  0D4F                     	__end_of_ser_putch:
  7079 ;; =============== function _ser_putch ends ============
  7080                           
  7081                           	signat	_ser_putch,4216
  7082                           	global	_isr1
  7083                           psect	text1339,local,class=CODE,delta=2
  7084                           global __ptext1339
  7085  02E2                     __ptext1339:
  7086                           
  7087 ;; *************** function _isr1 *****************
  7088 ;; Defined at:
  7089 ;;		line 51 in file "C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;		None
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;		None
  7094 ;; Return value:  Size  Location     Type
  7095 ;;		None               void
  7096 ;; Registers used:
  7097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7103 ;;      Params:         0       0       0       0       0
  7104 ;;      Locals:         0       0       0       0       0
  7105 ;;      Temps:          0      10       0       0       0
  7106 ;;      Totals:         0      10       0       0       0
  7107 ;;Total ram usage:       10 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; Hardware stack levels required when called:    1
  7110 ;; This function calls:
  7111 ;;		___lwmod
  7112 ;; This function is called by:
  7113 ;;		Interrupt level 1
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           psect	text1339
  7117                           	file	"C:\Users\Lili\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.3\main.c"
  7118                           	line	51
  7119                           	global	__size_of_isr1
  7120  00D6                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  7121                           	
  7122  02E2                     _isr1:	
  7123                           	opt	stack 0
  7124                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7125                           psect	intentry,class=CODE,delta=2
  7126                           global __pintentry
  7127  0004                     __pintentry:
  7128                           global interrupt_function
  7129  0004                     interrupt_function:
  7130                           	global saved_w
  7131  007E                     	saved_w	set	btemp+0
  7132  0004  00FE               	movwf	saved_w
  7133  0005  0E03               	swapf	status,w
  7134  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  7135  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  7136  0008  00A6               	movwf	(??_isr1+6)
  7137  0009  0804               	movf	fsr0,w
  7138  000A  00A7               	movwf	(??_isr1+7)
  7139  000B  080A               	movf	pclath,w
  7140  000C  00A8               	movwf	(??_isr1+8)
  7141  000D  087F               	movf	btemp+1,w
  7142  000E  00A9               	movwf	(??_isr1+9)
  7143  000F  120A  118A  2AE2   	ljmp	_isr1
  7144                           psect	text1339
  7145                           	line	53
  7146                           	
  7147  02E2                     i1l8759:	
  7148                           ;main.c: 53: if(TMR0IF)
  7149  02E2  1D0B               	btfss	(90/8),(90)&7
  7150  02E3  2AE5               	goto	u280_21
  7151  02E4  2AE6               	goto	u280_20
  7152  02E5                     u280_21:
  7153  02E5  2BAC               	goto	i1l3619
  7154  02E6                     u280_20:
  7155                           	line	55
  7156                           	
  7157  02E6                     i1l8761:	
  7158                           ;main.c: 54: {
  7159                           ;main.c: 55: TMR0IF = 0;
  7160  02E6  110B               	bcf	(90/8),(90)&7
  7161                           	line	56
  7162                           	
  7163  02E7                     i1l8763:	
  7164                           ;main.c: 56: TMR0 = 100;
  7165  02E7  3064               	movlw	(064h)
  7166  02E8  0081               	movwf	(1)	;volatile
  7167                           	line	58
  7168                           ;main.c: 58: RTC_Counter++;
  7169  02E9  3001               	movlw	low(01h)
  7170  02EA  07DC               	addwf	(_RTC_Counter),f	;volatile
  7171  02EB  1803               	skipnc
  7172  02EC  0ADD               	incf	(_RTC_Counter+1),f	;volatile
  7173  02ED  3000               	movlw	high(01h)
  7174  02EE  07DD               	addwf	(_RTC_Counter+1),f	;volatile
  7175                           	line	60
  7176                           	
  7177  02EF                     i1l8765:	
  7178                           ;main.c: 60: RTC_FLAG_1MS = 1;
  7179  02EF  14F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  7180                           	line	62
  7181                           	
  7182  02F0                     i1l8767:	
  7183                           ;main.c: 62: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  7184  02F0  300A               	movlw	low(0Ah)
  7185  02F1  00F1               	movwf	(?___lwmod)
  7186  02F2  3000               	movlw	high(0Ah)
  7187  02F3  00F2               	movwf	((?___lwmod))+1
  7188  02F4  085D               	movf	(_RTC_Counter+1),w	;volatile
  7189  02F5  01F4               	clrf	1+(?___lwmod)+02h
  7190  02F6  07F4               	addwf	1+(?___lwmod)+02h
  7191  02F7  085C               	movf	(_RTC_Counter),w	;volatile
  7192  02F8  01F3               	clrf	0+(?___lwmod)+02h
  7193  02F9  07F3               	addwf	0+(?___lwmod)+02h
  7194                           
  7195  02FA  120A  118A  266E   	fcall	___lwmod
              120A  118A         
  7196  02FF  0872               	movf	((1+(?___lwmod))),w
  7197  0300  0471               	iorwf	((0+(?___lwmod))),w
  7198  0301  1D03               	skipz
  7199  0302  2B04               	goto	u281_21
  7200  0303  2B05               	goto	u281_20
  7201  0304                     u281_21:
  7202  0304  2B07               	goto	i1l8771
  7203  0305                     u281_20:
  7204                           	
  7205  0305                     i1l8769:	
  7206  0305  1470               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  7207  0306  2B07               	goto	i1l8771
  7208                           	
  7209  0307                     i1l3609:	
  7210                           	line	63
  7211                           	
  7212  0307                     i1l8771:	
  7213                           ;main.c: 63: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  7214  0307  3032               	movlw	low(032h)
  7215  0308  00F1               	movwf	(?___lwmod)
  7216  0309  3000               	movlw	high(032h)
  7217  030A  00F2               	movwf	((?___lwmod))+1
  7218  030B  1283               	bcf	status, 5	;RP0=0, select bank0
  7219  030C  1303               	bcf	status, 6	;RP1=0, select bank0
  7220  030D  085D               	movf	(_RTC_Counter+1),w	;volatile
  7221  030E  01F4               	clrf	1+(?___lwmod)+02h
  7222  030F  07F4               	addwf	1+(?___lwmod)+02h
  7223  0310  085C               	movf	(_RTC_Counter),w	;volatile
  7224  0311  01F3               	clrf	0+(?___lwmod)+02h
  7225  0312  07F3               	addwf	0+(?___lwmod)+02h
  7226                           
  7227  0313  120A  118A  266E   	fcall	___lwmod
              120A  118A         
  7228  0318  0872               	movf	((1+(?___lwmod))),w
  7229  0319  0471               	iorwf	((0+(?___lwmod))),w
  7230  031A  1D03               	skipz
  7231  031B  2B1D               	goto	u282_21
  7232  031C  2B1E               	goto	u282_20
  7233  031D                     u282_21:
  7234  031D  2B20               	goto	i1l8775
  7235  031E                     u282_20:
  7236                           	
  7237  031E                     i1l8773:	
  7238  031E  15F0               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  7239  031F  2B20               	goto	i1l8775
  7240                           	
  7241  0320                     i1l3610:	
  7242                           	line	64
  7243                           	
  7244  0320                     i1l8775:	
  7245                           ;main.c: 64: if(RTC_Counter % 500 == 0)
  7246  0320  30F4               	movlw	low(01F4h)
  7247  0321  00F1               	movwf	(?___lwmod)
  7248  0322  3001               	movlw	high(01F4h)
  7249  0323  00F2               	movwf	((?___lwmod))+1
  7250  0324  1283               	bcf	status, 5	;RP0=0, select bank0
  7251  0325  1303               	bcf	status, 6	;RP1=0, select bank0
  7252  0326  085D               	movf	(_RTC_Counter+1),w	;volatile
  7253  0327  01F4               	clrf	1+(?___lwmod)+02h
  7254  0328  07F4               	addwf	1+(?___lwmod)+02h
  7255  0329  085C               	movf	(_RTC_Counter),w	;volatile
  7256  032A  01F3               	clrf	0+(?___lwmod)+02h
  7257  032B  07F3               	addwf	0+(?___lwmod)+02h
  7258                           
  7259  032C  120A  118A  266E   	fcall	___lwmod
              120A  118A         
  7260  0331  0872               	movf	((1+(?___lwmod))),w
  7261  0332  0471               	iorwf	((0+(?___lwmod))),w
  7262  0333  1D03               	skipz
  7263  0334  2B36               	goto	u283_21
  7264  0335  2B37               	goto	u283_20
  7265  0336                     u283_21:
  7266  0336  2B3D               	goto	i1l8781
  7267  0337                     u283_20:
  7268                           	line	66
  7269                           	
  7270  0337                     i1l8777:	
  7271                           ;main.c: 65: {
  7272                           ;main.c: 66: RTC_FLAG_500MS = 1;
  7273  0337  1570               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  7274                           	line	67
  7275                           	
  7276  0338                     i1l8779:	
  7277                           ;main.c: 67: RTC_Counter = 0;
  7278  0338  1283               	bcf	status, 5	;RP0=0, select bank0
  7279  0339  1303               	bcf	status, 6	;RP1=0, select bank0
  7280  033A  01DC               	clrf	(_RTC_Counter)	;volatile
  7281  033B  01DD               	clrf	(_RTC_Counter+1)	;volatile
  7282  033C  2B3D               	goto	i1l8781
  7283                           	line	69
  7284                           	
  7285  033D                     i1l3611:	
  7286                           	line	71
  7287                           	
  7288  033D                     i1l8781:	
  7289                           ;main.c: 69: }
  7290                           ;main.c: 71: if(!RB0)
  7291  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  7292  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  7293  033F  1806               	btfsc	(48/8),(48)&7
  7294  0340  2B42               	goto	u284_21
  7295  0341  2B43               	goto	u284_20
  7296  0342                     u284_21:
  7297  0342  2B63               	goto	i1l3612
  7298  0343                     u284_20:
  7299                           	line	73
  7300                           	
  7301  0343                     i1l8783:	
  7302                           ;main.c: 72: {
  7303                           ;main.c: 73: start.debounceCount++;
  7304  0343  3001               	movlw	(01h)
  7305  0344  00A0               	movwf	(??_isr1+0)+0
  7306  0345  0820               	movf	(??_isr1+0)+0,w
  7307  0346  07DB               	addwf	0+(_start)+02h,f
  7308                           	line	74
  7309                           	
  7310  0347                     i1l8785:	
  7311                           ;main.c: 74: if(start.debounceCount >= 10 & start.released)
  7312  0347  085A               	movf	0+(_start)+01h,w
  7313  0348  00A0               	movwf	(??_isr1+0)+0
  7314  0349  01A1               	clrf	(??_isr1+0)+0+1
  7315  034A  300A               	movlw	(0Ah)
  7316  034B  025B               	subwf	0+(_start)+02h,w
  7317  034C  3000               	movlw	0
  7318  034D  1803               	skipnc
  7319  034E  3001               	movlw	1
  7320  034F  00A2               	movwf	(??_isr1+2)+0
  7321  0350  01A3               	clrf	(??_isr1+2)+0+1
  7322  0351  0820               	movf	0+(??_isr1+0)+0,w
  7323  0352  0522               	andwf	0+(??_isr1+2)+0,w
  7324  0353  00A4               	movwf	(??_isr1+4)+0
  7325  0354  0821               	movf	1+(??_isr1+0)+0,w
  7326  0355  0523               	andwf	1+(??_isr1+2)+0,w
  7327  0356  00A5               	movwf	1+(??_isr1+4)+0
  7328  0357  0825               	movf	1+(??_isr1+4)+0,w
  7329  0358  0424               	iorwf	0+(??_isr1+4)+0,w
  7330  0359  1903               	skipnz
  7331  035A  2B5C               	goto	u285_21
  7332  035B  2B5D               	goto	u285_20
  7333  035C                     u285_21:
  7334  035C  2B68               	goto	i1l8793
  7335  035D                     u285_20:
  7336                           	line	76
  7337                           	
  7338  035D                     i1l8787:	
  7339                           ;main.c: 75: {
  7340                           ;main.c: 76: start.pressed = 1;
  7341  035D  01D9               	clrf	(_start)
  7342  035E  1403               	bsf	status,0
  7343  035F  0DD9               	rlf	(_start),f
  7344                           	line	77
  7345                           	
  7346  0360                     i1l8789:	
  7347                           ;main.c: 77: start.released = 0;
  7348  0360  01DA               	clrf	0+(_start)+01h
  7349  0361  2B68               	goto	i1l8793
  7350                           	line	78
  7351                           	
  7352  0362                     i1l3613:	
  7353                           	line	79
  7354                           ;main.c: 78: }
  7355                           ;main.c: 79: }
  7356  0362  2B68               	goto	i1l8793
  7357                           	line	80
  7358                           	
  7359  0363                     i1l3612:	
  7360                           	line	82
  7361                           ;main.c: 80: else
  7362                           ;main.c: 81: {
  7363                           ;main.c: 82: start.debounceCount = 0;
  7364  0363  01DB               	clrf	0+(_start)+02h
  7365                           	line	83
  7366                           	
  7367  0364                     i1l8791:	
  7368                           ;main.c: 83: start.released = 1;
  7369  0364  01DA               	clrf	0+(_start)+01h
  7370  0365  1403               	bsf	status,0
  7371  0366  0DDA               	rlf	0+(_start)+01h,f
  7372  0367  2B68               	goto	i1l8793
  7373                           	line	84
  7374                           	
  7375  0368                     i1l3614:	
  7376                           	line	86
  7377                           	
  7378  0368                     i1l8793:	
  7379                           ;main.c: 84: }
  7380                           ;main.c: 86: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  7381  0368  1E8C               	btfss	(101/8),(101)&7
  7382  0369  2B6B               	goto	u286_21
  7383  036A  2B6C               	goto	u286_20
  7384  036B                     u286_21:
  7385  036B  2B86               	goto	i1l8803
  7386  036C                     u286_20:
  7387                           	
  7388  036C                     i1l8795:	
  7389  036C  081A               	movf	(26),w	;volatile
  7390  036D  00A0               	movwf	(??_isr1+0)+0
  7391  036E  0877               	movf	(_rxiptr),w
  7392  036F  3E49               	addlw	_rxfifo&0ffh
  7393  0370  0084               	movwf	fsr0
  7394  0371  0820               	movf	(??_isr1+0)+0,w
  7395  0372  1383               	bcf	status, 7	;select IRP bank0
  7396  0373  0080               	movwf	indf
  7397                           	
  7398  0374                     i1l8797:	
  7399  0374  0877               	movf	(_rxiptr),w	;volatile
  7400  0375  3E01               	addlw	01h
  7401  0376  390F               	andlw	0Fh
  7402  0377  00A0               	movwf	(??_isr1+0)+0
  7403  0378  0820               	movf	(??_isr1+0)+0,w
  7404  0379  00E0               	movwf	(_ser_tmp)
  7405                           	
  7406  037A                     i1l8799:	
  7407  037A  0860               	movf	(_ser_tmp),w
  7408  037B  0678               	xorwf	(_rxoptr),w	;volatile
  7409  037C  1903               	skipnz
  7410  037D  2B7F               	goto	u287_21
  7411  037E  2B80               	goto	u287_20
  7412  037F                     u287_21:
  7413  037F  2B86               	goto	i1l8803
  7414  0380                     u287_20:
  7415                           	
  7416  0380                     i1l8801:	
  7417  0380  0860               	movf	(_ser_tmp),w
  7418  0381  00A0               	movwf	(??_isr1+0)+0
  7419  0382  0820               	movf	(??_isr1+0)+0,w
  7420  0383  00F7               	movwf	(_rxiptr)	;volatile
  7421  0384  2B86               	goto	i1l8803
  7422                           	
  7423  0385                     i1l3616:	
  7424  0385  2B86               	goto	i1l8803
  7425                           	
  7426  0386                     i1l3615:	
  7427                           	
  7428  0386                     i1l8803:	
  7429  0386  1E0C               	btfss	(100/8),(100)&7
  7430  0387  2B89               	goto	u288_21
  7431  0388  2B8A               	goto	u288_20
  7432  0389                     u288_21:
  7433  0389  2BAC               	goto	i1l3619
  7434  038A                     u288_20:
  7435                           	
  7436  038A                     i1l8805:	
  7437  038A  1683               	bsf	status, 5	;RP0=1, select bank1
  7438  038B  1303               	bcf	status, 6	;RP1=0, select bank1
  7439  038C  1E0C               	btfss	(1124/8)^080h,(1124)&7
  7440  038D  2B8F               	goto	u289_21
  7441  038E  2B90               	goto	u289_20
  7442  038F                     u289_21:
  7443  038F  2BAC               	goto	i1l3619
  7444  0390                     u289_20:
  7445                           	
  7446  0390                     i1l8807:	
  7447  0390  087A               	movf	(_txoptr),w
  7448  0391  3ECE               	addlw	_txfifo&0ffh
  7449  0392  0084               	movwf	fsr0
  7450  0393  1383               	bcf	status, 7	;select IRP bank1
  7451  0394  0800               	movf	indf,w
  7452  0395  1283               	bcf	status, 5	;RP0=0, select bank0
  7453  0396  1303               	bcf	status, 6	;RP1=0, select bank0
  7454  0397  0099               	movwf	(25)	;volatile
  7455                           	
  7456  0398                     i1l8809:	
  7457  0398  3001               	movlw	(01h)
  7458  0399  00A0               	movwf	(??_isr1+0)+0
  7459  039A  0820               	movf	(??_isr1+0)+0,w
  7460  039B  07FA               	addwf	(_txoptr),f	;volatile
  7461                           	
  7462  039C                     i1l8811:	
  7463  039C  300F               	movlw	(0Fh)
  7464  039D  00A0               	movwf	(??_isr1+0)+0
  7465  039E  0820               	movf	(??_isr1+0)+0,w
  7466  039F  05FA               	andwf	(_txoptr),f	;volatile
  7467                           	
  7468  03A0                     i1l8813:	
  7469  03A0  087A               	movf	(_txoptr),w	;volatile
  7470  03A1  0679               	xorwf	(_txiptr),w	;volatile
  7471  03A2  1D03               	skipz
  7472  03A3  2BA5               	goto	u290_21
  7473  03A4  2BA6               	goto	u290_20
  7474  03A5                     u290_21:
  7475  03A5  2BAC               	goto	i1l3619
  7476  03A6                     u290_20:
  7477                           	
  7478  03A6                     i1l8815:	
  7479  03A6  1683               	bsf	status, 5	;RP0=1, select bank1
  7480  03A7  1303               	bcf	status, 6	;RP1=0, select bank1
  7481  03A8  120C               	bcf	(1124/8)^080h,(1124)&7
  7482  03A9  2BAC               	goto	i1l3619
  7483                           	
  7484  03AA                     i1l3618:	
  7485  03AA  2BAC               	goto	i1l3619
  7486                           	
  7487  03AB                     i1l3617:	
  7488  03AB  2BAC               	goto	i1l3619
  7489                           	line	87
  7490                           	
  7491  03AC                     i1l3608:	
  7492                           	line	88
  7493                           	
  7494  03AC                     i1l3619:	
  7495  03AC  1283               	bcf	status, 5	;RP0=0, select bank0
  7496  03AD  0829               	movf	(??_isr1+9),w
  7497  03AE  00FF               	movwf	btemp+1
  7498  03AF  0828               	movf	(??_isr1+8),w
  7499  03B0  008A               	movwf	pclath
  7500  03B1  0827               	movf	(??_isr1+7),w
  7501  03B2  0084               	movwf	fsr0
  7502  03B3  0E26               	swapf	(??_isr1+6)^00h,w
  7503  03B4  0083               	movwf	status
  7504  03B5  0EFE               	swapf	saved_w,f
  7505  03B6  0E7E               	swapf	saved_w,w
  7506  03B7  0009               	retfie
  7507                           	opt stack 0
  7508                           GLOBAL	__end_of_isr1
  7509  03B8                     	__end_of_isr1:
  7510 ;; =============== function _isr1 ends ============
  7511                           
  7512                           	signat	_isr1,88
  7513                           	global	___lwmod
  7514                           psect	text1340,local,class=CODE,delta=2
  7515                           global __ptext1340
  7516  066E                     __ptext1340:
  7517                           
  7518 ;; *************** function ___lwmod *****************
  7519 ;; Defined at:
  7520 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;  divisor         2    0[COMMON] unsigned int 
  7523 ;;  dividend        2    2[COMMON] unsigned int 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  counter         1    5[COMMON] unsigned char 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  2    0[COMMON] unsigned int 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7535 ;;      Params:         4       0       0       0       0
  7536 ;;      Locals:         1       0       0       0       0
  7537 ;;      Temps:          1       0       0       0       0
  7538 ;;      Totals:         6       0       0       0       0
  7539 ;;Total ram usage:        6 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; This function calls:
  7542 ;;		Nothing
  7543 ;; This function is called by:
  7544 ;;		_isr1
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           psect	text1340
  7548                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  7549                           	line	5
  7550                           	global	__size_of___lwmod
  7551  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7552                           	
  7553  066E                     ___lwmod:	
  7554                           	opt	stack 0
  7555                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7556                           	line	8
  7557                           	
  7558  066E                     i1l8903:	
  7559  066E  0872               	movf	(___lwmod@divisor+1),w
  7560  066F  0471               	iorwf	(___lwmod@divisor),w
  7561  0670  1903               	skipnz
  7562  0671  2E73               	goto	u302_21
  7563  0672  2E74               	goto	u302_20
  7564  0673                     u302_21:
  7565  0673  2EAA               	goto	i1l8921
  7566  0674                     u302_20:
  7567                           	line	9
  7568                           	
  7569  0674                     i1l8905:	
  7570  0674  01F6               	clrf	(___lwmod@counter)
  7571  0675  1403               	bsf	status,0
  7572  0676  0DF6               	rlf	(___lwmod@counter),f
  7573                           	line	10
  7574  0677  2E84               	goto	i1l8911
  7575                           	
  7576  0678                     i1l6535:	
  7577                           	line	11
  7578                           	
  7579  0678                     i1l8907:	
  7580  0678  3001               	movlw	01h
  7581                           	
  7582  0679                     u303_25:
  7583  0679  1003               	clrc
  7584  067A  0DF1               	rlf	(___lwmod@divisor),f
  7585  067B  0DF2               	rlf	(___lwmod@divisor+1),f
  7586  067C  3EFF               	addlw	-1
  7587  067D  1D03               	skipz
  7588  067E  2E79               	goto	u303_25
  7589                           	line	12
  7590                           	
  7591  067F                     i1l8909:	
  7592  067F  3001               	movlw	(01h)
  7593  0680  00F5               	movwf	(??___lwmod+0)+0
  7594  0681  0875               	movf	(??___lwmod+0)+0,w
  7595  0682  07F6               	addwf	(___lwmod@counter),f
  7596  0683  2E84               	goto	i1l8911
  7597                           	line	13
  7598                           	
  7599  0684                     i1l6534:	
  7600                           	line	10
  7601                           	
  7602  0684                     i1l8911:	
  7603  0684  1FF2               	btfss	(___lwmod@divisor+1),(15)&7
  7604  0685  2E87               	goto	u304_21
  7605  0686  2E88               	goto	u304_20
  7606  0687                     u304_21:
  7607  0687  2E78               	goto	i1l8907
  7608  0688                     u304_20:
  7609  0688  2E8A               	goto	i1l8913
  7610                           	
  7611  0689                     i1l6536:	
  7612  0689  2E8A               	goto	i1l8913
  7613                           	line	14
  7614                           	
  7615  068A                     i1l6537:	
  7616                           	line	15
  7617                           	
  7618  068A                     i1l8913:	
  7619  068A  0872               	movf	(___lwmod@divisor+1),w
  7620  068B  0274               	subwf	(___lwmod@dividend+1),w
  7621  068C  1D03               	skipz
  7622  068D  2E90               	goto	u305_25
  7623  068E  0871               	movf	(___lwmod@divisor),w
  7624  068F  0273               	subwf	(___lwmod@dividend),w
  7625  0690                     u305_25:
  7626  0690  1C03               	skipc
  7627  0691  2E93               	goto	u305_21
  7628  0692  2E94               	goto	u305_20
  7629  0693                     u305_21:
  7630  0693  2E9B               	goto	i1l8917
  7631  0694                     u305_20:
  7632                           	line	16
  7633                           	
  7634  0694                     i1l8915:	
  7635  0694  0871               	movf	(___lwmod@divisor),w
  7636  0695  02F3               	subwf	(___lwmod@dividend),f
  7637  0696  0872               	movf	(___lwmod@divisor+1),w
  7638  0697  1C03               	skipc
  7639  0698  03F4               	decf	(___lwmod@dividend+1),f
  7640  0699  02F4               	subwf	(___lwmod@dividend+1),f
  7641  069A  2E9B               	goto	i1l8917
  7642                           	
  7643  069B                     i1l6538:	
  7644                           	line	17
  7645                           	
  7646  069B                     i1l8917:	
  7647  069B  3001               	movlw	01h
  7648                           	
  7649  069C                     u306_25:
  7650  069C  1003               	clrc
  7651  069D  0CF2               	rrf	(___lwmod@divisor+1),f
  7652  069E  0CF1               	rrf	(___lwmod@divisor),f
  7653  069F  3EFF               	addlw	-1
  7654  06A0  1D03               	skipz
  7655  06A1  2E9C               	goto	u306_25
  7656                           	line	18
  7657                           	
  7658  06A2                     i1l8919:	
  7659  06A2  3001               	movlw	low(01h)
  7660  06A3  02F6               	subwf	(___lwmod@counter),f
  7661  06A4  1D03               	btfss	status,2
  7662  06A5  2EA7               	goto	u307_21
  7663  06A6  2EA8               	goto	u307_20
  7664  06A7                     u307_21:
  7665  06A7  2E8A               	goto	i1l8913
  7666  06A8                     u307_20:
  7667  06A8  2EAA               	goto	i1l8921
  7668                           	
  7669  06A9                     i1l6539:	
  7670  06A9  2EAA               	goto	i1l8921
  7671                           	line	19
  7672                           	
  7673  06AA                     i1l6533:	
  7674                           	line	20
  7675                           	
  7676  06AA                     i1l8921:	
  7677  06AA  0874               	movf	(___lwmod@dividend+1),w
  7678  06AB  01F2               	clrf	(?___lwmod+1)
  7679  06AC  07F2               	addwf	(?___lwmod+1)
  7680  06AD  0873               	movf	(___lwmod@dividend),w
  7681  06AE  01F1               	clrf	(?___lwmod)
  7682  06AF  07F1               	addwf	(?___lwmod)
  7683                           
  7684  06B0  2EB1               	goto	i1l6540
  7685                           	
  7686  06B1                     i1l8923:	
  7687                           	line	21
  7688                           	
  7689  06B1                     i1l6540:	
  7690  06B1  0008               	return
  7691                           	opt stack 0
  7692                           GLOBAL	__end_of___lwmod
  7693  06B2                     	__end_of___lwmod:
  7694 ;; =============== function ___lwmod ends ============
  7695                           
  7696                           	signat	___lwmod,8314
  7697                           psect	text1341,local,class=CODE,delta=2
  7698                           global __ptext1341
  7699  0000                     __ptext1341:
  7700                           	global	btemp
  7701  007E                     	btemp set 07Eh
  7702                           
  7703                           	DABS	1,126,2	;btemp
  7704                           	global	wtemp0
  7705  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon May 20 22:26:35 2013

     __end_of_lcd_write_control 0CC5                               pc 0002                              _GO 00FA  
                            _RD 0C60                              _WR 0C61                    ___awdiv@sign 0036  
                            fsr 0004             ___wmul@multiplicand 002C                             l700 0CDA  
                           l703 06FD                             l704 06FD                             l705 0702  
                           l706 0731                             l690 06B6                             l691 06E0  
                           l692 06BA                             l693 06BE                             l694 06C2  
                           l695 06C6                             l696 06CA                             l689 06CF  
                           l697 06F2                             _GIE 005F                             _RB0 0030  
                           _RE0 0048                             _RE1 0049                             _RE2 004A  
                           _RX9 00C6                             _TX9 04C6                             fsr0 0004  
                           indf 0000              drive@highByteSpeed 0032       lcd_write_1_digit_bcd@data 002D  
               ?_lcd_set_cursor 0071          __end_of_updateLocation 049F                            l1401 0F90  
                          l1404 0506                            l1420 076F                            l1405 04B6  
                          l1406 0505                            l1414 0629                            l1423 0E75  
                          l1407 050B                            l1408 050B                            l1417 0FC7  
                          l4400 0D4E                            l5122 07AC                            l2820 0C6D  
                          l4422 0E4C                            l2814 0CC4                            l3622 0F59  
                          l3630 0D2D                            l5119 0C8A                            l2823 0DF0  
                          l2824 0DDD                            l3640 02E1                            l2817 0C9D  
                          l3625 0D11                            l2825 0DFD                            l2841 0EC9  
                          l3641 02E1                            l3633 027D                            l2826 0DFD  
                          l3650 0D92                            l3634 0272                            l3635 0284  
                          l3644 0DB5                            l3628 0D2A                            l3636 029D  
                          l4381 07F1                            l2829 0C78                            l3629 0D2D  
                          l3653 0E08                            l3637 02A4                            l4382 07FC  
                          l3662 0DD8                            l3670 045C                            l3654 0E24  
                          l3638 02DA                            l4391 07D6                            l3647 0CF5  
                          l3671 0469                            l3655 0E12                            l3639 02CF  
                          l4392 07B2                            l3672 0472                            l3656 0E23  
                          l3680 0553                            l4385 0D51                            l4393 07E5  
                          l3673 049E                            l3665 043D                            l3657 0E1C  
                          l4386 0D50                            l4394 07E5                            l3666 0474  
                          l3658 0E22                            l4387 0D5A                            l3667 0444  
                          l3659 0E24                            l4388 0D70                            l3668 0484  
                          l3676 053B                            l4397 0D33                            l3669 0451  
                          l3677 0551                            l4398 0D32                            l3678 0552  
                          l4399 0D3B                            l3679 0553                            l6520 0EF5  
                          l5811 002D                            l5820 0149                            l5812 01E3  
                          l6517 0ECF                            l5813 01E3                            l5821 01DF  
                          l6518 0ED9                            l5822 0190                            l5814 0074  
                          l6519 0EEE                            l5831 05CF                            l5815 01E2  
                          l5823 01DE                            l5832 05BB                            l5824 01D7  
                          l5816 00BB                            l5833 05D6                            l5817 01E1  
                          l5825 01DD                            l5834 05E4                            l5818 0102  
                          l5819 01E0                            l6660 03EE                            l5828 0E9E  
                          l6661 03E2                            l6662 03F3                            l6663 03F4  
                          l6664 040D                            l6665 041B                            l6657 03C8  
                          l6666 0426                            l6658 03D6                            l9411 07F9  
                          l6667 042D                            l6659 041C                            l9501 0E37  
                          l9413 07FB                            l9511 0E42                            l9503 0E3A  
                          l9441 0D31                            l9513 0E43                            l9505 0E3D  
                          l9521 07F0                            l9601 040B                            l9451 0D4D  
                          l9443 0D33                            l9507 0E3E                            l9523 07F1  
                          l9515 07E6                            l9611 0426                            l9603 040D  
                          l9445 0D3C                            l9509 0E41                            l9525 07F7  
                          l9517 07EC                            l9613 042D                            l9605 0414  
                          l9621 072A                            l9701 05BC                            l9447 0D44  
                          l9527 07F9                            l9519 07EE                            l9607 041C  
                          l9623 0731                            l9615 06F3                            l9631 0CD0  
                          l9703 05C0                            l9711 0C7C                            l9449 0D4A  
                          l9529 07FC                            l9609 0420                            l9617 06F9  
                          l9633 0CD4                            l9625 0CC5                            l9641 0F78  
                          l9705 05C9                            l9713 07AD                            l9721 0015  
                          l9801 04A6                            l9491 0E28                            l9571 0EEE  
                          l9563 0ECA                            l9619 0702                            l9627 0CC8  
                          l9643 0F80                            l9635 0F5D                            l9651 0D5B  
                          l9707 05D6                            l9715 07B2                            l9731 003C  
                          l9723 0024                            l9811 04F8                            l9803 04B6  
                          l9493 0E30                            l9573 0EF5                            l9565 0ECF  
                          l9581 03CC                            l9629 0CCC                            l9645 0F88  
                          l9637 0F6A                            l9661 0D70                            l9653 0D65  
                          l9709 05D7                            l9717 07CD                            l9741 00B9  
                          l9733 0072                            l9725 002B                            l9813 0503  
                          l9805 04D6                            l9821 061B                            l9901 0E97  
                          _CHS0 00FB                            l9495 0E31                            l9567 0ED3  
                          l9591 03E2                            l9583 03D1                            l9575 03B8  
                          l9639 0F70                            l9655 0D69                            l9647 0D4F  
                          l9663 0E50                            l9671 0C8E                            l9719 07D6  
                          l9751 0101                            l9743 00BA                            l9735 0073  
                          l9727 002C                            l9807 04E4                            l9815 0506  
                          l9823 0F91                            l9831 0C66                            l9903 0E9E  
                          l9911 0DA9                            _CHS1 00FC                            _CHS2 00FD  
                          l9497 0E33                            l9489 0E25                            l9569 0EE0  
                          l9593 03E9                            l9585 03D6                            l9577 03BF  
                          l9657 0D6D                            l9649 0D51                            l9665 0E5D  
                          l9673 0C91                            l9681 0CB7                            l9761 0149  
                          l9753 0102                            l9745 00BB                            l9737 0074  
                          l9729 002D                            l9809 04EA                            l9817 05E5  
                          l9825 0FB9                            l9833 0C67                            l9841 0DF0  
                          l9913 0DAF                            l9905 0D93                            l9921 0CEF  
                          l9499 0E34                            l9595 03EE                            l9587 03D8  
                          l9579 03C8                            l9659 0D6E                            l9667 0E65  
                          l9675 0C93                            l9683 0CB9                            l9691 0D0B  
                          l9771 019F                            l9763 0158                            l9755 0111  
                          l9747 00CA                            l9739 0083                            l9819 060D  
                          l9827 0732                            l9835 0DDC                            l9843 0C71  
                          l9851 0EA7                            l9907 0D98                            l9915 0CDB  
                          l9931 0D8C                            l9923 0D71                            l9597 03F4  
                          l9589 03DE                            l9669 0E6D                            l9677 0C94  
                          l9685 0CBA                            l9693 05A2                            l9773 01D5  
                          l9765 018E                            l9757 0147                            l9749 0100  
                          l9781 06B5                            l9829 0761                            l9837 0DDD  
                          l9861 0EBD                            l9853 0EAA                            l9845 0E9F  
                          l9909 0DA3                            l9917 0CE6                            l9925 0D76  
                          l9941 0DD2                            l9933 0DB6                            l9599 0405  
                          l9679 0CB4                            l9687 0CF6                            l9695 05A6  
                          l9775 01D6                            l9767 018F                            l9759 0148  
                          l9783 06CA                            l9791 06E0                            l9839 0DE9  
                          l9863 0EC3                            l9855 0EAB                            l9847 0EA3  
                          l9871 0F2A                            l9919 0CE9                            l9927 0D81  
                          l9935 0DBB                            l9951 0444                            l9943 042E  
                          STR_1 0652                            STR_2 0660                            l9689 0D05  
                          l9697 05A8                            l9777 01D7                            l9769 0190  
                          l9793 06E4                            l9785 06CD                            l9857 0EB1  
                          l9849 0EA6                            l9865 0770                            l9881 0F3B  
                          l9873 0F2F                            l9929 0D86                            l9937 0DC6  
                          l9961 0462                            l9953 044A                            l9945 0434  
                          STR_3 0630                            STR_4 0641                            l9699 05B5  
                          l9779 01DC                            l9795 06F2                            l9787 06CE  
                          l9859 0EB7                            l9891 0F49                            l9883 0F3D  
                          l9875 0F34                            l9867 0F24                            l9939 0DCC  
                          l9963 0469                            l9955 0451                            l9971 0484  
                          l9947 043A                            l9789 06CF                            l9797 049F  
                          l9893 0F4A                            l9885 0F41                            l9877 0F38  
                          l9869 0F27                            l9965 046B                            l9957 0455  
                          l9949 043D                            l9981 0D2A                            l9973 0D12  
                          l9799 04A5                            l9895 0F4F                            l9887 0F45  
                          l9879 0F3A                            l9967 0473                            l9959 045C  
                          l9983 0D2C                            l9975 0D26                            l9991 0E16  
                          l9897 0F54                            l9889 0F48                            l9969 0474  
                          l9977 0D28                            l9993 0E1C                            l9985 0DFE  
                          l9899 0E76                            l9979 0D29                            l9987 0E02  
                          l9995 01E4                            l9989 0E0C                            l9997 01F2  
                          l9999 01FD                            _BRGH 04C2                            _CREN 00C4  
                          u4000 022E                            u4001 022C                            u4020 024B  
                          u4021 024A                            u4030 0269                            u4014 022F  
                          u4031 0268                            u4040 0288                            u4041 0287  
                          u4050 02A8                            u4107 0615                            u4051 02A7  
                          u4035 0265                            u4060 02C6                            u4117 0623  
                          u4061 02C5                            u3510 0D3B                            u4070 0541  
                          u3511 0D3A                            u4207 0F63                            u4127 06E2  
                          u4217 0CD8                            u4137 05AE                            u4065 02C2  
                          u3610 0ED3                            u3611 0ED2                            u4147 05C4  
                          u3540 07EC                            u3541 07EB                            u4157 05DD  
                          u3550 07F7                            u3710 0405                            u3551 07F6  
                          u3711 0404                            u4167 0CFE                            u4087 0769  
                          u3640 0EED                            u3800 07E4                            u3641 0EEC  
                          u3625 0EDA                            u3705 03F5                            u4177 0CBF  
                          u3801 07E3                            u4097 0FC1                            u3730 041A  
                          u3650 03BF                            u3810 0024                            u3635 0EE1  
                          u3731 0419                            u3715 0401                            u3651 03BE  
                          u4187 0C99                            u3811 0023                            _PEIE 005E  
                          u3740 0420                            u3660 03CC                            u3820 003C  
                          u3900 0DFC                            u3725 040E                            u3661 03CB  
                          u4197 0E56                            u3805 07E0                            u3821 003B  
                          u3901 0DFB                            u3670 03DE                            u3750 0701  
                          u3830 0083                            u3910 043A                            u3671 03DD  
                          u3751 0700                            u3831 0082                            u3815 0020  
                          u3911 0439                            u3840 00CA                            u3920 0D26  
                          u3841 00C9                            u3825 0038                            u3921 0D25  
                          u3690 03F2                            u3770 0D5A                            u3850 0111  
                          u3930 0E02                            u3691 03F1                            u3771 0D59  
                          u3851 0110                            u3835 007F                            u3931 0E01  
                          _RCIE 0465                            u3780 05D5                            u3860 0158  
                          u3940 0E0C                            _RCIF 0065                            u3685 03E3  
                          u3765 071D                            u3781 05D4                            u3861 0157  
                          u3845 00C6                            u3925 0D22                            u3941 0E0B  
                          u3790 07BE                            u3870 019F                            u3950 0E16  
                          u3871 019E                            u3855 010D                            u3951 0E15  
                          u3880 04F8                            u3960 01FC                            u3865 0154  
                          u3881 04F7                            u3961 01FA                            u3890 050A  
                          u3875 019B                            u3891 0509                            u3980 0215  
                          u3885 04F4                            u3981 0213                            u3974 01FD  
                          u3994 0216                            _OERR 00C1                            _TMR0 0001  
                          _SPEN 00C7                            _TXIE 0464                            _WREN 0C62  
                          _TXEN 04C5                            _TXIF 0064                            _SYNC 04C4  
        __end_of_lcd_write_data 0C9E                            _isr1 02E2                            _main 050C  
                          _init 0F24             drive@highByteRadius 002D                            btemp 007E  
                          start 0012                 rotateIR@stepNum 002F           _lcd_write_1_digit_bcd 0C6E  
             ?_driveForDistance 0033                     _turnRight90 0732                           l10001 0216  
                         l10011 024B                           l10003 0224                           l10013 0251  
                         l10021 027D                           l10005 023D                           l10031 02A4  
                         l10023 0284                           l10015 025C                           l10007 0241  
                         l10041 02CF                           l10033 02A8                           l10025 0288  
                         l10017 0269                           l10009 0247                           l10035 02AE  
                         l10043 02DA                           l10027 028E                           l10019 0272  
                         l10051 052E                           l10037 02B9                           l10029 029D  
                         l10053 0534                           l10045 050C                           l10039 02C6  
                         l10055 053B                           l10047 051C                           l10057 0541  
                         l10049 0522                           l10059 054B              ??_driveForDistance 0035  
                         ?_isr1 0071                           ?_main 0071                           ?_init 0071  
               __end_of___awdiv 042E                           _EEADR 010D                           _CARRY 0018  
               ___awdiv@divisor 0030                 __end_of___lwmod 06B2                 ___awdiv@counter 0035  
                         _RCREG 001A                           _SPBRG 0099                           _PORTA 0005  
                         _PORTC 0007                           _PORTD 0008                           _PORTE 0009  
                         _TRISA 0085                           _TRISB 0086                           _TRISC 0087  
                         _TRISD 0088                           _TRISE 0089                           _SSPIF 0063  
                         _TXREG 0019          lcd_write_data@databyte 002C                 __end_of_goRight 0DD9  
               __end_of_convert 01E4                           _drive 0F5A                 ?_updateLocation 0071  
                         _walls 0061                           _start 0059                  __pbitbssCOMMON 0380  
               __end_of_waitFor 0E76                           pclath 000A                 ?_lcd_write_data 0071  
             ?_adc_read_channel 0045                           status 0003                           wtemp0 007E  
            ??_adc_read_channel 0047            __end_of_goToNextCell 0E25      __size_of_lcd_write_control 0014  
                  __end_of_isr1 03B8                    __end_of_main 0556                    __end_of_init 0F5A  
                        ??_isr1 0020                          ??_main 0049                          ??_init 0035  
                        _ADCON0 001F                          _ADCON1 009F                          ?_drive 002C  
                        _ADRESH 001E                          _ADRESL 009E                          _EEDATA 010C  
                        _EECON1 018C                          _EECON2 018D                ___awdiv@dividend 0032  
              __end_of_adc_read 0732                          i1l3610 0320                          i1l3611 033D  
                        i1l3612 0363                          i1l3613 0362                          i1l3614 0368  
                        i1l3615 0386                          i1l3608 03AC                          i1l3616 0385  
                        i1l3617 03AB                          i1l3609 0307                          i1l3618 03AA  
                        i1l3619 03AC                          i1l6540 06B1                          i1l6533 06AA  
                        i1l6534 0684                          i1l6535 0678                          i1l6536 0689  
                        u302_20 0674                          i1l6537 068A                          u302_21 0673  
                        i1l6538 069B                          i1l6539 06A9                          u303_25 0679  
                        u304_20 0688                          u304_21 0687                          i1l8801 0380  
                        i1l8811 039C                          i1l8803 0386                          i1l8813 03A0  
                        i1l8805 038A                          i1l8911 0684                          i1l8903 066E  
                        i1l8815 03A6                          i1l8807 0390                          u305_20 0694  
                        u305_21 0693                          i1l8913 068A                          i1l8905 0674  
                        i1l8921 06AA                          i1l8809 0398                          i1l8761 02E6  
                        i1l8923 06B1                          i1l8915 0694                          i1l8907 0678  
                        i1l8771 0307                          i1l8763 02E7                          i1l8917 069B  
                        u305_25 0690                          i1l8909 067F                          i1l8781 033D  
                        i1l8773 031E                          i1l8765 02EF                          i1l8919 06A2  
                        i1l8791 0364                          i1l8783 0343                          i1l8775 0320  
                        i1l8767 02F0                          i1l8759 02E2                          i1l8793 0368  
                        i1l8785 0347                          i1l8777 0337                          i1l8769 0305  
                        i1l8795 036C                          i1l8787 035D                          i1l8779 0338  
                        u306_25 069C                          i1l8797 0374                          i1l8789 0360  
                        i1l8799 037A                          u307_20 06A8                          u307_21 06A7  
                        u280_20 02E6                          u280_21 02E5                          u281_20 0305  
                        u281_21 0304                          u290_20 03A6                          u282_20 031E  
                        u290_21 03A5                          u282_21 031D                          u283_20 0337  
                        u283_21 0336                          u284_20 0343                          u284_21 0342  
                        u285_20 035D                          u285_21 035C                          u286_20 036C  
                        u286_21 036B                          u287_20 0380                          u287_21 037F  
                        u288_20 038A                          u288_21 0389                          u289_20 0390  
                        u289_21 038F                          _TMR0IE 005D                          _TMR0IF 005A  
                        _SSPCON 0014                          _SSPBUF 0013                convert@adc_value 0041  
             rotateIR@direction 002A          ?_lcd_write_1_digit_bcd 0071                __end_of_findWall 0D2E  
              __end_of_lcd_init 0ECA                          ___wmul 0ECA                       ??___awdiv 0034  
                        _goLeft 0D71                       ??___lwmod 0075                          _xCoord 007B  
                        _yCoord 0065                          _readIR 0E76                __end_of_init_adc 0CDB  
              ___awdiv@quotient 0037        __end_of_lcd_write_string 0DFE                          _moving 0386  
                     ??_goRight 003D                          _rxfifo 0049                          clrloop 0C5C  
                        _txfifo 00CE                          _rxiptr 0077                          _rxoptr 0078  
                        _txiptr 0079                       ??_convert 0043                          _txoptr 007A  
              __end_of_ser_init 0E4D                    __pdataCOMMON 007B                __end_of_ser_isrx 07FD  
                        saved_w 007E                       ??_waitFor 002E                __end_of_rotateIR 05E5  
             lcd_write_string@s 002E           play_iCreate_song@song 002C                   rotateIR@steps 002E  
                __pcstackCOMMON 0071                    __pidataBANK0 0C56                    __pidataBANK1 0EF6  
                  __pidataBANK3 0FC8                   __end_of_drive 0F91               _play_iCreate_song 0C79  
            __size_of_goForward 001B                ??_lcd_set_cursor 002D              ?_play_iCreate_song 0071  
            __size_of_findWalls 00FE                      _goBackward 0D93                         ??_drive 002F  
           ??_play_iCreate_song 002C                      __pbssBANK0 0049                      __pbssBANK1 00CE  
    findWalls@wallAtOrientation 00E3           __size_of_goToNextCell 0027              __size_of_initSongs 003D  
             drive@lowByteSpeed 002C                      __pmaintext 050C                         ?___wmul 002A  
                       ?_goLeft 0071                      __pintentry 0004       __end_of_play_iCreate_song 0C8B  
                       ?_readIR 00DE                    ?_turnRight90 0071                      __ptext1310 0E76  
                    __ptext1302 01E4                      __ptext1311 0F24                      __ptext1303 0DFE  
                    __ptext1320 049F                      __ptext1312 0770                      __ptext1304 0D12  
                    __ptext1321 06B2                      __ptext1313 0E9F                      __ptext1305 042E  
                    __ptext1330 0D4F                      __ptext1322 0015                      __ptext1314 0C6E  
                    __ptext1306 0DB6                      __ptext1331 0F5A                      __ptext1323 07AD  
                    __ptext1315 0DD9                      __ptext1307 0D71                      __ptext1340 066E  
                    __ptext1332 0CC5                      __ptext1324 0C79                      __ptext1316 0C63  
                    __ptext1308 0CDB                      __ptext1341 0000                      __ptext1333 06F3  
                    __ptext1325 059F                      __ptext1317 0732                      __ptext1309 0D93  
                    __ptext1334 03B8                      __ptext1326 0CF6                      __ptext1318 0F91  
                    __ptext1335 0ECA                      __ptext1327 0CB1                      __ptext1319 05E5  
                    __ptext1336 07E6                      __ptext1328 0C8B                      __ptext1337 0E25  
                    __ptext1329 0E4D                      __ptext1338 0D2E                      __ptext1339 02E2  
            __size_of_ser_getch 0022                       ?_adc_read 0039              __size_of_ser_putch 0021  
              ??_updateLocation 002E                    _goToNextCell 0DFE                ??_lcd_write_data 002A  
                     ?_findWall 0071       __size_of_driveForDistance 006D                  waitFor@lowByte 002D  
                     ?_lcd_init 0071                         _SSPSTAT 0094                       ?_init_adc 0071  
             __end_of_goForward 0CF6                      _initIRobot 0CF6               __end_of_findWalls 02E2  
                     ?_ser_init 0071                       ?_ser_isrx 0071                         ___awdiv 03B8  
                     ?_rotateIR 002A                 __size_of___wmul 002C                         ___lwmod 066E  
               __size_of_goLeft 0022                 __size_of_readIR 0029       __size_of_adc_read_channel 0041  
                       _goRight 0DB6                      ??_adc_read 003B                         _convert 0015  
                   waitFor@type 0031               __end_of_initSongs 07AD    driveForDistance@moveDistance 0033  
                       _waitFor 0E4D                         _ser_tmp 0060                     ?_goBackward 0071  
           driveForDistance@low 003C                     ser_putArr@i 0033                      ??_findWall 0049  
                    ??_lcd_init 002D            end_of_initialization 059B               __end_of_ser_getch 0D71  
                       init_ram 0CA2                  _superMarioBros 00A0                      ??_init_adc 002A  
       ??_lcd_write_1_digit_bcd 002D               __end_of_ser_putch 0D4F                      ??_ser_init 002A  
                    ??_ser_isrx 002A                      _ser_putArr 07AD                      ??_rotateIR 002B  
    __size_of_play_iCreate_song 0012               ?_lcd_write_string 0071              ??_lcd_write_string 002D  
             adc_read@adc_value 003F                     ?_initIRobot 0071                      _turnLeft90 0F91  
                    _turnAround 05E5             __size_of_goBackward 0023                  __end_of___wmul 0EF6  
                __end_of_goLeft 0D93                   __pidataCOMMON 07FD                  __end_of_readIR 0E9F  
          __size_of_turnRight90 003E             start_initialization 0556                _driveForDistance 049F  
         lcd_set_cursor@address 002D                     ?_ser_putArr 002C                  _RTC_FLAG_500MS 0382  
                      ??___wmul 002E                        ??_goLeft 003D                     __pdataBANK0 0061  
                   __pdataBANK1 00A0                     __pdataBANK3 0190                        ??_readIR 0049  
              _adc_read_channel 06B2               __size_of_adc_read 003F                     __pbssCOMMON 0077  
                 __pcstackBANK0 0020                   __pcstackBANK1 00DE             __size_of_initIRobot 001C  
             __size_of_findWall 001C               __size_of_lcd_init 002B              drive@lowByteRadius 002E  
                     _champions 00B9               __size_of_init_adc 0016                       _goForward 0CDB  
                   ?_turnLeft90 0071                     ?_turnAround 0071                        ?___awdiv 0030  
             __size_of_ser_init 0028               __size_of_ser_isrx 0017                        ?___lwmod 0071  
                     _findWalls 01E4                       __pstrings 062A               __size_of_rotateIR 0046  
                      ?_goRight 0071                        ?_convert 0041                  _finalCountdown 01AD  
                      ?_waitFor 002C                    ??_goBackward 003D                      ser_getch@c 002B  
                     _initSongs 0770             __size_of_ser_putArr 0039                  __size_of_drive 0037  
                     _frontWall 0384         __size_of_lcd_set_cursor 000B               interrupt_function 0004  
                ___wmul@product 002E                      ser_putch@c 002B  __size_of_lcd_write_1_digit_bcd 000B  
 __end_of_lcd_write_1_digit_bcd 0C79                  _directionMoved 005F                 waitFor@highByte 002C  
                     _rightWall 0387                       _ser_getch 0D4F                      ?_goForward 0071  
                     _ser_putch 0D2E              __end_of_goBackward 0DB6                      ?_findWalls 0071  
                   __stringbase 062F               ___wmul@multiplier 002A                      ?_initSongs 0071  
           __size_of_turnLeft90 0037             __size_of_turnAround 0045         __size_of_updateLocation 0071  
     __size_of_lcd_write_string 0025                    ??_initIRobot 002C         __size_of_lcd_write_data 0013  
                    ?_ser_getch 0071                    _lookingForU2 0190                      ?_ser_putch 0071  
       adc_read_channel@channel 0048                   _RTC_FLAG_10MS 0380                   _RTC_FLAG_50MS 0383  
                     init_fetch 0C9E        __end_of_driveForDistance 050C                __size_of___awdiv 0076  
            _currentOrientation 005E                __size_of___lwmod 0044                        _adc_read 06F3  
              __size_of_goRight 0023                __size_of_convert 01CF              __end_of_initIRobot 0D12  
              __size_of_waitFor 0029                        _findWall 0D12                        _lcd_init 0E9F  
                      _leftWall 0385        __end_of_adc_read_channel 06F3       lcd_write_control@databyte 002C  
                      _init_adc 0CC5                   __size_of_isr1 00D6                   __size_of_main 004A  
                 __size_of_init 0036                        clear_ram 0C5B                        _ser_init 0E25  
                   ??_goForward 003D                    ??_ser_putArr 0030                        _ser_isrx 07E6  
          driveForDistance@high 003B                        _rotateIR 059F                     ??_findWalls 00E2  
                 ??_turnRight90 0033                        readIR@cm 00E0                   ?_goToNextCell 0071  
 driveForDistance@deltaDistance 0037                    _RTC_FLAG_1MS 0381                     ??_initSongs 0035  
            __end_of_ser_putArr 07E6                        intlevel1 0000                  _lcd_set_cursor 0C63  
              ___lwmod@dividend 0073                       stringcode 062A                     ??_ser_getch 002A  
                  ??_turnLeft90 0033                     ??_ser_putch 002A                    ??_turnAround 0033  
             _lcd_write_control 0CB1              ?_lcd_write_control 0071                      _OPTION_REG 0081  
               ___lwmod@divisor 0071                  ??_goToNextCell 003E                 ___lwmod@counter 0076  
           __end_of_turnRight90 0770                        stringdir 062A        driveForDistance@distance 0039  
                      stringtab 062A             ??_lcd_write_control 002A          __end_of_lcd_set_cursor 0C6E  
            __end_of_turnLeft90 0FC8              __end_of_turnAround 062A                  _updateLocation 042E  
              _lcd_write_string 0DD9                     _RTC_Counter 005C                  _lcd_write_data 0C8B  
               ser_putArr@array 002C                ser_putArr@length 002E  
