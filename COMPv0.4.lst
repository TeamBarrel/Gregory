

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Mon May 27 14:15:22 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_lcd_set_cursor
    49                           	FNCALL	_main,_lcd_write_string
    50                           	FNCALL	_main,_checkForFinalDestination
    51                           	FNCALL	_main,_lookForVictim
    52                           	FNCALL	_main,_findWalls
    53                           	FNCALL	_main,_goParallel
    54                           	FNCALL	_main,_rotateIR
    55                           	FNCALL	_main,_goToNextCell
    56                           	FNCALL	_main,_getSuccessfulDrive
    57                           	FNCALL	_main,_updateLocation
    58                           	FNCALL	_main,_updateNode
    59                           	FNCALL	_main,_checkIfHome
    60                           	FNCALL	_goToNextCell,_getSomethingInTheWay
    61                           	FNCALL	_goToNextCell,_goLeft
    62                           	FNCALL	_goToNextCell,_goForward
    63                           	FNCALL	_goToNextCell,_goRight
    64                           	FNCALL	_goToNextCell,_goBackward
    65                           	FNCALL	_findWalls,_lcd_set_cursor
    66                           	FNCALL	_findWalls,_findWall
    67                           	FNCALL	_findWalls,_lcd_write_data
    68                           	FNCALL	_findWalls,_rotateIR
    69                           	FNCALL	_findWalls,_play_iCreate_song
    70                           	FNCALL	_goRight,_lcd_set_cursor
    71                           	FNCALL	_goRight,_lcd_write_data
    72                           	FNCALL	_goRight,_turnRight90
    73                           	FNCALL	_goRight,_updateOrientation
    74                           	FNCALL	_goRight,_driveForDistance
    75                           	FNCALL	_goLeft,_lcd_set_cursor
    76                           	FNCALL	_goLeft,_lcd_write_data
    77                           	FNCALL	_goLeft,_turnLeft90
    78                           	FNCALL	_goLeft,_updateOrientation
    79                           	FNCALL	_goLeft,_driveForDistance
    80                           	FNCALL	_goForward,_lcd_set_cursor
    81                           	FNCALL	_goForward,_lcd_write_data
    82                           	FNCALL	_goForward,_driveForDistance
    83                           	FNCALL	_goBackward,_lcd_set_cursor
    84                           	FNCALL	_goBackward,_lcd_write_data
    85                           	FNCALL	_goBackward,_turnAround
    86                           	FNCALL	_goBackward,_updateOrientation
    87                           	FNCALL	_goBackward,_driveForDistance
    88                           	FNCALL	_goParallel,_readIR
    89                           	FNCALL	_goParallel,_rotateIR
    90                           	FNCALL	_goParallel,_play_iCreate_song
    91                           	FNCALL	_goParallel,___lbtoft
    92                           	FNCALL	_goParallel,___ftmul
    93                           	FNCALL	_goParallel,___fttol
    94                           	FNCALL	_goParallel,_drive
    95                           	FNCALL	_goParallel,_waitFor
    96                           	FNCALL	_findWall,_readIR
    97                           	FNCALL	_driveForDistance,_drive
    98                           	FNCALL	_driveForDistance,_ser_putch
    99                           	FNCALL	_driveForDistance,_ser_getch
   100                           	FNCALL	_driveForDistance,_goReverse
   101                           	FNCALL	_driveForDistance,_turnRight90
   102                           	FNCALL	_driveForDistance,_updateOrientation
   103                           	FNCALL	_driveForDistance,_turnLeft90
   104                           	FNCALL	_driveForDistance,_getCurrentY
   105                           	FNCALL	_driveForDistance,_getCurrentX
   106                           	FNCALL	_driveForDistance,_findFinalDestination
   107                           	FNCALL	_updateLocation,_lcd_set_cursor
   108                           	FNCALL	_updateLocation,_lcd_write_data
   109                           	FNCALL	_updateLocation,_getOrientation
   110                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
   111                           	FNCALL	_lookForVictim,_ser_putch
   112                           	FNCALL	_lookForVictim,_ser_getch
   113                           	FNCALL	_lookForVictim,_play_iCreate_song
   114                           	FNCALL	_lookForVictim,_lcd_set_cursor
   115                           	FNCALL	_lookForVictim,_lcd_write_data
   116                           	FNCALL	_checkForFinalDestination,_getFinalX
   117                           	FNCALL	_checkForFinalDestination,_getFinalY
   118                           	FNCALL	_checkForFinalDestination,_play_iCreate_song
   119                           	FNCALL	_checkForFinalDestination,_lcd_set_cursor
   120                           	FNCALL	_checkForFinalDestination,_lcd_write_data
   121                           	FNCALL	_init,_init_adc
   122                           	FNCALL	_init,_lcd_init
   123                           	FNCALL	_init,_ser_init
   124                           	FNCALL	_init,_initIRobot
   125                           	FNCALL	_init,_initSongs
   126                           	FNCALL	_goReverse,_lcd_set_cursor
   127                           	FNCALL	_goReverse,_lcd_write_data
   128                           	FNCALL	_goReverse,_drive
   129                           	FNCALL	_goReverse,_waitFor
   130                           	FNCALL	_readIR,_adc_read_channel
   131                           	FNCALL	_readIR,_convert
   132                           	FNCALL	_findFinalDestination,_lcd_set_cursor
   133                           	FNCALL	_findFinalDestination,_lcd_write_1_digit_bcd
   134                           	FNCALL	_checkIfHome,_drive
   135                           	FNCALL	_checkIfHome,_play_iCreate_song
   136                           	FNCALL	_turnAround,_drive
   137                           	FNCALL	_turnAround,_waitFor
   138                           	FNCALL	_turnLeft90,_drive
   139                           	FNCALL	_turnLeft90,_waitFor
   140                           	FNCALL	_turnRight90,_drive
   141                           	FNCALL	_turnRight90,_waitFor
   142                           	FNCALL	_initSongs,_ser_putArr
   143                           	FNCALL	_lcd_init,_lcd_write_control
   144                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
   145                           	FNCALL	_lcd_write_string,_lcd_write_data
   146                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   147                           	FNCALL	_adc_read_channel,_adc_read
   148                           	FNCALL	___lbtoft,___ftpack
   149                           	FNCALL	___ftmul,___ftpack
   150                           	FNCALL	_initIRobot,_ser_putch
   151                           	FNCALL	_waitFor,_ser_putch
   152                           	FNCALL	_drive,_ser_putch
   153                           	FNCALL	_convert,___wmul
   154                           	FNCALL	_convert,___awdiv
   155                           	FNCALL	_play_iCreate_song,_ser_putch
   156                           	FNCALL	_ser_putArr,_ser_putch
   157                           	FNCALL	_ser_getch,_ser_isrx
   158                           	FNCALL	_adc_read,___awdiv
   159                           	FNROOT	_main
   160                           	FNCALL	_isr1,___lwmod
   161                           	FNCALL	intlevel1,_isr1
   162                           	global	intlevel1
   163                           	FNROOT	intlevel1
   164                           	global	_somethingInTheWay
   165                           	global	_xCoord
   166                           	global	_yCoord
   167                           	global	_lookingForU2
   168                           	global	_finalCountdown
   169                           	global	_superMarioBros
   170                           	global	_champions
   171                           	global	_beep
   172                           psect	idataBANK0,class=CODE,space=0,delta=2
   173                           global __pidataBANK0
   174  15AE                     __pidataBANK0:
   175                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
   176                           	line	14
   177                           
   178                           ;initializer for _somethingInTheWay
   179  15AE  3402               	retlw	02h
   180                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
   181                           	line	50
   182                           
   183                           ;initializer for _xCoord
   184  15AF  3401               	retlw	01h
   185                           	line	51
   186                           
   187                           ;initializer for _yCoord
   188  15B0  3403               	retlw	03h
   189                           psect	idataBANK3,class=CODE,space=0,delta=2
   190                           global __pidataBANK3
   191  0799                     __pidataBANK3:
   192                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
   193                           	line	11
   194                           
   195                           ;initializer for _lookingForU2
   196  0799  348C               	retlw	08Ch
   197  079A  3402               	retlw	02h
   198  079B  340D               	retlw	0Dh
   199  079C  3448               	retlw	048h
   200  079D  341C               	retlw	01Ch
   201  079E  3448               	retlw	048h
   202  079F  341C               	retlw	01Ch
   203  07A0  344F               	retlw	04Fh
   204  07A1  3440               	retlw	040h
   205  07A2  3480               	retlw	080h
   206  07A3  3410               	retlw	010h
   207  07A4  344D               	retlw	04Dh
   208  07A5  341C               	retlw	01Ch
   209  07A6  344C               	retlw	04Ch
   210  07A7  341C               	retlw	01Ch
   211  07A8  3448               	retlw	048h
   212  07A9  3440               	retlw	040h
   213  07AA  3480               	retlw	080h
   214  07AB  3410               	retlw	010h
   215  07AC  3445               	retlw	045h
   216  07AD  341C               	retlw	01Ch
   217  07AE  3445               	retlw	045h
   218  07AF  341C               	retlw	01Ch
   219  07B0  3445               	retlw	045h
   220  07B1  341C               	retlw	01Ch
   221  07B2  3448               	retlw	048h
   222  07B3  341C               	retlw	01Ch
   223  07B4  3448               	retlw	048h
   224  07B5  3440               	retlw	040h
   225                           	line	12
   226                           
   227                           ;initializer for _finalCountdown
   228  07B6  348C               	retlw	08Ch
   229  07B7  3403               	retlw	03h
   230  07B8  340C               	retlw	0Ch
   231  07B9  3449               	retlw	049h
   232  07BA  3408               	retlw	08h
   233  07BB  3447               	retlw	047h
   234  07BC  3408               	retlw	08h
   235  07BD  3449               	retlw	049h
   236  07BE  3420               	retlw	020h
   237  07BF  3442               	retlw	042h
   238  07C0  3440               	retlw	040h
   239  07C1  3480               	retlw	080h
   240  07C2  3420               	retlw	020h
   241  07C3  344A               	retlw	04Ah
   242  07C4  3408               	retlw	08h
   243  07C5  3449               	retlw	049h
   244  07C6  3408               	retlw	08h
   245  07C7  344A               	retlw	04Ah
   246  07C8  3408               	retlw	08h
   247  07C9  3480               	retlw	080h
   248  07CA  340C               	retlw	0Ch
   249  07CB  3449               	retlw	049h
   250  07CC  3406               	retlw	06h
   251  07CD  3480               	retlw	080h
   252  07CE  340C               	retlw	0Ch
   253  07CF  3447               	retlw	047h
   254  07D0  3430               	retlw	030h
   255                           	line	10
   256                           
   257                           ;initializer for _superMarioBros
   258  07D1  348C               	retlw	08Ch
   259  07D2  3401               	retlw	01h
   260  07D3  340B               	retlw	0Bh
   261  07D4  344C               	retlw	04Ch
   262  07D5  3408               	retlw	08h
   263  07D6  3480               	retlw	080h
   264  07D7  3404               	retlw	04h
   265  07D8  344C               	retlw	04Ch
   266  07D9  3410               	retlw	010h
   267  07DA  3480               	retlw	080h
   268  07DB  3404               	retlw	04h
   269  07DC  344C               	retlw	04Ch
   270  07DD  3410               	retlw	010h
   271  07DE  3480               	retlw	080h
   272  07DF  3404               	retlw	04h
   273  07E0  3448               	retlw	048h
   274  07E1  3408               	retlw	08h
   275  07E2  344C               	retlw	04Ch
   276  07E3  3410               	retlw	010h
   277  07E4  344F               	retlw	04Fh
   278  07E5  3420               	retlw	020h
   279  07E6  3480               	retlw	080h
   280  07E7  3408               	retlw	08h
   281  07E8  3443               	retlw	043h
   282  07E9  3410               	retlw	010h
   283                           psect	idataBANK1,class=CODE,space=0,delta=2
   284                           global __pidataBANK1
   285  166D                     __pidataBANK1:
   286                           	line	13
   287                           
   288                           ;initializer for _champions
   289  166D  348C               	retlw	08Ch
   290  166E  3404               	retlw	04h
   291  166F  3409               	retlw	09h
   292  1670  344A               	retlw	04Ah
   293  1671  3440               	retlw	040h
   294  1672  3449               	retlw	049h
   295  1673  3410               	retlw	010h
   296  1674  344A               	retlw	04Ah
   297  1675  3410               	retlw	010h
   298  1676  3449               	retlw	049h
   299  1677  3430               	retlw	030h
   300  1678  3445               	retlw	045h
   301  1679  3430               	retlw	030h
   302  167A  3480               	retlw	080h
   303  167B  3420               	retlw	020h
   304  167C  3442               	retlw	042h
   305  167D  341C               	retlw	01Ch
   306  167E  3447               	retlw	047h
   307  167F  3420               	retlw	020h
   308  1680  3442               	retlw	042h
   309  1681  3430               	retlw	030h
   310                           	line	14
   311                           
   312                           ;initializer for _beep
   313  1682  348C               	retlw	08Ch
   314  1683  3405               	retlw	05h
   315  1684  3401               	retlw	01h
   316  1685  3448               	retlw	048h
   317  1686  3404               	retlw	04h
   318                           	global	_RTC_Counter
   319                           	global	_currentOrientation
   320                           	global	_finalX
   321                           	global	_finalY
   322                           	global	_lastMove
   323                           	global	_ser_tmp
   324                           	global	_stepPosition
   325                           	global	_rxiptr
   326                           	global	_rxoptr
   327                           	global	_txiptr
   328                           	global	_txoptr
   329                           	global	_RTC_FLAG_10MS
   330                           	global	_RTC_FLAG_1MS
   331                           	global	_RTC_FLAG_500MS
   332                           	global	_RTC_FLAG_50MS
   333                           	global	_frontWall
   334                           	global	_goingHome
   335                           	global	_home
   336                           	global	_leftWall
   337                           	global	_moving
   338                           	global	_rightWall
   339                           	global	_successfulDrive
   340                           	global	_rxfifo
   341                           	global	_txfifo
   342                           	global	_start
   343                           	global	_closestObject
   344                           	global	_node
   345                           	global	_stepsToPerpendicular
   346                           	global	_vicZone
   347                           	global	_victimZone
   348                           	global	_wayWent
   349                           	global	_ADCON0
   350  001F                     _ADCON0	set	31
   351                           	global	_ADRESH
   352  001E                     _ADRESH	set	30
   353                           	global	_PORTA
   354  0005                     _PORTA	set	5
   355                           	global	_PORTC
   356  0007                     _PORTC	set	7
   357                           	global	_PORTD
   358  0008                     _PORTD	set	8
   359                           	global	_PORTE
   360  0009                     _PORTE	set	9
   361                           	global	_RCREG
   362  001A                     _RCREG	set	26
   363                           	global	_SSPBUF
   364  0013                     _SSPBUF	set	19
   365                           	global	_SSPCON
   366  0014                     _SSPCON	set	20
   367                           	global	_TMR0
   368  0001                     _TMR0	set	1
   369                           	global	_TXREG
   370  0019                     _TXREG	set	25
   371                           	global	_CARRY
   372  0018                     _CARRY	set	24
   373                           	global	_CHS0
   374  00FB                     _CHS0	set	251
   375                           	global	_CHS1
   376  00FC                     _CHS1	set	252
   377                           	global	_CHS2
   378  00FD                     _CHS2	set	253
   379                           	global	_CREN
   380  00C4                     _CREN	set	196
   381                           	global	_GIE
   382  005F                     _GIE	set	95
   383                           	global	_GO
   384  00FA                     _GO	set	250
   385                           	global	_OERR
   386  00C1                     _OERR	set	193
   387                           	global	_PEIE
   388  005E                     _PEIE	set	94
   389                           	global	_RB0
   390  0030                     _RB0	set	48
   391                           	global	_RCIF
   392  0065                     _RCIF	set	101
   393                           	global	_RE0
   394  0048                     _RE0	set	72
   395                           	global	_RE1
   396  0049                     _RE1	set	73
   397                           	global	_RE2
   398  004A                     _RE2	set	74
   399                           	global	_RX9
   400  00C6                     _RX9	set	198
   401                           	global	_SPEN
   402  00C7                     _SPEN	set	199
   403                           	global	_TMR0IE
   404  005D                     _TMR0IE	set	93
   405                           	global	_TMR0IF
   406  005A                     _TMR0IF	set	90
   407                           	global	_TXIF
   408  0064                     _TXIF	set	100
   409                           	global	_ADCON1
   410  009F                     _ADCON1	set	159
   411                           	global	_ADRESL
   412  009E                     _ADRESL	set	158
   413                           	global	_OPTION_REG
   414  0081                     _OPTION_REG	set	129
   415                           	global	_SPBRG
   416  0099                     _SPBRG	set	153
   417                           	global	_SSPSTAT
   418  0094                     _SSPSTAT	set	148
   419                           	global	_TRISA
   420  0085                     _TRISA	set	133
   421                           	global	_TRISB
   422  0086                     _TRISB	set	134
   423                           	global	_TRISC
   424  0087                     _TRISC	set	135
   425                           	global	_TRISD
   426  0088                     _TRISD	set	136
   427                           	global	_TRISE
   428  0089                     _TRISE	set	137
   429                           	global	_BRGH
   430  04C2                     _BRGH	set	1218
   431                           	global	_RCIE
   432  0465                     _RCIE	set	1125
   433                           	global	_SYNC
   434  04C4                     _SYNC	set	1220
   435                           	global	_TX9
   436  04C6                     _TX9	set	1222
   437                           	global	_TXEN
   438  04C5                     _TXEN	set	1221
   439                           	global	_TXIE
   440  0464                     _TXIE	set	1124
   441                           	global	_EEADR
   442  010D                     _EEADR	set	269
   443                           	global	_EEDATA
   444  010C                     _EEDATA	set	268
   445                           	global	_EECON1
   446  018C                     _EECON1	set	396
   447                           	global	_EECON2
   448  018D                     _EECON2	set	397
   449                           	global	_RD
   450  0C60                     _RD	set	3168
   451                           	global	_WR
   452  0C61                     _WR	set	3169
   453                           	global	_WREN
   454  0C62                     _WREN	set	3170
   455                           psect	strings,class=STRING,delta=2
   456                           global __pstrings
   457  1000                     __pstrings:
   458                           ;	global	stringdir,stringtab,__stringbase
   459  1000                     stringtab:
   460                           ;	String table - string pointers are 1 byte each
   461  1000                     stringcode:stringdir:
      + 1000                     stringdir:	
   462  1000  3010               movlw high(stringdir)
   463  1001  008A               movwf pclath
   464  1002  0804               movf fsr,w
   465  1003  0A84               incf fsr
   466  1004  0782               	addwf pc
   467  1005                     __stringbase:
   468  1005  3400               	retlw	0
   469                           psect	strings
   470                           	
   471  1006                     STR_1:	
   472  1006  3428               	retlw	40	;'('
   473  1007  342D               	retlw	45	;'-'
   474  1008  342C               	retlw	44	;','
   475  1009  342D               	retlw	45	;'-'
   476  100A  3429               	retlw	41	;')'
   477  100B  3420               	retlw	32	;' '
   478  100C  3445               	retlw	69	;'E'
   479  100D  3420               	retlw	32	;' '
   480  100E  342D               	retlw	45	;'-'
   481  100F  342D               	retlw	45	;'-'
   482  1010  3420               	retlw	32	;' '
   483  1011  342D               	retlw	45	;'-'
   484  1012  342D               	retlw	45	;'-'
   485  1013  342D               	retlw	45	;'-'
   486  1014  3420               	retlw	32	;' '
   487  1015  342D               	retlw	45	;'-'
   488  1016  3400               	retlw	0
   489                           psect	strings
   490                           	
   491  1017                     STR_2:	
   492  1017  342D               	retlw	45	;'-'
   493  1018  3420               	retlw	32	;' '
   494  1019  342D               	retlw	45	;'-'
   495  101A  3420               	retlw	32	;' '
   496  101B  342D               	retlw	45	;'-'
   497  101C  3420               	retlw	32	;' '
   498  101D  3428               	retlw	40	;'('
   499  101E  3430               	retlw	48	;'0'
   500  101F  342C               	retlw	44	;','
   501  1020  3430               	retlw	48	;'0'
   502  1021  3429               	retlw	41	;')'
   503  1022  3420               	retlw	32	;' '
   504  1023  3447               	retlw	71	;'G'
   505  1024  3452               	retlw	82	;'R'
   506  1025  3445               	retlw	69	;'E'
   507  1026  3447               	retlw	71	;'G'
   508  1027  3400               	retlw	0
   509                           psect	strings
   510                           	file	"COMPv0.4.as"
   511                           	line	#
   512                           psect cinit,class=CODE,delta=2
   513                           global start_initialization
   514  0B45                     start_initialization:
   515                           
   516                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   517                           global __pbitbssCOMMON
   518  0380                     __pbitbssCOMMON:
   519  0380                     _RTC_FLAG_10MS:
   520  0380                            ds      1
   521                           
   522  0381                     _RTC_FLAG_1MS:
   523  0381                            ds      1
   524                           
   525  0382                     _RTC_FLAG_500MS:
   526  0382                            ds      1
   527                           
   528  0383                     _RTC_FLAG_50MS:
   529  0383                            ds      1
   530                           
   531  0384                     _frontWall:
   532  0384                            ds      1
   533                           
   534  0385                     _goingHome:
   535  0385                            ds      1
   536                           
   537  0386                     _home:
   538  0386                            ds      1
   539                           
   540  0387                     _leftWall:
   541  0387                            ds      1
   542                           
   543  0388                     _moving:
   544  0388                            ds      1
   545                           
   546  0389                     _rightWall:
   547  0389                            ds      1
   548                           
   549  038A                     _successfulDrive:
   550  038A                            ds      1
   551                           
   552                           psect	bssCOMMON,class=COMMON,space=1
   553                           global __pbssCOMMON
   554  0078                     __pbssCOMMON:
   555  0078                     _rxiptr:
   556  0078                            ds      1
   557                           
   558  0079                     _rxoptr:
   559  0079                            ds      1
   560                           
   561  007A                     _txiptr:
   562  007A                            ds      1
   563                           
   564  007B                     _txoptr:
   565  007B                            ds      1
   566                           
   567                           psect	bssBANK0,class=BANK0,space=1
   568                           global __pbssBANK0
   569  005B                     __pbssBANK0:
   570  005B                     _RTC_Counter:
   571  005B                            ds      2
   572                           
   573  005D                     _currentOrientation:
   574  005D                            ds      1
   575                           
   576  005E                     _finalX:
   577  005E                            ds      1
   578                           
   579  005F                     _finalY:
   580  005F                            ds      1
   581                           
   582  0060                     _lastMove:
   583  0060                            ds      1
   584                           
   585  0061                     _ser_tmp:
   586  0061                            ds      1
   587                           
   588  0062                     _stepPosition:
   589  0062                            ds      1
   590                           
   591                           psect	dataBANK0,class=BANK0,space=1
   592                           global __pdataBANK0
   593  0063                     __pdataBANK0:
   594                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
   595  0063                     _somethingInTheWay:
   596  0063                            ds      1
   597                           
   598                           psect	dataBANK0
   599                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
   600                           	line	50
   601  0064                     _xCoord:
   602  0064                            ds      1
   603                           
   604                           psect	dataBANK0
   605                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
   606                           	line	51
   607  0065                     _yCoord:
   608  0065                            ds      1
   609                           
   610                           psect	bssBANK1,class=BANK1,space=1
   611                           global __pbssBANK1
   612  00A0                     __pbssBANK1:
   613  00A0                     _rxfifo:
   614  00A0                            ds      16
   615                           
   616  00B0                     _txfifo:
   617  00B0                            ds      16
   618                           
   619  00C0                     _start:
   620  00C0                            ds      3
   621                           
   622  00C3                     _closestObject:
   623  00C3                            ds      2
   624                           
   625  00C5                     _node:
   626  00C5                            ds      1
   627                           
   628  00C6                     _stepsToPerpendicular:
   629  00C6                            ds      1
   630                           
   631  00C7                     _vicZone:
   632  00C7                            ds      1
   633                           
   634  00C8                     _victimZone:
   635  00C8                            ds      1
   636                           
   637  00C9                     _wayWent:
   638  00C9                            ds      1
   639                           
   640                           psect	dataBANK1,class=BANK1,space=1
   641                           global __pdataBANK1
   642  00CA                     __pdataBANK1:
   643                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
   644                           	line	13
   645  00CA                     _champions:
   646  00CA                            ds      21
   647                           
   648                           psect	dataBANK1
   649                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
   650                           	line	14
   651  00DF                     _beep:
   652  00DF                            ds      5
   653                           
   654                           psect	dataBANK3,class=BANK3,space=1
   655                           global __pdataBANK3
   656  0190                     __pdataBANK3:
   657                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
   658                           	line	11
   659  0190                     _lookingForU2:
   660  0190                            ds      29
   661                           
   662                           psect	dataBANK3
   663                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
   664                           	line	12
   665  01AD                     _finalCountdown:
   666  01AD                            ds      27
   667                           
   668                           psect	dataBANK3
   669                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
   670                           	line	10
   671  01C8                     _superMarioBros:
   672  01C8                            ds      25
   673                           
   674                           psect clrtext,class=CODE,delta=2
   675                           global clear_ram
   676                           ;	Called with FSR containing the base address, and
   677                           ;	W with the last address+1
   678  15CF                     clear_ram:
   679  15CF  0064               	clrwdt			;clear the watchdog before getting into this loop
   680  15D0                     clrloop:
   681  15D0  0180               	clrf	indf		;clear RAM location pointed to by FSR
   682  15D1  0A84               	incf	fsr,f		;increment pointer
   683  15D2  0604               	xorwf	fsr,w		;XOR with final address
   684  15D3  1903               	btfsc	status,2	;have we reached the end yet?
   685  15D4  3400               	retlw	0		;all done for this memory range, return
   686  15D5  0604               	xorwf	fsr,w		;XOR again to restore value
   687  15D6  2DD0               	goto	clrloop		;do the next byte
   688                           
   689                           ; Clear objects allocated to BITCOMMON
   690                           psect cinit,class=CODE,delta=2
   691  0B45  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   692  0B46  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   693                           ; Clear objects allocated to COMMON
   694                           psect cinit,class=CODE,delta=2
   695  0B47  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   696  0B48  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   697  0B49  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   698  0B4A  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   699                           ; Clear objects allocated to BANK0
   700                           psect cinit,class=CODE,delta=2
   701  0B4B  1383               	bcf	status, 7	;select IRP bank0
   702  0B4C  305B               	movlw	low(__pbssBANK0)
   703  0B4D  0084               	movwf	fsr
   704  0B4E  3063               	movlw	low((__pbssBANK0)+08h)
   705  0B4F  160A  118A  25CF   	fcall	clear_ram
              120A  158A         
   706                           ; Clear objects allocated to BANK1
   707                           psect cinit,class=CODE,delta=2
   708  0B54  30A0               	movlw	low(__pbssBANK1)
   709  0B55  0084               	movwf	fsr
   710  0B56  30CA               	movlw	low((__pbssBANK1)+02Ah)
   711  0B57  160A  118A  25CF   	fcall	clear_ram
              120A  158A         
   712                           global btemp
   713                           psect inittext,class=CODE,delta=2
   714                           global init_fetch,btemp
   715                           ;	Called with low address in FSR and high address in W
   716  162D                     init_fetch:
   717  162D  087E               	movf btemp,w
   718  162E  008A               	movwf pclath
   719  162F  087F               	movf btemp+1,w
   720  1630  0082               	movwf pc
   721                           global init_ram
   722                           ;Called with:
   723                           ;	high address of idata address in btemp 
   724                           ;	low address of idata address in btemp+1 
   725                           ;	low address of data in FSR
   726                           ;	high address + 1 of data in btemp-1
   727  1631                     init_ram:
   728  1631  160A  118A  262D   	fcall init_fetch
              160A  118A         
   729  1636  0080               	movwf indf,f
   730  1637  0A84               	incf fsr,f
   731  1638  0804               	movf fsr,w
   732  1639  067D               	xorwf btemp-1,w
   733  163A  1903               	btfsc status,2
   734  163B  3400               	retlw 0
   735  163C  0AFF               	incf btemp+1,f
   736  163D  1903               	btfsc status,2
   737  163E  0AFE               	incf btemp,f
   738  163F  2E31               	goto init_ram
   739                           ; Initialize objects allocated to BANK3
   740                           psect cinit,class=CODE,delta=2
   741                           global init_ram, __pidataBANK3
   742  0B5C  1783               	bsf	status, 7	;select IRP bank2
   743  0B5D  30E1               	movlw low(__pdataBANK3+81)
   744  0B5E  00FD               	movwf btemp-1,f
   745  0B5F  3007               	movlw high(__pidataBANK3)
   746  0B60  00FE               	movwf btemp,f
   747  0B61  3099               	movlw low(__pidataBANK3)
   748  0B62  00FF               	movwf btemp+1,f
   749  0B63  3090               	movlw low(__pdataBANK3)
   750  0B64  0084               	movwf fsr,f
   751  0B65  160A  118A  2631   	fcall init_ram
              120A  158A         
   752                           ; Initialize objects allocated to BANK1
   753                           psect cinit,class=CODE,delta=2
   754                           global init_ram, __pidataBANK1
   755  0B6A  1383               	bcf	status, 7	;select IRP bank0
   756  0B6B  30E4               	movlw low(__pdataBANK1+26)
   757  0B6C  00FD               	movwf btemp-1,f
   758  0B6D  3016               	movlw high(__pidataBANK1)
   759  0B6E  00FE               	movwf btemp,f
   760  0B6F  306D               	movlw low(__pidataBANK1)
   761  0B70  00FF               	movwf btemp+1,f
   762  0B71  30CA               	movlw low(__pdataBANK1)
   763  0B72  0084               	movwf fsr,f
   764  0B73  160A  118A  2631   	fcall init_ram
              120A  158A         
   765                           ; Initialize objects allocated to BANK0
   766                           psect cinit,class=CODE,delta=2
   767                           global init_ram, __pidataBANK0
   768  0B78  3066               	movlw low(__pdataBANK0+3)
   769  0B79  00FD               	movwf btemp-1,f
   770  0B7A  3015               	movlw high(__pidataBANK0)
   771  0B7B  00FE               	movwf btemp,f
   772  0B7C  30AE               	movlw low(__pidataBANK0)
   773  0B7D  00FF               	movwf btemp+1,f
   774  0B7E  3063               	movlw low(__pdataBANK0)
   775  0B7F  0084               	movwf fsr,f
   776  0B80  160A  118A  2631   	fcall init_ram
              120A  158A         
   777                           psect cinit,class=CODE,delta=2
   778                           global end_of_initialization
   779                           
   780                           ;End of C runtime variable initialization code
   781                           
   782  0B85                     end_of_initialization:
   783  0B85  0183               clrf status
   784  0B86  120A  158A  2E47   ljmp _main	;jump to C main() function
   785                           psect	cstackBANK1,class=BANK1,space=1
   786                           global __pcstackBANK1
   787  00E4                     __pcstackBANK1:
   788                           	global	goParallel@stepsToWall
   789  00E4                     goParallel@stepsToWall:	; 1 bytes @ 0x0
   790  00E4                     	ds	1
   791                           	global	goParallel@shortestDistance
   792  00E5                     goParallel@shortestDistance:	; 2 bytes @ 0x1
   793  00E5                     	ds	2
   794                           	global	goParallel@angleHighByte
   795  00E7                     goParallel@angleHighByte:	; 1 bytes @ 0x3
   796  00E7                     	ds	1
   797                           	global	goParallel@angleLowByte
   798  00E8                     goParallel@angleLowByte:	; 1 bytes @ 0x4
   799  00E8                     	ds	1
   800                           	global	goParallel@distance
   801  00E9                     goParallel@distance:	; 2 bytes @ 0x5
   802  00E9                     	ds	2
   803                           	global	goParallel@step
   804  00EB                     goParallel@step:	; 2 bytes @ 0x7
   805  00EB                     	ds	2
   806                           	global	goParallel@angleParallelToWall
   807  00ED                     goParallel@angleParallelToWall:	; 2 bytes @ 0x9
   808  00ED                     	ds	2
   809                           psect	cstackCOMMON,class=COMMON,space=1
   810                           global __pcstackCOMMON
   811  0072                     __pcstackCOMMON:
   812                           	global	?_ser_putch
   813  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   814                           	global	?_goReverse
   815  0072                     ?_goReverse:	; 0 bytes @ 0x0
   816                           	global	?_turnRight90
   817  0072                     ?_turnRight90:	; 0 bytes @ 0x0
   818                           	global	?_updateOrientation
   819  0072                     ?_updateOrientation:	; 0 bytes @ 0x0
   820                           	global	?_turnLeft90
   821  0072                     ?_turnLeft90:	; 0 bytes @ 0x0
   822                           	global	?_turnAround
   823  0072                     ?_turnAround:	; 0 bytes @ 0x0
   824                           	global	?_initIRobot
   825  0072                     ?_initIRobot:	; 0 bytes @ 0x0
   826                           	global	?_findWall
   827  0072                     ?_findWall:	; 1 bit 
   828                           	global	?_init_adc
   829  0072                     ?_init_adc:	; 0 bytes @ 0x0
   830                           	global	?_lcd_write_control
   831  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   832                           	global	?_lcd_write_data
   833  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   834                           	global	?_lcd_set_cursor
   835  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   836                           	global	?_lcd_write_string
   837  0072                     ?_lcd_write_string:	; 0 bytes @ 0x0
   838                           	global	?_lcd_write_1_digit_bcd
   839  0072                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
   840                           	global	?_lcd_init
   841  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   842                           	global	?_ser_isrx
   843  0072                     ?_ser_isrx:	; 1 bit 
   844                           	global	?_ser_init
   845  0072                     ?_ser_init:	; 0 bytes @ 0x0
   846                           	global	?_play_iCreate_song
   847  0072                     ?_play_iCreate_song:	; 0 bytes @ 0x0
   848                           	global	?_initSongs
   849  0072                     ?_initSongs:	; 0 bytes @ 0x0
   850                           	global	?_getSuccessfulDrive
   851  0072                     ?_getSuccessfulDrive:	; 1 bit 
   852                           	global	?_goBackward
   853  0072                     ?_goBackward:	; 0 bytes @ 0x0
   854                           	global	?_goForward
   855  0072                     ?_goForward:	; 0 bytes @ 0x0
   856                           	global	?_goLeft
   857  0072                     ?_goLeft:	; 0 bytes @ 0x0
   858                           	global	?_goRight
   859  0072                     ?_goRight:	; 0 bytes @ 0x0
   860                           	global	?_isr1
   861  0072                     ?_isr1:	; 0 bytes @ 0x0
   862                           	global	?_init
   863  0072                     ?_init:	; 0 bytes @ 0x0
   864                           	global	?_checkForFinalDestination
   865  0072                     ?_checkForFinalDestination:	; 0 bytes @ 0x0
   866                           	global	?_lookForVictim
   867  0072                     ?_lookForVictim:	; 0 bytes @ 0x0
   868                           	global	?_findWalls
   869  0072                     ?_findWalls:	; 0 bytes @ 0x0
   870                           	global	?_goParallel
   871  0072                     ?_goParallel:	; 0 bytes @ 0x0
   872                           	global	?_goToNextCell
   873  0072                     ?_goToNextCell:	; 0 bytes @ 0x0
   874                           	global	?_updateLocation
   875  0072                     ?_updateLocation:	; 0 bytes @ 0x0
   876                           	global	?_updateNode
   877  0072                     ?_updateNode:	; 0 bytes @ 0x0
   878                           	global	?_checkIfHome
   879  0072                     ?_checkIfHome:	; 0 bytes @ 0x0
   880                           	global	?_main
   881  0072                     ?_main:	; 0 bytes @ 0x0
   882                           	global	?_getCurrentX
   883  0072                     ?_getCurrentX:	; 1 bytes @ 0x0
   884                           	global	?_getCurrentY
   885  0072                     ?_getCurrentY:	; 1 bytes @ 0x0
   886                           	global	?_getFinalX
   887  0072                     ?_getFinalX:	; 1 bytes @ 0x0
   888                           	global	?_getFinalY
   889  0072                     ?_getFinalY:	; 1 bytes @ 0x0
   890                           	global	?_ser_getch
   891  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   892                           	global	?_getOrientation
   893  0072                     ?_getOrientation:	; 1 bytes @ 0x0
   894                           	global	?_getSomethingInTheWay
   895  0072                     ?_getSomethingInTheWay:	; 1 bytes @ 0x0
   896                           	global	?___lwmod
   897  0072                     ?___lwmod:	; 2 bytes @ 0x0
   898                           	global	___lwmod@divisor
   899  0072                     ___lwmod@divisor:	; 2 bytes @ 0x0
   900  0072                     	ds	2
   901                           	global	___lwmod@dividend
   902  0074                     ___lwmod@dividend:	; 2 bytes @ 0x2
   903  0074                     	ds	2
   904                           	global	??___lwmod
   905  0076                     ??___lwmod:	; 0 bytes @ 0x4
   906  0076                     	ds	1
   907                           	global	___lwmod@counter
   908  0077                     ___lwmod@counter:	; 1 bytes @ 0x5
   909  0077                     	ds	1
   910                           psect	cstackBANK0,class=BANK0,space=1
   911                           global __pcstackBANK0
   912  0020                     __pcstackBANK0:
   913                           	global	??_isr1
   914  0020                     ??_isr1:	; 0 bytes @ 0x0
   915  0020                     	ds	10
   916                           	global	??_ser_putch
   917  002A                     ??_ser_putch:	; 0 bytes @ 0xA
   918                           	global	??_updateOrientation
   919  002A                     ??_updateOrientation:	; 0 bytes @ 0xA
   920                           	global	??_getCurrentX
   921  002A                     ??_getCurrentX:	; 0 bytes @ 0xA
   922                           	global	??_getCurrentY
   923  002A                     ??_getCurrentY:	; 0 bytes @ 0xA
   924                           	global	??_init_adc
   925  002A                     ??_init_adc:	; 0 bytes @ 0xA
   926                           	global	??_lcd_write_control
   927  002A                     ??_lcd_write_control:	; 0 bytes @ 0xA
   928                           	global	??_lcd_write_data
   929  002A                     ??_lcd_write_data:	; 0 bytes @ 0xA
   930                           	global	??_getFinalX
   931  002A                     ??_getFinalX:	; 0 bytes @ 0xA
   932                           	global	??_getFinalY
   933  002A                     ??_getFinalY:	; 0 bytes @ 0xA
   934                           	global	??_ser_isrx
   935  002A                     ??_ser_isrx:	; 0 bytes @ 0xA
   936                           	global	??_ser_getch
   937  002A                     ??_ser_getch:	; 0 bytes @ 0xA
   938                           	global	??_ser_init
   939  002A                     ??_ser_init:	; 0 bytes @ 0xA
   940                           	global	?_rotateIR
   941  002A                     ?_rotateIR:	; 0 bytes @ 0xA
   942                           	global	??_getOrientation
   943  002A                     ??_getOrientation:	; 0 bytes @ 0xA
   944                           	global	??_getSomethingInTheWay
   945  002A                     ??_getSomethingInTheWay:	; 0 bytes @ 0xA
   946                           	global	??_getSuccessfulDrive
   947  002A                     ??_getSuccessfulDrive:	; 0 bytes @ 0xA
   948                           	global	??_updateNode
   949  002A                     ??_updateNode:	; 0 bytes @ 0xA
   950                           	global	?___wmul
   951  002A                     ?___wmul:	; 2 bytes @ 0xA
   952                           	global	?___ftpack
   953  002A                     ?___ftpack:	; 3 bytes @ 0xA
   954                           	global	rotateIR@direction
   955  002A                     rotateIR@direction:	; 1 bytes @ 0xA
   956                           	global	___wmul@multiplier
   957  002A                     ___wmul@multiplier:	; 2 bytes @ 0xA
   958                           	global	___ftpack@arg
   959  002A                     ___ftpack@arg:	; 3 bytes @ 0xA
   960  002A                     	ds	1
   961                           	global	??_rotateIR
   962  002B                     ??_rotateIR:	; 0 bytes @ 0xB
   963                           	global	ser_getch@c
   964  002B                     ser_getch@c:	; 1 bytes @ 0xB
   965                           	global	ser_putch@c
   966  002B                     ser_putch@c:	; 1 bytes @ 0xB
   967                           	global	updateOrientation@moved
   968  002B                     updateOrientation@moved:	; 1 bytes @ 0xB
   969  002B                     	ds	1
   970                           	global	?_waitFor
   971  002C                     ?_waitFor:	; 0 bytes @ 0xC
   972                           	global	??_initIRobot
   973  002C                     ??_initIRobot:	; 0 bytes @ 0xC
   974                           	global	?_ser_putArr
   975  002C                     ?_ser_putArr:	; 0 bytes @ 0xC
   976                           	global	??_play_iCreate_song
   977  002C                     ??_play_iCreate_song:	; 0 bytes @ 0xC
   978                           	global	?_drive
   979  002C                     ?_drive:	; 0 bytes @ 0xC
   980                           	global	lcd_write_control@databyte
   981  002C                     lcd_write_control@databyte:	; 1 bytes @ 0xC
   982                           	global	lcd_write_data@databyte
   983  002C                     lcd_write_data@databyte:	; 1 bytes @ 0xC
   984                           	global	play_iCreate_song@song
   985  002C                     play_iCreate_song@song:	; 1 bytes @ 0xC
   986                           	global	drive@lowByteSpeed
   987  002C                     drive@lowByteSpeed:	; 1 bytes @ 0xC
   988                           	global	waitFor@highByte
   989  002C                     waitFor@highByte:	; 1 bytes @ 0xC
   990                           	global	ser_putArr@array
   991  002C                     ser_putArr@array:	; 2 bytes @ 0xC
   992                           	global	___wmul@multiplicand
   993  002C                     ___wmul@multiplicand:	; 2 bytes @ 0xC
   994  002C                     	ds	1
   995                           	global	??_lcd_set_cursor
   996  002D                     ??_lcd_set_cursor:	; 0 bytes @ 0xD
   997                           	global	??_lcd_write_string
   998  002D                     ??_lcd_write_string:	; 0 bytes @ 0xD
   999                           	global	??_lcd_write_1_digit_bcd
  1000  002D                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0xD
  1001                           	global	??_lcd_init
  1002  002D                     ??_lcd_init:	; 0 bytes @ 0xD
  1003                           	global	lcd_set_cursor@address
  1004  002D                     lcd_set_cursor@address:	; 1 bytes @ 0xD
  1005                           	global	lcd_write_1_digit_bcd@data
  1006  002D                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0xD
  1007                           	global	drive@highByteRadius
  1008  002D                     drive@highByteRadius:	; 1 bytes @ 0xD
  1009                           	global	waitFor@lowByte
  1010  002D                     waitFor@lowByte:	; 1 bytes @ 0xD
  1011                           	global	___ftpack@exp
  1012  002D                     ___ftpack@exp:	; 1 bytes @ 0xD
  1013  002D                     	ds	1
  1014                           	global	??_waitFor
  1015  002E                     ??_waitFor:	; 0 bytes @ 0xE
  1016                           	global	?_findFinalDestination
  1017  002E                     ?_findFinalDestination:	; 0 bytes @ 0xE
  1018                           	global	??_checkForFinalDestination
  1019  002E                     ??_checkForFinalDestination:	; 0 bytes @ 0xE
  1020                           	global	??_lookForVictim
  1021  002E                     ??_lookForVictim:	; 0 bytes @ 0xE
  1022                           	global	??_updateLocation
  1023  002E                     ??_updateLocation:	; 0 bytes @ 0xE
  1024                           	global	??___wmul
  1025  002E                     ??___wmul:	; 0 bytes @ 0xE
  1026                           	global	lcd_write_string@s
  1027  002E                     lcd_write_string@s:	; 1 bytes @ 0xE
  1028                           	global	findFinalDestination@virtualWallY
  1029  002E                     findFinalDestination@virtualWallY:	; 1 bytes @ 0xE
  1030                           	global	rotateIR@steps
  1031  002E                     rotateIR@steps:	; 1 bytes @ 0xE
  1032                           	global	drive@lowByteRadius
  1033  002E                     drive@lowByteRadius:	; 1 bytes @ 0xE
  1034                           	global	___ftpack@sign
  1035  002E                     ___ftpack@sign:	; 1 bytes @ 0xE
  1036                           	global	ser_putArr@length
  1037  002E                     ser_putArr@length:	; 2 bytes @ 0xE
  1038                           	global	___wmul@product
  1039  002E                     ___wmul@product:	; 2 bytes @ 0xE
  1040  002E                     	ds	1
  1041                           	global	??___ftpack
  1042  002F                     ??___ftpack:	; 0 bytes @ 0xF
  1043                           	global	??_drive
  1044  002F                     ??_drive:	; 0 bytes @ 0xF
  1045                           	global	findFinalDestination@robotOrientation
  1046  002F                     findFinalDestination@robotOrientation:	; 1 bytes @ 0xF
  1047                           	global	rotateIR@stepNum
  1048  002F                     rotateIR@stepNum:	; 1 bytes @ 0xF
  1049                           	global	lookForVictim@victim
  1050  002F                     lookForVictim@victim:	; 1 bytes @ 0xF
  1051  002F                     	ds	1
  1052                           	global	??_findFinalDestination
  1053  0030                     ??_findFinalDestination:	; 0 bytes @ 0x10
  1054                           	global	??_ser_putArr
  1055  0030                     ??_ser_putArr:	; 0 bytes @ 0x10
  1056                           	global	?___awdiv
  1057  0030                     ?___awdiv:	; 2 bytes @ 0x10
  1058                           	global	___awdiv@divisor
  1059  0030                     ___awdiv@divisor:	; 2 bytes @ 0x10
  1060  0030                     	ds	1
  1061                           	global	findFinalDestination@virtualWallX
  1062  0031                     findFinalDestination@virtualWallX:	; 1 bytes @ 0x11
  1063                           	global	waitFor@type
  1064  0031                     waitFor@type:	; 1 bytes @ 0x11
  1065  0031                     	ds	1
  1066                           	global	?___fttol
  1067  0032                     ?___fttol:	; 4 bytes @ 0x12
  1068                           	global	drive@highByteSpeed
  1069  0032                     drive@highByteSpeed:	; 1 bytes @ 0x12
  1070                           	global	___awdiv@dividend
  1071  0032                     ___awdiv@dividend:	; 2 bytes @ 0x12
  1072                           	global	___fttol@f1
  1073  0032                     ___fttol@f1:	; 3 bytes @ 0x12
  1074  0032                     	ds	1
  1075                           	global	??_goReverse
  1076  0033                     ??_goReverse:	; 0 bytes @ 0x13
  1077                           	global	??_turnRight90
  1078  0033                     ??_turnRight90:	; 0 bytes @ 0x13
  1079                           	global	??_turnLeft90
  1080  0033                     ??_turnLeft90:	; 0 bytes @ 0x13
  1081                           	global	??_turnAround
  1082  0033                     ??_turnAround:	; 0 bytes @ 0x13
  1083                           	global	??_checkIfHome
  1084  0033                     ??_checkIfHome:	; 0 bytes @ 0x13
  1085                           	global	ser_putArr@i
  1086  0033                     ser_putArr@i:	; 2 bytes @ 0x13
  1087  0033                     	ds	1
  1088                           	global	??___awdiv
  1089  0034                     ??___awdiv:	; 0 bytes @ 0x14
  1090  0034                     	ds	1
  1091                           	global	??_initSongs
  1092  0035                     ??_initSongs:	; 0 bytes @ 0x15
  1093                           	global	??_init
  1094  0035                     ??_init:	; 0 bytes @ 0x15
  1095                           	global	___awdiv@counter
  1096  0035                     ___awdiv@counter:	; 1 bytes @ 0x15
  1097  0035                     	ds	1
  1098                           	global	?_driveForDistance
  1099  0036                     ?_driveForDistance:	; 0 bytes @ 0x16
  1100                           	global	??___fttol
  1101  0036                     ??___fttol:	; 0 bytes @ 0x16
  1102                           	global	___awdiv@sign
  1103  0036                     ___awdiv@sign:	; 1 bytes @ 0x16
  1104                           	global	driveForDistance@moveDistance
  1105  0036                     driveForDistance@moveDistance:	; 2 bytes @ 0x16
  1106  0036                     	ds	1
  1107                           	global	___awdiv@quotient
  1108  0037                     ___awdiv@quotient:	; 2 bytes @ 0x17
  1109  0037                     	ds	1
  1110                           	global	??_driveForDistance
  1111  0038                     ??_driveForDistance:	; 0 bytes @ 0x18
  1112  0038                     	ds	1
  1113                           	global	?_adc_read
  1114  0039                     ?_adc_read:	; 2 bytes @ 0x19
  1115  0039                     	ds	1
  1116                           	global	___fttol@sign1
  1117  003A                     ___fttol@sign1:	; 1 bytes @ 0x1A
  1118                           	global	driveForDistance@deltaDistance
  1119  003A                     driveForDistance@deltaDistance:	; 2 bytes @ 0x1A
  1120  003A                     	ds	1
  1121                           	global	??_adc_read
  1122  003B                     ??_adc_read:	; 0 bytes @ 0x1B
  1123                           	global	___fttol@lval
  1124  003B                     ___fttol@lval:	; 4 bytes @ 0x1B
  1125  003B                     	ds	1
  1126                           	global	driveForDistance@distance
  1127  003C                     driveForDistance@distance:	; 2 bytes @ 0x1C
  1128  003C                     	ds	2
  1129                           	global	driveForDistance@high
  1130  003E                     driveForDistance@high:	; 1 bytes @ 0x1E
  1131  003E                     	ds	1
  1132                           	global	driveForDistance@low
  1133  003F                     driveForDistance@low:	; 1 bytes @ 0x1F
  1134                           	global	___fttol@exp1
  1135  003F                     ___fttol@exp1:	; 1 bytes @ 0x1F
  1136                           	global	adc_read@adc_value
  1137  003F                     adc_read@adc_value:	; 2 bytes @ 0x1F
  1138  003F                     	ds	1
  1139                           	global	?___lbtoft
  1140  0040                     ?___lbtoft:	; 3 bytes @ 0x20
  1141                           	global	driveForDistance@virtualWall
  1142  0040                     driveForDistance@virtualWall:	; 1 bytes @ 0x20
  1143  0040                     	ds	1
  1144                           	global	?_convert
  1145  0041                     ?_convert:	; 2 bytes @ 0x21
  1146                           	global	driveForDistance@cliff
  1147  0041                     driveForDistance@cliff:	; 1 bytes @ 0x21
  1148                           	global	convert@adc_value
  1149  0041                     convert@adc_value:	; 2 bytes @ 0x21
  1150  0041                     	ds	1
  1151                           	global	??_goBackward
  1152  0042                     ??_goBackward:	; 0 bytes @ 0x22
  1153                           	global	??_goForward
  1154  0042                     ??_goForward:	; 0 bytes @ 0x22
  1155                           	global	??_goLeft
  1156  0042                     ??_goLeft:	; 0 bytes @ 0x22
  1157                           	global	??_goRight
  1158  0042                     ??_goRight:	; 0 bytes @ 0x22
  1159  0042                     	ds	1
  1160                           	global	??_convert
  1161  0043                     ??_convert:	; 0 bytes @ 0x23
  1162                           	global	??_goToNextCell
  1163  0043                     ??_goToNextCell:	; 0 bytes @ 0x23
  1164                           	global	??___lbtoft
  1165  0043                     ??___lbtoft:	; 0 bytes @ 0x23
  1166  0043                     	ds	2
  1167                           	global	?_adc_read_channel
  1168  0045                     ?_adc_read_channel:	; 2 bytes @ 0x25
  1169  0045                     	ds	2
  1170                           	global	??_adc_read_channel
  1171  0047                     ??_adc_read_channel:	; 0 bytes @ 0x27
  1172                           	global	___lbtoft@c
  1173  0047                     ___lbtoft@c:	; 1 bytes @ 0x27
  1174  0047                     	ds	1
  1175                           	global	?___ftmul
  1176  0048                     ?___ftmul:	; 3 bytes @ 0x28
  1177                           	global	adc_read_channel@channel
  1178  0048                     adc_read_channel@channel:	; 1 bytes @ 0x28
  1179                           	global	___ftmul@f1
  1180  0048                     ___ftmul@f1:	; 3 bytes @ 0x28
  1181  0048                     	ds	1
  1182                           	global	?_readIR
  1183  0049                     ?_readIR:	; 2 bytes @ 0x29
  1184  0049                     	ds	2
  1185                           	global	??_readIR
  1186  004B                     ??_readIR:	; 0 bytes @ 0x2B
  1187                           	global	readIR@cm
  1188  004B                     readIR@cm:	; 2 bytes @ 0x2B
  1189                           	global	___ftmul@f2
  1190  004B                     ___ftmul@f2:	; 3 bytes @ 0x2B
  1191  004B                     	ds	2
  1192                           	global	??_findWall
  1193  004D                     ??_findWall:	; 0 bytes @ 0x2D
  1194                           	global	??_findWalls
  1195  004D                     ??_findWalls:	; 0 bytes @ 0x2D
  1196  004D                     	ds	1
  1197                           	global	??___ftmul
  1198  004E                     ??___ftmul:	; 0 bytes @ 0x2E
  1199  004E                     	ds	4
  1200                           	global	___ftmul@exp
  1201  0052                     ___ftmul@exp:	; 1 bytes @ 0x32
  1202  0052                     	ds	1
  1203                           	global	___ftmul@f3_as_product
  1204  0053                     ___ftmul@f3_as_product:	; 3 bytes @ 0x33
  1205  0053                     	ds	3
  1206                           	global	___ftmul@cntr
  1207  0056                     ___ftmul@cntr:	; 1 bytes @ 0x36
  1208  0056                     	ds	1
  1209                           	global	___ftmul@sign
  1210  0057                     ___ftmul@sign:	; 1 bytes @ 0x37
  1211  0057                     	ds	1
  1212                           	global	??_goParallel
  1213  0058                     ??_goParallel:	; 0 bytes @ 0x38
  1214  0058                     	ds	2
  1215                           	global	??_main
  1216  005A                     ??_main:	; 0 bytes @ 0x3A
  1217  005A                     	ds	1
  1218 ;;Data sizes: Strings 34, constant 0, data 110, bss 54, persistent 0 stack 0
  1219 ;;Auto spaces:   Size  Autos    Used
  1220 ;; COMMON          14      6      12
  1221 ;; BANK0           80     59      70
  1222 ;; BANK1           80     11      79
  1223 ;; BANK3           96      0      81
  1224 ;; BANK2           96      0       0
  1225                           
  1226 ;;
  1227 ;; Pointer list with targets:
  1228                           
  1229 ;; ?___lbtoft	float  size(1) Largest target is 0
  1230 ;;
  1231 ;; ?___ftpack	float  size(1) Largest target is 0
  1232 ;;
  1233 ;; ?___fttol	long  size(1) Largest target is 0
  1234 ;;
  1235 ;; ?___ftmul	float  size(1) Largest target is 0
  1236 ;;
  1237 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1238 ;;
  1239 ;; ?_readIR	int  size(1) Largest target is 0
  1240 ;;
  1241 ;; ?_convert	int  size(1) Largest target is 2
  1242 ;;		 -> convert@adc_value(BANK0[2]), 
  1243 ;;
  1244 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1245 ;;
  1246 ;; ?_adc_read	int  size(1) Largest target is 0
  1247 ;;
  1248 ;; ?___awdiv	int  size(1) Largest target is 0
  1249 ;;
  1250 ;; ?_adc_read_channel	int  size(1) Largest target is 0
  1251 ;;
  1252 ;; ser_putArr@array	PTR unsigned char  size(2) Largest target is 29
  1253 ;;		 -> beep(BANK1[5]), champions(BANK1[21]), lookingForU2(BANK3[29]), superMarioBros(BANK3[25]), 
  1254 ;;		 -> finalCountdown(BANK3[27]), 
  1255 ;;
  1256 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 17
  1257 ;;		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1258 ;;
  1259                           
  1260                           
  1261 ;;
  1262 ;; Critical Paths under _main in COMMON
  1263 ;;
  1264 ;;   None.
  1265 ;;
  1266 ;; Critical Paths under _isr1 in COMMON
  1267 ;;
  1268 ;;   _isr1->___lwmod
  1269 ;;
  1270 ;; Critical Paths under _main in BANK0
  1271 ;;
  1272 ;;   _main->_goParallel
  1273 ;;   _goToNextCell->_goRight
  1274 ;;   _goToNextCell->_goBackward
  1275 ;;   _goRight->_driveForDistance
  1276 ;;   _goLeft->_driveForDistance
  1277 ;;   _goForward->_driveForDistance
  1278 ;;   _goBackward->_driveForDistance
  1279 ;;   _goParallel->___ftmul
  1280 ;;   _findWall->_readIR
  1281 ;;   _driveForDistance->_goReverse
  1282 ;;   _driveForDistance->_turnRight90
  1283 ;;   _driveForDistance->_turnLeft90
  1284 ;;   _updateLocation->_lcd_set_cursor
  1285 ;;   _updateLocation->_lcd_write_1_digit_bcd
  1286 ;;   _lookForVictim->_lcd_set_cursor
  1287 ;;   _checkForFinalDestination->_lcd_set_cursor
  1288 ;;   _goReverse->_drive
  1289 ;;   _readIR->_adc_read_channel
  1290 ;;   _findFinalDestination->_lcd_set_cursor
  1291 ;;   _findFinalDestination->_lcd_write_1_digit_bcd
  1292 ;;   _checkIfHome->_drive
  1293 ;;   _turnAround->_drive
  1294 ;;   _turnLeft90->_drive
  1295 ;;   _turnRight90->_drive
  1296 ;;   _initSongs->_ser_putArr
  1297 ;;   _lcd_init->_lcd_write_control
  1298 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
  1299 ;;   _lcd_write_string->_lcd_write_data
  1300 ;;   _lcd_set_cursor->_lcd_write_control
  1301 ;;   _adc_read_channel->_convert
  1302 ;;   ___lbtoft->___fttol
  1303 ;;   ___ftmul->___lbtoft
  1304 ;;   _initIRobot->_ser_putch
  1305 ;;   _waitFor->_ser_putch
  1306 ;;   _drive->_ser_putch
  1307 ;;   _convert->_adc_read
  1308 ;;   _play_iCreate_song->_ser_putch
  1309 ;;   _ser_putArr->_ser_putch
  1310 ;;   _adc_read->___awdiv
  1311 ;;   ___awdiv->___wmul
  1312 ;;   ___fttol->___ftpack
  1313 ;;
  1314 ;; Critical Paths under _isr1 in BANK0
  1315 ;;
  1316 ;;   None.
  1317 ;;
  1318 ;; Critical Paths under _main in BANK1
  1319 ;;
  1320 ;;   _main->_goParallel
  1321 ;;
  1322 ;; Critical Paths under _isr1 in BANK1
  1323 ;;
  1324 ;;   None.
  1325 ;;
  1326 ;; Critical Paths under _main in BANK3
  1327 ;;
  1328 ;;   None.
  1329 ;;
  1330 ;; Critical Paths under _isr1 in BANK3
  1331 ;;
  1332 ;;   None.
  1333 ;;
  1334 ;; Critical Paths under _main in BANK2
  1335 ;;
  1336 ;;   None.
  1337 ;;
  1338 ;; Critical Paths under _isr1 in BANK2
  1339 ;;
  1340 ;;   None.
  1341                           
  1342 ;;
  1343 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1344 ;;
  1345                           
  1346 ;;
  1347 ;;Call Graph Tables:
  1348 ;;
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (0) _main                                                 1     1      0   16335
  1353 ;;                                             58 BANK0      1     1      0
  1354 ;;                               _init
  1355 ;;                              _drive
  1356 ;;                     _lcd_set_cursor
  1357 ;;                   _lcd_write_string
  1358 ;;           _checkForFinalDestination
  1359 ;;                      _lookForVictim
  1360 ;;                          _findWalls
  1361 ;;                         _goParallel
  1362 ;;                           _rotateIR
  1363 ;;                       _goToNextCell
  1364 ;;                 _getSuccessfulDrive
  1365 ;;                     _updateLocation
  1366 ;;                         _updateNode
  1367 ;;                        _checkIfHome
  1368 ;; ---------------------------------------------------------------------------------
  1369 ;; (1) _goToNextCell                                         0     0      0    9170
  1370 ;;               _getSomethingInTheWay
  1371 ;;                             _goLeft
  1372 ;;                          _goForward
  1373 ;;                            _goRight
  1374 ;;                         _goBackward
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (1) _findWalls                                            1     1      0    1785
  1377 ;;                                             45 BANK0      1     1      0
  1378 ;;                     _lcd_set_cursor
  1379 ;;                           _findWall
  1380 ;;                     _lcd_write_data
  1381 ;;                           _rotateIR
  1382 ;;                  _play_iCreate_song
  1383 ;; ---------------------------------------------------------------------------------
  1384 ;; (2) _goRight                                              1     1      0    2370
  1385 ;;                                             34 BANK0      1     1      0
  1386 ;;                     _lcd_set_cursor
  1387 ;;                     _lcd_write_data
  1388 ;;                        _turnRight90
  1389 ;;                  _updateOrientation
  1390 ;;                   _driveForDistance
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (2) _goLeft                                               0     0      0    2370
  1393 ;;                     _lcd_set_cursor
  1394 ;;                     _lcd_write_data
  1395 ;;                         _turnLeft90
  1396 ;;                  _updateOrientation
  1397 ;;                   _driveForDistance
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; (2) _goForward                                            0     0      0    2060
  1400 ;;                     _lcd_set_cursor
  1401 ;;                     _lcd_write_data
  1402 ;;                   _driveForDistance
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (2) _goBackward                                           1     1      0    2370
  1405 ;;                                             34 BANK0      1     1      0
  1406 ;;                     _lcd_set_cursor
  1407 ;;                     _lcd_write_data
  1408 ;;                         _turnAround
  1409 ;;                  _updateOrientation
  1410 ;;                   _driveForDistance
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (1) _goParallel                                          13    13      0    3952
  1413 ;;                                             56 BANK0      2     2      0
  1414 ;;                                              0 BANK1     11    11      0
  1415 ;;                             _readIR
  1416 ;;                           _rotateIR
  1417 ;;                  _play_iCreate_song
  1418 ;;                           ___lbtoft
  1419 ;;                            ___ftmul
  1420 ;;                            ___fttol
  1421 ;;                              _drive
  1422 ;;                            _waitFor
  1423 ;; ---------------------------------------------------------------------------------
  1424 ;; (2) _findWall                                             0     0      0    1528
  1425 ;;                             _readIR
  1426 ;; ---------------------------------------------------------------------------------
  1427 ;; (3) _driveForDistance                                    12    10      2    1964
  1428 ;;                                             22 BANK0     12    10      2
  1429 ;;                              _drive
  1430 ;;                          _ser_putch
  1431 ;;                          _ser_getch
  1432 ;;                          _goReverse
  1433 ;;                        _turnRight90
  1434 ;;                  _updateOrientation
  1435 ;;                         _turnLeft90
  1436 ;;                        _getCurrentY
  1437 ;;                        _getCurrentX
  1438 ;;               _findFinalDestination
  1439 ;; ---------------------------------------------------------------------------------
  1440 ;; (1) _updateLocation                                       1     1      0     158
  1441 ;;                                             14 BANK0      1     1      0
  1442 ;;                     _lcd_set_cursor
  1443 ;;                     _lcd_write_data
  1444 ;;                     _getOrientation
  1445 ;;              _lcd_write_1_digit_bcd
  1446 ;; ---------------------------------------------------------------------------------
  1447 ;; (1) _lookForVictim                                        2     2      0     257
  1448 ;;                                             14 BANK0      2     2      0
  1449 ;;                          _ser_putch
  1450 ;;                          _ser_getch
  1451 ;;                  _play_iCreate_song
  1452 ;;                     _lcd_set_cursor
  1453 ;;                     _lcd_write_data
  1454 ;; ---------------------------------------------------------------------------------
  1455 ;; (1) _checkForFinalDestination                             0     0      0     158
  1456 ;;                          _getFinalX
  1457 ;;                          _getFinalY
  1458 ;;                  _play_iCreate_song
  1459 ;;                     _lcd_set_cursor
  1460 ;;                     _lcd_write_data
  1461 ;; ---------------------------------------------------------------------------------
  1462 ;; (1) _init                                                 0     0      0     223
  1463 ;;                           _init_adc
  1464 ;;                           _lcd_init
  1465 ;;                           _ser_init
  1466 ;;                         _initIRobot
  1467 ;;                          _initSongs
  1468 ;; ---------------------------------------------------------------------------------
  1469 ;; (4) _goReverse                                            3     3      0     375
  1470 ;;                                             19 BANK0      3     3      0
  1471 ;;                     _lcd_set_cursor
  1472 ;;                     _lcd_write_data
  1473 ;;                              _drive
  1474 ;;                            _waitFor
  1475 ;; ---------------------------------------------------------------------------------
  1476 ;; (2) _readIR                                               4     2      2    1528
  1477 ;;                                             41 BANK0      4     2      2
  1478 ;;                   _adc_read_channel
  1479 ;;                            _convert
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (4) _findFinalDestination                                 4     2      2     406
  1482 ;;                                             14 BANK0      4     2      2
  1483 ;;                     _lcd_set_cursor
  1484 ;;              _lcd_write_1_digit_bcd
  1485 ;;                        _getCurrentY (ARG)
  1486 ;;                        _getCurrentX (ARG)
  1487 ;; ---------------------------------------------------------------------------------
  1488 ;; (1) _checkIfHome                                          0     0      0     217
  1489 ;;                              _drive
  1490 ;;                  _play_iCreate_song
  1491 ;; ---------------------------------------------------------------------------------
  1492 ;; (3) _turnAround                                           3     3      0     279
  1493 ;;                                             19 BANK0      3     3      0
  1494 ;;                              _drive
  1495 ;;                            _waitFor
  1496 ;; ---------------------------------------------------------------------------------
  1497 ;; (4) _turnLeft90                                           3     3      0     279
  1498 ;;                                             19 BANK0      3     3      0
  1499 ;;                              _drive
  1500 ;;                            _waitFor
  1501 ;; ---------------------------------------------------------------------------------
  1502 ;; (4) _turnRight90                                          3     3      0     279
  1503 ;;                                             19 BANK0      3     3      0
  1504 ;;                              _drive
  1505 ;;                            _waitFor
  1506 ;; ---------------------------------------------------------------------------------
  1507 ;; (2) _initSongs                                            0     0      0     161
  1508 ;;                         _ser_putArr
  1509 ;; ---------------------------------------------------------------------------------
  1510 ;; (2) _lcd_init                                             0     0      0      31
  1511 ;;                  _lcd_write_control
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (2) _lcd_write_1_digit_bcd                                1     1      0      62
  1514 ;;                                             13 BANK0      1     1      0
  1515 ;;                     _lcd_write_data
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (1) _lcd_write_string                                     2     2      0      96
  1518 ;;                                             13 BANK0      2     2      0
  1519 ;;                     _lcd_write_data
  1520 ;; ---------------------------------------------------------------------------------
  1521 ;; (2) _lcd_set_cursor                                       1     1      0      65
  1522 ;;                                             13 BANK0      1     1      0
  1523 ;;                  _lcd_write_control
  1524 ;; ---------------------------------------------------------------------------------
  1525 ;; (3) _adc_read_channel                                     4     2      2     510
  1526 ;;                                             37 BANK0      4     2      2
  1527 ;;                           _adc_read
  1528 ;;                            _convert (ARG)
  1529 ;; ---------------------------------------------------------------------------------
  1530 ;; (2) ___lbtoft                                             8     5      3     343
  1531 ;;                                             32 BANK0      8     5      3
  1532 ;;                           ___ftpack
  1533 ;;                            ___fttol (ARG)
  1534 ;; ---------------------------------------------------------------------------------
  1535 ;; (2) ___ftmul                                             16    10      6     800
  1536 ;;                                             40 BANK0     16    10      6
  1537 ;;                           ___ftpack
  1538 ;;                           ___lbtoft (ARG)
  1539 ;;                            ___fttol (ARG)
  1540 ;; ---------------------------------------------------------------------------------
  1541 ;; (2) _initIRobot                                           3     3      0      31
  1542 ;;                                             12 BANK0      3     3      0
  1543 ;;                          _ser_putch
  1544 ;; ---------------------------------------------------------------------------------
  1545 ;; (5) _waitFor                                              6     4      2     124
  1546 ;;                                             12 BANK0      6     4      2
  1547 ;;                          _ser_putch
  1548 ;; ---------------------------------------------------------------------------------
  1549 ;; (2) _drive                                                7     4      3     155
  1550 ;;                                             12 BANK0      7     4      3
  1551 ;;                          _ser_putch
  1552 ;; ---------------------------------------------------------------------------------
  1553 ;; (1) _rotateIR                                             6     5      1      99
  1554 ;;                                             10 BANK0      6     5      1
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (3) _convert                                              4     2      2     984
  1557 ;;                                             33 BANK0      4     2      2
  1558 ;;                             ___wmul
  1559 ;;                            ___awdiv
  1560 ;;                           _adc_read (ARG)
  1561 ;; ---------------------------------------------------------------------------------
  1562 ;; (2) _play_iCreate_song                                    1     1      0      62
  1563 ;;                                             12 BANK0      1     1      0
  1564 ;;                          _ser_putch
  1565 ;; ---------------------------------------------------------------------------------
  1566 ;; (3) _ser_putArr                                           9     5      4     161
  1567 ;;                                             12 BANK0      9     5      4
  1568 ;;                          _ser_putch
  1569 ;; ---------------------------------------------------------------------------------
  1570 ;; (4) _ser_getch                                            2     2      0      34
  1571 ;;                                             10 BANK0      2     2      0
  1572 ;;                           _ser_isrx
  1573 ;; ---------------------------------------------------------------------------------
  1574 ;; (3) _lcd_write_data                                       3     3      0      31
  1575 ;;                                             10 BANK0      3     3      0
  1576 ;; ---------------------------------------------------------------------------------
  1577 ;; (3) _lcd_write_control                                    3     3      0      31
  1578 ;;                                             10 BANK0      3     3      0
  1579 ;; ---------------------------------------------------------------------------------
  1580 ;; (2) _init_adc                                             1     1      0       0
  1581 ;;                                             10 BANK0      1     1      0
  1582 ;; ---------------------------------------------------------------------------------
  1583 ;; (4) _adc_read                                             8     6      2     479
  1584 ;;                                             25 BANK0      8     6      2
  1585 ;;                            ___awdiv
  1586 ;; ---------------------------------------------------------------------------------
  1587 ;; (4) ___awdiv                                              9     5      4     445
  1588 ;;                                             16 BANK0      9     5      4
  1589 ;;                             ___wmul (ARG)
  1590 ;; ---------------------------------------------------------------------------------
  1591 ;; (2) ___fttol                                             14    10      4     371
  1592 ;;                                             18 BANK0     14    10      4
  1593 ;;                           ___ftpack (ARG)
  1594 ;; ---------------------------------------------------------------------------------
  1595 ;; (3) ___ftpack                                             8     3      5     312
  1596 ;;                                             10 BANK0      8     3      5
  1597 ;; ---------------------------------------------------------------------------------
  1598 ;; (4) ___wmul                                               6     2      4     136
  1599 ;;                                             10 BANK0      6     2      4
  1600 ;; ---------------------------------------------------------------------------------
  1601 ;; (1) _updateNode                                           1     1      0       0
  1602 ;;                                             10 BANK0      1     1      0
  1603 ;; ---------------------------------------------------------------------------------
  1604 ;; (1) _getSuccessfulDrive                                   0     0      0       0
  1605 ;; ---------------------------------------------------------------------------------
  1606 ;; (2) _getSomethingInTheWay                                 0     0      0       0
  1607 ;; ---------------------------------------------------------------------------------
  1608 ;; (2) _getOrientation                                       0     0      0       0
  1609 ;; ---------------------------------------------------------------------------------
  1610 ;; (4) _getCurrentY                                          0     0      0       0
  1611 ;; ---------------------------------------------------------------------------------
  1612 ;; (4) _getCurrentX                                          0     0      0       0
  1613 ;; ---------------------------------------------------------------------------------
  1614 ;; (4) _updateOrientation                                    2     2      0      31
  1615 ;;                                             10 BANK0      2     2      0
  1616 ;; ---------------------------------------------------------------------------------
  1617 ;; (2) _ser_init                                             1     1      0       0
  1618 ;;                                             10 BANK0      1     1      0
  1619 ;; ---------------------------------------------------------------------------------
  1620 ;; (3) _ser_putch                                            2     2      0      31
  1621 ;;                                             10 BANK0      2     2      0
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (5) _ser_isrx                                             0     0      0       0
  1624 ;; ---------------------------------------------------------------------------------
  1625 ;; (2) _getFinalY                                            0     0      0       0
  1626 ;; ---------------------------------------------------------------------------------
  1627 ;; (2) _getFinalX                                            0     0      0       0
  1628 ;; ---------------------------------------------------------------------------------
  1629 ;; Estimated maximum stack depth 5
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1632 ;; ---------------------------------------------------------------------------------
  1633 ;; (7) _isr1                                                10    10      0     159
  1634 ;;                                              0 BANK0     10    10      0
  1635 ;;                            ___lwmod
  1636 ;; ---------------------------------------------------------------------------------
  1637 ;; (8) ___lwmod                                              6     2      4     159
  1638 ;;                                              0 COMMON     6     2      4
  1639 ;; ---------------------------------------------------------------------------------
  1640 ;; Estimated maximum stack depth 8
  1641 ;; ---------------------------------------------------------------------------------
  1642                           
  1643 ;; Call Graph Graphs:
  1644                           
  1645 ;; _main (ROOT)
  1646 ;;   _init
  1647 ;;     _init_adc
  1648 ;;     _lcd_init
  1649 ;;       _lcd_write_control
  1650 ;;     _ser_init
  1651 ;;     _initIRobot
  1652 ;;       _ser_putch
  1653 ;;     _initSongs
  1654 ;;       _ser_putArr
  1655 ;;         _ser_putch
  1656 ;;   _drive
  1657 ;;     _ser_putch
  1658 ;;   _lcd_set_cursor
  1659 ;;     _lcd_write_control
  1660 ;;   _lcd_write_string
  1661 ;;     _lcd_write_data
  1662 ;;   _checkForFinalDestination
  1663 ;;     _getFinalX
  1664 ;;     _getFinalY
  1665 ;;     _play_iCreate_song
  1666 ;;       _ser_putch
  1667 ;;     _lcd_set_cursor
  1668 ;;       _lcd_write_control
  1669 ;;     _lcd_write_data
  1670 ;;   _lookForVictim
  1671 ;;     _ser_putch
  1672 ;;     _ser_getch
  1673 ;;       _ser_isrx
  1674 ;;     _play_iCreate_song
  1675 ;;       _ser_putch
  1676 ;;     _lcd_set_cursor
  1677 ;;       _lcd_write_control
  1678 ;;     _lcd_write_data
  1679 ;;   _findWalls
  1680 ;;     _lcd_set_cursor
  1681 ;;       _lcd_write_control
  1682 ;;     _findWall
  1683 ;;       _readIR
  1684 ;;         _adc_read_channel
  1685 ;;           _adc_read
  1686 ;;             ___awdiv
  1687 ;;               ___wmul (ARG)
  1688 ;;           _convert (ARG)
  1689 ;;             ___wmul
  1690 ;;             ___awdiv
  1691 ;;               ___wmul (ARG)
  1692 ;;             _adc_read (ARG)
  1693 ;;               ___awdiv
  1694 ;;                 ___wmul (ARG)
  1695 ;;         _convert
  1696 ;;           ___wmul
  1697 ;;           ___awdiv
  1698 ;;             ___wmul (ARG)
  1699 ;;           _adc_read (ARG)
  1700 ;;             ___awdiv
  1701 ;;               ___wmul (ARG)
  1702 ;;     _lcd_write_data
  1703 ;;     _rotateIR
  1704 ;;     _play_iCreate_song
  1705 ;;       _ser_putch
  1706 ;;   _goParallel
  1707 ;;     _readIR
  1708 ;;       _adc_read_channel
  1709 ;;         _adc_read
  1710 ;;           ___awdiv
  1711 ;;             ___wmul (ARG)
  1712 ;;         _convert (ARG)
  1713 ;;           ___wmul
  1714 ;;           ___awdiv
  1715 ;;             ___wmul (ARG)
  1716 ;;           _adc_read (ARG)
  1717 ;;             ___awdiv
  1718 ;;               ___wmul (ARG)
  1719 ;;       _convert
  1720 ;;         ___wmul
  1721 ;;         ___awdiv
  1722 ;;           ___wmul (ARG)
  1723 ;;         _adc_read (ARG)
  1724 ;;           ___awdiv
  1725 ;;             ___wmul (ARG)
  1726 ;;     _rotateIR
  1727 ;;     _play_iCreate_song
  1728 ;;       _ser_putch
  1729 ;;     ___lbtoft
  1730 ;;       ___ftpack
  1731 ;;       ___fttol (ARG)
  1732 ;;         ___ftpack (ARG)
  1733 ;;     ___ftmul
  1734 ;;       ___ftpack
  1735 ;;       ___lbtoft (ARG)
  1736 ;;         ___ftpack
  1737 ;;         ___fttol (ARG)
  1738 ;;           ___ftpack (ARG)
  1739 ;;       ___fttol (ARG)
  1740 ;;         ___ftpack (ARG)
  1741 ;;     ___fttol
  1742 ;;       ___ftpack (ARG)
  1743 ;;     _drive
  1744 ;;       _ser_putch
  1745 ;;     _waitFor
  1746 ;;       _ser_putch
  1747 ;;   _rotateIR
  1748 ;;   _goToNextCell
  1749 ;;     _getSomethingInTheWay
  1750 ;;     _goLeft
  1751 ;;       _lcd_set_cursor
  1752 ;;         _lcd_write_control
  1753 ;;       _lcd_write_data
  1754 ;;       _turnLeft90
  1755 ;;         _drive
  1756 ;;           _ser_putch
  1757 ;;         _waitFor
  1758 ;;           _ser_putch
  1759 ;;       _updateOrientation
  1760 ;;       _driveForDistance
  1761 ;;         _drive
  1762 ;;           _ser_putch
  1763 ;;         _ser_putch
  1764 ;;         _ser_getch
  1765 ;;           _ser_isrx
  1766 ;;         _goReverse
  1767 ;;           _lcd_set_cursor
  1768 ;;             _lcd_write_control
  1769 ;;           _lcd_write_data
  1770 ;;           _drive
  1771 ;;             _ser_putch
  1772 ;;           _waitFor
  1773 ;;             _ser_putch
  1774 ;;         _turnRight90
  1775 ;;           _drive
  1776 ;;             _ser_putch
  1777 ;;           _waitFor
  1778 ;;             _ser_putch
  1779 ;;         _updateOrientation
  1780 ;;         _turnLeft90
  1781 ;;           _drive
  1782 ;;             _ser_putch
  1783 ;;           _waitFor
  1784 ;;             _ser_putch
  1785 ;;         _getCurrentY
  1786 ;;         _getCurrentX
  1787 ;;         _findFinalDestination
  1788 ;;           _lcd_set_cursor
  1789 ;;             _lcd_write_control
  1790 ;;           _lcd_write_1_digit_bcd
  1791 ;;             _lcd_write_data
  1792 ;;           _getCurrentY (ARG)
  1793 ;;           _getCurrentX (ARG)
  1794 ;;     _goForward
  1795 ;;       _lcd_set_cursor
  1796 ;;         _lcd_write_control
  1797 ;;       _lcd_write_data
  1798 ;;       _driveForDistance
  1799 ;;         _drive
  1800 ;;           _ser_putch
  1801 ;;         _ser_putch
  1802 ;;         _ser_getch
  1803 ;;           _ser_isrx
  1804 ;;         _goReverse
  1805 ;;           _lcd_set_cursor
  1806 ;;             _lcd_write_control
  1807 ;;           _lcd_write_data
  1808 ;;           _drive
  1809 ;;             _ser_putch
  1810 ;;           _waitFor
  1811 ;;             _ser_putch
  1812 ;;         _turnRight90
  1813 ;;           _drive
  1814 ;;             _ser_putch
  1815 ;;           _waitFor
  1816 ;;             _ser_putch
  1817 ;;         _updateOrientation
  1818 ;;         _turnLeft90
  1819 ;;           _drive
  1820 ;;             _ser_putch
  1821 ;;           _waitFor
  1822 ;;             _ser_putch
  1823 ;;         _getCurrentY
  1824 ;;         _getCurrentX
  1825 ;;         _findFinalDestination
  1826 ;;           _lcd_set_cursor
  1827 ;;             _lcd_write_control
  1828 ;;           _lcd_write_1_digit_bcd
  1829 ;;             _lcd_write_data
  1830 ;;           _getCurrentY (ARG)
  1831 ;;           _getCurrentX (ARG)
  1832 ;;     _goRight
  1833 ;;       _lcd_set_cursor
  1834 ;;         _lcd_write_control
  1835 ;;       _lcd_write_data
  1836 ;;       _turnRight90
  1837 ;;         _drive
  1838 ;;           _ser_putch
  1839 ;;         _waitFor
  1840 ;;           _ser_putch
  1841 ;;       _updateOrientation
  1842 ;;       _driveForDistance
  1843 ;;         _drive
  1844 ;;           _ser_putch
  1845 ;;         _ser_putch
  1846 ;;         _ser_getch
  1847 ;;           _ser_isrx
  1848 ;;         _goReverse
  1849 ;;           _lcd_set_cursor
  1850 ;;             _lcd_write_control
  1851 ;;           _lcd_write_data
  1852 ;;           _drive
  1853 ;;             _ser_putch
  1854 ;;           _waitFor
  1855 ;;             _ser_putch
  1856 ;;         _turnRight90
  1857 ;;           _drive
  1858 ;;             _ser_putch
  1859 ;;           _waitFor
  1860 ;;             _ser_putch
  1861 ;;         _updateOrientation
  1862 ;;         _turnLeft90
  1863 ;;           _drive
  1864 ;;             _ser_putch
  1865 ;;           _waitFor
  1866 ;;             _ser_putch
  1867 ;;         _getCurrentY
  1868 ;;         _getCurrentX
  1869 ;;         _findFinalDestination
  1870 ;;           _lcd_set_cursor
  1871 ;;             _lcd_write_control
  1872 ;;           _lcd_write_1_digit_bcd
  1873 ;;             _lcd_write_data
  1874 ;;           _getCurrentY (ARG)
  1875 ;;           _getCurrentX (ARG)
  1876 ;;     _goBackward
  1877 ;;       _lcd_set_cursor
  1878 ;;         _lcd_write_control
  1879 ;;       _lcd_write_data
  1880 ;;       _turnAround
  1881 ;;         _drive
  1882 ;;           _ser_putch
  1883 ;;         _waitFor
  1884 ;;           _ser_putch
  1885 ;;       _updateOrientation
  1886 ;;       _driveForDistance
  1887 ;;         _drive
  1888 ;;           _ser_putch
  1889 ;;         _ser_putch
  1890 ;;         _ser_getch
  1891 ;;           _ser_isrx
  1892 ;;         _goReverse
  1893 ;;           _lcd_set_cursor
  1894 ;;             _lcd_write_control
  1895 ;;           _lcd_write_data
  1896 ;;           _drive
  1897 ;;             _ser_putch
  1898 ;;           _waitFor
  1899 ;;             _ser_putch
  1900 ;;         _turnRight90
  1901 ;;           _drive
  1902 ;;             _ser_putch
  1903 ;;           _waitFor
  1904 ;;             _ser_putch
  1905 ;;         _updateOrientation
  1906 ;;         _turnLeft90
  1907 ;;           _drive
  1908 ;;             _ser_putch
  1909 ;;           _waitFor
  1910 ;;             _ser_putch
  1911 ;;         _getCurrentY
  1912 ;;         _getCurrentX
  1913 ;;         _findFinalDestination
  1914 ;;           _lcd_set_cursor
  1915 ;;             _lcd_write_control
  1916 ;;           _lcd_write_1_digit_bcd
  1917 ;;             _lcd_write_data
  1918 ;;           _getCurrentY (ARG)
  1919 ;;           _getCurrentX (ARG)
  1920 ;;   _getSuccessfulDrive
  1921 ;;   _updateLocation
  1922 ;;     _lcd_set_cursor
  1923 ;;       _lcd_write_control
  1924 ;;     _lcd_write_data
  1925 ;;     _getOrientation
  1926 ;;     _lcd_write_1_digit_bcd
  1927 ;;       _lcd_write_data
  1928 ;;   _updateNode
  1929 ;;   _checkIfHome
  1930 ;;     _drive
  1931 ;;       _ser_putch
  1932 ;;     _play_iCreate_song
  1933 ;;       _ser_putch
  1934 ;;
  1935 ;; _isr1 (ROOT)
  1936 ;;   ___lwmod
  1937 ;;
  1938                           
  1939 ;; Address spaces:
  1940                           
  1941 ;;Name               Size   Autos  Total    Cost      Usage
  1942 ;;BANK3               60      0      51       9       84.4%
  1943 ;;BITBANK3            60      0       0       8        0.0%
  1944 ;;SFR3                 0      0       0       4        0.0%
  1945 ;;BITSFR3              0      0       0       4        0.0%
  1946 ;;BANK2               60      0       0      11        0.0%
  1947 ;;BITBANK2            60      0       0      10        0.0%
  1948 ;;SFR2                 0      0       0       5        0.0%
  1949 ;;BITSFR2              0      0       0       5        0.0%
  1950 ;;SFR1                 0      0       0       2        0.0%
  1951 ;;BITSFR1              0      0       0       2        0.0%
  1952 ;;BANK1               50      B      4F       7       98.8%
  1953 ;;BITBANK1            50      0       0       6        0.0%
  1954 ;;CODE                 0      0       0       0        0.0%
  1955 ;;DATA                 0      0      FC      12        0.0%
  1956 ;;ABS                  0      0      F2       3        0.0%
  1957 ;;NULL                 0      0       0       0        0.0%
  1958 ;;STACK                0      0       A       2        0.0%
  1959 ;;BANK0               50     3B      46       5       87.5%
  1960 ;;BITBANK0            50      0       0       4        0.0%
  1961 ;;SFR0                 0      0       0       1        0.0%
  1962 ;;BITSFR0              0      0       0       1        0.0%
  1963 ;;COMMON               E      6       C       1       85.7%
  1964 ;;BITCOMMON            E      0       2       0       14.3%
  1965 ;;EEDATA             100      0       0       0        0.0%
  1966                           
  1967                           	global	_main
  1968                           psect	maintext,global,class=CODE,delta=2
  1969                           global __pmaintext
  1970  0E47                     __pmaintext:
  1971                           
  1972 ;; *************** function _main *****************
  1973 ;; Defined at:
  1974 ;;		line 339 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;		None               void
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 17F/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0
  1990 ;;      Temps:          0       1       0       0       0
  1991 ;;      Totals:         0       1       0       0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels required when called:    8
  1994 ;; This function calls:
  1995 ;;		_init
  1996 ;;		_drive
  1997 ;;		_lcd_set_cursor
  1998 ;;		_lcd_write_string
  1999 ;;		_checkForFinalDestination
  2000 ;;		_lookForVictim
  2001 ;;		_findWalls
  2002 ;;		_goParallel
  2003 ;;		_rotateIR
  2004 ;;		_goToNextCell
  2005 ;;		_getSuccessfulDrive
  2006 ;;		_updateLocation
  2007 ;;		_updateNode
  2008 ;;		_checkIfHome
  2009 ;; This function is called by:
  2010 ;;		Startup code after reset
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           psect	maintext
  2014                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  2015                           	line	339
  2016                           	global	__size_of_main
  2017  0082                     	__size_of_main	equ	__end_of_main-_main
  2018                           	
  2019  0E47                     _main:	
  2020                           	opt	stack 0
  2021                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2022                           	line	340
  2023                           	
  2024  0E47                     l11941:	
  2025                           ;main.c: 340: init();
  2026  0E47  120A  158A  2124   	fcall	_init
              120A  158A         
  2027                           	line	341
  2028                           ;main.c: 341: drive(0, 0, 0, 0);
  2029  0E4C  1283               	bcf	status, 5	;RP0=0, select bank0
  2030  0E4D  1303               	bcf	status, 6	;RP1=0, select bank0
  2031  0E4E  01AC               	clrf	(?_drive)
  2032  0E4F  01AD               	clrf	0+(?_drive)+01h
  2033  0E50  01AE               	clrf	0+(?_drive)+02h
  2034  0E51  3000               	movlw	(0)
  2035  0E52  120A  158A  215A   	fcall	_drive
              120A  158A         
  2036                           	line	343
  2037                           	
  2038  0E57                     l11943:	
  2039                           ;main.c: 343: lcd_set_cursor(0x00);
  2040  0E57  3000               	movlw	(0)
  2041  0E58  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  2042                           	line	344
  2043                           	
  2044  0E5D                     l11945:	
  2045                           ;main.c: 344: lcd_write_string("(-,-) E -- --- -");
  2046  0E5D  3001               	movlw	((STR_1-__stringbase))&0ffh
  2047  0E5E  160A  118A  2766   	fcall	_lcd_write_string
              120A  158A         
  2048                           	line	345
  2049                           ;main.c: 345: lcd_set_cursor(0x40);
  2050  0E63  3040               	movlw	(040h)
  2051  0E64  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  2052                           	line	346
  2053                           	
  2054  0E69                     l11947:	
  2055                           ;main.c: 346: lcd_write_string("- - - (0,0) GREG");
  2056  0E69  3012               	movlw	((STR_2-__stringbase))&0ffh
  2057  0E6A  160A  118A  2766   	fcall	_lcd_write_string
              120A  158A         
  2058                           	line	350
  2059                           ;main.c: 350: while(!home)
  2060  0E6F  2EC1               	goto	l11973
  2061                           	
  2062  0E70                     l6023:	
  2063                           	line	353
  2064                           	
  2065  0E70                     l11949:	
  2066                           ;main.c: 351: {
  2067                           ;main.c: 353: if(start.pressed)
  2068  0E70  1683               	bsf	status, 5	;RP0=1, select bank1
  2069  0E71  1303               	bcf	status, 6	;RP1=0, select bank1
  2070  0E72  0840               	movf	(_start)^080h,w
  2071  0E73  1D03               	skipz
  2072  0E74  2E76               	goto	u6780
  2073  0E75  2EC1               	goto	l11973
  2074  0E76                     u6780:
  2075                           	line	355
  2076                           	
  2077  0E76                     l11951:	
  2078                           ;main.c: 354: {
  2079                           ;main.c: 355: checkForFinalDestination();
  2080  0E76  120A  158A  20C0   	fcall	_checkForFinalDestination
              120A  158A         
  2081                           	line	356
  2082                           ;main.c: 356: lookForVictim();
  2083  0E7B  120A  158A  20F1   	fcall	_lookForVictim
              120A  158A         
  2084                           	line	357
  2085                           	
  2086  0E80                     l11953:	
  2087                           ;main.c: 357: findWalls();
  2088  0E80  120A  158A  26C9   	fcall	_findWalls
              120A  158A         
  2089                           	line	358
  2090                           	
  2091  0E85                     l11955:	
  2092                           ;main.c: 358: if(leftWall)
  2093  0E85  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2094  0E86  2E88               	goto	u6791
  2095  0E87  2E89               	goto	u6790
  2096  0E88                     u6791:
  2097  0E88  2E8F               	goto	l11959
  2098  0E89                     u6790:
  2099                           	line	359
  2100                           	
  2101  0E89                     l11957:	
  2102                           ;main.c: 359: goParallel();
  2103  0E89  120A  118A  238F   	fcall	_goParallel
              120A  158A         
  2104  0E8E  2E9C               	goto	l11961
  2105                           	line	360
  2106                           	
  2107  0E8F                     l6025:	
  2108                           	line	361
  2109                           	
  2110  0E8F                     l11959:	
  2111                           ;main.c: 360: else
  2112                           ;main.c: 361: rotateIR(12, 0b00001101);
  2113  0E8F  300D               	movlw	(0Dh)
  2114  0E90  1283               	bcf	status, 5	;RP0=0, select bank0
  2115  0E91  1303               	bcf	status, 6	;RP1=0, select bank0
  2116  0E92  00DA               	movwf	(??_main+0)+0
  2117  0E93  085A               	movf	(??_main+0)+0,w
  2118  0E94  00AA               	movwf	(?_rotateIR)
  2119  0E95  300C               	movlw	(0Ch)
  2120  0E96  120A  158A  2413   	fcall	_rotateIR
              120A  158A         
  2121  0E9B  2E9C               	goto	l11961
  2122                           	
  2123  0E9C                     l6026:	
  2124                           	line	365
  2125                           	
  2126  0E9C                     l11961:	
  2127                           ;main.c: 365: goToNextCell();
  2128  0E9C  120A  158A  23CE   	fcall	_goToNextCell
              120A  158A         
  2129                           	line	380
  2130                           	
  2131  0EA1                     l11963:	
  2132                           ;main.c: 380: if(getSuccessfulDrive())
  2133  0EA1  160A  118A  25D7   	fcall	_getSuccessfulDrive
              120A  158A         
  2134  0EA6  1C03               	btfss	status,0
  2135  0EA7  2EA9               	goto	u6801
  2136  0EA8  2EAA               	goto	u6800
  2137  0EA9                     u6801:
  2138  0EA9  2EC1               	goto	l11973
  2139  0EAA                     u6800:
  2140                           	line	382
  2141                           	
  2142  0EAA                     l11965:	
  2143                           ;main.c: 381: {
  2144                           ;main.c: 382: updateLocation();
  2145  0EAA  120A  158A  24EC   	fcall	_updateLocation
              120A  158A         
  2146                           	line	383
  2147                           	
  2148  0EAF                     l11967:	
  2149                           ;main.c: 383: updateNode();
  2150  0EAF  120A  158A  22BF   	fcall	_updateNode
              120A  158A         
  2151                           	line	384
  2152                           	
  2153  0EB4                     l11969:	
  2154                           ;main.c: 384: if(goingHome)
  2155  0EB4  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  2156  0EB5  2EB7               	goto	u6811
  2157  0EB6  2EB8               	goto	u6810
  2158  0EB7                     u6811:
  2159  0EB7  2EC1               	goto	l11973
  2160  0EB8                     u6810:
  2161                           	line	385
  2162                           	
  2163  0EB8                     l11971:	
  2164                           ;main.c: 385: checkIfHome();
  2165  0EB8  160A  118A  26BF   	fcall	_checkIfHome
              120A  158A         
  2166  0EBD  2EC1               	goto	l11973
  2167                           	
  2168  0EBE                     l6028:	
  2169  0EBE  2EC1               	goto	l11973
  2170                           	line	386
  2171                           	
  2172  0EBF                     l6027:	
  2173  0EBF  2EC1               	goto	l11973
  2174                           	line	387
  2175                           	
  2176  0EC0                     l6024:	
  2177  0EC0  2EC1               	goto	l11973
  2178                           	line	388
  2179                           	
  2180  0EC1                     l6022:	
  2181                           	line	350
  2182                           	
  2183  0EC1                     l11973:	
  2184  0EC1  1F70               	btfss	(_home/8),(_home)&7
  2185  0EC2  2EC4               	goto	u6821
  2186  0EC3  2EC5               	goto	u6820
  2187  0EC4                     u6821:
  2188  0EC4  2E70               	goto	l11949
  2189  0EC5                     u6820:
  2190  0EC5  2EC6               	goto	l6030
  2191                           	
  2192  0EC6                     l6029:	
  2193                           	line	390
  2194                           	
  2195  0EC6                     l6030:	
  2196                           	global	start
  2197  0EC6  120A  118A  2812   	ljmp	start
  2198                           	opt stack 0
  2199                           GLOBAL	__end_of_main
  2200  0EC9                     	__end_of_main:
  2201 ;; =============== function _main ends ============
  2202                           
  2203                           	signat	_main,88
  2204                           	global	_goToNextCell
  2205                           psect	text1873,local,class=CODE,delta=2
  2206                           global __ptext1873
  2207  0BCE                     __ptext1873:
  2208                           
  2209 ;; *************** function _goToNextCell *****************
  2210 ;; Defined at:
  2211 ;;		line 272 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;		None               void
  2218 ;; Registers used:
  2219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    7
  2232 ;; This function calls:
  2233 ;;		_getSomethingInTheWay
  2234 ;;		_goLeft
  2235 ;;		_goForward
  2236 ;;		_goRight
  2237 ;;		_goBackward
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           psect	text1873
  2243                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  2244                           	line	272
  2245                           	global	__size_of_goToNextCell
  2246  0045                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  2247                           	
  2248  0BCE                     _goToNextCell:	
  2249                           	opt	stack 0
  2250                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2251                           	line	273
  2252                           	
  2253  0BCE                     l11925:	
  2254                           ;main.c: 273: if(!leftWall && (getSomethingInTheWay() != LEFT))
  2255  0BCE  1BF0               	btfsc	(_leftWall/8),(_leftWall)&7
  2256  0BCF  2BD1               	goto	u6721
  2257  0BD0  2BD2               	goto	u6720
  2258  0BD1                     u6721:
  2259  0BD1  2BE2               	goto	l5990
  2260  0BD2                     u6720:
  2261                           	
  2262  0BD2                     l11927:	
  2263  0BD2  160A  118A  25CA   	fcall	_getSomethingInTheWay
              120A  158A         
  2264  0BD7  3A01               	xorlw	01h
  2265  0BD8  1903               	skipnz
  2266  0BD9  2BDB               	goto	u6731
  2267  0BDA  2BDC               	goto	u6730
  2268  0BDB                     u6731:
  2269  0BDB  2BE2               	goto	l5990
  2270  0BDC                     u6730:
  2271                           	line	274
  2272                           	
  2273  0BDC                     l11929:	
  2274                           ;main.c: 274: goLeft();
  2275  0BDC  160A  118A  278B   	fcall	_goLeft
              120A  158A         
  2276  0BE1  2C12               	goto	l5996
  2277                           	line	275
  2278                           	
  2279  0BE2                     l5990:	
  2280                           ;main.c: 275: else if(!frontWall && (getSomethingInTheWay() != FORWARD))
  2281  0BE2  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  2282  0BE3  2BE5               	goto	u6741
  2283  0BE4  2BE6               	goto	u6740
  2284  0BE5                     u6741:
  2285  0BE5  2BF6               	goto	l5992
  2286  0BE6                     u6740:
  2287                           	
  2288  0BE6                     l11931:	
  2289  0BE6  160A  118A  25CA   	fcall	_getSomethingInTheWay
              120A  158A         
  2290  0BEB  3A00               	xorlw	0
  2291  0BEC  1903               	skipnz
  2292  0BED  2BEF               	goto	u6751
  2293  0BEE  2BF0               	goto	u6750
  2294  0BEF                     u6751:
  2295  0BEF  2BF6               	goto	l5992
  2296  0BF0                     u6750:
  2297                           	line	276
  2298                           	
  2299  0BF0                     l11933:	
  2300                           ;main.c: 276: goForward();
  2301  0BF0  160A  118A  2654   	fcall	_goForward
              120A  158A         
  2302  0BF5  2C12               	goto	l5996
  2303                           	line	277
  2304                           	
  2305  0BF6                     l5992:	
  2306                           ;main.c: 277: else if(!rightWall && (getSomethingInTheWay() != RIGHT))
  2307  0BF6  18F1               	btfsc	(_rightWall/8),(_rightWall)&7
  2308  0BF7  2BF9               	goto	u6761
  2309  0BF8  2BFA               	goto	u6760
  2310  0BF9                     u6761:
  2311  0BF9  2C0A               	goto	l11939
  2312  0BFA                     u6760:
  2313                           	
  2314  0BFA                     l11935:	
  2315  0BFA  160A  118A  25CA   	fcall	_getSomethingInTheWay
              120A  158A         
  2316  0BFF  3A03               	xorlw	03h
  2317  0C00  1903               	skipnz
  2318  0C01  2C03               	goto	u6771
  2319  0C02  2C04               	goto	u6770
  2320  0C03                     u6771:
  2321  0C03  2C0A               	goto	l11939
  2322  0C04                     u6770:
  2323                           	line	278
  2324                           	
  2325  0C04                     l11937:	
  2326                           ;main.c: 278: goRight();
  2327  0C04  160A  118A  27B1   	fcall	_goRight
              120A  158A         
  2328  0C09  2C12               	goto	l5996
  2329                           	line	279
  2330                           	
  2331  0C0A                     l5994:	
  2332                           	line	280
  2333                           	
  2334  0C0A                     l11939:	
  2335                           ;main.c: 279: else
  2336                           ;main.c: 280: goBackward();
  2337  0C0A  120A  158A  2040   	fcall	_goBackward
              120A  158A         
  2338  0C0F  2C12               	goto	l5996
  2339                           	
  2340  0C10                     l5995:	
  2341  0C10  2C12               	goto	l5996
  2342                           	
  2343  0C11                     l5993:	
  2344  0C11  2C12               	goto	l5996
  2345                           	
  2346  0C12                     l5991:	
  2347                           	line	281
  2348                           	
  2349  0C12                     l5996:	
  2350  0C12  0008               	return
  2351                           	opt stack 0
  2352                           GLOBAL	__end_of_goToNextCell
  2353  0C13                     	__end_of_goToNextCell:
  2354 ;; =============== function _goToNextCell ends ============
  2355                           
  2356                           	signat	_goToNextCell,88
  2357                           	global	_findWalls
  2358                           psect	text1874,local,class=CODE,delta=2
  2359                           global __ptext1874
  2360  0EC9                     __ptext1874:
  2361                           
  2362 ;; *************** function _findWalls *****************
  2363 ;; Defined at:
  2364 ;;		line 174 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0
  2380 ;;      Temps:          0       1       0       0       0
  2381 ;;      Totals:         0       1       0       0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    7
  2385 ;; This function calls:
  2386 ;;		_lcd_set_cursor
  2387 ;;		_findWall
  2388 ;;		_lcd_write_data
  2389 ;;		_rotateIR
  2390 ;;		_play_iCreate_song
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           psect	text1874
  2396                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  2397                           	line	174
  2398                           	global	__size_of_findWalls
  2399  0091                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  2400                           	
  2401  0EC9                     _findWalls:	
  2402                           	opt	stack 0
  2403                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2404                           	line	175
  2405                           	
  2406  0EC9                     l11893:	
  2407                           ;main.c: 175: lcd_set_cursor(0x0B);
  2408  0EC9  300B               	movlw	(0Bh)
  2409  0ECA  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  2410                           	line	177
  2411                           	
  2412  0ECF                     l11895:	
  2413                           ;main.c: 177: leftWall = findWall();
  2414  0ECF  160A  118A  26A3   	fcall	_findWall
              120A  158A         
  2415  0ED4  1803               	btfsc	status,0
  2416  0ED5  2ED7               	goto	u6631
  2417  0ED6  2ED9               	goto	u6630
  2418                           	
  2419  0ED7                     u6631:
  2420  0ED7  17F0               	bsf	(_leftWall/8),(_leftWall)&7
  2421  0ED8  2EDA               	goto	u6644
  2422  0ED9                     u6630:
  2423  0ED9  13F0               	bcf	(_leftWall/8),(_leftWall)&7
  2424  0EDA                     u6644:
  2425                           	line	178
  2426                           	
  2427  0EDA                     l11897:	
  2428                           ;main.c: 178: if(leftWall)
  2429  0EDA  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2430  0EDB  2EDD               	goto	u6651
  2431  0EDC  2EDE               	goto	u6650
  2432  0EDD                     u6651:
  2433  0EDD  2EE5               	goto	l11901
  2434  0EDE                     u6650:
  2435                           	line	180
  2436                           	
  2437  0EDE                     l11899:	
  2438                           ;main.c: 179: {
  2439                           ;main.c: 180: lcd_write_data('L');
  2440  0EDE  304C               	movlw	(04Ch)
  2441  0EDF  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  2442                           	line	181
  2443                           ;main.c: 181: }
  2444  0EE4  2EEB               	goto	l5974
  2445                           	line	182
  2446                           	
  2447  0EE5                     l5973:	
  2448                           	line	183
  2449                           	
  2450  0EE5                     l11901:	
  2451                           ;main.c: 182: else
  2452                           ;main.c: 183: lcd_write_data(' ');
  2453  0EE5  3020               	movlw	(020h)
  2454  0EE6  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  2455                           	
  2456  0EEB                     l5974:	
  2457                           	line	184
  2458                           ;main.c: 184: rotateIR(24, 0b00001111);
  2459  0EEB  300F               	movlw	(0Fh)
  2460  0EEC  1283               	bcf	status, 5	;RP0=0, select bank0
  2461  0EED  1303               	bcf	status, 6	;RP1=0, select bank0
  2462  0EEE  00CD               	movwf	(??_findWalls+0)+0
  2463  0EEF  084D               	movf	(??_findWalls+0)+0,w
  2464  0EF0  00AA               	movwf	(?_rotateIR)
  2465  0EF1  3018               	movlw	(018h)
  2466  0EF2  120A  158A  2413   	fcall	_rotateIR
              120A  158A         
  2467                           	line	185
  2468                           	
  2469  0EF7                     l11903:	
  2470                           ;main.c: 185: play_iCreate_song(5);
  2471  0EF7  3005               	movlw	(05h)
  2472  0EF8  160A  118A  2608   	fcall	_play_iCreate_song
              120A  158A         
  2473                           	line	186
  2474                           	
  2475  0EFD                     l11905:	
  2476                           ;main.c: 186: frontWall = findWall();
  2477  0EFD  160A  118A  26A3   	fcall	_findWall
              120A  158A         
  2478  0F02  1803               	btfsc	status,0
  2479  0F03  2F05               	goto	u6661
  2480  0F04  2F07               	goto	u6660
  2481                           	
  2482  0F05                     u6661:
  2483  0F05  1670               	bsf	(_frontWall/8),(_frontWall)&7
  2484  0F06  2F08               	goto	u6674
  2485  0F07                     u6660:
  2486  0F07  1270               	bcf	(_frontWall/8),(_frontWall)&7
  2487  0F08                     u6674:
  2488                           	line	187
  2489                           	
  2490  0F08                     l11907:	
  2491                           ;main.c: 187: if(frontWall)
  2492  0F08  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2493  0F09  2F0B               	goto	u6681
  2494  0F0A  2F0C               	goto	u6680
  2495  0F0B                     u6681:
  2496  0F0B  2F13               	goto	l11911
  2497  0F0C                     u6680:
  2498                           	line	189
  2499                           	
  2500  0F0C                     l11909:	
  2501                           ;main.c: 188: {
  2502                           ;main.c: 189: lcd_write_data('F');
  2503  0F0C  3046               	movlw	(046h)
  2504  0F0D  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  2505                           	line	191
  2506                           ;main.c: 191: }
  2507  0F12  2F19               	goto	l5976
  2508                           	line	192
  2509                           	
  2510  0F13                     l5975:	
  2511                           	line	193
  2512                           	
  2513  0F13                     l11911:	
  2514                           ;main.c: 192: else
  2515                           ;main.c: 193: lcd_write_data(' ');
  2516  0F13  3020               	movlw	(020h)
  2517  0F14  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  2518                           	
  2519  0F19                     l5976:	
  2520                           	line	194
  2521                           ;main.c: 194: rotateIR(24, 0b00001111);
  2522  0F19  300F               	movlw	(0Fh)
  2523  0F1A  1283               	bcf	status, 5	;RP0=0, select bank0
  2524  0F1B  1303               	bcf	status, 6	;RP1=0, select bank0
  2525  0F1C  00CD               	movwf	(??_findWalls+0)+0
  2526  0F1D  084D               	movf	(??_findWalls+0)+0,w
  2527  0F1E  00AA               	movwf	(?_rotateIR)
  2528  0F1F  3018               	movlw	(018h)
  2529  0F20  120A  158A  2413   	fcall	_rotateIR
              120A  158A         
  2530                           	line	195
  2531                           	
  2532  0F25                     l11913:	
  2533                           ;main.c: 195: play_iCreate_song(5);
  2534  0F25  3005               	movlw	(05h)
  2535  0F26  160A  118A  2608   	fcall	_play_iCreate_song
              120A  158A         
  2536                           	line	196
  2537                           	
  2538  0F2B                     l11915:	
  2539                           ;main.c: 196: rightWall = findWall();
  2540  0F2B  160A  118A  26A3   	fcall	_findWall
              120A  158A         
  2541  0F30  1803               	btfsc	status,0
  2542  0F31  2F33               	goto	u6691
  2543  0F32  2F35               	goto	u6690
  2544                           	
  2545  0F33                     u6691:
  2546  0F33  14F1               	bsf	(_rightWall/8),(_rightWall)&7
  2547  0F34  2F36               	goto	u6704
  2548  0F35                     u6690:
  2549  0F35  10F1               	bcf	(_rightWall/8),(_rightWall)&7
  2550  0F36                     u6704:
  2551                           	line	197
  2552                           	
  2553  0F36                     l11917:	
  2554                           ;main.c: 197: if(rightWall)
  2555  0F36  1CF1               	btfss	(_rightWall/8),(_rightWall)&7
  2556  0F37  2F39               	goto	u6711
  2557  0F38  2F3A               	goto	u6710
  2558  0F39                     u6711:
  2559  0F39  2F41               	goto	l11921
  2560  0F3A                     u6710:
  2561                           	line	199
  2562                           	
  2563  0F3A                     l11919:	
  2564                           ;main.c: 198: {
  2565                           ;main.c: 199: lcd_write_data('R');
  2566  0F3A  3052               	movlw	(052h)
  2567  0F3B  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  2568                           	line	201
  2569                           ;main.c: 201: }
  2570  0F40  2F47               	goto	l5978
  2571                           	line	202
  2572                           	
  2573  0F41                     l5977:	
  2574                           	line	203
  2575                           	
  2576  0F41                     l11921:	
  2577                           ;main.c: 202: else
  2578                           ;main.c: 203: lcd_write_data(' ');
  2579  0F41  3020               	movlw	(020h)
  2580  0F42  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  2581                           	
  2582  0F47                     l5978:	
  2583                           	line	204
  2584                           ;main.c: 204: rotateIR(36, 0b00001101);
  2585  0F47  300D               	movlw	(0Dh)
  2586  0F48  1283               	bcf	status, 5	;RP0=0, select bank0
  2587  0F49  1303               	bcf	status, 6	;RP1=0, select bank0
  2588  0F4A  00CD               	movwf	(??_findWalls+0)+0
  2589  0F4B  084D               	movf	(??_findWalls+0)+0,w
  2590  0F4C  00AA               	movwf	(?_rotateIR)
  2591  0F4D  3024               	movlw	(024h)
  2592  0F4E  120A  158A  2413   	fcall	_rotateIR
              120A  158A         
  2593                           	line	205
  2594                           	
  2595  0F53                     l11923:	
  2596                           ;main.c: 205: play_iCreate_song(5);
  2597  0F53  3005               	movlw	(05h)
  2598  0F54  160A  118A  2608   	fcall	_play_iCreate_song
              120A  158A         
  2599                           	line	206
  2600                           	
  2601  0F59                     l5979:	
  2602  0F59  0008               	return
  2603                           	opt stack 0
  2604                           GLOBAL	__end_of_findWalls
  2605  0F5A                     	__end_of_findWalls:
  2606 ;; =============== function _findWalls ends ============
  2607                           
  2608                           	signat	_findWalls,88
  2609                           	global	_goRight
  2610                           psect	text1875,local,class=CODE,delta=2
  2611                           global __ptext1875
  2612  17B1                     __ptext1875:
  2613                           
  2614 ;; *************** function _goRight *****************
  2615 ;; Defined at:
  2616 ;;		line 198 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;		None               void
  2623 ;; Registers used:
  2624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2630 ;;      Params:         0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0
  2632 ;;      Temps:          0       1       0       0       0
  2633 ;;      Totals:         0       1       0       0       0
  2634 ;;Total ram usage:        1 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    6
  2637 ;; This function calls:
  2638 ;;		_lcd_set_cursor
  2639 ;;		_lcd_write_data
  2640 ;;		_turnRight90
  2641 ;;		_updateOrientation
  2642 ;;		_driveForDistance
  2643 ;; This function is called by:
  2644 ;;		_goToNextCell
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           psect	text1875
  2648                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2649                           	line	198
  2650                           	global	__size_of_goRight
  2651  0027                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  2652                           	
  2653  17B1                     _goRight:	
  2654                           	opt	stack 0
  2655                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2656                           	line	199
  2657                           	
  2658  17B1                     l11883:	
  2659                           ;drive.c: 199: lcd_set_cursor(0x0F);
  2660  17B1  300F               	movlw	(0Fh)
  2661  17B2  160A  118A  25E1   	fcall	_lcd_set_cursor
              160A  118A         
  2662                           	line	200
  2663                           ;drive.c: 200: lcd_write_data('R');
  2664  17B7  3052               	movlw	(052h)
  2665  17B8  160A  118A  261A   	fcall	_lcd_write_data
              160A  118A         
  2666                           	line	201
  2667                           	
  2668  17BD                     l11885:	
  2669                           ;drive.c: 201: turnRight90();
  2670  17BD  120A  158A  2201   	fcall	_turnRight90
              160A  118A         
  2671                           	line	202
  2672                           	
  2673  17C2                     l11887:	
  2674                           ;drive.c: 202: updateOrientation(RIGHT);
  2675  17C2  3003               	movlw	(03h)
  2676  17C3  160A  118A  25F7   	fcall	_updateOrientation
              160A  118A         
  2677                           	line	203
  2678                           	
  2679  17C8                     l11889:	
  2680                           ;drive.c: 203: lastMove = RIGHT;
  2681  17C8  3003               	movlw	(03h)
  2682  17C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2683  17CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2684  17CB  00C2               	movwf	(??_goRight+0)+0
  2685  17CC  0842               	movf	(??_goRight+0)+0,w
  2686  17CD  00E0               	movwf	(_lastMove)	;volatile
  2687                           	line	204
  2688                           	
  2689  17CE                     l11891:	
  2690                           ;drive.c: 204: driveForDistance(1000);
  2691  17CE  30E8               	movlw	low(03E8h)
  2692  17CF  00B6               	movwf	(?_driveForDistance)
  2693  17D0  3003               	movlw	high(03E8h)
  2694  17D1  00B7               	movwf	((?_driveForDistance))+1
  2695  17D2  120A  118A  21E4   	fcall	_driveForDistance
              160A  118A         
  2696                           	line	205
  2697                           	
  2698  17D7                     l5129:	
  2699  17D7  0008               	return
  2700                           	opt stack 0
  2701                           GLOBAL	__end_of_goRight
  2702  17D8                     	__end_of_goRight:
  2703 ;; =============== function _goRight ends ============
  2704                           
  2705                           	signat	_goRight,88
  2706                           	global	_goLeft
  2707                           psect	text1876,local,class=CODE,delta=2
  2708                           global __ptext1876
  2709  178B                     __ptext1876:
  2710                           
  2711 ;; *************** function _goLeft *****************
  2712 ;; Defined at:
  2713 ;;		line 177 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;		None               void
  2720 ;; Registers used:
  2721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    6
  2734 ;; This function calls:
  2735 ;;		_lcd_set_cursor
  2736 ;;		_lcd_write_data
  2737 ;;		_turnLeft90
  2738 ;;		_updateOrientation
  2739 ;;		_driveForDistance
  2740 ;; This function is called by:
  2741 ;;		_goToNextCell
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           psect	text1876
  2745                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2746                           	line	177
  2747                           	global	__size_of_goLeft
  2748  0026                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  2749                           	
  2750  178B                     _goLeft:	
  2751                           	opt	stack 0
  2752                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2753                           	line	178
  2754                           	
  2755  178B                     l11873:	
  2756                           ;drive.c: 178: lcd_set_cursor(0x0F);
  2757  178B  300F               	movlw	(0Fh)
  2758  178C  160A  118A  25E1   	fcall	_lcd_set_cursor
              160A  118A         
  2759                           	line	179
  2760                           ;drive.c: 179: lcd_write_data('L');
  2761  1791  304C               	movlw	(04Ch)
  2762  1792  160A  118A  261A   	fcall	_lcd_write_data
              160A  118A         
  2763                           	line	180
  2764                           	
  2765  1797                     l11875:	
  2766                           ;drive.c: 180: turnLeft90();
  2767  1797  120A  158A  2191   	fcall	_turnLeft90
              160A  118A         
  2768                           	line	181
  2769                           	
  2770  179C                     l11877:	
  2771                           ;drive.c: 181: updateOrientation(LEFT);
  2772  179C  3001               	movlw	(01h)
  2773  179D  160A  118A  25F7   	fcall	_updateOrientation
              160A  118A         
  2774                           	line	182
  2775                           	
  2776  17A2                     l11879:	
  2777                           ;drive.c: 182: lastMove = LEFT;
  2778  17A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2779  17A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2780  17A4  01E0               	clrf	(_lastMove)	;volatile
  2781  17A5  1403               	bsf	status,0
  2782  17A6  0DE0               	rlf	(_lastMove),f	;volatile
  2783                           	line	183
  2784                           	
  2785  17A7                     l11881:	
  2786                           ;drive.c: 183: driveForDistance(1000);
  2787  17A7  30E8               	movlw	low(03E8h)
  2788  17A8  00B6               	movwf	(?_driveForDistance)
  2789  17A9  3003               	movlw	high(03E8h)
  2790  17AA  00B7               	movwf	((?_driveForDistance))+1
  2791  17AB  120A  118A  21E4   	fcall	_driveForDistance
              160A  118A         
  2792                           	line	184
  2793                           	
  2794  17B0                     l5123:	
  2795  17B0  0008               	return
  2796                           	opt stack 0
  2797                           GLOBAL	__end_of_goLeft
  2798  17B1                     	__end_of_goLeft:
  2799 ;; =============== function _goLeft ends ============
  2800                           
  2801                           	signat	_goLeft,88
  2802                           	global	_goForward
  2803                           psect	text1877,local,class=CODE,delta=2
  2804                           global __ptext1877
  2805  1654                     __ptext1877:
  2806                           
  2807 ;; *************** function _goForward *****************
  2808 ;; Defined at:
  2809 ;;		line 168 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;		None               void
  2816 ;; Registers used:
  2817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    6
  2830 ;; This function calls:
  2831 ;;		_lcd_set_cursor
  2832 ;;		_lcd_write_data
  2833 ;;		_driveForDistance
  2834 ;; This function is called by:
  2835 ;;		_goToNextCell
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           psect	text1877
  2839                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2840                           	line	168
  2841                           	global	__size_of_goForward
  2842  0019                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  2843                           	
  2844  1654                     _goForward:	
  2845                           	opt	stack 0
  2846                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2847                           	line	169
  2848                           	
  2849  1654                     l11867:	
  2850                           ;drive.c: 169: lcd_set_cursor(0x0F);
  2851  1654  300F               	movlw	(0Fh)
  2852  1655  160A  118A  25E1   	fcall	_lcd_set_cursor
              160A  118A         
  2853                           	line	170
  2854                           ;drive.c: 170: lcd_write_data('F');
  2855  165A  3046               	movlw	(046h)
  2856  165B  160A  118A  261A   	fcall	_lcd_write_data
              160A  118A         
  2857                           	line	171
  2858                           	
  2859  1660                     l11869:	
  2860                           ;drive.c: 171: lastMove = FORWARD;
  2861  1660  1283               	bcf	status, 5	;RP0=0, select bank0
  2862  1661  1303               	bcf	status, 6	;RP1=0, select bank0
  2863  1662  01E0               	clrf	(_lastMove)	;volatile
  2864                           	line	172
  2865                           	
  2866  1663                     l11871:	
  2867                           ;drive.c: 172: driveForDistance(1000);
  2868  1663  30E8               	movlw	low(03E8h)
  2869  1664  00B6               	movwf	(?_driveForDistance)
  2870  1665  3003               	movlw	high(03E8h)
  2871  1666  00B7               	movwf	((?_driveForDistance))+1
  2872  1667  120A  118A  21E4   	fcall	_driveForDistance
              160A  118A         
  2873                           	line	173
  2874                           	
  2875  166C                     l5120:	
  2876  166C  0008               	return
  2877                           	opt stack 0
  2878                           GLOBAL	__end_of_goForward
  2879  166D                     	__end_of_goForward:
  2880 ;; =============== function _goForward ends ============
  2881                           
  2882                           	signat	_goForward,88
  2883                           	global	_goBackward
  2884                           psect	text1878,local,class=CODE,delta=2
  2885                           global __ptext1878
  2886  0840                     __ptext1878:
  2887                           
  2888 ;; *************** function _goBackward *****************
  2889 ;; Defined at:
  2890 ;;		line 157 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;		None               void
  2897 ;; Registers used:
  2898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0
  2906 ;;      Temps:          0       1       0       0       0
  2907 ;;      Totals:         0       1       0       0       0
  2908 ;;Total ram usage:        1 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    6
  2911 ;; This function calls:
  2912 ;;		_lcd_set_cursor
  2913 ;;		_lcd_write_data
  2914 ;;		_turnAround
  2915 ;;		_updateOrientation
  2916 ;;		_driveForDistance
  2917 ;; This function is called by:
  2918 ;;		_goToNextCell
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           psect	text1878
  2922                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  2923                           	line	157
  2924                           	global	__size_of_goBackward
  2925  0029                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  2926                           	
  2927  0840                     _goBackward:	
  2928                           	opt	stack 0
  2929                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2930                           	line	158
  2931                           	
  2932  0840                     l11857:	
  2933                           ;drive.c: 158: lcd_set_cursor(0x0F);
  2934  0840  300F               	movlw	(0Fh)
  2935  0841  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  2936                           	line	159
  2937                           ;drive.c: 159: lcd_write_data('B');
  2938  0846  3042               	movlw	(042h)
  2939  0847  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  2940                           	line	160
  2941                           	
  2942  084C                     l11859:	
  2943                           ;drive.c: 160: turnAround();
  2944  084C  120A  158A  2389   	fcall	_turnAround
              120A  158A         
  2945                           	line	161
  2946                           	
  2947  0851                     l11861:	
  2948                           ;drive.c: 161: updateOrientation(BACKWARD);
  2949  0851  3002               	movlw	(02h)
  2950  0852  160A  118A  25F7   	fcall	_updateOrientation
              120A  158A         
  2951                           	line	162
  2952                           	
  2953  0857                     l11863:	
  2954                           ;drive.c: 162: driveForDistance(1000);
  2955  0857  30E8               	movlw	low(03E8h)
  2956  0858  1283               	bcf	status, 5	;RP0=0, select bank0
  2957  0859  1303               	bcf	status, 6	;RP1=0, select bank0
  2958  085A  00B6               	movwf	(?_driveForDistance)
  2959  085B  3003               	movlw	high(03E8h)
  2960  085C  00B7               	movwf	((?_driveForDistance))+1
  2961  085D  120A  118A  21E4   	fcall	_driveForDistance
              120A  158A         
  2962                           	line	163
  2963                           	
  2964  0862                     l11865:	
  2965                           ;drive.c: 163: lastMove = BACKWARD;
  2966  0862  3002               	movlw	(02h)
  2967  0863  1283               	bcf	status, 5	;RP0=0, select bank0
  2968  0864  1303               	bcf	status, 6	;RP1=0, select bank0
  2969  0865  00C2               	movwf	(??_goBackward+0)+0
  2970  0866  0842               	movf	(??_goBackward+0)+0,w
  2971  0867  00E0               	movwf	(_lastMove)	;volatile
  2972                           	line	164
  2973                           	
  2974  0868                     l5117:	
  2975  0868  0008               	return
  2976                           	opt stack 0
  2977                           GLOBAL	__end_of_goBackward
  2978  0869                     	__end_of_goBackward:
  2979 ;; =============== function _goBackward ends ============
  2980                           
  2981                           	signat	_goBackward,88
  2982                           	global	_goParallel
  2983                           psect	text1879,local,class=CODE,delta=2
  2984                           global __ptext1879
  2985  038F                     __ptext1879:
  2986                           
  2987 ;; *************** function _goParallel *****************
  2988 ;; Defined at:
  2989 ;;		line 209 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  step            2    7[BANK1 ] int 
  2994 ;;  angleParalle    2    9[BANK1 ] int 
  2995 ;;  distance        2    5[BANK1 ] int 
  2996 ;;  shortestDist    2    1[BANK1 ] int 
  2997 ;;  angleLowByte    1    4[BANK1 ] unsigned char 
  2998 ;;  angleHighByt    1    3[BANK1 ] unsigned char 
  2999 ;;  stepsToWall     1    0[BANK1 ] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3009 ;;      Params:         0       0       0       0       0
  3010 ;;      Locals:         0       0      11       0       0
  3011 ;;      Temps:          0       2       0       0       0
  3012 ;;      Totals:         0       2      11       0       0
  3013 ;;Total ram usage:       13 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    6
  3016 ;; This function calls:
  3017 ;;		_readIR
  3018 ;;		_rotateIR
  3019 ;;		_play_iCreate_song
  3020 ;;		___lbtoft
  3021 ;;		___ftmul
  3022 ;;		___fttol
  3023 ;;		_drive
  3024 ;;		_waitFor
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           psect	text1879
  3030                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  3031                           	line	209
  3032                           	global	__size_of_goParallel
  3033  0140                     	__size_of_goParallel	equ	__end_of_goParallel-_goParallel
  3034                           	
  3035  038F                     _goParallel:	
  3036                           	opt	stack 1
  3037                           ; Regs used in _goParallel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3038                           	line	210
  3039                           	
  3040  038F                     l11807:	
  3041                           ;main.c: 210: PORTC |= 0b00000011;
  3042  038F  3003               	movlw	(03h)
  3043  0390  1283               	bcf	status, 5	;RP0=0, select bank0
  3044  0391  1303               	bcf	status, 6	;RP1=0, select bank0
  3045  0392  00D8               	movwf	(??_goParallel+0)+0
  3046  0393  0858               	movf	(??_goParallel+0)+0,w
  3047  0394  0487               	iorwf	(7),f	;volatile
  3048                           	line	212
  3049                           	
  3050  0395                     l11809:	
  3051                           ;main.c: 212: int distance, shortestDistance = 999;
  3052  0395  30E7               	movlw	low(03E7h)
  3053  0396  1683               	bsf	status, 5	;RP0=1, select bank1
  3054  0397  1303               	bcf	status, 6	;RP1=0, select bank1
  3055  0398  00E5               	movwf	(goParallel@shortestDistance)^080h
  3056  0399  3003               	movlw	high(03E7h)
  3057  039A  00E6               	movwf	((goParallel@shortestDistance)^080h)+1
  3058                           	line	215
  3059                           	
  3060  039B                     l11811:	
  3061                           ;main.c: 213: char stepsToWall;
  3062                           ;main.c: 215: for (int step = -12; step < 12; step++)
  3063  039B  30F4               	movlw	low(-12)
  3064  039C  00EB               	movwf	(goParallel@step)^080h
  3065  039D  30FF               	movlw	high(-12)
  3066  039E  00EC               	movwf	((goParallel@step)^080h)+1
  3067                           	
  3068  039F                     l11813:	
  3069  039F  086C               	movf	(goParallel@step+1)^080h,w
  3070  03A0  3A80               	xorlw	80h
  3071  03A1  00FF               	movwf	btemp+1
  3072  03A2  3080               	movlw	(high(0Ch))^80h
  3073  03A3  027F               	subwf	btemp+1,w
  3074  03A4  1D03               	skipz
  3075  03A5  2BA8               	goto	u6585
  3076  03A6  300C               	movlw	low(0Ch)
  3077  03A7  026B               	subwf	(goParallel@step)^080h,w
  3078  03A8                     u6585:
  3079                           
  3080  03A8  1C03               	skipc
  3081  03A9  2BAB               	goto	u6581
  3082  03AA  2BAC               	goto	u6580
  3083  03AB                     u6581:
  3084  03AB  2BAE               	goto	l11817
  3085  03AC                     u6580:
  3086  03AC  2C0A               	goto	l11831
  3087                           	
  3088  03AD                     l11815:	
  3089  03AD  2C0A               	goto	l11831
  3090                           	line	216
  3091                           	
  3092  03AE                     l5982:	
  3093                           	line	217
  3094                           	
  3095  03AE                     l11817:	
  3096                           ;main.c: 216: {
  3097                           ;main.c: 217: distance = readIR();
  3098  03AE  160A  118A  2743   	fcall	_readIR
              120A  118A         
  3099  03B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3100  03B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3101  03B5  084A               	movf	(1+(?_readIR)),w
  3102  03B6  1683               	bsf	status, 5	;RP0=1, select bank1
  3103  03B7  1303               	bcf	status, 6	;RP1=0, select bank1
  3104  03B8  01EA               	clrf	(goParallel@distance+1)^080h
  3105  03B9  07EA               	addwf	(goParallel@distance+1)^080h
  3106  03BA  1283               	bcf	status, 5	;RP0=0, select bank0
  3107  03BB  1303               	bcf	status, 6	;RP1=0, select bank0
  3108  03BC  0849               	movf	(0+(?_readIR)),w
  3109  03BD  1683               	bsf	status, 5	;RP0=1, select bank1
  3110  03BE  1303               	bcf	status, 6	;RP1=0, select bank1
  3111  03BF  01E9               	clrf	(goParallel@distance)^080h
  3112  03C0  07E9               	addwf	(goParallel@distance)^080h
  3113                           
  3114                           	line	218
  3115                           	
  3116  03C1                     l11819:	
  3117                           ;main.c: 218: if(distance < shortestDistance)
  3118  03C1  086A               	movf	(goParallel@distance+1)^080h,w
  3119  03C2  3A80               	xorlw	80h
  3120  03C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3121  03C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3122  03C5  00D8               	movwf	(??_goParallel+0)+0
  3123  03C6  1683               	bsf	status, 5	;RP0=1, select bank1
  3124  03C7  1303               	bcf	status, 6	;RP1=0, select bank1
  3125  03C8  0866               	movf	(goParallel@shortestDistance+1)^080h,w
  3126  03C9  3A80               	xorlw	80h
  3127  03CA  1283               	bcf	status, 5	;RP0=0, select bank0
  3128  03CB  1303               	bcf	status, 6	;RP1=0, select bank0
  3129  03CC  0258               	subwf	(??_goParallel+0)+0,w
  3130  03CD  1D03               	skipz
  3131  03CE  2BD3               	goto	u6595
  3132  03CF  1683               	bsf	status, 5	;RP0=1, select bank1
  3133  03D0  1303               	bcf	status, 6	;RP1=0, select bank1
  3134  03D1  0865               	movf	(goParallel@shortestDistance)^080h,w
  3135  03D2  0269               	subwf	(goParallel@distance)^080h,w
  3136  03D3                     u6595:
  3137                           
  3138  03D3  1803               	skipnc
  3139  03D4  2BD6               	goto	u6591
  3140  03D5  2BD7               	goto	u6590
  3141  03D6                     u6591:
  3142  03D6  2BE8               	goto	l11825
  3143  03D7                     u6590:
  3144                           	line	220
  3145                           	
  3146  03D7                     l11821:	
  3147                           ;main.c: 219: {
  3148                           ;main.c: 220: stepsToWall = step;
  3149  03D7  1683               	bsf	status, 5	;RP0=1, select bank1
  3150  03D8  1303               	bcf	status, 6	;RP1=0, select bank1
  3151  03D9  086B               	movf	(goParallel@step)^080h,w
  3152  03DA  1283               	bcf	status, 5	;RP0=0, select bank0
  3153  03DB  1303               	bcf	status, 6	;RP1=0, select bank0
  3154  03DC  00D8               	movwf	(??_goParallel+0)+0
  3155  03DD  0858               	movf	(??_goParallel+0)+0,w
  3156  03DE  1683               	bsf	status, 5	;RP0=1, select bank1
  3157  03DF  1303               	bcf	status, 6	;RP1=0, select bank1
  3158  03E0  00E4               	movwf	(goParallel@stepsToWall)^080h
  3159                           	line	221
  3160                           	
  3161  03E1                     l11823:	
  3162                           ;main.c: 221: shortestDistance = distance;
  3163  03E1  086A               	movf	(goParallel@distance+1)^080h,w
  3164  03E2  01E6               	clrf	(goParallel@shortestDistance+1)^080h
  3165  03E3  07E6               	addwf	(goParallel@shortestDistance+1)^080h
  3166  03E4  0869               	movf	(goParallel@distance)^080h,w
  3167  03E5  01E5               	clrf	(goParallel@shortestDistance)^080h
  3168  03E6  07E5               	addwf	(goParallel@shortestDistance)^080h
  3169                           
  3170  03E7  2BE8               	goto	l11825
  3171                           	line	222
  3172                           	
  3173  03E8                     l5984:	
  3174                           	line	223
  3175                           	
  3176  03E8                     l11825:	
  3177                           ;main.c: 222: }
  3178                           ;main.c: 223: rotateIR(1, 0b00001101);
  3179  03E8  300D               	movlw	(0Dh)
  3180  03E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3181  03EA  1303               	bcf	status, 6	;RP1=0, select bank0
  3182  03EB  00D8               	movwf	(??_goParallel+0)+0
  3183  03EC  0858               	movf	(??_goParallel+0)+0,w
  3184  03ED  00AA               	movwf	(?_rotateIR)
  3185  03EE  3001               	movlw	(01h)
  3186  03EF  120A  158A  2413   	fcall	_rotateIR
              120A  118A         
  3187                           	line	215
  3188                           	
  3189  03F4                     l11827:	
  3190  03F4  3001               	movlw	low(01h)
  3191  03F5  1683               	bsf	status, 5	;RP0=1, select bank1
  3192  03F6  1303               	bcf	status, 6	;RP1=0, select bank1
  3193  03F7  07EB               	addwf	(goParallel@step)^080h,f
  3194  03F8  1803               	skipnc
  3195  03F9  0AEC               	incf	(goParallel@step+1)^080h,f
  3196  03FA  3000               	movlw	high(01h)
  3197  03FB  07EC               	addwf	(goParallel@step+1)^080h,f
  3198                           	
  3199  03FC                     l11829:	
  3200  03FC  086C               	movf	(goParallel@step+1)^080h,w
  3201  03FD  3A80               	xorlw	80h
  3202  03FE  00FF               	movwf	btemp+1
  3203  03FF  3080               	movlw	(high(0Ch))^80h
  3204  0400  027F               	subwf	btemp+1,w
  3205  0401  1D03               	skipz
  3206  0402  2C05               	goto	u6605
  3207  0403  300C               	movlw	low(0Ch)
  3208  0404  026B               	subwf	(goParallel@step)^080h,w
  3209  0405                     u6605:
  3210                           
  3211  0405  1C03               	skipc
  3212  0406  2C08               	goto	u6601
  3213  0407  2C09               	goto	u6600
  3214  0408                     u6601:
  3215  0408  2BAE               	goto	l11817
  3216  0409                     u6600:
  3217  0409  2C0A               	goto	l11831
  3218                           	
  3219  040A                     l5983:	
  3220                           	line	225
  3221                           	
  3222  040A                     l11831:	
  3223                           ;main.c: 224: }
  3224                           ;main.c: 225: play_iCreate_song(5);
  3225  040A  3005               	movlw	(05h)
  3226  040B  160A  118A  2608   	fcall	_play_iCreate_song
              120A  118A         
  3227                           	line	226
  3228                           	
  3229  0410                     l11833:	
  3230                           ;main.c: 226: rotateIR(12, 0b00001111);
  3231  0410  300F               	movlw	(0Fh)
  3232  0411  1283               	bcf	status, 5	;RP0=0, select bank0
  3233  0412  1303               	bcf	status, 6	;RP1=0, select bank0
  3234  0413  00D8               	movwf	(??_goParallel+0)+0
  3235  0414  0858               	movf	(??_goParallel+0)+0,w
  3236  0415  00AA               	movwf	(?_rotateIR)
  3237  0416  300C               	movlw	(0Ch)
  3238  0417  120A  158A  2413   	fcall	_rotateIR
              120A  118A         
  3239                           	line	227
  3240                           	
  3241  041C                     l11835:	
  3242                           ;main.c: 227: play_iCreate_song(5);
  3243  041C  3005               	movlw	(05h)
  3244  041D  160A  118A  2608   	fcall	_play_iCreate_song
              120A  118A         
  3245                           	line	229
  3246                           ;main.c: 229: int angleParallelToWall = (int)((stepsToWall*3.75)*.944);
  3247  0422  1683               	bsf	status, 5	;RP0=1, select bank1
  3248  0423  1303               	bcf	status, 6	;RP1=0, select bank1
  3249  0424  0864               	movf	(goParallel@stepsToWall)^080h,w
  3250  0425  160A  118A  2700   	fcall	___lbtoft
              120A  118A         
  3251  042A  1283               	bcf	status, 5	;RP0=0, select bank0
  3252  042B  1303               	bcf	status, 6	;RP1=0, select bank0
  3253  042C  0840               	movf	(0+(?___lbtoft)),w
  3254  042D  00CB               	movwf	0+(?___ftmul)+03h
  3255  042E  0841               	movf	(1+(?___lbtoft)),w
  3256  042F  00CC               	movwf	1+(?___ftmul)+03h
  3257  0430  0842               	movf	(2+(?___lbtoft)),w
  3258  0431  00CD               	movwf	2+(?___ftmul)+03h
  3259  0432  308F               	movlw	0x8f
  3260  0433  00C8               	movwf	(?___ftmul)
  3261  0434  3062               	movlw	0x62
  3262  0435  00C9               	movwf	(?___ftmul+1)
  3263  0436  3040               	movlw	0x40
  3264  0437  00CA               	movwf	(?___ftmul+2)
  3265  0438  120A  118A  25D4   	fcall	___ftmul
              120A  118A         
  3266  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  3267  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  3268  043F  0848               	movf	(0+(?___ftmul)),w
  3269  0440  00B2               	movwf	(?___fttol)
  3270  0441  0849               	movf	(1+(?___ftmul)),w
  3271  0442  00B3               	movwf	(?___fttol+1)
  3272  0443  084A               	movf	(2+(?___ftmul)),w
  3273  0444  00B4               	movwf	(?___fttol+2)
  3274  0445  120A  158A  275A   	fcall	___fttol
              120A  118A         
  3275  044A  1283               	bcf	status, 5	;RP0=0, select bank0
  3276  044B  1303               	bcf	status, 6	;RP1=0, select bank0
  3277  044C  0833               	movf	1+(((0+(?___fttol)))),w
  3278  044D  1683               	bsf	status, 5	;RP0=1, select bank1
  3279  044E  1303               	bcf	status, 6	;RP1=0, select bank1
  3280  044F  01EE               	clrf	(goParallel@angleParallelToWall+1)^080h
  3281  0450  07EE               	addwf	(goParallel@angleParallelToWall+1)^080h
  3282  0451  1283               	bcf	status, 5	;RP0=0, select bank0
  3283  0452  1303               	bcf	status, 6	;RP1=0, select bank0
  3284  0453  0832               	movf	0+(((0+(?___fttol)))),w
  3285  0454  1683               	bsf	status, 5	;RP0=1, select bank1
  3286  0455  1303               	bcf	status, 6	;RP1=0, select bank1
  3287  0456  01ED               	clrf	(goParallel@angleParallelToWall)^080h
  3288  0457  07ED               	addwf	(goParallel@angleParallelToWall)^080h
  3289                           
  3290                           	line	230
  3291                           	
  3292  0458                     l11837:	
  3293                           ;main.c: 230: char angleHighByte = 0;
  3294  0458  01E7               	clrf	(goParallel@angleHighByte)^080h
  3295                           	line	231
  3296                           	
  3297  0459                     l11839:	
  3298                           ;main.c: 231: char angleLowByte = (char) angleParallelToWall;
  3299  0459  086D               	movf	(goParallel@angleParallelToWall)^080h,w
  3300  045A  1283               	bcf	status, 5	;RP0=0, select bank0
  3301  045B  1303               	bcf	status, 6	;RP1=0, select bank0
  3302  045C  00D8               	movwf	(??_goParallel+0)+0
  3303  045D  0858               	movf	(??_goParallel+0)+0,w
  3304  045E  1683               	bsf	status, 5	;RP0=1, select bank1
  3305  045F  1303               	bcf	status, 6	;RP1=0, select bank1
  3306  0460  00E8               	movwf	(goParallel@angleLowByte)^080h
  3307                           	line	233
  3308                           	
  3309  0461                     l11841:	
  3310                           ;main.c: 233: if(angleParallelToWall < 0)
  3311  0461  1FEE               	btfss	(goParallel@angleParallelToWall+1)^080h,7
  3312  0462  2C64               	goto	u6611
  3313  0463  2C65               	goto	u6610
  3314  0464                     u6611:
  3315  0464  2C81               	goto	l11845
  3316  0465                     u6610:
  3317                           	line	234
  3318                           	
  3319  0465                     l11843:	
  3320                           ;main.c: 234: angleParallelToWall = 360 - angleParallelToWall;
  3321  0465  096D               	comf	(goParallel@angleParallelToWall)^080h,w
  3322  0466  1283               	bcf	status, 5	;RP0=0, select bank0
  3323  0467  1303               	bcf	status, 6	;RP1=0, select bank0
  3324  0468  00D8               	movwf	(??_goParallel+0)+0
  3325  0469  1683               	bsf	status, 5	;RP0=1, select bank1
  3326  046A  1303               	bcf	status, 6	;RP1=0, select bank1
  3327  046B  096E               	comf	(goParallel@angleParallelToWall+1)^080h,w
  3328  046C  1283               	bcf	status, 5	;RP0=0, select bank0
  3329  046D  1303               	bcf	status, 6	;RP1=0, select bank0
  3330  046E  00D9               	movwf	((??_goParallel+0)+0+1)
  3331  046F  0AD8               	incf	(??_goParallel+0)+0,f
  3332  0470  1903               	skipnz
  3333  0471  0AD9               	incf	((??_goParallel+0)+0+1),f
  3334  0472  0858               	movf	0+(??_goParallel+0)+0,w
  3335  0473  3E68               	addlw	low(0168h)
  3336  0474  1683               	bsf	status, 5	;RP0=1, select bank1
  3337  0475  1303               	bcf	status, 6	;RP1=0, select bank1
  3338  0476  00ED               	movwf	(goParallel@angleParallelToWall)^080h
  3339  0477  1283               	bcf	status, 5	;RP0=0, select bank0
  3340  0478  1303               	bcf	status, 6	;RP1=0, select bank0
  3341  0479  0859               	movf	1+(??_goParallel+0)+0,w
  3342  047A  1803               	skipnc
  3343  047B  3E01               	addlw	1
  3344  047C  3E01               	addlw	high(0168h)
  3345  047D  1683               	bsf	status, 5	;RP0=1, select bank1
  3346  047E  1303               	bcf	status, 6	;RP1=0, select bank1
  3347  047F  00EE               	movwf	1+(goParallel@angleParallelToWall)^080h
  3348  0480  2C81               	goto	l11845
  3349                           	
  3350  0481                     l5985:	
  3351                           	line	236
  3352                           	
  3353  0481                     l11845:	
  3354                           ;main.c: 236: if(angleParallelToWall > 255)
  3355  0481  086E               	movf	(goParallel@angleParallelToWall+1)^080h,w
  3356  0482  3A80               	xorlw	80h
  3357  0483  00FF               	movwf	btemp+1
  3358  0484  3081               	movlw	(high(0100h))^80h
  3359  0485  027F               	subwf	btemp+1,w
  3360  0486  1D03               	skipz
  3361  0487  2C8A               	goto	u6625
  3362  0488  3000               	movlw	low(0100h)
  3363  0489  026D               	subwf	(goParallel@angleParallelToWall)^080h,w
  3364  048A                     u6625:
  3365                           
  3366  048A  1C03               	skipc
  3367  048B  2C8D               	goto	u6621
  3368  048C  2C8E               	goto	u6620
  3369  048D                     u6621:
  3370  048D  2C9D               	goto	l11851
  3371  048E                     u6620:
  3372                           	line	238
  3373                           	
  3374  048E                     l11847:	
  3375                           ;main.c: 237: {
  3376                           ;main.c: 238: angleHighByte = 1;
  3377  048E  1683               	bsf	status, 5	;RP0=1, select bank1
  3378  048F  1303               	bcf	status, 6	;RP1=0, select bank1
  3379  0490  01E7               	clrf	(goParallel@angleHighByte)^080h
  3380  0491  1403               	bsf	status,0
  3381  0492  0DE7               	rlf	(goParallel@angleHighByte)^080h,f
  3382                           	line	239
  3383                           	
  3384  0493                     l11849:	
  3385                           ;main.c: 239: angleLowByte = (char)(angleParallelToWall - 255);
  3386  0493  086D               	movf	(goParallel@angleParallelToWall)^080h,w
  3387  0494  3E01               	addlw	01h
  3388  0495  1283               	bcf	status, 5	;RP0=0, select bank0
  3389  0496  1303               	bcf	status, 6	;RP1=0, select bank0
  3390  0497  00D8               	movwf	(??_goParallel+0)+0
  3391  0498  0858               	movf	(??_goParallel+0)+0,w
  3392  0499  1683               	bsf	status, 5	;RP0=1, select bank1
  3393  049A  1303               	bcf	status, 6	;RP1=0, select bank1
  3394  049B  00E8               	movwf	(goParallel@angleLowByte)^080h
  3395  049C  2C9D               	goto	l11851
  3396                           	line	240
  3397                           	
  3398  049D                     l5986:	
  3399                           	line	241
  3400                           	
  3401  049D                     l11851:	
  3402                           ;main.c: 240: }
  3403                           ;main.c: 241: drive(0, 25, 0, 1);
  3404  049D  3019               	movlw	(019h)
  3405  049E  1283               	bcf	status, 5	;RP0=0, select bank0
  3406  049F  1303               	bcf	status, 6	;RP1=0, select bank0
  3407  04A0  00D8               	movwf	(??_goParallel+0)+0
  3408  04A1  0858               	movf	(??_goParallel+0)+0,w
  3409  04A2  00AC               	movwf	(?_drive)
  3410  04A3  01AD               	clrf	0+(?_drive)+01h
  3411  04A4  01AE               	clrf	0+(?_drive)+02h
  3412  04A5  1403               	bsf	status,0
  3413  04A6  0DAE               	rlf	0+(?_drive)+02h,f
  3414  04A7  3000               	movlw	(0)
  3415  04A8  120A  158A  215A   	fcall	_drive
              120A  118A         
  3416                           	line	242
  3417                           	
  3418  04AD                     l11853:	
  3419                           ;main.c: 242: waitFor(157,angleHighByte,angleLowByte);
  3420  04AD  1683               	bsf	status, 5	;RP0=1, select bank1
  3421  04AE  1303               	bcf	status, 6	;RP1=0, select bank1
  3422  04AF  0867               	movf	(goParallel@angleHighByte)^080h,w
  3423  04B0  1283               	bcf	status, 5	;RP0=0, select bank0
  3424  04B1  1303               	bcf	status, 6	;RP1=0, select bank0
  3425  04B2  00D8               	movwf	(??_goParallel+0)+0
  3426  04B3  0858               	movf	(??_goParallel+0)+0,w
  3427  04B4  00AC               	movwf	(?_waitFor)
  3428  04B5  1683               	bsf	status, 5	;RP0=1, select bank1
  3429  04B6  1303               	bcf	status, 6	;RP1=0, select bank1
  3430  04B7  0868               	movf	(goParallel@angleLowByte)^080h,w
  3431  04B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3432  04B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3433  04BA  00D9               	movwf	(??_goParallel+1)+0
  3434  04BB  0859               	movf	(??_goParallel+1)+0,w
  3435  04BC  00AD               	movwf	0+(?_waitFor)+01h
  3436  04BD  309D               	movlw	(09Dh)
  3437  04BE  120A  158A  2017   	fcall	_waitFor
              120A  118A         
  3438                           	line	243
  3439                           	
  3440  04C3                     l11855:	
  3441                           ;main.c: 243: drive(0, 0, 0, 0);
  3442  04C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3443  04C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3444  04C5  01AC               	clrf	(?_drive)
  3445  04C6  01AD               	clrf	0+(?_drive)+01h
  3446  04C7  01AE               	clrf	0+(?_drive)+02h
  3447  04C8  3000               	movlw	(0)
  3448  04C9  120A  158A  215A   	fcall	_drive
              120A  118A         
  3449                           	line	269
  3450                           	
  3451  04CE                     l5987:	
  3452  04CE  0008               	return
  3453                           	opt stack 0
  3454                           GLOBAL	__end_of_goParallel
  3455  04CF                     	__end_of_goParallel:
  3456 ;; =============== function _goParallel ends ============
  3457                           
  3458                           	signat	_goParallel,88
  3459                           	global	_findWall
  3460                           psect	text1880,local,class=CODE,delta=2
  3461                           global __ptext1880
  3462  16A3                     __ptext1880:
  3463                           
  3464 ;; *************** function _findWall *****************
  3465 ;; Defined at:
  3466 ;;		line 396 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;		None               void
  3473 ;; Registers used:
  3474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3480 ;;      Params:         0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0
  3483 ;;      Totals:         0       0       0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    6
  3487 ;; This function calls:
  3488 ;;		_readIR
  3489 ;; This function is called by:
  3490 ;;		_findWalls
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           psect	text1880
  3494                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  3495                           	line	396
  3496                           	global	__size_of_findWall
  3497  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  3498                           	
  3499  16A3                     _findWall:	
  3500                           	opt	stack 0
  3501                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3502                           	line	397
  3503                           	
  3504  16A3                     l11795:	
  3505                           ;main.c: 397: if(readIR() > 100)
  3506  16A3  160A  118A  2743   	fcall	_readIR
              160A  118A         
  3507  16A8  1283               	bcf	status, 5	;RP0=0, select bank0
  3508  16A9  1303               	bcf	status, 6	;RP1=0, select bank0
  3509  16AA  084A               	movf	(1+(?_readIR)),w
  3510  16AB  3A80               	xorlw	80h
  3511  16AC  00FF               	movwf	btemp+1
  3512  16AD  3080               	movlw	(high(065h))^80h
  3513  16AE  027F               	subwf	btemp+1,w
  3514  16AF  1D03               	skipz
  3515  16B0  2EB3               	goto	u6575
  3516  16B1  3065               	movlw	low(065h)
  3517  16B2  0249               	subwf	(0+(?_readIR)),w
  3518  16B3                     u6575:
  3519                           
  3520  16B3  1C03               	skipc
  3521  16B4  2EB6               	goto	u6571
  3522  16B5  2EB7               	goto	u6570
  3523  16B6                     u6571:
  3524  16B6  2EBB               	goto	l11803
  3525  16B7                     u6570:
  3526                           	line	398
  3527                           	
  3528  16B7                     l11797:	
  3529                           ;main.c: 398: return 0;
  3530  16B7  1003               	clrc
  3531                           	
  3532  16B8  2EBE               	goto	l6034
  3533                           	
  3534  16B9                     l11799:	
  3535  16B9  2EBE               	goto	l6034
  3536                           	
  3537  16BA                     l11801:	
  3538  16BA  2EBE               	goto	l6034
  3539                           	line	399
  3540                           	
  3541  16BB                     l6033:	
  3542                           	line	400
  3543                           	
  3544  16BB                     l11803:	
  3545                           ;main.c: 399: else
  3546                           ;main.c: 400: return 1;
  3547  16BB  1403               	setc
  3548                           	
  3549  16BC  2EBE               	goto	l6034
  3550                           	
  3551  16BD                     l11805:	
  3552  16BD  2EBE               	goto	l6034
  3553                           	
  3554  16BE                     l6035:	
  3555                           	line	401
  3556                           	
  3557  16BE                     l6034:	
  3558  16BE  0008               	return
  3559                           	opt stack 0
  3560                           GLOBAL	__end_of_findWall
  3561  16BF                     	__end_of_findWall:
  3562 ;; =============== function _findWall ends ============
  3563                           
  3564                           	signat	_findWall,88
  3565                           	global	_driveForDistance
  3566                           psect	text1881,local,class=CODE,delta=2
  3567                           global __ptext1881
  3568  01E4                     __ptext1881:
  3569                           
  3570 ;; *************** function _driveForDistance *****************
  3571 ;; Defined at:
  3572 ;;		line 31 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  moveDistance    2   22[BANK0 ] int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  distance        2   28[BANK0 ] int 
  3577 ;;  deltaDistanc    2   26[BANK0 ] int 
  3578 ;;  cliff           1   33[BANK0 ] volatile unsigned char 
  3579 ;;  virtualWall     1   32[BANK0 ] volatile unsigned char 
  3580 ;;  low             1   31[BANK0 ] volatile unsigned char 
  3581 ;;  high            1   30[BANK0 ] volatile unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;		None               void
  3584 ;; Registers used:
  3585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       2       0       0       0
  3592 ;;      Locals:         0       8       0       0       0
  3593 ;;      Temps:          0       2       0       0       0
  3594 ;;      Totals:         0      12       0       0       0
  3595 ;;Total ram usage:       12 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    5
  3598 ;; This function calls:
  3599 ;;		_drive
  3600 ;;		_ser_putch
  3601 ;;		_ser_getch
  3602 ;;		_goReverse
  3603 ;;		_turnRight90
  3604 ;;		_updateOrientation
  3605 ;;		_turnLeft90
  3606 ;;		_getCurrentY
  3607 ;;		_getCurrentX
  3608 ;;		_findFinalDestination
  3609 ;; This function is called by:
  3610 ;;		_goBackward
  3611 ;;		_goForward
  3612 ;;		_goLeft
  3613 ;;		_goRight
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           psect	text1881
  3617                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  3618                           	line	31
  3619                           	global	__size_of_driveForDistance
  3620  01AB                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  3621                           	
  3622  01E4                     _driveForDistance:	
  3623                           	opt	stack 0
  3624                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3625                           	line	34
  3626                           	
  3627  01E4                     l11711:	
  3628                           ;drive.c: 33: volatile char high, low, cliff, virtualWall;
  3629                           ;drive.c: 34: int deltaDistance = 0;
  3630  01E4  1283               	bcf	status, 5	;RP0=0, select bank0
  3631  01E5  1303               	bcf	status, 6	;RP1=0, select bank0
  3632  01E6  01BA               	clrf	(driveForDistance@deltaDistance)
  3633  01E7  01BB               	clrf	(driveForDistance@deltaDistance+1)
  3634                           	line	35
  3635                           ;drive.c: 35: int distance = 0;
  3636  01E8  01BC               	clrf	(driveForDistance@distance)
  3637  01E9  01BD               	clrf	(driveForDistance@distance+1)
  3638                           	line	37
  3639                           	
  3640  01EA                     l11713:	
  3641                           ;drive.c: 37: moving = 1;
  3642  01EA  1471               	bsf	(_moving/8),(_moving)&7
  3643                           	line	38
  3644                           	
  3645  01EB                     l11715:	
  3646                           ;drive.c: 38: drive(0, 250, 128, 0);
  3647  01EB  30FA               	movlw	(0FAh)
  3648  01EC  00B8               	movwf	(??_driveForDistance+0)+0
  3649  01ED  0838               	movf	(??_driveForDistance+0)+0,w
  3650  01EE  00AC               	movwf	(?_drive)
  3651  01EF  3080               	movlw	(080h)
  3652  01F0  00B9               	movwf	(??_driveForDistance+1)+0
  3653  01F1  0839               	movf	(??_driveForDistance+1)+0,w
  3654  01F2  00AD               	movwf	0+(?_drive)+01h
  3655  01F3  01AE               	clrf	0+(?_drive)+02h
  3656  01F4  3000               	movlw	(0)
  3657  01F5  120A  158A  215A   	fcall	_drive
              120A  118A         
  3658                           	line	39
  3659                           	
  3660  01FA                     l11717:	
  3661                           ;drive.c: 39: successfulDrive = 0;
  3662  01FA  1171               	bcf	(_successfulDrive/8),(_successfulDrive)&7
  3663                           	line	41
  3664                           ;drive.c: 41: while(moving)
  3665  01FB  2B89               	goto	l11793
  3666                           	
  3667  01FC                     l5085:	
  3668                           	line	43
  3669                           	
  3670  01FC                     l11719:	
  3671                           ;drive.c: 42: {
  3672                           ;drive.c: 43: if(distance >= 100)
  3673  01FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3674  01FD  1303               	bcf	status, 6	;RP1=0, select bank0
  3675  01FE  083D               	movf	(driveForDistance@distance+1),w
  3676  01FF  3A80               	xorlw	80h
  3677  0200  00FF               	movwf	btemp+1
  3678  0201  3080               	movlw	(high(064h))^80h
  3679  0202  027F               	subwf	btemp+1,w
  3680  0203  1D03               	skipz
  3681  0204  2A07               	goto	u6455
  3682  0205  3064               	movlw	low(064h)
  3683  0206  023C               	subwf	(driveForDistance@distance),w
  3684  0207                     u6455:
  3685                           
  3686  0207  1C03               	skipc
  3687  0208  2A0A               	goto	u6451
  3688  0209  2A0B               	goto	u6450
  3689  020A                     u6451:
  3690  020A  2ABD               	goto	l11755
  3691  020B                     u6450:
  3692                           	line	46
  3693                           	
  3694  020B                     l11721:	
  3695                           ;drive.c: 44: {
  3696                           ;drive.c: 46: ser_putch(142);
  3697  020B  308E               	movlw	(08Eh)
  3698  020C  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3699                           	line	47
  3700                           ;drive.c: 47: ser_putch(10);
  3701  0211  300A               	movlw	(0Ah)
  3702  0212  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3703                           	line	48
  3704                           ;drive.c: 48: cliff = ser_getch();
  3705  0217  160A  118A  2721   	fcall	_ser_getch
              120A  118A         
  3706  021C  1283               	bcf	status, 5	;RP0=0, select bank0
  3707  021D  1303               	bcf	status, 6	;RP1=0, select bank0
  3708  021E  00B8               	movwf	(??_driveForDistance+0)+0
  3709  021F  0838               	movf	(??_driveForDistance+0)+0,w
  3710  0220  00C1               	movwf	(driveForDistance@cliff)	;volatile
  3711                           	line	49
  3712                           	
  3713  0221                     l11723:	
  3714                           ;drive.c: 49: if(cliff == 0)
  3715  0221  08C1               	movf	(driveForDistance@cliff),f
  3716  0222  1D03               	skipz	;volatile
  3717  0223  2A25               	goto	u6461
  3718  0224  2A26               	goto	u6460
  3719  0225                     u6461:
  3720  0225  2A75               	goto	l11735
  3721  0226                     u6460:
  3722                           	line	51
  3723                           	
  3724  0226                     l11725:	
  3725                           ;drive.c: 50: {
  3726                           ;drive.c: 51: ser_putch(142);
  3727  0226  308E               	movlw	(08Eh)
  3728  0227  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3729                           	line	52
  3730                           ;drive.c: 52: ser_putch(11);
  3731  022C  300B               	movlw	(0Bh)
  3732  022D  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3733                           	line	53
  3734                           ;drive.c: 53: cliff = ser_getch();
  3735  0232  160A  118A  2721   	fcall	_ser_getch
              120A  118A         
  3736  0237  1283               	bcf	status, 5	;RP0=0, select bank0
  3737  0238  1303               	bcf	status, 6	;RP1=0, select bank0
  3738  0239  00B8               	movwf	(??_driveForDistance+0)+0
  3739  023A  0838               	movf	(??_driveForDistance+0)+0,w
  3740  023B  00C1               	movwf	(driveForDistance@cliff)	;volatile
  3741                           	line	54
  3742                           	
  3743  023C                     l11727:	
  3744                           ;drive.c: 54: if(cliff == 0)
  3745  023C  08C1               	movf	(driveForDistance@cliff),f
  3746  023D  1D03               	skipz	;volatile
  3747  023E  2A40               	goto	u6471
  3748  023F  2A41               	goto	u6470
  3749  0240                     u6471:
  3750  0240  2A75               	goto	l11735
  3751  0241                     u6470:
  3752                           	line	56
  3753                           	
  3754  0241                     l11729:	
  3755                           ;drive.c: 55: {
  3756                           ;drive.c: 56: ser_putch(142);
  3757  0241  308E               	movlw	(08Eh)
  3758  0242  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3759                           	line	57
  3760                           ;drive.c: 57: ser_putch(9);
  3761  0247  3009               	movlw	(09h)
  3762  0248  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3763                           	line	58
  3764                           ;drive.c: 58: cliff = ser_getch();
  3765  024D  160A  118A  2721   	fcall	_ser_getch
              120A  118A         
  3766  0252  1283               	bcf	status, 5	;RP0=0, select bank0
  3767  0253  1303               	bcf	status, 6	;RP1=0, select bank0
  3768  0254  00B8               	movwf	(??_driveForDistance+0)+0
  3769  0255  0838               	movf	(??_driveForDistance+0)+0,w
  3770  0256  00C1               	movwf	(driveForDistance@cliff)	;volatile
  3771                           	line	59
  3772                           	
  3773  0257                     l11731:	
  3774                           ;drive.c: 59: if(cliff == 0)
  3775  0257  08C1               	movf	(driveForDistance@cliff),f
  3776  0258  1D03               	skipz	;volatile
  3777  0259  2A5B               	goto	u6481
  3778  025A  2A5C               	goto	u6480
  3779  025B                     u6481:
  3780  025B  2A75               	goto	l11735
  3781  025C                     u6480:
  3782                           	line	61
  3783                           	
  3784  025C                     l11733:	
  3785                           ;drive.c: 60: {
  3786                           ;drive.c: 61: ser_putch(142);
  3787  025C  308E               	movlw	(08Eh)
  3788  025D  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3789                           	line	62
  3790                           ;drive.c: 62: ser_putch(12);
  3791  0262  300C               	movlw	(0Ch)
  3792  0263  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3793                           	line	63
  3794                           ;drive.c: 63: cliff = ser_getch();
  3795  0268  160A  118A  2721   	fcall	_ser_getch
              120A  118A         
  3796  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  3797  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  3798  026F  00B8               	movwf	(??_driveForDistance+0)+0
  3799  0270  0838               	movf	(??_driveForDistance+0)+0,w
  3800  0271  00C1               	movwf	(driveForDistance@cliff)	;volatile
  3801  0272  2A75               	goto	l11735
  3802                           	line	64
  3803                           	
  3804  0273                     l5089:	
  3805  0273  2A75               	goto	l11735
  3806                           	line	65
  3807                           	
  3808  0274                     l5088:	
  3809  0274  2A75               	goto	l11735
  3810                           	line	66
  3811                           	
  3812  0275                     l5087:	
  3813                           	line	67
  3814                           	
  3815  0275                     l11735:	
  3816                           ;drive.c: 64: }
  3817                           ;drive.c: 65: }
  3818                           ;drive.c: 66: }
  3819                           ;drive.c: 67: if(cliff == 1)
  3820  0275  0841               	movf	(driveForDistance@cliff),w	;volatile
  3821  0276  3A01               	xorlw	01h
  3822  0277  1D03               	skipz
  3823  0278  2A7A               	goto	u6491
  3824  0279  2A7B               	goto	u6490
  3825  027A                     u6491:
  3826  027A  2ABD               	goto	l11755
  3827  027B                     u6490:
  3828                           	line	69
  3829                           	
  3830  027B                     l11737:	
  3831                           ;drive.c: 68: {
  3832                           ;drive.c: 69: drive(0, 0, 0, 0);
  3833  027B  01AC               	clrf	(?_drive)
  3834  027C  01AD               	clrf	0+(?_drive)+01h
  3835  027D  01AE               	clrf	0+(?_drive)+02h
  3836  027E  3000               	movlw	(0)
  3837  027F  120A  158A  215A   	fcall	_drive
              120A  118A         
  3838                           	line	70
  3839                           ;drive.c: 70: goReverse();
  3840  0284  120A  158A  2459   	fcall	_goReverse
              120A  118A         
  3841                           	line	72
  3842                           	
  3843  0289                     l11739:	
  3844                           ;drive.c: 72: if(lastMove == LEFT)
  3845  0289  1283               	bcf	status, 5	;RP0=0, select bank0
  3846  028A  1303               	bcf	status, 6	;RP1=0, select bank0
  3847  028B  0860               	movf	(_lastMove),w	;volatile
  3848  028C  3A01               	xorlw	01h
  3849  028D  1D03               	skipz
  3850  028E  2A90               	goto	u6501
  3851  028F  2A91               	goto	u6500
  3852  0290                     u6501:
  3853  0290  2AA0               	goto	l11747
  3854  0291                     u6500:
  3855                           	line	74
  3856                           	
  3857  0291                     l11741:	
  3858                           ;drive.c: 73: {
  3859                           ;drive.c: 74: somethingInTheWay = LEFT;
  3860  0291  01E3               	clrf	(_somethingInTheWay)	;volatile
  3861  0292  1403               	bsf	status,0
  3862  0293  0DE3               	rlf	(_somethingInTheWay),f	;volatile
  3863                           	line	75
  3864                           	
  3865  0294                     l11743:	
  3866                           ;drive.c: 75: turnRight90();
  3867  0294  120A  158A  2201   	fcall	_turnRight90
              120A  118A         
  3868                           	line	76
  3869                           	
  3870  0299                     l11745:	
  3871                           ;drive.c: 76: updateOrientation(RIGHT);
  3872  0299  3003               	movlw	(03h)
  3873  029A  160A  118A  25F7   	fcall	_updateOrientation
              120A  118A         
  3874                           	line	77
  3875                           ;drive.c: 77: }
  3876  029F  2ABA               	goto	l5092
  3877                           	line	78
  3878                           	
  3879  02A0                     l5091:	
  3880                           	
  3881  02A0                     l11747:	
  3882                           ;drive.c: 78: else if (lastMove == RIGHT)
  3883  02A0  1283               	bcf	status, 5	;RP0=0, select bank0
  3884  02A1  1303               	bcf	status, 6	;RP1=0, select bank0
  3885  02A2  0860               	movf	(_lastMove),w	;volatile
  3886  02A3  3A03               	xorlw	03h
  3887  02A4  1D03               	skipz
  3888  02A5  2AA7               	goto	u6511
  3889  02A6  2AA8               	goto	u6510
  3890  02A7                     u6511:
  3891  02A7  2AB8               	goto	l5093
  3892  02A8                     u6510:
  3893                           	line	80
  3894                           	
  3895  02A8                     l11749:	
  3896                           ;drive.c: 79: {
  3897                           ;drive.c: 80: somethingInTheWay = RIGHT;
  3898  02A8  3003               	movlw	(03h)
  3899  02A9  00B8               	movwf	(??_driveForDistance+0)+0
  3900  02AA  0838               	movf	(??_driveForDistance+0)+0,w
  3901  02AB  00E3               	movwf	(_somethingInTheWay)	;volatile
  3902                           	line	81
  3903                           	
  3904  02AC                     l11751:	
  3905                           ;drive.c: 81: turnLeft90();
  3906  02AC  120A  158A  2191   	fcall	_turnLeft90
              120A  118A         
  3907                           	line	82
  3908                           	
  3909  02B1                     l11753:	
  3910                           ;drive.c: 82: updateOrientation(LEFT);
  3911  02B1  3001               	movlw	(01h)
  3912  02B2  160A  118A  25F7   	fcall	_updateOrientation
              120A  118A         
  3913                           	line	83
  3914                           ;drive.c: 83: }
  3915  02B7  2ABA               	goto	l5092
  3916                           	line	84
  3917                           	
  3918  02B8                     l5093:	
  3919                           	line	85
  3920                           ;drive.c: 84: else
  3921                           ;drive.c: 85: somethingInTheWay = FORWARD;
  3922  02B8  01E3               	clrf	(_somethingInTheWay)	;volatile
  3923  02B9  2ABA               	goto	l5092
  3924                           	
  3925  02BA                     l5094:	
  3926                           	
  3927  02BA                     l5092:	
  3928                           	line	86
  3929                           ;drive.c: 86: moving = 0;
  3930  02BA  1071               	bcf	(_moving/8),(_moving)&7
  3931  02BB  2ABD               	goto	l11755
  3932                           	line	87
  3933                           	
  3934  02BC                     l5090:	
  3935  02BC  2ABD               	goto	l11755
  3936                           	line	88
  3937                           	
  3938  02BD                     l5086:	
  3939                           	line	91
  3940                           	
  3941  02BD                     l11755:	
  3942                           ;drive.c: 87: }
  3943                           ;drive.c: 88: }
  3944                           ;drive.c: 91: ser_putch(142);
  3945  02BD  308E               	movlw	(08Eh)
  3946  02BE  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3947                           	line	92
  3948                           ;drive.c: 92: ser_putch(13);
  3949  02C3  300D               	movlw	(0Dh)
  3950  02C4  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  3951                           	line	93
  3952                           ;drive.c: 93: virtualWall = ser_getch();
  3953  02C9  160A  118A  2721   	fcall	_ser_getch
              120A  118A         
  3954  02CE  1283               	bcf	status, 5	;RP0=0, select bank0
  3955  02CF  1303               	bcf	status, 6	;RP1=0, select bank0
  3956  02D0  00B8               	movwf	(??_driveForDistance+0)+0
  3957  02D1  0838               	movf	(??_driveForDistance+0)+0,w
  3958  02D2  00C0               	movwf	(driveForDistance@virtualWall)	;volatile
  3959                           	line	94
  3960                           	
  3961  02D3                     l11757:	
  3962                           ;drive.c: 94: if(virtualWall == 1)
  3963  02D3  0840               	movf	(driveForDistance@virtualWall),w	;volatile
  3964  02D4  3A01               	xorlw	01h
  3965  02D5  1D03               	skipz
  3966  02D6  2AD8               	goto	u6521
  3967  02D7  2AD9               	goto	u6520
  3968  02D8                     u6521:
  3969  02D8  2B32               	goto	l11777
  3970  02D9                     u6520:
  3971                           	line	96
  3972                           	
  3973  02D9                     l11759:	
  3974                           ;drive.c: 95: {
  3975                           ;drive.c: 96: drive(0, 0, 0, 0);
  3976  02D9  01AC               	clrf	(?_drive)
  3977  02DA  01AD               	clrf	0+(?_drive)+01h
  3978  02DB  01AE               	clrf	0+(?_drive)+02h
  3979  02DC  3000               	movlw	(0)
  3980  02DD  120A  158A  215A   	fcall	_drive
              120A  118A         
  3981                           	line	97
  3982                           ;drive.c: 97: findFinalDestination(getCurrentX(),getCurrentY(), currentOrientation);
  3983  02E2  160A  118A  25C0   	fcall	_getCurrentY
              120A  118A         
  3984  02E7  1283               	bcf	status, 5	;RP0=0, select bank0
  3985  02E8  1303               	bcf	status, 6	;RP1=0, select bank0
  3986  02E9  00B8               	movwf	(??_driveForDistance+0)+0
  3987  02EA  0838               	movf	(??_driveForDistance+0)+0,w
  3988  02EB  00AE               	movwf	(?_findFinalDestination)
  3989  02EC  085D               	movf	(_currentOrientation),w	;volatile
  3990  02ED  00B9               	movwf	(??_driveForDistance+1)+0
  3991  02EE  0839               	movf	(??_driveForDistance+1)+0,w
  3992  02EF  00AF               	movwf	0+(?_findFinalDestination)+01h
  3993  02F0  160A  118A  25BB   	fcall	_getCurrentX
              120A  118A         
  3994  02F5  120A  118A  24CF   	fcall	_findFinalDestination
              120A  118A         
  3995                           	line	98
  3996                           ;drive.c: 98: goReverse();
  3997  02FA  120A  158A  2459   	fcall	_goReverse
              120A  118A         
  3998                           	line	100
  3999                           	
  4000  02FF                     l11761:	
  4001                           ;drive.c: 100: if(lastMove == LEFT)
  4002  02FF  1283               	bcf	status, 5	;RP0=0, select bank0
  4003  0300  1303               	bcf	status, 6	;RP1=0, select bank0
  4004  0301  0860               	movf	(_lastMove),w	;volatile
  4005  0302  3A01               	xorlw	01h
  4006  0303  1D03               	skipz
  4007  0304  2B06               	goto	u6531
  4008  0305  2B07               	goto	u6530
  4009  0306                     u6531:
  4010  0306  2B16               	goto	l11769
  4011  0307                     u6530:
  4012                           	line	102
  4013                           	
  4014  0307                     l11763:	
  4015                           ;drive.c: 101: {
  4016                           ;drive.c: 102: somethingInTheWay = LEFT;
  4017  0307  01E3               	clrf	(_somethingInTheWay)	;volatile
  4018  0308  1403               	bsf	status,0
  4019  0309  0DE3               	rlf	(_somethingInTheWay),f	;volatile
  4020                           	line	103
  4021                           	
  4022  030A                     l11765:	
  4023                           ;drive.c: 103: turnRight90();
  4024  030A  120A  158A  2201   	fcall	_turnRight90
              120A  118A         
  4025                           	line	104
  4026                           	
  4027  030F                     l11767:	
  4028                           ;drive.c: 104: updateOrientation(RIGHT);
  4029  030F  3003               	movlw	(03h)
  4030  0310  160A  118A  25F7   	fcall	_updateOrientation
              120A  118A         
  4031                           	line	105
  4032                           ;drive.c: 105: }
  4033  0315  2B30               	goto	l5097
  4034                           	line	106
  4035                           	
  4036  0316                     l5096:	
  4037                           	
  4038  0316                     l11769:	
  4039                           ;drive.c: 106: else if (lastMove == RIGHT)
  4040  0316  1283               	bcf	status, 5	;RP0=0, select bank0
  4041  0317  1303               	bcf	status, 6	;RP1=0, select bank0
  4042  0318  0860               	movf	(_lastMove),w	;volatile
  4043  0319  3A03               	xorlw	03h
  4044  031A  1D03               	skipz
  4045  031B  2B1D               	goto	u6541
  4046  031C  2B1E               	goto	u6540
  4047  031D                     u6541:
  4048  031D  2B2E               	goto	l5098
  4049  031E                     u6540:
  4050                           	line	108
  4051                           	
  4052  031E                     l11771:	
  4053                           ;drive.c: 107: {
  4054                           ;drive.c: 108: somethingInTheWay = RIGHT;
  4055  031E  3003               	movlw	(03h)
  4056  031F  00B8               	movwf	(??_driveForDistance+0)+0
  4057  0320  0838               	movf	(??_driveForDistance+0)+0,w
  4058  0321  00E3               	movwf	(_somethingInTheWay)	;volatile
  4059                           	line	109
  4060                           	
  4061  0322                     l11773:	
  4062                           ;drive.c: 109: turnLeft90();
  4063  0322  120A  158A  2191   	fcall	_turnLeft90
              120A  118A         
  4064                           	line	110
  4065                           	
  4066  0327                     l11775:	
  4067                           ;drive.c: 110: updateOrientation(LEFT);
  4068  0327  3001               	movlw	(01h)
  4069  0328  160A  118A  25F7   	fcall	_updateOrientation
              120A  118A         
  4070                           	line	111
  4071                           ;drive.c: 111: }
  4072  032D  2B30               	goto	l5097
  4073                           	line	112
  4074                           	
  4075  032E                     l5098:	
  4076                           	line	113
  4077                           ;drive.c: 112: else
  4078                           ;drive.c: 113: somethingInTheWay = FORWARD;
  4079  032E  01E3               	clrf	(_somethingInTheWay)	;volatile
  4080  032F  2B30               	goto	l5097
  4081                           	
  4082  0330                     l5099:	
  4083                           	
  4084  0330                     l5097:	
  4085                           	line	114
  4086                           ;drive.c: 114: moving = 0;
  4087  0330  1071               	bcf	(_moving/8),(_moving)&7
  4088  0331  2B32               	goto	l11777
  4089                           	line	115
  4090                           	
  4091  0332                     l5095:	
  4092                           	line	118
  4093                           	
  4094  0332                     l11777:	
  4095                           ;drive.c: 115: }
  4096                           ;drive.c: 118: ser_putch(142);
  4097  0332  308E               	movlw	(08Eh)
  4098  0333  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  4099                           	line	119
  4100                           ;drive.c: 119: ser_putch(19);
  4101  0338  3013               	movlw	(013h)
  4102  0339  160A  118A  26DF   	fcall	_ser_putch
              120A  118A         
  4103                           	line	120
  4104                           ;drive.c: 120: high = ser_getch();
  4105  033E  160A  118A  2721   	fcall	_ser_getch
              120A  118A         
  4106  0343  1283               	bcf	status, 5	;RP0=0, select bank0
  4107  0344  1303               	bcf	status, 6	;RP1=0, select bank0
  4108  0345  00B8               	movwf	(??_driveForDistance+0)+0
  4109  0346  0838               	movf	(??_driveForDistance+0)+0,w
  4110  0347  00BE               	movwf	(driveForDistance@high)	;volatile
  4111                           	line	121
  4112                           ;drive.c: 121: low = ser_getch();
  4113  0348  160A  118A  2721   	fcall	_ser_getch
              120A  118A         
  4114  034D  1283               	bcf	status, 5	;RP0=0, select bank0
  4115  034E  1303               	bcf	status, 6	;RP1=0, select bank0
  4116  034F  00B8               	movwf	(??_driveForDistance+0)+0
  4117  0350  0838               	movf	(??_driveForDistance+0)+0,w
  4118  0351  00BF               	movwf	(driveForDistance@low)	;volatile
  4119                           	line	122
  4120                           	
  4121  0352                     l11779:	
  4122                           ;drive.c: 122: deltaDistance = high*256 + low;
  4123  0352  083E               	movf	(driveForDistance@high),w	;volatile
  4124  0353  00B8               	movwf	(??_driveForDistance+0)+0
  4125  0354  01B9               	clrf	(??_driveForDistance+0)+0+1
  4126  0355  0838               	movf	(??_driveForDistance+0)+0,w
  4127  0356  00B9               	movwf	(??_driveForDistance+0)+1
  4128  0357  01B8               	clrf	(??_driveForDistance+0)+0
  4129  0358  083F               	movf	(driveForDistance@low),w	;volatile
  4130  0359  0738               	addwf	0+(??_driveForDistance+0)+0,w
  4131  035A  00BA               	movwf	(driveForDistance@deltaDistance)
  4132  035B  3000               	movlw	0
  4133  035C  1803               	skipnc
  4134  035D  3001               	movlw	1
  4135  035E  0739               	addwf	1+(??_driveForDistance+0)+0,w
  4136  035F  00BB               	movwf	1+(driveForDistance@deltaDistance)
  4137                           	line	123
  4138                           	
  4139  0360                     l11781:	
  4140                           ;drive.c: 123: distance += deltaDistance;
  4141  0360  083A               	movf	(driveForDistance@deltaDistance),w
  4142  0361  07BC               	addwf	(driveForDistance@distance),f
  4143  0362  1803               	skipnc
  4144  0363  0ABD               	incf	(driveForDistance@distance+1),f
  4145  0364  083B               	movf	(driveForDistance@deltaDistance+1),w
  4146  0365  07BD               	addwf	(driveForDistance@distance+1),f
  4147                           	line	124
  4148                           	
  4149  0366                     l11783:	
  4150                           ;drive.c: 124: if(distance >= moveDistance)
  4151  0366  083D               	movf	(driveForDistance@distance+1),w
  4152  0367  3A80               	xorlw	80h
  4153  0368  00B8               	movwf	(??_driveForDistance+0)+0
  4154  0369  0837               	movf	(driveForDistance@moveDistance+1),w
  4155  036A  3A80               	xorlw	80h
  4156  036B  0238               	subwf	(??_driveForDistance+0)+0,w
  4157  036C  1D03               	skipz
  4158  036D  2B70               	goto	u6555
  4159  036E  0836               	movf	(driveForDistance@moveDistance),w
  4160  036F  023C               	subwf	(driveForDistance@distance),w
  4161  0370                     u6555:
  4162                           
  4163  0370  1C03               	skipc
  4164  0371  2B73               	goto	u6551
  4165  0372  2B74               	goto	u6550
  4166  0373                     u6551:
  4167  0373  2B89               	goto	l11793
  4168  0374                     u6550:
  4169                           	line	126
  4170                           	
  4171  0374                     l11785:	
  4172                           ;drive.c: 125: {
  4173                           ;drive.c: 126: drive(0, 0, 0, 0);
  4174  0374  1283               	bcf	status, 5	;RP0=0, select bank0
  4175  0375  1303               	bcf	status, 6	;RP1=0, select bank0
  4176  0376  01AC               	clrf	(?_drive)
  4177  0377  01AD               	clrf	0+(?_drive)+01h
  4178  0378  01AE               	clrf	0+(?_drive)+02h
  4179  0379  3000               	movlw	(0)
  4180  037A  120A  158A  215A   	fcall	_drive
              120A  118A         
  4181                           	line	127
  4182                           	
  4183  037F                     l11787:	
  4184                           ;drive.c: 127: successfulDrive = 1;
  4185  037F  1571               	bsf	(_successfulDrive/8),(_successfulDrive)&7
  4186                           	line	128
  4187                           	
  4188  0380                     l11789:	
  4189                           ;drive.c: 128: moving = 0;
  4190  0380  1071               	bcf	(_moving/8),(_moving)&7
  4191                           	line	129
  4192                           	
  4193  0381                     l11791:	
  4194                           ;drive.c: 129: somethingInTheWay = BACKWARD;
  4195  0381  3002               	movlw	(02h)
  4196  0382  1283               	bcf	status, 5	;RP0=0, select bank0
  4197  0383  1303               	bcf	status, 6	;RP1=0, select bank0
  4198  0384  00B8               	movwf	(??_driveForDistance+0)+0
  4199  0385  0838               	movf	(??_driveForDistance+0)+0,w
  4200  0386  00E3               	movwf	(_somethingInTheWay)	;volatile
  4201  0387  2B89               	goto	l11793
  4202                           	line	130
  4203                           	
  4204  0388                     l5100:	
  4205  0388  2B89               	goto	l11793
  4206                           	line	131
  4207                           	
  4208  0389                     l5084:	
  4209                           	line	41
  4210                           	
  4211  0389                     l11793:	
  4212  0389  1871               	btfsc	(_moving/8),(_moving)&7
  4213  038A  2B8C               	goto	u6561
  4214  038B  2B8D               	goto	u6560
  4215  038C                     u6561:
  4216  038C  29FC               	goto	l11719
  4217  038D                     u6560:
  4218  038D  2B8E               	goto	l5102
  4219                           	
  4220  038E                     l5101:	
  4221                           	line	132
  4222                           	
  4223  038E                     l5102:	
  4224  038E  0008               	return
  4225                           	opt stack 0
  4226                           GLOBAL	__end_of_driveForDistance
  4227  038F                     	__end_of_driveForDistance:
  4228 ;; =============== function _driveForDistance ends ============
  4229                           
  4230                           	signat	_driveForDistance,4216
  4231                           	global	_updateLocation
  4232                           psect	text1882,local,class=CODE,delta=2
  4233                           global __ptext1882
  4234  0CEC                     __ptext1882:
  4235                           
  4236 ;; *************** function _updateLocation *****************
  4237 ;; Defined at:
  4238 ;;		line 284 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0
  4254 ;;      Temps:          0       1       0       0       0
  4255 ;;      Totals:         0       1       0       0       0
  4256 ;;Total ram usage:        1 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    4
  4259 ;; This function calls:
  4260 ;;		_lcd_set_cursor
  4261 ;;		_lcd_write_data
  4262 ;;		_getOrientation
  4263 ;;		_lcd_write_1_digit_bcd
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           psect	text1882
  4269                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4270                           	line	284
  4271                           	global	__size_of_updateLocation
  4272  0068                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  4273                           	
  4274  0CEC                     _updateLocation:	
  4275                           	opt	stack 3
  4276                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4277                           	line	285
  4278                           	
  4279  0CEC                     l11687:	
  4280                           ;main.c: 285: lcd_set_cursor(0x40);
  4281  0CEC  3040               	movlw	(040h)
  4282  0CED  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  4283                           	line	286
  4284                           ;main.c: 286: switch(getOrientation())
  4285  0CF2  2D25               	goto	l11707
  4286                           	line	288
  4287                           ;main.c: 287: {
  4288                           ;main.c: 288: case NORTH:
  4289                           	
  4290  0CF3                     l6000:	
  4291                           	line	289
  4292                           	
  4293  0CF3                     l11689:	
  4294                           ;main.c: 289: ++yCoord;
  4295  0CF3  3001               	movlw	(01h)
  4296  0CF4  1283               	bcf	status, 5	;RP0=0, select bank0
  4297  0CF5  1303               	bcf	status, 6	;RP1=0, select bank0
  4298  0CF6  00AE               	movwf	(??_updateLocation+0)+0
  4299  0CF7  082E               	movf	(??_updateLocation+0)+0,w
  4300  0CF8  07E5               	addwf	(_yCoord),f	;volatile
  4301                           	line	290
  4302                           	
  4303  0CF9                     l11691:	
  4304                           ;main.c: 290: lcd_write_data('N');
  4305  0CF9  304E               	movlw	(04Eh)
  4306  0CFA  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  4307                           	line	291
  4308                           ;main.c: 291: break;
  4309  0CFF  2D37               	goto	l11709
  4310                           	line	292
  4311                           ;main.c: 292: case SOUTH:
  4312                           	
  4313  0D00                     l6002:	
  4314                           	line	293
  4315                           	
  4316  0D00                     l11693:	
  4317                           ;main.c: 293: --yCoord;
  4318  0D00  3001               	movlw	low(01h)
  4319  0D01  1283               	bcf	status, 5	;RP0=0, select bank0
  4320  0D02  1303               	bcf	status, 6	;RP1=0, select bank0
  4321  0D03  02E5               	subwf	(_yCoord),f	;volatile
  4322                           	line	294
  4323                           	
  4324  0D04                     l11695:	
  4325                           ;main.c: 294: lcd_write_data('S');
  4326  0D04  3053               	movlw	(053h)
  4327  0D05  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  4328                           	line	295
  4329                           ;main.c: 295: break;
  4330  0D0A  2D37               	goto	l11709
  4331                           	line	296
  4332                           ;main.c: 296: case EAST:
  4333                           	
  4334  0D0B                     l6003:	
  4335                           	line	297
  4336                           	
  4337  0D0B                     l11697:	
  4338                           ;main.c: 297: ++xCoord;
  4339  0D0B  3001               	movlw	(01h)
  4340  0D0C  1283               	bcf	status, 5	;RP0=0, select bank0
  4341  0D0D  1303               	bcf	status, 6	;RP1=0, select bank0
  4342  0D0E  00AE               	movwf	(??_updateLocation+0)+0
  4343  0D0F  082E               	movf	(??_updateLocation+0)+0,w
  4344  0D10  07E4               	addwf	(_xCoord),f	;volatile
  4345                           	line	298
  4346                           	
  4347  0D11                     l11699:	
  4348                           ;main.c: 298: lcd_write_data('E');
  4349  0D11  3045               	movlw	(045h)
  4350  0D12  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  4351                           	line	299
  4352                           ;main.c: 299: break;
  4353  0D17  2D37               	goto	l11709
  4354                           	line	300
  4355                           ;main.c: 300: case WEST:
  4356                           	
  4357  0D18                     l6004:	
  4358                           	line	301
  4359                           	
  4360  0D18                     l11701:	
  4361                           ;main.c: 301: --xCoord;
  4362  0D18  3001               	movlw	low(01h)
  4363  0D19  1283               	bcf	status, 5	;RP0=0, select bank0
  4364  0D1A  1303               	bcf	status, 6	;RP1=0, select bank0
  4365  0D1B  02E4               	subwf	(_xCoord),f	;volatile
  4366                           	line	302
  4367                           	
  4368  0D1C                     l11703:	
  4369                           ;main.c: 302: lcd_write_data('W');
  4370  0D1C  3057               	movlw	(057h)
  4371  0D1D  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  4372                           	line	303
  4373                           ;main.c: 303: break;
  4374  0D22  2D37               	goto	l11709
  4375                           	line	304
  4376                           ;main.c: 304: default:
  4377                           	
  4378  0D23                     l6005:	
  4379                           	line	305
  4380                           ;main.c: 305: break;
  4381  0D23  2D37               	goto	l11709
  4382                           	line	306
  4383                           	
  4384  0D24                     l11705:	
  4385                           ;main.c: 306: }
  4386  0D24  2D37               	goto	l11709
  4387                           	line	286
  4388                           	
  4389  0D25                     l5999:	
  4390                           	
  4391  0D25                     l11707:	
  4392  0D25  160A  118A  25C5   	fcall	_getOrientation
              120A  158A         
  4393                           	; Switch size 1, requested type "space"
  4394                           ; Number of cases is 4, Range of values is 0 to 3
  4395                           ; switch strategies available:
  4396                           ; Name         Instructions Cycles
  4397                           ; simple_byte           13     7 (average)
  4398                           ; direct_byte           20     8 (fixed)
  4399                           ; jumptable            260     6 (fixed)
  4400                           ; rangetable             8     6 (fixed)
  4401                           ; spacedrange           14     9 (fixed)
  4402                           ; locatedrange           4     3 (fixed)
  4403                           ;	Chosen strategy is simple_byte
  4404                           
  4405                           	opt asmopt_off
  4406  0D2A  3A00               	xorlw	0^0	; case 0
  4407  0D2B  1903               	skipnz
  4408  0D2C  2D18               	goto	l11701
  4409  0D2D  3A01               	xorlw	1^0	; case 1
  4410  0D2E  1903               	skipnz
  4411  0D2F  2D00               	goto	l11693
  4412  0D30  3A03               	xorlw	2^1	; case 2
  4413  0D31  1903               	skipnz
  4414  0D32  2D0B               	goto	l11697
  4415  0D33  3A01               	xorlw	3^2	; case 3
  4416  0D34  1903               	skipnz
  4417  0D35  2CF3               	goto	l11689
  4418  0D36  2D37               	goto	l11709
  4419                           	opt asmopt_on
  4420                           
  4421                           	line	306
  4422                           	
  4423  0D37                     l6001:	
  4424                           	line	308
  4425                           	
  4426  0D37                     l11709:	
  4427                           ;main.c: 308: lcd_set_cursor(0x01);
  4428  0D37  3001               	movlw	(01h)
  4429  0D38  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  4430                           	line	309
  4431                           ;main.c: 309: lcd_write_1_digit_bcd(xCoord);
  4432  0D3D  1283               	bcf	status, 5	;RP0=0, select bank0
  4433  0D3E  1303               	bcf	status, 6	;RP1=0, select bank0
  4434  0D3F  0864               	movf	(_xCoord),w	;volatile
  4435  0D40  160A  118A  25EC   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  4436                           	line	310
  4437                           ;main.c: 310: lcd_set_cursor(0x03);
  4438  0D45  3003               	movlw	(03h)
  4439  0D46  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  4440                           	line	311
  4441                           ;main.c: 311: lcd_write_1_digit_bcd(yCoord);
  4442  0D4B  1283               	bcf	status, 5	;RP0=0, select bank0
  4443  0D4C  1303               	bcf	status, 6	;RP1=0, select bank0
  4444  0D4D  0865               	movf	(_yCoord),w	;volatile
  4445  0D4E  160A  118A  25EC   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  4446                           	line	312
  4447                           	
  4448  0D53                     l6006:	
  4449  0D53  0008               	return
  4450                           	opt stack 0
  4451                           GLOBAL	__end_of_updateLocation
  4452  0D54                     	__end_of_updateLocation:
  4453 ;; =============== function _updateLocation ends ============
  4454                           
  4455                           	signat	_updateLocation,88
  4456                           	global	_lookForVictim
  4457                           psect	text1883,local,class=CODE,delta=2
  4458                           global __ptext1883
  4459  08F1                     __ptext1883:
  4460                           
  4461 ;; *************** function _lookForVictim *****************
  4462 ;; Defined at:
  4463 ;;		line 149 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  victim          1   15[BANK0 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;		None               void
  4470 ;; Registers used:
  4471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4477 ;;      Params:         0       0       0       0       0
  4478 ;;      Locals:         0       1       0       0       0
  4479 ;;      Temps:          0       1       0       0       0
  4480 ;;      Totals:         0       2       0       0       0
  4481 ;;Total ram usage:        2 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    4
  4484 ;; This function calls:
  4485 ;;		_ser_putch
  4486 ;;		_ser_getch
  4487 ;;		_play_iCreate_song
  4488 ;;		_lcd_set_cursor
  4489 ;;		_lcd_write_data
  4490 ;; This function is called by:
  4491 ;;		_main
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           psect	text1883
  4495                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4496                           	line	149
  4497                           	global	__size_of_lookForVictim
  4498  0033                     	__size_of_lookForVictim	equ	__end_of_lookForVictim-_lookForVictim
  4499                           	
  4500  08F1                     _lookForVictim:	
  4501                           	opt	stack 3
  4502                           ; Regs used in _lookForVictim: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4503                           	line	150
  4504                           	
  4505  08F1                     l11675:	
  4506                           ;main.c: 150: ser_putch(142);
  4507  08F1  308E               	movlw	(08Eh)
  4508  08F2  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  4509                           	line	151
  4510                           ;main.c: 151: ser_putch(17);
  4511  08F7  3011               	movlw	(011h)
  4512  08F8  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  4513                           	line	152
  4514                           ;main.c: 152: char victim = ser_getch();
  4515  08FD  160A  118A  2721   	fcall	_ser_getch
              120A  158A         
  4516  0902  1283               	bcf	status, 5	;RP0=0, select bank0
  4517  0903  1303               	bcf	status, 6	;RP1=0, select bank0
  4518  0904  00AE               	movwf	(??_lookForVictim+0)+0
  4519  0905  082E               	movf	(??_lookForVictim+0)+0,w
  4520  0906  00AF               	movwf	(lookForVictim@victim)
  4521                           	line	154
  4522                           	
  4523  0907                     l11677:	
  4524                           ;main.c: 154: if(victim == 254)
  4525  0907  082F               	movf	(lookForVictim@victim),w
  4526  0908  3AFE               	xorlw	0FEh
  4527  0909  1D03               	skipz
  4528  090A  290C               	goto	u6441
  4529  090B  290D               	goto	u6440
  4530  090C                     u6441:
  4531  090C  2923               	goto	l5970
  4532  090D                     u6440:
  4533                           	line	158
  4534                           	
  4535  090D                     l11679:	
  4536                           ;main.c: 155: {
  4537                           ;main.c: 158: play_iCreate_song(3);
  4538  090D  3003               	movlw	(03h)
  4539  090E  160A  118A  2608   	fcall	_play_iCreate_song
              120A  158A         
  4540                           	line	159
  4541                           	
  4542  0913                     l11681:	
  4543                           ;main.c: 159: victimZone = 0;
  4544  0913  1683               	bsf	status, 5	;RP0=1, select bank1
  4545  0914  1303               	bcf	status, 6	;RP1=0, select bank1
  4546  0915  01C8               	clrf	(_victimZone)^080h	;volatile
  4547                           	line	160
  4548                           	
  4549  0916                     l11683:	
  4550                           ;main.c: 160: lcd_set_cursor(0x09);
  4551  0916  3009               	movlw	(09h)
  4552  0917  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  4553                           	line	161
  4554                           	
  4555  091C                     l11685:	
  4556                           ;main.c: 161: lcd_write_data('V');
  4557  091C  3056               	movlw	(056h)
  4558  091D  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  4559  0922  2923               	goto	l5970
  4560                           	line	169
  4561                           	
  4562  0923                     l5969:	
  4563                           	line	170
  4564                           	
  4565  0923                     l5970:	
  4566  0923  0008               	return
  4567                           	opt stack 0
  4568                           GLOBAL	__end_of_lookForVictim
  4569  0924                     	__end_of_lookForVictim:
  4570 ;; =============== function _lookForVictim ends ============
  4571                           
  4572                           	signat	_lookForVictim,88
  4573                           	global	_checkForFinalDestination
  4574                           psect	text1884,local,class=CODE,delta=2
  4575                           global __ptext1884
  4576  08C0                     __ptext1884:
  4577                           
  4578 ;; *************** function _checkForFinalDestination *****************
  4579 ;; Defined at:
  4580 ;;		line 138 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;		None               void
  4587 ;; Registers used:
  4588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4594 ;;      Params:         0       0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0
  4597 ;;      Totals:         0       0       0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    4
  4601 ;; This function calls:
  4602 ;;		_getFinalX
  4603 ;;		_getFinalY
  4604 ;;		_play_iCreate_song
  4605 ;;		_lcd_set_cursor
  4606 ;;		_lcd_write_data
  4607 ;; This function is called by:
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           psect	text1884
  4612                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4613                           	line	138
  4614                           	global	__size_of_checkForFinalDestination
  4615  0031                     	__size_of_checkForFinalDestination	equ	__end_of_checkForFinalDestination-_checkForFinal
                                 Destination
  4616                           	
  4617  08C0                     _checkForFinalDestination:	
  4618                           	opt	stack 3
  4619                           ; Regs used in _checkForFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4620                           	line	139
  4621                           	
  4622  08C0                     l11661:	
  4623                           ;main.c: 139: if(!goingHome && (xCoord == getFinalX()) && (yCoord == getFinalY()))
  4624  08C0  1AF0               	btfsc	(_goingHome/8),(_goingHome)&7
  4625  08C1  28C3               	goto	u6411
  4626  08C2  28C4               	goto	u6410
  4627  08C3                     u6411:
  4628  08C3  28F0               	goto	l5966
  4629  08C4                     u6410:
  4630                           	
  4631  08C4                     l11663:	
  4632  08C4  160A  118A  25B1   	fcall	_getFinalX
              120A  158A         
  4633  08C9  1283               	bcf	status, 5	;RP0=0, select bank0
  4634  08CA  1303               	bcf	status, 6	;RP1=0, select bank0
  4635  08CB  0664               	xorwf	(_xCoord),w	;volatile
  4636  08CC  1D03               	skipz
  4637  08CD  28CF               	goto	u6421
  4638  08CE  28D0               	goto	u6420
  4639  08CF                     u6421:
  4640  08CF  28F0               	goto	l5966
  4641  08D0                     u6420:
  4642                           	
  4643  08D0                     l11665:	
  4644  08D0  160A  118A  25B6   	fcall	_getFinalY
              120A  158A         
  4645  08D5  1283               	bcf	status, 5	;RP0=0, select bank0
  4646  08D6  1303               	bcf	status, 6	;RP1=0, select bank0
  4647  08D7  0665               	xorwf	(_yCoord),w	;volatile
  4648  08D8  1D03               	skipz
  4649  08D9  28DB               	goto	u6431
  4650  08DA  28DC               	goto	u6430
  4651  08DB                     u6431:
  4652  08DB  28F0               	goto	l5966
  4653  08DC                     u6430:
  4654                           	line	141
  4655                           	
  4656  08DC                     l11667:	
  4657                           ;main.c: 140: {
  4658                           ;main.c: 141: play_iCreate_song(2);
  4659  08DC  3002               	movlw	(02h)
  4660  08DD  160A  118A  2608   	fcall	_play_iCreate_song
              120A  158A         
  4661                           	line	142
  4662                           	
  4663  08E2                     l11669:	
  4664                           ;main.c: 142: goingHome = 1;
  4665  08E2  16F0               	bsf	(_goingHome/8),(_goingHome)&7
  4666                           	line	143
  4667                           	
  4668  08E3                     l11671:	
  4669                           ;main.c: 143: lcd_set_cursor(0x06);
  4670  08E3  3006               	movlw	(06h)
  4671  08E4  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  4672                           	line	144
  4673                           	
  4674  08E9                     l11673:	
  4675                           ;main.c: 144: lcd_write_data('R');
  4676  08E9  3052               	movlw	(052h)
  4677  08EA  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  4678  08EF  28F0               	goto	l5966
  4679                           	line	145
  4680                           	
  4681  08F0                     l5965:	
  4682                           	line	146
  4683                           	
  4684  08F0                     l5966:	
  4685  08F0  0008               	return
  4686                           	opt stack 0
  4687                           GLOBAL	__end_of_checkForFinalDestination
  4688  08F1                     	__end_of_checkForFinalDestination:
  4689 ;; =============== function _checkForFinalDestination ends ============
  4690                           
  4691                           	signat	_checkForFinalDestination,88
  4692                           	global	_init
  4693                           psect	text1885,local,class=CODE,delta=2
  4694                           global __ptext1885
  4695  0924                     __ptext1885:
  4696                           
  4697 ;; *************** function _init *****************
  4698 ;; Defined at:
  4699 ;;		line 101 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;		None               void
  4706 ;; Registers used:
  4707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4713 ;;      Params:         0       0       0       0       0
  4714 ;;      Locals:         0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0
  4716 ;;      Totals:         0       0       0       0       0
  4717 ;;Total ram usage:        0 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    5
  4720 ;; This function calls:
  4721 ;;		_init_adc
  4722 ;;		_lcd_init
  4723 ;;		_ser_init
  4724 ;;		_initIRobot
  4725 ;;		_initSongs
  4726 ;; This function is called by:
  4727 ;;		_main
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           psect	text1885
  4731                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  4732                           	line	101
  4733                           	global	__size_of_init
  4734  0036                     	__size_of_init	equ	__end_of_init-_init
  4735                           	
  4736  0924                     _init:	
  4737                           	opt	stack 2
  4738                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4739                           	line	102
  4740                           	
  4741  0924                     l11629:	
  4742                           ;main.c: 102: start.pressed = 0;
  4743  0924  1683               	bsf	status, 5	;RP0=1, select bank1
  4744  0925  1303               	bcf	status, 6	;RP1=0, select bank1
  4745  0926  01C0               	clrf	(_start)^080h
  4746                           	line	103
  4747                           	
  4748  0927                     l11631:	
  4749                           ;main.c: 103: start.released = 1;
  4750  0927  01C1               	clrf	0+(_start)^080h+01h
  4751  0928  1403               	bsf	status,0
  4752  0929  0DC1               	rlf	0+(_start)^080h+01h,f
  4753                           	line	105
  4754                           	
  4755  092A                     l11633:	
  4756                           ;main.c: 105: init_adc();
  4757  092A  120A  118A  27EA   	fcall	_init_adc
              120A  158A         
  4758                           	line	106
  4759                           	
  4760  092F                     l11635:	
  4761                           ;main.c: 106: lcd_init();
  4762  092F  120A  158A  2069   	fcall	_lcd_init
              120A  158A         
  4763                           	line	108
  4764                           	
  4765  0934                     l11637:	
  4766                           ;main.c: 108: TRISB = 0b00000001;
  4767  0934  3001               	movlw	(01h)
  4768  0935  1683               	bsf	status, 5	;RP0=1, select bank1
  4769  0936  1303               	bcf	status, 6	;RP1=0, select bank1
  4770  0937  0086               	movwf	(134)^080h	;volatile
  4771                           	line	111
  4772                           	
  4773  0938                     l11639:	
  4774                           ;main.c: 111: OPTION_REG = 0b00000100;
  4775  0938  3004               	movlw	(04h)
  4776  0939  0081               	movwf	(129)^080h	;volatile
  4777                           	line	113
  4778                           	
  4779  093A                     l11641:	
  4780                           ;main.c: 113: TMR0IE = 1;
  4781  093A  168B               	bsf	(93/8),(93)&7
  4782                           	line	114
  4783                           	
  4784  093B                     l11643:	
  4785                           ;main.c: 114: SSPSTAT = 0b01000000;
  4786  093B  3040               	movlw	(040h)
  4787  093C  0094               	movwf	(148)^080h	;volatile
  4788                           	line	115
  4789                           	
  4790  093D                     l11645:	
  4791                           ;main.c: 115: SSPCON = 0b00100010;
  4792  093D  3022               	movlw	(022h)
  4793  093E  1283               	bcf	status, 5	;RP0=0, select bank0
  4794  093F  1303               	bcf	status, 6	;RP1=0, select bank0
  4795  0940  0094               	movwf	(20)	;volatile
  4796                           	line	116
  4797                           	
  4798  0941                     l11647:	
  4799                           ;main.c: 116: TRISC = 0b10010000;
  4800  0941  3090               	movlw	(090h)
  4801  0942  1683               	bsf	status, 5	;RP0=1, select bank1
  4802  0943  1303               	bcf	status, 6	;RP1=0, select bank1
  4803  0944  0087               	movwf	(135)^080h	;volatile
  4804                           	line	117
  4805                           	
  4806  0945                     l11649:	
  4807                           ;main.c: 117: PORTC = 0b00000000;
  4808  0945  1283               	bcf	status, 5	;RP0=0, select bank0
  4809  0946  1303               	bcf	status, 6	;RP1=0, select bank0
  4810  0947  0187               	clrf	(7)	;volatile
  4811                           	line	120
  4812                           	
  4813  0948                     l11651:	
  4814                           ;main.c: 120: PEIE = 1;
  4815  0948  170B               	bsf	(94/8),(94)&7
  4816                           	line	121
  4817                           	
  4818  0949                     l11653:	
  4819                           ;main.c: 121: GIE = 1;
  4820  0949  178B               	bsf	(95/8),(95)&7
  4821                           	line	123
  4822                           	
  4823  094A                     l11655:	
  4824                           ;main.c: 123: ser_init();
  4825  094A  160A  118A  27D8   	fcall	_ser_init
              120A  158A         
  4826                           	line	124
  4827                           	
  4828  094F                     l11657:	
  4829                           ;main.c: 124: initIRobot();
  4830  094F  160A  118A  2687   	fcall	_initIRobot
              120A  158A         
  4831                           	line	125
  4832                           	
  4833  0954                     l11659:	
  4834                           ;main.c: 125: initSongs();
  4835  0954  120A  158A  24A0   	fcall	_initSongs
              120A  158A         
  4836                           	line	126
  4837                           	
  4838  0959                     l5959:	
  4839  0959  0008               	return
  4840                           	opt stack 0
  4841                           GLOBAL	__end_of_init
  4842  095A                     	__end_of_init:
  4843 ;; =============== function _init ends ============
  4844                           
  4845                           	signat	_init,88
  4846                           	global	_goReverse
  4847                           psect	text1886,local,class=CODE,delta=2
  4848                           global __ptext1886
  4849  0C59                     __ptext1886:
  4850                           
  4851 ;; *************** function _goReverse *****************
  4852 ;; Defined at:
  4853 ;;		line 187 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;		None               void
  4860 ;; Registers used:
  4861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0
  4869 ;;      Temps:          0       3       0       0       0
  4870 ;;      Totals:         0       3       0       0       0
  4871 ;;Total ram usage:        3 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    4
  4874 ;; This function calls:
  4875 ;;		_lcd_set_cursor
  4876 ;;		_lcd_write_data
  4877 ;;		_drive
  4878 ;;		_waitFor
  4879 ;; This function is called by:
  4880 ;;		_driveForDistance
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           psect	text1886
  4884                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  4885                           	line	187
  4886                           	global	__size_of_goReverse
  4887  0047                     	__size_of_goReverse	equ	__end_of_goReverse-_goReverse
  4888                           	
  4889  0C59                     _goReverse:	
  4890                           	opt	stack 0
  4891                           ; Regs used in _goReverse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4892                           	line	188
  4893                           	
  4894  0C59                     l11619:	
  4895                           ;drive.c: 188: lcd_set_cursor(0x0F);
  4896  0C59  300F               	movlw	(0Fh)
  4897  0C5A  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  158A         
  4898                           	line	189
  4899                           ;drive.c: 189: lcd_write_data('!');
  4900  0C5F  3021               	movlw	(021h)
  4901  0C60  160A  118A  261A   	fcall	_lcd_write_data
              120A  158A         
  4902                           	line	190
  4903                           	
  4904  0C65                     l11621:	
  4905                           ;drive.c: 190: drive(255, 125, 128, 0);
  4906  0C65  307D               	movlw	(07Dh)
  4907  0C66  1283               	bcf	status, 5	;RP0=0, select bank0
  4908  0C67  1303               	bcf	status, 6	;RP1=0, select bank0
  4909  0C68  00B3               	movwf	(??_goReverse+0)+0
  4910  0C69  0833               	movf	(??_goReverse+0)+0,w
  4911  0C6A  00AC               	movwf	(?_drive)
  4912  0C6B  3080               	movlw	(080h)
  4913  0C6C  00B4               	movwf	(??_goReverse+1)+0
  4914  0C6D  0834               	movf	(??_goReverse+1)+0,w
  4915  0C6E  00AD               	movwf	0+(?_drive)+01h
  4916  0C6F  01AE               	clrf	0+(?_drive)+02h
  4917  0C70  30FF               	movlw	(0FFh)
  4918  0C71  120A  158A  215A   	fcall	_drive
              120A  158A         
  4919                           	line	191
  4920                           	
  4921  0C76                     l11623:	
  4922                           ;drive.c: 191: waitFor(156,254,12);
  4923  0C76  30FE               	movlw	(0FEh)
  4924  0C77  1283               	bcf	status, 5	;RP0=0, select bank0
  4925  0C78  1303               	bcf	status, 6	;RP1=0, select bank0
  4926  0C79  00B3               	movwf	(??_goReverse+0)+0
  4927  0C7A  0833               	movf	(??_goReverse+0)+0,w
  4928  0C7B  00AC               	movwf	(?_waitFor)
  4929  0C7C  300C               	movlw	(0Ch)
  4930  0C7D  00B4               	movwf	(??_goReverse+1)+0
  4931  0C7E  0834               	movf	(??_goReverse+1)+0,w
  4932  0C7F  00AD               	movwf	0+(?_waitFor)+01h
  4933  0C80  309C               	movlw	(09Ch)
  4934  0C81  120A  158A  2017   	fcall	_waitFor
              120A  158A         
  4935                           	line	192
  4936                           	
  4937  0C86                     l11625:	
  4938                           ;drive.c: 192: drive(0, 0, 0, 0);
  4939  0C86  1283               	bcf	status, 5	;RP0=0, select bank0
  4940  0C87  1303               	bcf	status, 6	;RP1=0, select bank0
  4941  0C88  01AC               	clrf	(?_drive)
  4942  0C89  01AD               	clrf	0+(?_drive)+01h
  4943  0C8A  01AE               	clrf	0+(?_drive)+02h
  4944  0C8B  3000               	movlw	(0)
  4945  0C8C  120A  158A  215A   	fcall	_drive
              120A  158A         
  4946                           	line	193
  4947                           	
  4948  0C91                     l11627:	
  4949                           ;drive.c: 193: _delay((unsigned long)((2000)*(20000000/4000.0)));
  4950                           	opt asmopt_off
  4951  0C91  3033               movlw  51
  4952  0C92  1283               	bcf	status, 5	;RP0=0, select bank0
  4953  0C93  1303               	bcf	status, 6	;RP1=0, select bank0
  4954  0C94  00B5               movwf	((??_goReverse+0)+0+2),f
  4955  0C95  30BC               movlw	188
  4956  0C96  00B4               movwf	((??_goReverse+0)+0+1),f
  4957  0C97  3010               	movlw	16
  4958  0C98  00B3               movwf	((??_goReverse+0)+0),f
  4959  0C99                     u6837:
  4960  0C99  0BB3               	decfsz	((??_goReverse+0)+0),f
  4961  0C9A  2C99               	goto	u6837
  4962  0C9B  0BB4               	decfsz	((??_goReverse+0)+0+1),f
  4963  0C9C  2C99               	goto	u6837
  4964  0C9D  0BB5               	decfsz	((??_goReverse+0)+0+2),f
  4965  0C9E  2C99               	goto	u6837
  4966                           opt asmopt_on
  4967                           
  4968                           	line	194
  4969                           	
  4970  0C9F                     l5126:	
  4971  0C9F  0008               	return
  4972                           	opt stack 0
  4973                           GLOBAL	__end_of_goReverse
  4974  0CA0                     	__end_of_goReverse:
  4975 ;; =============== function _goReverse ends ============
  4976                           
  4977                           	signat	_goReverse,88
  4978                           	global	_readIR
  4979                           psect	text1887,local,class=CODE,delta=2
  4980                           global __ptext1887
  4981  1743                     __ptext1887:
  4982                           
  4983 ;; *************** function _readIR *****************
  4984 ;; Defined at:
  4985 ;;		line 33 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ir.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  cm              2   43[BANK0 ] int 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2   41[BANK0 ] int 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4999 ;;      Params:         0       2       0       0       0
  5000 ;;      Locals:         0       2       0       0       0
  5001 ;;      Temps:          0       0       0       0       0
  5002 ;;      Totals:         0       4       0       0       0
  5003 ;;Total ram usage:        4 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    5
  5006 ;; This function calls:
  5007 ;;		_adc_read_channel
  5008 ;;		_convert
  5009 ;; This function is called by:
  5010 ;;		_goParallel
  5011 ;;		_findWall
  5012 ;;		_frontWallCorrect
  5013 ;;		_scanIR
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           psect	text1887
  5017                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ir.c"
  5018                           	line	33
  5019                           	global	__size_of_readIR
  5020  0023                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  5021                           	
  5022  1743                     _readIR:	
  5023                           	opt	stack 1
  5024                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5025                           	line	34
  5026                           	
  5027  1743                     l11613:	
  5028                           ;ir.c: 34: int cm = convert(adc_read_channel(0));
  5029  1743  3000               	movlw	(0)
  5030  1744  120A  158A  227E   	fcall	_adc_read_channel
              160A  118A         
  5031  1749  1283               	bcf	status, 5	;RP0=0, select bank0
  5032  174A  1303               	bcf	status, 6	;RP1=0, select bank0
  5033  174B  0846               	movf	(1+(?_adc_read_channel)),w
  5034  174C  01C2               	clrf	(?_convert+1)
  5035  174D  07C2               	addwf	(?_convert+1)
  5036  174E  0845               	movf	(0+(?_adc_read_channel)),w
  5037  174F  01C1               	clrf	(?_convert)
  5038  1750  07C1               	addwf	(?_convert)
  5039                           
  5040  1751  120A  118A  2015   	fcall	_convert
              160A  118A         
  5041  1756  1283               	bcf	status, 5	;RP0=0, select bank0
  5042  1757  1303               	bcf	status, 6	;RP1=0, select bank0
  5043  1758  0842               	movf	(1+(?_convert)),w
  5044  1759  01CC               	clrf	(readIR@cm+1)
  5045  175A  07CC               	addwf	(readIR@cm+1)
  5046  175B  0841               	movf	(0+(?_convert)),w
  5047  175C  01CB               	clrf	(readIR@cm)
  5048  175D  07CB               	addwf	(readIR@cm)
  5049                           
  5050                           	line	35
  5051                           	
  5052  175E                     l11615:	
  5053                           ;ir.c: 35: return cm;
  5054  175E  084C               	movf	(readIR@cm+1),w
  5055  175F  01CA               	clrf	(?_readIR+1)
  5056  1760  07CA               	addwf	(?_readIR+1)
  5057  1761  084B               	movf	(readIR@cm),w
  5058  1762  01C9               	clrf	(?_readIR)
  5059  1763  07C9               	addwf	(?_readIR)
  5060                           
  5061  1764  2F65               	goto	l4348
  5062                           	
  5063  1765                     l11617:	
  5064                           	line	36
  5065                           	
  5066  1765                     l4348:	
  5067  1765  0008               	return
  5068                           	opt stack 0
  5069                           GLOBAL	__end_of_readIR
  5070  1766                     	__end_of_readIR:
  5071 ;; =============== function _readIR ends ============
  5072                           
  5073                           	signat	_readIR,90
  5074                           	global	_findFinalDestination
  5075                           psect	text1888,local,class=CODE,delta=2
  5076                           global __ptext1888
  5077  04CF                     __ptext1888:
  5078                           
  5079 ;; *************** function _findFinalDestination *****************
  5080 ;; Defined at:
  5081 ;;		line 12 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\map.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  virtualWallX    1    wreg     unsigned char 
  5084 ;;  virtualWallY    1   14[BANK0 ] unsigned char 
  5085 ;;  robotOrienta    1   15[BANK0 ] enum E1096
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  virtualWallX    1   17[BANK0 ] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;		None               void
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5097 ;;      Params:         0       2       0       0       0
  5098 ;;      Locals:         0       1       0       0       0
  5099 ;;      Temps:          0       1       0       0       0
  5100 ;;      Totals:         0       4       0       0       0
  5101 ;;Total ram usage:        4 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    4
  5104 ;; This function calls:
  5105 ;;		_lcd_set_cursor
  5106 ;;		_lcd_write_1_digit_bcd
  5107 ;; This function is called by:
  5108 ;;		_driveForDistance
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           psect	text1888
  5112                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\map.c"
  5113                           	line	12
  5114                           	global	__size_of_findFinalDestination
  5115  0105                     	__size_of_findFinalDestination	equ	__end_of_findFinalDestination-_findFinalDestination
  5116                           	
  5117  04CF                     _findFinalDestination:	
  5118                           	opt	stack 0
  5119                           ; Regs used in _findFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5120                           ;findFinalDestination@virtualWallX stored from wreg
  5121  04CF  1283               	bcf	status, 5	;RP0=0, select bank0
  5122  04D0  1303               	bcf	status, 6	;RP1=0, select bank0
  5123  04D1  00B1               	movwf	(findFinalDestination@virtualWallX)
  5124                           	line	13
  5125                           	
  5126  04D2                     l11533:	
  5127                           ;map.c: 13: switch (virtualWallX)
  5128  04D2  2DA6               	goto	l11609
  5129                           	line	15
  5130                           ;map.c: 14: {
  5131                           ;map.c: 15: case 0:
  5132                           	
  5133  04D3                     l2116:	
  5134                           	line	16
  5135                           ;map.c: 16: switch (virtualWallY)
  5136  04D3  2CE7               	goto	l11543
  5137                           	line	20
  5138                           ;map.c: 17: {
  5139                           ;map.c: 20: case 1:
  5140                           	
  5141  04D4                     l2118:	
  5142                           	line	21
  5143                           ;map.c: 21: finalX = 0;
  5144  04D4  01DE               	clrf	(_finalX)
  5145                           	line	22
  5146                           	
  5147  04D5                     l11535:	
  5148                           ;map.c: 22: finalY = 1;
  5149  04D5  01DF               	clrf	(_finalY)
  5150  04D6  1403               	bsf	status,0
  5151  04D7  0DDF               	rlf	(_finalY),f
  5152                           	line	23
  5153                           ;map.c: 23: break;
  5154  04D8  2DB7               	goto	l11611
  5155                           	line	24
  5156                           ;map.c: 24: case 2:
  5157                           	
  5158  04D9                     l2120:	
  5159                           	line	25
  5160                           ;map.c: 25: finalX = 0;
  5161  04D9  01DE               	clrf	(_finalX)
  5162                           	line	26
  5163                           	
  5164  04DA                     l11537:	
  5165                           ;map.c: 26: finalY = 2;
  5166  04DA  3002               	movlw	(02h)
  5167  04DB  00B0               	movwf	(??_findFinalDestination+0)+0
  5168  04DC  0830               	movf	(??_findFinalDestination+0)+0,w
  5169  04DD  00DF               	movwf	(_finalY)
  5170                           	line	27
  5171                           ;map.c: 27: break;
  5172  04DE  2DB7               	goto	l11611
  5173                           	line	28
  5174                           ;map.c: 28: case 3:
  5175                           	
  5176  04DF                     l2121:	
  5177                           	line	29
  5178                           ;map.c: 29: finalX = 0;
  5179  04DF  01DE               	clrf	(_finalX)
  5180                           	line	30
  5181                           	
  5182  04E0                     l11539:	
  5183                           ;map.c: 30: finalY = 3;
  5184  04E0  3003               	movlw	(03h)
  5185  04E1  00B0               	movwf	(??_findFinalDestination+0)+0
  5186  04E2  0830               	movf	(??_findFinalDestination+0)+0,w
  5187  04E3  00DF               	movwf	(_finalY)
  5188                           	line	31
  5189                           ;map.c: 31: break;
  5190  04E4  2DB7               	goto	l11611
  5191                           	line	32
  5192                           ;map.c: 32: default:
  5193                           	
  5194  04E5                     l2122:	
  5195                           	line	33
  5196                           ;map.c: 33: break;
  5197  04E5  2DB7               	goto	l11611
  5198                           	line	34
  5199                           	
  5200  04E6                     l11541:	
  5201                           ;map.c: 34: }
  5202  04E6  2DB7               	goto	l11611
  5203                           	line	16
  5204                           	
  5205  04E7                     l2117:	
  5206                           	
  5207  04E7                     l11543:	
  5208  04E7  082E               	movf	(findFinalDestination@virtualWallY),w
  5209                           	; Switch size 1, requested type "space"
  5210                           ; Number of cases is 3, Range of values is 1 to 3
  5211                           ; switch strategies available:
  5212                           ; Name         Instructions Cycles
  5213                           ; simple_byte           10     6 (average)
  5214                           ; direct_byte           20    11 (fixed)
  5215                           ; jumptable            263     9 (fixed)
  5216                           ;	Chosen strategy is simple_byte
  5217                           
  5218                           	opt asmopt_off
  5219  04E8  3A01               	xorlw	1^0	; case 1
  5220  04E9  1903               	skipnz
  5221  04EA  2CD4               	goto	l2118
  5222  04EB  3A03               	xorlw	2^1	; case 2
  5223  04EC  1903               	skipnz
  5224  04ED  2CD9               	goto	l2120
  5225  04EE  3A01               	xorlw	3^2	; case 3
  5226  04EF  1903               	skipnz
  5227  04F0  2CDF               	goto	l2121
  5228  04F1  2DB7               	goto	l11611
  5229                           	opt asmopt_on
  5230                           
  5231                           	line	34
  5232                           	
  5233  04F2                     l2119:	
  5234                           	line	35
  5235                           ;map.c: 35: break;
  5236  04F2  2DB7               	goto	l11611
  5237                           	line	37
  5238                           ;map.c: 37: case 1:
  5239                           	
  5240  04F3                     l2124:	
  5241                           	line	38
  5242                           ;map.c: 38: switch (virtualWallY)
  5243  04F3  2D12               	goto	l11561
  5244                           	line	40
  5245                           ;map.c: 39: {
  5246                           ;map.c: 40: case 0:
  5247                           	
  5248  04F4                     l2126:	
  5249                           	line	41
  5250                           	
  5251  04F4                     l11545:	
  5252                           ;map.c: 41: finalX = 1;
  5253  04F4  01DE               	clrf	(_finalX)
  5254  04F5  1403               	bsf	status,0
  5255  04F6  0DDE               	rlf	(_finalX),f
  5256                           	line	42
  5257                           	
  5258  04F7                     l11547:	
  5259                           ;map.c: 42: finalY = 0;
  5260  04F7  01DF               	clrf	(_finalY)
  5261                           	line	43
  5262                           ;map.c: 43: break;
  5263  04F8  2DB7               	goto	l11611
  5264                           	line	44
  5265                           ;map.c: 44: case 1:
  5266                           	
  5267  04F9                     l2128:	
  5268                           	line	45
  5269                           	
  5270  04F9                     l11549:	
  5271                           ;map.c: 45: finalX = 1;
  5272  04F9  01DE               	clrf	(_finalX)
  5273  04FA  1403               	bsf	status,0
  5274  04FB  0DDE               	rlf	(_finalX),f
  5275                           	line	46
  5276                           ;map.c: 46: finalY = 1;
  5277  04FC  01DF               	clrf	(_finalY)
  5278  04FD  1403               	bsf	status,0
  5279  04FE  0DDF               	rlf	(_finalY),f
  5280                           	line	47
  5281                           ;map.c: 47: break;
  5282  04FF  2DB7               	goto	l11611
  5283                           	line	48
  5284                           ;map.c: 48: case 2:
  5285                           	
  5286  0500                     l2129:	
  5287                           	line	49
  5288                           	
  5289  0500                     l11551:	
  5290                           ;map.c: 49: finalX = 1;
  5291  0500  01DE               	clrf	(_finalX)
  5292  0501  1403               	bsf	status,0
  5293  0502  0DDE               	rlf	(_finalX),f
  5294                           	line	50
  5295                           	
  5296  0503                     l11553:	
  5297                           ;map.c: 50: finalY = 2;
  5298  0503  3002               	movlw	(02h)
  5299  0504  00B0               	movwf	(??_findFinalDestination+0)+0
  5300  0505  0830               	movf	(??_findFinalDestination+0)+0,w
  5301  0506  00DF               	movwf	(_finalY)
  5302                           	line	51
  5303                           ;map.c: 51: break;
  5304  0507  2DB7               	goto	l11611
  5305                           	line	52
  5306                           ;map.c: 52: case 3:
  5307                           	
  5308  0508                     l2130:	
  5309                           	line	53
  5310                           	
  5311  0508                     l11555:	
  5312                           ;map.c: 53: finalX = 1;
  5313  0508  01DE               	clrf	(_finalX)
  5314  0509  1403               	bsf	status,0
  5315  050A  0DDE               	rlf	(_finalX),f
  5316                           	line	54
  5317                           	
  5318  050B                     l11557:	
  5319                           ;map.c: 54: finalY = 3;
  5320  050B  3003               	movlw	(03h)
  5321  050C  00B0               	movwf	(??_findFinalDestination+0)+0
  5322  050D  0830               	movf	(??_findFinalDestination+0)+0,w
  5323  050E  00DF               	movwf	(_finalY)
  5324                           	line	55
  5325                           ;map.c: 55: break;
  5326  050F  2DB7               	goto	l11611
  5327                           	line	56
  5328                           ;map.c: 56: default:
  5329                           	
  5330  0510                     l2131:	
  5331                           	line	57
  5332                           ;map.c: 57: break;
  5333  0510  2DB7               	goto	l11611
  5334                           	line	58
  5335                           	
  5336  0511                     l11559:	
  5337                           ;map.c: 58: }
  5338  0511  2DB7               	goto	l11611
  5339                           	line	38
  5340                           	
  5341  0512                     l2125:	
  5342                           	
  5343  0512                     l11561:	
  5344  0512  082E               	movf	(findFinalDestination@virtualWallY),w
  5345                           	; Switch size 1, requested type "space"
  5346                           ; Number of cases is 4, Range of values is 0 to 3
  5347                           ; switch strategies available:
  5348                           ; Name         Instructions Cycles
  5349                           ; simple_byte           13     7 (average)
  5350                           ; direct_byte           20     8 (fixed)
  5351                           ; jumptable            260     6 (fixed)
  5352                           ; rangetable             8     6 (fixed)
  5353                           ; spacedrange           14     9 (fixed)
  5354                           ; locatedrange           4     3 (fixed)
  5355                           ;	Chosen strategy is simple_byte
  5356                           
  5357                           	opt asmopt_off
  5358  0513  3A00               	xorlw	0^0	; case 0
  5359  0514  1903               	skipnz
  5360  0515  2CF4               	goto	l11545
  5361  0516  3A01               	xorlw	1^0	; case 1
  5362  0517  1903               	skipnz
  5363  0518  2CF9               	goto	l11549
  5364  0519  3A03               	xorlw	2^1	; case 2
  5365  051A  1903               	skipnz
  5366  051B  2D00               	goto	l11551
  5367  051C  3A01               	xorlw	3^2	; case 3
  5368  051D  1903               	skipnz
  5369  051E  2D08               	goto	l11555
  5370  051F  2DB7               	goto	l11611
  5371                           	opt asmopt_on
  5372                           
  5373                           	line	58
  5374                           	
  5375  0520                     l2127:	
  5376                           	line	59
  5377                           ;map.c: 59: break;
  5378  0520  2DB7               	goto	l11611
  5379                           	line	61
  5380                           ;map.c: 61: case 2:
  5381                           	
  5382  0521                     l2132:	
  5383                           	line	62
  5384                           ;map.c: 62: switch (virtualWallY)
  5385  0521  2D4A               	goto	l11579
  5386                           	line	64
  5387                           ;map.c: 63: {
  5388                           ;map.c: 64: case 0:
  5389                           	
  5390  0522                     l2134:	
  5391                           	line	65
  5392                           	
  5393  0522                     l11563:	
  5394                           ;map.c: 65: if(robotOrientation == WEST)
  5395  0522  08AF               	movf	(findFinalDestination@robotOrientation),f
  5396  0523  1D03               	skipz
  5397  0524  2D26               	goto	u6381
  5398  0525  2D27               	goto	u6380
  5399  0526                     u6381:
  5400  0526  2DB7               	goto	l11611
  5401  0527                     u6380:
  5402                           	line	67
  5403                           	
  5404  0527                     l11565:	
  5405                           ;map.c: 66: {
  5406                           ;map.c: 67: finalX = 3;
  5407  0527  3003               	movlw	(03h)
  5408  0528  00B0               	movwf	(??_findFinalDestination+0)+0
  5409  0529  0830               	movf	(??_findFinalDestination+0)+0,w
  5410  052A  00DE               	movwf	(_finalX)
  5411                           	line	68
  5412                           	
  5413  052B                     l11567:	
  5414                           ;map.c: 68: finalY = 1;
  5415  052B  01DF               	clrf	(_finalY)
  5416  052C  1403               	bsf	status,0
  5417  052D  0DDF               	rlf	(_finalY),f
  5418  052E  2DB7               	goto	l11611
  5419                           	line	69
  5420                           	
  5421  052F                     l2135:	
  5422                           	line	70
  5423                           ;map.c: 69: }
  5424                           ;map.c: 70: break;
  5425  052F  2DB7               	goto	l11611
  5426                           	line	71
  5427                           ;map.c: 71: case 1:
  5428                           	
  5429  0530                     l2137:	
  5430                           	line	72
  5431                           	
  5432  0530                     l11569:	
  5433                           ;map.c: 72: finalX = 2;
  5434  0530  3002               	movlw	(02h)
  5435  0531  00B0               	movwf	(??_findFinalDestination+0)+0
  5436  0532  0830               	movf	(??_findFinalDestination+0)+0,w
  5437  0533  00DE               	movwf	(_finalX)
  5438                           	line	73
  5439                           	
  5440  0534                     l11571:	
  5441                           ;map.c: 73: finalY = 1;
  5442  0534  01DF               	clrf	(_finalY)
  5443  0535  1403               	bsf	status,0
  5444  0536  0DDF               	rlf	(_finalY),f
  5445                           	line	74
  5446                           ;map.c: 74: break;
  5447  0537  2DB7               	goto	l11611
  5448                           	line	75
  5449                           ;map.c: 75: case 2:
  5450                           	
  5451  0538                     l2138:	
  5452                           	line	76
  5453                           	
  5454  0538                     l11573:	
  5455                           ;map.c: 76: if(robotOrientation == EAST)
  5456  0538  082F               	movf	(findFinalDestination@robotOrientation),w
  5457  0539  3A02               	xorlw	02h
  5458  053A  1D03               	skipz
  5459  053B  2D3D               	goto	u6391
  5460  053C  2D3E               	goto	u6390
  5461  053D                     u6391:
  5462  053D  2DB7               	goto	l11611
  5463  053E                     u6390:
  5464                           	line	78
  5465                           	
  5466  053E                     l11575:	
  5467                           ;map.c: 77: {
  5468                           ;map.c: 78: finalX = 2;
  5469  053E  3002               	movlw	(02h)
  5470  053F  00B0               	movwf	(??_findFinalDestination+0)+0
  5471  0540  0830               	movf	(??_findFinalDestination+0)+0,w
  5472  0541  00DE               	movwf	(_finalX)
  5473                           	line	79
  5474                           ;map.c: 79: finalY = 2;
  5475  0542  3002               	movlw	(02h)
  5476  0543  00B0               	movwf	(??_findFinalDestination+0)+0
  5477  0544  0830               	movf	(??_findFinalDestination+0)+0,w
  5478  0545  00DF               	movwf	(_finalY)
  5479  0546  2DB7               	goto	l11611
  5480                           	line	80
  5481                           	
  5482  0547                     l2139:	
  5483                           	line	81
  5484                           ;map.c: 80: }
  5485                           ;map.c: 81: break;
  5486  0547  2DB7               	goto	l11611
  5487                           	line	84
  5488                           ;map.c: 84: default:
  5489                           	
  5490  0548                     l2140:	
  5491                           	line	85
  5492                           ;map.c: 85: break;
  5493  0548  2DB7               	goto	l11611
  5494                           	line	86
  5495                           	
  5496  0549                     l11577:	
  5497                           ;map.c: 86: }
  5498  0549  2DB7               	goto	l11611
  5499                           	line	62
  5500                           	
  5501  054A                     l2133:	
  5502                           	
  5503  054A                     l11579:	
  5504  054A  082E               	movf	(findFinalDestination@virtualWallY),w
  5505                           	; Switch size 1, requested type "space"
  5506                           ; Number of cases is 3, Range of values is 0 to 2
  5507                           ; switch strategies available:
  5508                           ; Name         Instructions Cycles
  5509                           ; simple_byte           10     6 (average)
  5510                           ; direct_byte           17     8 (fixed)
  5511                           ; jumptable            260     6 (fixed)
  5512                           ; rangetable             7     6 (fixed)
  5513                           ; spacedrange           12     9 (fixed)
  5514                           ; locatedrange           3     3 (fixed)
  5515                           ;	Chosen strategy is simple_byte
  5516                           
  5517                           	opt asmopt_off
  5518  054B  3A00               	xorlw	0^0	; case 0
  5519  054C  1903               	skipnz
  5520  054D  2D22               	goto	l11563
  5521  054E  3A01               	xorlw	1^0	; case 1
  5522  054F  1903               	skipnz
  5523  0550  2D30               	goto	l11569
  5524  0551  3A03               	xorlw	2^1	; case 2
  5525  0552  1903               	skipnz
  5526  0553  2D38               	goto	l11573
  5527  0554  2DB7               	goto	l11611
  5528                           	opt asmopt_on
  5529                           
  5530                           	line	86
  5531                           	
  5532  0555                     l2136:	
  5533                           	line	87
  5534                           ;map.c: 87: break;
  5535  0555  2DB7               	goto	l11611
  5536                           	line	89
  5537                           ;map.c: 89: case 3:
  5538                           	
  5539  0556                     l2141:	
  5540                           	line	90
  5541                           ;map.c: 90: switch (virtualWallY)
  5542  0556  2D68               	goto	l11589
  5543                           	line	92
  5544                           ;map.c: 91: {
  5545                           ;map.c: 92: case 0:
  5546                           	
  5547  0557                     l2143:	
  5548                           	line	93
  5549                           	
  5550  0557                     l11581:	
  5551                           ;map.c: 93: finalX = 3;
  5552  0557  3003               	movlw	(03h)
  5553  0558  00B0               	movwf	(??_findFinalDestination+0)+0
  5554  0559  0830               	movf	(??_findFinalDestination+0)+0,w
  5555  055A  00DE               	movwf	(_finalX)
  5556                           	line	94
  5557                           	
  5558  055B                     l11583:	
  5559                           ;map.c: 94: finalY = 0;
  5560  055B  01DF               	clrf	(_finalY)
  5561                           	line	95
  5562                           ;map.c: 95: break;
  5563  055C  2DB7               	goto	l11611
  5564                           	line	98
  5565                           ;map.c: 98: case 2:
  5566                           	
  5567  055D                     l2145:	
  5568                           	line	99
  5569                           	
  5570  055D                     l11585:	
  5571                           ;map.c: 99: finalX = 3;
  5572  055D  3003               	movlw	(03h)
  5573  055E  00B0               	movwf	(??_findFinalDestination+0)+0
  5574  055F  0830               	movf	(??_findFinalDestination+0)+0,w
  5575  0560  00DE               	movwf	(_finalX)
  5576                           	line	100
  5577                           ;map.c: 100: finalY = 2;
  5578  0561  3002               	movlw	(02h)
  5579  0562  00B0               	movwf	(??_findFinalDestination+0)+0
  5580  0563  0830               	movf	(??_findFinalDestination+0)+0,w
  5581  0564  00DF               	movwf	(_finalY)
  5582                           	line	101
  5583                           ;map.c: 101: break;
  5584  0565  2DB7               	goto	l11611
  5585                           	line	104
  5586                           ;map.c: 104: default:
  5587                           	
  5588  0566                     l2146:	
  5589                           	line	105
  5590                           ;map.c: 105: break;
  5591  0566  2DB7               	goto	l11611
  5592                           	line	106
  5593                           	
  5594  0567                     l11587:	
  5595                           ;map.c: 106: }
  5596  0567  2DB7               	goto	l11611
  5597                           	line	90
  5598                           	
  5599  0568                     l2142:	
  5600                           	
  5601  0568                     l11589:	
  5602  0568  082E               	movf	(findFinalDestination@virtualWallY),w
  5603                           	; Switch size 1, requested type "space"
  5604                           ; Number of cases is 2, Range of values is 0 to 2
  5605                           ; switch strategies available:
  5606                           ; Name         Instructions Cycles
  5607                           ; simple_byte            7     4 (average)
  5608                           ; direct_byte           17     8 (fixed)
  5609                           ; jumptable            260     6 (fixed)
  5610                           ; rangetable             7     6 (fixed)
  5611                           ; spacedrange           12     9 (fixed)
  5612                           ; locatedrange           3     3 (fixed)
  5613                           ;	Chosen strategy is simple_byte
  5614                           
  5615                           	opt asmopt_off
  5616  0569  3A00               	xorlw	0^0	; case 0
  5617  056A  1903               	skipnz
  5618  056B  2D57               	goto	l11581
  5619  056C  3A02               	xorlw	2^0	; case 2
  5620  056D  1903               	skipnz
  5621  056E  2D5D               	goto	l11585
  5622  056F  2DB7               	goto	l11611
  5623                           	opt asmopt_on
  5624                           
  5625                           	line	106
  5626                           	
  5627  0570                     l2144:	
  5628                           	line	107
  5629                           ;map.c: 107: break;
  5630  0570  2DB7               	goto	l11611
  5631                           	line	109
  5632                           ;map.c: 109: case 4:
  5633                           	
  5634  0571                     l2147:	
  5635                           	line	110
  5636                           ;map.c: 110: switch (virtualWallY)
  5637  0571  2D95               	goto	l11605
  5638                           	line	112
  5639                           ;map.c: 111: {
  5640                           ;map.c: 112: case 0:
  5641                           	
  5642  0572                     l2149:	
  5643                           	line	113
  5644                           	
  5645  0572                     l11591:	
  5646                           ;map.c: 113: finalX = 4;
  5647  0572  3004               	movlw	(04h)
  5648  0573  00B0               	movwf	(??_findFinalDestination+0)+0
  5649  0574  0830               	movf	(??_findFinalDestination+0)+0,w
  5650  0575  00DE               	movwf	(_finalX)
  5651                           	line	114
  5652                           	
  5653  0576                     l11593:	
  5654                           ;map.c: 114: finalY = 0;
  5655  0576  01DF               	clrf	(_finalY)
  5656                           	line	115
  5657                           ;map.c: 115: break;
  5658  0577  2DB7               	goto	l11611
  5659                           	line	116
  5660                           ;map.c: 116: case 1:
  5661                           	
  5662  0578                     l2151:	
  5663                           	line	117
  5664                           	
  5665  0578                     l11595:	
  5666                           ;map.c: 117: finalX = 4;
  5667  0578  3004               	movlw	(04h)
  5668  0579  00B0               	movwf	(??_findFinalDestination+0)+0
  5669  057A  0830               	movf	(??_findFinalDestination+0)+0,w
  5670  057B  00DE               	movwf	(_finalX)
  5671                           	line	118
  5672                           	
  5673  057C                     l11597:	
  5674                           ;map.c: 118: finalY = 1;
  5675  057C  01DF               	clrf	(_finalY)
  5676  057D  1403               	bsf	status,0
  5677  057E  0DDF               	rlf	(_finalY),f
  5678                           	line	119
  5679                           ;map.c: 119: break;
  5680  057F  2DB7               	goto	l11611
  5681                           	line	120
  5682                           ;map.c: 120: case 2:
  5683                           	
  5684  0580                     l2152:	
  5685                           	line	121
  5686                           	
  5687  0580                     l11599:	
  5688                           ;map.c: 121: if (robotOrientation == SOUTH)
  5689  0580  082F               	movf	(findFinalDestination@robotOrientation),w
  5690  0581  3A01               	xorlw	01h
  5691  0582  1D03               	skipz
  5692  0583  2D85               	goto	u6401
  5693  0584  2D86               	goto	u6400
  5694  0585                     u6401:
  5695  0585  2DB7               	goto	l11611
  5696  0586                     u6400:
  5697                           	line	123
  5698                           	
  5699  0586                     l11601:	
  5700                           ;map.c: 122: {
  5701                           ;map.c: 123: finalX = 4;
  5702  0586  3004               	movlw	(04h)
  5703  0587  00B0               	movwf	(??_findFinalDestination+0)+0
  5704  0588  0830               	movf	(??_findFinalDestination+0)+0,w
  5705  0589  00DE               	movwf	(_finalX)
  5706                           	line	124
  5707                           ;map.c: 124: finalY = 2;
  5708  058A  3002               	movlw	(02h)
  5709  058B  00B0               	movwf	(??_findFinalDestination+0)+0
  5710  058C  0830               	movf	(??_findFinalDestination+0)+0,w
  5711  058D  00DF               	movwf	(_finalY)
  5712  058E  2DB7               	goto	l11611
  5713                           	line	125
  5714                           	
  5715  058F                     l2153:	
  5716                           	line	126
  5717                           ;map.c: 125: }
  5718                           ;map.c: 126: break;
  5719  058F  2DB7               	goto	l11611
  5720                           	line	127
  5721                           ;map.c: 127: case 3:
  5722                           	
  5723  0590                     l2154:	
  5724                           	line	128
  5725                           ;map.c: 128: finalX = 0;
  5726  0590  01DE               	clrf	(_finalX)
  5727                           	line	129
  5728                           ;map.c: 129: finalY = 0;
  5729  0591  01DF               	clrf	(_finalY)
  5730                           	line	130
  5731                           ;map.c: 130: break;
  5732  0592  2DB7               	goto	l11611
  5733                           	line	131
  5734                           ;map.c: 131: default:
  5735                           	
  5736  0593                     l2155:	
  5737                           	line	132
  5738                           ;map.c: 132: break;
  5739  0593  2DB7               	goto	l11611
  5740                           	line	133
  5741                           	
  5742  0594                     l11603:	
  5743                           ;map.c: 133: }
  5744  0594  2DB7               	goto	l11611
  5745                           	line	110
  5746                           	
  5747  0595                     l2148:	
  5748                           	
  5749  0595                     l11605:	
  5750  0595  082E               	movf	(findFinalDestination@virtualWallY),w
  5751                           	; Switch size 1, requested type "space"
  5752                           ; Number of cases is 4, Range of values is 0 to 3
  5753                           ; switch strategies available:
  5754                           ; Name         Instructions Cycles
  5755                           ; simple_byte           13     7 (average)
  5756                           ; direct_byte           20     8 (fixed)
  5757                           ; jumptable            260     6 (fixed)
  5758                           ; rangetable             8     6 (fixed)
  5759                           ; spacedrange           14     9 (fixed)
  5760                           ; locatedrange           4     3 (fixed)
  5761                           ;	Chosen strategy is simple_byte
  5762                           
  5763                           	opt asmopt_off
  5764  0596  3A00               	xorlw	0^0	; case 0
  5765  0597  1903               	skipnz
  5766  0598  2D72               	goto	l11591
  5767  0599  3A01               	xorlw	1^0	; case 1
  5768  059A  1903               	skipnz
  5769  059B  2D78               	goto	l11595
  5770  059C  3A03               	xorlw	2^1	; case 2
  5771  059D  1903               	skipnz
  5772  059E  2D80               	goto	l11599
  5773  059F  3A01               	xorlw	3^2	; case 3
  5774  05A0  1903               	skipnz
  5775  05A1  2D90               	goto	l2154
  5776  05A2  2DB7               	goto	l11611
  5777                           	opt asmopt_on
  5778                           
  5779                           	line	133
  5780                           	
  5781  05A3                     l2150:	
  5782                           	line	134
  5783                           ;map.c: 134: break;
  5784  05A3  2DB7               	goto	l11611
  5785                           	line	136
  5786                           ;map.c: 136: default:
  5787                           	
  5788  05A4                     l2156:	
  5789                           	line	137
  5790                           ;map.c: 137: break;
  5791  05A4  2DB7               	goto	l11611
  5792                           	line	138
  5793                           	
  5794  05A5                     l11607:	
  5795                           ;map.c: 138: }
  5796  05A5  2DB7               	goto	l11611
  5797                           	line	13
  5798                           	
  5799  05A6                     l2115:	
  5800                           	
  5801  05A6                     l11609:	
  5802  05A6  0831               	movf	(findFinalDestination@virtualWallX),w
  5803                           	; Switch size 1, requested type "space"
  5804                           ; Number of cases is 5, Range of values is 0 to 4
  5805                           ; switch strategies available:
  5806                           ; Name         Instructions Cycles
  5807                           ; simple_byte           16     9 (average)
  5808                           ; direct_byte           23     8 (fixed)
  5809                           ; jumptable            260     6 (fixed)
  5810                           ; rangetable             9     6 (fixed)
  5811                           ; spacedrange           16     9 (fixed)
  5812                           ; locatedrange           5     3 (fixed)
  5813                           ;	Chosen strategy is simple_byte
  5814                           
  5815                           	opt asmopt_off
  5816  05A7  3A00               	xorlw	0^0	; case 0
  5817  05A8  1903               	skipnz
  5818  05A9  2CE7               	goto	l11543
  5819  05AA  3A01               	xorlw	1^0	; case 1
  5820  05AB  1903               	skipnz
  5821  05AC  2D12               	goto	l11561
  5822  05AD  3A03               	xorlw	2^1	; case 2
  5823  05AE  1903               	skipnz
  5824  05AF  2D4A               	goto	l11579
  5825  05B0  3A01               	xorlw	3^2	; case 3
  5826  05B1  1903               	skipnz
  5827  05B2  2D68               	goto	l11589
  5828  05B3  3A07               	xorlw	4^3	; case 4
  5829  05B4  1903               	skipnz
  5830  05B5  2D95               	goto	l11605
  5831  05B6  2DB7               	goto	l11611
  5832                           	opt asmopt_on
  5833                           
  5834                           	line	138
  5835                           	
  5836  05B7                     l2123:	
  5837                           	line	140
  5838                           	
  5839  05B7                     l11611:	
  5840                           ;map.c: 140: lcd_set_cursor(0x47);
  5841  05B7  3047               	movlw	(047h)
  5842  05B8  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  118A         
  5843                           	line	141
  5844                           ;map.c: 141: lcd_write_1_digit_bcd(finalX);
  5845  05BD  1283               	bcf	status, 5	;RP0=0, select bank0
  5846  05BE  1303               	bcf	status, 6	;RP1=0, select bank0
  5847  05BF  085E               	movf	(_finalX),w
  5848  05C0  160A  118A  25EC   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  5849                           	line	142
  5850                           ;map.c: 142: lcd_set_cursor(0x49);
  5851  05C5  3049               	movlw	(049h)
  5852  05C6  160A  118A  25E1   	fcall	_lcd_set_cursor
              120A  118A         
  5853                           	line	143
  5854                           ;map.c: 143: lcd_write_1_digit_bcd(finalY);
  5855  05CB  1283               	bcf	status, 5	;RP0=0, select bank0
  5856  05CC  1303               	bcf	status, 6	;RP1=0, select bank0
  5857  05CD  085F               	movf	(_finalY),w
  5858  05CE  160A  118A  25EC   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  5859                           	line	144
  5860                           	
  5861  05D3                     l2157:	
  5862  05D3  0008               	return
  5863                           	opt stack 0
  5864                           GLOBAL	__end_of_findFinalDestination
  5865  05D4                     	__end_of_findFinalDestination:
  5866 ;; =============== function _findFinalDestination ends ============
  5867                           
  5868                           	signat	_findFinalDestination,12408
  5869                           	global	_checkIfHome
  5870                           psect	text1889,local,class=CODE,delta=2
  5871                           global __ptext1889
  5872  16BF                     __ptext1889:
  5873                           
  5874 ;; *************** function _checkIfHome *****************
  5875 ;; Defined at:
  5876 ;;		line 327 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;		None               void
  5883 ;; Registers used:
  5884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5890 ;;      Params:         0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0
  5893 ;;      Totals:         0       0       0       0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    4
  5897 ;; This function calls:
  5898 ;;		_drive
  5899 ;;		_play_iCreate_song
  5900 ;; This function is called by:
  5901 ;;		_main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           psect	text1889
  5905                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  5906                           	line	327
  5907                           	global	__size_of_checkIfHome
  5908  0020                     	__size_of_checkIfHome	equ	__end_of_checkIfHome-_checkIfHome
  5909                           	
  5910  16BF                     _checkIfHome:	
  5911                           	opt	stack 3
  5912                           ; Regs used in _checkIfHome: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5913                           	line	328
  5914                           	
  5915  16BF                     l11525:	
  5916                           ;main.c: 328: if((xCoord == 1) && (yCoord == 3))
  5917  16BF  1283               	bcf	status, 5	;RP0=0, select bank0
  5918  16C0  1303               	bcf	status, 6	;RP1=0, select bank0
  5919  16C1  0864               	movf	(_xCoord),w	;volatile
  5920  16C2  3A01               	xorlw	01h
  5921  16C3  1D03               	skipz
  5922  16C4  2EC6               	goto	u6361
  5923  16C5  2EC7               	goto	u6360
  5924  16C6                     u6361:
  5925  16C6  2EDE               	goto	l6019
  5926  16C7                     u6360:
  5927                           	
  5928  16C7                     l11527:	
  5929  16C7  0865               	movf	(_yCoord),w	;volatile
  5930  16C8  3A03               	xorlw	03h
  5931  16C9  1D03               	skipz
  5932  16CA  2ECC               	goto	u6371
  5933  16CB  2ECD               	goto	u6370
  5934  16CC                     u6371:
  5935  16CC  2EDE               	goto	l6019
  5936  16CD                     u6370:
  5937                           	line	330
  5938                           	
  5939  16CD                     l11529:	
  5940                           ;main.c: 329: {
  5941                           ;main.c: 330: drive(0, 0, 0, 0);
  5942  16CD  01AC               	clrf	(?_drive)
  5943  16CE  01AD               	clrf	0+(?_drive)+01h
  5944  16CF  01AE               	clrf	0+(?_drive)+02h
  5945  16D0  3000               	movlw	(0)
  5946  16D1  120A  158A  215A   	fcall	_drive
              160A  118A         
  5947                           	line	331
  5948                           ;main.c: 331: play_iCreate_song(4);
  5949  16D6  3004               	movlw	(04h)
  5950  16D7  160A  118A  2608   	fcall	_play_iCreate_song
              160A  118A         
  5951                           	line	332
  5952                           	
  5953  16DC                     l11531:	
  5954                           ;main.c: 332: home = 1;
  5955  16DC  1770               	bsf	(_home/8),(_home)&7
  5956  16DD  2EDE               	goto	l6019
  5957                           	line	333
  5958                           	
  5959  16DE                     l6018:	
  5960                           	line	334
  5961                           	
  5962  16DE                     l6019:	
  5963  16DE  0008               	return
  5964                           	opt stack 0
  5965                           GLOBAL	__end_of_checkIfHome
  5966  16DF                     	__end_of_checkIfHome:
  5967 ;; =============== function _checkIfHome ends ============
  5968                           
  5969                           	signat	_checkIfHome,88
  5970                           	global	_turnAround
  5971                           psect	text1890,local,class=CODE,delta=2
  5972                           global __ptext1890
  5973  0B89                     __ptext1890:
  5974                           
  5975 ;; *************** function _turnAround *****************
  5976 ;; Defined at:
  5977 ;;		line 208 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;		None               void
  5984 ;; Registers used:
  5985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5991 ;;      Params:         0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0
  5993 ;;      Temps:          0       3       0       0       0
  5994 ;;      Totals:         0       3       0       0       0
  5995 ;;Total ram usage:        3 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    4
  5998 ;; This function calls:
  5999 ;;		_drive
  6000 ;;		_waitFor
  6001 ;; This function is called by:
  6002 ;;		_goBackward
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           psect	text1890
  6006                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  6007                           	line	208
  6008                           	global	__size_of_turnAround
  6009  0045                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  6010                           	
  6011  0B89                     _turnAround:	
  6012                           	opt	stack 1
  6013                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6014                           	line	209
  6015                           	
  6016  0B89                     l11519:	
  6017                           ;drive.c: 209: drive(0, 25, 0, 1);
  6018  0B89  3019               	movlw	(019h)
  6019  0B8A  1283               	bcf	status, 5	;RP0=0, select bank0
  6020  0B8B  1303               	bcf	status, 6	;RP1=0, select bank0
  6021  0B8C  00B3               	movwf	(??_turnAround+0)+0
  6022  0B8D  0833               	movf	(??_turnAround+0)+0,w
  6023  0B8E  00AC               	movwf	(?_drive)
  6024  0B8F  01AD               	clrf	0+(?_drive)+01h
  6025  0B90  01AE               	clrf	0+(?_drive)+02h
  6026  0B91  1403               	bsf	status,0
  6027  0B92  0DAE               	rlf	0+(?_drive)+02h,f
  6028  0B93  3000               	movlw	(0)
  6029  0B94  120A  158A  215A   	fcall	_drive
              120A  158A         
  6030                           	line	210
  6031                           ;drive.c: 210: waitFor(157,0,170);
  6032  0B99  1283               	bcf	status, 5	;RP0=0, select bank0
  6033  0B9A  1303               	bcf	status, 6	;RP1=0, select bank0
  6034  0B9B  01AC               	clrf	(?_waitFor)
  6035  0B9C  30AA               	movlw	(0AAh)
  6036  0B9D  00B3               	movwf	(??_turnAround+0)+0
  6037  0B9E  0833               	movf	(??_turnAround+0)+0,w
  6038  0B9F  00AD               	movwf	0+(?_waitFor)+01h
  6039  0BA0  309D               	movlw	(09Dh)
  6040  0BA1  120A  158A  2017   	fcall	_waitFor
              120A  158A         
  6041                           	line	211
  6042                           ;drive.c: 211: drive(0, 0, 0, 0);
  6043  0BA6  1283               	bcf	status, 5	;RP0=0, select bank0
  6044  0BA7  1303               	bcf	status, 6	;RP1=0, select bank0
  6045  0BA8  01AC               	clrf	(?_drive)
  6046  0BA9  01AD               	clrf	0+(?_drive)+01h
  6047  0BAA  01AE               	clrf	0+(?_drive)+02h
  6048  0BAB  3000               	movlw	(0)
  6049  0BAC  120A  158A  215A   	fcall	_drive
              120A  158A         
  6050                           	line	212
  6051                           	
  6052  0BB1                     l11521:	
  6053                           ;drive.c: 212: _delay((unsigned long)((6500)*(20000000/4000.0)));
  6054                           	opt asmopt_off
  6055  0BB1  30A5               movlw  165
  6056  0BB2  1283               	bcf	status, 5	;RP0=0, select bank0
  6057  0BB3  1303               	bcf	status, 6	;RP1=0, select bank0
  6058  0BB4  00B5               movwf	((??_turnAround+0)+0+2),f
  6059  0BB5  30E0               movlw	224
  6060  0BB6  00B4               movwf	((??_turnAround+0)+0+1),f
  6061  0BB7  30FE               	movlw	254
  6062  0BB8  00B3               movwf	((??_turnAround+0)+0),f
  6063  0BB9                     u6847:
  6064  0BB9  0BB3               	decfsz	((??_turnAround+0)+0),f
  6065  0BBA  2BB9               	goto	u6847
  6066  0BBB  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  6067  0BBC  2BB9               	goto	u6847
  6068  0BBD  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  6069  0BBE  2BB9               	goto	u6847
  6070                           opt asmopt_on
  6071                           
  6072                           	line	213
  6073                           	
  6074  0BBF                     l11523:	
  6075                           ;drive.c: 213: _delay((unsigned long)((6500)*(20000000/4000.0)));
  6076                           	opt asmopt_off
  6077  0BBF  30A5               movlw  165
  6078  0BC0  1283               	bcf	status, 5	;RP0=0, select bank0
  6079  0BC1  1303               	bcf	status, 6	;RP1=0, select bank0
  6080  0BC2  00B5               movwf	((??_turnAround+0)+0+2),f
  6081  0BC3  30E0               movlw	224
  6082  0BC4  00B4               movwf	((??_turnAround+0)+0+1),f
  6083  0BC5  30FE               	movlw	254
  6084  0BC6  00B3               movwf	((??_turnAround+0)+0),f
  6085  0BC7                     u6857:
  6086  0BC7  0BB3               	decfsz	((??_turnAround+0)+0),f
  6087  0BC8  2BC7               	goto	u6857
  6088  0BC9  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  6089  0BCA  2BC7               	goto	u6857
  6090  0BCB  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  6091  0BCC  2BC7               	goto	u6857
  6092                           opt asmopt_on
  6093                           
  6094                           	line	214
  6095                           	
  6096  0BCD                     l5132:	
  6097  0BCD  0008               	return
  6098                           	opt stack 0
  6099                           GLOBAL	__end_of_turnAround
  6100  0BCE                     	__end_of_turnAround:
  6101 ;; =============== function _turnAround ends ============
  6102                           
  6103                           	signat	_turnAround,88
  6104                           	global	_turnLeft90
  6105                           psect	text1891,local,class=CODE,delta=2
  6106                           global __ptext1891
  6107  0991                     __ptext1891:
  6108                           
  6109 ;; *************** function _turnLeft90 *****************
  6110 ;; Defined at:
  6111 ;;		line 217 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;		None               void
  6118 ;; Registers used:
  6119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6125 ;;      Params:         0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0
  6127 ;;      Temps:          0       3       0       0       0
  6128 ;;      Totals:         0       3       0       0       0
  6129 ;;Total ram usage:        3 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    4
  6132 ;; This function calls:
  6133 ;;		_drive
  6134 ;;		_waitFor
  6135 ;; This function is called by:
  6136 ;;		_driveForDistance
  6137 ;;		_goLeft
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           psect	text1891
  6141                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  6142                           	line	217
  6143                           	global	__size_of_turnLeft90
  6144  0037                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  6145                           	
  6146  0991                     _turnLeft90:	
  6147                           	opt	stack 0
  6148                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6149                           	line	218
  6150                           	
  6151  0991                     l11515:	
  6152                           ;drive.c: 218: drive(0, 25, 0, 1);
  6153  0991  3019               	movlw	(019h)
  6154  0992  1283               	bcf	status, 5	;RP0=0, select bank0
  6155  0993  1303               	bcf	status, 6	;RP1=0, select bank0
  6156  0994  00B3               	movwf	(??_turnLeft90+0)+0
  6157  0995  0833               	movf	(??_turnLeft90+0)+0,w
  6158  0996  00AC               	movwf	(?_drive)
  6159  0997  01AD               	clrf	0+(?_drive)+01h
  6160  0998  01AE               	clrf	0+(?_drive)+02h
  6161  0999  1403               	bsf	status,0
  6162  099A  0DAE               	rlf	0+(?_drive)+02h,f
  6163  099B  3000               	movlw	(0)
  6164  099C  120A  158A  215A   	fcall	_drive
              120A  158A         
  6165                           	line	219
  6166                           ;drive.c: 219: waitFor(157,0,85);
  6167  09A1  1283               	bcf	status, 5	;RP0=0, select bank0
  6168  09A2  1303               	bcf	status, 6	;RP1=0, select bank0
  6169  09A3  01AC               	clrf	(?_waitFor)
  6170  09A4  3055               	movlw	(055h)
  6171  09A5  00B3               	movwf	(??_turnLeft90+0)+0
  6172  09A6  0833               	movf	(??_turnLeft90+0)+0,w
  6173  09A7  00AD               	movwf	0+(?_waitFor)+01h
  6174  09A8  309D               	movlw	(09Dh)
  6175  09A9  120A  158A  2017   	fcall	_waitFor
              120A  158A         
  6176                           	line	220
  6177                           ;drive.c: 220: drive(0, 0, 0, 0);
  6178  09AE  1283               	bcf	status, 5	;RP0=0, select bank0
  6179  09AF  1303               	bcf	status, 6	;RP1=0, select bank0
  6180  09B0  01AC               	clrf	(?_drive)
  6181  09B1  01AD               	clrf	0+(?_drive)+01h
  6182  09B2  01AE               	clrf	0+(?_drive)+02h
  6183  09B3  3000               	movlw	(0)
  6184  09B4  120A  158A  215A   	fcall	_drive
              120A  158A         
  6185                           	line	221
  6186                           	
  6187  09B9                     l11517:	
  6188                           ;drive.c: 221: _delay((unsigned long)((6500)*(20000000/4000.0)));
  6189                           	opt asmopt_off
  6190  09B9  30A5               movlw  165
  6191  09BA  1283               	bcf	status, 5	;RP0=0, select bank0
  6192  09BB  1303               	bcf	status, 6	;RP1=0, select bank0
  6193  09BC  00B5               movwf	((??_turnLeft90+0)+0+2),f
  6194  09BD  30E0               movlw	224
  6195  09BE  00B4               movwf	((??_turnLeft90+0)+0+1),f
  6196  09BF  30FE               	movlw	254
  6197  09C0  00B3               movwf	((??_turnLeft90+0)+0),f
  6198  09C1                     u6867:
  6199  09C1  0BB3               	decfsz	((??_turnLeft90+0)+0),f
  6200  09C2  29C1               	goto	u6867
  6201  09C3  0BB4               	decfsz	((??_turnLeft90+0)+0+1),f
  6202  09C4  29C1               	goto	u6867
  6203  09C5  0BB5               	decfsz	((??_turnLeft90+0)+0+2),f
  6204  09C6  29C1               	goto	u6867
  6205                           opt asmopt_on
  6206                           
  6207                           	line	222
  6208                           	
  6209  09C7                     l5135:	
  6210  09C7  0008               	return
  6211                           	opt stack 0
  6212                           GLOBAL	__end_of_turnLeft90
  6213  09C8                     	__end_of_turnLeft90:
  6214 ;; =============== function _turnLeft90 ends ============
  6215                           
  6216                           	signat	_turnLeft90,88
  6217                           	global	_turnRight90
  6218                           psect	text1892,local,class=CODE,delta=2
  6219                           global __ptext1892
  6220  0A01                     __ptext1892:
  6221                           
  6222 ;; *************** function _turnRight90 *****************
  6223 ;; Defined at:
  6224 ;;		line 225 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;		None               void
  6231 ;; Registers used:
  6232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6238 ;;      Params:         0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0
  6240 ;;      Temps:          0       3       0       0       0
  6241 ;;      Totals:         0       3       0       0       0
  6242 ;;Total ram usage:        3 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    4
  6245 ;; This function calls:
  6246 ;;		_drive
  6247 ;;		_waitFor
  6248 ;; This function is called by:
  6249 ;;		_driveForDistance
  6250 ;;		_goRight
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           psect	text1892
  6254                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  6255                           	line	225
  6256                           	global	__size_of_turnRight90
  6257  003E                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  6258                           	
  6259  0A01                     _turnRight90:	
  6260                           	opt	stack 0
  6261                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6262                           	line	226
  6263                           	
  6264  0A01                     l11511:	
  6265                           ;drive.c: 226: drive(0, 25, 255, 255);
  6266  0A01  3019               	movlw	(019h)
  6267  0A02  1283               	bcf	status, 5	;RP0=0, select bank0
  6268  0A03  1303               	bcf	status, 6	;RP1=0, select bank0
  6269  0A04  00B3               	movwf	(??_turnRight90+0)+0
  6270  0A05  0833               	movf	(??_turnRight90+0)+0,w
  6271  0A06  00AC               	movwf	(?_drive)
  6272  0A07  30FF               	movlw	(0FFh)
  6273  0A08  00B4               	movwf	(??_turnRight90+1)+0
  6274  0A09  0834               	movf	(??_turnRight90+1)+0,w
  6275  0A0A  00AD               	movwf	0+(?_drive)+01h
  6276  0A0B  30FF               	movlw	(0FFh)
  6277  0A0C  00B5               	movwf	(??_turnRight90+2)+0
  6278  0A0D  0835               	movf	(??_turnRight90+2)+0,w
  6279  0A0E  00AE               	movwf	0+(?_drive)+02h
  6280  0A0F  3000               	movlw	(0)
  6281  0A10  120A  158A  215A   	fcall	_drive
              120A  158A         
  6282                           	line	227
  6283                           ;drive.c: 227: waitFor(157,255,169);
  6284  0A15  30FF               	movlw	(0FFh)
  6285  0A16  1283               	bcf	status, 5	;RP0=0, select bank0
  6286  0A17  1303               	bcf	status, 6	;RP1=0, select bank0
  6287  0A18  00B3               	movwf	(??_turnRight90+0)+0
  6288  0A19  0833               	movf	(??_turnRight90+0)+0,w
  6289  0A1A  00AC               	movwf	(?_waitFor)
  6290  0A1B  30A9               	movlw	(0A9h)
  6291  0A1C  00B4               	movwf	(??_turnRight90+1)+0
  6292  0A1D  0834               	movf	(??_turnRight90+1)+0,w
  6293  0A1E  00AD               	movwf	0+(?_waitFor)+01h
  6294  0A1F  309D               	movlw	(09Dh)
  6295  0A20  120A  158A  2017   	fcall	_waitFor
              120A  158A         
  6296                           	line	228
  6297                           ;drive.c: 228: drive(0, 0, 0, 0);
  6298  0A25  1283               	bcf	status, 5	;RP0=0, select bank0
  6299  0A26  1303               	bcf	status, 6	;RP1=0, select bank0
  6300  0A27  01AC               	clrf	(?_drive)
  6301  0A28  01AD               	clrf	0+(?_drive)+01h
  6302  0A29  01AE               	clrf	0+(?_drive)+02h
  6303  0A2A  3000               	movlw	(0)
  6304  0A2B  120A  158A  215A   	fcall	_drive
              120A  158A         
  6305                           	line	229
  6306                           	
  6307  0A30                     l11513:	
  6308                           ;drive.c: 229: _delay((unsigned long)((6500)*(20000000/4000.0)));
  6309                           	opt asmopt_off
  6310  0A30  30A5               movlw  165
  6311  0A31  1283               	bcf	status, 5	;RP0=0, select bank0
  6312  0A32  1303               	bcf	status, 6	;RP1=0, select bank0
  6313  0A33  00B5               movwf	((??_turnRight90+0)+0+2),f
  6314  0A34  30E0               movlw	224
  6315  0A35  00B4               movwf	((??_turnRight90+0)+0+1),f
  6316  0A36  30FE               	movlw	254
  6317  0A37  00B3               movwf	((??_turnRight90+0)+0),f
  6318  0A38                     u6877:
  6319  0A38  0BB3               	decfsz	((??_turnRight90+0)+0),f
  6320  0A39  2A38               	goto	u6877
  6321  0A3A  0BB4               	decfsz	((??_turnRight90+0)+0+1),f
  6322  0A3B  2A38               	goto	u6877
  6323  0A3C  0BB5               	decfsz	((??_turnRight90+0)+0+2),f
  6324  0A3D  2A38               	goto	u6877
  6325                           opt asmopt_on
  6326                           
  6327                           	line	230
  6328                           	
  6329  0A3E                     l5138:	
  6330  0A3E  0008               	return
  6331                           	opt stack 0
  6332                           GLOBAL	__end_of_turnRight90
  6333  0A3F                     	__end_of_turnRight90:
  6334 ;; =============== function _turnRight90 ends ============
  6335                           
  6336                           	signat	_turnRight90,88
  6337                           	global	_initSongs
  6338                           psect	text1893,local,class=CODE,delta=2
  6339                           global __ptext1893
  6340  0CA0                     __ptext1893:
  6341                           
  6342 ;; *************** function _initSongs *****************
  6343 ;; Defined at:
  6344 ;;		line 31 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;		None               void
  6351 ;; Registers used:
  6352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6358 ;;      Params:         0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    4
  6365 ;; This function calls:
  6366 ;;		_ser_putArr
  6367 ;; This function is called by:
  6368 ;;		_init
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           psect	text1893
  6372                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
  6373                           	line	31
  6374                           	global	__size_of_initSongs
  6375  004C                     	__size_of_initSongs	equ	__end_of_initSongs-_initSongs
  6376                           	
  6377  0CA0                     _initSongs:	
  6378                           	opt	stack 2
  6379                           ; Regs used in _initSongs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6380                           	line	32
  6381                           	
  6382  0CA0                     l11509:	
  6383                           ;songs.c: 32: ser_putArr(finalCountdown, 27);
  6384  0CA0  30AD               	movlw	(_finalCountdown&0ffh)
  6385  0CA1  1283               	bcf	status, 5	;RP0=0, select bank0
  6386  0CA2  1303               	bcf	status, 6	;RP1=0, select bank0
  6387  0CA3  00AC               	movwf	(?_ser_putArr)
  6388  0CA4  3001               	movlw	(0x3/2)
  6389  0CA5  00AD               	movwf	(?_ser_putArr+1)
  6390  0CA6  301B               	movlw	low(01Bh)
  6391  0CA7  00AE               	movwf	0+(?_ser_putArr)+02h
  6392  0CA8  3000               	movlw	high(01Bh)
  6393  0CA9  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  6394  0CAA  120A  158A  21C8   	fcall	_ser_putArr
              120A  158A         
  6395                           	line	33
  6396                           ;songs.c: 33: ser_putArr(superMarioBros, 25);
  6397  0CAF  30C8               	movlw	(_superMarioBros&0ffh)
  6398  0CB0  1283               	bcf	status, 5	;RP0=0, select bank0
  6399  0CB1  1303               	bcf	status, 6	;RP1=0, select bank0
  6400  0CB2  00AC               	movwf	(?_ser_putArr)
  6401  0CB3  3001               	movlw	(0x3/2)
  6402  0CB4  00AD               	movwf	(?_ser_putArr+1)
  6403  0CB5  3019               	movlw	low(019h)
  6404  0CB6  00AE               	movwf	0+(?_ser_putArr)+02h
  6405  0CB7  3000               	movlw	high(019h)
  6406  0CB8  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  6407  0CB9  120A  158A  21C8   	fcall	_ser_putArr
              120A  158A         
  6408                           	line	34
  6409                           ;songs.c: 34: ser_putArr(lookingForU2, 29);
  6410  0CBE  3090               	movlw	(_lookingForU2&0ffh)
  6411  0CBF  1283               	bcf	status, 5	;RP0=0, select bank0
  6412  0CC0  1303               	bcf	status, 6	;RP1=0, select bank0
  6413  0CC1  00AC               	movwf	(?_ser_putArr)
  6414  0CC2  3001               	movlw	(0x3/2)
  6415  0CC3  00AD               	movwf	(?_ser_putArr+1)
  6416  0CC4  301D               	movlw	low(01Dh)
  6417  0CC5  00AE               	movwf	0+(?_ser_putArr)+02h
  6418  0CC6  3000               	movlw	high(01Dh)
  6419  0CC7  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  6420  0CC8  120A  158A  21C8   	fcall	_ser_putArr
              120A  158A         
  6421                           	line	35
  6422                           ;songs.c: 35: ser_putArr(champions, 21);
  6423  0CCD  30CA               	movlw	(_champions&0ffh)
  6424  0CCE  1283               	bcf	status, 5	;RP0=0, select bank0
  6425  0CCF  1303               	bcf	status, 6	;RP1=0, select bank0
  6426  0CD0  00AC               	movwf	(?_ser_putArr)
  6427  0CD1  3000               	movlw	(0x1/2)
  6428  0CD2  00AD               	movwf	(?_ser_putArr+1)
  6429  0CD3  3015               	movlw	low(015h)
  6430  0CD4  00AE               	movwf	0+(?_ser_putArr)+02h
  6431  0CD5  3000               	movlw	high(015h)
  6432  0CD6  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  6433  0CD7  120A  158A  21C8   	fcall	_ser_putArr
              120A  158A         
  6434                           	line	36
  6435                           ;songs.c: 36: ser_putArr(beep, 5);
  6436  0CDC  30DF               	movlw	(_beep&0ffh)
  6437  0CDD  1283               	bcf	status, 5	;RP0=0, select bank0
  6438  0CDE  1303               	bcf	status, 6	;RP1=0, select bank0
  6439  0CDF  00AC               	movwf	(?_ser_putArr)
  6440  0CE0  3000               	movlw	(0x1/2)
  6441  0CE1  00AD               	movwf	(?_ser_putArr+1)
  6442  0CE2  3005               	movlw	low(05h)
  6443  0CE3  00AE               	movwf	0+(?_ser_putArr)+02h
  6444  0CE4  3000               	movlw	high(05h)
  6445  0CE5  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  6446  0CE6  120A  158A  21C8   	fcall	_ser_putArr
              120A  158A         
  6447                           	line	37
  6448                           	
  6449  0CEB                     l3642:	
  6450  0CEB  0008               	return
  6451                           	opt stack 0
  6452                           GLOBAL	__end_of_initSongs
  6453  0CEC                     	__end_of_initSongs:
  6454 ;; =============== function _initSongs ends ============
  6455                           
  6456                           	signat	_initSongs,88
  6457                           	global	_lcd_init
  6458                           psect	text1894,local,class=CODE,delta=2
  6459                           global __ptext1894
  6460  0869                     __ptext1894:
  6461                           
  6462 ;; *************** function _lcd_init *****************
  6463 ;; Defined at:
  6464 ;;		line 78 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;		None               void
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, pclath, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6478 ;;      Params:         0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0
  6481 ;;      Totals:         0       0       0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    3
  6485 ;; This function calls:
  6486 ;;		_lcd_write_control
  6487 ;; This function is called by:
  6488 ;;		_init
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           psect	text1894
  6492                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6493                           	line	78
  6494                           	global	__size_of_lcd_init
  6495  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  6496                           	
  6497  0869                     _lcd_init:	
  6498                           	opt	stack 3
  6499                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  6500                           	line	82
  6501                           	
  6502  0869                     l11489:	
  6503                           ;lcd.c: 82: ADCON1 = 0b00000010;
  6504  0869  3002               	movlw	(02h)
  6505  086A  1683               	bsf	status, 5	;RP0=1, select bank1
  6506  086B  1303               	bcf	status, 6	;RP1=0, select bank1
  6507  086C  009F               	movwf	(159)^080h	;volatile
  6508                           	line	85
  6509                           	
  6510  086D                     l11491:	
  6511                           ;lcd.c: 85: PORTD = 0;
  6512  086D  1283               	bcf	status, 5	;RP0=0, select bank0
  6513  086E  1303               	bcf	status, 6	;RP1=0, select bank0
  6514  086F  0188               	clrf	(8)	;volatile
  6515                           	line	86
  6516                           	
  6517  0870                     l11493:	
  6518                           ;lcd.c: 86: PORTE = 0;
  6519  0870  0189               	clrf	(9)	;volatile
  6520                           	line	88
  6521                           	
  6522  0871                     l11495:	
  6523                           ;lcd.c: 88: TRISD = 0b00000000;
  6524  0871  1683               	bsf	status, 5	;RP0=1, select bank1
  6525  0872  1303               	bcf	status, 6	;RP1=0, select bank1
  6526  0873  0188               	clrf	(136)^080h	;volatile
  6527                           	line	89
  6528                           	
  6529  0874                     l11497:	
  6530                           ;lcd.c: 89: TRISE = 0b00000000;
  6531  0874  0189               	clrf	(137)^080h	;volatile
  6532                           	line	92
  6533                           	
  6534  0875                     l11499:	
  6535                           ;lcd.c: 92: lcd_write_control(0b00000001);
  6536  0875  3001               	movlw	(01h)
  6537  0876  160A  118A  2640   	fcall	_lcd_write_control
              120A  158A         
  6538                           	line	93
  6539                           	
  6540  087B                     l11501:	
  6541                           ;lcd.c: 93: lcd_write_control(0b00111000);
  6542  087B  3038               	movlw	(038h)
  6543  087C  160A  118A  2640   	fcall	_lcd_write_control
              120A  158A         
  6544                           	line	94
  6545                           	
  6546  0881                     l11503:	
  6547                           ;lcd.c: 94: lcd_write_control(0b00001100);
  6548  0881  300C               	movlw	(0Ch)
  6549  0882  160A  118A  2640   	fcall	_lcd_write_control
              120A  158A         
  6550                           	line	95
  6551                           	
  6552  0887                     l11505:	
  6553                           ;lcd.c: 95: lcd_write_control(0b00000110);
  6554  0887  3006               	movlw	(06h)
  6555  0888  160A  118A  2640   	fcall	_lcd_write_control
              120A  158A         
  6556                           	line	96
  6557                           	
  6558  088D                     l11507:	
  6559                           ;lcd.c: 96: lcd_write_control(0b00000010);
  6560  088D  3002               	movlw	(02h)
  6561  088E  160A  118A  2640   	fcall	_lcd_write_control
              120A  158A         
  6562                           	line	98
  6563                           	
  6564  0893                     l1420:	
  6565  0893  0008               	return
  6566                           	opt stack 0
  6567                           GLOBAL	__end_of_lcd_init
  6568  0894                     	__end_of_lcd_init:
  6569 ;; =============== function _lcd_init ends ============
  6570                           
  6571                           	signat	_lcd_init,88
  6572                           	global	_lcd_write_1_digit_bcd
  6573                           psect	text1895,local,class=CODE,delta=2
  6574                           global __ptext1895
  6575  15EC                     __ptext1895:
  6576                           
  6577 ;; *************** function _lcd_write_1_digit_bcd *****************
  6578 ;; Defined at:
  6579 ;;		line 44 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  data            1    wreg     unsigned char 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  data            1   13[BANK0 ] unsigned char 
  6584 ;; Return value:  Size  Location     Type
  6585 ;;		None               void
  6586 ;; Registers used:
  6587 ;;		wreg, status,2, status,0, pclath, cstack
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6593 ;;      Params:         0       0       0       0       0
  6594 ;;      Locals:         0       1       0       0       0
  6595 ;;      Temps:          0       0       0       0       0
  6596 ;;      Totals:         0       1       0       0       0
  6597 ;;Total ram usage:        1 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    3
  6600 ;; This function calls:
  6601 ;;		_lcd_write_data
  6602 ;; This function is called by:
  6603 ;;		_findFinalDestination
  6604 ;;		_updateLocation
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           psect	text1895
  6608                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6609                           	line	44
  6610                           	global	__size_of_lcd_write_1_digit_bcd
  6611  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  6612                           	
  6613  15EC                     _lcd_write_1_digit_bcd:	
  6614                           	opt	stack 3
  6615                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  6616                           ;lcd_write_1_digit_bcd@data stored from wreg
  6617  15EC  1283               	bcf	status, 5	;RP0=0, select bank0
  6618  15ED  1303               	bcf	status, 6	;RP1=0, select bank0
  6619  15EE  00AD               	movwf	(lcd_write_1_digit_bcd@data)
  6620                           	line	45
  6621                           	
  6622  15EF                     l11487:	
  6623                           ;lcd.c: 45: lcd_write_data(data + 48);
  6624  15EF  082D               	movf	(lcd_write_1_digit_bcd@data),w
  6625  15F0  3E30               	addlw	030h
  6626  15F1  160A  118A  261A   	fcall	_lcd_write_data
              160A  118A         
  6627                           	line	46
  6628                           	
  6629  15F6                     l1408:	
  6630  15F6  0008               	return
  6631                           	opt stack 0
  6632                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  6633  15F7                     	__end_of_lcd_write_1_digit_bcd:
  6634 ;; =============== function _lcd_write_1_digit_bcd ends ============
  6635                           
  6636                           	signat	_lcd_write_1_digit_bcd,4216
  6637                           	global	_lcd_write_string
  6638                           psect	text1896,local,class=CODE,delta=2
  6639                           global __ptext1896
  6640  1766                     __ptext1896:
  6641                           
  6642 ;; *************** function _lcd_write_string *****************
  6643 ;; Defined at:
  6644 ;;		line 38 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  s               1    wreg     PTR const unsigned char 
  6647 ;;		 -> STR_2(17), STR_1(17), 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  6650 ;;		 -> STR_2(17), STR_1(17), 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;		None               void
  6653 ;; Registers used:
  6654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6660 ;;      Params:         0       0       0       0       0
  6661 ;;      Locals:         0       1       0       0       0
  6662 ;;      Temps:          0       1       0       0       0
  6663 ;;      Totals:         0       2       0       0       0
  6664 ;;Total ram usage:        2 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    3
  6667 ;; This function calls:
  6668 ;;		_lcd_write_data
  6669 ;; This function is called by:
  6670 ;;		_main
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           psect	text1896
  6674                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6675                           	line	38
  6676                           	global	__size_of_lcd_write_string
  6677  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  6678                           	
  6679  1766                     _lcd_write_string:	
  6680                           	opt	stack 4
  6681                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6682                           ;lcd_write_string@s stored from wreg
  6683  1766  1283               	bcf	status, 5	;RP0=0, select bank0
  6684  1767  1303               	bcf	status, 6	;RP1=0, select bank0
  6685  1768  00AE               	movwf	(lcd_write_string@s)
  6686                           	line	40
  6687                           	
  6688  1769                     l11479:	
  6689                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  6690  1769  2F7D               	goto	l11485
  6691                           	
  6692  176A                     l1403:	
  6693                           	
  6694  176A                     l11481:	
  6695  176A  082E               	movf	(lcd_write_string@s),w
  6696  176B  0084               	movwf	fsr0
  6697  176C  160A  118A  2000   	fcall	stringdir
              160A  118A         
  6698  1771  160A  118A  261A   	fcall	_lcd_write_data
              160A  118A         
  6699                           	
  6700  1776                     l11483:	
  6701  1776  3001               	movlw	(01h)
  6702  1777  1283               	bcf	status, 5	;RP0=0, select bank0
  6703  1778  1303               	bcf	status, 6	;RP1=0, select bank0
  6704  1779  00AD               	movwf	(??_lcd_write_string+0)+0
  6705  177A  082D               	movf	(??_lcd_write_string+0)+0,w
  6706  177B  07AE               	addwf	(lcd_write_string@s),f
  6707  177C  2F7D               	goto	l11485
  6708                           	
  6709  177D                     l1402:	
  6710                           	
  6711  177D                     l11485:	
  6712  177D  082E               	movf	(lcd_write_string@s),w
  6713  177E  0084               	movwf	fsr0
  6714  177F  160A  118A  2000   	fcall	stringdir
              160A  118A         
  6715  1784  3800               	iorlw	0
  6716  1785  1D03               	skipz
  6717  1786  2F88               	goto	u6351
  6718  1787  2F89               	goto	u6350
  6719  1788                     u6351:
  6720  1788  2F6A               	goto	l11481
  6721  1789                     u6350:
  6722  1789  2F8A               	goto	l1405
  6723                           	
  6724  178A                     l1404:	
  6725                           	line	41
  6726                           	
  6727  178A                     l1405:	
  6728  178A  0008               	return
  6729                           	opt stack 0
  6730                           GLOBAL	__end_of_lcd_write_string
  6731  178B                     	__end_of_lcd_write_string:
  6732 ;; =============== function _lcd_write_string ends ============
  6733                           
  6734                           	signat	_lcd_write_string,4216
  6735                           	global	_lcd_set_cursor
  6736                           psect	text1897,local,class=CODE,delta=2
  6737                           global __ptext1897
  6738  15E1                     __ptext1897:
  6739                           
  6740 ;; *************** function _lcd_set_cursor *****************
  6741 ;; Defined at:
  6742 ;;		line 32 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  address         1    wreg     unsigned char 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  address         1   13[BANK0 ] unsigned char 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;		None               void
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0, pclath, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6756 ;;      Params:         0       0       0       0       0
  6757 ;;      Locals:         0       1       0       0       0
  6758 ;;      Temps:          0       0       0       0       0
  6759 ;;      Totals:         0       1       0       0       0
  6760 ;;Total ram usage:        1 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    3
  6763 ;; This function calls:
  6764 ;;		_lcd_write_control
  6765 ;; This function is called by:
  6766 ;;		_findFinalDestination
  6767 ;;		_goBackward
  6768 ;;		_goForward
  6769 ;;		_goLeft
  6770 ;;		_goReverse
  6771 ;;		_goRight
  6772 ;;		_checkForFinalDestination
  6773 ;;		_lookForVictim
  6774 ;;		_findWalls
  6775 ;;		_updateLocation
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           psect	text1897
  6780                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  6781                           	line	32
  6782                           	global	__size_of_lcd_set_cursor
  6783  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  6784                           	
  6785  15E1                     _lcd_set_cursor:	
  6786                           	opt	stack 3
  6787                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6788                           ;lcd_set_cursor@address stored from wreg
  6789  15E1  1283               	bcf	status, 5	;RP0=0, select bank0
  6790  15E2  1303               	bcf	status, 6	;RP1=0, select bank0
  6791  15E3  00AD               	movwf	(lcd_set_cursor@address)
  6792                           	line	33
  6793                           	
  6794  15E4                     l11475:	
  6795                           ;lcd.c: 33: address |= 0b10000000;
  6796  15E4  17AD               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  6797                           	line	34
  6798                           	
  6799  15E5                     l11477:	
  6800                           ;lcd.c: 34: lcd_write_control(address);
  6801  15E5  082D               	movf	(lcd_set_cursor@address),w
  6802  15E6  160A  118A  2640   	fcall	_lcd_write_control
              160A  118A         
  6803                           	line	35
  6804                           	
  6805  15EB                     l1399:	
  6806  15EB  0008               	return
  6807                           	opt stack 0
  6808                           GLOBAL	__end_of_lcd_set_cursor
  6809  15EC                     	__end_of_lcd_set_cursor:
  6810 ;; =============== function _lcd_set_cursor ends ============
  6811                           
  6812                           	signat	_lcd_set_cursor,4216
  6813                           	global	_adc_read_channel
  6814                           psect	text1898,local,class=CODE,delta=2
  6815                           global __ptext1898
  6816  0A7E                     __ptext1898:
  6817                           
  6818 ;; *************** function _adc_read_channel *****************
  6819 ;; Defined at:
  6820 ;;		line 7 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\adc.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  channel         1    wreg     unsigned char 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  channel         1   40[BANK0 ] unsigned char 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  2   37[BANK0 ] int 
  6827 ;; Registers used:
  6828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6834 ;;      Params:         0       2       0       0       0
  6835 ;;      Locals:         0       1       0       0       0
  6836 ;;      Temps:          0       1       0       0       0
  6837 ;;      Totals:         0       4       0       0       0
  6838 ;;Total ram usage:        4 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    4
  6841 ;; This function calls:
  6842 ;;		_adc_read
  6843 ;; This function is called by:
  6844 ;;		_readIR
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           psect	text1898
  6848                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\adc.c"
  6849                           	line	7
  6850                           	global	__size_of_adc_read_channel
  6851  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6852                           	
  6853  0A7E                     _adc_read_channel:	
  6854                           	opt	stack 1
  6855                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6856                           ;adc_read_channel@channel stored from wreg
  6857  0A7E  1283               	bcf	status, 5	;RP0=0, select bank0
  6858  0A7F  1303               	bcf	status, 6	;RP1=0, select bank0
  6859  0A80  00C8               	movwf	(adc_read_channel@channel)
  6860                           	line	8
  6861                           	
  6862  0A81                     l11459:	
  6863                           ;adc.c: 8: switch(channel)
  6864  0A81  2A9B               	goto	l11467
  6865                           	line	10
  6866                           ;adc.c: 9: {
  6867                           ;adc.c: 10: case 0:
  6868                           	
  6869  0A82                     l690:	
  6870                           	line	11
  6871                           ;adc.c: 11: CHS0 = 0;
  6872  0A82  119F               	bcf	(251/8),(251)&7
  6873                           	line	12
  6874                           ;adc.c: 12: CHS1 = 0;
  6875  0A83  121F               	bcf	(252/8),(252)&7
  6876                           	line	13
  6877                           ;adc.c: 13: CHS2 = 0;
  6878  0A84  129F               	bcf	(253/8),(253)&7
  6879                           	line	14
  6880                           ;adc.c: 14: break;
  6881  0A85  2AAC               	goto	l11469
  6882                           	line	15
  6883                           ;adc.c: 15: case 1:
  6884                           	
  6885  0A86                     l692:	
  6886                           	line	16
  6887                           ;adc.c: 16: CHS0 = 1;
  6888  0A86  159F               	bsf	(251/8),(251)&7
  6889                           	line	17
  6890                           ;adc.c: 17: CHS1 = 0;
  6891  0A87  121F               	bcf	(252/8),(252)&7
  6892                           	line	18
  6893                           ;adc.c: 18: CHS2 = 0;
  6894  0A88  129F               	bcf	(253/8),(253)&7
  6895                           	line	19
  6896                           ;adc.c: 19: break;
  6897  0A89  2AAC               	goto	l11469
  6898                           	line	20
  6899                           ;adc.c: 20: case 2:
  6900                           	
  6901  0A8A                     l693:	
  6902                           	line	21
  6903                           ;adc.c: 21: CHS0 = 0;
  6904  0A8A  119F               	bcf	(251/8),(251)&7
  6905                           	line	22
  6906                           ;adc.c: 22: CHS1 = 1;
  6907  0A8B  161F               	bsf	(252/8),(252)&7
  6908                           	line	23
  6909                           ;adc.c: 23: CHS2 = 0;
  6910  0A8C  129F               	bcf	(253/8),(253)&7
  6911                           	line	24
  6912                           ;adc.c: 24: break;
  6913  0A8D  2AAC               	goto	l11469
  6914                           	line	25
  6915                           ;adc.c: 25: case 3:
  6916                           	
  6917  0A8E                     l694:	
  6918                           	line	26
  6919                           ;adc.c: 26: CHS0 = 1;
  6920  0A8E  159F               	bsf	(251/8),(251)&7
  6921                           	line	27
  6922                           ;adc.c: 27: CHS1 = 1;
  6923  0A8F  161F               	bsf	(252/8),(252)&7
  6924                           	line	28
  6925                           ;adc.c: 28: CHS2 = 0;
  6926  0A90  129F               	bcf	(253/8),(253)&7
  6927                           	line	29
  6928                           ;adc.c: 29: break;
  6929  0A91  2AAC               	goto	l11469
  6930                           	line	30
  6931                           ;adc.c: 30: case 4:
  6932                           	
  6933  0A92                     l695:	
  6934                           	line	31
  6935                           ;adc.c: 31: CHS0 = 0;
  6936  0A92  119F               	bcf	(251/8),(251)&7
  6937                           	line	32
  6938                           ;adc.c: 32: CHS1 = 0;
  6939  0A93  121F               	bcf	(252/8),(252)&7
  6940                           	line	33
  6941                           ;adc.c: 33: CHS2 = 1;
  6942  0A94  169F               	bsf	(253/8),(253)&7
  6943                           	line	34
  6944                           ;adc.c: 34: break;
  6945  0A95  2AAC               	goto	l11469
  6946                           	line	37
  6947                           ;adc.c: 37: default:
  6948                           	
  6949  0A96                     l696:	
  6950                           	line	38
  6951                           	
  6952  0A96                     l11461:	
  6953                           ;adc.c: 38: return 0;
  6954  0A96  01C5               	clrf	(?_adc_read_channel)
  6955  0A97  01C6               	clrf	(?_adc_read_channel+1)
  6956  0A98  2ABE               	goto	l697
  6957                           	
  6958  0A99                     l11463:	
  6959  0A99  2ABE               	goto	l697
  6960                           	line	39
  6961                           	
  6962  0A9A                     l11465:	
  6963                           ;adc.c: 39: }
  6964  0A9A  2AAC               	goto	l11469
  6965                           	line	8
  6966                           	
  6967  0A9B                     l689:	
  6968                           	
  6969  0A9B                     l11467:	
  6970  0A9B  0848               	movf	(adc_read_channel@channel),w
  6971                           	; Switch size 1, requested type "space"
  6972                           ; Number of cases is 5, Range of values is 0 to 4
  6973                           ; switch strategies available:
  6974                           ; Name         Instructions Cycles
  6975                           ; simple_byte           16     9 (average)
  6976                           ; direct_byte           23     8 (fixed)
  6977                           ; jumptable            260     6 (fixed)
  6978                           ; rangetable             9     6 (fixed)
  6979                           ; spacedrange           16     9 (fixed)
  6980                           ; locatedrange           5     3 (fixed)
  6981                           ;	Chosen strategy is simple_byte
  6982                           
  6983                           	opt asmopt_off
  6984  0A9C  3A00               	xorlw	0^0	; case 0
  6985  0A9D  1903               	skipnz
  6986  0A9E  2A82               	goto	l690
  6987  0A9F  3A01               	xorlw	1^0	; case 1
  6988  0AA0  1903               	skipnz
  6989  0AA1  2A86               	goto	l692
  6990  0AA2  3A03               	xorlw	2^1	; case 2
  6991  0AA3  1903               	skipnz
  6992  0AA4  2A8A               	goto	l693
  6993  0AA5  3A01               	xorlw	3^2	; case 3
  6994  0AA6  1903               	skipnz
  6995  0AA7  2A8E               	goto	l694
  6996  0AA8  3A07               	xorlw	4^3	; case 4
  6997  0AA9  1903               	skipnz
  6998  0AAA  2A92               	goto	l695
  6999  0AAB  2A96               	goto	l11461
  7000                           	opt asmopt_on
  7001                           
  7002                           	line	39
  7003                           	
  7004  0AAC                     l691:	
  7005                           	line	41
  7006                           	
  7007  0AAC                     l11469:	
  7008                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7009                           	opt asmopt_off
  7010  0AAC  3053               movlw	83
  7011  0AAD  00C7               movwf	(??_adc_read_channel+0)+0,f
  7012  0AAE                     u6887:
  7013  0AAE  0BC7               decfsz	(??_adc_read_channel+0)+0,f
  7014  0AAF  2AAE               	goto	u6887
  7015                           opt asmopt_on
  7016                           
  7017                           	line	43
  7018                           	
  7019  0AB0                     l11471:	
  7020                           ;adc.c: 43: return adc_read();
  7021  0AB0  120A  158A  223F   	fcall	_adc_read
              120A  158A         
  7022  0AB5  1283               	bcf	status, 5	;RP0=0, select bank0
  7023  0AB6  1303               	bcf	status, 6	;RP1=0, select bank0
  7024  0AB7  083A               	movf	(1+(?_adc_read)),w
  7025  0AB8  01C6               	clrf	(?_adc_read_channel+1)
  7026  0AB9  07C6               	addwf	(?_adc_read_channel+1)
  7027  0ABA  0839               	movf	(0+(?_adc_read)),w
  7028  0ABB  01C5               	clrf	(?_adc_read_channel)
  7029  0ABC  07C5               	addwf	(?_adc_read_channel)
  7030                           
  7031  0ABD  2ABE               	goto	l697
  7032                           	
  7033  0ABE                     l11473:	
  7034                           	line	45
  7035                           	
  7036  0ABE                     l697:	
  7037  0ABE  0008               	return
  7038                           	opt stack 0
  7039                           GLOBAL	__end_of_adc_read_channel
  7040  0ABF                     	__end_of_adc_read_channel:
  7041 ;; =============== function _adc_read_channel ends ============
  7042                           
  7043                           	signat	_adc_read_channel,4218
  7044                           	global	___lbtoft
  7045                           psect	text1899,local,class=CODE,delta=2
  7046                           global __ptext1899
  7047  1700                     __ptext1899:
  7048                           
  7049 ;; *************** function ___lbtoft *****************
  7050 ;; Defined at:
  7051 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbtoft.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  c               1    wreg     unsigned char 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  c               1   39[BANK0 ] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  3   32[BANK0 ] float 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0, pclath, cstack
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         0       3       0       0       0
  7066 ;;      Locals:         0       1       0       0       0
  7067 ;;      Temps:          0       4       0       0       0
  7068 ;;      Totals:         0       8       0       0       0
  7069 ;;Total ram usage:        8 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    3
  7072 ;; This function calls:
  7073 ;;		___ftpack
  7074 ;; This function is called by:
  7075 ;;		_goParallel
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           psect	text1899
  7079                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbtoft.c"
  7080                           	line	28
  7081                           	global	__size_of___lbtoft
  7082  0021                     	__size_of___lbtoft	equ	__end_of___lbtoft-___lbtoft
  7083                           	
  7084  1700                     ___lbtoft:	
  7085                           	opt	stack 3
  7086                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  7087                           ;___lbtoft@c stored from wreg
  7088  1700  1283               	bcf	status, 5	;RP0=0, select bank0
  7089  1701  1303               	bcf	status, 6	;RP1=0, select bank0
  7090  1702  00C7               	movwf	(___lbtoft@c)
  7091                           	line	29
  7092                           	
  7093  1703                     l11455:	
  7094  1703  0847               	movf	(___lbtoft@c),w
  7095  1704  00C3               	movwf	((??___lbtoft+0)+0)
  7096  1705  01C4               	clrf	((??___lbtoft+0)+0+1)
  7097  1706  01C5               	clrf	((??___lbtoft+0)+0+2)
  7098  1707  0843               	movf	0+(??___lbtoft+0)+0,w
  7099  1708  00AA               	movwf	(?___ftpack)
  7100  1709  0844               	movf	1+(??___lbtoft+0)+0,w
  7101  170A  00AB               	movwf	(?___ftpack+1)
  7102  170B  0845               	movf	2+(??___lbtoft+0)+0,w
  7103  170C  00AC               	movwf	(?___ftpack+2)
  7104  170D  308E               	movlw	(08Eh)
  7105  170E  00C6               	movwf	(??___lbtoft+3)+0
  7106  170F  0846               	movf	(??___lbtoft+3)+0,w
  7107  1710  00AD               	movwf	0+(?___ftpack)+03h
  7108  1711  01AE               	clrf	0+(?___ftpack)+04h
  7109  1712  120A  158A  25CA   	fcall	___ftpack
              160A  118A         
  7110  1717  1283               	bcf	status, 5	;RP0=0, select bank0
  7111  1718  1303               	bcf	status, 6	;RP1=0, select bank0
  7112  1719  082A               	movf	(0+(?___ftpack)),w
  7113  171A  00C0               	movwf	(?___lbtoft)
  7114  171B  082B               	movf	(1+(?___ftpack)),w
  7115  171C  00C1               	movwf	(?___lbtoft+1)
  7116  171D  082C               	movf	(2+(?___ftpack)),w
  7117  171E  00C2               	movwf	(?___lbtoft+2)
  7118  171F  2F20               	goto	l6858
  7119                           	
  7120  1720                     l11457:	
  7121                           	line	30
  7122                           	
  7123  1720                     l6858:	
  7124  1720  0008               	return
  7125                           	opt stack 0
  7126                           GLOBAL	__end_of___lbtoft
  7127  1721                     	__end_of___lbtoft:
  7128 ;; =============== function ___lbtoft ends ============
  7129                           
  7130                           	signat	___lbtoft,4219
  7131                           	global	___ftmul
  7132                           psect	text1900,local,class=CODE,delta=2
  7133                           global __ptext1900
  7134  05D4                     __ptext1900:
  7135                           
  7136 ;; *************** function ___ftmul *****************
  7137 ;; Defined at:
  7138 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  f1              3   40[BANK0 ] float 
  7141 ;;  f2              3   43[BANK0 ] float 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  f3_as_produc    3   51[BANK0 ] unsigned um
  7144 ;;  sign            1   55[BANK0 ] unsigned char 
  7145 ;;  cntr            1   54[BANK0 ] unsigned char 
  7146 ;;  exp             1   50[BANK0 ] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  3   40[BANK0 ] float 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0, pclath, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7156 ;;      Params:         0       6       0       0       0
  7157 ;;      Locals:         0       6       0       0       0
  7158 ;;      Temps:          0       4       0       0       0
  7159 ;;      Totals:         0      16       0       0       0
  7160 ;;Total ram usage:       16 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:    3
  7163 ;; This function calls:
  7164 ;;		___ftpack
  7165 ;; This function is called by:
  7166 ;;		_goParallel
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           psect	text1900
  7170                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  7171                           	line	52
  7172                           	global	__size_of___ftmul
  7173  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  7174                           	
  7175  05D4                     ___ftmul:	
  7176                           	opt	stack 3
  7177                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7178                           	line	56
  7179                           	
  7180  05D4                     l11405:	
  7181  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  7182  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  7183  05D6  0848               	movf	(___ftmul@f1),w
  7184  05D7  00CE               	movwf	((??___ftmul+0)+0)
  7185  05D8  0849               	movf	(___ftmul@f1+1),w
  7186  05D9  00CF               	movwf	((??___ftmul+0)+0+1)
  7187  05DA  084A               	movf	(___ftmul@f1+2),w
  7188  05DB  00D0               	movwf	((??___ftmul+0)+0+2)
  7189  05DC  1003               	clrc
  7190  05DD  0D4F               	rlf	(??___ftmul+0)+1,w
  7191  05DE  0D50               	rlf	(??___ftmul+0)+2,w
  7192  05DF  00D1               	movwf	(??___ftmul+3)+0
  7193  05E0  0851               	movf	(??___ftmul+3)+0,w
  7194  05E1  00D2               	movwf	(___ftmul@exp)
  7195  05E2  08D2               	movf	((___ftmul@exp)),f
  7196  05E3  1D03               	skipz
  7197  05E4  2DE6               	goto	u6211
  7198  05E5  2DE7               	goto	u6210
  7199  05E6                     u6211:
  7200  05E6  2DEF               	goto	l11411
  7201  05E7                     u6210:
  7202                           	line	57
  7203                           	
  7204  05E7                     l11407:	
  7205  05E7  3000               	movlw	0x0
  7206  05E8  00C8               	movwf	(?___ftmul)
  7207  05E9  3000               	movlw	0x0
  7208  05EA  00C9               	movwf	(?___ftmul+1)
  7209  05EB  3000               	movlw	0x0
  7210  05EC  00CA               	movwf	(?___ftmul+2)
  7211  05ED  2EC1               	goto	l6832
  7212                           	
  7213  05EE                     l11409:	
  7214  05EE  2EC1               	goto	l6832
  7215                           	
  7216  05EF                     l6831:	
  7217                           	line	58
  7218                           	
  7219  05EF                     l11411:	
  7220  05EF  084B               	movf	(___ftmul@f2),w
  7221  05F0  00CE               	movwf	((??___ftmul+0)+0)
  7222  05F1  084C               	movf	(___ftmul@f2+1),w
  7223  05F2  00CF               	movwf	((??___ftmul+0)+0+1)
  7224  05F3  084D               	movf	(___ftmul@f2+2),w
  7225  05F4  00D0               	movwf	((??___ftmul+0)+0+2)
  7226  05F5  1003               	clrc
  7227  05F6  0D4F               	rlf	(??___ftmul+0)+1,w
  7228  05F7  0D50               	rlf	(??___ftmul+0)+2,w
  7229  05F8  00D1               	movwf	(??___ftmul+3)+0
  7230  05F9  0851               	movf	(??___ftmul+3)+0,w
  7231  05FA  00D7               	movwf	(___ftmul@sign)
  7232  05FB  08D7               	movf	((___ftmul@sign)),f
  7233  05FC  1D03               	skipz
  7234  05FD  2DFF               	goto	u6221
  7235  05FE  2E00               	goto	u6220
  7236  05FF                     u6221:
  7237  05FF  2E08               	goto	l11417
  7238  0600                     u6220:
  7239                           	line	59
  7240                           	
  7241  0600                     l11413:	
  7242  0600  3000               	movlw	0x0
  7243  0601  00C8               	movwf	(?___ftmul)
  7244  0602  3000               	movlw	0x0
  7245  0603  00C9               	movwf	(?___ftmul+1)
  7246  0604  3000               	movlw	0x0
  7247  0605  00CA               	movwf	(?___ftmul+2)
  7248  0606  2EC1               	goto	l6832
  7249                           	
  7250  0607                     l11415:	
  7251  0607  2EC1               	goto	l6832
  7252                           	
  7253  0608                     l6833:	
  7254                           	line	60
  7255                           	
  7256  0608                     l11417:	
  7257  0608  0857               	movf	(___ftmul@sign),w
  7258  0609  3E7B               	addlw	07Bh
  7259  060A  00CE               	movwf	(??___ftmul+0)+0
  7260  060B  084E               	movf	(??___ftmul+0)+0,w
  7261  060C  07D2               	addwf	(___ftmul@exp),f
  7262                           	line	61
  7263  060D  0848               	movf	(___ftmul@f1),w
  7264  060E  00CE               	movwf	((??___ftmul+0)+0)
  7265  060F  0849               	movf	(___ftmul@f1+1),w
  7266  0610  00CF               	movwf	((??___ftmul+0)+0+1)
  7267  0611  084A               	movf	(___ftmul@f1+2),w
  7268  0612  00D0               	movwf	((??___ftmul+0)+0+2)
  7269  0613  3010               	movlw	010h
  7270  0614                     u6235:
  7271  0614  1003               	clrc
  7272  0615  0CD0               	rrf	(??___ftmul+0)+2,f
  7273  0616  0CCF               	rrf	(??___ftmul+0)+1,f
  7274  0617  0CCE               	rrf	(??___ftmul+0)+0,f
  7275  0618                     u6230:
  7276  0618  3EFF               	addlw	-1
  7277  0619  1D03               	skipz
  7278  061A  2E14               	goto	u6235
  7279  061B  084E               	movf	0+(??___ftmul+0)+0,w
  7280  061C  00D1               	movwf	(??___ftmul+3)+0
  7281  061D  0851               	movf	(??___ftmul+3)+0,w
  7282  061E  00D7               	movwf	(___ftmul@sign)
  7283                           	line	62
  7284  061F  084B               	movf	(___ftmul@f2),w
  7285  0620  00CE               	movwf	((??___ftmul+0)+0)
  7286  0621  084C               	movf	(___ftmul@f2+1),w
  7287  0622  00CF               	movwf	((??___ftmul+0)+0+1)
  7288  0623  084D               	movf	(___ftmul@f2+2),w
  7289  0624  00D0               	movwf	((??___ftmul+0)+0+2)
  7290  0625  3010               	movlw	010h
  7291  0626                     u6245:
  7292  0626  1003               	clrc
  7293  0627  0CD0               	rrf	(??___ftmul+0)+2,f
  7294  0628  0CCF               	rrf	(??___ftmul+0)+1,f
  7295  0629  0CCE               	rrf	(??___ftmul+0)+0,f
  7296  062A                     u6240:
  7297  062A  3EFF               	addlw	-1
  7298  062B  1D03               	skipz
  7299  062C  2E26               	goto	u6245
  7300  062D  084E               	movf	0+(??___ftmul+0)+0,w
  7301  062E  00D1               	movwf	(??___ftmul+3)+0
  7302  062F  0851               	movf	(??___ftmul+3)+0,w
  7303  0630  06D7               	xorwf	(___ftmul@sign),f
  7304                           	line	63
  7305  0631  3080               	movlw	(080h)
  7306  0632  00CE               	movwf	(??___ftmul+0)+0
  7307  0633  084E               	movf	(??___ftmul+0)+0,w
  7308  0634  05D7               	andwf	(___ftmul@sign),f
  7309                           	line	64
  7310                           	
  7311  0635                     l11419:	
  7312  0635  17C9               	bsf	(___ftmul@f1)+(15/8),(15)&7
  7313                           	line	66
  7314                           	
  7315  0636                     l11421:	
  7316  0636  17CC               	bsf	(___ftmul@f2)+(15/8),(15)&7
  7317                           	line	67
  7318                           	
  7319  0637                     l11423:	
  7320  0637  30FF               	movlw	0FFh
  7321  0638  05CB               	andwf	(___ftmul@f2),f
  7322  0639  30FF               	movlw	0FFh
  7323  063A  05CC               	andwf	(___ftmul@f2+1),f
  7324  063B  3000               	movlw	0
  7325  063C  05CD               	andwf	(___ftmul@f2+2),f
  7326                           	line	68
  7327                           	
  7328  063D                     l11425:	
  7329  063D  3000               	movlw	0
  7330  063E  00D3               	movwf	(___ftmul@f3_as_product)
  7331  063F  3000               	movlw	0
  7332  0640  00D4               	movwf	(___ftmul@f3_as_product+1)
  7333  0641  3000               	movlw	0
  7334  0642  00D5               	movwf	(___ftmul@f3_as_product+2)
  7335                           	line	69
  7336                           	
  7337  0643                     l11427:	
  7338  0643  3007               	movlw	(07h)
  7339  0644  00CE               	movwf	(??___ftmul+0)+0
  7340  0645  084E               	movf	(??___ftmul+0)+0,w
  7341  0646  00D6               	movwf	(___ftmul@cntr)
  7342  0647  2E48               	goto	l11429
  7343                           	line	70
  7344                           	
  7345  0648                     l6834:	
  7346                           	line	71
  7347                           	
  7348  0648                     l11429:	
  7349  0648  1C48               	btfss	(___ftmul@f1),(0)&7
  7350  0649  2E4B               	goto	u6251
  7351  064A  2E4C               	goto	u6250
  7352  064B                     u6251:
  7353  064B  2E5D               	goto	l11433
  7354  064C                     u6250:
  7355                           	line	72
  7356                           	
  7357  064C                     l11431:	
  7358  064C  084B               	movf	(___ftmul@f2),w
  7359  064D  07D3               	addwf	(___ftmul@f3_as_product),f
  7360  064E  084C               	movf	(___ftmul@f2+1),w
  7361  064F  1103               	clrz
  7362  0650  1803               	skipnc
  7363  0651  0A4C               	incf	(___ftmul@f2+1),w
  7364  0652  1903               	skipnz
  7365  0653  2E55               	goto	u6261
  7366  0654  07D4               	addwf	(___ftmul@f3_as_product+1),f
  7367  0655                     u6261:
  7368  0655  084D               	movf	(___ftmul@f2+2),w
  7369  0656  1103               	clrz
  7370  0657  1803               	skipnc
  7371  0658  0A4D               	incf	(___ftmul@f2+2),w
  7372  0659  1903               	skipnz
  7373  065A  2E5C               	goto	u6262
  7374  065B  07D5               	addwf	(___ftmul@f3_as_product+2),f
  7375  065C                     u6262:
  7376                           
  7377  065C  2E5D               	goto	l11433
  7378                           	
  7379  065D                     l6835:	
  7380                           	line	73
  7381                           	
  7382  065D                     l11433:	
  7383  065D  3001               	movlw	01h
  7384  065E                     u6275:
  7385  065E  1003               	clrc
  7386  065F  0CCA               	rrf	(___ftmul@f1+2),f
  7387  0660  0CC9               	rrf	(___ftmul@f1+1),f
  7388  0661  0CC8               	rrf	(___ftmul@f1),f
  7389  0662  3EFF               	addlw	-1
  7390  0663  1D03               	skipz
  7391  0664  2E5E               	goto	u6275
  7392                           
  7393                           	line	74
  7394                           	
  7395  0665                     l11435:	
  7396  0665  3001               	movlw	01h
  7397  0666                     u6285:
  7398  0666  1003               	clrc
  7399  0667  0DCB               	rlf	(___ftmul@f2),f
  7400  0668  0DCC               	rlf	(___ftmul@f2+1),f
  7401  0669  0DCD               	rlf	(___ftmul@f2+2),f
  7402  066A  3EFF               	addlw	-1
  7403  066B  1D03               	skipz
  7404  066C  2E66               	goto	u6285
  7405                           	line	75
  7406                           	
  7407  066D                     l11437:	
  7408  066D  3001               	movlw	low(01h)
  7409  066E  02D6               	subwf	(___ftmul@cntr),f
  7410  066F  1D03               	btfss	status,2
  7411  0670  2E72               	goto	u6291
  7412  0671  2E73               	goto	u6290
  7413  0672                     u6291:
  7414  0672  2E48               	goto	l11429
  7415  0673                     u6290:
  7416  0673  2E74               	goto	l11439
  7417                           	
  7418  0674                     l6836:	
  7419                           	line	76
  7420                           	
  7421  0674                     l11439:	
  7422  0674  3009               	movlw	(09h)
  7423  0675  00CE               	movwf	(??___ftmul+0)+0
  7424  0676  084E               	movf	(??___ftmul+0)+0,w
  7425  0677  00D6               	movwf	(___ftmul@cntr)
  7426  0678  2E79               	goto	l11441
  7427                           	line	77
  7428                           	
  7429  0679                     l6837:	
  7430                           	line	78
  7431                           	
  7432  0679                     l11441:	
  7433  0679  1C48               	btfss	(___ftmul@f1),(0)&7
  7434  067A  2E7C               	goto	u6301
  7435  067B  2E7D               	goto	u6300
  7436  067C                     u6301:
  7437  067C  2E8E               	goto	l11445
  7438  067D                     u6300:
  7439                           	line	79
  7440                           	
  7441  067D                     l11443:	
  7442  067D  084B               	movf	(___ftmul@f2),w
  7443  067E  07D3               	addwf	(___ftmul@f3_as_product),f
  7444  067F  084C               	movf	(___ftmul@f2+1),w
  7445  0680  1103               	clrz
  7446  0681  1803               	skipnc
  7447  0682  0A4C               	incf	(___ftmul@f2+1),w
  7448  0683  1903               	skipnz
  7449  0684  2E86               	goto	u6311
  7450  0685  07D4               	addwf	(___ftmul@f3_as_product+1),f
  7451  0686                     u6311:
  7452  0686  084D               	movf	(___ftmul@f2+2),w
  7453  0687  1103               	clrz
  7454  0688  1803               	skipnc
  7455  0689  0A4D               	incf	(___ftmul@f2+2),w
  7456  068A  1903               	skipnz
  7457  068B  2E8D               	goto	u6312
  7458  068C  07D5               	addwf	(___ftmul@f3_as_product+2),f
  7459  068D                     u6312:
  7460                           
  7461  068D  2E8E               	goto	l11445
  7462                           	
  7463  068E                     l6838:	
  7464                           	line	80
  7465                           	
  7466  068E                     l11445:	
  7467  068E  3001               	movlw	01h
  7468  068F                     u6325:
  7469  068F  1003               	clrc
  7470  0690  0CCA               	rrf	(___ftmul@f1+2),f
  7471  0691  0CC9               	rrf	(___ftmul@f1+1),f
  7472  0692  0CC8               	rrf	(___ftmul@f1),f
  7473  0693  3EFF               	addlw	-1
  7474  0694  1D03               	skipz
  7475  0695  2E8F               	goto	u6325
  7476                           
  7477                           	line	81
  7478                           	
  7479  0696                     l11447:	
  7480  0696  3001               	movlw	01h
  7481  0697                     u6335:
  7482  0697  1003               	clrc
  7483  0698  0CD5               	rrf	(___ftmul@f3_as_product+2),f
  7484  0699  0CD4               	rrf	(___ftmul@f3_as_product+1),f
  7485  069A  0CD3               	rrf	(___ftmul@f3_as_product),f
  7486  069B  3EFF               	addlw	-1
  7487  069C  1D03               	skipz
  7488  069D  2E97               	goto	u6335
  7489                           
  7490                           	line	82
  7491                           	
  7492  069E                     l11449:	
  7493  069E  3001               	movlw	low(01h)
  7494  069F  02D6               	subwf	(___ftmul@cntr),f
  7495  06A0  1D03               	btfss	status,2
  7496  06A1  2EA3               	goto	u6341
  7497  06A2  2EA4               	goto	u6340
  7498  06A3                     u6341:
  7499  06A3  2E79               	goto	l11441
  7500  06A4                     u6340:
  7501  06A4  2EA5               	goto	l11451
  7502                           	
  7503  06A5                     l6839:	
  7504                           	line	83
  7505                           	
  7506  06A5                     l11451:	
  7507  06A5  0853               	movf	(___ftmul@f3_as_product),w
  7508  06A6  00AA               	movwf	(?___ftpack)
  7509  06A7  0854               	movf	(___ftmul@f3_as_product+1),w
  7510  06A8  00AB               	movwf	(?___ftpack+1)
  7511  06A9  0855               	movf	(___ftmul@f3_as_product+2),w
  7512  06AA  00AC               	movwf	(?___ftpack+2)
  7513  06AB  0852               	movf	(___ftmul@exp),w
  7514  06AC  00CE               	movwf	(??___ftmul+0)+0
  7515  06AD  084E               	movf	(??___ftmul+0)+0,w
  7516  06AE  00AD               	movwf	0+(?___ftpack)+03h
  7517  06AF  0857               	movf	(___ftmul@sign),w
  7518  06B0  00CF               	movwf	(??___ftmul+1)+0
  7519  06B1  084F               	movf	(??___ftmul+1)+0,w
  7520  06B2  00AE               	movwf	0+(?___ftpack)+04h
  7521  06B3  120A  158A  25CA   	fcall	___ftpack
              120A  118A         
  7522  06B8  1283               	bcf	status, 5	;RP0=0, select bank0
  7523  06B9  1303               	bcf	status, 6	;RP1=0, select bank0
  7524  06BA  082A               	movf	(0+(?___ftpack)),w
  7525  06BB  00C8               	movwf	(?___ftmul)
  7526  06BC  082B               	movf	(1+(?___ftpack)),w
  7527  06BD  00C9               	movwf	(?___ftmul+1)
  7528  06BE  082C               	movf	(2+(?___ftpack)),w
  7529  06BF  00CA               	movwf	(?___ftmul+2)
  7530  06C0  2EC1               	goto	l6832
  7531                           	
  7532  06C1                     l11453:	
  7533                           	line	84
  7534                           	
  7535  06C1                     l6832:	
  7536  06C1  0008               	return
  7537                           	opt stack 0
  7538                           GLOBAL	__end_of___ftmul
  7539  06C2                     	__end_of___ftmul:
  7540 ;; =============== function ___ftmul ends ============
  7541                           
  7542                           	signat	___ftmul,8315
  7543                           	global	_initIRobot
  7544                           psect	text1901,local,class=CODE,delta=2
  7545                           global __ptext1901
  7546  1687                     __ptext1901:
  7547                           
  7548 ;; *************** function _initIRobot *****************
  7549 ;; Defined at:
  7550 ;;		line 129 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;		None
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;		None               void
  7557 ;; Registers used:
  7558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7564 ;;      Params:         0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0
  7566 ;;      Temps:          0       3       0       0       0
  7567 ;;      Totals:         0       3       0       0       0
  7568 ;;Total ram usage:        3 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    3
  7571 ;; This function calls:
  7572 ;;		_ser_putch
  7573 ;; This function is called by:
  7574 ;;		_init
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           psect	text1901
  7578                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
  7579                           	line	129
  7580                           	global	__size_of_initIRobot
  7581  001C                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
  7582                           	
  7583  1687                     _initIRobot:	
  7584                           	opt	stack 3
  7585                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7586                           	line	130
  7587                           	
  7588  1687                     l11399:	
  7589                           ;main.c: 130: _delay((unsigned long)((100)*(20000000/4000.0)));
  7590                           	opt asmopt_off
  7591  1687  3003               movlw  3
  7592  1688  1283               	bcf	status, 5	;RP0=0, select bank0
  7593  1689  1303               	bcf	status, 6	;RP1=0, select bank0
  7594  168A  00AE               movwf	((??_initIRobot+0)+0+2),f
  7595  168B  308A               movlw	138
  7596  168C  00AD               movwf	((??_initIRobot+0)+0+1),f
  7597  168D  3056               	movlw	86
  7598  168E  00AC               movwf	((??_initIRobot+0)+0),f
  7599  168F                     u6897:
  7600  168F  0BAC               	decfsz	((??_initIRobot+0)+0),f
  7601  1690  2E8F               	goto	u6897
  7602  1691  0BAD               	decfsz	((??_initIRobot+0)+0+1),f
  7603  1692  2E8F               	goto	u6897
  7604  1693  0BAE               	decfsz	((??_initIRobot+0)+0+2),f
  7605  1694  2E8F               	goto	u6897
  7606  1695  2E96               	nop2
  7607                           opt asmopt_on
  7608                           
  7609                           	line	131
  7610                           	
  7611  1696                     l11401:	
  7612                           ;main.c: 131: ser_putch(128);
  7613  1696  3080               	movlw	(080h)
  7614  1697  160A  118A  26DF   	fcall	_ser_putch
              160A  118A         
  7615                           	line	132
  7616                           	
  7617  169C                     l11403:	
  7618                           ;main.c: 132: ser_putch(132);
  7619  169C  3084               	movlw	(084h)
  7620  169D  160A  118A  26DF   	fcall	_ser_putch
              160A  118A         
  7621                           	line	133
  7622                           	
  7623  16A2                     l5962:	
  7624  16A2  0008               	return
  7625                           	opt stack 0
  7626                           GLOBAL	__end_of_initIRobot
  7627  16A3                     	__end_of_initIRobot:
  7628 ;; =============== function _initIRobot ends ============
  7629                           
  7630                           	signat	_initIRobot,88
  7631                           	global	_waitFor
  7632                           psect	text1902,local,class=CODE,delta=2
  7633                           global __ptext1902
  7634  0817                     __ptext1902:
  7635                           
  7636 ;; *************** function _waitFor *****************
  7637 ;; Defined at:
  7638 ;;		line 240 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  type            1    wreg     unsigned char 
  7641 ;;  highByte        1   12[BANK0 ] unsigned char 
  7642 ;;  lowByte         1   13[BANK0 ] unsigned char 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  type            1   17[BANK0 ] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;		None               void
  7647 ;; Registers used:
  7648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7654 ;;      Params:         0       2       0       0       0
  7655 ;;      Locals:         0       1       0       0       0
  7656 ;;      Temps:          0       3       0       0       0
  7657 ;;      Totals:         0       6       0       0       0
  7658 ;;Total ram usage:        6 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    3
  7661 ;; This function calls:
  7662 ;;		_ser_putch
  7663 ;; This function is called by:
  7664 ;;		_goReverse
  7665 ;;		_turnAround
  7666 ;;		_turnLeft90
  7667 ;;		_turnRight90
  7668 ;;		_goParallel
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           psect	text1902
  7672                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  7673                           	line	240
  7674                           	global	__size_of_waitFor
  7675  0029                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
  7676                           	
  7677  0817                     _waitFor:	
  7678                           	opt	stack 0
  7679                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7680                           ;waitFor@type stored from wreg
  7681  0817  1283               	bcf	status, 5	;RP0=0, select bank0
  7682  0818  1303               	bcf	status, 6	;RP1=0, select bank0
  7683  0819  00B1               	movwf	(waitFor@type)
  7684                           	line	241
  7685                           	
  7686  081A                     l11391:	
  7687                           ;drive.c: 241: _delay((unsigned long)((100)*(20000000/4000.0)));
  7688                           	opt asmopt_off
  7689  081A  3003               movlw  3
  7690  081B  00B0               movwf	((??_waitFor+0)+0+2),f
  7691  081C  308A               movlw	138
  7692  081D  00AF               movwf	((??_waitFor+0)+0+1),f
  7693  081E  3056               	movlw	86
  7694  081F  00AE               movwf	((??_waitFor+0)+0),f
  7695  0820                     u6907:
  7696  0820  0BAE               	decfsz	((??_waitFor+0)+0),f
  7697  0821  2820               	goto	u6907
  7698  0822  0BAF               	decfsz	((??_waitFor+0)+0+1),f
  7699  0823  2820               	goto	u6907
  7700  0824  0BB0               	decfsz	((??_waitFor+0)+0+2),f
  7701  0825  2820               	goto	u6907
  7702  0826  2827               	nop2
  7703                           opt asmopt_on
  7704                           
  7705                           	line	242
  7706                           	
  7707  0827                     l11393:	
  7708                           ;drive.c: 242: ser_putch(type);
  7709  0827  1283               	bcf	status, 5	;RP0=0, select bank0
  7710  0828  1303               	bcf	status, 6	;RP1=0, select bank0
  7711  0829  0831               	movf	(waitFor@type),w
  7712  082A  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7713                           	line	243
  7714                           	
  7715  082F                     l11395:	
  7716                           ;drive.c: 243: ser_putch(highByte);
  7717  082F  1283               	bcf	status, 5	;RP0=0, select bank0
  7718  0830  1303               	bcf	status, 6	;RP1=0, select bank0
  7719  0831  082C               	movf	(waitFor@highByte),w
  7720  0832  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7721                           	line	244
  7722                           	
  7723  0837                     l11397:	
  7724                           ;drive.c: 244: ser_putch(lowByte);
  7725  0837  1283               	bcf	status, 5	;RP0=0, select bank0
  7726  0838  1303               	bcf	status, 6	;RP1=0, select bank0
  7727  0839  082D               	movf	(waitFor@lowByte),w
  7728  083A  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7729                           	line	245
  7730                           	
  7731  083F                     l5145:	
  7732  083F  0008               	return
  7733                           	opt stack 0
  7734                           GLOBAL	__end_of_waitFor
  7735  0840                     	__end_of_waitFor:
  7736 ;; =============== function _waitFor ends ============
  7737                           
  7738                           	signat	_waitFor,12408
  7739                           	global	_drive
  7740                           psect	text1903,local,class=CODE,delta=2
  7741                           global __ptext1903
  7742  095A                     __ptext1903:
  7743                           
  7744 ;; *************** function _drive *****************
  7745 ;; Defined at:
  7746 ;;		line 21 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  highByteSpee    1    wreg     unsigned char 
  7749 ;;  lowByteSpeed    1   12[BANK0 ] unsigned char 
  7750 ;;  highByteRadi    1   13[BANK0 ] unsigned char 
  7751 ;;  lowByteRadiu    1   14[BANK0 ] unsigned char 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  highByteSpee    1   18[BANK0 ] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;		None               void
  7756 ;; Registers used:
  7757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7763 ;;      Params:         0       3       0       0       0
  7764 ;;      Locals:         0       1       0       0       0
  7765 ;;      Temps:          0       3       0       0       0
  7766 ;;      Totals:         0       7       0       0       0
  7767 ;;Total ram usage:        7 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    3
  7770 ;; This function calls:
  7771 ;;		_ser_putch
  7772 ;; This function is called by:
  7773 ;;		_driveForDistance
  7774 ;;		_goReverse
  7775 ;;		_turnAround
  7776 ;;		_turnLeft90
  7777 ;;		_turnRight90
  7778 ;;		_goParallel
  7779 ;;		_checkIfHome
  7780 ;;		_main
  7781 ;;		_frontWallCorrect
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           psect	text1903
  7785                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
  7786                           	line	21
  7787                           	global	__size_of_drive
  7788  0037                     	__size_of_drive	equ	__end_of_drive-_drive
  7789                           	
  7790  095A                     _drive:	
  7791                           	opt	stack 3
  7792                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7793                           ;drive@highByteSpeed stored from wreg
  7794  095A  1283               	bcf	status, 5	;RP0=0, select bank0
  7795  095B  1303               	bcf	status, 6	;RP1=0, select bank0
  7796  095C  00B2               	movwf	(drive@highByteSpeed)
  7797                           	line	22
  7798                           	
  7799  095D                     l11379:	
  7800                           ;drive.c: 22: _delay((unsigned long)((100)*(20000000/4000.0)));
  7801                           	opt asmopt_off
  7802  095D  3003               movlw  3
  7803  095E  00B1               movwf	((??_drive+0)+0+2),f
  7804  095F  308A               movlw	138
  7805  0960  00B0               movwf	((??_drive+0)+0+1),f
  7806  0961  3056               	movlw	86
  7807  0962  00AF               movwf	((??_drive+0)+0),f
  7808  0963                     u6917:
  7809  0963  0BAF               	decfsz	((??_drive+0)+0),f
  7810  0964  2963               	goto	u6917
  7811  0965  0BB0               	decfsz	((??_drive+0)+0+1),f
  7812  0966  2963               	goto	u6917
  7813  0967  0BB1               	decfsz	((??_drive+0)+0+2),f
  7814  0968  2963               	goto	u6917
  7815  0969  296A               	nop2
  7816                           opt asmopt_on
  7817                           
  7818                           	line	23
  7819                           	
  7820  096A                     l11381:	
  7821                           ;drive.c: 23: ser_putch(137);
  7822  096A  3089               	movlw	(089h)
  7823  096B  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7824                           	line	24
  7825                           	
  7826  0970                     l11383:	
  7827                           ;drive.c: 24: ser_putch(highByteSpeed);
  7828  0970  1283               	bcf	status, 5	;RP0=0, select bank0
  7829  0971  1303               	bcf	status, 6	;RP1=0, select bank0
  7830  0972  0832               	movf	(drive@highByteSpeed),w
  7831  0973  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7832                           	line	25
  7833                           	
  7834  0978                     l11385:	
  7835                           ;drive.c: 25: ser_putch(lowByteSpeed);
  7836  0978  1283               	bcf	status, 5	;RP0=0, select bank0
  7837  0979  1303               	bcf	status, 6	;RP1=0, select bank0
  7838  097A  082C               	movf	(drive@lowByteSpeed),w
  7839  097B  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7840                           	line	26
  7841                           	
  7842  0980                     l11387:	
  7843                           ;drive.c: 26: ser_putch(highByteRadius);
  7844  0980  1283               	bcf	status, 5	;RP0=0, select bank0
  7845  0981  1303               	bcf	status, 6	;RP1=0, select bank0
  7846  0982  082D               	movf	(drive@highByteRadius),w
  7847  0983  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7848                           	line	27
  7849                           	
  7850  0988                     l11389:	
  7851                           ;drive.c: 27: ser_putch(lowByteRadius);
  7852  0988  1283               	bcf	status, 5	;RP0=0, select bank0
  7853  0989  1303               	bcf	status, 6	;RP1=0, select bank0
  7854  098A  082E               	movf	(drive@lowByteRadius),w
  7855  098B  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  7856                           	line	28
  7857                           	
  7858  0990                     l5081:	
  7859  0990  0008               	return
  7860                           	opt stack 0
  7861                           GLOBAL	__end_of_drive
  7862  0991                     	__end_of_drive:
  7863 ;; =============== function _drive ends ============
  7864                           
  7865                           	signat	_drive,16504
  7866                           	global	_rotateIR
  7867                           psect	text1904,local,class=CODE,delta=2
  7868                           global __ptext1904
  7869  0C13                     __ptext1904:
  7870                           
  7871 ;; *************** function _rotateIR *****************
  7872 ;; Defined at:
  7873 ;;		line 39 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ir.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  steps           1    wreg     unsigned char 
  7876 ;;  direction       1   10[BANK0 ] unsigned char 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  steps           1   14[BANK0 ] unsigned char 
  7879 ;;  stepNum         1   15[BANK0 ] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;		None               void
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7889 ;;      Params:         0       1       0       0       0
  7890 ;;      Locals:         0       2       0       0       0
  7891 ;;      Temps:          0       3       0       0       0
  7892 ;;      Totals:         0       6       0       0       0
  7893 ;;Total ram usage:        6 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    2
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_findWalls
  7900 ;;		_goParallel
  7901 ;;		_main
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           psect	text1904
  7905                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ir.c"
  7906                           	line	39
  7907                           	global	__size_of_rotateIR
  7908  0046                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
  7909                           	
  7910  0C13                     _rotateIR:	
  7911                           	opt	stack 5
  7912                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
  7913                           ;rotateIR@steps stored from wreg
  7914  0C13  1283               	bcf	status, 5	;RP0=0, select bank0
  7915  0C14  1303               	bcf	status, 6	;RP1=0, select bank0
  7916  0C15  00AE               	movwf	(rotateIR@steps)
  7917                           	line	40
  7918                           	
  7919  0C16                     l11361:	
  7920                           ;ir.c: 40: PORTC |= 0b00000011;
  7921  0C16  3003               	movlw	(03h)
  7922  0C17  00AB               	movwf	(??_rotateIR+0)+0
  7923  0C18  082B               	movf	(??_rotateIR+0)+0,w
  7924  0C19  0487               	iorwf	(7),f	;volatile
  7925                           	line	41
  7926                           	
  7927  0C1A                     l11363:	
  7928                           ;ir.c: 41: SSPBUF = direction;
  7929  0C1A  082A               	movf	(rotateIR@direction),w
  7930  0C1B  0093               	movwf	(19)	;volatile
  7931                           	line	42
  7932                           	
  7933  0C1C                     l11365:	
  7934                           ;ir.c: 42: _delay((unsigned long)((200)*(20000000/4000.0)));
  7935                           	opt asmopt_off
  7936  0C1C  3006               movlw  6
  7937  0C1D  00AD               movwf	((??_rotateIR+0)+0+2),f
  7938  0C1E  3013               movlw	19
  7939  0C1F  00AC               movwf	((??_rotateIR+0)+0+1),f
  7940  0C20  30B1               	movlw	177
  7941  0C21  00AB               movwf	((??_rotateIR+0)+0),f
  7942  0C22                     u6927:
  7943  0C22  0BAB               	decfsz	((??_rotateIR+0)+0),f
  7944  0C23  2C22               	goto	u6927
  7945  0C24  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  7946  0C25  2C22               	goto	u6927
  7947  0C26  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  7948  0C27  2C22               	goto	u6927
  7949  0C28  2C29               	nop2
  7950                           opt asmopt_on
  7951                           
  7952                           	line	44
  7953                           	
  7954  0C29                     l11367:	
  7955                           ;ir.c: 44: for (char stepNum = 1; stepNum <= steps; ++stepNum)
  7956  0C29  1283               	bcf	status, 5	;RP0=0, select bank0
  7957  0C2A  1303               	bcf	status, 6	;RP1=0, select bank0
  7958  0C2B  01AF               	clrf	(rotateIR@stepNum)
  7959  0C2C  1403               	bsf	status,0
  7960  0C2D  0DAF               	rlf	(rotateIR@stepNum),f
  7961  0C2E  2C43               	goto	l4351
  7962                           	line	45
  7963                           	
  7964  0C2F                     l4352:	
  7965                           	line	46
  7966                           ;ir.c: 45: {
  7967                           ;ir.c: 46: PORTC |= 0b00000100;
  7968  0C2F  1507               	bsf	(7)+(2/8),(2)&7	;volatile
  7969                           	line	47
  7970                           	
  7971  0C30                     l11369:	
  7972                           ;ir.c: 47: PORTC &= 0b11111011;
  7973  0C30  30FB               	movlw	(0FBh)
  7974  0C31  00AB               	movwf	(??_rotateIR+0)+0
  7975  0C32  082B               	movf	(??_rotateIR+0)+0,w
  7976  0C33  0587               	andwf	(7),f	;volatile
  7977                           	line	48
  7978                           	
  7979  0C34                     l11371:	
  7980                           ;ir.c: 48: _delay((unsigned long)((20)*(20000000/4000.0)));
  7981                           	opt asmopt_off
  7982  0C34  3082               movlw	130
  7983  0C35  00AC               movwf	((??_rotateIR+0)+0+1),f
  7984  0C36  30DD               	movlw	221
  7985  0C37  00AB               movwf	((??_rotateIR+0)+0),f
  7986  0C38                     u6937:
  7987  0C38  0BAB               	decfsz	((??_rotateIR+0)+0),f
  7988  0C39  2C38               	goto	u6937
  7989  0C3A  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  7990  0C3B  2C38               	goto	u6937
  7991  0C3C  2C3D               	nop2
  7992                           opt asmopt_on
  7993                           
  7994                           	line	44
  7995                           	
  7996  0C3D                     l11373:	
  7997  0C3D  3001               	movlw	(01h)
  7998  0C3E  1283               	bcf	status, 5	;RP0=0, select bank0
  7999  0C3F  1303               	bcf	status, 6	;RP1=0, select bank0
  8000  0C40  00AB               	movwf	(??_rotateIR+0)+0
  8001  0C41  082B               	movf	(??_rotateIR+0)+0,w
  8002  0C42  07AF               	addwf	(rotateIR@stepNum),f
  8003                           	
  8004  0C43                     l4351:	
  8005  0C43  082F               	movf	(rotateIR@stepNum),w
  8006  0C44  022E               	subwf	(rotateIR@steps),w
  8007  0C45  1803               	skipnc
  8008  0C46  2C48               	goto	u6201
  8009  0C47  2C49               	goto	u6200
  8010  0C48                     u6201:
  8011  0C48  2C2F               	goto	l4352
  8012  0C49                     u6200:
  8013  0C49  2C4A               	goto	l11375
  8014                           	
  8015  0C4A                     l4353:	
  8016                           	line	51
  8017                           	
  8018  0C4A                     l11375:	
  8019                           ;ir.c: 49: }
  8020                           ;ir.c: 51: SSPBUF = 0b00000000;
  8021  0C4A  0193               	clrf	(19)	;volatile
  8022                           	line	52
  8023                           	
  8024  0C4B                     l11377:	
  8025                           ;ir.c: 52: _delay((unsigned long)((200)*(20000000/4000.0)));
  8026                           	opt asmopt_off
  8027  0C4B  3006               movlw  6
  8028  0C4C  00AD               movwf	((??_rotateIR+0)+0+2),f
  8029  0C4D  3013               movlw	19
  8030  0C4E  00AC               movwf	((??_rotateIR+0)+0+1),f
  8031  0C4F  30B1               	movlw	177
  8032  0C50  00AB               movwf	((??_rotateIR+0)+0),f
  8033  0C51                     u6947:
  8034  0C51  0BAB               	decfsz	((??_rotateIR+0)+0),f
  8035  0C52  2C51               	goto	u6947
  8036  0C53  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  8037  0C54  2C51               	goto	u6947
  8038  0C55  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  8039  0C56  2C51               	goto	u6947
  8040  0C57  2C58               	nop2
  8041                           opt asmopt_on
  8042                           
  8043                           	line	54
  8044                           	
  8045  0C58                     l4354:	
  8046  0C58  0008               	return
  8047                           	opt stack 0
  8048                           GLOBAL	__end_of_rotateIR
  8049  0C59                     	__end_of_rotateIR:
  8050 ;; =============== function _rotateIR ends ============
  8051                           
  8052                           	signat	_rotateIR,8312
  8053                           	global	_convert
  8054                           psect	text1905,local,class=CODE,delta=2
  8055                           global __ptext1905
  8056  0015                     __ptext1905:
  8057                           
  8058 ;; *************** function _convert *****************
  8059 ;; Defined at:
  8060 ;;		line 11 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ir.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  adc_value       2   33[BANK0 ] int 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  2   33[BANK0 ] int 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8074 ;;      Params:         0       2       0       0       0
  8075 ;;      Locals:         0       0       0       0       0
  8076 ;;      Temps:          0       2       0       0       0
  8077 ;;      Totals:         0       4       0       0       0
  8078 ;;Total ram usage:        4 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:    3
  8081 ;; This function calls:
  8082 ;;		___wmul
  8083 ;;		___awdiv
  8084 ;; This function is called by:
  8085 ;;		_readIR
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           psect	text1905
  8089                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ir.c"
  8090                           	line	11
  8091                           	global	__size_of_convert
  8092  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
  8093                           	
  8094  0015                     _convert:	
  8095                           	opt	stack 2
  8096                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8097                           	line	12
  8098                           	
  8099  0015                     l11301:	
  8100                           ;ir.c: 12: if(adc_value < 82)
  8101  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  8102  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  8103  0017  0842               	movf	(convert@adc_value+1),w
  8104  0018  3A80               	xorlw	80h
  8105  0019  00FF               	movwf	btemp+1
  8106  001A  3080               	movlw	(high(052h))^80h
  8107  001B  027F               	subwf	btemp+1,w
  8108  001C  1D03               	skipz
  8109  001D  2820               	goto	u6135
  8110  001E  3052               	movlw	low(052h)
  8111  001F  0241               	subwf	(convert@adc_value),w
  8112  0020                     u6135:
  8113                           
  8114  0020  1803               	skipnc
  8115  0021  2823               	goto	u6131
  8116  0022  2824               	goto	u6130
  8117  0023                     u6131:
  8118  0023  282D               	goto	l11309
  8119  0024                     u6130:
  8120                           	line	13
  8121                           	
  8122  0024                     l11303:	
  8123                           ;ir.c: 13: return 999;
  8124  0024  30E7               	movlw	low(03E7h)
  8125  0025  1283               	bcf	status, 5	;RP0=0, select bank0
  8126  0026  1303               	bcf	status, 6	;RP1=0, select bank0
  8127  0027  00C1               	movwf	(?_convert)
  8128  0028  3003               	movlw	high(03E7h)
  8129  0029  00C2               	movwf	((?_convert))+1
  8130  002A  29E3               	goto	l4332
  8131                           	
  8132  002B                     l11305:	
  8133  002B  29E3               	goto	l4332
  8134                           	
  8135  002C                     l11307:	
  8136  002C  29E3               	goto	l4332
  8137                           	line	14
  8138                           	
  8139  002D                     l4331:	
  8140                           	
  8141  002D                     l11309:	
  8142                           ;ir.c: 14: else if(adc_value < 133)
  8143  002D  1283               	bcf	status, 5	;RP0=0, select bank0
  8144  002E  1303               	bcf	status, 6	;RP1=0, select bank0
  8145  002F  0842               	movf	(convert@adc_value+1),w
  8146  0030  3A80               	xorlw	80h
  8147  0031  00FF               	movwf	btemp+1
  8148  0032  3080               	movlw	(high(085h))^80h
  8149  0033  027F               	subwf	btemp+1,w
  8150  0034  1D03               	skipz
  8151  0035  2838               	goto	u6145
  8152  0036  3085               	movlw	low(085h)
  8153  0037  0241               	subwf	(convert@adc_value),w
  8154  0038                     u6145:
  8155                           
  8156  0038  1803               	skipnc
  8157  0039  283B               	goto	u6141
  8158  003A  283C               	goto	u6140
  8159  003B                     u6141:
  8160  003B  2874               	goto	l11317
  8161  003C                     u6140:
  8162                           	line	15
  8163                           	
  8164  003C                     l11311:	
  8165                           ;ir.c: 15: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
  8166  003C  3033               	movlw	low(033h)
  8167  003D  1283               	bcf	status, 5	;RP0=0, select bank0
  8168  003E  1303               	bcf	status, 6	;RP1=0, select bank0
  8169  003F  00B0               	movwf	(?___awdiv)
  8170  0040  3000               	movlw	high(033h)
  8171  0041  00B1               	movwf	((?___awdiv))+1
  8172  0042  0941               	comf	(convert@adc_value),w
  8173  0043  00C3               	movwf	(??_convert+0)+0
  8174  0044  0942               	comf	(convert@adc_value+1),w
  8175  0045  00C4               	movwf	((??_convert+0)+0+1)
  8176  0046  0AC3               	incf	(??_convert+0)+0,f
  8177  0047  1903               	skipnz
  8178  0048  0AC4               	incf	((??_convert+0)+0+1),f
  8179  0049  0843               	movf	0+(??_convert+0)+0,w
  8180  004A  3E85               	addlw	low(085h)
  8181  004B  00AA               	movwf	(?___wmul)
  8182  004C  0844               	movf	1+(??_convert+0)+0,w
  8183  004D  1803               	skipnc
  8184  004E  3E01               	addlw	1
  8185  004F  3E00               	addlw	high(085h)
  8186  0050  00AB               	movwf	1+(?___wmul)
  8187  0051  3032               	movlw	low(032h)
  8188  0052  00AC               	movwf	0+(?___wmul)+02h
  8189  0053  3000               	movlw	high(032h)
  8190  0054  00AD               	movwf	(0+(?___wmul)+02h)+1
  8191  0055  120A  158A  2094   	fcall	___wmul
              120A  118A         
  8192  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  8193  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  8194  005C  082B               	movf	(1+(?___wmul)),w
  8195  005D  01B3               	clrf	1+(?___awdiv)+02h
  8196  005E  07B3               	addwf	1+(?___awdiv)+02h
  8197  005F  082A               	movf	(0+(?___wmul)),w
  8198  0060  01B2               	clrf	0+(?___awdiv)+02h
  8199  0061  07B2               	addwf	0+(?___awdiv)+02h
  8200                           
  8201  0062  120A  158A  2554   	fcall	___awdiv
              120A  118A         
  8202  0067  1283               	bcf	status, 5	;RP0=0, select bank0
  8203  0068  1303               	bcf	status, 6	;RP1=0, select bank0
  8204  0069  0830               	movf	(0+(?___awdiv)),w
  8205  006A  3E61               	addlw	low(061h)
  8206  006B  00C1               	movwf	(?_convert)
  8207  006C  0831               	movf	(1+(?___awdiv)),w
  8208  006D  1803               	skipnc
  8209  006E  3E01               	addlw	1
  8210  006F  3E00               	addlw	high(061h)
  8211  0070  00C2               	movwf	1+(?_convert)
  8212  0071  29E3               	goto	l4332
  8213                           	
  8214  0072                     l11313:	
  8215  0072  29E3               	goto	l4332
  8216                           	
  8217  0073                     l11315:	
  8218  0073  29E3               	goto	l4332
  8219                           	line	16
  8220                           	
  8221  0074                     l4334:	
  8222                           	
  8223  0074                     l11317:	
  8224                           ;ir.c: 16: else if(adc_value < 184)
  8225  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  8226  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  8227  0076  0842               	movf	(convert@adc_value+1),w
  8228  0077  3A80               	xorlw	80h
  8229  0078  00FF               	movwf	btemp+1
  8230  0079  3080               	movlw	(high(0B8h))^80h
  8231  007A  027F               	subwf	btemp+1,w
  8232  007B  1D03               	skipz
  8233  007C  287F               	goto	u6155
  8234  007D  30B8               	movlw	low(0B8h)
  8235  007E  0241               	subwf	(convert@adc_value),w
  8236  007F                     u6155:
  8237                           
  8238  007F  1803               	skipnc
  8239  0080  2882               	goto	u6151
  8240  0081  2883               	goto	u6150
  8241  0082                     u6151:
  8242  0082  28BB               	goto	l11325
  8243  0083                     u6150:
  8244                           	line	17
  8245                           	
  8246  0083                     l11319:	
  8247                           ;ir.c: 17: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
  8248  0083  3033               	movlw	low(033h)
  8249  0084  1283               	bcf	status, 5	;RP0=0, select bank0
  8250  0085  1303               	bcf	status, 6	;RP1=0, select bank0
  8251  0086  00B0               	movwf	(?___awdiv)
  8252  0087  3000               	movlw	high(033h)
  8253  0088  00B1               	movwf	((?___awdiv))+1
  8254  0089  0941               	comf	(convert@adc_value),w
  8255  008A  00C3               	movwf	(??_convert+0)+0
  8256  008B  0942               	comf	(convert@adc_value+1),w
  8257  008C  00C4               	movwf	((??_convert+0)+0+1)
  8258  008D  0AC3               	incf	(??_convert+0)+0,f
  8259  008E  1903               	skipnz
  8260  008F  0AC4               	incf	((??_convert+0)+0+1),f
  8261  0090  0843               	movf	0+(??_convert+0)+0,w
  8262  0091  3EB8               	addlw	low(0B8h)
  8263  0092  00AA               	movwf	(?___wmul)
  8264  0093  0844               	movf	1+(??_convert+0)+0,w
  8265  0094  1803               	skipnc
  8266  0095  3E01               	addlw	1
  8267  0096  3E00               	addlw	high(0B8h)
  8268  0097  00AB               	movwf	1+(?___wmul)
  8269  0098  301E               	movlw	low(01Eh)
  8270  0099  00AC               	movwf	0+(?___wmul)+02h
  8271  009A  3000               	movlw	high(01Eh)
  8272  009B  00AD               	movwf	(0+(?___wmul)+02h)+1
  8273  009C  120A  158A  2094   	fcall	___wmul
              120A  118A         
  8274  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  8275  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  8276  00A3  082B               	movf	(1+(?___wmul)),w
  8277  00A4  01B3               	clrf	1+(?___awdiv)+02h
  8278  00A5  07B3               	addwf	1+(?___awdiv)+02h
  8279  00A6  082A               	movf	(0+(?___wmul)),w
  8280  00A7  01B2               	clrf	0+(?___awdiv)+02h
  8281  00A8  07B2               	addwf	0+(?___awdiv)+02h
  8282                           
  8283  00A9  120A  158A  2554   	fcall	___awdiv
              120A  118A         
  8284  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  8285  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  8286  00B0  0830               	movf	(0+(?___awdiv)),w
  8287  00B1  3E43               	addlw	low(043h)
  8288  00B2  00C1               	movwf	(?_convert)
  8289  00B3  0831               	movf	(1+(?___awdiv)),w
  8290  00B4  1803               	skipnc
  8291  00B5  3E01               	addlw	1
  8292  00B6  3E00               	addlw	high(043h)
  8293  00B7  00C2               	movwf	1+(?_convert)
  8294  00B8  29E3               	goto	l4332
  8295                           	
  8296  00B9                     l11321:	
  8297  00B9  29E3               	goto	l4332
  8298                           	
  8299  00BA                     l11323:	
  8300  00BA  29E3               	goto	l4332
  8301                           	line	18
  8302                           	
  8303  00BB                     l4336:	
  8304                           	
  8305  00BB                     l11325:	
  8306                           ;ir.c: 18: else if(adc_value < 256)
  8307  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  8308  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  8309  00BD  0842               	movf	(convert@adc_value+1),w
  8310  00BE  3A80               	xorlw	80h
  8311  00BF  00FF               	movwf	btemp+1
  8312  00C0  3081               	movlw	(high(0100h))^80h
  8313  00C1  027F               	subwf	btemp+1,w
  8314  00C2  1D03               	skipz
  8315  00C3  28C6               	goto	u6165
  8316  00C4  3000               	movlw	low(0100h)
  8317  00C5  0241               	subwf	(convert@adc_value),w
  8318  00C6                     u6165:
  8319                           
  8320  00C6  1803               	skipnc
  8321  00C7  28C9               	goto	u6161
  8322  00C8  28CA               	goto	u6160
  8323  00C9                     u6161:
  8324  00C9  2902               	goto	l11333
  8325  00CA                     u6160:
  8326                           	line	19
  8327                           	
  8328  00CA                     l11327:	
  8329                           ;ir.c: 19: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
  8330  00CA  3048               	movlw	low(048h)
  8331  00CB  1283               	bcf	status, 5	;RP0=0, select bank0
  8332  00CC  1303               	bcf	status, 6	;RP1=0, select bank0
  8333  00CD  00B0               	movwf	(?___awdiv)
  8334  00CE  3000               	movlw	high(048h)
  8335  00CF  00B1               	movwf	((?___awdiv))+1
  8336  00D0  0941               	comf	(convert@adc_value),w
  8337  00D1  00C3               	movwf	(??_convert+0)+0
  8338  00D2  0942               	comf	(convert@adc_value+1),w
  8339  00D3  00C4               	movwf	((??_convert+0)+0+1)
  8340  00D4  0AC3               	incf	(??_convert+0)+0,f
  8341  00D5  1903               	skipnz
  8342  00D6  0AC4               	incf	((??_convert+0)+0+1),f
  8343  00D7  0843               	movf	0+(??_convert+0)+0,w
  8344  00D8  3E00               	addlw	low(0100h)
  8345  00D9  00AA               	movwf	(?___wmul)
  8346  00DA  0844               	movf	1+(??_convert+0)+0,w
  8347  00DB  1803               	skipnc
  8348  00DC  3E01               	addlw	1
  8349  00DD  3E01               	addlw	high(0100h)
  8350  00DE  00AB               	movwf	1+(?___wmul)
  8351  00DF  3014               	movlw	low(014h)
  8352  00E0  00AC               	movwf	0+(?___wmul)+02h
  8353  00E1  3000               	movlw	high(014h)
  8354  00E2  00AD               	movwf	(0+(?___wmul)+02h)+1
  8355  00E3  120A  158A  2094   	fcall	___wmul
              120A  118A         
  8356  00E8  1283               	bcf	status, 5	;RP0=0, select bank0
  8357  00E9  1303               	bcf	status, 6	;RP1=0, select bank0
  8358  00EA  082B               	movf	(1+(?___wmul)),w
  8359  00EB  01B3               	clrf	1+(?___awdiv)+02h
  8360  00EC  07B3               	addwf	1+(?___awdiv)+02h
  8361  00ED  082A               	movf	(0+(?___wmul)),w
  8362  00EE  01B2               	clrf	0+(?___awdiv)+02h
  8363  00EF  07B2               	addwf	0+(?___awdiv)+02h
  8364                           
  8365  00F0  120A  158A  2554   	fcall	___awdiv
              120A  118A         
  8366  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
  8367  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
  8368  00F7  0830               	movf	(0+(?___awdiv)),w
  8369  00F8  3E2E               	addlw	low(02Eh)
  8370  00F9  00C1               	movwf	(?_convert)
  8371  00FA  0831               	movf	(1+(?___awdiv)),w
  8372  00FB  1803               	skipnc
  8373  00FC  3E01               	addlw	1
  8374  00FD  3E00               	addlw	high(02Eh)
  8375  00FE  00C2               	movwf	1+(?_convert)
  8376  00FF  29E3               	goto	l4332
  8377                           	
  8378  0100                     l11329:	
  8379  0100  29E3               	goto	l4332
  8380                           	
  8381  0101                     l11331:	
  8382  0101  29E3               	goto	l4332
  8383                           	line	20
  8384                           	
  8385  0102                     l4338:	
  8386                           	
  8387  0102                     l11333:	
  8388                           ;ir.c: 20: else if(adc_value < 317)
  8389  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  8390  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  8391  0104  0842               	movf	(convert@adc_value+1),w
  8392  0105  3A80               	xorlw	80h
  8393  0106  00FF               	movwf	btemp+1
  8394  0107  3081               	movlw	(high(013Dh))^80h
  8395  0108  027F               	subwf	btemp+1,w
  8396  0109  1D03               	skipz
  8397  010A  290D               	goto	u6175
  8398  010B  303D               	movlw	low(013Dh)
  8399  010C  0241               	subwf	(convert@adc_value),w
  8400  010D                     u6175:
  8401                           
  8402  010D  1803               	skipnc
  8403  010E  2910               	goto	u6171
  8404  010F  2911               	goto	u6170
  8405  0110                     u6171:
  8406  0110  2949               	goto	l11341
  8407  0111                     u6170:
  8408                           	line	21
  8409                           	
  8410  0111                     l11335:	
  8411                           ;ir.c: 21: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
  8412  0111  303D               	movlw	low(03Dh)
  8413  0112  1283               	bcf	status, 5	;RP0=0, select bank0
  8414  0113  1303               	bcf	status, 6	;RP1=0, select bank0
  8415  0114  00B0               	movwf	(?___awdiv)
  8416  0115  3000               	movlw	high(03Dh)
  8417  0116  00B1               	movwf	((?___awdiv))+1
  8418  0117  0941               	comf	(convert@adc_value),w
  8419  0118  00C3               	movwf	(??_convert+0)+0
  8420  0119  0942               	comf	(convert@adc_value+1),w
  8421  011A  00C4               	movwf	((??_convert+0)+0+1)
  8422  011B  0AC3               	incf	(??_convert+0)+0,f
  8423  011C  1903               	skipnz
  8424  011D  0AC4               	incf	((??_convert+0)+0+1),f
  8425  011E  0843               	movf	0+(??_convert+0)+0,w
  8426  011F  3E3D               	addlw	low(013Dh)
  8427  0120  00AA               	movwf	(?___wmul)
  8428  0121  0844               	movf	1+(??_convert+0)+0,w
  8429  0122  1803               	skipnc
  8430  0123  3E01               	addlw	1
  8431  0124  3E01               	addlw	high(013Dh)
  8432  0125  00AB               	movwf	1+(?___wmul)
  8433  0126  300A               	movlw	low(0Ah)
  8434  0127  00AC               	movwf	0+(?___wmul)+02h
  8435  0128  3000               	movlw	high(0Ah)
  8436  0129  00AD               	movwf	(0+(?___wmul)+02h)+1
  8437  012A  120A  158A  2094   	fcall	___wmul
              120A  118A         
  8438  012F  1283               	bcf	status, 5	;RP0=0, select bank0
  8439  0130  1303               	bcf	status, 6	;RP1=0, select bank0
  8440  0131  082B               	movf	(1+(?___wmul)),w
  8441  0132  01B3               	clrf	1+(?___awdiv)+02h
  8442  0133  07B3               	addwf	1+(?___awdiv)+02h
  8443  0134  082A               	movf	(0+(?___wmul)),w
  8444  0135  01B2               	clrf	0+(?___awdiv)+02h
  8445  0136  07B2               	addwf	0+(?___awdiv)+02h
  8446                           
  8447  0137  120A  158A  2554   	fcall	___awdiv
              120A  118A         
  8448  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  8449  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  8450  013E  0830               	movf	(0+(?___awdiv)),w
  8451  013F  3E25               	addlw	low(025h)
  8452  0140  00C1               	movwf	(?_convert)
  8453  0141  0831               	movf	(1+(?___awdiv)),w
  8454  0142  1803               	skipnc
  8455  0143  3E01               	addlw	1
  8456  0144  3E00               	addlw	high(025h)
  8457  0145  00C2               	movwf	1+(?_convert)
  8458  0146  29E3               	goto	l4332
  8459                           	
  8460  0147                     l11337:	
  8461  0147  29E3               	goto	l4332
  8462                           	
  8463  0148                     l11339:	
  8464  0148  29E3               	goto	l4332
  8465                           	line	22
  8466                           	
  8467  0149                     l4340:	
  8468                           	
  8469  0149                     l11341:	
  8470                           ;ir.c: 22: else if(adc_value < 410)
  8471  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  8472  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  8473  014B  0842               	movf	(convert@adc_value+1),w
  8474  014C  3A80               	xorlw	80h
  8475  014D  00FF               	movwf	btemp+1
  8476  014E  3081               	movlw	(high(019Ah))^80h
  8477  014F  027F               	subwf	btemp+1,w
  8478  0150  1D03               	skipz
  8479  0151  2954               	goto	u6185
  8480  0152  309A               	movlw	low(019Ah)
  8481  0153  0241               	subwf	(convert@adc_value),w
  8482  0154                     u6185:
  8483                           
  8484  0154  1803               	skipnc
  8485  0155  2957               	goto	u6181
  8486  0156  2958               	goto	u6180
  8487  0157                     u6181:
  8488  0157  2990               	goto	l11349
  8489  0158                     u6180:
  8490                           	line	23
  8491                           	
  8492  0158                     l11343:	
  8493                           ;ir.c: 23: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
  8494  0158  305D               	movlw	low(05Dh)
  8495  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  8496  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  8497  015B  00B0               	movwf	(?___awdiv)
  8498  015C  3000               	movlw	high(05Dh)
  8499  015D  00B1               	movwf	((?___awdiv))+1
  8500  015E  0941               	comf	(convert@adc_value),w
  8501  015F  00C3               	movwf	(??_convert+0)+0
  8502  0160  0942               	comf	(convert@adc_value+1),w
  8503  0161  00C4               	movwf	((??_convert+0)+0+1)
  8504  0162  0AC3               	incf	(??_convert+0)+0,f
  8505  0163  1903               	skipnz
  8506  0164  0AC4               	incf	((??_convert+0)+0+1),f
  8507  0165  0843               	movf	0+(??_convert+0)+0,w
  8508  0166  3E9A               	addlw	low(019Ah)
  8509  0167  00AA               	movwf	(?___wmul)
  8510  0168  0844               	movf	1+(??_convert+0)+0,w
  8511  0169  1803               	skipnc
  8512  016A  3E01               	addlw	1
  8513  016B  3E01               	addlw	high(019Ah)
  8514  016C  00AB               	movwf	1+(?___wmul)
  8515  016D  300A               	movlw	low(0Ah)
  8516  016E  00AC               	movwf	0+(?___wmul)+02h
  8517  016F  3000               	movlw	high(0Ah)
  8518  0170  00AD               	movwf	(0+(?___wmul)+02h)+1
  8519  0171  120A  158A  2094   	fcall	___wmul
              120A  118A         
  8520  0176  1283               	bcf	status, 5	;RP0=0, select bank0
  8521  0177  1303               	bcf	status, 6	;RP1=0, select bank0
  8522  0178  082B               	movf	(1+(?___wmul)),w
  8523  0179  01B3               	clrf	1+(?___awdiv)+02h
  8524  017A  07B3               	addwf	1+(?___awdiv)+02h
  8525  017B  082A               	movf	(0+(?___wmul)),w
  8526  017C  01B2               	clrf	0+(?___awdiv)+02h
  8527  017D  07B2               	addwf	0+(?___awdiv)+02h
  8528                           
  8529  017E  120A  158A  2554   	fcall	___awdiv
              120A  118A         
  8530  0183  1283               	bcf	status, 5	;RP0=0, select bank0
  8531  0184  1303               	bcf	status, 6	;RP1=0, select bank0
  8532  0185  0830               	movf	(0+(?___awdiv)),w
  8533  0186  3E1C               	addlw	low(01Ch)
  8534  0187  00C1               	movwf	(?_convert)
  8535  0188  0831               	movf	(1+(?___awdiv)),w
  8536  0189  1803               	skipnc
  8537  018A  3E01               	addlw	1
  8538  018B  3E00               	addlw	high(01Ch)
  8539  018C  00C2               	movwf	1+(?_convert)
  8540  018D  29E3               	goto	l4332
  8541                           	
  8542  018E                     l11345:	
  8543  018E  29E3               	goto	l4332
  8544                           	
  8545  018F                     l11347:	
  8546  018F  29E3               	goto	l4332
  8547                           	line	24
  8548                           	
  8549  0190                     l4342:	
  8550                           	
  8551  0190                     l11349:	
  8552                           ;ir.c: 24: else if(adc_value < 522)
  8553  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  8554  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  8555  0192  0842               	movf	(convert@adc_value+1),w
  8556  0193  3A80               	xorlw	80h
  8557  0194  00FF               	movwf	btemp+1
  8558  0195  3082               	movlw	(high(020Ah))^80h
  8559  0196  027F               	subwf	btemp+1,w
  8560  0197  1D03               	skipz
  8561  0198  299B               	goto	u6195
  8562  0199  300A               	movlw	low(020Ah)
  8563  019A  0241               	subwf	(convert@adc_value),w
  8564  019B                     u6195:
  8565                           
  8566  019B  1803               	skipnc
  8567  019C  299E               	goto	u6191
  8568  019D  299F               	goto	u6190
  8569  019E                     u6191:
  8570  019E  29D7               	goto	l11357
  8571  019F                     u6190:
  8572                           	line	25
  8573                           	
  8574  019F                     l11351:	
  8575                           ;ir.c: 25: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
  8576  019F  3070               	movlw	low(070h)
  8577  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  8578  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  8579  01A2  00B0               	movwf	(?___awdiv)
  8580  01A3  3000               	movlw	high(070h)
  8581  01A4  00B1               	movwf	((?___awdiv))+1
  8582  01A5  0941               	comf	(convert@adc_value),w
  8583  01A6  00C3               	movwf	(??_convert+0)+0
  8584  01A7  0942               	comf	(convert@adc_value+1),w
  8585  01A8  00C4               	movwf	((??_convert+0)+0+1)
  8586  01A9  0AC3               	incf	(??_convert+0)+0,f
  8587  01AA  1903               	skipnz
  8588  01AB  0AC4               	incf	((??_convert+0)+0+1),f
  8589  01AC  0843               	movf	0+(??_convert+0)+0,w
  8590  01AD  3E0A               	addlw	low(020Ah)
  8591  01AE  00AA               	movwf	(?___wmul)
  8592  01AF  0844               	movf	1+(??_convert+0)+0,w
  8593  01B0  1803               	skipnc
  8594  01B1  3E01               	addlw	1
  8595  01B2  3E02               	addlw	high(020Ah)
  8596  01B3  00AB               	movwf	1+(?___wmul)
  8597  01B4  300A               	movlw	low(0Ah)
  8598  01B5  00AC               	movwf	0+(?___wmul)+02h
  8599  01B6  3000               	movlw	high(0Ah)
  8600  01B7  00AD               	movwf	(0+(?___wmul)+02h)+1
  8601  01B8  120A  158A  2094   	fcall	___wmul
              120A  118A         
  8602  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  8603  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  8604  01BF  082B               	movf	(1+(?___wmul)),w
  8605  01C0  01B3               	clrf	1+(?___awdiv)+02h
  8606  01C1  07B3               	addwf	1+(?___awdiv)+02h
  8607  01C2  082A               	movf	(0+(?___wmul)),w
  8608  01C3  01B2               	clrf	0+(?___awdiv)+02h
  8609  01C4  07B2               	addwf	0+(?___awdiv)+02h
  8610                           
  8611  01C5  120A  158A  2554   	fcall	___awdiv
              120A  118A         
  8612  01CA  1283               	bcf	status, 5	;RP0=0, select bank0
  8613  01CB  1303               	bcf	status, 6	;RP1=0, select bank0
  8614  01CC  0830               	movf	(0+(?___awdiv)),w
  8615  01CD  3E12               	addlw	low(012h)
  8616  01CE  00C1               	movwf	(?_convert)
  8617  01CF  0831               	movf	(1+(?___awdiv)),w
  8618  01D0  1803               	skipnc
  8619  01D1  3E01               	addlw	1
  8620  01D2  3E00               	addlw	high(012h)
  8621  01D3  00C2               	movwf	1+(?_convert)
  8622  01D4  29E3               	goto	l4332
  8623                           	
  8624  01D5                     l11353:	
  8625  01D5  29E3               	goto	l4332
  8626                           	
  8627  01D6                     l11355:	
  8628  01D6  29E3               	goto	l4332
  8629                           	line	26
  8630                           	
  8631  01D7                     l4344:	
  8632                           	
  8633  01D7                     l11357:	
  8634                           ;ir.c: 26: else return 0;
  8635  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  8636  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  8637  01D9  01C1               	clrf	(?_convert)
  8638  01DA  01C2               	clrf	(?_convert+1)
  8639  01DB  29E3               	goto	l4332
  8640                           	
  8641  01DC                     l11359:	
  8642  01DC  29E3               	goto	l4332
  8643                           	
  8644  01DD                     l4345:	
  8645  01DD  29E3               	goto	l4332
  8646                           	
  8647  01DE                     l4343:	
  8648  01DE  29E3               	goto	l4332
  8649                           	
  8650  01DF                     l4341:	
  8651  01DF  29E3               	goto	l4332
  8652                           	
  8653  01E0                     l4339:	
  8654  01E0  29E3               	goto	l4332
  8655                           	
  8656  01E1                     l4337:	
  8657  01E1  29E3               	goto	l4332
  8658                           	
  8659  01E2                     l4335:	
  8660  01E2  29E3               	goto	l4332
  8661                           	
  8662  01E3                     l4333:	
  8663                           	line	27
  8664                           	
  8665  01E3                     l4332:	
  8666  01E3  0008               	return
  8667                           	opt stack 0
  8668                           GLOBAL	__end_of_convert
  8669  01E4                     	__end_of_convert:
  8670 ;; =============== function _convert ends ============
  8671                           
  8672                           	signat	_convert,4218
  8673                           	global	_play_iCreate_song
  8674                           psect	text1906,local,class=CODE,delta=2
  8675                           global __ptext1906
  8676  1608                     __ptext1906:
  8677                           
  8678 ;; *************** function _play_iCreate_song *****************
  8679 ;; Defined at:
  8680 ;;		line 25 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  song            1    wreg     unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  song            1   12[BANK0 ] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;		None               void
  8687 ;; Registers used:
  8688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8694 ;;      Params:         0       0       0       0       0
  8695 ;;      Locals:         0       1       0       0       0
  8696 ;;      Temps:          0       0       0       0       0
  8697 ;;      Totals:         0       1       0       0       0
  8698 ;;Total ram usage:        1 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:    3
  8701 ;; This function calls:
  8702 ;;		_ser_putch
  8703 ;; This function is called by:
  8704 ;;		_checkForFinalDestination
  8705 ;;		_lookForVictim
  8706 ;;		_findWalls
  8707 ;;		_goParallel
  8708 ;;		_checkIfHome
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           psect	text1906
  8712                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\songs.c"
  8713                           	line	25
  8714                           	global	__size_of_play_iCreate_song
  8715  0012                     	__size_of_play_iCreate_song	equ	__end_of_play_iCreate_song-_play_iCreate_song
  8716                           	
  8717  1608                     _play_iCreate_song:	
  8718                           	opt	stack 3
  8719                           ; Regs used in _play_iCreate_song: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8720                           ;play_iCreate_song@song stored from wreg
  8721  1608  1283               	bcf	status, 5	;RP0=0, select bank0
  8722  1609  1303               	bcf	status, 6	;RP1=0, select bank0
  8723  160A  00AC               	movwf	(play_iCreate_song@song)
  8724                           	line	26
  8725                           	
  8726  160B                     l11299:	
  8727                           ;songs.c: 26: ser_putch(141);
  8728  160B  308D               	movlw	(08Dh)
  8729  160C  160A  118A  26DF   	fcall	_ser_putch
              160A  118A         
  8730                           	line	27
  8731                           ;songs.c: 27: ser_putch(song);
  8732  1611  1283               	bcf	status, 5	;RP0=0, select bank0
  8733  1612  1303               	bcf	status, 6	;RP1=0, select bank0
  8734  1613  082C               	movf	(play_iCreate_song@song),w
  8735  1614  160A  118A  26DF   	fcall	_ser_putch
              160A  118A         
  8736                           	line	28
  8737                           	
  8738  1619                     l3639:	
  8739  1619  0008               	return
  8740                           	opt stack 0
  8741                           GLOBAL	__end_of_play_iCreate_song
  8742  161A                     	__end_of_play_iCreate_song:
  8743 ;; =============== function _play_iCreate_song ends ============
  8744                           
  8745                           	signat	_play_iCreate_song,4216
  8746                           	global	_ser_putArr
  8747                           psect	text1907,local,class=CODE,delta=2
  8748                           global __ptext1907
  8749  09C8                     __ptext1907:
  8750                           
  8751 ;; *************** function _ser_putArr *****************
  8752 ;; Defined at:
  8753 ;;		line 73 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  array           2   12[BANK0 ] PTR unsigned char 
  8756 ;;		 -> beep(5), champions(21), lookingForU2(29), superMarioBros(25), 
  8757 ;;		 -> finalCountdown(27), 
  8758 ;;  length          2   14[BANK0 ] int 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  i               2   19[BANK0 ] int 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;		None               void
  8763 ;; Registers used:
  8764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8770 ;;      Params:         0       4       0       0       0
  8771 ;;      Locals:         0       2       0       0       0
  8772 ;;      Temps:          0       3       0       0       0
  8773 ;;      Totals:         0       9       0       0       0
  8774 ;;Total ram usage:        9 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    3
  8777 ;; This function calls:
  8778 ;;		_ser_putch
  8779 ;; This function is called by:
  8780 ;;		_initSongs
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           psect	text1907
  8784                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
  8785                           	line	73
  8786                           	global	__size_of_ser_putArr
  8787  0039                     	__size_of_ser_putArr	equ	__end_of_ser_putArr-_ser_putArr
  8788                           	
  8789  09C8                     _ser_putArr:	
  8790                           	opt	stack 2
  8791                           ; Regs used in _ser_putArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8792                           	line	74
  8793                           	
  8794  09C8                     l11291:	
  8795                           ;ser.c: 74: for(int i =0; i< length; i++)
  8796  09C8  1283               	bcf	status, 5	;RP0=0, select bank0
  8797  09C9  1303               	bcf	status, 6	;RP1=0, select bank0
  8798  09CA  01B3               	clrf	(ser_putArr@i)
  8799  09CB  01B4               	clrf	(ser_putArr@i+1)
  8800  09CC  29F1               	goto	l11297
  8801                           	line	75
  8802                           	
  8803  09CD                     l2910:	
  8804                           	line	76
  8805                           	
  8806  09CD                     l11293:	
  8807                           ;ser.c: 75: {
  8808                           ;ser.c: 76: ser_putch(array[i]);
  8809  09CD  1283               	bcf	status, 5	;RP0=0, select bank0
  8810  09CE  1303               	bcf	status, 6	;RP1=0, select bank0
  8811  09CF  0833               	movf	(ser_putArr@i),w
  8812  09D0  072C               	addwf	(ser_putArr@array),w
  8813  09D1  00B1               	movwf	(??_ser_putArr+1)+0
  8814  09D2  082D               	movf	(ser_putArr@array+1),w
  8815  09D3  00B0               	movwf	(??_ser_putArr+0)+0
  8816  09D4  1803               	skipnc
  8817  09D5  0AB0               	incf	(??_ser_putArr+0)+0,f
  8818  09D6  1FB3               	btfss	(ser_putArr@i),7
  8819  09D7  29D9               	goto	u6110
  8820  09D8  03B0               	decf	(??_ser_putArr+0)+0,f
  8821  09D9                     u6110:
  8822  09D9  1283               	bcf	status, 5	;RP0=0, select bank0
  8823  09DA  1303               	bcf	status, 6	;RP1=0, select bank0
  8824  09DB  0830               	movf	(??_ser_putArr+0)+0,w
  8825  09DC  00B2               	movwf	0+((??_ser_putArr+1)+0)+1
  8826  09DD  0831               	movf	0+(??_ser_putArr+1)+0,w
  8827  09DE  0084               	movwf	fsr0
  8828  09DF  1783               	bsf	status,7
  8829  09E0  1C32               	btfss	1+(??_ser_putArr+1)+0,0
  8830  09E1  1383               	bcf	status,7
  8831  09E2  0800               	movf	indf,w
  8832  09E3  160A  118A  26DF   	fcall	_ser_putch
              120A  158A         
  8833                           	line	74
  8834                           	
  8835  09E8                     l11295:	
  8836  09E8  3001               	movlw	low(01h)
  8837  09E9  1283               	bcf	status, 5	;RP0=0, select bank0
  8838  09EA  1303               	bcf	status, 6	;RP1=0, select bank0
  8839  09EB  07B3               	addwf	(ser_putArr@i),f
  8840  09EC  1803               	skipnc
  8841  09ED  0AB4               	incf	(ser_putArr@i+1),f
  8842  09EE  3000               	movlw	high(01h)
  8843  09EF  07B4               	addwf	(ser_putArr@i+1),f
  8844  09F0  29F1               	goto	l11297
  8845                           	
  8846  09F1                     l2909:	
  8847                           	
  8848  09F1                     l11297:	
  8849  09F1  0834               	movf	(ser_putArr@i+1),w
  8850  09F2  3A80               	xorlw	80h
  8851  09F3  00B0               	movwf	(??_ser_putArr+0)+0
  8852  09F4  082F               	movf	(ser_putArr@length+1),w
  8853  09F5  3A80               	xorlw	80h
  8854  09F6  0230               	subwf	(??_ser_putArr+0)+0,w
  8855  09F7  1D03               	skipz
  8856  09F8  29FB               	goto	u6125
  8857  09F9  082E               	movf	(ser_putArr@length),w
  8858  09FA  0233               	subwf	(ser_putArr@i),w
  8859  09FB                     u6125:
  8860                           
  8861  09FB  1C03               	skipc
  8862  09FC  29FE               	goto	u6121
  8863  09FD  29FF               	goto	u6120
  8864  09FE                     u6121:
  8865  09FE  29CD               	goto	l11293
  8866  09FF                     u6120:
  8867  09FF  2A00               	goto	l2912
  8868                           	
  8869  0A00                     l2911:	
  8870                           	line	78
  8871                           	
  8872  0A00                     l2912:	
  8873  0A00  0008               	return
  8874                           	opt stack 0
  8875                           GLOBAL	__end_of_ser_putArr
  8876  0A01                     	__end_of_ser_putArr:
  8877 ;; =============== function _ser_putArr ends ============
  8878                           
  8879                           	signat	_ser_putArr,8312
  8880                           	global	_ser_getch
  8881                           psect	text1908,local,class=CODE,delta=2
  8882                           global __ptext1908
  8883  1721                     __ptext1908:
  8884                           
  8885 ;; *************** function _ser_getch *****************
  8886 ;; Defined at:
  8887 ;;		line 58 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;		None
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;  c               1   11[BANK0 ] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      unsigned char 
  8894 ;; Registers used:
  8895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8901 ;;      Params:         0       0       0       0       0
  8902 ;;      Locals:         0       1       0       0       0
  8903 ;;      Temps:          0       1       0       0       0
  8904 ;;      Totals:         0       2       0       0       0
  8905 ;;Total ram usage:        2 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    3
  8908 ;; This function calls:
  8909 ;;		_ser_isrx
  8910 ;; This function is called by:
  8911 ;;		_driveForDistance
  8912 ;;		_lookForVictim
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           psect	text1908
  8916                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
  8917                           	line	58
  8918                           	global	__size_of_ser_getch
  8919  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  8920                           	
  8921  1721                     _ser_getch:	
  8922                           	opt	stack 1
  8923                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8924                           	line	61
  8925                           	
  8926  1721                     l11275:	
  8927                           ;ser.c: 59: unsigned char c;
  8928                           ;ser.c: 61: while (ser_isrx()==0)
  8929  1721  2F23               	goto	l11277
  8930                           	
  8931  1722                     l2904:	
  8932                           	line	62
  8933                           ;ser.c: 62: continue;
  8934  1722  2F23               	goto	l11277
  8935                           	
  8936  1723                     l2903:	
  8937                           	line	61
  8938                           	
  8939  1723                     l11277:	
  8940  1723  120A  158A  2000   	fcall	_ser_isrx
              160A  118A         
  8941  1728  1C03               	btfss	status,0
  8942  1729  2F2B               	goto	u6101
  8943  172A  2F2C               	goto	u6100
  8944  172B                     u6101:
  8945  172B  2F23               	goto	l11277
  8946  172C                     u6100:
  8947                           	
  8948  172C                     l2905:	
  8949                           	line	64
  8950                           ;ser.c: 64: GIE=0;
  8951  172C  138B               	bcf	(95/8),(95)&7
  8952                           	line	65
  8953                           	
  8954  172D                     l11279:	
  8955                           ;ser.c: 65: c=rxfifo[rxoptr];
  8956  172D  0879               	movf	(_rxoptr),w
  8957  172E  3EA0               	addlw	_rxfifo&0ffh
  8958  172F  0084               	movwf	fsr0
  8959  1730  1383               	bcf	status, 7	;select IRP bank1
  8960  1731  0800               	movf	indf,w
  8961  1732  1283               	bcf	status, 5	;RP0=0, select bank0
  8962  1733  1303               	bcf	status, 6	;RP1=0, select bank0
  8963  1734  00AA               	movwf	(??_ser_getch+0)+0
  8964  1735  082A               	movf	(??_ser_getch+0)+0,w
  8965  1736  00AB               	movwf	(ser_getch@c)
  8966                           	line	66
  8967                           	
  8968  1737                     l11281:	
  8969                           ;ser.c: 66: ++rxoptr;
  8970  1737  3001               	movlw	(01h)
  8971  1738  00AA               	movwf	(??_ser_getch+0)+0
  8972  1739  082A               	movf	(??_ser_getch+0)+0,w
  8973  173A  07F9               	addwf	(_rxoptr),f	;volatile
  8974                           	line	67
  8975                           	
  8976  173B                     l11283:	
  8977                           ;ser.c: 67: rxoptr &= (16-1);
  8978  173B  300F               	movlw	(0Fh)
  8979  173C  00AA               	movwf	(??_ser_getch+0)+0
  8980  173D  082A               	movf	(??_ser_getch+0)+0,w
  8981  173E  05F9               	andwf	(_rxoptr),f	;volatile
  8982                           	line	68
  8983                           	
  8984  173F                     l11285:	
  8985                           ;ser.c: 68: GIE=1;
  8986  173F  178B               	bsf	(95/8),(95)&7
  8987                           	line	69
  8988                           	
  8989  1740                     l11287:	
  8990                           ;ser.c: 69: return c;
  8991  1740  082B               	movf	(ser_getch@c),w
  8992  1741  2F42               	goto	l2906
  8993                           	
  8994  1742                     l11289:	
  8995                           	line	70
  8996                           	
  8997  1742                     l2906:	
  8998  1742  0008               	return
  8999                           	opt stack 0
  9000                           GLOBAL	__end_of_ser_getch
  9001  1743                     	__end_of_ser_getch:
  9002 ;; =============== function _ser_getch ends ============
  9003                           
  9004                           	signat	_ser_getch,89
  9005                           	global	_lcd_write_data
  9006                           psect	text1909,local,class=CODE,delta=2
  9007                           global __ptext1909
  9008  161A                     __ptext1909:
  9009                           
  9010 ;; *************** function _lcd_write_data *****************
  9011 ;; Defined at:
  9012 ;;		line 20 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  databyte        1    wreg     unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  databyte        1   12[BANK0 ] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;		None               void
  9019 ;; Registers used:
  9020 ;;		wreg
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9026 ;;      Params:         0       0       0       0       0
  9027 ;;      Locals:         0       1       0       0       0
  9028 ;;      Temps:          0       2       0       0       0
  9029 ;;      Totals:         0       3       0       0       0
  9030 ;;Total ram usage:        3 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    2
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_lcd_write_string
  9037 ;;		_lcd_write_1_digit_bcd
  9038 ;;		_goBackward
  9039 ;;		_goForward
  9040 ;;		_goLeft
  9041 ;;		_goReverse
  9042 ;;		_goRight
  9043 ;;		_checkForFinalDestination
  9044 ;;		_lookForVictim
  9045 ;;		_findWalls
  9046 ;;		_updateLocation
  9047 ;;		_lcd_write_3_digit_bcd
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           psect	text1909
  9051                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  9052                           	line	20
  9053                           	global	__size_of_lcd_write_data
  9054  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  9055                           	
  9056  161A                     _lcd_write_data:	
  9057                           	opt	stack 3
  9058                           ; Regs used in _lcd_write_data: [wreg]
  9059                           ;lcd_write_data@databyte stored from wreg
  9060  161A  1283               	bcf	status, 5	;RP0=0, select bank0
  9061  161B  1303               	bcf	status, 6	;RP1=0, select bank0
  9062  161C  00AC               	movwf	(lcd_write_data@databyte)
  9063                           	line	21
  9064                           	
  9065  161D                     l11267:	
  9066                           ;lcd.c: 21: RE2 = 0;
  9067  161D  1109               	bcf	(74/8),(74)&7
  9068                           	line	22
  9069                           ;lcd.c: 22: RE1 = 0;
  9070  161E  1089               	bcf	(73/8),(73)&7
  9071                           	line	23
  9072                           ;lcd.c: 23: RE0 = 1;
  9073  161F  1409               	bsf	(72/8),(72)&7
  9074                           	line	24
  9075                           	
  9076  1620                     l11269:	
  9077                           ;lcd.c: 24: PORTD = databyte;
  9078  1620  082C               	movf	(lcd_write_data@databyte),w
  9079  1621  0088               	movwf	(8)	;volatile
  9080                           	line	25
  9081                           	
  9082  1622                     l11271:	
  9083                           ;lcd.c: 25: RE2 = 1;
  9084  1622  1509               	bsf	(74/8),(74)&7
  9085                           	line	26
  9086                           	
  9087  1623                     l11273:	
  9088                           ;lcd.c: 26: RE2 = 0;
  9089  1623  1109               	bcf	(74/8),(74)&7
  9090                           	line	27
  9091                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
  9092                           	opt asmopt_off
  9093  1624  3007               movlw	7
  9094  1625  00AB               movwf	((??_lcd_write_data+0)+0+1),f
  9095  1626  307D               	movlw	125
  9096  1627  00AA               movwf	((??_lcd_write_data+0)+0),f
  9097  1628                     u6957:
  9098  1628  0BAA               	decfsz	((??_lcd_write_data+0)+0),f
  9099  1629  2E28               	goto	u6957
  9100  162A  0BAB               	decfsz	((??_lcd_write_data+0)+0+1),f
  9101  162B  2E28               	goto	u6957
  9102                           opt asmopt_on
  9103                           
  9104                           	line	28
  9105                           	
  9106  162C                     l1396:	
  9107  162C  0008               	return
  9108                           	opt stack 0
  9109                           GLOBAL	__end_of_lcd_write_data
  9110  162D                     	__end_of_lcd_write_data:
  9111 ;; =============== function _lcd_write_data ends ============
  9112                           
  9113                           	signat	_lcd_write_data,4216
  9114                           	global	_lcd_write_control
  9115                           psect	text1910,local,class=CODE,delta=2
  9116                           global __ptext1910
  9117  1640                     __ptext1910:
  9118                           
  9119 ;; *************** function _lcd_write_control *****************
  9120 ;; Defined at:
  9121 ;;		line 8 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  databyte        1    wreg     unsigned char 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  databyte        1   12[BANK0 ] unsigned char 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;		None               void
  9128 ;; Registers used:
  9129 ;;		wreg
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9135 ;;      Params:         0       0       0       0       0
  9136 ;;      Locals:         0       1       0       0       0
  9137 ;;      Temps:          0       2       0       0       0
  9138 ;;      Totals:         0       3       0       0       0
  9139 ;;Total ram usage:        3 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    2
  9142 ;; This function calls:
  9143 ;;		Nothing
  9144 ;; This function is called by:
  9145 ;;		_lcd_set_cursor
  9146 ;;		_lcd_init
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           psect	text1910
  9150                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\lcd.c"
  9151                           	line	8
  9152                           	global	__size_of_lcd_write_control
  9153  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  9154                           	
  9155  1640                     _lcd_write_control:	
  9156                           	opt	stack 3
  9157                           ; Regs used in _lcd_write_control: [wreg]
  9158                           ;lcd_write_control@databyte stored from wreg
  9159  1640  1283               	bcf	status, 5	;RP0=0, select bank0
  9160  1641  1303               	bcf	status, 6	;RP1=0, select bank0
  9161  1642  00AC               	movwf	(lcd_write_control@databyte)
  9162                           	line	9
  9163                           	
  9164  1643                     l11259:	
  9165                           ;lcd.c: 9: RE2 = 0;
  9166  1643  1109               	bcf	(74/8),(74)&7
  9167                           	line	10
  9168                           ;lcd.c: 10: RE1 = 0;
  9169  1644  1089               	bcf	(73/8),(73)&7
  9170                           	line	11
  9171                           ;lcd.c: 11: RE0 = 0;
  9172  1645  1009               	bcf	(72/8),(72)&7
  9173                           	line	12
  9174                           	
  9175  1646                     l11261:	
  9176                           ;lcd.c: 12: PORTD = databyte;
  9177  1646  082C               	movf	(lcd_write_control@databyte),w
  9178  1647  0088               	movwf	(8)	;volatile
  9179                           	line	13
  9180                           	
  9181  1648                     l11263:	
  9182                           ;lcd.c: 13: RE2 = 1;
  9183  1648  1509               	bsf	(74/8),(74)&7
  9184                           	line	14
  9185                           	
  9186  1649                     l11265:	
  9187                           ;lcd.c: 14: RE2 = 0;
  9188  1649  1109               	bcf	(74/8),(74)&7
  9189                           	line	15
  9190                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
  9191                           	opt asmopt_off
  9192  164A  300D               movlw	13
  9193  164B  00AB               movwf	((??_lcd_write_control+0)+0+1),f
  9194  164C  30FB               	movlw	251
  9195  164D  00AA               movwf	((??_lcd_write_control+0)+0),f
  9196  164E                     u6967:
  9197  164E  0BAA               	decfsz	((??_lcd_write_control+0)+0),f
  9198  164F  2E4E               	goto	u6967
  9199  1650  0BAB               	decfsz	((??_lcd_write_control+0)+0+1),f
  9200  1651  2E4E               	goto	u6967
  9201  1652  2E53               	nop2
  9202                           opt asmopt_on
  9203                           
  9204                           	line	16
  9205                           	
  9206  1653                     l1393:	
  9207  1653  0008               	return
  9208                           	opt stack 0
  9209                           GLOBAL	__end_of_lcd_write_control
  9210  1654                     	__end_of_lcd_write_control:
  9211 ;; =============== function _lcd_write_control ends ============
  9212                           
  9213                           	signat	_lcd_write_control,4216
  9214                           	global	_init_adc
  9215                           psect	text1911,local,class=CODE,delta=2
  9216                           global __ptext1911
  9217  07EA                     __ptext1911:
  9218                           
  9219 ;; *************** function _init_adc *****************
  9220 ;; Defined at:
  9221 ;;		line 48 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\adc.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;		None
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;		None
  9226 ;; Return value:  Size  Location     Type
  9227 ;;		None               void
  9228 ;; Registers used:
  9229 ;;		wreg, status,2
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9235 ;;      Params:         0       0       0       0       0
  9236 ;;      Locals:         0       0       0       0       0
  9237 ;;      Temps:          0       1       0       0       0
  9238 ;;      Totals:         0       1       0       0       0
  9239 ;;Total ram usage:        1 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    2
  9242 ;; This function calls:
  9243 ;;		Nothing
  9244 ;; This function is called by:
  9245 ;;		_init
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           psect	text1911
  9249                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\adc.c"
  9250                           	line	48
  9251                           	global	__size_of_init_adc
  9252  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  9253                           	
  9254  07EA                     _init_adc:	
  9255                           	opt	stack 4
  9256                           ; Regs used in _init_adc: [wreg+status,2]
  9257                           	line	50
  9258                           	
  9259  07EA                     l11249:	
  9260                           ;adc.c: 50: PORTA = 0;
  9261  07EA  1283               	bcf	status, 5	;RP0=0, select bank0
  9262  07EB  1303               	bcf	status, 6	;RP1=0, select bank0
  9263  07EC  0185               	clrf	(5)	;volatile
  9264                           	line	51
  9265                           	
  9266  07ED                     l11251:	
  9267                           ;adc.c: 51: TRISA = 0b00111111;
  9268  07ED  303F               	movlw	(03Fh)
  9269  07EE  1683               	bsf	status, 5	;RP0=1, select bank1
  9270  07EF  1303               	bcf	status, 6	;RP1=0, select bank1
  9271  07F0  0085               	movwf	(133)^080h	;volatile
  9272                           	line	54
  9273                           	
  9274  07F1                     l11253:	
  9275                           ;adc.c: 54: ADCON0 = 0b10100001;
  9276  07F1  30A1               	movlw	(0A1h)
  9277  07F2  1283               	bcf	status, 5	;RP0=0, select bank0
  9278  07F3  1303               	bcf	status, 6	;RP1=0, select bank0
  9279  07F4  009F               	movwf	(31)	;volatile
  9280                           	line	55
  9281                           	
  9282  07F5                     l11255:	
  9283                           ;adc.c: 55: ADCON1 = 0b00000010;
  9284  07F5  3002               	movlw	(02h)
  9285  07F6  1683               	bsf	status, 5	;RP0=1, select bank1
  9286  07F7  1303               	bcf	status, 6	;RP1=0, select bank1
  9287  07F8  009F               	movwf	(159)^080h	;volatile
  9288                           	line	57
  9289                           	
  9290  07F9                     l11257:	
  9291                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9292                           	opt asmopt_off
  9293  07F9  3053               movlw	83
  9294  07FA  1283               	bcf	status, 5	;RP0=0, select bank0
  9295  07FB  1303               	bcf	status, 6	;RP1=0, select bank0
  9296  07FC  00AA               movwf	(??_init_adc+0)+0,f
  9297  07FD                     u6977:
  9298  07FD  0BAA               decfsz	(??_init_adc+0)+0,f
  9299  07FE  2FFD               	goto	u6977
  9300                           opt asmopt_on
  9301                           
  9302                           	line	58
  9303                           	
  9304  07FF                     l700:	
  9305  07FF  0008               	return
  9306                           	opt stack 0
  9307                           GLOBAL	__end_of_init_adc
  9308  0800                     	__end_of_init_adc:
  9309 ;; =============== function _init_adc ends ============
  9310                           
  9311                           	signat	_init_adc,88
  9312                           	global	_adc_read
  9313                           psect	text1912,local,class=CODE,delta=2
  9314                           global __ptext1912
  9315  0A3F                     __ptext1912:
  9316                           
  9317 ;; *************** function _adc_read *****************
  9318 ;; Defined at:
  9319 ;;		line 62 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\adc.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;		None
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  adc_value       2   31[BANK0 ] volatile int 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  2   25[BANK0 ] int 
  9326 ;; Registers used:
  9327 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9333 ;;      Params:         0       2       0       0       0
  9334 ;;      Locals:         0       2       0       0       0
  9335 ;;      Temps:          0       4       0       0       0
  9336 ;;      Totals:         0       8       0       0       0
  9337 ;;Total ram usage:        8 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    3
  9340 ;; This function calls:
  9341 ;;		___awdiv
  9342 ;; This function is called by:
  9343 ;;		_adc_read_channel
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           psect	text1912
  9347                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\adc.c"
  9348                           	line	62
  9349                           	global	__size_of_adc_read
  9350  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  9351                           	
  9352  0A3F                     _adc_read:	
  9353                           	opt	stack 1
  9354                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9355                           	line	65
  9356                           	
  9357  0A3F                     l11239:	
  9358                           ;adc.c: 63: volatile int adc_value;
  9359                           ;adc.c: 65: ADRESH = 0;
  9360  0A3F  1283               	bcf	status, 5	;RP0=0, select bank0
  9361  0A40  1303               	bcf	status, 6	;RP1=0, select bank0
  9362  0A41  019E               	clrf	(30)	;volatile
  9363                           	line	66
  9364                           ;adc.c: 66: ADRESL = 0;
  9365  0A42  1683               	bsf	status, 5	;RP0=1, select bank1
  9366  0A43  1303               	bcf	status, 6	;RP1=0, select bank1
  9367  0A44  019E               	clrf	(158)^080h	;volatile
  9368                           	line	68
  9369                           	
  9370  0A45                     l11241:	
  9371                           ;adc.c: 68: GO = 1;
  9372  0A45  1283               	bcf	status, 5	;RP0=0, select bank0
  9373  0A46  1303               	bcf	status, 6	;RP1=0, select bank0
  9374  0A47  151F               	bsf	(250/8),(250)&7
  9375                           	line	69
  9376                           ;adc.c: 69: while(GO) continue;
  9377  0A48  2A49               	goto	l703
  9378                           	
  9379  0A49                     l704:	
  9380                           	
  9381  0A49                     l703:	
  9382  0A49  191F               	btfsc	(250/8),(250)&7
  9383  0A4A  2A4C               	goto	u6081
  9384  0A4B  2A4D               	goto	u6080
  9385  0A4C                     u6081:
  9386  0A4C  2A49               	goto	l703
  9387  0A4D                     u6080:
  9388  0A4D  2A4E               	goto	l11243
  9389                           	
  9390  0A4E                     l705:	
  9391                           	line	75
  9392                           	
  9393  0A4E                     l11243:	
  9394                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
  9395  0A4E  3040               	movlw	low(040h)
  9396  0A4F  00B0               	movwf	(?___awdiv)
  9397  0A50  3000               	movlw	high(040h)
  9398  0A51  00B1               	movwf	((?___awdiv))+1
  9399  0A52  1683               	bsf	status, 5	;RP0=1, select bank1
  9400  0A53  1303               	bcf	status, 6	;RP1=0, select bank1
  9401  0A54  081E               	movf	(158)^080h,w	;volatile
  9402  0A55  1283               	bcf	status, 5	;RP0=0, select bank0
  9403  0A56  1303               	bcf	status, 6	;RP1=0, select bank0
  9404  0A57  00BB               	movwf	(??_adc_read+0)+0
  9405  0A58  01BC               	clrf	(??_adc_read+0)+0+1
  9406  0A59  083B               	movf	0+(??_adc_read+0)+0,w
  9407  0A5A  00B2               	movwf	0+(?___awdiv)+02h
  9408  0A5B  083C               	movf	1+(??_adc_read+0)+0,w
  9409  0A5C  00B3               	movwf	1+(?___awdiv)+02h
  9410  0A5D  120A  158A  2554   	fcall	___awdiv
              120A  158A         
  9411  0A62  1283               	bcf	status, 5	;RP0=0, select bank0
  9412  0A63  1303               	bcf	status, 6	;RP1=0, select bank0
  9413  0A64  081E               	movf	(30),w	;volatile
  9414  0A65  00BD               	movwf	(??_adc_read+2)+0
  9415  0A66  01BE               	clrf	(??_adc_read+2)+0+1
  9416  0A67  3002               	movlw	02h
  9417  0A68  00FF               	movwf	btemp+1
  9418  0A69                     u6095:
  9419  0A69  1003               	clrc
  9420  0A6A  0DBD               	rlf	(??_adc_read+2)+0,f
  9421  0A6B  0DBE               	rlf	(??_adc_read+2)+1,f
  9422  0A6C  0BFF               	decfsz	btemp+1,f
  9423  0A6D  2A69               	goto	u6095
  9424  0A6E  0830               	movf	(0+(?___awdiv)),w
  9425  0A6F  073D               	addwf	0+(??_adc_read+2)+0,w
  9426  0A70  00BF               	movwf	(adc_read@adc_value)	;volatile
  9427  0A71  0831               	movf	(1+(?___awdiv)),w
  9428  0A72  1803               	skipnc
  9429  0A73  0A31               	incf	(1+(?___awdiv)),w
  9430  0A74  073E               	addwf	1+(??_adc_read+2)+0,w
  9431  0A75  00C0               	movwf	1+(adc_read@adc_value)	;volatile
  9432                           	line	77
  9433                           	
  9434  0A76                     l11245:	
  9435                           ;adc.c: 77: return (adc_value);
  9436  0A76  0840               	movf	(adc_read@adc_value+1),w	;volatile
  9437  0A77  01BA               	clrf	(?_adc_read+1)
  9438  0A78  07BA               	addwf	(?_adc_read+1)
  9439  0A79  083F               	movf	(adc_read@adc_value),w	;volatile
  9440  0A7A  01B9               	clrf	(?_adc_read)
  9441  0A7B  07B9               	addwf	(?_adc_read)
  9442                           
  9443  0A7C  2A7D               	goto	l706
  9444                           	
  9445  0A7D                     l11247:	
  9446                           	line	78
  9447                           	
  9448  0A7D                     l706:	
  9449  0A7D  0008               	return
  9450                           	opt stack 0
  9451                           GLOBAL	__end_of_adc_read
  9452  0A7E                     	__end_of_adc_read:
  9453 ;; =============== function _adc_read ends ============
  9454                           
  9455                           	signat	_adc_read,90
  9456                           	global	___awdiv
  9457                           psect	text1913,local,class=CODE,delta=2
  9458                           global __ptext1913
  9459  0D54                     __ptext1913:
  9460                           
  9461 ;; *************** function ___awdiv *****************
  9462 ;; Defined at:
  9463 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  divisor         2   16[BANK0 ] int 
  9466 ;;  dividend        2   18[BANK0 ] int 
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;  quotient        2   23[BANK0 ] int 
  9469 ;;  sign            1   22[BANK0 ] unsigned char 
  9470 ;;  counter         1   21[BANK0 ] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  2   16[BANK0 ] int 
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9480 ;;      Params:         0       4       0       0       0
  9481 ;;      Locals:         0       4       0       0       0
  9482 ;;      Temps:          0       1       0       0       0
  9483 ;;      Totals:         0       9       0       0       0
  9484 ;;Total ram usage:        9 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    2
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_adc_read
  9491 ;;		_convert
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           psect	text1913
  9495                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  9496                           	line	5
  9497                           	global	__size_of___awdiv
  9498  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  9499                           	
  9500  0D54                     ___awdiv:	
  9501                           	opt	stack 2
  9502                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9503                           	line	9
  9504                           	
  9505  0D54                     l11153:	
  9506  0D54  1283               	bcf	status, 5	;RP0=0, select bank0
  9507  0D55  1303               	bcf	status, 6	;RP1=0, select bank0
  9508  0D56  01B6               	clrf	(___awdiv@sign)
  9509                           	line	10
  9510  0D57  1FB1               	btfss	(___awdiv@divisor+1),7
  9511  0D58  2D5A               	goto	u5921
  9512  0D59  2D5B               	goto	u5920
  9513  0D5A                     u5921:
  9514  0D5A  2D64               	goto	l11157
  9515  0D5B                     u5920:
  9516                           	line	11
  9517                           	
  9518  0D5B                     l11155:	
  9519  0D5B  09B0               	comf	(___awdiv@divisor),f
  9520  0D5C  09B1               	comf	(___awdiv@divisor+1),f
  9521  0D5D  0AB0               	incf	(___awdiv@divisor),f
  9522  0D5E  1903               	skipnz
  9523  0D5F  0AB1               	incf	(___awdiv@divisor+1),f
  9524                           	line	12
  9525  0D60  01B6               	clrf	(___awdiv@sign)
  9526  0D61  1403               	bsf	status,0
  9527  0D62  0DB6               	rlf	(___awdiv@sign),f
  9528  0D63  2D64               	goto	l11157
  9529                           	line	13
  9530                           	
  9531  0D64                     l6873:	
  9532                           	line	14
  9533                           	
  9534  0D64                     l11157:	
  9535  0D64  1FB3               	btfss	(___awdiv@dividend+1),7
  9536  0D65  2D67               	goto	u5931
  9537  0D66  2D68               	goto	u5930
  9538  0D67                     u5931:
  9539  0D67  2D72               	goto	l11163
  9540  0D68                     u5930:
  9541                           	line	15
  9542                           	
  9543  0D68                     l11159:	
  9544  0D68  09B2               	comf	(___awdiv@dividend),f
  9545  0D69  09B3               	comf	(___awdiv@dividend+1),f
  9546  0D6A  0AB2               	incf	(___awdiv@dividend),f
  9547  0D6B  1903               	skipnz
  9548  0D6C  0AB3               	incf	(___awdiv@dividend+1),f
  9549                           	line	16
  9550                           	
  9551  0D6D                     l11161:	
  9552  0D6D  3001               	movlw	(01h)
  9553  0D6E  00B4               	movwf	(??___awdiv+0)+0
  9554  0D6F  0834               	movf	(??___awdiv+0)+0,w
  9555  0D70  06B6               	xorwf	(___awdiv@sign),f
  9556  0D71  2D72               	goto	l11163
  9557                           	line	17
  9558                           	
  9559  0D72                     l6874:	
  9560                           	line	18
  9561                           	
  9562  0D72                     l11163:	
  9563  0D72  01B7               	clrf	(___awdiv@quotient)
  9564  0D73  01B8               	clrf	(___awdiv@quotient+1)
  9565                           	line	19
  9566                           	
  9567  0D74                     l11165:	
  9568  0D74  0831               	movf	(___awdiv@divisor+1),w
  9569  0D75  0430               	iorwf	(___awdiv@divisor),w
  9570  0D76  1903               	skipnz
  9571  0D77  2D79               	goto	u5941
  9572  0D78  2D7A               	goto	u5940
  9573  0D79                     u5941:
  9574  0D79  2DB8               	goto	l11185
  9575  0D7A                     u5940:
  9576                           	line	20
  9577                           	
  9578  0D7A                     l11167:	
  9579  0D7A  01B5               	clrf	(___awdiv@counter)
  9580  0D7B  1403               	bsf	status,0
  9581  0D7C  0DB5               	rlf	(___awdiv@counter),f
  9582                           	line	21
  9583  0D7D  2D8A               	goto	l11173
  9584                           	
  9585  0D7E                     l6877:	
  9586                           	line	22
  9587                           	
  9588  0D7E                     l11169:	
  9589  0D7E  3001               	movlw	01h
  9590                           	
  9591  0D7F                     u5955:
  9592  0D7F  1003               	clrc
  9593  0D80  0DB0               	rlf	(___awdiv@divisor),f
  9594  0D81  0DB1               	rlf	(___awdiv@divisor+1),f
  9595  0D82  3EFF               	addlw	-1
  9596  0D83  1D03               	skipz
  9597  0D84  2D7F               	goto	u5955
  9598                           	line	23
  9599                           	
  9600  0D85                     l11171:	
  9601  0D85  3001               	movlw	(01h)
  9602  0D86  00B4               	movwf	(??___awdiv+0)+0
  9603  0D87  0834               	movf	(??___awdiv+0)+0,w
  9604  0D88  07B5               	addwf	(___awdiv@counter),f
  9605  0D89  2D8A               	goto	l11173
  9606                           	line	24
  9607                           	
  9608  0D8A                     l6876:	
  9609                           	line	21
  9610                           	
  9611  0D8A                     l11173:	
  9612  0D8A  1FB1               	btfss	(___awdiv@divisor+1),(15)&7
  9613  0D8B  2D8D               	goto	u5961
  9614  0D8C  2D8E               	goto	u5960
  9615  0D8D                     u5961:
  9616  0D8D  2D7E               	goto	l11169
  9617  0D8E                     u5960:
  9618  0D8E  2D90               	goto	l11175
  9619                           	
  9620  0D8F                     l6878:	
  9621  0D8F  2D90               	goto	l11175
  9622                           	line	25
  9623                           	
  9624  0D90                     l6879:	
  9625                           	line	26
  9626                           	
  9627  0D90                     l11175:	
  9628  0D90  3001               	movlw	01h
  9629                           	
  9630  0D91                     u5975:
  9631  0D91  1003               	clrc
  9632  0D92  0DB7               	rlf	(___awdiv@quotient),f
  9633  0D93  0DB8               	rlf	(___awdiv@quotient+1),f
  9634  0D94  3EFF               	addlw	-1
  9635  0D95  1D03               	skipz
  9636  0D96  2D91               	goto	u5975
  9637                           	line	27
  9638  0D97  0831               	movf	(___awdiv@divisor+1),w
  9639  0D98  0233               	subwf	(___awdiv@dividend+1),w
  9640  0D99  1D03               	skipz
  9641  0D9A  2D9D               	goto	u5985
  9642  0D9B  0830               	movf	(___awdiv@divisor),w
  9643  0D9C  0232               	subwf	(___awdiv@dividend),w
  9644  0D9D                     u5985:
  9645  0D9D  1C03               	skipc
  9646  0D9E  2DA0               	goto	u5981
  9647  0D9F  2DA1               	goto	u5980
  9648  0DA0                     u5981:
  9649  0DA0  2DA9               	goto	l11181
  9650  0DA1                     u5980:
  9651                           	line	28
  9652                           	
  9653  0DA1                     l11177:	
  9654  0DA1  0830               	movf	(___awdiv@divisor),w
  9655  0DA2  02B2               	subwf	(___awdiv@dividend),f
  9656  0DA3  0831               	movf	(___awdiv@divisor+1),w
  9657  0DA4  1C03               	skipc
  9658  0DA5  03B3               	decf	(___awdiv@dividend+1),f
  9659  0DA6  02B3               	subwf	(___awdiv@dividend+1),f
  9660                           	line	29
  9661                           	
  9662  0DA7                     l11179:	
  9663  0DA7  1437               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  9664  0DA8  2DA9               	goto	l11181
  9665                           	line	30
  9666                           	
  9667  0DA9                     l6880:	
  9668                           	line	31
  9669                           	
  9670  0DA9                     l11181:	
  9671  0DA9  3001               	movlw	01h
  9672                           	
  9673  0DAA                     u5995:
  9674  0DAA  1003               	clrc
  9675  0DAB  0CB1               	rrf	(___awdiv@divisor+1),f
  9676  0DAC  0CB0               	rrf	(___awdiv@divisor),f
  9677  0DAD  3EFF               	addlw	-1
  9678  0DAE  1D03               	skipz
  9679  0DAF  2DAA               	goto	u5995
  9680                           	line	32
  9681                           	
  9682  0DB0                     l11183:	
  9683  0DB0  3001               	movlw	low(01h)
  9684  0DB1  02B5               	subwf	(___awdiv@counter),f
  9685  0DB2  1D03               	btfss	status,2
  9686  0DB3  2DB5               	goto	u6001
  9687  0DB4  2DB6               	goto	u6000
  9688  0DB5                     u6001:
  9689  0DB5  2D90               	goto	l11175
  9690  0DB6                     u6000:
  9691  0DB6  2DB8               	goto	l11185
  9692                           	
  9693  0DB7                     l6881:	
  9694  0DB7  2DB8               	goto	l11185
  9695                           	line	33
  9696                           	
  9697  0DB8                     l6875:	
  9698                           	line	34
  9699                           	
  9700  0DB8                     l11185:	
  9701  0DB8  0836               	movf	(___awdiv@sign),w
  9702  0DB9  1D03               	skipz
  9703  0DBA  2DBC               	goto	u6010
  9704  0DBB  2DC2               	goto	l11189
  9705  0DBC                     u6010:
  9706                           	line	35
  9707                           	
  9708  0DBC                     l11187:	
  9709  0DBC  09B7               	comf	(___awdiv@quotient),f
  9710  0DBD  09B8               	comf	(___awdiv@quotient+1),f
  9711  0DBE  0AB7               	incf	(___awdiv@quotient),f
  9712  0DBF  1903               	skipnz
  9713  0DC0  0AB8               	incf	(___awdiv@quotient+1),f
  9714  0DC1  2DC2               	goto	l11189
  9715                           	
  9716  0DC2                     l6882:	
  9717                           	line	36
  9718                           	
  9719  0DC2                     l11189:	
  9720  0DC2  0838               	movf	(___awdiv@quotient+1),w
  9721  0DC3  01B1               	clrf	(?___awdiv+1)
  9722  0DC4  07B1               	addwf	(?___awdiv+1)
  9723  0DC5  0837               	movf	(___awdiv@quotient),w
  9724  0DC6  01B0               	clrf	(?___awdiv)
  9725  0DC7  07B0               	addwf	(?___awdiv)
  9726                           
  9727  0DC8  2DC9               	goto	l6883
  9728                           	
  9729  0DC9                     l11191:	
  9730                           	line	37
  9731                           	
  9732  0DC9                     l6883:	
  9733  0DC9  0008               	return
  9734                           	opt stack 0
  9735                           GLOBAL	__end_of___awdiv
  9736  0DCA                     	__end_of___awdiv:
  9737 ;; =============== function ___awdiv ends ============
  9738                           
  9739                           	signat	___awdiv,8314
  9740                           	global	___fttol
  9741                           psect	text1914,local,class=CODE,delta=2
  9742                           global __ptext1914
  9743  0F5A                     __ptext1914:
  9744                           
  9745 ;; *************** function ___fttol *****************
  9746 ;; Defined at:
  9747 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  f1              3   18[BANK0 ] float 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  lval            4   27[BANK0 ] unsigned long 
  9752 ;;  exp1            1   31[BANK0 ] unsigned char 
  9753 ;;  sign1           1   26[BANK0 ] unsigned char 
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  4   18[BANK0 ] long 
  9756 ;; Registers used:
  9757 ;;		wreg, status,2, status,0
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9763 ;;      Params:         0       4       0       0       0
  9764 ;;      Locals:         0       6       0       0       0
  9765 ;;      Temps:          0       4       0       0       0
  9766 ;;      Totals:         0      14       0       0       0
  9767 ;;Total ram usage:       14 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    2
  9770 ;; This function calls:
  9771 ;;		Nothing
  9772 ;; This function is called by:
  9773 ;;		_goParallel
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           psect	text1914
  9777                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  9778                           	line	45
  9779                           	global	__size_of___fttol
  9780  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  9781                           	
  9782  0F5A                     ___fttol:	
  9783                           	opt	stack 4
  9784                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9785                           	line	49
  9786                           	
  9787  0F5A                     l11093:	
  9788  0F5A  1283               	bcf	status, 5	;RP0=0, select bank0
  9789  0F5B  1303               	bcf	status, 6	;RP1=0, select bank0
  9790  0F5C  0832               	movf	(___fttol@f1),w
  9791  0F5D  00B6               	movwf	((??___fttol+0)+0)
  9792  0F5E  0833               	movf	(___fttol@f1+1),w
  9793  0F5F  00B7               	movwf	((??___fttol+0)+0+1)
  9794  0F60  0834               	movf	(___fttol@f1+2),w
  9795  0F61  00B8               	movwf	((??___fttol+0)+0+2)
  9796  0F62  1003               	clrc
  9797  0F63  0D37               	rlf	(??___fttol+0)+1,w
  9798  0F64  0D38               	rlf	(??___fttol+0)+2,w
  9799  0F65  00B9               	movwf	(??___fttol+3)+0
  9800  0F66  0839               	movf	(??___fttol+3)+0,w
  9801  0F67  00BF               	movwf	(___fttol@exp1)
  9802  0F68  08BF               	movf	((___fttol@exp1)),f
  9803  0F69  1D03               	skipz
  9804  0F6A  2F6C               	goto	u5801
  9805  0F6B  2F6D               	goto	u5800
  9806  0F6C                     u5801:
  9807  0F6C  2F77               	goto	l11099
  9808  0F6D                     u5800:
  9809                           	line	50
  9810                           	
  9811  0F6D                     l11095:	
  9812  0F6D  3000               	movlw	0
  9813  0F6E  00B5               	movwf	(?___fttol+3)
  9814  0F6F  3000               	movlw	0
  9815  0F70  00B4               	movwf	(?___fttol+2)
  9816  0F71  3000               	movlw	0
  9817  0F72  00B3               	movwf	(?___fttol+1)
  9818  0F73  3000               	movlw	0
  9819  0F74  00B2               	movwf	(?___fttol)
  9820                           
  9821  0F75  2FFF               	goto	l6843
  9822                           	
  9823  0F76                     l11097:	
  9824  0F76  2FFF               	goto	l6843
  9825                           	
  9826  0F77                     l6842:	
  9827                           	line	51
  9828                           	
  9829  0F77                     l11099:	
  9830  0F77  0832               	movf	(___fttol@f1),w
  9831  0F78  00B6               	movwf	((??___fttol+0)+0)
  9832  0F79  0833               	movf	(___fttol@f1+1),w
  9833  0F7A  00B7               	movwf	((??___fttol+0)+0+1)
  9834  0F7B  0834               	movf	(___fttol@f1+2),w
  9835  0F7C  00B8               	movwf	((??___fttol+0)+0+2)
  9836  0F7D  3017               	movlw	017h
  9837  0F7E                     u5815:
  9838  0F7E  1003               	clrc
  9839  0F7F  0CB8               	rrf	(??___fttol+0)+2,f
  9840  0F80  0CB7               	rrf	(??___fttol+0)+1,f
  9841  0F81  0CB6               	rrf	(??___fttol+0)+0,f
  9842  0F82                     u5810:
  9843  0F82  3EFF               	addlw	-1
  9844  0F83  1D03               	skipz
  9845  0F84  2F7E               	goto	u5815
  9846  0F85  0836               	movf	0+(??___fttol+0)+0,w
  9847  0F86  00B9               	movwf	(??___fttol+3)+0
  9848  0F87  0839               	movf	(??___fttol+3)+0,w
  9849  0F88  00BA               	movwf	(___fttol@sign1)
  9850                           	line	52
  9851                           	
  9852  0F89                     l11101:	
  9853  0F89  17B3               	bsf	(___fttol@f1)+(15/8),(15)&7
  9854                           	line	53
  9855                           	
  9856  0F8A                     l11103:	
  9857  0F8A  30FF               	movlw	0FFh
  9858  0F8B  05B2               	andwf	(___fttol@f1),f
  9859  0F8C  30FF               	movlw	0FFh
  9860  0F8D  05B3               	andwf	(___fttol@f1+1),f
  9861  0F8E  3000               	movlw	0
  9862  0F8F  05B4               	andwf	(___fttol@f1+2),f
  9863                           	line	54
  9864                           	
  9865  0F90                     l11105:	
  9866  0F90  0832               	movf	(___fttol@f1),w
  9867  0F91  00BB               	movwf	(___fttol@lval)
  9868  0F92  0833               	movf	(___fttol@f1+1),w
  9869  0F93  00BC               	movwf	((___fttol@lval))+1
  9870  0F94  0834               	movf	(___fttol@f1+2),w
  9871  0F95  00BD               	movwf	((___fttol@lval))+2
  9872  0F96  01BE               	clrf	((___fttol@lval))+3
  9873                           	line	55
  9874                           	
  9875  0F97                     l11107:	
  9876  0F97  308E               	movlw	low(08Eh)
  9877  0F98  02BF               	subwf	(___fttol@exp1),f
  9878                           	line	56
  9879                           	
  9880  0F99                     l11109:	
  9881  0F99  1FBF               	btfss	(___fttol@exp1),7
  9882  0F9A  2F9C               	goto	u5821
  9883  0F9B  2F9D               	goto	u5820
  9884  0F9C                     u5821:
  9885  0F9C  2FC2               	goto	l11119
  9886  0F9D                     u5820:
  9887                           	line	57
  9888                           	
  9889  0F9D                     l11111:	
  9890  0F9D  083F               	movf	(___fttol@exp1),w
  9891  0F9E  3A80               	xorlw	80h
  9892  0F9F  3E8F               	addlw	-((-15)^80h)
  9893  0FA0  1803               	skipnc
  9894  0FA1  2FA3               	goto	u5831
  9895  0FA2  2FA4               	goto	u5830
  9896  0FA3                     u5831:
  9897  0FA3  2FAF               	goto	l11117
  9898  0FA4                     u5830:
  9899                           	line	58
  9900                           	
  9901  0FA4                     l11113:	
  9902  0FA4  3000               	movlw	0
  9903  0FA5  00B5               	movwf	(?___fttol+3)
  9904  0FA6  3000               	movlw	0
  9905  0FA7  00B4               	movwf	(?___fttol+2)
  9906  0FA8  3000               	movlw	0
  9907  0FA9  00B3               	movwf	(?___fttol+1)
  9908  0FAA  3000               	movlw	0
  9909  0FAB  00B2               	movwf	(?___fttol)
  9910                           
  9911  0FAC  2FFF               	goto	l6843
  9912                           	
  9913  0FAD                     l11115:	
  9914  0FAD  2FFF               	goto	l6843
  9915                           	
  9916  0FAE                     l6845:	
  9917  0FAE  2FAF               	goto	l11117
  9918                           	line	59
  9919                           	
  9920  0FAF                     l6846:	
  9921                           	line	60
  9922                           	
  9923  0FAF                     l11117:	
  9924  0FAF  3001               	movlw	01h
  9925  0FB0                     u5845:
  9926  0FB0  1003               	clrc
  9927  0FB1  0CBE               	rrf	(___fttol@lval+3),f
  9928  0FB2  0CBD               	rrf	(___fttol@lval+2),f
  9929  0FB3  0CBC               	rrf	(___fttol@lval+1),f
  9930  0FB4  0CBB               	rrf	(___fttol@lval),f
  9931  0FB5  3EFF               	addlw	-1
  9932  0FB6  1D03               	skipz
  9933  0FB7  2FB0               	goto	u5845
  9934                           
  9935                           	line	61
  9936  0FB8  3001               	movlw	(01h)
  9937  0FB9  00B6               	movwf	(??___fttol+0)+0
  9938  0FBA  0836               	movf	(??___fttol+0)+0,w
  9939  0FBB  07BF               	addwf	(___fttol@exp1),f
  9940  0FBC  1D03               	btfss	status,2
  9941  0FBD  2FBF               	goto	u5851
  9942  0FBE  2FC0               	goto	u5850
  9943  0FBF                     u5851:
  9944  0FBF  2FAF               	goto	l11117
  9945  0FC0                     u5850:
  9946  0FC0  2FE6               	goto	l11129
  9947                           	
  9948  0FC1                     l6847:	
  9949                           	line	62
  9950  0FC1  2FE6               	goto	l11129
  9951                           	
  9952  0FC2                     l6844:	
  9953                           	line	63
  9954                           	
  9955  0FC2                     l11119:	
  9956  0FC2  3018               	movlw	(018h)
  9957  0FC3  023F               	subwf	(___fttol@exp1),w
  9958  0FC4  1C03               	skipc
  9959  0FC5  2FC7               	goto	u5861
  9960  0FC6  2FC8               	goto	u5860
  9961  0FC7                     u5861:
  9962  0FC7  2FDF               	goto	l11127
  9963  0FC8                     u5860:
  9964                           	line	64
  9965                           	
  9966  0FC8                     l11121:	
  9967  0FC8  3000               	movlw	0
  9968  0FC9  00B5               	movwf	(?___fttol+3)
  9969  0FCA  3000               	movlw	0
  9970  0FCB  00B4               	movwf	(?___fttol+2)
  9971  0FCC  3000               	movlw	0
  9972  0FCD  00B3               	movwf	(?___fttol+1)
  9973  0FCE  3000               	movlw	0
  9974  0FCF  00B2               	movwf	(?___fttol)
  9975                           
  9976  0FD0  2FFF               	goto	l6843
  9977                           	
  9978  0FD1                     l11123:	
  9979  0FD1  2FFF               	goto	l6843
  9980                           	
  9981  0FD2                     l6849:	
  9982                           	line	65
  9983  0FD2  2FDF               	goto	l11127
  9984                           	
  9985  0FD3                     l6851:	
  9986                           	line	66
  9987                           	
  9988  0FD3                     l11125:	
  9989  0FD3  3001               	movlw	01h
  9990  0FD4  00B6               	movwf	(??___fttol+0)+0
  9991  0FD5                     u5875:
  9992  0FD5  1003               	clrc
  9993  0FD6  0DBB               	rlf	(___fttol@lval),f
  9994  0FD7  0DBC               	rlf	(___fttol@lval+1),f
  9995  0FD8  0DBD               	rlf	(___fttol@lval+2),f
  9996  0FD9  0DBE               	rlf	(___fttol@lval+3),f
  9997  0FDA  0BB6               	decfsz	(??___fttol+0)+0
  9998  0FDB  2FD5               	goto	u5875
  9999                           	line	67
 10000  0FDC  3001               	movlw	low(01h)
 10001  0FDD  02BF               	subwf	(___fttol@exp1),f
 10002  0FDE  2FDF               	goto	l11127
 10003                           	line	68
 10004                           	
 10005  0FDF                     l6850:	
 10006                           	line	65
 10007                           	
 10008  0FDF                     l11127:	
 10009  0FDF  08BF               	movf	(___fttol@exp1),f
 10010  0FE0  1D03               	skipz
 10011  0FE1  2FE3               	goto	u5881
 10012  0FE2  2FE4               	goto	u5880
 10013  0FE3                     u5881:
 10014  0FE3  2FD3               	goto	l11125
 10015  0FE4                     u5880:
 10016  0FE4  2FE6               	goto	l11129
 10017                           	
 10018  0FE5                     l6852:	
 10019  0FE5  2FE6               	goto	l11129
 10020                           	line	69
 10021                           	
 10022  0FE6                     l6848:	
 10023                           	line	70
 10024                           	
 10025  0FE6                     l11129:	
 10026  0FE6  083A               	movf	(___fttol@sign1),w
 10027  0FE7  1D03               	skipz
 10028  0FE8  2FEA               	goto	u5890
 10029  0FE9  2FF6               	goto	l11133
 10030  0FEA                     u5890:
 10031                           	line	71
 10032                           	
 10033  0FEA                     l11131:	
 10034  0FEA  09BB               	comf	(___fttol@lval),f
 10035  0FEB  09BC               	comf	(___fttol@lval+1),f
 10036  0FEC  09BD               	comf	(___fttol@lval+2),f
 10037  0FED  09BE               	comf	(___fttol@lval+3),f
 10038  0FEE  0ABB               	incf	(___fttol@lval),f
 10039  0FEF  1903               	skipnz
 10040  0FF0  0ABC               	incf	(___fttol@lval+1),f
 10041  0FF1  1903               	skipnz
 10042  0FF2  0ABD               	incf	(___fttol@lval+2),f
 10043  0FF3  1903               	skipnz
 10044  0FF4  0ABE               	incf	(___fttol@lval+3),f
 10045  0FF5  2FF6               	goto	l11133
 10046                           	
 10047  0FF6                     l6853:	
 10048                           	line	72
 10049                           	
 10050  0FF6                     l11133:	
 10051  0FF6  083E               	movf	(___fttol@lval+3),w
 10052  0FF7  00B5               	movwf	(?___fttol+3)
 10053  0FF8  083D               	movf	(___fttol@lval+2),w
 10054  0FF9  00B4               	movwf	(?___fttol+2)
 10055  0FFA  083C               	movf	(___fttol@lval+1),w
 10056  0FFB  00B3               	movwf	(?___fttol+1)
 10057  0FFC  083B               	movf	(___fttol@lval),w
 10058  0FFD  00B2               	movwf	(?___fttol)
 10059                           
 10060  0FFE  2FFF               	goto	l6843
 10061                           	
 10062  0FFF                     l11135:	
 10063                           	line	73
 10064                           	
 10065  0FFF                     l6843:	
 10066  0FFF  0008               	return
 10067                           	opt stack 0
 10068                           GLOBAL	__end_of___fttol
 10069  1000                     	__end_of___fttol:
 10070 ;; =============== function ___fttol ends ============
 10071                           
 10072                           	signat	___fttol,4220
 10073                           	global	___ftpack
 10074                           psect	text1915,local,class=CODE,delta=2
 10075                           global __ptext1915
 10076  0DCA                     __ptext1915:
 10077                           
 10078 ;; *************** function ___ftpack *****************
 10079 ;; Defined at:
 10080 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  arg             3   10[BANK0 ] unsigned um
 10083 ;;  exp             1   13[BANK0 ] unsigned char 
 10084 ;;  sign            1   14[BANK0 ] unsigned char 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;		None
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  3   10[BANK0 ] float 
 10089 ;; Registers used:
 10090 ;;		wreg, status,2, status,0
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10096 ;;      Params:         0       5       0       0       0
 10097 ;;      Locals:         0       0       0       0       0
 10098 ;;      Temps:          0       3       0       0       0
 10099 ;;      Totals:         0       8       0       0       0
 10100 ;;Total ram usage:        8 bytes
 10101 ;; Hardware stack levels used:    1
 10102 ;; Hardware stack levels required when called:    2
 10103 ;; This function calls:
 10104 ;;		Nothing
 10105 ;; This function is called by:
 10106 ;;		___ftmul
 10107 ;;		___lbtoft
 10108 ;;		___ftadd
 10109 ;;		___ftdiv
 10110 ;;		___abtoft
 10111 ;;		___awtoft
 10112 ;;		___lwtoft
 10113 ;;		___altoft
 10114 ;;		___lltoft
 10115 ;;		___attoft
 10116 ;;		___lttoft
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           psect	text1915
 10120                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
 10121                           	line	63
 10122                           	global	__size_of___ftpack
 10123  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 10124                           	
 10125  0DCA                     ___ftpack:	
 10126                           	opt	stack 3
 10127                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10128                           	line	64
 10129                           	
 10130  0DCA                     l11019:	
 10131  0DCA  1283               	bcf	status, 5	;RP0=0, select bank0
 10132  0DCB  1303               	bcf	status, 6	;RP1=0, select bank0
 10133  0DCC  082D               	movf	(___ftpack@exp),w
 10134  0DCD  1D03               	skipz
 10135  0DCE  2DD0               	goto	u5610
 10136  0DCF  2DD8               	goto	l11023
 10137  0DD0                     u5610:
 10138                           	
 10139  0DD0                     l11021:	
 10140  0DD0  082C               	movf	(___ftpack@arg+2),w
 10141  0DD1  042B               	iorwf	(___ftpack@arg+1),w
 10142  0DD2  042A               	iorwf	(___ftpack@arg),w
 10143  0DD3  1D03               	skipz
 10144  0DD4  2DD6               	goto	u5621
 10145  0DD5  2DD7               	goto	u5620
 10146  0DD6                     u5621:
 10147  0DD6  2DEE               	goto	l11029
 10148  0DD7                     u5620:
 10149  0DD7  2DD8               	goto	l11023
 10150                           	
 10151  0DD8                     l7067:	
 10152                           	line	65
 10153                           	
 10154  0DD8                     l11023:	
 10155  0DD8  3000               	movlw	0x0
 10156  0DD9  00AA               	movwf	(?___ftpack)
 10157  0DDA  3000               	movlw	0x0
 10158  0DDB  00AB               	movwf	(?___ftpack+1)
 10159  0DDC  3000               	movlw	0x0
 10160  0DDD  00AC               	movwf	(?___ftpack+2)
 10161  0DDE  2E46               	goto	l7068
 10162                           	
 10163  0DDF                     l11025:	
 10164  0DDF  2E46               	goto	l7068
 10165                           	
 10166  0DE0                     l7065:	
 10167                           	line	66
 10168  0DE0  2DEE               	goto	l11029
 10169                           	
 10170  0DE1                     l7070:	
 10171                           	line	67
 10172                           	
 10173  0DE1                     l11027:	
 10174  0DE1  3001               	movlw	(01h)
 10175  0DE2  00AF               	movwf	(??___ftpack+0)+0
 10176  0DE3  082F               	movf	(??___ftpack+0)+0,w
 10177  0DE4  07AD               	addwf	(___ftpack@exp),f
 10178                           	line	68
 10179  0DE5  3001               	movlw	01h
 10180  0DE6                     u5635:
 10181  0DE6  1003               	clrc
 10182  0DE7  0CAC               	rrf	(___ftpack@arg+2),f
 10183  0DE8  0CAB               	rrf	(___ftpack@arg+1),f
 10184  0DE9  0CAA               	rrf	(___ftpack@arg),f
 10185  0DEA  3EFF               	addlw	-1
 10186  0DEB  1D03               	skipz
 10187  0DEC  2DE6               	goto	u5635
 10188                           
 10189  0DED  2DEE               	goto	l11029
 10190                           	line	69
 10191                           	
 10192  0DEE                     l7069:	
 10193                           	line	66
 10194                           	
 10195  0DEE                     l11029:	
 10196  0DEE  30FE               	movlw	low highword(0FE0000h)
 10197  0DEF  052C               	andwf	(___ftpack@arg+2),w
 10198  0DF0  1D03               	btfss	status,2
 10199  0DF1  2DF3               	goto	u5641
 10200  0DF2  2DF4               	goto	u5640
 10201  0DF3                     u5641:
 10202  0DF3  2DE1               	goto	l11027
 10203  0DF4                     u5640:
 10204  0DF4  2E0C               	goto	l7072
 10205                           	
 10206  0DF5                     l7071:	
 10207                           	line	70
 10208  0DF5  2E0C               	goto	l7072
 10209                           	
 10210  0DF6                     l7073:	
 10211                           	line	71
 10212                           	
 10213  0DF6                     l11031:	
 10214  0DF6  3001               	movlw	(01h)
 10215  0DF7  00AF               	movwf	(??___ftpack+0)+0
 10216  0DF8  082F               	movf	(??___ftpack+0)+0,w
 10217  0DF9  07AD               	addwf	(___ftpack@exp),f
 10218                           	line	72
 10219                           	
 10220  0DFA                     l11033:	
 10221  0DFA  3001               	movlw	01h
 10222  0DFB  07AA               	addwf	(___ftpack@arg),f
 10223  0DFC  3000               	movlw	0
 10224  0DFD  1803               	skipnc
 10225  0DFE  3001               movlw 1
 10226  0DFF  07AB               	addwf	(___ftpack@arg+1),f
 10227  0E00  3000               	movlw	0
 10228  0E01  1803               	skipnc
 10229  0E02  3001               movlw 1
 10230  0E03  07AC               	addwf	(___ftpack@arg+2),f
 10231                           	line	73
 10232                           	
 10233  0E04                     l11035:	
 10234  0E04  3001               	movlw	01h
 10235  0E05                     u5655:
 10236  0E05  1003               	clrc
 10237  0E06  0CAC               	rrf	(___ftpack@arg+2),f
 10238  0E07  0CAB               	rrf	(___ftpack@arg+1),f
 10239  0E08  0CAA               	rrf	(___ftpack@arg),f
 10240  0E09  3EFF               	addlw	-1
 10241  0E0A  1D03               	skipz
 10242  0E0B  2E05               	goto	u5655
 10243                           
 10244                           	line	74
 10245                           	
 10246  0E0C                     l7072:	
 10247                           	line	70
 10248  0E0C  30FF               	movlw	low highword(0FF0000h)
 10249  0E0D  052C               	andwf	(___ftpack@arg+2),w
 10250  0E0E  1D03               	btfss	status,2
 10251  0E0F  2E11               	goto	u5661
 10252  0E10  2E12               	goto	u5660
 10253  0E11                     u5661:
 10254  0E11  2DF6               	goto	l11031
 10255  0E12                     u5660:
 10256  0E12  2E1F               	goto	l11039
 10257                           	
 10258  0E13                     l7074:	
 10259                           	line	75
 10260  0E13  2E1F               	goto	l11039
 10261                           	
 10262  0E14                     l7076:	
 10263                           	line	76
 10264                           	
 10265  0E14                     l11037:	
 10266  0E14  3001               	movlw	low(01h)
 10267  0E15  02AD               	subwf	(___ftpack@exp),f
 10268                           	line	77
 10269  0E16  3001               	movlw	01h
 10270  0E17                     u5675:
 10271  0E17  1003               	clrc
 10272  0E18  0DAA               	rlf	(___ftpack@arg),f
 10273  0E19  0DAB               	rlf	(___ftpack@arg+1),f
 10274  0E1A  0DAC               	rlf	(___ftpack@arg+2),f
 10275  0E1B  3EFF               	addlw	-1
 10276  0E1C  1D03               	skipz
 10277  0E1D  2E17               	goto	u5675
 10278  0E1E  2E1F               	goto	l11039
 10279                           	line	78
 10280                           	
 10281  0E1F                     l7075:	
 10282                           	line	75
 10283                           	
 10284  0E1F                     l11039:	
 10285  0E1F  1FAB               	btfss	(___ftpack@arg+1),(15)&7
 10286  0E20  2E22               	goto	u5681
 10287  0E21  2E23               	goto	u5680
 10288  0E22                     u5681:
 10289  0E22  2E14               	goto	l11037
 10290  0E23                     u5680:
 10291                           	
 10292  0E23                     l7077:	
 10293                           	line	79
 10294  0E23  182D               	btfsc	(___ftpack@exp),(0)&7
 10295  0E24  2E26               	goto	u5691
 10296  0E25  2E27               	goto	u5690
 10297  0E26                     u5691:
 10298  0E26  2E2D               	goto	l7078
 10299  0E27                     u5690:
 10300                           	line	80
 10301                           	
 10302  0E27                     l11041:	
 10303  0E27  30FF               	movlw	0FFh
 10304  0E28  05AA               	andwf	(___ftpack@arg),f
 10305  0E29  307F               	movlw	07Fh
 10306  0E2A  05AB               	andwf	(___ftpack@arg+1),f
 10307  0E2B  30FF               	movlw	0FFh
 10308  0E2C  05AC               	andwf	(___ftpack@arg+2),f
 10309                           	
 10310  0E2D                     l7078:	
 10311                           	line	81
 10312  0E2D  1003               	clrc
 10313  0E2E  0CAD               	rrf	(___ftpack@exp),f
 10314                           
 10315                           	line	82
 10316                           	
 10317  0E2F                     l11043:	
 10318  0E2F  082D               	movf	(___ftpack@exp),w
 10319  0E30  00AF               	movwf	((??___ftpack+0)+0)
 10320  0E31  01B0               	clrf	((??___ftpack+0)+0+1)
 10321  0E32  01B1               	clrf	((??___ftpack+0)+0+2)
 10322  0E33  3010               	movlw	010h
 10323  0E34                     u5705:
 10324  0E34  1003               	clrc
 10325  0E35  0DAF               	rlf	(??___ftpack+0)+0,f
 10326  0E36  0DB0               	rlf	(??___ftpack+0)+1,f
 10327  0E37  0DB1               	rlf	(??___ftpack+0)+2,f
 10328  0E38                     u5700:
 10329  0E38  3EFF               	addlw	-1
 10330  0E39  1D03               	skipz
 10331  0E3A  2E34               	goto	u5705
 10332  0E3B  082F               	movf	0+(??___ftpack+0)+0,w
 10333  0E3C  04AA               	iorwf	(___ftpack@arg),f
 10334  0E3D  0830               	movf	1+(??___ftpack+0)+0,w
 10335  0E3E  04AB               	iorwf	(___ftpack@arg+1),f
 10336  0E3F  0831               	movf	2+(??___ftpack+0)+0,w
 10337  0E40  04AC               	iorwf	(___ftpack@arg+2),f
 10338                           	line	83
 10339                           	
 10340  0E41                     l11045:	
 10341  0E41  082E               	movf	(___ftpack@sign),w
 10342  0E42  1D03               	skipz
 10343  0E43  2E45               	goto	u5710
 10344  0E44  2E46               	goto	l7079
 10345  0E45                     u5710:
 10346                           	line	84
 10347                           	
 10348  0E45                     l11047:	
 10349  0E45  17AC               	bsf	(___ftpack@arg)+(23/8),(23)&7
 10350                           	
 10351  0E46                     l7079:	
 10352                           	line	85
 10353                           	line	86
 10354                           	
 10355  0E46                     l7068:	
 10356  0E46  0008               	return
 10357                           	opt stack 0
 10358                           GLOBAL	__end_of___ftpack
 10359  0E47                     	__end_of___ftpack:
 10360 ;; =============== function ___ftpack ends ============
 10361                           
 10362                           	signat	___ftpack,12411
 10363                           	global	___wmul
 10364                           psect	text1916,local,class=CODE,delta=2
 10365                           global __ptext1916
 10366  0894                     __ptext1916:
 10367                           
 10368 ;; *************** function ___wmul *****************
 10369 ;; Defined at:
 10370 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  multiplier      2   10[BANK0 ] unsigned int 
 10373 ;;  multiplicand    2   12[BANK0 ] unsigned int 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  product         2   14[BANK0 ] unsigned int 
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  2   10[BANK0 ] unsigned int 
 10378 ;; Registers used:
 10379 ;;		wreg, status,2, status,0
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10385 ;;      Params:         0       4       0       0       0
 10386 ;;      Locals:         0       2       0       0       0
 10387 ;;      Temps:          0       0       0       0       0
 10388 ;;      Totals:         0       6       0       0       0
 10389 ;;Total ram usage:        6 bytes
 10390 ;; Hardware stack levels used:    1
 10391 ;; Hardware stack levels required when called:    2
 10392 ;; This function calls:
 10393 ;;		Nothing
 10394 ;; This function is called by:
 10395 ;;		_convert
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           psect	text1916
 10399                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
 10400                           	line	3
 10401                           	global	__size_of___wmul
 10402  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10403                           	
 10404  0894                     ___wmul:	
 10405                           	opt	stack 2
 10406                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10407                           	line	4
 10408                           	
 10409  0894                     l10937:	
 10410  0894  1283               	bcf	status, 5	;RP0=0, select bank0
 10411  0895  1303               	bcf	status, 6	;RP1=0, select bank0
 10412  0896  01AE               	clrf	(___wmul@product)
 10413  0897  01AF               	clrf	(___wmul@product+1)
 10414  0898  2899               	goto	l10939
 10415                           	line	6
 10416                           	
 10417  0899                     l6733:	
 10418                           	line	7
 10419                           	
 10420  0899                     l10939:	
 10421  0899  1C2A               	btfss	(___wmul@multiplier),(0)&7
 10422  089A  289C               	goto	u5331
 10423  089B  289D               	goto	u5330
 10424  089C                     u5331:
 10425  089C  28A3               	goto	l6734
 10426  089D                     u5330:
 10427                           	line	8
 10428                           	
 10429  089D                     l10941:	
 10430  089D  082C               	movf	(___wmul@multiplicand),w
 10431  089E  07AE               	addwf	(___wmul@product),f
 10432  089F  1803               	skipnc
 10433  08A0  0AAF               	incf	(___wmul@product+1),f
 10434  08A1  082D               	movf	(___wmul@multiplicand+1),w
 10435  08A2  07AF               	addwf	(___wmul@product+1),f
 10436                           	
 10437  08A3                     l6734:	
 10438                           	line	9
 10439  08A3  3001               	movlw	01h
 10440                           	
 10441  08A4                     u5345:
 10442  08A4  1003               	clrc
 10443  08A5  0DAC               	rlf	(___wmul@multiplicand),f
 10444  08A6  0DAD               	rlf	(___wmul@multiplicand+1),f
 10445  08A7  3EFF               	addlw	-1
 10446  08A8  1D03               	skipz
 10447  08A9  28A4               	goto	u5345
 10448                           	line	10
 10449                           	
 10450  08AA                     l10943:	
 10451  08AA  3001               	movlw	01h
 10452                           	
 10453  08AB                     u5355:
 10454  08AB  1003               	clrc
 10455  08AC  0CAB               	rrf	(___wmul@multiplier+1),f
 10456  08AD  0CAA               	rrf	(___wmul@multiplier),f
 10457  08AE  3EFF               	addlw	-1
 10458  08AF  1D03               	skipz
 10459  08B0  28AB               	goto	u5355
 10460                           	line	11
 10461  08B1  082B               	movf	((___wmul@multiplier+1)),w
 10462  08B2  042A               	iorwf	((___wmul@multiplier)),w
 10463  08B3  1D03               	skipz
 10464  08B4  28B6               	goto	u5361
 10465  08B5  28B7               	goto	u5360
 10466  08B6                     u5361:
 10467  08B6  2899               	goto	l10939
 10468  08B7                     u5360:
 10469  08B7  28B8               	goto	l10945
 10470                           	
 10471  08B8                     l6735:	
 10472                           	line	12
 10473                           	
 10474  08B8                     l10945:	
 10475  08B8  082F               	movf	(___wmul@product+1),w
 10476  08B9  01AB               	clrf	(?___wmul+1)
 10477  08BA  07AB               	addwf	(?___wmul+1)
 10478  08BB  082E               	movf	(___wmul@product),w
 10479  08BC  01AA               	clrf	(?___wmul)
 10480  08BD  07AA               	addwf	(?___wmul)
 10481                           
 10482  08BE  28BF               	goto	l6736
 10483                           	
 10484  08BF                     l10947:	
 10485                           	line	13
 10486                           	
 10487  08BF                     l6736:	
 10488  08BF  0008               	return
 10489                           	opt stack 0
 10490                           GLOBAL	__end_of___wmul
 10491  08C0                     	__end_of___wmul:
 10492 ;; =============== function ___wmul ends ============
 10493                           
 10494                           	signat	___wmul,8314
 10495                           	global	_updateNode
 10496                           psect	text1917,local,class=CODE,delta=2
 10497                           global __ptext1917
 10498  0ABF                     __ptext1917:
 10499                           
 10500 ;; *************** function _updateNode *****************
 10501 ;; Defined at:
 10502 ;;		line 315 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;		None
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;		None               void
 10509 ;; Registers used:
 10510 ;;		wreg, status,2, status,0
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10516 ;;      Params:         0       0       0       0       0
 10517 ;;      Locals:         0       0       0       0       0
 10518 ;;      Temps:          0       1       0       0       0
 10519 ;;      Totals:         0       1       0       0       0
 10520 ;;Total ram usage:        1 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    2
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_main
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           psect	text1917
 10530                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 10531                           	line	315
 10532                           	global	__size_of_updateNode
 10533  0042                     	__size_of_updateNode	equ	__end_of_updateNode-_updateNode
 10534                           	
 10535  0ABF                     _updateNode:	
 10536                           	opt	stack 5
 10537                           ; Regs used in _updateNode: [wreg+status,2+status,0]
 10538                           	line	316
 10539                           	
 10540  0ABF                     l10887:	
 10541                           ;main.c: 316: if((xCoord == 2) && (yCoord == 2))
 10542  0ABF  1283               	bcf	status, 5	;RP0=0, select bank0
 10543  0AC0  1303               	bcf	status, 6	;RP1=0, select bank0
 10544  0AC1  0864               	movf	(_xCoord),w	;volatile
 10545  0AC2  3A02               	xorlw	02h
 10546  0AC3  1D03               	skipz
 10547  0AC4  2AC6               	goto	u5231
 10548  0AC5  2AC7               	goto	u5230
 10549  0AC6                     u5231:
 10550  0AC6  2AD3               	goto	l10893
 10551  0AC7                     u5230:
 10552                           	
 10553  0AC7                     l10889:	
 10554  0AC7  0865               	movf	(_yCoord),w	;volatile
 10555  0AC8  3A02               	xorlw	02h
 10556  0AC9  1D03               	skipz
 10557  0ACA  2ACC               	goto	u5241
 10558  0ACB  2ACD               	goto	u5240
 10559  0ACC                     u5241:
 10560  0ACC  2AD3               	goto	l10893
 10561  0ACD                     u5240:
 10562                           	line	317
 10563                           	
 10564  0ACD                     l10891:	
 10565                           ;main.c: 317: node = 1;
 10566  0ACD  1683               	bsf	status, 5	;RP0=1, select bank1
 10567  0ACE  1303               	bcf	status, 6	;RP1=0, select bank1
 10568  0ACF  01C5               	clrf	(_node)^080h	;volatile
 10569  0AD0  1403               	bsf	status,0
 10570  0AD1  0DC5               	rlf	(_node)^080h,f	;volatile
 10571  0AD2  2B00               	goto	l6015
 10572                           	line	318
 10573                           	
 10574  0AD3                     l6009:	
 10575                           	
 10576  0AD3                     l10893:	
 10577                           ;main.c: 318: else if((xCoord == 4) && (yCoord == 2))
 10578  0AD3  1283               	bcf	status, 5	;RP0=0, select bank0
 10579  0AD4  0864               	movf	(_xCoord),w	;volatile
 10580  0AD5  3A04               	xorlw	04h
 10581  0AD6  1D03               	skipz
 10582  0AD7  2AD9               	goto	u5251
 10583  0AD8  2ADA               	goto	u5250
 10584  0AD9                     u5251:
 10585  0AD9  2AE7               	goto	l10899
 10586  0ADA                     u5250:
 10587                           	
 10588  0ADA                     l10895:	
 10589  0ADA  0865               	movf	(_yCoord),w	;volatile
 10590  0ADB  3A02               	xorlw	02h
 10591  0ADC  1D03               	skipz
 10592  0ADD  2ADF               	goto	u5261
 10593  0ADE  2AE0               	goto	u5260
 10594  0ADF                     u5261:
 10595  0ADF  2AE7               	goto	l10899
 10596  0AE0                     u5260:
 10597                           	line	319
 10598                           	
 10599  0AE0                     l10897:	
 10600                           ;main.c: 319: node = 2;
 10601  0AE0  3002               	movlw	(02h)
 10602  0AE1  00AA               	movwf	(??_updateNode+0)+0
 10603  0AE2  082A               	movf	(??_updateNode+0)+0,w
 10604  0AE3  1683               	bsf	status, 5	;RP0=1, select bank1
 10605  0AE4  1303               	bcf	status, 6	;RP1=0, select bank1
 10606  0AE5  00C5               	movwf	(_node)^080h	;volatile
 10607  0AE6  2B00               	goto	l6015
 10608                           	line	320
 10609                           	
 10610  0AE7                     l6011:	
 10611                           	
 10612  0AE7                     l10899:	
 10613                           ;main.c: 320: else if((xCoord == 2) && (yCoord == 0))
 10614  0AE7  1283               	bcf	status, 5	;RP0=0, select bank0
 10615  0AE8  0864               	movf	(_xCoord),w	;volatile
 10616  0AE9  3A02               	xorlw	02h
 10617  0AEA  1D03               	skipz
 10618  0AEB  2AED               	goto	u5271
 10619  0AEC  2AEE               	goto	u5270
 10620  0AED                     u5271:
 10621  0AED  2AFA               	goto	l6013
 10622  0AEE                     u5270:
 10623                           	
 10624  0AEE                     l10901:	
 10625  0AEE  08E5               	movf	(_yCoord),f
 10626  0AEF  1D03               	skipz	;volatile
 10627  0AF0  2AF2               	goto	u5281
 10628  0AF1  2AF3               	goto	u5280
 10629  0AF2                     u5281:
 10630  0AF2  2AFA               	goto	l6013
 10631  0AF3                     u5280:
 10632                           	line	321
 10633                           	
 10634  0AF3                     l10903:	
 10635                           ;main.c: 321: node = 3;
 10636  0AF3  3003               	movlw	(03h)
 10637  0AF4  00AA               	movwf	(??_updateNode+0)+0
 10638  0AF5  082A               	movf	(??_updateNode+0)+0,w
 10639  0AF6  1683               	bsf	status, 5	;RP0=1, select bank1
 10640  0AF7  1303               	bcf	status, 6	;RP1=0, select bank1
 10641  0AF8  00C5               	movwf	(_node)^080h	;volatile
 10642  0AF9  2B00               	goto	l6015
 10643                           	line	322
 10644                           	
 10645  0AFA                     l6013:	
 10646                           	line	323
 10647                           ;main.c: 322: else
 10648                           ;main.c: 323: node = 0;
 10649  0AFA  1683               	bsf	status, 5	;RP0=1, select bank1
 10650  0AFB  1303               	bcf	status, 6	;RP1=0, select bank1
 10651  0AFC  01C5               	clrf	(_node)^080h	;volatile
 10652  0AFD  2B00               	goto	l6015
 10653                           	
 10654  0AFE                     l6014:	
 10655  0AFE  2B00               	goto	l6015
 10656                           	
 10657  0AFF                     l6012:	
 10658  0AFF  2B00               	goto	l6015
 10659                           	
 10660  0B00                     l6010:	
 10661                           	line	324
 10662                           	
 10663  0B00                     l6015:	
 10664  0B00  0008               	return
 10665                           	opt stack 0
 10666                           GLOBAL	__end_of_updateNode
 10667  0B01                     	__end_of_updateNode:
 10668 ;; =============== function _updateNode ends ============
 10669                           
 10670                           	signat	_updateNode,88
 10671                           	global	_getSuccessfulDrive
 10672                           psect	text1918,local,class=CODE,delta=2
 10673                           global __ptext1918
 10674  15D7                     __ptext1918:
 10675                           
 10676 ;; *************** function _getSuccessfulDrive *****************
 10677 ;; Defined at:
 10678 ;;		line 146 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;		None
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;		None               void
 10685 ;; Registers used:
 10686 ;;		status,2, status,0
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10692 ;;      Params:         0       0       0       0       0
 10693 ;;      Locals:         0       0       0       0       0
 10694 ;;      Temps:          0       0       0       0       0
 10695 ;;      Totals:         0       0       0       0       0
 10696 ;;Total ram usage:        0 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    2
 10699 ;; This function calls:
 10700 ;;		Nothing
 10701 ;; This function is called by:
 10702 ;;		_main
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           psect	text1918
 10706                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 10707                           	line	146
 10708                           	global	__size_of_getSuccessfulDrive
 10709  000A                     	__size_of_getSuccessfulDrive	equ	__end_of_getSuccessfulDrive-_getSuccessfulDrive
 10710                           	
 10711  15D7                     _getSuccessfulDrive:	
 10712                           	opt	stack 5
 10713                           ; Regs used in _getSuccessfulDrive: [status]
 10714                           	line	147
 10715                           	
 10716  15D7                     l10863:	
 10717                           ;drive.c: 147: return successfulDrive;
 10718  15D7  1971               	btfsc	(_successfulDrive/8),(_successfulDrive)&7
 10719  15D8  2DDA               	goto	u5191
 10720  15D9  2DDB               	goto	u5190
 10721  15DA                     u5191:
 10722  15DA  2DDD               	goto	l10867
 10723  15DB                     u5190:
 10724                           	
 10725  15DB                     l10865:	
 10726  15DB  1003               	clrc
 10727                           	
 10728  15DC  2DE0               	goto	l5111
 10729                           	
 10730  15DD                     l10701:	
 10731                           	
 10732  15DD                     l10867:	
 10733  15DD  1403               	setc
 10734                           	
 10735  15DE  2DE0               	goto	l5111
 10736                           	
 10737  15DF                     l10703:	
 10738  15DF  2DE0               	goto	l5111
 10739                           	
 10740  15E0                     l10869:	
 10741                           	line	148
 10742                           	
 10743  15E0                     l5111:	
 10744  15E0  0008               	return
 10745                           	opt stack 0
 10746                           GLOBAL	__end_of_getSuccessfulDrive
 10747  15E1                     	__end_of_getSuccessfulDrive:
 10748 ;; =============== function _getSuccessfulDrive ends ============
 10749                           
 10750                           	signat	_getSuccessfulDrive,88
 10751                           	global	_getSomethingInTheWay
 10752                           psect	text1919,local,class=CODE,delta=2
 10753                           global __ptext1919
 10754  15CA                     __ptext1919:
 10755                           
 10756 ;; *************** function _getSomethingInTheWay *****************
 10757 ;; Defined at:
 10758 ;;		line 140 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      enum E1111
 10765 ;; Registers used:
 10766 ;;		wreg
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10772 ;;      Params:         0       0       0       0       0
 10773 ;;      Locals:         0       0       0       0       0
 10774 ;;      Temps:          0       0       0       0       0
 10775 ;;      Totals:         0       0       0       0       0
 10776 ;;Total ram usage:        0 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:    2
 10779 ;; This function calls:
 10780 ;;		Nothing
 10781 ;; This function is called by:
 10782 ;;		_goToNextCell
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           psect	text1919
 10786                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 10787                           	line	140
 10788                           	global	__size_of_getSomethingInTheWay
 10789  0005                     	__size_of_getSomethingInTheWay	equ	__end_of_getSomethingInTheWay-_getSomethingInTheWay
 10790                           	
 10791  15CA                     _getSomethingInTheWay:	
 10792                           	opt	stack 4
 10793                           ; Regs used in _getSomethingInTheWay: [wreg]
 10794                           	line	141
 10795                           	
 10796  15CA                     l10859:	
 10797                           ;drive.c: 141: return somethingInTheWay;
 10798  15CA  1283               	bcf	status, 5	;RP0=0, select bank0
 10799  15CB  1303               	bcf	status, 6	;RP1=0, select bank0
 10800  15CC  0863               	movf	(_somethingInTheWay),w	;volatile
 10801  15CD  2DCE               	goto	l5108
 10802                           	
 10803  15CE                     l10861:	
 10804                           	line	142
 10805                           	
 10806  15CE                     l5108:	
 10807  15CE  0008               	return
 10808                           	opt stack 0
 10809                           GLOBAL	__end_of_getSomethingInTheWay
 10810  15CF                     	__end_of_getSomethingInTheWay:
 10811 ;; =============== function _getSomethingInTheWay ends ============
 10812                           
 10813                           	signat	_getSomethingInTheWay,89
 10814                           	global	_getOrientation
 10815                           psect	text1920,local,class=CODE,delta=2
 10816                           global __ptext1920
 10817  15C5                     __ptext1920:
 10818                           
 10819 ;; *************** function _getOrientation *****************
 10820 ;; Defined at:
 10821 ;;		line 135 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  1    wreg      enum E1117
 10828 ;; Registers used:
 10829 ;;		wreg
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10835 ;;      Params:         0       0       0       0       0
 10836 ;;      Locals:         0       0       0       0       0
 10837 ;;      Temps:          0       0       0       0       0
 10838 ;;      Totals:         0       0       0       0       0
 10839 ;;Total ram usage:        0 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:    2
 10842 ;; This function calls:
 10843 ;;		Nothing
 10844 ;; This function is called by:
 10845 ;;		_updateLocation
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           psect	text1920
 10849                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 10850                           	line	135
 10851                           	global	__size_of_getOrientation
 10852  0005                     	__size_of_getOrientation	equ	__end_of_getOrientation-_getOrientation
 10853                           	
 10854  15C5                     _getOrientation:	
 10855                           	opt	stack 4
 10856                           ; Regs used in _getOrientation: [wreg]
 10857                           	line	136
 10858                           	
 10859  15C5                     l10855:	
 10860                           ;drive.c: 136: return currentOrientation;
 10861  15C5  1283               	bcf	status, 5	;RP0=0, select bank0
 10862  15C6  1303               	bcf	status, 6	;RP1=0, select bank0
 10863  15C7  085D               	movf	(_currentOrientation),w	;volatile
 10864  15C8  2DC9               	goto	l5105
 10865                           	
 10866  15C9                     l10857:	
 10867                           	line	137
 10868                           	
 10869  15C9                     l5105:	
 10870  15C9  0008               	return
 10871                           	opt stack 0
 10872                           GLOBAL	__end_of_getOrientation
 10873  15CA                     	__end_of_getOrientation:
 10874 ;; =============== function _getOrientation ends ============
 10875                           
 10876                           	signat	_getOrientation,89
 10877                           	global	_getCurrentY
 10878                           psect	text1921,local,class=CODE,delta=2
 10879                           global __ptext1921
 10880  15C0                     __ptext1921:
 10881                           
 10882 ;; *************** function _getCurrentY *****************
 10883 ;; Defined at:
 10884 ;;		line 409 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;		None
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      unsigned char 
 10891 ;; Registers used:
 10892 ;;		wreg
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10898 ;;      Params:         0       0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    2
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_driveForDistance
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           psect	text1921
 10912                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 10913                           	line	409
 10914                           	global	__size_of_getCurrentY
 10915  0005                     	__size_of_getCurrentY	equ	__end_of_getCurrentY-_getCurrentY
 10916                           	
 10917  15C0                     _getCurrentY:	
 10918                           	opt	stack 2
 10919                           ; Regs used in _getCurrentY: [wreg]
 10920                           	line	410
 10921                           	
 10922  15C0                     l10851:	
 10923                           ;main.c: 410: return yCoord;
 10924  15C0  1283               	bcf	status, 5	;RP0=0, select bank0
 10925  15C1  1303               	bcf	status, 6	;RP1=0, select bank0
 10926  15C2  0865               	movf	(_yCoord),w	;volatile
 10927  15C3  2DC4               	goto	l6041
 10928                           	
 10929  15C4                     l10853:	
 10930                           	line	411
 10931                           	
 10932  15C4                     l6041:	
 10933  15C4  0008               	return
 10934                           	opt stack 0
 10935                           GLOBAL	__end_of_getCurrentY
 10936  15C5                     	__end_of_getCurrentY:
 10937 ;; =============== function _getCurrentY ends ============
 10938                           
 10939                           	signat	_getCurrentY,89
 10940                           	global	_getCurrentX
 10941                           psect	text1922,local,class=CODE,delta=2
 10942                           global __ptext1922
 10943  15BB                     __ptext1922:
 10944                           
 10945 ;; *************** function _getCurrentX *****************
 10946 ;; Defined at:
 10947 ;;		line 404 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;		None
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1    wreg      unsigned char 
 10954 ;; Registers used:
 10955 ;;		wreg
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10961 ;;      Params:         0       0       0       0       0
 10962 ;;      Locals:         0       0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0
 10964 ;;      Totals:         0       0       0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:    2
 10968 ;; This function calls:
 10969 ;;		Nothing
 10970 ;; This function is called by:
 10971 ;;		_driveForDistance
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           psect	text1922
 10975                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 10976                           	line	404
 10977                           	global	__size_of_getCurrentX
 10978  0005                     	__size_of_getCurrentX	equ	__end_of_getCurrentX-_getCurrentX
 10979                           	
 10980  15BB                     _getCurrentX:	
 10981                           	opt	stack 2
 10982                           ; Regs used in _getCurrentX: [wreg]
 10983                           	line	405
 10984                           	
 10985  15BB                     l10847:	
 10986                           ;main.c: 405: return xCoord;
 10987  15BB  1283               	bcf	status, 5	;RP0=0, select bank0
 10988  15BC  1303               	bcf	status, 6	;RP1=0, select bank0
 10989  15BD  0864               	movf	(_xCoord),w	;volatile
 10990  15BE  2DBF               	goto	l6038
 10991                           	
 10992  15BF                     l10849:	
 10993                           	line	406
 10994                           	
 10995  15BF                     l6038:	
 10996  15BF  0008               	return
 10997                           	opt stack 0
 10998                           GLOBAL	__end_of_getCurrentX
 10999  15C0                     	__end_of_getCurrentX:
 11000 ;; =============== function _getCurrentX ends ============
 11001                           
 11002                           	signat	_getCurrentX,89
 11003                           	global	_updateOrientation
 11004                           psect	text1923,local,class=CODE,delta=2
 11005                           global __ptext1923
 11006  15F7                     __ptext1923:
 11007                           
 11008 ;; *************** function _updateOrientation *****************
 11009 ;; Defined at:
 11010 ;;		line 233 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  moved           1    wreg     enum E1111
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;  moved           1   11[BANK0 ] enum E1111
 11015 ;; Return value:  Size  Location     Type
 11016 ;;		None               void
 11017 ;; Registers used:
 11018 ;;		wreg, status,2, status,0
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11024 ;;      Params:         0       0       0       0       0
 11025 ;;      Locals:         0       1       0       0       0
 11026 ;;      Temps:          0       1       0       0       0
 11027 ;;      Totals:         0       2       0       0       0
 11028 ;;Total ram usage:        2 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; Hardware stack levels required when called:    2
 11031 ;; This function calls:
 11032 ;;		Nothing
 11033 ;; This function is called by:
 11034 ;;		_driveForDistance
 11035 ;;		_goBackward
 11036 ;;		_goLeft
 11037 ;;		_goRight
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           psect	text1923
 11041                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\drive.c"
 11042                           	line	233
 11043                           	global	__size_of_updateOrientation
 11044  0011                     	__size_of_updateOrientation	equ	__end_of_updateOrientation-_updateOrientation
 11045                           	
 11046  15F7                     _updateOrientation:	
 11047                           	opt	stack 2
 11048                           ; Regs used in _updateOrientation: [wreg+status,2+status,0]
 11049                           ;updateOrientation@moved stored from wreg
 11050  15F7  1283               	bcf	status, 5	;RP0=0, select bank0
 11051  15F8  1303               	bcf	status, 6	;RP1=0, select bank0
 11052  15F9  00AB               	movwf	(updateOrientation@moved)
 11053                           	line	234
 11054                           	
 11055  15FA                     l10841:	
 11056                           ;drive.c: 234: currentOrientation += moved;
 11057  15FA  082B               	movf	(updateOrientation@moved),w	;volatile
 11058  15FB  00AA               	movwf	(??_updateOrientation+0)+0
 11059  15FC  082A               	movf	(??_updateOrientation+0)+0,w
 11060  15FD  07DD               	addwf	(_currentOrientation),f	;volatile
 11061                           	line	235
 11062                           	
 11063  15FE                     l10843:	
 11064                           ;drive.c: 235: if(currentOrientation >= 4)
 11065  15FE  3004               	movlw	(04h)
 11066  15FF  025D               	subwf	(_currentOrientation),w	;volatile
 11067  1600  1C03               	skipc
 11068  1601  2E03               	goto	u5181
 11069  1602  2E04               	goto	u5180
 11070  1603                     u5181:
 11071  1603  2E07               	goto	l5142
 11072  1604                     u5180:
 11073                           	line	236
 11074                           	
 11075  1604                     l10845:	
 11076                           ;drive.c: 236: currentOrientation -= 4;
 11077  1604  3004               	movlw	low(04h)
 11078  1605  02DD               	subwf	(_currentOrientation),f	;volatile
 11079  1606  2E07               	goto	l5142
 11080                           	
 11081  1607                     l5141:	
 11082                           	line	237
 11083                           	
 11084  1607                     l5142:	
 11085  1607  0008               	return
 11086                           	opt stack 0
 11087                           GLOBAL	__end_of_updateOrientation
 11088  1608                     	__end_of_updateOrientation:
 11089 ;; =============== function _updateOrientation ends ============
 11090                           
 11091                           	signat	_updateOrientation,4216
 11092                           	global	_ser_init
 11093                           psect	text1924,local,class=CODE,delta=2
 11094                           global __ptext1924
 11095  17D8                     __ptext1924:
 11096                           
 11097 ;; *************** function _ser_init *****************
 11098 ;; Defined at:
 11099 ;;		line 124 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
 11100 ;; Parameters:    Size  Location     Type
 11101 ;;		None
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;		None
 11104 ;; Return value:  Size  Location     Type
 11105 ;;		None               void
 11106 ;; Registers used:
 11107 ;;		wreg, status,2, status,0
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11113 ;;      Params:         0       0       0       0       0
 11114 ;;      Locals:         0       0       0       0       0
 11115 ;;      Temps:          0       1       0       0       0
 11116 ;;      Totals:         0       1       0       0       0
 11117 ;;Total ram usage:        1 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    2
 11120 ;; This function calls:
 11121 ;;		Nothing
 11122 ;; This function is called by:
 11123 ;;		_init
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           psect	text1924
 11127                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
 11128                           	line	124
 11129                           	global	__size_of_ser_init
 11130  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 11131                           	
 11132  17D8                     _ser_init:	
 11133                           	opt	stack 4
 11134                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 11135                           	line	125
 11136                           	
 11137  17D8                     l10815:	
 11138                           ;ser.c: 125: TRISC |= 0b10000000;
 11139  17D8  1683               	bsf	status, 5	;RP0=1, select bank1
 11140  17D9  1303               	bcf	status, 6	;RP1=0, select bank1
 11141  17DA  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 11142                           	line	126
 11143                           	
 11144  17DB                     l10817:	
 11145                           ;ser.c: 126: TRISC &= 0b10111111;
 11146  17DB  30BF               	movlw	(0BFh)
 11147  17DC  1283               	bcf	status, 5	;RP0=0, select bank0
 11148  17DD  1303               	bcf	status, 6	;RP1=0, select bank0
 11149  17DE  00AA               	movwf	(??_ser_init+0)+0
 11150  17DF  082A               	movf	(??_ser_init+0)+0,w
 11151  17E0  1683               	bsf	status, 5	;RP0=1, select bank1
 11152  17E1  1303               	bcf	status, 6	;RP1=0, select bank1
 11153  17E2  0587               	andwf	(135)^080h,f	;volatile
 11154                           	line	127
 11155                           	
 11156  17E3                     l10819:	
 11157                           ;ser.c: 127: BRGH=1;
 11158  17E3  1518               	bsf	(1218/8)^080h,(1218)&7
 11159                           	line	129
 11160                           	
 11161  17E4                     l10821:	
 11162                           ;ser.c: 129: SPBRG=20;
 11163  17E4  3014               	movlw	(014h)
 11164  17E5  0099               	movwf	(153)^080h	;volatile
 11165                           	line	132
 11166                           	
 11167  17E6                     l10823:	
 11168                           ;ser.c: 132: TX9=0;
 11169  17E6  1318               	bcf	(1222/8)^080h,(1222)&7
 11170                           	line	133
 11171                           	
 11172  17E7                     l10825:	
 11173                           ;ser.c: 133: RX9=0;
 11174  17E7  1283               	bcf	status, 5	;RP0=0, select bank0
 11175  17E8  1303               	bcf	status, 6	;RP1=0, select bank0
 11176  17E9  1318               	bcf	(198/8),(198)&7
 11177                           	line	135
 11178                           	
 11179  17EA                     l10827:	
 11180                           ;ser.c: 135: SYNC=0;
 11181  17EA  1683               	bsf	status, 5	;RP0=1, select bank1
 11182  17EB  1303               	bcf	status, 6	;RP1=0, select bank1
 11183  17EC  1218               	bcf	(1220/8)^080h,(1220)&7
 11184                           	line	136
 11185                           	
 11186  17ED                     l10829:	
 11187                           ;ser.c: 136: SPEN=1;
 11188  17ED  1283               	bcf	status, 5	;RP0=0, select bank0
 11189  17EE  1303               	bcf	status, 6	;RP1=0, select bank0
 11190  17EF  1798               	bsf	(199/8),(199)&7
 11191                           	line	137
 11192                           	
 11193  17F0                     l10831:	
 11194                           ;ser.c: 137: CREN=1;
 11195  17F0  1618               	bsf	(196/8),(196)&7
 11196                           	line	138
 11197                           	
 11198  17F1                     l10833:	
 11199                           ;ser.c: 138: TXIE=0;
 11200  17F1  1683               	bsf	status, 5	;RP0=1, select bank1
 11201  17F2  1303               	bcf	status, 6	;RP1=0, select bank1
 11202  17F3  120C               	bcf	(1124/8)^080h,(1124)&7
 11203                           	line	139
 11204                           	
 11205  17F4                     l10835:	
 11206                           ;ser.c: 139: RCIE=1;
 11207  17F4  168C               	bsf	(1125/8)^080h,(1125)&7
 11208                           	line	140
 11209                           	
 11210  17F5                     l10837:	
 11211                           ;ser.c: 140: TXEN=1;
 11212  17F5  1698               	bsf	(1221/8)^080h,(1221)&7
 11213                           	line	143
 11214                           	
 11215  17F6                     l10839:	
 11216                           ;ser.c: 143: rxiptr=rxoptr=txiptr=txoptr=0;
 11217  17F6  3000               	movlw	(0)
 11218  17F7  00FB               	movwf	(_txoptr)	;volatile
 11219  17F8  00FA               	movwf	(_txiptr)	;volatile
 11220  17F9  00F9               	movwf	(_rxoptr)	;volatile
 11221  17FA  1283               	bcf	status, 5	;RP0=0, select bank0
 11222  17FB  1303               	bcf	status, 6	;RP1=0, select bank0
 11223  17FC  00AA               	movwf	(??_ser_init+0)+0
 11224  17FD  082A               	movf	(??_ser_init+0)+0,w
 11225  17FE  00F8               	movwf	(_rxiptr)	;volatile
 11226                           	line	144
 11227                           	
 11228  17FF                     l2940:	
 11229  17FF  0008               	return
 11230                           	opt stack 0
 11231                           GLOBAL	__end_of_ser_init
 11232  1800                     	__end_of_ser_init:
 11233 ;; =============== function _ser_init ends ============
 11234                           
 11235                           	signat	_ser_init,88
 11236                           	global	_ser_putch
 11237                           psect	text1925,local,class=CODE,delta=2
 11238                           global __ptext1925
 11239  16DF                     __ptext1925:
 11240                           
 11241 ;; *************** function _ser_putch *****************
 11242 ;; Defined at:
 11243 ;;		line 81 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  c               1    wreg     unsigned char 
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;  c               1   11[BANK0 ] unsigned char 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;		None               void
 11250 ;; Registers used:
 11251 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11257 ;;      Params:         0       0       0       0       0
 11258 ;;      Locals:         0       1       0       0       0
 11259 ;;      Temps:          0       1       0       0       0
 11260 ;;      Totals:         0       2       0       0       0
 11261 ;;Total ram usage:        2 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    2
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_ser_putArr
 11268 ;;		_play_iCreate_song
 11269 ;;		_drive
 11270 ;;		_driveForDistance
 11271 ;;		_waitFor
 11272 ;;		_initIRobot
 11273 ;;		_lookForVictim
 11274 ;;		_ser_puts
 11275 ;;		_ser_puts2
 11276 ;;		_ser_puthex
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           psect	text1925
 11280                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
 11281                           	line	81
 11282                           	global	__size_of_ser_putch
 11283  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 11284                           	
 11285  16DF                     _ser_putch:	
 11286                           	opt	stack 3
 11287                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 11288                           ;ser_putch@c stored from wreg
 11289  16DF  1283               	bcf	status, 5	;RP0=0, select bank0
 11290  16E0  1303               	bcf	status, 6	;RP1=0, select bank0
 11291  16E1  00AB               	movwf	(ser_putch@c)
 11292                           	line	82
 11293                           	
 11294  16E2                     l10771:	
 11295                           ;ser.c: 82: while (((txiptr+1) & (16-1))==txoptr)
 11296  16E2  2EE4               	goto	l10773
 11297                           	
 11298  16E3                     l2916:	
 11299                           	line	83
 11300                           ;ser.c: 83: continue;
 11301  16E3  2EE4               	goto	l10773
 11302                           	
 11303  16E4                     l2915:	
 11304                           	line	82
 11305                           	
 11306  16E4                     l10773:	
 11307  16E4  087A               	movf	(_txiptr),w	;volatile
 11308  16E5  3E01               	addlw	01h
 11309  16E6  390F               	andlw	0Fh
 11310  16E7  067B               	xorwf	(_txoptr),w	;volatile
 11311  16E8  1903               	skipnz
 11312  16E9  2EEB               	goto	u5121
 11313  16EA  2EEC               	goto	u5120
 11314  16EB                     u5121:
 11315  16EB  2EE4               	goto	l10773
 11316  16EC                     u5120:
 11317                           	
 11318  16EC                     l2917:	
 11319                           	line	84
 11320                           ;ser.c: 84: GIE=0;
 11321  16EC  138B               	bcf	(95/8),(95)&7
 11322                           	line	85
 11323                           	
 11324  16ED                     l10775:	
 11325                           ;ser.c: 85: txfifo[txiptr] = c;
 11326  16ED  082B               	movf	(ser_putch@c),w
 11327  16EE  00AA               	movwf	(??_ser_putch+0)+0
 11328  16EF  087A               	movf	(_txiptr),w
 11329  16F0  3EB0               	addlw	_txfifo&0ffh
 11330  16F1  0084               	movwf	fsr0
 11331  16F2  082A               	movf	(??_ser_putch+0)+0,w
 11332  16F3  1383               	bcf	status, 7	;select IRP bank1
 11333  16F4  0080               	movwf	indf
 11334                           	line	86
 11335                           	
 11336  16F5                     l10777:	
 11337                           ;ser.c: 86: txiptr=(txiptr+1) & (16-1);
 11338  16F5  087A               	movf	(_txiptr),w	;volatile
 11339  16F6  3E01               	addlw	01h
 11340  16F7  390F               	andlw	0Fh
 11341  16F8  00AA               	movwf	(??_ser_putch+0)+0
 11342  16F9  082A               	movf	(??_ser_putch+0)+0,w
 11343  16FA  00FA               	movwf	(_txiptr)	;volatile
 11344                           	line	87
 11345                           	
 11346  16FB                     l10779:	
 11347                           ;ser.c: 87: TXIE=1;
 11348  16FB  1683               	bsf	status, 5	;RP0=1, select bank1
 11349  16FC  1303               	bcf	status, 6	;RP1=0, select bank1
 11350  16FD  160C               	bsf	(1124/8)^080h,(1124)&7
 11351                           	line	88
 11352                           	
 11353  16FE                     l10781:	
 11354                           ;ser.c: 88: GIE=1;
 11355  16FE  178B               	bsf	(95/8),(95)&7
 11356                           	line	89
 11357                           	
 11358  16FF                     l2918:	
 11359  16FF  0008               	return
 11360                           	opt stack 0
 11361                           GLOBAL	__end_of_ser_putch
 11362  1700                     	__end_of_ser_putch:
 11363 ;; =============== function _ser_putch ends ============
 11364                           
 11365                           	signat	_ser_putch,4216
 11366                           	global	_ser_isrx
 11367                           psect	text1926,local,class=CODE,delta=2
 11368                           global __ptext1926
 11369  0800                     __ptext1926:
 11370                           
 11371 ;; *************** function _ser_isrx *****************
 11372 ;; Defined at:
 11373 ;;		line 48 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;		None               void
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11387 ;;      Params:         0       0       0       0       0
 11388 ;;      Locals:         0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0
 11390 ;;      Totals:         0       0       0       0       0
 11391 ;;Total ram usage:        0 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    2
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_ser_getch
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           psect	text1926
 11401                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\ser.c"
 11402                           	line	48
 11403                           	global	__size_of_ser_isrx
 11404  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 11405                           	
 11406  0800                     _ser_isrx:	
 11407                           	opt	stack 1
 11408                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 11409                           	line	49
 11410                           	
 11411  0800                     l10755:	
 11412                           ;ser.c: 49: if(OERR) {
 11413  0800  1283               	bcf	status, 5	;RP0=0, select bank0
 11414  0801  1303               	bcf	status, 6	;RP1=0, select bank0
 11415  0802  1C98               	btfss	(193/8),(193)&7
 11416  0803  2805               	goto	u5101
 11417  0804  2806               	goto	u5100
 11418  0805                     u5101:
 11419  0805  280B               	goto	l10763
 11420  0806                     u5100:
 11421                           	line	50
 11422                           	
 11423  0806                     l10757:	
 11424                           ;ser.c: 50: CREN = 0;
 11425  0806  1218               	bcf	(196/8),(196)&7
 11426                           	line	51
 11427                           ;ser.c: 51: CREN = 1;
 11428  0807  1618               	bsf	(196/8),(196)&7
 11429                           	line	52
 11430                           	
 11431  0808                     l10759:	
 11432                           ;ser.c: 52: return 0;
 11433  0808  1003               	clrc
 11434                           	
 11435  0809  2816               	goto	l2900
 11436                           	
 11437  080A                     l10761:	
 11438  080A  2816               	goto	l2900
 11439                           	line	53
 11440                           	
 11441  080B                     l2899:	
 11442                           	line	54
 11443                           	
 11444  080B                     l10763:	
 11445                           ;ser.c: 53: }
 11446                           ;ser.c: 54: return (rxiptr!=rxoptr);
 11447  080B  0878               	movf	(_rxiptr),w	;volatile
 11448  080C  0679               	xorwf	(_rxoptr),w	;volatile
 11449  080D  1D03               	skipz
 11450  080E  2810               	goto	u5111
 11451  080F  2811               	goto	u5110
 11452  0810                     u5111:
 11453  0810  2813               	goto	l10767
 11454  0811                     u5110:
 11455                           	
 11456  0811                     l10765:	
 11457  0811  1003               	clrc
 11458                           	
 11459  0812  2816               	goto	l2900
 11460                           	
 11461  0813                     l10691:	
 11462                           	
 11463  0813                     l10767:	
 11464  0813  1403               	setc
 11465                           	
 11466  0814  2816               	goto	l2900
 11467                           	
 11468  0815                     l10693:	
 11469  0815  2816               	goto	l2900
 11470                           	
 11471  0816                     l10769:	
 11472                           	line	55
 11473                           	
 11474  0816                     l2900:	
 11475  0816  0008               	return
 11476                           	opt stack 0
 11477                           GLOBAL	__end_of_ser_isrx
 11478  0817                     	__end_of_ser_isrx:
 11479 ;; =============== function _ser_isrx ends ============
 11480                           
 11481                           	signat	_ser_isrx,88
 11482                           	global	_getFinalY
 11483                           psect	text1927,local,class=CODE,delta=2
 11484                           global __ptext1927
 11485  15B6                     __ptext1927:
 11486                           
 11487 ;; *************** function _getFinalY *****************
 11488 ;; Defined at:
 11489 ;;		line 152 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\map.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;		None
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      unsigned char 
 11496 ;; Registers used:
 11497 ;;		wreg
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11503 ;;      Params:         0       0       0       0       0
 11504 ;;      Locals:         0       0       0       0       0
 11505 ;;      Temps:          0       0       0       0       0
 11506 ;;      Totals:         0       0       0       0       0
 11507 ;;Total ram usage:        0 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:    2
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_checkForFinalDestination
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           psect	text1927
 11517                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\map.c"
 11518                           	line	152
 11519                           	global	__size_of_getFinalY
 11520  0005                     	__size_of_getFinalY	equ	__end_of_getFinalY-_getFinalY
 11521                           	
 11522  15B6                     _getFinalY:	
 11523                           	opt	stack 4
 11524                           ; Regs used in _getFinalY: [wreg]
 11525                           	line	153
 11526                           	
 11527  15B6                     l10751:	
 11528                           ;map.c: 153: return finalY;
 11529  15B6  1283               	bcf	status, 5	;RP0=0, select bank0
 11530  15B7  1303               	bcf	status, 6	;RP1=0, select bank0
 11531  15B8  085F               	movf	(_finalY),w
 11532  15B9  2DBA               	goto	l2163
 11533                           	
 11534  15BA                     l10753:	
 11535                           	line	154
 11536                           	
 11537  15BA                     l2163:	
 11538  15BA  0008               	return
 11539                           	opt stack 0
 11540                           GLOBAL	__end_of_getFinalY
 11541  15BB                     	__end_of_getFinalY:
 11542 ;; =============== function _getFinalY ends ============
 11543                           
 11544                           	signat	_getFinalY,89
 11545                           	global	_getFinalX
 11546                           psect	text1928,local,class=CODE,delta=2
 11547                           global __ptext1928
 11548  15B1                     __ptext1928:
 11549                           
 11550 ;; *************** function _getFinalX *****************
 11551 ;; Defined at:
 11552 ;;		line 147 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\map.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;		None
 11555 ;; Auto vars:     Size  Location     Type
 11556 ;;		None
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  1    wreg      unsigned char 
 11559 ;; Registers used:
 11560 ;;		wreg
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/0
 11563 ;;		On exit  : 0/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11566 ;;      Params:         0       0       0       0       0
 11567 ;;      Locals:         0       0       0       0       0
 11568 ;;      Temps:          0       0       0       0       0
 11569 ;;      Totals:         0       0       0       0       0
 11570 ;;Total ram usage:        0 bytes
 11571 ;; Hardware stack levels used:    1
 11572 ;; Hardware stack levels required when called:    2
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		_checkForFinalDestination
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           psect	text1928
 11580                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\map.c"
 11581                           	line	147
 11582                           	global	__size_of_getFinalX
 11583  0005                     	__size_of_getFinalX	equ	__end_of_getFinalX-_getFinalX
 11584                           	
 11585  15B1                     _getFinalX:	
 11586                           	opt	stack 4
 11587                           ; Regs used in _getFinalX: [wreg]
 11588                           	line	148
 11589                           	
 11590  15B1                     l10747:	
 11591                           ;map.c: 148: return finalX;
 11592  15B1  1283               	bcf	status, 5	;RP0=0, select bank0
 11593  15B2  1303               	bcf	status, 6	;RP1=0, select bank0
 11594  15B3  085E               	movf	(_finalX),w
 11595  15B4  2DB5               	goto	l2160
 11596                           	
 11597  15B5                     l10749:	
 11598                           	line	149
 11599                           	
 11600  15B5                     l2160:	
 11601  15B5  0008               	return
 11602                           	opt stack 0
 11603                           GLOBAL	__end_of_getFinalX
 11604  15B6                     	__end_of_getFinalX:
 11605 ;; =============== function _getFinalX ends ============
 11606                           
 11607                           	signat	_getFinalX,89
 11608                           	global	_isr1
 11609                           psect	text1929,local,class=CODE,delta=2
 11610                           global __ptext1929
 11611  06C2                     __ptext1929:
 11612                           
 11613 ;; *************** function _isr1 *****************
 11614 ;; Defined at:
 11615 ;;		line 61 in file "C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 11616 ;; Parameters:    Size  Location     Type
 11617 ;;		None
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;		None
 11620 ;; Return value:  Size  Location     Type
 11621 ;;		None               void
 11622 ;; Registers used:
 11623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11624 ;; Tracked objects:
 11625 ;;		On entry : 0/0
 11626 ;;		On exit  : 0/0
 11627 ;;		Unchanged: 0/0
 11628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11629 ;;      Params:         0       0       0       0       0
 11630 ;;      Locals:         0       0       0       0       0
 11631 ;;      Temps:          0      10       0       0       0
 11632 ;;      Totals:         0      10       0       0       0
 11633 ;;Total ram usage:       10 bytes
 11634 ;; Hardware stack levels used:    1
 11635 ;; Hardware stack levels required when called:    1
 11636 ;; This function calls:
 11637 ;;		___lwmod
 11638 ;; This function is called by:
 11639 ;;		Interrupt level 1
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           psect	text1929
 11643                           	file	"C:\Users\11000294\Desktop\COMPETITIONv0.6\main.c"
 11644                           	line	61
 11645                           	global	__size_of_isr1
 11646  00D7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 11647                           	
 11648  06C2                     _isr1:	
 11649                           	opt	stack 0
 11650                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11651                           psect	intentry,class=CODE,delta=2
 11652                           global __pintentry
 11653  0004                     __pintentry:
 11654                           global interrupt_function
 11655  0004                     interrupt_function:
 11656                           	global saved_w
 11657  007E                     	saved_w	set	btemp+0
 11658  0004  00FE               	movwf	saved_w
 11659  0005  0E03               	swapf	status,w
 11660  0006  1283               	bcf	status, 5	;RP0=0, select bank0
 11661  0007  1303               	bcf	status, 6	;RP1=0, select bank0
 11662  0008  00A6               	movwf	(??_isr1+6)
 11663  0009  0804               	movf	fsr0,w
 11664  000A  00A7               	movwf	(??_isr1+7)
 11665  000B  080A               	movf	pclath,w
 11666  000C  00A8               	movwf	(??_isr1+8)
 11667  000D  087F               	movf	btemp+1,w
 11668  000E  00A9               	movwf	(??_isr1+9)
 11669  000F  120A  118A  2EC2   	ljmp	_isr1
 11670                           psect	text1929
 11671                           	line	63
 11672                           	
 11673  06C2                     i1l9529:	
 11674                           ;main.c: 63: if(TMR0IF)
 11675  06C2  1D0B               	btfss	(90/8),(90)&7
 11676  06C3  2EC5               	goto	u332_21
 11677  06C4  2EC6               	goto	u332_20
 11678  06C5                     u332_21:
 11679  06C5  2F8D               	goto	i1l5956
 11680  06C6                     u332_20:
 11681                           	line	65
 11682                           	
 11683  06C6                     i1l9531:	
 11684                           ;main.c: 64: {
 11685                           ;main.c: 65: TMR0IF = 0;
 11686  06C6  110B               	bcf	(90/8),(90)&7
 11687                           	line	66
 11688                           	
 11689  06C7                     i1l9533:	
 11690                           ;main.c: 66: TMR0 = 100;
 11691  06C7  3064               	movlw	(064h)
 11692  06C8  0081               	movwf	(1)	;volatile
 11693                           	line	68
 11694                           ;main.c: 68: RTC_Counter++;
 11695  06C9  3001               	movlw	low(01h)
 11696  06CA  07DB               	addwf	(_RTC_Counter),f	;volatile
 11697  06CB  1803               	skipnc
 11698  06CC  0ADC               	incf	(_RTC_Counter+1),f	;volatile
 11699  06CD  3000               	movlw	high(01h)
 11700  06CE  07DC               	addwf	(_RTC_Counter+1),f	;volatile
 11701                           	line	70
 11702                           	
 11703  06CF                     i1l9535:	
 11704                           ;main.c: 70: RTC_FLAG_1MS = 1;
 11705  06CF  14F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 11706                           	line	72
 11707                           	
 11708  06D0                     i1l9537:	
 11709                           ;main.c: 72: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
 11710  06D0  300A               	movlw	low(0Ah)
 11711  06D1  00F2               	movwf	(?___lwmod)
 11712  06D2  3000               	movlw	high(0Ah)
 11713  06D3  00F3               	movwf	((?___lwmod))+1
 11714  06D4  085C               	movf	(_RTC_Counter+1),w	;volatile
 11715  06D5  01F5               	clrf	1+(?___lwmod)+02h
 11716  06D6  07F5               	addwf	1+(?___lwmod)+02h
 11717  06D7  085B               	movf	(_RTC_Counter),w	;volatile
 11718  06D8  01F4               	clrf	0+(?___lwmod)+02h
 11719  06D9  07F4               	addwf	0+(?___lwmod)+02h
 11720                           
 11721  06DA  120A  158A  2301   	fcall	___lwmod
              120A  118A         
 11722  06DF  0873               	movf	((1+(?___lwmod))),w
 11723  06E0  0472               	iorwf	((0+(?___lwmod))),w
 11724  06E1  1D03               	skipz
 11725  06E2  2EE4               	goto	u333_21
 11726  06E3  2EE5               	goto	u333_20
 11727  06E4                     u333_21:
 11728  06E4  2EE7               	goto	i1l9541
 11729  06E5                     u333_20:
 11730                           	
 11731  06E5                     i1l9539:	
 11732  06E5  1470               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
 11733  06E6  2EE7               	goto	i1l9541
 11734                           	
 11735  06E7                     i1l5946:	
 11736                           	line	73
 11737                           	
 11738  06E7                     i1l9541:	
 11739                           ;main.c: 73: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
 11740  06E7  3032               	movlw	low(032h)
 11741  06E8  00F2               	movwf	(?___lwmod)
 11742  06E9  3000               	movlw	high(032h)
 11743  06EA  00F3               	movwf	((?___lwmod))+1
 11744  06EB  1283               	bcf	status, 5	;RP0=0, select bank0
 11745  06EC  1303               	bcf	status, 6	;RP1=0, select bank0
 11746  06ED  085C               	movf	(_RTC_Counter+1),w	;volatile
 11747  06EE  01F5               	clrf	1+(?___lwmod)+02h
 11748  06EF  07F5               	addwf	1+(?___lwmod)+02h
 11749  06F0  085B               	movf	(_RTC_Counter),w	;volatile
 11750  06F1  01F4               	clrf	0+(?___lwmod)+02h
 11751  06F2  07F4               	addwf	0+(?___lwmod)+02h
 11752                           
 11753  06F3  120A  158A  2301   	fcall	___lwmod
              120A  118A         
 11754  06F8  0873               	movf	((1+(?___lwmod))),w
 11755  06F9  0472               	iorwf	((0+(?___lwmod))),w
 11756  06FA  1D03               	skipz
 11757  06FB  2EFD               	goto	u334_21
 11758  06FC  2EFE               	goto	u334_20
 11759  06FD                     u334_21:
 11760  06FD  2F00               	goto	i1l9545
 11761  06FE                     u334_20:
 11762                           	
 11763  06FE                     i1l9543:	
 11764  06FE  15F0               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
 11765  06FF  2F00               	goto	i1l9545
 11766                           	
 11767  0700                     i1l5947:	
 11768                           	line	74
 11769                           	
 11770  0700                     i1l9545:	
 11771                           ;main.c: 74: if(RTC_Counter % 500 == 0)
 11772  0700  30F4               	movlw	low(01F4h)
 11773  0701  00F2               	movwf	(?___lwmod)
 11774  0702  3001               	movlw	high(01F4h)
 11775  0703  00F3               	movwf	((?___lwmod))+1
 11776  0704  1283               	bcf	status, 5	;RP0=0, select bank0
 11777  0705  1303               	bcf	status, 6	;RP1=0, select bank0
 11778  0706  085C               	movf	(_RTC_Counter+1),w	;volatile
 11779  0707  01F5               	clrf	1+(?___lwmod)+02h
 11780  0708  07F5               	addwf	1+(?___lwmod)+02h
 11781  0709  085B               	movf	(_RTC_Counter),w	;volatile
 11782  070A  01F4               	clrf	0+(?___lwmod)+02h
 11783  070B  07F4               	addwf	0+(?___lwmod)+02h
 11784                           
 11785  070C  120A  158A  2301   	fcall	___lwmod
              120A  118A         
 11786                           	line	77
 11787                           ;main.c: 75: {
 11788                           	
 11789  0711                     i1l5948:	
 11790                           	line	79
 11791                           ;main.c: 77: }
 11792                           ;main.c: 79: if(!RB0)
 11793  0711  1283               	bcf	status, 5	;RP0=0, select bank0
 11794  0712  1303               	bcf	status, 6	;RP1=0, select bank0
 11795  0713  1806               	btfsc	(48/8),(48)&7
 11796  0714  2F16               	goto	u335_21
 11797  0715  2F17               	goto	u335_20
 11798  0716                     u335_21:
 11799  0716  2F41               	goto	i1l5949
 11800  0717                     u335_20:
 11801                           	line	81
 11802                           	
 11803  0717                     i1l9547:	
 11804                           ;main.c: 80: {
 11805                           ;main.c: 81: start.debounceCount++;
 11806  0717  3001               	movlw	(01h)
 11807  0718  00A0               	movwf	(??_isr1+0)+0
 11808  0719  0820               	movf	(??_isr1+0)+0,w
 11809  071A  1683               	bsf	status, 5	;RP0=1, select bank1
 11810  071B  1303               	bcf	status, 6	;RP1=0, select bank1
 11811  071C  07C2               	addwf	0+(_start)^080h+02h,f
 11812                           	line	82
 11813                           	
 11814  071D                     i1l9549:	
 11815                           ;main.c: 82: if(start.debounceCount >= 10 & start.released)
 11816  071D  0841               	movf	0+(_start)^080h+01h,w
 11817  071E  1283               	bcf	status, 5	;RP0=0, select bank0
 11818  071F  1303               	bcf	status, 6	;RP1=0, select bank0
 11819  0720  00A0               	movwf	(??_isr1+0)+0
 11820  0721  01A1               	clrf	(??_isr1+0)+0+1
 11821  0722  300A               	movlw	(0Ah)
 11822  0723  1683               	bsf	status, 5	;RP0=1, select bank1
 11823  0724  1303               	bcf	status, 6	;RP1=0, select bank1
 11824  0725  0242               	subwf	0+(_start)^080h+02h,w
 11825  0726  3000               	movlw	0
 11826  0727  1803               	skipnc
 11827  0728  3001               	movlw	1
 11828  0729  1283               	bcf	status, 5	;RP0=0, select bank0
 11829  072A  1303               	bcf	status, 6	;RP1=0, select bank0
 11830  072B  00A2               	movwf	(??_isr1+2)+0
 11831  072C  01A3               	clrf	(??_isr1+2)+0+1
 11832  072D  0820               	movf	0+(??_isr1+0)+0,w
 11833  072E  0522               	andwf	0+(??_isr1+2)+0,w
 11834  072F  00A4               	movwf	(??_isr1+4)+0
 11835  0730  0821               	movf	1+(??_isr1+0)+0,w
 11836  0731  0523               	andwf	1+(??_isr1+2)+0,w
 11837  0732  00A5               	movwf	1+(??_isr1+4)+0
 11838  0733  0825               	movf	1+(??_isr1+4)+0,w
 11839  0734  0424               	iorwf	0+(??_isr1+4)+0,w
 11840  0735  1903               	skipnz
 11841  0736  2F38               	goto	u336_21
 11842  0737  2F39               	goto	u336_20
 11843  0738                     u336_21:
 11844  0738  2F48               	goto	i1l9557
 11845  0739                     u336_20:
 11846                           	line	84
 11847                           	
 11848  0739                     i1l9551:	
 11849                           ;main.c: 83: {
 11850                           ;main.c: 84: start.pressed = 1;
 11851  0739  1683               	bsf	status, 5	;RP0=1, select bank1
 11852  073A  1303               	bcf	status, 6	;RP1=0, select bank1
 11853  073B  01C0               	clrf	(_start)^080h
 11854  073C  1403               	bsf	status,0
 11855  073D  0DC0               	rlf	(_start)^080h,f
 11856                           	line	85
 11857                           	
 11858  073E                     i1l9553:	
 11859                           ;main.c: 85: start.released = 0;
 11860  073E  01C1               	clrf	0+(_start)^080h+01h
 11861  073F  2F48               	goto	i1l9557
 11862                           	line	86
 11863                           	
 11864  0740                     i1l5950:	
 11865                           	line	87
 11866                           ;main.c: 86: }
 11867                           ;main.c: 87: }
 11868  0740  2F48               	goto	i1l9557
 11869                           	line	88
 11870                           	
 11871  0741                     i1l5949:	
 11872                           	line	90
 11873                           ;main.c: 88: else
 11874                           ;main.c: 89: {
 11875                           ;main.c: 90: start.debounceCount = 0;
 11876  0741  1683               	bsf	status, 5	;RP0=1, select bank1
 11877  0742  1303               	bcf	status, 6	;RP1=0, select bank1
 11878  0743  01C2               	clrf	0+(_start)^080h+02h
 11879                           	line	91
 11880                           	
 11881  0744                     i1l9555:	
 11882                           ;main.c: 91: start.released = 1;
 11883  0744  01C1               	clrf	0+(_start)^080h+01h
 11884  0745  1403               	bsf	status,0
 11885  0746  0DC1               	rlf	0+(_start)^080h+01h,f
 11886  0747  2F48               	goto	i1l9557
 11887                           	line	92
 11888                           	
 11889  0748                     i1l5951:	
 11890                           	line	94
 11891                           	
 11892  0748                     i1l9557:	
 11893                           ;main.c: 92: }
 11894                           ;main.c: 94: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 11895  0748  1283               	bcf	status, 5	;RP0=0, select bank0
 11896  0749  1E8C               	btfss	(101/8),(101)&7
 11897  074A  2F4C               	goto	u337_21
 11898  074B  2F4D               	goto	u337_20
 11899  074C                     u337_21:
 11900  074C  2F67               	goto	i1l9567
 11901  074D                     u337_20:
 11902                           	
 11903  074D                     i1l9559:	
 11904  074D  081A               	movf	(26),w	;volatile
 11905  074E  00A0               	movwf	(??_isr1+0)+0
 11906  074F  0878               	movf	(_rxiptr),w
 11907  0750  3EA0               	addlw	_rxfifo&0ffh
 11908  0751  0084               	movwf	fsr0
 11909  0752  0820               	movf	(??_isr1+0)+0,w
 11910  0753  1383               	bcf	status, 7	;select IRP bank1
 11911  0754  0080               	movwf	indf
 11912                           	
 11913  0755                     i1l9561:	
 11914  0755  0878               	movf	(_rxiptr),w	;volatile
 11915  0756  3E01               	addlw	01h
 11916  0757  390F               	andlw	0Fh
 11917  0758  00A0               	movwf	(??_isr1+0)+0
 11918  0759  0820               	movf	(??_isr1+0)+0,w
 11919  075A  00E1               	movwf	(_ser_tmp)
 11920                           	
 11921  075B                     i1l9563:	
 11922  075B  0861               	movf	(_ser_tmp),w
 11923  075C  0679               	xorwf	(_rxoptr),w	;volatile
 11924  075D  1903               	skipnz
 11925  075E  2F60               	goto	u338_21
 11926  075F  2F61               	goto	u338_20
 11927  0760                     u338_21:
 11928  0760  2F67               	goto	i1l9567
 11929  0761                     u338_20:
 11930                           	
 11931  0761                     i1l9565:	
 11932  0761  0861               	movf	(_ser_tmp),w
 11933  0762  00A0               	movwf	(??_isr1+0)+0
 11934  0763  0820               	movf	(??_isr1+0)+0,w
 11935  0764  00F8               	movwf	(_rxiptr)	;volatile
 11936  0765  2F67               	goto	i1l9567
 11937                           	
 11938  0766                     i1l5953:	
 11939  0766  2F67               	goto	i1l9567
 11940                           	
 11941  0767                     i1l5952:	
 11942                           	
 11943  0767                     i1l9567:	
 11944  0767  1E0C               	btfss	(100/8),(100)&7
 11945  0768  2F6A               	goto	u339_21
 11946  0769  2F6B               	goto	u339_20
 11947  076A                     u339_21:
 11948  076A  2F8D               	goto	i1l5956
 11949  076B                     u339_20:
 11950                           	
 11951  076B                     i1l9569:	
 11952  076B  1683               	bsf	status, 5	;RP0=1, select bank1
 11953  076C  1303               	bcf	status, 6	;RP1=0, select bank1
 11954  076D  1E0C               	btfss	(1124/8)^080h,(1124)&7
 11955  076E  2F70               	goto	u340_21
 11956  076F  2F71               	goto	u340_20
 11957  0770                     u340_21:
 11958  0770  2F8D               	goto	i1l5956
 11959  0771                     u340_20:
 11960                           	
 11961  0771                     i1l9571:	
 11962  0771  087B               	movf	(_txoptr),w
 11963  0772  3EB0               	addlw	_txfifo&0ffh
 11964  0773  0084               	movwf	fsr0
 11965  0774  1383               	bcf	status, 7	;select IRP bank1
 11966  0775  0800               	movf	indf,w
 11967  0776  1283               	bcf	status, 5	;RP0=0, select bank0
 11968  0777  1303               	bcf	status, 6	;RP1=0, select bank0
 11969  0778  0099               	movwf	(25)	;volatile
 11970                           	
 11971  0779                     i1l9573:	
 11972  0779  3001               	movlw	(01h)
 11973  077A  00A0               	movwf	(??_isr1+0)+0
 11974  077B  0820               	movf	(??_isr1+0)+0,w
 11975  077C  07FB               	addwf	(_txoptr),f	;volatile
 11976                           	
 11977  077D                     i1l9575:	
 11978  077D  300F               	movlw	(0Fh)
 11979  077E  00A0               	movwf	(??_isr1+0)+0
 11980  077F  0820               	movf	(??_isr1+0)+0,w
 11981  0780  05FB               	andwf	(_txoptr),f	;volatile
 11982                           	
 11983  0781                     i1l9577:	
 11984  0781  087B               	movf	(_txoptr),w	;volatile
 11985  0782  067A               	xorwf	(_txiptr),w	;volatile
 11986  0783  1D03               	skipz
 11987  0784  2F86               	goto	u341_21
 11988  0785  2F87               	goto	u341_20
 11989  0786                     u341_21:
 11990  0786  2F8D               	goto	i1l5956
 11991  0787                     u341_20:
 11992                           	
 11993  0787                     i1l9579:	
 11994  0787  1683               	bsf	status, 5	;RP0=1, select bank1
 11995  0788  1303               	bcf	status, 6	;RP1=0, select bank1
 11996  0789  120C               	bcf	(1124/8)^080h,(1124)&7
 11997  078A  2F8D               	goto	i1l5956
 11998                           	
 11999  078B                     i1l5955:	
 12000  078B  2F8D               	goto	i1l5956
 12001                           	
 12002  078C                     i1l5954:	
 12003  078C  2F8D               	goto	i1l5956
 12004                           	line	95
 12005                           	
 12006  078D                     i1l5945:	
 12007                           	line	96
 12008                           	
 12009  078D                     i1l5956:	
 12010  078D  1283               	bcf	status, 5	;RP0=0, select bank0
 12011  078E  0829               	movf	(??_isr1+9),w
 12012  078F  00FF               	movwf	btemp+1
 12013  0790  0828               	movf	(??_isr1+8),w
 12014  0791  008A               	movwf	pclath
 12015  0792  0827               	movf	(??_isr1+7),w
 12016  0793  0084               	movwf	fsr0
 12017  0794  0E26               	swapf	(??_isr1+6)^00h,w
 12018  0795  0083               	movwf	status
 12019  0796  0EFE               	swapf	saved_w,f
 12020  0797  0E7E               	swapf	saved_w,w
 12021  0798  0009               	retfie
 12022                           	opt stack 0
 12023                           GLOBAL	__end_of_isr1
 12024  0799                     	__end_of_isr1:
 12025 ;; =============== function _isr1 ends ============
 12026                           
 12027                           	signat	_isr1,88
 12028                           	global	___lwmod
 12029                           psect	text1930,local,class=CODE,delta=2
 12030                           global __ptext1930
 12031  0B01                     __ptext1930:
 12032                           
 12033 ;; *************** function ___lwmod *****************
 12034 ;; Defined at:
 12035 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  divisor         2    0[COMMON] unsigned int 
 12038 ;;  dividend        2    2[COMMON] unsigned int 
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;  counter         1    5[COMMON] unsigned char 
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  2    0[COMMON] unsigned int 
 12043 ;; Registers used:
 12044 ;;		wreg, status,2, status,0
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12050 ;;      Params:         4       0       0       0       0
 12051 ;;      Locals:         1       0       0       0       0
 12052 ;;      Temps:          1       0       0       0       0
 12053 ;;      Totals:         6       0       0       0       0
 12054 ;;Total ram usage:        6 bytes
 12055 ;; Hardware stack levels used:    1
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		_isr1
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           psect	text1930
 12063                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
 12064                           	line	5
 12065                           	global	__size_of___lwmod
 12066  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 12067                           	
 12068  0B01                     ___lwmod:	
 12069                           	opt	stack 0
 12070                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12071                           	line	8
 12072                           	
 12073  0B01                     i1l9643:	
 12074  0B01  0873               	movf	(___lwmod@divisor+1),w
 12075  0B02  0472               	iorwf	(___lwmod@divisor),w
 12076  0B03  1903               	skipnz
 12077  0B04  2B06               	goto	u356_21
 12078  0B05  2B07               	goto	u356_20
 12079  0B06                     u356_21:
 12080  0B06  2B3D               	goto	i1l9661
 12081  0B07                     u356_20:
 12082                           	line	9
 12083                           	
 12084  0B07                     i1l9645:	
 12085  0B07  01F7               	clrf	(___lwmod@counter)
 12086  0B08  1403               	bsf	status,0
 12087  0B09  0DF7               	rlf	(___lwmod@counter),f
 12088                           	line	10
 12089  0B0A  2B17               	goto	i1l9651
 12090                           	
 12091  0B0B                     i1l6751:	
 12092                           	line	11
 12093                           	
 12094  0B0B                     i1l9647:	
 12095  0B0B  3001               	movlw	01h
 12096                           	
 12097  0B0C                     u357_25:
 12098  0B0C  1003               	clrc
 12099  0B0D  0DF2               	rlf	(___lwmod@divisor),f
 12100  0B0E  0DF3               	rlf	(___lwmod@divisor+1),f
 12101  0B0F  3EFF               	addlw	-1
 12102  0B10  1D03               	skipz
 12103  0B11  2B0C               	goto	u357_25
 12104                           	line	12
 12105                           	
 12106  0B12                     i1l9649:	
 12107  0B12  3001               	movlw	(01h)
 12108  0B13  00F6               	movwf	(??___lwmod+0)+0
 12109  0B14  0876               	movf	(??___lwmod+0)+0,w
 12110  0B15  07F7               	addwf	(___lwmod@counter),f
 12111  0B16  2B17               	goto	i1l9651
 12112                           	line	13
 12113                           	
 12114  0B17                     i1l6750:	
 12115                           	line	10
 12116                           	
 12117  0B17                     i1l9651:	
 12118  0B17  1FF3               	btfss	(___lwmod@divisor+1),(15)&7
 12119  0B18  2B1A               	goto	u358_21
 12120  0B19  2B1B               	goto	u358_20
 12121  0B1A                     u358_21:
 12122  0B1A  2B0B               	goto	i1l9647
 12123  0B1B                     u358_20:
 12124  0B1B  2B1D               	goto	i1l9653
 12125                           	
 12126  0B1C                     i1l6752:	
 12127  0B1C  2B1D               	goto	i1l9653
 12128                           	line	14
 12129                           	
 12130  0B1D                     i1l6753:	
 12131                           	line	15
 12132                           	
 12133  0B1D                     i1l9653:	
 12134  0B1D  0873               	movf	(___lwmod@divisor+1),w
 12135  0B1E  0275               	subwf	(___lwmod@dividend+1),w
 12136  0B1F  1D03               	skipz
 12137  0B20  2B23               	goto	u359_25
 12138  0B21  0872               	movf	(___lwmod@divisor),w
 12139  0B22  0274               	subwf	(___lwmod@dividend),w
 12140  0B23                     u359_25:
 12141  0B23  1C03               	skipc
 12142  0B24  2B26               	goto	u359_21
 12143  0B25  2B27               	goto	u359_20
 12144  0B26                     u359_21:
 12145  0B26  2B2E               	goto	i1l9657
 12146  0B27                     u359_20:
 12147                           	line	16
 12148                           	
 12149  0B27                     i1l9655:	
 12150  0B27  0872               	movf	(___lwmod@divisor),w
 12151  0B28  02F4               	subwf	(___lwmod@dividend),f
 12152  0B29  0873               	movf	(___lwmod@divisor+1),w
 12153  0B2A  1C03               	skipc
 12154  0B2B  03F5               	decf	(___lwmod@dividend+1),f
 12155  0B2C  02F5               	subwf	(___lwmod@dividend+1),f
 12156  0B2D  2B2E               	goto	i1l9657
 12157                           	
 12158  0B2E                     i1l6754:	
 12159                           	line	17
 12160                           	
 12161  0B2E                     i1l9657:	
 12162  0B2E  3001               	movlw	01h
 12163                           	
 12164  0B2F                     u360_25:
 12165  0B2F  1003               	clrc
 12166  0B30  0CF3               	rrf	(___lwmod@divisor+1),f
 12167  0B31  0CF2               	rrf	(___lwmod@divisor),f
 12168  0B32  3EFF               	addlw	-1
 12169  0B33  1D03               	skipz
 12170  0B34  2B2F               	goto	u360_25
 12171                           	line	18
 12172                           	
 12173  0B35                     i1l9659:	
 12174  0B35  3001               	movlw	low(01h)
 12175  0B36  02F7               	subwf	(___lwmod@counter),f
 12176  0B37  1D03               	btfss	status,2
 12177  0B38  2B3A               	goto	u361_21
 12178  0B39  2B3B               	goto	u361_20
 12179  0B3A                     u361_21:
 12180  0B3A  2B1D               	goto	i1l9653
 12181  0B3B                     u361_20:
 12182  0B3B  2B3D               	goto	i1l9661
 12183                           	
 12184  0B3C                     i1l6755:	
 12185  0B3C  2B3D               	goto	i1l9661
 12186                           	line	19
 12187                           	
 12188  0B3D                     i1l6749:	
 12189                           	line	20
 12190                           	
 12191  0B3D                     i1l9661:	
 12192  0B3D  0875               	movf	(___lwmod@dividend+1),w
 12193  0B3E  01F3               	clrf	(?___lwmod+1)
 12194  0B3F  07F3               	addwf	(?___lwmod+1)
 12195  0B40  0874               	movf	(___lwmod@dividend),w
 12196  0B41  01F2               	clrf	(?___lwmod)
 12197  0B42  07F2               	addwf	(?___lwmod)
 12198                           
 12199  0B43  2B44               	goto	i1l6756
 12200                           	
 12201  0B44                     i1l9663:	
 12202                           	line	21
 12203                           	
 12204  0B44                     i1l6756:	
 12205  0B44  0008               	return
 12206                           	opt stack 0
 12207                           GLOBAL	__end_of___lwmod
 12208  0B45                     	__end_of___lwmod:
 12209 ;; =============== function ___lwmod ends ============
 12210                           
 12211                           	signat	___lwmod,8314
 12212                           psect	text1931,local,class=CODE,delta=2
 12213                           global __ptext1931
 12214  0000                     __ptext1931:
 12215                           	global	btemp
 12216  007E                     	btemp set 07Eh
 12217                           
 12218                           	DABS	1,126,2	;btemp
 12219                           	global	wtemp0
 12220  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon May 27 14:15:22 2013

               __end_of_lookForVictim 0924             __end_of_lcd_write_control 1654  
           __end_of_updateOrientation 1608                                     pc 0002  
                                  _GO 00FA                                    _RD 0C60  
                                  _WR 0C61                          ___awdiv@sign 0036  
                                  fsr 0004                   ___wmul@multiplicand 002C  
                    ??_getOrientation 002A                                   l700 07FF  
                                 l703 0A49                                   l704 0A49  
                                 l705 0A4E                                   l706 0A7D  
                                 l690 0A82                                   l691 0AAC  
                                 l692 0A86                                   l693 0A8A  
                                 l694 0A8E                                   l695 0A92  
                                 l696 0A96                                   l689 0A9B  
                                 l697 0ABE                                   _GIE 005F  
                                 _RB0 0030                                   _RE0 0048  
                                 _RE1 0049                                   _RE2 004A  
                        _stepPosition 0062                                   _RX9 00C6  
                                 _TX9 04C6                                   fsr0 0004  
                                 indf 0000                    drive@highByteSpeed 0032  
           lcd_write_1_digit_bcd@data 002D                       ?_lcd_set_cursor 0072  
              __end_of_updateLocation 0D54                                  l2120 04D9  
                                l2121 04DF                                  l1402 177D  
                                l2130 0508                                  l2122 04E5  
                                l1403 176A                                  l2123 05B7  
                                l2115 05A6                                  l2131 0510  
                                l1404 178A                                  l1420 0893  
                                l2140 0548                                  l2132 0521  
                                l2124 04F3                                  l2116 04D3  
                                l1405 178A                                  l2141 0556  
                                l2133 054A                                  l2125 0512  
                                l2117 04E7                                  l2150 05A3  
                                l2142 0568                                  l2134 0522  
                                l2126 04F4                                  l2118 04D4  
                                l2151 0578                                  l2143 0557  
                                l2135 052F                                  l2127 0520  
                                l2119 04F2                                  l2160 15B5  
                                l1408 15F6                                  l2152 0580  
                                l2144 0570                                  l2136 0555  
                                l2128 04F9                                  l2153 058F  
                                l2145 055D                                  l2137 0530  
                                l2129 0500                                  l2154 0590  
                                l2146 0566                                  l2138 0538  
                                l2163 15BA                                  l2155 0593  
                                l2147 0571                                  l2139 0547  
                                l2156 05A4                                  l2148 0595  
                                l2157 05D3                                  l2149 0572  
                                l1393 1653                                  l1396 162C  
                                l5100 0388                                  l5101 038E  
                                l5102 038E                                  l5111 15E0  
                                l1399 15EB                                  l6000 0CF3  
                                l5120 166C                                  l5105 15C9  
                                l6001 0D37                                  l6010 0B00  
                                l6002 0D00                                  l6011 0AE7  
                                l4331 002D                                  l6003 0D0B  
                                l5123 17B0                                  l2900 0816  
                                l5108 15CE                                  l6012 0AFF  
                                l4340 0149                                  l4332 01E3  
                                l5132 0BCD                                  l6004 0D18  
                                l5141 1607                                  l6013 0AFA  
                                l4333 01E3                                  l4341 01DF  
                                l6005 0D23                                  l5117 0868  
                                l5142 1607                                  l6014 0AFE  
                                l2910 09CD                                  l4342 0190  
                                l4334 0074                                  l5126 0C9F  
                                l6006 0D53                                  l6030 0EC6  
                                l6022 0EC1                                  l6015 0B00  
                                l2903 1723                                  l2911 0A00  
                                l4335 01E2                                  l4343 01DE  
                                l4351 0C43                                  l5135 09C7  
                                l6023 0E70                                  l2904 1722  
                                l2912 0A00                                  l4344 01D7  
                                l4336 00BB                                  l4352 0C2F  
                                l6024 0EC0                                  l6041 15C4  
                                l6009 0AD3                                  l2905 172C  
                                l4337 01E1                                  l4345 01DD  
                                l4353 0C4A                                  l5081 0990  
                                l5145 083F                                  l6033 16BB  
                                l5129 17D7                                  l6025 0E8F  
                                l2906 1742                                  l4338 0102  
                                l4354 0C58                                  l3642 0CEB  
                                l5138 0A3E                                  l6018 16DE  
                                l5090 02BC                                  l6034 16BE  
                                l6026 0E9C                                  l2915 16E4  
                                l4339 01E0                                  l6019 16DE  
                                l5091 02A0                                  l6035 16BE  
                                l6027 0EBF                                  l2916 16E3  
                                l2940 17FF                                  l4348 1765  
                                l5084 0389                                  l5092 02BA  
                                l6028 0EBE                                  l2917 16EC  
                                l2909 09F1                                  l5093 02B8  
                                l5085 01FC                                  l6029 0EC6  
                                l2918 16FF                                  l6038 15BF  
                                l5086 02BD                                  l5094 02BA  
                                l3639 1619                                  l5095 0332  
                                l5087 0275                                  l5096 0316  
                                l5088 0274                                  l5097 0330  
                                l5089 0273                                  l5098 032E  
                                l5099 0330                                  l7070 0DE1  
                                l7071 0DF5                                  l7072 0E0C  
                                l7073 0DF6                                  l7065 0DE0  
                                l7074 0E13                                  l2899 080B  
                                l7075 0E1F                                  l7067 0DD8  
                                l7076 0E14                                  l7068 0E46  
                                l7077 0E23                                  l7069 0DEE  
                                l7078 0E2D                                  l7079 0E46  
                                l6733 0899                                  l6734 08A3  
                                l6735 08B8                                  l6831 05EF  
                                l6736 08BF                                  l6832 06C1  
                                l6833 0608                                  l6850 0FDF  
                                l6842 0F77                                  l5962 16A2  
                                l6834 0648                                  l5970 0923  
                                l6851 0FD3                                  l6843 0FFF  
                                l6835 065D                                  l6852 0FE5  
                                l6844 0FC2                                  l6836 0674  
                                l6853 0FF6                                  l6845 0FAE  
                                l6837 0679                                  l5965 08F0  
                                l5973 0EE5                                  l6846 0FAF  
                                l6838 068E                                  l5966 08F0  
                                l5982 03AE                                  l5974 0EEB  
                                l5990 0BE2                                  l6847 0FC1  
                                l6839 06A5                                  l5959 0959  
                                l5983 040A                                  l5975 0F13  
                                l5991 0C12                                  l6848 0FE6  
                                l6880 0DA9                                  l5984 03E8  
                                l5976 0F19                                  l5992 0BF6  
                                l6849 0FD2                                  l6881 0DB7  
                                l6873 0D64                                  l5969 0923  
                                l5985 0481                                  l5977 0F41  
                                l5993 0C11                                  l6882 0DC2  
                                l6874 0D72                                  l6858 1720  
                                l5986 049D                                  l5978 0F47  
                                l5994 0C0A                                  l6883 0DC9  
                                l6875 0DB8                                  l5987 04CE  
                                l5979 0F59                                  l5995 0C10  
                                l6876 0D8A                                  l5996 0C12  
                                l6877 0D7E                                  l6878 0D8F  
                                l6879 0D90                                  l5999 0D25  
                                _CHS0 00FB                                  _CHS1 00FC  
                                _CHS2 00FD                                  STR_1 1006  
                                STR_2 1017                                  _BRGH 04C2  
                                _CREN 00C4                                  u5100 0806  
                                u5101 0805                                  u5110 0811  
                                u5111 0810                                  u5120 16EC  
                                u6000 0DB6                                  u5121 16EB  
                                u6001 0DB5                                  u6010 0DBC  
                                u6100 172C                                  u6101 172B  
                                u5230 0AC7                                  u6110 09D9  
                                u5231 0AC6                                  u5240 0ACD  
                                u6120 09FF                                  u6200 0C49  
                                u5241 0ACC                                  u6121 09FE  
                                u6201 0C48                                  u5250 0ADA  
                                u5330 089D                                  u6130 0024  
                                u6210 05E7                                  u5251 0AD9  
                                u5331 089C                                  u6131 0023  
                                u6211 05E6                                  _PEIE 005E  
                                u5180 1604                                  u5260 0AE0  
                                u6140 003C                                  u6300 067D  
                                u6220 0600                                  u5181 1603  
                                u5261 0ADF                                  u6125 09FB  
                                u6141 003B                                  u6301 067C  
                                u6221 05FF                                  u5190 15DB  
                                u5270 0AEE                                  u6150 0083  
                                u6230 0618                                  u5191 15DA  
                                u5271 0AED                                  u6151 0082  
                                u6135 0020                                  u6311 0686  
                                u5280 0AF3                                  u5360 08B7  
                                u6080 0A4D                                  u6160 00CA  
                                u6312 068D                                  u6240 062A  
                                u6400 0586                                  u5281 0AF2  
                                u5361 08B6                                  u5345 08A4  
                                u6081 0A4C                                  u6161 00C9  
                                u6145 0038                                  u6401 0585  
                                u5610 0DD0                                  u6170 0111  
                                u6250 064C                                  u6410 08C4  
                                u5355 08AB                                  u6171 0110  
                                u6155 007F                                  u6251 064B  
                                u6235 0614                                  u6411 08C3  
                                _RCIE 0465                                  u5700 0E38  
                                u5620 0DD7                                  u6180 0158  
                                u6340 06A4                                  u6420 08D0  
                                u6500 0291                                  _RCIF 0065  
                                u5621 0DD6                                  u6181 0157  
                                u6165 00C6                                  u6341 06A3  
                                u6325 068F                                  u6261 0655  
                                u6245 0626                                  u6421 08CF  
                                u6501 0290                                  u5710 0E45  
                                u6190 019F                                  u6262 065C  
                                u6350 1789                                  u6430 08DC  
                                u6510 02A8                                  u6095 0A69  
                                u6191 019E                                  u6175 010D  
                                u6335 0697                                  u6351 1788  
                                u6431 08DB                                  u6511 02A7  
                                u5640 0DF4                                  u5800 0F6D  
                                u6360 16C7                                  u6440 090D  
                                u6520 02D9                                  u6600 0409  
                                u5705 0E34                                  u5641 0DF3  
                                u5801 0F6C                                  u6185 0154  
                                u6361 16C6                                  u6441 090C  
                                u6521 02D8                                  u6601 0408  
                                u5810 0F82                                  u6290 0673  
                                u6370 16CD                                  u6530 0307  
                                u6450 020B                                  u6610 0465  
                                u5635 0DE6                                  u6195 019B  
                                u6291 0672                                  u6275 065E  
                                u6371 16CC                                  u6531 0306  
                                u6451 020A                                  u6611 0464  
                                u5660 0E12                                  u5820 0F9D  
                                u6380 0527                                  u6540 031E  
                                u6460 0226                                  u6620 048E  
                                u5661 0E11                                  u5821 0F9C  
                                u6285 0666                                  u6381 0526  
                                u6541 031D                                  u6461 0225  
                                u6621 048D                                  u6605 0405  
                                u5830 0FA4                                  u6390 053E  
                                u6550 0374                                  u6470 0241  
                                u6710 0F3A                                  u6630 0ED9  
                                u5655 0E05                                  u5831 0FA3  
                                u5815 0F7E                                  u6391 053D  
                                u6551 0373                                  u6471 0240  
                                u6455 0207                                  u6711 0F39  
                                u6631 0ED7                                  u5680 0E23  
                                u5920 0D5B                                  u6560 038D  
                                u6480 025C                                  u6704 0F36  
                                u6720 0BD2                                  u6800 0EAA  
                                u5681 0E22                                  u5921 0D5A  
                                u6561 038C                                  u6481 025B  
                                u6625 048A                                  u6721 0BD1  
                                u6801 0EA9                                  u5690 0E27  
                                u5850 0FC0                                  u5930 0D68  
                                u6490 027B                                  u6570 16B7  
                                u6650 0EDE                                  u6730 0BDC  
                                u6810 0EB8                                  _OERR 00C1  
                                u5691 0E26                                  u5675 0E17  
                                u5851 0FBF                                  u5931 0D67  
                                u6555 0370                                  u6491 027A  
                                u6571 16B6                                  u6651 0EDD  
                                u6731 0BDB                                  u6811 0EB7  
                                u5860 0FC8                                  u5940 0D7A  
                                u6580 03AC                                  u6660 0F07  
                                u6644 0EDA                                  u6740 0BE6  
                                u6820 0EC5                                  u5861 0FC7  
                                u5845 0FB0                                  u5941 0D79  
                                u6581 03AB                                  u6661 0F05  
                                u6741 0BE5                                  u6821 0EC4  
                                u6590 03D7                                  u6750 0BF0  
                                u6575 16B3                                  u6591 03D6  
                                u6751 0BEF                                  u5880 0FE4  
                                u5960 0D8E                                  u6680 0F0C  
                                u6760 0BFA                                  u5881 0FE3  
                                u5961 0D8D                                  u6585 03A8  
                                u6681 0F0B                                  u6761 0BF9  
                                u5890 0FEA                                  u6690 0F35  
                                u6674 0F08                                  u6770 0C04  
                                u5875 0FD5                                  u5955 0D7F  
                                u6907 0820                                  u6595 03D3  
                                u6691 0F33                                  u6771 0C03  
                                u5980 0DA1                                  u6780 0E76  
                                u5981 0DA0                                  u6917 0963  
                                u6837 0C99                                  u6790 0E89  
                                u5975 0D91                                  u6927 0C22  
                                u6847 0BB9                                  u6791 0E88  
                                u5985 0D9D                                  u6937 0C38  
                                u6857 0BC7                                  u5995 0DAA  
                                u6947 0C51                                  u6867 09C1  
                                u6957 1628                                  u6877 0A38  
                                u6967 164E                                  u6887 0AAE  
                                u6977 07FD                                  u6897 168F  
                                _TMR0 0001                                  _SPEN 00C7  
                                _TXIE 0464                                  _WREN 0C62  
                                _TXEN 04C5                                  _TXIF 0064  
                                _SYNC 04C4                __end_of_lcd_write_data 162D  
                                _beep 00DF                                  _isr1 06C2  
                                _main 0E47                                  _home 0386  
                        ___ftpack@arg 002A                                  _init 0924  
                                _node 00C5                          ___ftpack@exp 002D  
                 drive@highByteRadius 002D                                  btemp 007E  
                                start 0012                ??_findFinalDestination 0030  
                     rotateIR@stepNum 002F                          ___ftmul@cntr 0056  
                        ___ftmul@sign 0057                 _lcd_write_1_digit_bcd 15EC  
                        ___fttol@exp1 003F                     ?_driveForDistance 0036  
                        ___fttol@lval 003B                           _turnRight90 0A01  
                               l11021 0DD0                                 l11101 0F89  
                               l11031 0DF6                                 l11023 0DD8  
                               l11111 0F9D                                 l11103 0F8A  
                               l11041 0E27                                 l11033 0DFA  
                               l11025 0DDF                                 l11121 0FC8  
                               l11113 0FA4                                 l11105 0F90  
                               l11043 0E2F                                 l11035 0E04  
                               l11027 0DE1                                 l11019 0DCA  
                               l11131 0FEA                                 l11123 0FD1  
                               l11115 0FAD                                 l11107 0F97  
                               l11045 0E41                                 l11037 0E14  
                               l11029 0DEE                                 l11133 0FF6  
                               l11125 0FD3                                 l11117 0FAF  
                               l11109 0F99                                 l11301 0015  
                               l11047 0E45                                 l11039 0E1F  
                               l11135 0FFF                                 l11127 0FDF  
                               l11119 0FC2                                 l11311 003C  
                               l11303 0024                                 l11129 0FE6  
                               l11161 0D6D                                 l11153 0D54  
                               l11241 0A45                                 l11321 00B9  
                               l11313 0072                                 l11305 002B  
                               l11401 1696                                 l11171 0D85  
                               l11163 0D72                                 l11155 0D5B  
                               l11243 0A4E                                 l11251 07ED  
                               l11331 0101                                 l11323 00BA  
                               l11315 0073                                 l11307 002C  
                               l11403 169C                                 l11411 05EF  
                               l10701 15DD                                 l11093 0F5A  
                               l11181 0DA9                                 l11173 0D8A  
                               l11165 0D74                                 l11157 0D64  
                               l11245 0A76                                 l11253 07F1  
                               l11261 1646                                 l11341 0149  
                               l11333 0102                                 l11325 00BB  
                               l11317 0074                                 l11309 002D  
                               l11421 0636                                 l11413 0600  
                               l11405 05D4                                 l11501 087B  
                               l10703 15DF                                 l11095 0F6D  
                               l11191 0DC9                                 l11183 0DB0  
                               l11175 0D90                                 l11167 0D7A  
                               l11159 0D68                                 l11247 0A7D  
                               l11239 0A3F                                 l11255 07F5  
                               l11263 1648                                 l11271 1622  
                               l11351 019F                                 l11343 0158  
                               l11335 0111                                 l11327 00CA  
                               l11319 0083                                 l11431 064C  
                               l11423 0637                                 l11415 0607  
                               l11407 05E7                                 l11503 0881  
                               l11511 0A01                                 l11097 0F76  
                               l11177 0DA1                                 l11169 0D7E  
                               l11185 0DB8                                 l11257 07F9  
                               l11249 07EA                                 l11265 1649  
                               l11273 1623                                 l11281 1737  
                               l11353 01D5                                 l11345 018E  
                               l11337 0147                                 l11329 0100  
                               l11361 0C16                                 l11441 0679  
                               l11433 065D                                 l11425 063D  
                               l11417 0608                                 l11409 05EE  
                               l11505 0887                                 l11513 0A30  
                               l11521 0BB1                                 l11601 0586  
                  ??_driveForDistance 0038                                 l11099 0F77  
                               l11187 0DBC                                 l11179 0DA7  
                               l11259 1643                                 l11267 161D  
                               l11283 173B                                 l11275 1721  
                               l11291 09C8                                 l11355 01D6  
                               l11347 018F                                 l11339 0148  
                               l11371 0C34                                 l11363 0C1A  
                               l11451 06A5                                 l11443 067D  
                               l11435 0665                                 l11427 0643  
                               l11419 0635                                 l11507 088D  
                               l11515 0991                                 l11523 0BBF  
                               l11531 16DC                                 l11603 0594  
                               l11611 05B7                                 l10821 17E4  
                               l10901 0AEE                                 l11189 0DC2  
                               l11269 1620                                 l11285 173F  
                               l11277 1723                                 l11293 09CD  
                               l11357 01D7                                 l11349 0190  
                               l11373 0C3D                                 l11365 0C1C  
                               l11381 096A                                 l11453 06C1  
                               l11445 068E                                 l11437 066D  
                               l11429 0648                                 l11461 0A96  
                               l11509 0CA0                                 l11517 09B9  
                               l11525 16BF                                 l11605 0595  
                               l11541 04E6                                 l11533 04D2  
                               l11613 1743                                 l11621 0C65  
                               l11701 0D18                                 l10751 15B6  
                               l10831 17F0                                 l10823 17E6  
                               l10815 17D8                                 l10903 0AF3  
                               l11287 1740                                 l11279 172D  
                               l11295 09E8                                 l11359 01DC  
                               l11375 0C4A                                 l11367 0C29  
                               l11383 0970                                 l11391 081A  
                               l11447 0696                                 l11439 0674  
                               l11455 1703                                 l11471 0AB0  
                               l11463 0A99                                 l11519 0B89  
                               l11527 16C7                                 l11607 05A5  
                               l11551 0500                                 l11535 04D5  
                               l11543 04E7                                 l11615 175E  
                               l11623 0C76                                 l11631 0927  
                               l11703 0D1C                                 l11711 01E4  
                               l10753 15BA                                 l10761 080A  
                               l10833 17F1                                 l10825 17E7  
                               l10817 17DB                                 l10841 15FA  
                               l11289 1742                                 l11297 09F1  
                               l11377 0C4B                                 l11369 0C30  
                               l11385 0978                                 l11393 0827  
                               l11449 069E                                 l11457 1720  
                               l11473 0ABE                                 l11465 0A9A  
                               l11481 176A                                 l11529 16CD  
                               l11553 0503                                 l11545 04F4  
                               l11561 0512                                 l11537 04DA  
                               l11609 05A6                                 l11617 1765  
                               l11625 0C86                                 l11641 093A  
                               l11633 092A                                 l11705 0D24  
                               l11721 020B                                 l11713 01EA  
                               l11801 16BA                                 l10747 15B1  
                               l10691 0813                                 l10763 080B  
                               l10755 0800                                 l10771 16E2  
                               l10835 17F4                                 l10827 17EA  
                               l10819 17E3                                 l10843 15FE  
                               l10851 15C0                                 l11299 160B  
                               l11387 0980                                 l11379 095D  
                               l11395 082F                                 l11467 0A9B  
                               l11459 0A81                                 l11475 15E4  
                               l11483 1776                                 l11491 086D  
                               l11571 0534                                 l11563 0522  
                               l11555 0508                                 l11547 04F7  
                               l11539 04E0                                 l11627 0C91  
                               l11619 0C59                                 l11651 0948  
                               l11643 093B                                 l11635 092F  
                               l11707 0D25                                 l11731 0257  
                               l11723 0221                                 l11715 01EB  
                               l11803 16BB                                 l11811 039B  
                               l10749 15B5                                 l10693 0815  
                               l10765 0811                                 l10757 0806  
                               l10781 16FE                                 l10773 16E4  
                               l10837 17F5                                 l10829 17ED  
                               l10845 1604                                 l10853 15C4  
                               l10861 15CE                                 l10941 089D  
                               l11389 0988                                 l11397 0837  
                               l11469 0AAC                                 l11477 15E5  
                               l11485 177D                                 l11493 0870  
                               l11581 0557                                 l11573 0538  
                               l11565 0527                                 l11557 050B  
                               l11549 04F9                                 l11653 0949  
                               l11645 093D                                 l11637 0934  
                               l11629 0924                                 l11661 08C0  
                               l11709 0D37                                 l11741 0291  
                               l11733 025C                                 l11725 0226  
                               l11717 01FA                                 l11805 16BD  
                               l11821 03D7                                 l11813 039F  
                               l11901 0EE5                                 l10767 0813  
                               l10759 0808                                 l10775 16ED  
                               l10839 17F6                                 l10847 15BB  
                               l10855 15C5                                 l10863 15D7  
                               l10943 08AA                                 l11399 1687  
                               l11479 1769                                 l11487 15EF  
                               l11495 0871                                 l11591 0572  
                               l11583 055B                                 l11575 053E  
                               l11567 052B                                 l11559 0511  
                               l11655 094A                                 l11647 0941  
                               l11639 0938                                 l11671 08E3  
                               l11663 08C4                                 l11751 02AC  
                               l11743 0294                                 l11727 023C  
                               l11735 0275                                 l11719 01FC  
                               l11823 03E1                                 l11815 03AD  
                               l11831 040A                                 l11807 038F  
                               l11911 0F13                                 l11903 0EF7  
                               l10769 0816                                 l10777 16F5  
                               l10849 15BF                                 l10857 15C9  
                               l10865 15DB                                 l10945 08B8  
                               l10937 0894                                 l11497 0874  
                               l11489 0869                                 l11593 0576  
                               l11585 055D                                 l11577 0549  
                               l11569 0530                                 l11657 094F  
                               l11649 0945                                 l11673 08E9  
                               l11665 08D0                                 l11681 0913  
                               l11761 02FF                                 l11753 02B1  
                               l11745 0299                                 l11737 027B  
                               l11729 0241                                 l11841 0461  
                               l11833 0410                                 l11825 03E8  
                               l11817 03AE                                 l11809 0395  
                               l11921 0F41                                 l11913 0F25  
                               l11905 0EFD                                 l10779 16FB  
                               l10859 15CA                                 l10867 15DD  
                               l10891 0ACD                                 l10947 08BF  
                               l10939 0899                                 l11499 0875  
                               l11595 0578                                 l11587 0567  
                               l11579 054A                                 l11659 0954  
                               l11667 08DC                                 l11683 0916  
                               l11675 08F1                                 l11691 0CF9  
                               l11771 031E                                 l11763 0307  
                               l11747 02A0                                 l11739 0289  
                               l11755 02BD                                 l11851 049D  
                               l11843 0465                                 l11835 041C  
                               l11827 03F4                                 l11819 03C1  
                               l11923 0F53                                 l11915 0F2B  
                               l11907 0F08                                 l11931 0BE6  
                               l10869 15E0                                 l10893 0AD3  
                               l11597 057C                                 l11589 0568  
                               l11669 08E2                                 l11685 091C  
                               l11677 0907                                 l11693 0D00  
                               l11781 0360                                 l11773 0322  
                               l11765 030A                                 l11757 02D3  
                               l11749 02A8                                 l11853 04AD  
                               l11845 0481                                 l11837 0458  
                               l11829 03FC                                 l11861 0851  
                               l11917 0F36                                 l11909 0F0C  
                               l11933 0BF0                                 l11925 0BCE  
                               l11941 0E47                                 l10895 0ADA  
                               l10887 0ABF                                 l11599 0580  
                               l11679 090D                                 l11695 0D04  
                               l11687 0CEC                                 l11791 0381  
                               l11783 0366                                 l11775 0327  
                               l11767 030F                                 l11759 02D9  
                               l11855 04C3                                 l11847 048E  
                               l11839 0459                                 l11863 0857  
                               l11871 1663                                 l11919 0F3A  
                               l11935 0BFA                                 l11927 0BD2  
                               l11951 0E76                                 l11943 0E57  
                               l10897 0AE0                                 l10889 0AC7  
                               l11697 0D0B                                 l11689 0CF3  
                               l11785 0374                                 l11769 0316  
                               l11777 0332                                 l11793 0389  
                               l11849 0493                                 l11865 0862  
                               l11857 0840                                 l11881 17A7  
                               l11873 178B                                 l11937 0C04  
                               l11929 0BDC                                 l11961 0E9C  
                               l11953 0E80                                 l11945 0E5D  
                               l10899 0AE7                                 l11699 0D11  
                               l11787 037F                                 l11779 0352  
                               l11795 16A3                                 l11859 084C  
                               l11867 1654                                 l11875 1797  
                               l11891 17CE                                 l11883 17B1  
                               l11939 0C0A                                 l11971 0EB8  
                               l11963 0EA1                                 l11955 0E85  
                               l11947 0E69                                 l11789 0380  
                               l11797 16B7                                 l11869 1660  
                               l11877 179C                                 l11885 17BD  
                               l11893 0EC9                                 l11965 0EAA  
                               l11957 0E89                                 l11949 0E70  
                               l11973 0EC1                                 l11799 16B9  
                               l11879 17A2                                 l11887 17C2  
                               l11895 0ECF                                 l11967 0EAF  
                               l11959 0E8F                                 l11889 17C8  
                               l11897 0EDA                                 l11969 0EB4  
                               l11899 0EDE                                 ?_isr1 0072  
                               ?_main 0072                                 ?_init 0072  
                     __end_of___awdiv 0DCA                  __size_of_checkIfHome 0020  
                               _EEADR 010D                                 _CARRY 0018  
                     __end_of___ftmul 06C2                       ___awdiv@divisor 0030  
                     __end_of___fttol 1000                       __end_of___lwmod 0B45  
                     ___awdiv@counter 0035                                 _RCREG 001A  
                               _SPBRG 0099                                 _PORTA 0005  
                               _PORTC 0007                                 _PORTD 0008  
                               _PORTE 0009                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                                 _TRISE 0089  
       __size_of_getSomethingInTheWay 0005                                 _TXREG 0019  
              lcd_write_data@databyte 002C                       __end_of_goRight 17D8  
findFinalDestination@robotOrientation 002F                    _getSuccessfulDrive 15D7  
                     __end_of_convert 01E4                                 _drive 095A  
                     ?_updateLocation 0072                         ___ftpack@sign 002E  
                               _start 00C0                        __pbitbssCOMMON 0380  
                     __end_of_waitFor 0840                                 pclath 000A  
                 ?_getSuccessfulDrive 0072                       ?_lcd_write_data 0072  
                   ?_adc_read_channel 0045                       _successfulDrive 038A  
                               status 0003                                 wtemp0 007E  
                  ??_adc_read_channel 0047                  __end_of_goToNextCell 0C13  
          __size_of_lcd_write_control 0014                          __end_of_isr1 0799  
                        __end_of_main 0EC9                          __end_of_init 095A  
          __size_of_updateOrientation 0011                  ??_getSuccessfulDrive 002A  
                              ??_isr1 0020                                ??_main 005A  
                       ___fttol@sign1 003A                                ??_init 0035  
                __size_of_getCurrentX 0005                  __size_of_getCurrentY 0005  
                              _ADCON0 001F                                _ADCON1 009F  
                              ?_drive 002C                                _ADRESH 001E  
                              _ADRESL 009E                                _EEDATA 010C  
                              _EECON1 018C                                _EECON2 018D  
    findFinalDestination@virtualWallX 0031      findFinalDestination@virtualWallY 002E  
                    ___awdiv@dividend 0032                      __end_of___ftpack 0E47  
                    __end_of___lbtoft 1721                      __end_of_adc_read 0A7E  
                              i1l6750 0B17                                i1l5950 0740  
                              i1l6751 0B0B                                i1l5951 0748  
                              i1l6752 0B1C                                i1l5952 0767  
                              i1l6753 0B1D                                i1l5945 078D  
                              i1l5953 0766                                i1l6754 0B2E  
                              i1l5954 078C                                i1l5946 06E7  
                              i1l6755 0B3C                                i1l5955 078B  
                              i1l5947 0700                                i1l6756 0B44  
                              i1l5948 0711                                i1l5956 078D  
                              i1l6749 0B3D                                i1l5949 0741  
                              i1l9531 06C6                                i1l9541 06E7  
                              i1l9533 06C7                                i1l9551 0739  
                              i1l9543 06FE                                i1l9535 06CF  
                              i1l9561 0755                                i1l9553 073E  
                              i1l9545 0700                                i1l9537 06D0  
                              i1l9529 06C2                                i1l9651 0B17  
                              i1l9643 0B01                                i1l9571 0771  
                              i1l9563 075B                                i1l9555 0744  
                              i1l9547 0717                                i1l9539 06E5  
                              i1l9653 0B1D                                i1l9645 0B07  
                              i1l9661 0B3D                                i1l9573 0779  
                              i1l9565 0761                                i1l9557 0748  
                              i1l9549 071D                                i1l9663 0B44  
                              i1l9655 0B27                                i1l9647 0B0B  
                              i1l9575 077D                                i1l9559 074D  
                              i1l9567 0767                                i1l9657 0B2E  
                              i1l9649 0B12                                i1l9577 0781  
                              i1l9569 076B                                i1l9659 0B35  
                              i1l9579 0787                                u340_20 0771  
                              u332_20 06C6                                u340_21 0770  
                              u332_21 06C5                                u341_20 0787  
                              u333_20 06E5                                u341_21 0786  
                              u333_21 06E4                                u334_20 06FE  
                              u334_21 06FD                                u335_20 0717  
                              u335_21 0716                                u336_20 0739  
                              u336_21 0738                                u360_25 0B2F  
                              u361_20 0B3B                                u337_20 074D  
                              u361_21 0B3A                                u337_21 074C  
                              u338_20 0761                                u338_21 0760  
                              u339_20 076B                                u339_21 076A  
                              u356_20 0B07                                u356_21 0B06  
                              u357_25 0B0C                                u358_20 0B1B  
                              u358_21 0B1A                                u359_20 0B27  
                              u359_21 0B26                                u359_25 0B23  
                              _TMR0IE 005D                                _TMR0IF 005A  
                              _SSPCON 0014                                _SSPBUF 0013  
                    convert@adc_value 0041                     rotateIR@direction 002A  
       goParallel@angleParallelToWall 00ED                ?_lcd_write_1_digit_bcd 0072  
                    __end_of_findWall 16BF                      __end_of_lcd_init 0894  
                              ___wmul 0894                             ??___awdiv 0034  
                              _goLeft 178B                             ??___ftmul 004E  
                           ??___fttol 0036                                _finalX 005E  
                              _finalY 005F                             ??___lwmod 0076  
                              _xCoord 0064                                _yCoord 0065  
                              _readIR 1743                      __end_of_init_adc 0800  
                    ___awdiv@quotient 0037              __end_of_lcd_write_string 178B  
                              _moving 0388                             ??_goRight 0042  
                              _rxfifo 00A0                                clrloop 15D0  
                              _txfifo 00B0                                _rxiptr 0078  
                              _rxoptr 0079                                _txiptr 007A  
               ___ftmul@f3_as_product 0053                             ??_convert 0043  
                              _txoptr 007B                      __end_of_ser_init 1800  
                    __end_of_ser_isrx 0817                                saved_w 007E  
                           ??_waitFor 002E                      __end_of_rotateIR 0C59  
                   lcd_write_string@s 002E                 play_iCreate_song@song 002C  
                          ___lbtoft@c 0047                            ___ftmul@f1 0048  
                          ___ftmul@f2 004B                         rotateIR@steps 002E  
                          ___fttol@f1 0032                        __pcstackCOMMON 0072  
                        __pidataBANK0 15AE                          __pidataBANK1 166D  
                        __pidataBANK3 0799                         __end_of_drive 0991  
                      goParallel@step 00EB                     _play_iCreate_song 1608  
                  __size_of_goForward 0019                    __size_of_getFinalX 0005  
                  __size_of_getFinalY 0005                      ??_lcd_set_cursor 002D  
                  __size_of_goReverse 0047                    ?_play_iCreate_song 0072  
                  __size_of_findWalls 0091                            _goBackward 0840  
                             ??_drive 002F                   ??_play_iCreate_song 002C  
                          __pbssBANK0 005B                            __pbssBANK1 00A0  
               __size_of_goToNextCell 0045                    __size_of_initSongs 004C  
                   drive@lowByteSpeed 002C                            __pmaintext 0E47  
                          _goParallel 038F                               ?___wmul 002A  
                             ?_goLeft 0072                            __pintentry 0004  
               goParallel@stepsToWall 00E4             __end_of_play_iCreate_song 161A  
                             ?_readIR 0049                          ?_turnRight90 0072  
                          __ptext1900 05D4                            __ptext1901 1687  
                          __ptext1910 1640                            __ptext1902 0817  
                          __ptext1911 07EA                            __ptext1903 095A  
                          __ptext1920 15C5                            __ptext1912 0A3F  
                          __ptext1904 0C13                            __ptext1921 15C0  
                          __ptext1913 0D54                            __ptext1905 0015  
                          __ptext1930 0B01                            __ptext1922 15BB  
                          __ptext1914 0F5A                            __ptext1906 1608  
                          __ptext1931 0000                            __ptext1923 15F7  
                          __ptext1915 0DCA                            __ptext1907 09C8  
                          __ptext1924 17D8                            __ptext1916 0894  
                          __ptext1908 1721                            __ptext1925 16DF  
                          __ptext1917 0ABF                            __ptext1909 161A  
                          __ptext1926 0800                            __ptext1918 15D7  
                          __ptext1927 15B6                            __ptext1919 15CA  
                          __ptext1928 15B1                            __ptext1880 16A3  
                          __ptext1929 06C2                            __ptext1881 01E4  
                          __ptext1873 0BCE                            __ptext1890 0B89  
                          __ptext1882 0CEC                            __ptext1874 0EC9  
                          __ptext1891 0991                            __ptext1883 08F1  
                          __ptext1875 17B1                            __ptext1892 0A01  
                          __ptext1884 08C0                            __ptext1876 178B  
                          __ptext1893 0CA0                            __ptext1885 0924  
                          __ptext1877 1654                            __ptext1894 0869  
                          __ptext1886 0C59                            __ptext1878 0840  
                          __ptext1895 15EC                            __ptext1887 1743  
                          __ptext1879 038F                            __ptext1896 1766  
                          __ptext1888 04CF                            __ptext1897 15E1  
                          __ptext1889 16BF                            __ptext1898 0A7E  
                          __ptext1899 1700                    __size_of_ser_getch 0022  
                           ?___ftpack 002A                             ?___lbtoft 0040  
                           ?_adc_read 0039                    __size_of_ser_putch 0021  
            _checkForFinalDestination 08C0                      ??_updateLocation 002E  
                        _goToNextCell 0BCE                      ??_lcd_write_data 002A  
                           ?_findWall 0072             __size_of_driveForDistance 01AB  
                      waitFor@lowByte 002D                __size_of_lookForVictim 0033  
                           ?_lcd_init 0072                               _SSPSTAT 0094  
                  goParallel@distance 00E9                             ?_init_adc 0072  
                   __end_of_goForward 166D                     __end_of_getFinalX 15B6  
                   __end_of_getFinalY 15BB          __end_of_getSomethingInTheWay 15CF  
                   __end_of_goReverse 0CA0                            _initIRobot 1687  
                   __end_of_findWalls 0F5A                             ?_ser_init 0072  
                           ?_ser_isrx 0072         __size_of_findFinalDestination 0105  
                             ___awdiv 0D54            goParallel@shortestDistance 00E5  
                           ?_rotateIR 002A                       __size_of___wmul 002C  
                             ___ftmul 05D4                               ___fttol 0F5A  
                       ??_checkIfHome 0033                               ___lwmod 0B01  
                     __size_of_goLeft 0026                       __size_of_readIR 0023  
           __size_of_adc_read_channel 0041                            ??___ftpack 002F  
                          ??___lbtoft 0043                               _goRight 17B1  
                          ??_adc_read 003B                               _convert 0015  
                         waitFor@type 0031                     __end_of_initSongs 0CEC  
        driveForDistance@moveDistance 0036                               _waitFor 0817  
                             _ser_tmp 0061                               _vicZone 00C7  
                         ?_goBackward 0072                               _wayWent 00C9  
                 driveForDistance@low 003F                           ser_putArr@i 0033  
                          ??_findWall 004D               __size_of_getOrientation 0005  
                          ??_lcd_init 002D                  end_of_initialization 0B85  
                   __end_of_ser_getch 1743                               init_ram 1631  
                      _superMarioBros 01C8                            ??_init_adc 002A  
             ??_lcd_write_1_digit_bcd 002D                     __end_of_ser_putch 1700  
                          ??_ser_init 002A                            ??_ser_isrx 002A  
                          _ser_putArr 09C8                           ?_goParallel 0072  
                       _lookForVictim 08F1                            ??_rotateIR 002B  
          __size_of_play_iCreate_song 0012           __size_of_getSuccessfulDrive 000A  
                   ?_lcd_write_string 0072                         ??_getCurrentX 002A  
                       ??_getCurrentY 002A                            _victimZone 00C8  
                  ??_lcd_write_string 002D                   __end_of_checkIfHome 16DF  
                   adc_read@adc_value 003F                            _updateNode 0ABF  
                         ?_initIRobot 0072                           ___ftmul@exp 0052  
                          _turnLeft90 0991                        ?_lookForVictim 0072  
                          _turnAround 0B89                   __size_of_goBackward 0029  
                      __end_of___wmul 08C0                        __end_of_goLeft 17B1  
                      __end_of_readIR 1766                  __size_of_turnRight90 003E  
                _getSomethingInTheWay 15CA                   start_initialization 0B45  
                 __end_of_getCurrentX 15C0                   __end_of_getCurrentY 15C5  
                    _driveForDistance 01E4                   __size_of_goParallel 0140  
         driveForDistance@virtualWall 0040                 lcd_set_cursor@address 002D  
                         ?_ser_putArr 002C            ??_checkForFinalDestination 002E  
                      _RTC_FLAG_500MS 0382                              ??___wmul 002E  
                            ??_goLeft 0042                           __pdataBANK0 0063  
                         __pdataBANK1 00CA                           __pdataBANK3 0190  
                         _checkIfHome 16BF                              ??_readIR 004B  
                    _adc_read_channel 0A7E                 ?_getSomethingInTheWay 0072  
                   __size_of___ftpack 007D                     __size_of___lbtoft 0021  
                   __size_of_adc_read 003F                           __pbssCOMMON 0078  
                         ?_updateNode 0072                         __pcstackBANK0 0020  
                       __pcstackBANK1 00E4                   __size_of_initIRobot 001C  
                      _getOrientation 15C5                     _somethingInTheWay 0063  
                   __size_of_findWall 001C                     __size_of_lcd_init 002B  
                  drive@lowByteRadius 002E                             _champions 00CA  
                   __size_of_init_adc 0016                       ??_lookForVictim 002E  
                           _goForward 1654                           ?_turnLeft90 0072  
                           _getFinalX 15B1                             _getFinalY 15B6  
                         ?_turnAround 0072                              ?___awdiv 0030  
                           _goReverse 0C59                              ?___ftmul 0048  
                   __size_of_ser_init 0028                              ?___fttol 0032  
                   __size_of_ser_isrx 0017                              ?___lwmod 0072  
                           _findWalls 0EC9                             __pstrings 1000  
                   __size_of_rotateIR 0046                              ?_goRight 0072  
                         _getCurrentX 15BB                           _getCurrentY 15C0  
                            ?_convert 0041                        _finalCountdown 01AD  
                           _goingHome 0385                __end_of_getOrientation 15CA  
        __end_of_findFinalDestination 05D4                              ?_waitFor 002C  
                        ??_goBackward 0042                            ser_getch@c 002B  
                           _initSongs 0CA0                   __size_of_ser_putArr 0039  
                      __size_of_drive 0037                             _frontWall 0384  
             __size_of_lcd_set_cursor 000B                     interrupt_function 0004  
                      ___wmul@product 002E                            ser_putch@c 002B  
      __size_of_lcd_write_1_digit_bcd 000B         __end_of_lcd_write_1_digit_bcd 15F7  
                     waitFor@highByte 002C                             _rightWall 0389  
                           _ser_getch 1721                            ?_goForward 0072  
                        ??_goParallel 0058                             _ser_putch 16DF  
                          ?_getFinalX 0072                            ?_getFinalY 0072  
                 __size_of_updateNode 0042                            ?_goReverse 0072  
                  __end_of_goBackward 0869                            ?_findWalls 0072  
               driveForDistance@cliff 0041                           __stringbase 1005  
              ??_getSomethingInTheWay 002A                     ___wmul@multiplier 002A  
                     ?_getOrientation 0072                            ?_initSongs 0072  
                 __size_of_turnLeft90 0037                   __size_of_turnAround 0045  
                  __end_of_goParallel 04CF               __size_of_updateLocation 0068  
           __size_of_lcd_write_string 0025                   lookForVictim@victim 002F  
                        ??_initIRobot 002C               __size_of_lcd_write_data 0013  
                          ?_ser_getch 0072      __end_of_checkForFinalDestination 08F1  
                        _lookingForU2 0190                            ?_ser_putch 0072  
             adc_read_channel@channel 0048                         _RTC_FLAG_10MS 0380  
                       _RTC_FLAG_50MS 0383                             init_fetch 162D  
            __end_of_driveForDistance 038F            __end_of_getSuccessfulDrive 15E1  
                    __size_of___awdiv 0076                    _currentOrientation 005D  
                    __size_of___ftmul 00EE                      __size_of___fttol 00A6  
                    __size_of___lwmod 0044                              ___ftpack 0DCA  
                            ___lbtoft 1700                              _adc_read 0A3F  
                    __size_of_goRight 0027                      __size_of_convert 01CF  
                  __end_of_initIRobot 16A3                      __size_of_waitFor 0029  
                            _findWall 16A3                              _lcd_init 0869  
                            _leftWall 0387              __end_of_adc_read_channel 0ABF  
           lcd_write_control@databyte 002C                              _lastMove 0060  
                            _init_adc 07EA                         __size_of_isr1 00D7  
                       __size_of_main 0082                         __size_of_init 0036  
                            clear_ram 15CF               goParallel@angleHighByte 00E7  
                            _ser_init 17D8                           ??_goForward 0042  
                        ??_ser_putArr 0030                              _ser_isrx 0800  
                         ??_getFinalX 002A                           ??_getFinalY 002A  
                _findFinalDestination 04CF                  driveForDistance@high 003E  
                         ??_goReverse 0033                              _rotateIR 0C13  
                         ??_findWalls 004D                          ?_checkIfHome 0072  
                       ??_turnRight90 0033                              readIR@cm 004B  
                        ??_updateNode 002A                         ?_goToNextCell 0072  
       driveForDistance@deltaDistance 003A                          _RTC_FLAG_1MS 0381  
                         ??_initSongs 0035                    __end_of_ser_putArr 0A01  
                            intlevel1 0000                        _lcd_set_cursor 15E1  
                    ___lwmod@dividend 0074                             stringcode 1000  
                         ??_ser_getch 002A                          ??_turnLeft90 0033  
               ?_findFinalDestination 002E                           ??_ser_putch 002A  
                        ??_turnAround 0033                  _stepsToPerpendicular 00C6  
                  __end_of_updateNode 0B01                goParallel@angleLowByte 00E8  
                   _lcd_write_control 1640                     _updateOrientation 15F7  
                  ?_lcd_write_control 0072                updateOrientation@moved 002B  
                        ?_getCurrentX 0072                          ?_getCurrentY 0072  
                          _OPTION_REG 0081                    ?_updateOrientation 0072  
                     ___lwmod@divisor 0072                        ??_goToNextCell 0043  
                     ___lwmod@counter 0077                   __end_of_turnRight90 0A3F  
                            stringdir 1000              driveForDistance@distance 003C  
                            stringtab 1000     __size_of_checkForFinalDestination 0031  
                       _closestObject 00C3             ?_checkForFinalDestination 0072  
                 ??_lcd_write_control 002A                __end_of_lcd_set_cursor 15EC  
                 ??_updateOrientation 002A                    __end_of_turnLeft90 09C8  
                  __end_of_turnAround 0BCE                        _updateLocation 0CEC  
                    _lcd_write_string 1766                           _RTC_Counter 005B  
                      _lcd_write_data 161A                       ser_putArr@array 002C  
                    ser_putArr@length 002E  
