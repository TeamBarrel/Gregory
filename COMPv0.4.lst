

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Wed May 22 23:59:02 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COM
                                 PETITIONv0.4\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COM
                                 PETITIONv0.4\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_lcd_set_cursor
    49                           	FNCALL	_main,_lcd_write_string
    50                           	FNCALL	_main,_checkForFinalDestination
    51                           	FNCALL	_main,_lookForVictim
    52                           	FNCALL	_main,_findWalls
    53                           	FNCALL	_main,_goToNextCell
    54                           	FNCALL	_main,_getSuccessfulDrive
    55                           	FNCALL	_main,_updateLocation
    56                           	FNCALL	_main,_updateNode
    57                           	FNCALL	_main,_checkIfHome
    58                           	FNCALL	_goToNextCell,_goLeft
    59                           	FNCALL	_goToNextCell,_goForward
    60                           	FNCALL	_goToNextCell,_goRight
    61                           	FNCALL	_goToNextCell,_goBackward
    62                           	FNCALL	_findWalls,_lcd_set_cursor
    63                           	FNCALL	_findWalls,_findWall
    64                           	FNCALL	_findWalls,_lcd_write_data
    65                           	FNCALL	_findWalls,_rotateIR
    66                           	FNCALL	_findWalls,_frontWallCorrect
    67                           	FNCALL	_findWalls,_rightWallCorrect
    68                           	FNCALL	_goRight,_lcd_set_cursor
    69                           	FNCALL	_goRight,_lcd_write_data
    70                           	FNCALL	_goRight,_turnRight90
    71                           	FNCALL	_goRight,_updateOrientation
    72                           	FNCALL	_goRight,_driveForDistance
    73                           	FNCALL	_goLeft,_lcd_set_cursor
    74                           	FNCALL	_goLeft,_lcd_write_data
    75                           	FNCALL	_goLeft,_turnLeft90
    76                           	FNCALL	_goLeft,_updateOrientation
    77                           	FNCALL	_goLeft,_driveForDistance
    78                           	FNCALL	_goForward,_lcd_set_cursor
    79                           	FNCALL	_goForward,_lcd_write_data
    80                           	FNCALL	_goForward,_driveForDistance
    81                           	FNCALL	_goBackward,_lcd_set_cursor
    82                           	FNCALL	_goBackward,_lcd_write_data
    83                           	FNCALL	_goBackward,_turnAround
    84                           	FNCALL	_goBackward,_updateOrientation
    85                           	FNCALL	_goBackward,_driveForDistance
    86                           	FNCALL	_findWall,_readIR
    87                           	FNCALL	_frontWallCorrect,_drive
    88                           	FNCALL	_frontWallCorrect,_readIR
    89                           	FNCALL	_rightWallCorrect,_turnRight90
    90                           	FNCALL	_rightWallCorrect,_rotateIR
    91                           	FNCALL	_rightWallCorrect,_drive
    92                           	FNCALL	_rightWallCorrect,_readIR
    93                           	FNCALL	_rightWallCorrect,_turnLeft90
    94                           	FNCALL	_driveForDistance,_drive
    95                           	FNCALL	_driveForDistance,_ser_putch
    96                           	FNCALL	_driveForDistance,_ser_getch
    97                           	FNCALL	_driveForDistance,_detectCliff
    98                           	FNCALL	_driveForDistance,_goReverse
    99                           	FNCALL	_updateLocation,_lcd_set_cursor
   100                           	FNCALL	_updateLocation,_lcd_write_data
   101                           	FNCALL	_updateLocation,_getOrientation
   102                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
   103                           	FNCALL	_lookForVictim,_play_iCreate_song
   104                           	FNCALL	_lookForVictim,_lcd_set_cursor
   105                           	FNCALL	_lookForVictim,_lcd_write_data
   106                           	FNCALL	_lookForVictim,_getVictimZone
   107                           	FNCALL	_lookForVictim,_lcd_write_1_digit_bcd
   108                           	FNCALL	_checkForFinalDestination,_getFinalX
   109                           	FNCALL	_checkForFinalDestination,_getFinalY
   110                           	FNCALL	_checkForFinalDestination,_play_iCreate_song
   111                           	FNCALL	_checkForFinalDestination,_lcd_set_cursor
   112                           	FNCALL	_checkForFinalDestination,_lcd_write_data
   113                           	FNCALL	_init,_init_adc
   114                           	FNCALL	_init,_lcd_init
   115                           	FNCALL	_init,_ser_init
   116                           	FNCALL	_init,_initIRobot
   117                           	FNCALL	_init,_initSongs
   118                           	FNCALL	_readIR,_adc_read_channel
   119                           	FNCALL	_readIR,_convert
   120                           	FNCALL	_goReverse,_lcd_set_cursor
   121                           	FNCALL	_goReverse,_lcd_write_data
   122                           	FNCALL	_goReverse,_drive
   123                           	FNCALL	_goReverse,_waitFor
   124                           	FNCALL	_goReverse,_updateOrientation
   125                           	FNCALL	_checkIfHome,_drive
   126                           	FNCALL	_checkIfHome,_play_iCreate_song
   127                           	FNCALL	_initSongs,_ser_putArr
   128                           	FNCALL	_lcd_init,_lcd_write_control
   129                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
   130                           	FNCALL	_lcd_write_string,_lcd_write_data
   131                           	FNCALL	_turnRight90,_drive
   132                           	FNCALL	_turnRight90,_waitFor
   133                           	FNCALL	_turnLeft90,_drive
   134                           	FNCALL	_turnLeft90,_waitFor
   135                           	FNCALL	_turnAround,_drive
   136                           	FNCALL	_turnAround,_waitFor
   137                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   138                           	FNCALL	_adc_read_channel,_adc_read
   139                           	FNCALL	_detectCliff,_ser_putch
   140                           	FNCALL	_detectCliff,_ser_getch
   141                           	FNCALL	_convert,___wmul
   142                           	FNCALL	_convert,___awdiv
   143                           	FNCALL	_ser_putArr,_ser_putch
   144                           	FNCALL	_play_iCreate_song,_ser_putch
   145                           	FNCALL	_initIRobot,_ser_putch
   146                           	FNCALL	_waitFor,_ser_putch
   147                           	FNCALL	_drive,_ser_putch
   148                           	FNCALL	_adc_read,___awdiv
   149                           	FNCALL	_ser_getch,_ser_isrx
   150                           	FNROOT	_main
   151                           	FNCALL	_isr1,___lwmod
   152                           	FNCALL	intlevel1,_isr1
   153                           	global	intlevel1
   154                           	FNROOT	intlevel1
   155                           	global	_xCoord
   156                           	global	_yCoord
   157                           	global	_lookingForU2
   158                           	global	_finalCountdown
   159                           	global	_superMarioBros
   160                           	global	_champions
   161                           psect	idataCOMMON,class=CODE,space=0,delta=2
   162                           global __pidataCOMMON
   163  07FE                     __pidataCOMMON:
   164                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
   165                           	line	36
   166                           
   167                           ;initializer for _xCoord
   168  07FE  3401               	retlw	01h
   169                           	line	37
   170                           
   171                           ;initializer for _yCoord
   172  07FF  3403               	retlw	03h
   173                           psect	idataBANK3,class=CODE,space=0,delta=2
   174                           global __pidataBANK3
   175  0D47                     __pidataBANK3:
   176                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\songs.c"
   177                           	line	11
   178                           
   179                           ;initializer for _lookingForU2
   180  0D47  348C               	retlw	08Ch
   181  0D48  3402               	retlw	02h
   182  0D49  340D               	retlw	0Dh
   183  0D4A  3448               	retlw	048h
   184  0D4B  341C               	retlw	01Ch
   185  0D4C  3448               	retlw	048h
   186  0D4D  341C               	retlw	01Ch
   187  0D4E  344F               	retlw	04Fh
   188  0D4F  3440               	retlw	040h
   189  0D50  3480               	retlw	080h
   190  0D51  3410               	retlw	010h
   191  0D52  344D               	retlw	04Dh
   192  0D53  341C               	retlw	01Ch
   193  0D54  344C               	retlw	04Ch
   194  0D55  341C               	retlw	01Ch
   195  0D56  3448               	retlw	048h
   196  0D57  3440               	retlw	040h
   197  0D58  3480               	retlw	080h
   198  0D59  3410               	retlw	010h
   199  0D5A  3445               	retlw	045h
   200  0D5B  341C               	retlw	01Ch
   201  0D5C  3445               	retlw	045h
   202  0D5D  341C               	retlw	01Ch
   203  0D5E  3445               	retlw	045h
   204  0D5F  341C               	retlw	01Ch
   205  0D60  3448               	retlw	048h
   206  0D61  341C               	retlw	01Ch
   207  0D62  3448               	retlw	048h
   208  0D63  3440               	retlw	040h
   209                           	line	12
   210                           
   211                           ;initializer for _finalCountdown
   212  0D64  348C               	retlw	08Ch
   213  0D65  3403               	retlw	03h
   214  0D66  340C               	retlw	0Ch
   215  0D67  3449               	retlw	049h
   216  0D68  3408               	retlw	08h
   217  0D69  3447               	retlw	047h
   218  0D6A  3408               	retlw	08h
   219  0D6B  3449               	retlw	049h
   220  0D6C  3420               	retlw	020h
   221  0D6D  3442               	retlw	042h
   222  0D6E  3440               	retlw	040h
   223  0D6F  3480               	retlw	080h
   224  0D70  3420               	retlw	020h
   225  0D71  344A               	retlw	04Ah
   226  0D72  3408               	retlw	08h
   227  0D73  3449               	retlw	049h
   228  0D74  3408               	retlw	08h
   229  0D75  344A               	retlw	04Ah
   230  0D76  3408               	retlw	08h
   231  0D77  3480               	retlw	080h
   232  0D78  340C               	retlw	0Ch
   233  0D79  3449               	retlw	049h
   234  0D7A  3406               	retlw	06h
   235  0D7B  3480               	retlw	080h
   236  0D7C  340C               	retlw	0Ch
   237  0D7D  3447               	retlw	047h
   238  0D7E  3430               	retlw	030h
   239                           psect	idataBANK1,class=CODE,space=0,delta=2
   240                           global __pidataBANK1
   241  0C46                     __pidataBANK1:
   242                           	line	10
   243                           
   244                           ;initializer for _superMarioBros
   245  0C46  348C               	retlw	08Ch
   246  0C47  3401               	retlw	01h
   247  0C48  340B               	retlw	0Bh
   248  0C49  344C               	retlw	04Ch
   249  0C4A  3408               	retlw	08h
   250  0C4B  3480               	retlw	080h
   251  0C4C  3404               	retlw	04h
   252  0C4D  344C               	retlw	04Ch
   253  0C4E  3410               	retlw	010h
   254  0C4F  3480               	retlw	080h
   255  0C50  3404               	retlw	04h
   256  0C51  344C               	retlw	04Ch
   257  0C52  3410               	retlw	010h
   258  0C53  3480               	retlw	080h
   259  0C54  3404               	retlw	04h
   260  0C55  3448               	retlw	048h
   261  0C56  3408               	retlw	08h
   262  0C57  344C               	retlw	04Ch
   263  0C58  3410               	retlw	010h
   264  0C59  344F               	retlw	04Fh
   265  0C5A  3420               	retlw	020h
   266  0C5B  3480               	retlw	080h
   267  0C5C  3408               	retlw	08h
   268  0C5D  3443               	retlw	043h
   269  0C5E  3410               	retlw	010h
   270                           	line	13
   271                           
   272                           ;initializer for _champions
   273  0C5F  348C               	retlw	08Ch
   274  0C60  3404               	retlw	04h
   275  0C61  3409               	retlw	09h
   276  0C62  344A               	retlw	04Ah
   277  0C63  3440               	retlw	040h
   278  0C64  3449               	retlw	049h
   279  0C65  3410               	retlw	010h
   280  0C66  344A               	retlw	04Ah
   281  0C67  3410               	retlw	010h
   282  0C68  3449               	retlw	049h
   283  0C69  3430               	retlw	030h
   284  0C6A  3445               	retlw	045h
   285  0C6B  3430               	retlw	030h
   286  0C6C  3480               	retlw	080h
   287  0C6D  3420               	retlw	020h
   288  0C6E  3442               	retlw	042h
   289  0C6F  341C               	retlw	01Ch
   290  0C70  3447               	retlw	047h
   291  0C71  3420               	retlw	020h
   292  0C72  3442               	retlw	042h
   293  0C73  3430               	retlw	030h
   294                           	global	_rxfifo
   295                           	global	_start
   296                           	global	_RTC_Counter
   297                           	global	_currentOrientation
   298                           	global	_finalX
   299                           	global	_finalY
   300                           	global	_lastMove
   301                           	global	_node
   302                           	global	_rxoptr
   303                           	global	_sensorData
   304                           	global	_ser_tmp
   305                           	global	_txoptr
   306                           	global	_vicZone
   307                           	global	_victimZone
   308                           	global	_wayWent
   309                           	global	_rxiptr
   310                           	global	_txiptr
   311                           	global	_RTC_FLAG_10MS
   312                           	global	_RTC_FLAG_1MS
   313                           	global	_RTC_FLAG_500MS
   314                           	global	_RTC_FLAG_50MS
   315                           	global	_frontWall
   316                           	global	_goingHome
   317                           	global	_home
   318                           	global	_leftWall
   319                           	global	_moving
   320                           	global	_rightWall
   321                           	global	_sensorDetected
   322                           	global	_successfulDrive
   323                           	global	_victimFound
   324                           	global	_txfifo
   325                           	global	_ADCON0
   326  001F                     _ADCON0	set	31
   327                           	global	_ADRESH
   328  001E                     _ADRESH	set	30
   329                           	global	_PORTA
   330  0005                     _PORTA	set	5
   331                           	global	_PORTC
   332  0007                     _PORTC	set	7
   333                           	global	_PORTD
   334  0008                     _PORTD	set	8
   335                           	global	_PORTE
   336  0009                     _PORTE	set	9
   337                           	global	_RCREG
   338  001A                     _RCREG	set	26
   339                           	global	_SSPBUF
   340  0013                     _SSPBUF	set	19
   341                           	global	_SSPCON
   342  0014                     _SSPCON	set	20
   343                           	global	_TMR0
   344  0001                     _TMR0	set	1
   345                           	global	_TXREG
   346  0019                     _TXREG	set	25
   347                           	global	_CARRY
   348  0018                     _CARRY	set	24
   349                           	global	_CHS0
   350  00FB                     _CHS0	set	251
   351                           	global	_CHS1
   352  00FC                     _CHS1	set	252
   353                           	global	_CHS2
   354  00FD                     _CHS2	set	253
   355                           	global	_CREN
   356  00C4                     _CREN	set	196
   357                           	global	_GIE
   358  005F                     _GIE	set	95
   359                           	global	_GO
   360  00FA                     _GO	set	250
   361                           	global	_OERR
   362  00C1                     _OERR	set	193
   363                           	global	_PEIE
   364  005E                     _PEIE	set	94
   365                           	global	_RB0
   366  0030                     _RB0	set	48
   367                           	global	_RCIF
   368  0065                     _RCIF	set	101
   369                           	global	_RE0
   370  0048                     _RE0	set	72
   371                           	global	_RE1
   372  0049                     _RE1	set	73
   373                           	global	_RE2
   374  004A                     _RE2	set	74
   375                           	global	_RX9
   376  00C6                     _RX9	set	198
   377                           	global	_SPEN
   378  00C7                     _SPEN	set	199
   379                           	global	_TMR0IE
   380  005D                     _TMR0IE	set	93
   381                           	global	_TMR0IF
   382  005A                     _TMR0IF	set	90
   383                           	global	_TXIF
   384  0064                     _TXIF	set	100
   385                           	global	_ADCON1
   386  009F                     _ADCON1	set	159
   387                           	global	_ADRESL
   388  009E                     _ADRESL	set	158
   389                           	global	_OPTION_REG
   390  0081                     _OPTION_REG	set	129
   391                           	global	_SPBRG
   392  0099                     _SPBRG	set	153
   393                           	global	_SSPSTAT
   394  0094                     _SSPSTAT	set	148
   395                           	global	_TRISA
   396  0085                     _TRISA	set	133
   397                           	global	_TRISB
   398  0086                     _TRISB	set	134
   399                           	global	_TRISC
   400  0087                     _TRISC	set	135
   401                           	global	_TRISD
   402  0088                     _TRISD	set	136
   403                           	global	_TRISE
   404  0089                     _TRISE	set	137
   405                           	global	_BRGH
   406  04C2                     _BRGH	set	1218
   407                           	global	_RCIE
   408  0465                     _RCIE	set	1125
   409                           	global	_SYNC
   410  04C4                     _SYNC	set	1220
   411                           	global	_TX9
   412  04C6                     _TX9	set	1222
   413                           	global	_TXEN
   414  04C5                     _TXEN	set	1221
   415                           	global	_TXIE
   416  0464                     _TXIE	set	1124
   417                           	global	_EEADR
   418  010D                     _EEADR	set	269
   419                           	global	_EEDATA
   420  010C                     _EEDATA	set	268
   421                           	global	_EECON1
   422  018C                     _EECON1	set	396
   423                           	global	_EECON2
   424  018D                     _EECON2	set	397
   425                           	global	_RD
   426  0C60                     _RD	set	3168
   427                           	global	_WR
   428  0C61                     _WR	set	3169
   429                           	global	_WREN
   430  0C62                     _WREN	set	3170
   431                           psect	strings,class=STRING,delta=2
   432                           global __pstrings
   433  0800                     __pstrings:
   434                           ;	global	stringdir,stringtab,__stringbase
   435  0800                     stringtab:
   436                           ;	String table - string pointers are 1 byte each
   437  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
   438  0800  3008               movlw high(stringdir)
   439  0801  008A               movwf pclath
   440  0802  0804               movf fsr,w
   441  0803  0A84               incf fsr
   442  0804  0782               	addwf pc
   443  0805                     __stringbase:
   444  0805  3400               	retlw	0
   445                           psect	strings
   446                           	
   447  0806                     STR_1:	
   448  0806  3428               	retlw	40	;'('
   449  0807  342D               	retlw	45	;'-'
   450  0808  342C               	retlw	44	;','
   451  0809  342D               	retlw	45	;'-'
   452  080A  3429               	retlw	41	;')'
   453  080B  3420               	retlw	32	;' '
   454  080C  3445               	retlw	69	;'E'
   455  080D  3420               	retlw	32	;' '
   456  080E  342D               	retlw	45	;'-'
   457  080F  342D               	retlw	45	;'-'
   458  0810  3420               	retlw	32	;' '
   459  0811  342D               	retlw	45	;'-'
   460  0812  342D               	retlw	45	;'-'
   461  0813  342D               	retlw	45	;'-'
   462  0814  3420               	retlw	32	;' '
   463  0815  342D               	retlw	45	;'-'
   464  0816  3400               	retlw	0
   465                           psect	strings
   466                           	
   467  0817                     STR_2:	
   468  0817  342D               	retlw	45	;'-'
   469  0818  3420               	retlw	32	;' '
   470  0819  342D               	retlw	45	;'-'
   471  081A  3420               	retlw	32	;' '
   472  081B  342D               	retlw	45	;'-'
   473  081C  3420               	retlw	32	;' '
   474  081D  3428               	retlw	40	;'('
   475  081E  3430               	retlw	48	;'0'
   476  081F  342C               	retlw	44	;','
   477  0820  3430               	retlw	48	;'0'
   478  0821  3429               	retlw	41	;')'
   479  0822  3420               	retlw	32	;' '
   480  0823  3447               	retlw	71	;'G'
   481  0824  3452               	retlw	82	;'R'
   482  0825  3445               	retlw	69	;'E'
   483  0826  3447               	retlw	71	;'G'
   484  0827  3400               	retlw	0
   485                           psect	strings
   486                           	file	"COMPv0.4.as"
   487                           	line	#
   488                           psect cinit,class=CODE,delta=2
   489                           global start_initialization
   490  0EF0                     start_initialization:
   491                           
   492                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   493                           global __pbitbssCOMMON
   494  0380                     __pbitbssCOMMON:
   495  0380                     _RTC_FLAG_10MS:
   496  0380                            ds      1
   497                           
   498  0381                     _RTC_FLAG_1MS:
   499  0381                            ds      1
   500                           
   501  0382                     _RTC_FLAG_500MS:
   502  0382                            ds      1
   503                           
   504  0383                     _RTC_FLAG_50MS:
   505  0383                            ds      1
   506                           
   507  0384                     _frontWall:
   508  0384                            ds      1
   509                           
   510  0385                     _goingHome:
   511  0385                            ds      1
   512                           
   513  0386                     _home:
   514  0386                            ds      1
   515                           
   516  0387                     _leftWall:
   517  0387                            ds      1
   518                           
   519  0388                     _moving:
   520  0388                            ds      1
   521                           
   522  0389                     _rightWall:
   523  0389                            ds      1
   524                           
   525  038A                     _sensorDetected:
   526  038A                            ds      1
   527                           
   528  038B                     _successfulDrive:
   529  038B                            ds      1
   530                           
   531  038C                     _victimFound:
   532  038C                            ds      1
   533                           
   534                           psect	bssCOMMON,class=COMMON,space=1
   535                           global __pbssCOMMON
   536  0078                     __pbssCOMMON:
   537  0078                     _rxiptr:
   538  0078                            ds      1
   539                           
   540  0079                     _txiptr:
   541  0079                            ds      1
   542                           
   543                           psect	dataCOMMON,class=COMMON,space=1
   544                           global __pdataCOMMON
   545  007A                     __pdataCOMMON:
   546                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
   547                           	line	36
   548  007A                     _xCoord:
   549  007A                            ds      1
   550                           
   551                           psect	dataCOMMON
   552                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
   553                           	line	37
   554  007B                     _yCoord:
   555  007B                            ds      1
   556                           
   557                           psect	bssBANK0,class=BANK0,space=1
   558                           global __pbssBANK0
   559  0045                     __pbssBANK0:
   560  0045                     _rxfifo:
   561  0045                            ds      16
   562                           
   563  0055                     _start:
   564  0055                            ds      3
   565                           
   566  0058                     _RTC_Counter:
   567  0058                            ds      2
   568                           
   569  005A                     _currentOrientation:
   570  005A                            ds      1
   571                           
   572  005B                     _finalX:
   573  005B                            ds      1
   574                           
   575  005C                     _finalY:
   576  005C                            ds      1
   577                           
   578  005D                     _lastMove:
   579  005D                            ds      1
   580                           
   581  005E                     _node:
   582  005E                            ds      1
   583                           
   584  005F                     _rxoptr:
   585  005F                            ds      1
   586                           
   587  0060                     _sensorData:
   588  0060                            ds      1
   589                           
   590  0061                     _ser_tmp:
   591  0061                            ds      1
   592                           
   593  0062                     _txoptr:
   594  0062                            ds      1
   595                           
   596  0063                     _vicZone:
   597  0063                            ds      1
   598                           
   599  0064                     _victimZone:
   600  0064                            ds      1
   601                           
   602  0065                     _wayWent:
   603  0065                            ds      1
   604                           
   605                           psect	bssBANK1,class=BANK1,space=1
   606                           global __pbssBANK1
   607  00CE                     __pbssBANK1:
   608  00CE                     _txfifo:
   609  00CE                            ds      16
   610                           
   611                           psect	dataBANK1,class=BANK1,space=1
   612                           global __pdataBANK1
   613  00A0                     __pdataBANK1:
   614                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\songs.c"
   615                           	line	10
   616  00A0                     _superMarioBros:
   617  00A0                            ds      25
   618                           
   619                           psect	dataBANK1
   620                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\songs.c"
   621                           	line	13
   622  00B9                     _champions:
   623  00B9                            ds      21
   624                           
   625                           psect	dataBANK3,class=BANK3,space=1
   626                           global __pdataBANK3
   627  0190                     __pdataBANK3:
   628                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\songs.c"
   629                           	line	11
   630  0190                     _lookingForU2:
   631  0190                            ds      29
   632                           
   633                           psect	dataBANK3
   634                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\songs.c"
   635                           	line	12
   636  01AD                     _finalCountdown:
   637  01AD                            ds      27
   638                           
   639                           psect clrtext,class=CODE,delta=2
   640                           global clear_ram
   641                           ;	Called with FSR containing the base address, and
   642                           ;	W with the last address+1
   643  094E                     clear_ram:
   644  094E  0064               	clrwdt			;clear the watchdog before getting into this loop
   645  094F                     clrloop:
   646  094F  0180               	clrf	indf		;clear RAM location pointed to by FSR
   647  0950  0A84               	incf	fsr,f		;increment pointer
   648  0951  0604               	xorwf	fsr,w		;XOR with final address
   649  0952  1903               	btfsc	status,2	;have we reached the end yet?
   650  0953  3400               	retlw	0		;all done for this memory range, return
   651  0954  0604               	xorwf	fsr,w		;XOR again to restore value
   652  0955  294F               	goto	clrloop		;do the next byte
   653                           
   654                           ; Clear objects allocated to BITCOMMON
   655                           psect cinit,class=CODE,delta=2
   656  0EF0  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   657  0EF1  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   658                           ; Clear objects allocated to COMMON
   659                           psect cinit,class=CODE,delta=2
   660  0EF2  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   661  0EF3  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   662                           ; Clear objects allocated to BANK0
   663                           psect cinit,class=CODE,delta=2
   664  0EF4  1383               	bcf	status, 7	;select IRP bank0
   665  0EF5  3045               	movlw	low(__pbssBANK0)
   666  0EF6  0084               	movwf	fsr
   667  0EF7  3066               	movlw	low((__pbssBANK0)+021h)
   668  0EF8  120A  158A  214E   	fcall	clear_ram
              120A  158A         
   669                           ; Clear objects allocated to BANK1
   670                           psect cinit,class=CODE,delta=2
   671  0EFD  30CE               	movlw	low(__pbssBANK1)
   672  0EFE  0084               	movwf	fsr
   673  0EFF  30DE               	movlw	low((__pbssBANK1)+010h)
   674  0F00  120A  158A  214E   	fcall	clear_ram
              120A  158A         
   675                           global btemp
   676                           psect inittext,class=CODE,delta=2
   677                           global init_fetch,btemp
   678                           ;	Called with low address in FSR and high address in W
   679  09A1                     init_fetch:
   680  09A1  087E               	movf btemp,w
   681  09A2  008A               	movwf pclath
   682  09A3  087F               	movf btemp+1,w
   683  09A4  0082               	movwf pc
   684                           global init_ram
   685                           ;Called with:
   686                           ;	high address of idata address in btemp 
   687                           ;	low address of idata address in btemp+1 
   688                           ;	low address of data in FSR
   689                           ;	high address + 1 of data in btemp-1
   690  09A5                     init_ram:
   691  09A5  120A  158A  21A1   	fcall init_fetch
              120A  158A         
   692  09AA  0080               	movwf indf,f
   693  09AB  0A84               	incf fsr,f
   694  09AC  0804               	movf fsr,w
   695  09AD  067D               	xorwf btemp-1,w
   696  09AE  1903               	btfsc status,2
   697  09AF  3400               	retlw 0
   698  09B0  0AFF               	incf btemp+1,f
   699  09B1  1903               	btfsc status,2
   700  09B2  0AFE               	incf btemp,f
   701  09B3  29A5               	goto init_ram
   702                           ; Initialize objects allocated to BANK3
   703                           psect cinit,class=CODE,delta=2
   704                           global init_ram, __pidataBANK3
   705  0F05  1783               	bsf	status, 7	;select IRP bank2
   706  0F06  30C8               	movlw low(__pdataBANK3+56)
   707  0F07  00FD               	movwf btemp-1,f
   708  0F08  300D               	movlw high(__pidataBANK3)
   709  0F09  00FE               	movwf btemp,f
   710  0F0A  3047               	movlw low(__pidataBANK3)
   711  0F0B  00FF               	movwf btemp+1,f
   712  0F0C  3090               	movlw low(__pdataBANK3)
   713  0F0D  0084               	movwf fsr,f
   714  0F0E  120A  158A  21A5   	fcall init_ram
              120A  158A         
   715                           ; Initialize objects allocated to BANK1
   716                           psect cinit,class=CODE,delta=2
   717                           global init_ram, __pidataBANK1
   718  0F13  1383               	bcf	status, 7	;select IRP bank0
   719  0F14  30CE               	movlw low(__pdataBANK1+46)
   720  0F15  00FD               	movwf btemp-1,f
   721  0F16  300C               	movlw high(__pidataBANK1)
   722  0F17  00FE               	movwf btemp,f
   723  0F18  3046               	movlw low(__pidataBANK1)
   724  0F19  00FF               	movwf btemp+1,f
   725  0F1A  30A0               	movlw low(__pdataBANK1)
   726  0F1B  0084               	movwf fsr,f
   727  0F1C  120A  158A  21A5   	fcall init_ram
              120A  158A         
   728                           ; Initialize objects allocated to COMMON
   729                           	global __pidataCOMMON
   730                           psect cinit,class=CODE,delta=2
   731  0F21  120A  118A  27FE   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  158A         
   732  0F26  00FA               	movwf	__pdataCOMMON+0&07fh		
   733  0F27  120A  118A  27FF   	fcall	__pidataCOMMON+1		;fetch initializer
              120A  158A         
   734  0F2C  00FB               	movwf	__pdataCOMMON+1&07fh		
   735                           psect cinit,class=CODE,delta=2
   736                           global end_of_initialization
   737                           
   738                           ;End of C runtime variable initialization code
   739                           
   740  0F2D                     end_of_initialization:
   741  0F2D  0183               clrf status
   742  0F2E  120A  118A  2DDF   ljmp _main	;jump to C main() function
   743                           psect	cstackBANK1,class=BANK1,space=1
   744                           global __pcstackBANK1
   745  00DE                     __pcstackBANK1:
   746                           	global	?_adc_read_channel
   747  00DE                     ?_adc_read_channel:	; 2 bytes @ 0x0
   748  00DE                     	ds	2
   749                           	global	??_adc_read_channel
   750  00E0                     ??_adc_read_channel:	; 0 bytes @ 0x2
   751  00E0                     	ds	1
   752                           	global	adc_read_channel@channel
   753  00E1                     adc_read_channel@channel:	; 1 bytes @ 0x3
   754  00E1                     	ds	1
   755                           	global	?_readIR
   756  00E2                     ?_readIR:	; 2 bytes @ 0x4
   757  00E2                     	ds	2
   758                           	global	readIR@cm
   759  00E4                     readIR@cm:	; 2 bytes @ 0x6
   760  00E4                     	ds	2
   761                           	global	??_rightWallCorrect
   762  00E6                     ??_rightWallCorrect:	; 0 bytes @ 0x8
   763                           	global	??_frontWallCorrect
   764  00E6                     ??_frontWallCorrect:	; 0 bytes @ 0x8
   765  00E6                     	ds	2
   766                           	global	??_findWalls
   767  00E8                     ??_findWalls:	; 0 bytes @ 0xA
   768  00E8                     	ds	1
   769                           psect	cstackCOMMON,class=COMMON,space=1
   770                           global __pcstackCOMMON
   771  0072                     __pcstackCOMMON:
   772                           	global	?_ser_putch
   773  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   774                           	global	?_goReverse
   775  0072                     ?_goReverse:	; 0 bytes @ 0x0
   776                           	global	?_lcd_set_cursor
   777  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   778                           	global	?_lcd_write_data
   779  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   780                           	global	?_turnAround
   781  0072                     ?_turnAround:	; 0 bytes @ 0x0
   782                           	global	?_updateOrientation
   783  0072                     ?_updateOrientation:	; 0 bytes @ 0x0
   784                           	global	?_turnLeft90
   785  0072                     ?_turnLeft90:	; 0 bytes @ 0x0
   786                           	global	?_turnRight90
   787  0072                     ?_turnRight90:	; 0 bytes @ 0x0
   788                           	global	?_ser_init
   789  0072                     ?_ser_init:	; 0 bytes @ 0x0
   790                           	global	?_initIRobot
   791  0072                     ?_initIRobot:	; 0 bytes @ 0x0
   792                           	global	?_initSongs
   793  0072                     ?_initSongs:	; 0 bytes @ 0x0
   794                           	global	?_play_iCreate_song
   795  0072                     ?_play_iCreate_song:	; 0 bytes @ 0x0
   796                           	global	?_findWall
   797  0072                     ?_findWall:	; 1 bit 
   798                           	global	?_detectCliff
   799  0072                     ?_detectCliff:	; 1 bit 
   800                           	global	?_init_adc
   801  0072                     ?_init_adc:	; 0 bytes @ 0x0
   802                           	global	?_getSuccessfulDrive
   803  0072                     ?_getSuccessfulDrive:	; 1 bit 
   804                           	global	?_goBackward
   805  0072                     ?_goBackward:	; 0 bytes @ 0x0
   806                           	global	?_goForward
   807  0072                     ?_goForward:	; 0 bytes @ 0x0
   808                           	global	?_goLeft
   809  0072                     ?_goLeft:	; 0 bytes @ 0x0
   810                           	global	?_goRight
   811  0072                     ?_goRight:	; 0 bytes @ 0x0
   812                           	global	?_rightWallCorrect
   813  0072                     ?_rightWallCorrect:	; 0 bytes @ 0x0
   814                           	global	?_frontWallCorrect
   815  0072                     ?_frontWallCorrect:	; 0 bytes @ 0x0
   816                           	global	?_lcd_write_control
   817  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   818                           	global	?_lcd_write_string
   819  0072                     ?_lcd_write_string:	; 0 bytes @ 0x0
   820                           	global	?_lcd_write_1_digit_bcd
   821  0072                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
   822                           	global	?_lcd_init
   823  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   824                           	global	?_isr1
   825  0072                     ?_isr1:	; 0 bytes @ 0x0
   826                           	global	?_init
   827  0072                     ?_init:	; 0 bytes @ 0x0
   828                           	global	?_checkForFinalDestination
   829  0072                     ?_checkForFinalDestination:	; 0 bytes @ 0x0
   830                           	global	?_lookForVictim
   831  0072                     ?_lookForVictim:	; 0 bytes @ 0x0
   832                           	global	?_findWalls
   833  0072                     ?_findWalls:	; 0 bytes @ 0x0
   834                           	global	?_goToNextCell
   835  0072                     ?_goToNextCell:	; 0 bytes @ 0x0
   836                           	global	?_updateLocation
   837  0072                     ?_updateLocation:	; 0 bytes @ 0x0
   838                           	global	?_updateNode
   839  0072                     ?_updateNode:	; 0 bytes @ 0x0
   840                           	global	?_checkIfHome
   841  0072                     ?_checkIfHome:	; 0 bytes @ 0x0
   842                           	global	?_main
   843  0072                     ?_main:	; 0 bytes @ 0x0
   844                           	global	?_ser_isrx
   845  0072                     ?_ser_isrx:	; 1 bit 
   846                           	global	?_ser_getch
   847  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   848                           	global	?_getFinalX
   849  0072                     ?_getFinalX:	; 1 bytes @ 0x0
   850                           	global	?_getFinalY
   851  0072                     ?_getFinalY:	; 1 bytes @ 0x0
   852                           	global	?_getOrientation
   853  0072                     ?_getOrientation:	; 1 bytes @ 0x0
   854                           	global	?___lwmod
   855  0072                     ?___lwmod:	; 2 bytes @ 0x0
   856                           	global	___lwmod@divisor
   857  0072                     ___lwmod@divisor:	; 2 bytes @ 0x0
   858  0072                     	ds	2
   859                           	global	___lwmod@dividend
   860  0074                     ___lwmod@dividend:	; 2 bytes @ 0x2
   861  0074                     	ds	2
   862                           	global	??___lwmod
   863  0076                     ??___lwmod:	; 0 bytes @ 0x4
   864  0076                     	ds	1
   865                           	global	___lwmod@counter
   866  0077                     ___lwmod@counter:	; 1 bytes @ 0x5
   867  0077                     	ds	1
   868                           psect	cstackBANK0,class=BANK0,space=1
   869                           global __pcstackBANK0
   870  0020                     __pcstackBANK0:
   871                           	global	??_isr1
   872  0020                     ??_isr1:	; 0 bytes @ 0x0
   873  0020                     	ds	10
   874                           	global	??_ser_putch
   875  002A                     ??_ser_putch:	; 0 bytes @ 0xA
   876                           	global	??_ser_getch
   877  002A                     ??_ser_getch:	; 0 bytes @ 0xA
   878                           	global	??_lcd_write_data
   879  002A                     ??_lcd_write_data:	; 0 bytes @ 0xA
   880                           	global	??_updateOrientation
   881  002A                     ??_updateOrientation:	; 0 bytes @ 0xA
   882                           	global	?_rotateIR
   883  002A                     ?_rotateIR:	; 0 bytes @ 0xA
   884                           	global	??_ser_init
   885  002A                     ??_ser_init:	; 0 bytes @ 0xA
   886                           	global	??_getFinalX
   887  002A                     ??_getFinalX:	; 0 bytes @ 0xA
   888                           	global	??_getFinalY
   889  002A                     ??_getFinalY:	; 0 bytes @ 0xA
   890                           	global	??_init_adc
   891  002A                     ??_init_adc:	; 0 bytes @ 0xA
   892                           	global	??_getSuccessfulDrive
   893  002A                     ??_getSuccessfulDrive:	; 0 bytes @ 0xA
   894                           	global	??_getOrientation
   895  002A                     ??_getOrientation:	; 0 bytes @ 0xA
   896                           	global	??_lcd_write_control
   897  002A                     ??_lcd_write_control:	; 0 bytes @ 0xA
   898                           	global	??_updateNode
   899  002A                     ??_updateNode:	; 0 bytes @ 0xA
   900                           	global	??_ser_isrx
   901  002A                     ??_ser_isrx:	; 0 bytes @ 0xA
   902                           	global	?_getVictimZone
   903  002A                     ?_getVictimZone:	; 1 bytes @ 0xA
   904                           	global	?___wmul
   905  002A                     ?___wmul:	; 2 bytes @ 0xA
   906                           	global	getVictimZone@victimY
   907  002A                     getVictimZone@victimY:	; 1 bytes @ 0xA
   908                           	global	rotateIR@direction
   909  002A                     rotateIR@direction:	; 1 bytes @ 0xA
   910                           	global	___wmul@multiplier
   911  002A                     ___wmul@multiplier:	; 2 bytes @ 0xA
   912  002A                     	ds	1
   913                           	global	??_rotateIR
   914  002B                     ??_rotateIR:	; 0 bytes @ 0xB
   915                           	global	??_getVictimZone
   916  002B                     ??_getVictimZone:	; 0 bytes @ 0xB
   917                           	global	updateOrientation@moved
   918  002B                     updateOrientation@moved:	; 1 bytes @ 0xB
   919                           	global	ser_getch@c
   920  002B                     ser_getch@c:	; 1 bytes @ 0xB
   921                           	global	ser_putch@c
   922  002B                     ser_putch@c:	; 1 bytes @ 0xB
   923  002B                     	ds	1
   924                           	global	?_waitFor
   925  002C                     ?_waitFor:	; 0 bytes @ 0xC
   926                           	global	??_initIRobot
   927  002C                     ??_initIRobot:	; 0 bytes @ 0xC
   928                           	global	??_play_iCreate_song
   929  002C                     ??_play_iCreate_song:	; 0 bytes @ 0xC
   930                           	global	??_detectCliff
   931  002C                     ??_detectCliff:	; 0 bytes @ 0xC
   932                           	global	?_drive
   933  002C                     ?_drive:	; 0 bytes @ 0xC
   934                           	global	?_ser_putArr
   935  002C                     ?_ser_putArr:	; 0 bytes @ 0xC
   936                           	global	drive@lowByteSpeed
   937  002C                     drive@lowByteSpeed:	; 1 bytes @ 0xC
   938                           	global	waitFor@highByte
   939  002C                     waitFor@highByte:	; 1 bytes @ 0xC
   940                           	global	lcd_write_control@databyte
   941  002C                     lcd_write_control@databyte:	; 1 bytes @ 0xC
   942                           	global	lcd_write_data@databyte
   943  002C                     lcd_write_data@databyte:	; 1 bytes @ 0xC
   944                           	global	getVictimZone@victimX
   945  002C                     getVictimZone@victimX:	; 1 bytes @ 0xC
   946                           	global	play_iCreate_song@song
   947  002C                     play_iCreate_song@song:	; 1 bytes @ 0xC
   948                           	global	ser_putArr@array
   949  002C                     ser_putArr@array:	; 2 bytes @ 0xC
   950                           	global	___wmul@multiplicand
   951  002C                     ___wmul@multiplicand:	; 2 bytes @ 0xC
   952  002C                     	ds	1
   953                           	global	??_lcd_set_cursor
   954  002D                     ??_lcd_set_cursor:	; 0 bytes @ 0xD
   955                           	global	??_lcd_write_string
   956  002D                     ??_lcd_write_string:	; 0 bytes @ 0xD
   957                           	global	??_lcd_write_1_digit_bcd
   958  002D                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0xD
   959                           	global	??_lcd_init
   960  002D                     ??_lcd_init:	; 0 bytes @ 0xD
   961                           	global	drive@highByteRadius
   962  002D                     drive@highByteRadius:	; 1 bytes @ 0xD
   963                           	global	waitFor@lowByte
   964  002D                     waitFor@lowByte:	; 1 bytes @ 0xD
   965                           	global	lcd_set_cursor@address
   966  002D                     lcd_set_cursor@address:	; 1 bytes @ 0xD
   967                           	global	lcd_write_1_digit_bcd@data
   968  002D                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0xD
   969  002D                     	ds	1
   970                           	global	??_waitFor
   971  002E                     ??_waitFor:	; 0 bytes @ 0xE
   972                           	global	??_checkForFinalDestination
   973  002E                     ??_checkForFinalDestination:	; 0 bytes @ 0xE
   974                           	global	??_lookForVictim
   975  002E                     ??_lookForVictim:	; 0 bytes @ 0xE
   976                           	global	??_updateLocation
   977  002E                     ??_updateLocation:	; 0 bytes @ 0xE
   978                           	global	??___wmul
   979  002E                     ??___wmul:	; 0 bytes @ 0xE
   980                           	global	drive@lowByteRadius
   981  002E                     drive@lowByteRadius:	; 1 bytes @ 0xE
   982                           	global	lcd_write_string@s
   983  002E                     lcd_write_string@s:	; 1 bytes @ 0xE
   984                           	global	rotateIR@steps
   985  002E                     rotateIR@steps:	; 1 bytes @ 0xE
   986                           	global	ser_putArr@length
   987  002E                     ser_putArr@length:	; 2 bytes @ 0xE
   988                           	global	___wmul@product
   989  002E                     ___wmul@product:	; 2 bytes @ 0xE
   990  002E                     	ds	1
   991                           	global	??_drive
   992  002F                     ??_drive:	; 0 bytes @ 0xF
   993                           	global	rotateIR@stepNum
   994  002F                     rotateIR@stepNum:	; 1 bytes @ 0xF
   995  002F                     	ds	1
   996                           	global	??_ser_putArr
   997  0030                     ??_ser_putArr:	; 0 bytes @ 0x10
   998                           	global	?___awdiv
   999  0030                     ?___awdiv:	; 2 bytes @ 0x10
  1000                           	global	___awdiv@divisor
  1001  0030                     ___awdiv@divisor:	; 2 bytes @ 0x10
  1002  0030                     	ds	1
  1003                           	global	waitFor@type
  1004  0031                     waitFor@type:	; 1 bytes @ 0x11
  1005  0031                     	ds	1
  1006                           	global	drive@highByteSpeed
  1007  0032                     drive@highByteSpeed:	; 1 bytes @ 0x12
  1008                           	global	___awdiv@dividend
  1009  0032                     ___awdiv@dividend:	; 2 bytes @ 0x12
  1010  0032                     	ds	1
  1011                           	global	??_goReverse
  1012  0033                     ??_goReverse:	; 0 bytes @ 0x13
  1013                           	global	??_turnAround
  1014  0033                     ??_turnAround:	; 0 bytes @ 0x13
  1015                           	global	??_turnLeft90
  1016  0033                     ??_turnLeft90:	; 0 bytes @ 0x13
  1017                           	global	??_turnRight90
  1018  0033                     ??_turnRight90:	; 0 bytes @ 0x13
  1019                           	global	??_checkIfHome
  1020  0033                     ??_checkIfHome:	; 0 bytes @ 0x13
  1021                           	global	ser_putArr@i
  1022  0033                     ser_putArr@i:	; 2 bytes @ 0x13
  1023  0033                     	ds	1
  1024                           	global	??___awdiv
  1025  0034                     ??___awdiv:	; 0 bytes @ 0x14
  1026  0034                     	ds	1
  1027                           	global	??_initSongs
  1028  0035                     ??_initSongs:	; 0 bytes @ 0x15
  1029                           	global	?_driveForDistance
  1030  0035                     ?_driveForDistance:	; 0 bytes @ 0x15
  1031                           	global	??_init
  1032  0035                     ??_init:	; 0 bytes @ 0x15
  1033                           	global	___awdiv@counter
  1034  0035                     ___awdiv@counter:	; 1 bytes @ 0x15
  1035                           	global	driveForDistance@moveDistance
  1036  0035                     driveForDistance@moveDistance:	; 2 bytes @ 0x15
  1037  0035                     	ds	1
  1038                           	global	___awdiv@sign
  1039  0036                     ___awdiv@sign:	; 1 bytes @ 0x16
  1040  0036                     	ds	1
  1041                           	global	??_driveForDistance
  1042  0037                     ??_driveForDistance:	; 0 bytes @ 0x17
  1043                           	global	___awdiv@quotient
  1044  0037                     ___awdiv@quotient:	; 2 bytes @ 0x17
  1045  0037                     	ds	2
  1046                           	global	?_adc_read
  1047  0039                     ?_adc_read:	; 2 bytes @ 0x19
  1048                           	global	driveForDistance@deltaDistance
  1049  0039                     driveForDistance@deltaDistance:	; 2 bytes @ 0x19
  1050  0039                     	ds	2
  1051                           	global	??_adc_read
  1052  003B                     ??_adc_read:	; 0 bytes @ 0x1B
  1053                           	global	driveForDistance@distance
  1054  003B                     driveForDistance@distance:	; 2 bytes @ 0x1B
  1055  003B                     	ds	2
  1056                           	global	driveForDistance@high
  1057  003D                     driveForDistance@high:	; 1 bytes @ 0x1D
  1058  003D                     	ds	1
  1059                           	global	driveForDistance@low
  1060  003E                     driveForDistance@low:	; 1 bytes @ 0x1E
  1061  003E                     	ds	1
  1062                           	global	??_goBackward
  1063  003F                     ??_goBackward:	; 0 bytes @ 0x1F
  1064                           	global	??_goForward
  1065  003F                     ??_goForward:	; 0 bytes @ 0x1F
  1066                           	global	??_goLeft
  1067  003F                     ??_goLeft:	; 0 bytes @ 0x1F
  1068                           	global	??_goRight
  1069  003F                     ??_goRight:	; 0 bytes @ 0x1F
  1070                           	global	adc_read@adc_value
  1071  003F                     adc_read@adc_value:	; 2 bytes @ 0x1F
  1072  003F                     	ds	1
  1073                           	global	??_goToNextCell
  1074  0040                     ??_goToNextCell:	; 0 bytes @ 0x20
  1075  0040                     	ds	1
  1076                           	global	?_convert
  1077  0041                     ?_convert:	; 2 bytes @ 0x21
  1078                           	global	convert@adc_value
  1079  0041                     convert@adc_value:	; 2 bytes @ 0x21
  1080  0041                     	ds	2
  1081                           	global	??_convert
  1082  0043                     ??_convert:	; 0 bytes @ 0x23
  1083  0043                     	ds	2
  1084                           	global	??_readIR
  1085  0045                     ??_readIR:	; 0 bytes @ 0x25
  1086                           	global	??_findWall
  1087  0045                     ??_findWall:	; 0 bytes @ 0x25
  1088                           	global	??_main
  1089  0045                     ??_main:	; 0 bytes @ 0x25
  1090 ;;Data sizes: Strings 34, constant 0, data 104, bss 51, persistent 0 stack 0
  1091 ;;Auto spaces:   Size  Autos    Used
  1092 ;; COMMON          14      6      12
  1093 ;; BANK0           80     37      70
  1094 ;; BANK1           80     11      73
  1095 ;; BANK3           96      0      56
  1096 ;; BANK2           96      0       0
  1097                           
  1098 ;;
  1099 ;; Pointer list with targets:
  1100                           
  1101 ;; ?_readIR	int  size(1) Largest target is 0
  1102 ;;
  1103 ;; ?_convert	int  size(1) Largest target is 2
  1104 ;;		 -> convert@adc_value(BANK0[2]), 
  1105 ;;
  1106 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1107 ;;
  1108 ;; ?_lcd_write_1_bcd	int  size(1) Largest target is 0
  1109 ;;
  1110 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1111 ;;
  1112 ;; ?_adc_read	int  size(1) Largest target is 0
  1113 ;;
  1114 ;; ?___awdiv	int  size(1) Largest target is 0
  1115 ;;
  1116 ;; ?_adc_read_channel	int  size(1) Largest target is 0
  1117 ;;
  1118 ;; ser_putArr@array	PTR unsigned char  size(2) Largest target is 29
  1119 ;;		 -> champions(BANK1[21]), lookingForU2(BANK3[29]), superMarioBros(BANK1[25]), finalCountdown(BANK3[27]), 
  1120 ;;
  1121 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 17
  1122 ;;		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1123 ;;
  1124                           
  1125                           
  1126 ;;
  1127 ;; Critical Paths under _main in COMMON
  1128 ;;
  1129 ;;   None.
  1130 ;;
  1131 ;; Critical Paths under _isr1 in COMMON
  1132 ;;
  1133 ;;   _isr1->___lwmod
  1134 ;;
  1135 ;; Critical Paths under _main in BANK0
  1136 ;;
  1137 ;;   _goToNextCell->_goRight
  1138 ;;   _goToNextCell->_goBackward
  1139 ;;   _goRight->_driveForDistance
  1140 ;;   _goLeft->_driveForDistance
  1141 ;;   _goForward->_driveForDistance
  1142 ;;   _goBackward->_driveForDistance
  1143 ;;   _driveForDistance->_goReverse
  1144 ;;   _updateLocation->_lcd_set_cursor
  1145 ;;   _updateLocation->_lcd_write_1_digit_bcd
  1146 ;;   _lookForVictim->_lcd_set_cursor
  1147 ;;   _lookForVictim->_lcd_write_1_digit_bcd
  1148 ;;   _checkForFinalDestination->_lcd_set_cursor
  1149 ;;   _readIR->_convert
  1150 ;;   _goReverse->_drive
  1151 ;;   _checkIfHome->_drive
  1152 ;;   _initSongs->_ser_putArr
  1153 ;;   _lcd_init->_lcd_write_control
  1154 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
  1155 ;;   _lcd_write_string->_lcd_write_data
  1156 ;;   _turnRight90->_drive
  1157 ;;   _turnLeft90->_drive
  1158 ;;   _turnAround->_drive
  1159 ;;   _lcd_set_cursor->_lcd_write_control
  1160 ;;   _adc_read_channel->_convert
  1161 ;;   _detectCliff->_ser_putch
  1162 ;;   _detectCliff->_ser_getch
  1163 ;;   _convert->_adc_read
  1164 ;;   _ser_putArr->_ser_putch
  1165 ;;   _play_iCreate_song->_ser_putch
  1166 ;;   _initIRobot->_ser_putch
  1167 ;;   _waitFor->_ser_putch
  1168 ;;   _drive->_ser_putch
  1169 ;;   _adc_read->___awdiv
  1170 ;;   ___awdiv->___wmul
  1171 ;;
  1172 ;; Critical Paths under _isr1 in BANK0
  1173 ;;
  1174 ;;   None.
  1175 ;;
  1176 ;; Critical Paths under _main in BANK1
  1177 ;;
  1178 ;;   _main->_findWalls
  1179 ;;   _findWalls->_frontWallCorrect
  1180 ;;   _findWalls->_rightWallCorrect
  1181 ;;   _findWall->_readIR
  1182 ;;   _frontWallCorrect->_readIR
  1183 ;;   _rightWallCorrect->_readIR
  1184 ;;   _readIR->_adc_read_channel
  1185 ;;
  1186 ;; Critical Paths under _isr1 in BANK1
  1187 ;;
  1188 ;;   None.
  1189 ;;
  1190 ;; Critical Paths under _main in BANK3
  1191 ;;
  1192 ;;   None.
  1193 ;;
  1194 ;; Critical Paths under _isr1 in BANK3
  1195 ;;
  1196 ;;   None.
  1197 ;;
  1198 ;; Critical Paths under _main in BANK2
  1199 ;;
  1200 ;;   None.
  1201 ;;
  1202 ;; Critical Paths under _isr1 in BANK2
  1203 ;;
  1204 ;;   None.
  1205                           
  1206 ;;
  1207 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1208 ;;
  1209                           
  1210 ;;
  1211 ;;Call Graph Tables:
  1212 ;;
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1215 ;; ---------------------------------------------------------------------------------
  1216 ;; (0) _main                                                 0     0      0   11994
  1217 ;;                               _init
  1218 ;;                              _drive
  1219 ;;                     _lcd_set_cursor
  1220 ;;                   _lcd_write_string
  1221 ;;           _checkForFinalDestination
  1222 ;;                      _lookForVictim
  1223 ;;                          _findWalls
  1224 ;;                       _goToNextCell
  1225 ;;                 _getSuccessfulDrive
  1226 ;;                     _updateLocation
  1227 ;;                         _updateNode
  1228 ;;                        _checkIfHome
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (1) _goToNextCell                                         0     0      0    4770
  1231 ;;                             _goLeft
  1232 ;;                          _goForward
  1233 ;;                            _goRight
  1234 ;;                         _goBackward
  1235 ;; ---------------------------------------------------------------------------------
  1236 ;; (1) _findWalls                                            1     1      0    5746
  1237 ;;                                             10 BANK1      1     1      0
  1238 ;;                     _lcd_set_cursor
  1239 ;;                           _findWall
  1240 ;;                     _lcd_write_data
  1241 ;;                           _rotateIR
  1242 ;;                   _frontWallCorrect
  1243 ;;                   _rightWallCorrect
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (2) _goRight                                              1     1      0    1270
  1246 ;;                                             31 BANK0      1     1      0
  1247 ;;                     _lcd_set_cursor
  1248 ;;                     _lcd_write_data
  1249 ;;                        _turnRight90
  1250 ;;                  _updateOrientation
  1251 ;;                   _driveForDistance
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (2) _goLeft                                               0     0      0    1270
  1254 ;;                     _lcd_set_cursor
  1255 ;;                     _lcd_write_data
  1256 ;;                         _turnLeft90
  1257 ;;                  _updateOrientation
  1258 ;;                   _driveForDistance
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (2) _goForward                                            0     0      0     960
  1261 ;;                     _lcd_set_cursor
  1262 ;;                     _lcd_write_data
  1263 ;;                   _driveForDistance
  1264 ;; ---------------------------------------------------------------------------------
  1265 ;; (2) _goBackward                                           1     1      0    1270
  1266 ;;                                             31 BANK0      1     1      0
  1267 ;;                     _lcd_set_cursor
  1268 ;;                     _lcd_write_data
  1269 ;;                         _turnAround
  1270 ;;                  _updateOrientation
  1271 ;;                   _driveForDistance
  1272 ;; ---------------------------------------------------------------------------------
  1273 ;; (2) _findWall                                             0     0      0    1528
  1274 ;;                             _readIR
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; (2) _frontWallCorrect                                     2     2      0    1683
  1277 ;;                                              8 BANK1      2     2      0
  1278 ;;                              _drive
  1279 ;;                             _readIR
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; (2) _rightWallCorrect                                     2     2      0    2340
  1282 ;;                                              8 BANK1      2     2      0
  1283 ;;                        _turnRight90
  1284 ;;                           _rotateIR
  1285 ;;                              _drive
  1286 ;;                             _readIR
  1287 ;;                         _turnLeft90
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (3) _driveForDistance                                    10     8      2     864
  1290 ;;                                             21 BANK0     10     8      2
  1291 ;;                              _drive
  1292 ;;                          _ser_putch
  1293 ;;                          _ser_getch
  1294 ;;                        _detectCliff
  1295 ;;                          _goReverse
  1296 ;; ---------------------------------------------------------------------------------
  1297 ;; (1) _updateLocation                                       1     1      0     158
  1298 ;;                                             14 BANK0      1     1      0
  1299 ;;                     _lcd_set_cursor
  1300 ;;                     _lcd_write_data
  1301 ;;                     _getOrientation
  1302 ;;              _lcd_write_1_digit_bcd
  1303 ;; ---------------------------------------------------------------------------------
  1304 ;; (1) _lookForVictim                                        2     2      0     406
  1305 ;;                                             14 BANK0      2     2      0
  1306 ;;                  _play_iCreate_song
  1307 ;;                     _lcd_set_cursor
  1308 ;;                     _lcd_write_data
  1309 ;;                      _getVictimZone
  1310 ;;              _lcd_write_1_digit_bcd
  1311 ;; ---------------------------------------------------------------------------------
  1312 ;; (1) _checkForFinalDestination                             0     0      0     158
  1313 ;;                          _getFinalX
  1314 ;;                          _getFinalY
  1315 ;;                  _play_iCreate_song
  1316 ;;                     _lcd_set_cursor
  1317 ;;                     _lcd_write_data
  1318 ;; ---------------------------------------------------------------------------------
  1319 ;; (1) _init                                                 0     0      0     223
  1320 ;;                           _init_adc
  1321 ;;                           _lcd_init
  1322 ;;                           _ser_init
  1323 ;;                         _initIRobot
  1324 ;;                          _initSongs
  1325 ;; ---------------------------------------------------------------------------------
  1326 ;; (3) _readIR                                               4     2      2    1528
  1327 ;;                                              4 BANK1      4     2      2
  1328 ;;                   _adc_read_channel
  1329 ;;                            _convert
  1330 ;; ---------------------------------------------------------------------------------
  1331 ;; (4) _goReverse                                            2     2      0     406
  1332 ;;                                             19 BANK0      2     2      0
  1333 ;;                     _lcd_set_cursor
  1334 ;;                     _lcd_write_data
  1335 ;;                              _drive
  1336 ;;                            _waitFor
  1337 ;;                  _updateOrientation
  1338 ;; ---------------------------------------------------------------------------------
  1339 ;; (1) _checkIfHome                                          0     0      0     217
  1340 ;;                              _drive
  1341 ;;                  _play_iCreate_song
  1342 ;; ---------------------------------------------------------------------------------
  1343 ;; (2) _initSongs                                            0     0      0     161
  1344 ;;                         _ser_putArr
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (2) _lcd_init                                             0     0      0      31
  1347 ;;                  _lcd_write_control
  1348 ;; ---------------------------------------------------------------------------------
  1349 ;; (2) _lcd_write_1_digit_bcd                                1     1      0      62
  1350 ;;                                             13 BANK0      1     1      0
  1351 ;;                     _lcd_write_data
  1352 ;; ---------------------------------------------------------------------------------
  1353 ;; (1) _lcd_write_string                                     2     2      0      96
  1354 ;;                                             13 BANK0      2     2      0
  1355 ;;                     _lcd_write_data
  1356 ;; ---------------------------------------------------------------------------------
  1357 ;; (3) _turnRight90                                          3     3      0     279
  1358 ;;                                             19 BANK0      3     3      0
  1359 ;;                              _drive
  1360 ;;                            _waitFor
  1361 ;; ---------------------------------------------------------------------------------
  1362 ;; (3) _turnLeft90                                           3     3      0     279
  1363 ;;                                             19 BANK0      3     3      0
  1364 ;;                              _drive
  1365 ;;                            _waitFor
  1366 ;; ---------------------------------------------------------------------------------
  1367 ;; (3) _turnAround                                           3     3      0     279
  1368 ;;                                             19 BANK0      3     3      0
  1369 ;;                              _drive
  1370 ;;                            _waitFor
  1371 ;; ---------------------------------------------------------------------------------
  1372 ;; (2) _lcd_set_cursor                                       1     1      0      65
  1373 ;;                                             13 BANK0      1     1      0
  1374 ;;                  _lcd_write_control
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (4) _adc_read_channel                                     4     2      2     510
  1377 ;;                                              0 BANK1      4     2      2
  1378 ;;                           _adc_read
  1379 ;;                            _convert (ARG)
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (4) _detectCliff                                          1     1      0      65
  1382 ;;                                             12 BANK0      1     1      0
  1383 ;;                          _ser_putch
  1384 ;;                          _ser_getch
  1385 ;; ---------------------------------------------------------------------------------
  1386 ;; (4) _convert                                              4     2      2     984
  1387 ;;                                             33 BANK0      4     2      2
  1388 ;;                             ___wmul
  1389 ;;                            ___awdiv
  1390 ;;                           _adc_read (ARG)
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (3) _ser_putArr                                           9     5      4     161
  1393 ;;                                             12 BANK0      9     5      4
  1394 ;;                          _ser_putch
  1395 ;; ---------------------------------------------------------------------------------
  1396 ;; (2) _play_iCreate_song                                    1     1      0      62
  1397 ;;                                             12 BANK0      1     1      0
  1398 ;;                          _ser_putch
  1399 ;; ---------------------------------------------------------------------------------
  1400 ;; (2) _initIRobot                                           3     3      0      31
  1401 ;;                                             12 BANK0      3     3      0
  1402 ;;                          _ser_putch
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (3) _lcd_write_control                                    3     3      0      31
  1405 ;;                                             10 BANK0      3     3      0
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; (3) _rotateIR                                             6     5      1      99
  1408 ;;                                             10 BANK0      6     5      1
  1409 ;; ---------------------------------------------------------------------------------
  1410 ;; (5) _waitFor                                              6     4      2     124
  1411 ;;                                             12 BANK0      6     4      2
  1412 ;;                          _ser_putch
  1413 ;; ---------------------------------------------------------------------------------
  1414 ;; (3) _lcd_write_data                                       3     3      0      31
  1415 ;;                                             10 BANK0      3     3      0
  1416 ;; ---------------------------------------------------------------------------------
  1417 ;; (2) _drive                                                7     4      3     155
  1418 ;;                                             12 BANK0      7     4      3
  1419 ;;                          _ser_putch
  1420 ;; ---------------------------------------------------------------------------------
  1421 ;; (2) _init_adc                                             1     1      0       0
  1422 ;;                                             10 BANK0      1     1      0
  1423 ;; ---------------------------------------------------------------------------------
  1424 ;; (5) _adc_read                                             8     6      2     479
  1425 ;;                                             25 BANK0      8     6      2
  1426 ;;                            ___awdiv
  1427 ;; ---------------------------------------------------------------------------------
  1428 ;; (5) _ser_getch                                            2     2      0      34
  1429 ;;                                             10 BANK0      2     2      0
  1430 ;;                           _ser_isrx
  1431 ;; ---------------------------------------------------------------------------------
  1432 ;; (5) ___awdiv                                              9     5      4     445
  1433 ;;                                             16 BANK0      9     5      4
  1434 ;;                             ___wmul (ARG)
  1435 ;; ---------------------------------------------------------------------------------
  1436 ;; (5) ___wmul                                               6     2      4     136
  1437 ;;                                             10 BANK0      6     2      4
  1438 ;; ---------------------------------------------------------------------------------
  1439 ;; (6) _ser_isrx                                             0     0      0       0
  1440 ;; ---------------------------------------------------------------------------------
  1441 ;; (1) _updateNode                                           1     1      0       0
  1442 ;;                                             10 BANK0      1     1      0
  1443 ;; ---------------------------------------------------------------------------------
  1444 ;; (2) _getVictimZone                                        3     2      1     186
  1445 ;;                                             10 BANK0      3     2      1
  1446 ;; ---------------------------------------------------------------------------------
  1447 ;; (2) _getFinalY                                            0     0      0       0
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (2) _getFinalX                                            0     0      0       0
  1450 ;; ---------------------------------------------------------------------------------
  1451 ;; (2) _ser_init                                             1     1      0       0
  1452 ;;                                             10 BANK0      1     1      0
  1453 ;; ---------------------------------------------------------------------------------
  1454 ;; (5) _updateOrientation                                    2     2      0      31
  1455 ;;                                             10 BANK0      2     2      0
  1456 ;; ---------------------------------------------------------------------------------
  1457 ;; (2) _getOrientation                                       0     0      0       0
  1458 ;; ---------------------------------------------------------------------------------
  1459 ;; (1) _getSuccessfulDrive                                   0     0      0       0
  1460 ;; ---------------------------------------------------------------------------------
  1461 ;; (3) _ser_putch                                            2     2      0      31
  1462 ;;                                             10 BANK0      2     2      0
  1463 ;; ---------------------------------------------------------------------------------
  1464 ;; Estimated maximum stack depth 6
  1465 ;; ---------------------------------------------------------------------------------
  1466 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1467 ;; ---------------------------------------------------------------------------------
  1468 ;; (7) _isr1                                                10    10      0     159
  1469 ;;                                              0 BANK0     10    10      0
  1470 ;;                            ___lwmod
  1471 ;; ---------------------------------------------------------------------------------
  1472 ;; (8) ___lwmod                                              6     2      4     159
  1473 ;;                                              0 COMMON     6     2      4
  1474 ;; ---------------------------------------------------------------------------------
  1475 ;; Estimated maximum stack depth 8
  1476 ;; ---------------------------------------------------------------------------------
  1477                           
  1478 ;; Call Graph Graphs:
  1479                           
  1480 ;; _main (ROOT)
  1481 ;;   _init
  1482 ;;     _init_adc
  1483 ;;     _lcd_init
  1484 ;;       _lcd_write_control
  1485 ;;     _ser_init
  1486 ;;     _initIRobot
  1487 ;;       _ser_putch
  1488 ;;     _initSongs
  1489 ;;       _ser_putArr
  1490 ;;         _ser_putch
  1491 ;;   _drive
  1492 ;;     _ser_putch
  1493 ;;   _lcd_set_cursor
  1494 ;;     _lcd_write_control
  1495 ;;   _lcd_write_string
  1496 ;;     _lcd_write_data
  1497 ;;   _checkForFinalDestination
  1498 ;;     _getFinalX
  1499 ;;     _getFinalY
  1500 ;;     _play_iCreate_song
  1501 ;;       _ser_putch
  1502 ;;     _lcd_set_cursor
  1503 ;;       _lcd_write_control
  1504 ;;     _lcd_write_data
  1505 ;;   _lookForVictim
  1506 ;;     _play_iCreate_song
  1507 ;;       _ser_putch
  1508 ;;     _lcd_set_cursor
  1509 ;;       _lcd_write_control
  1510 ;;     _lcd_write_data
  1511 ;;     _getVictimZone
  1512 ;;     _lcd_write_1_digit_bcd
  1513 ;;       _lcd_write_data
  1514 ;;   _findWalls
  1515 ;;     _lcd_set_cursor
  1516 ;;       _lcd_write_control
  1517 ;;     _findWall
  1518 ;;       _readIR
  1519 ;;         _adc_read_channel
  1520 ;;           _adc_read
  1521 ;;             ___awdiv
  1522 ;;               ___wmul (ARG)
  1523 ;;           _convert (ARG)
  1524 ;;             ___wmul
  1525 ;;             ___awdiv
  1526 ;;               ___wmul (ARG)
  1527 ;;             _adc_read (ARG)
  1528 ;;               ___awdiv
  1529 ;;                 ___wmul (ARG)
  1530 ;;         _convert
  1531 ;;           ___wmul
  1532 ;;           ___awdiv
  1533 ;;             ___wmul (ARG)
  1534 ;;           _adc_read (ARG)
  1535 ;;             ___awdiv
  1536 ;;               ___wmul (ARG)
  1537 ;;     _lcd_write_data
  1538 ;;     _rotateIR
  1539 ;;     _frontWallCorrect
  1540 ;;       _drive
  1541 ;;         _ser_putch
  1542 ;;       _readIR
  1543 ;;         _adc_read_channel
  1544 ;;           _adc_read
  1545 ;;             ___awdiv
  1546 ;;               ___wmul (ARG)
  1547 ;;           _convert (ARG)
  1548 ;;             ___wmul
  1549 ;;             ___awdiv
  1550 ;;               ___wmul (ARG)
  1551 ;;             _adc_read (ARG)
  1552 ;;               ___awdiv
  1553 ;;                 ___wmul (ARG)
  1554 ;;         _convert
  1555 ;;           ___wmul
  1556 ;;           ___awdiv
  1557 ;;             ___wmul (ARG)
  1558 ;;           _adc_read (ARG)
  1559 ;;             ___awdiv
  1560 ;;               ___wmul (ARG)
  1561 ;;     _rightWallCorrect
  1562 ;;       _turnRight90
  1563 ;;         _drive
  1564 ;;           _ser_putch
  1565 ;;         _waitFor
  1566 ;;           _ser_putch
  1567 ;;       _rotateIR
  1568 ;;       _drive
  1569 ;;         _ser_putch
  1570 ;;       _readIR
  1571 ;;         _adc_read_channel
  1572 ;;           _adc_read
  1573 ;;             ___awdiv
  1574 ;;               ___wmul (ARG)
  1575 ;;           _convert (ARG)
  1576 ;;             ___wmul
  1577 ;;             ___awdiv
  1578 ;;               ___wmul (ARG)
  1579 ;;             _adc_read (ARG)
  1580 ;;               ___awdiv
  1581 ;;                 ___wmul (ARG)
  1582 ;;         _convert
  1583 ;;           ___wmul
  1584 ;;           ___awdiv
  1585 ;;             ___wmul (ARG)
  1586 ;;           _adc_read (ARG)
  1587 ;;             ___awdiv
  1588 ;;               ___wmul (ARG)
  1589 ;;       _turnLeft90
  1590 ;;         _drive
  1591 ;;           _ser_putch
  1592 ;;         _waitFor
  1593 ;;           _ser_putch
  1594 ;;   _goToNextCell
  1595 ;;     _goLeft
  1596 ;;       _lcd_set_cursor
  1597 ;;         _lcd_write_control
  1598 ;;       _lcd_write_data
  1599 ;;       _turnLeft90
  1600 ;;         _drive
  1601 ;;           _ser_putch
  1602 ;;         _waitFor
  1603 ;;           _ser_putch
  1604 ;;       _updateOrientation
  1605 ;;       _driveForDistance
  1606 ;;         _drive
  1607 ;;           _ser_putch
  1608 ;;         _ser_putch
  1609 ;;         _ser_getch
  1610 ;;           _ser_isrx
  1611 ;;         _detectCliff
  1612 ;;           _ser_putch
  1613 ;;           _ser_getch
  1614 ;;             _ser_isrx
  1615 ;;         _goReverse
  1616 ;;           _lcd_set_cursor
  1617 ;;             _lcd_write_control
  1618 ;;           _lcd_write_data
  1619 ;;           _drive
  1620 ;;             _ser_putch
  1621 ;;           _waitFor
  1622 ;;             _ser_putch
  1623 ;;           _updateOrientation
  1624 ;;     _goForward
  1625 ;;       _lcd_set_cursor
  1626 ;;         _lcd_write_control
  1627 ;;       _lcd_write_data
  1628 ;;       _driveForDistance
  1629 ;;         _drive
  1630 ;;           _ser_putch
  1631 ;;         _ser_putch
  1632 ;;         _ser_getch
  1633 ;;           _ser_isrx
  1634 ;;         _detectCliff
  1635 ;;           _ser_putch
  1636 ;;           _ser_getch
  1637 ;;             _ser_isrx
  1638 ;;         _goReverse
  1639 ;;           _lcd_set_cursor
  1640 ;;             _lcd_write_control
  1641 ;;           _lcd_write_data
  1642 ;;           _drive
  1643 ;;             _ser_putch
  1644 ;;           _waitFor
  1645 ;;             _ser_putch
  1646 ;;           _updateOrientation
  1647 ;;     _goRight
  1648 ;;       _lcd_set_cursor
  1649 ;;         _lcd_write_control
  1650 ;;       _lcd_write_data
  1651 ;;       _turnRight90
  1652 ;;         _drive
  1653 ;;           _ser_putch
  1654 ;;         _waitFor
  1655 ;;           _ser_putch
  1656 ;;       _updateOrientation
  1657 ;;       _driveForDistance
  1658 ;;         _drive
  1659 ;;           _ser_putch
  1660 ;;         _ser_putch
  1661 ;;         _ser_getch
  1662 ;;           _ser_isrx
  1663 ;;         _detectCliff
  1664 ;;           _ser_putch
  1665 ;;           _ser_getch
  1666 ;;             _ser_isrx
  1667 ;;         _goReverse
  1668 ;;           _lcd_set_cursor
  1669 ;;             _lcd_write_control
  1670 ;;           _lcd_write_data
  1671 ;;           _drive
  1672 ;;             _ser_putch
  1673 ;;           _waitFor
  1674 ;;             _ser_putch
  1675 ;;           _updateOrientation
  1676 ;;     _goBackward
  1677 ;;       _lcd_set_cursor
  1678 ;;         _lcd_write_control
  1679 ;;       _lcd_write_data
  1680 ;;       _turnAround
  1681 ;;         _drive
  1682 ;;           _ser_putch
  1683 ;;         _waitFor
  1684 ;;           _ser_putch
  1685 ;;       _updateOrientation
  1686 ;;       _driveForDistance
  1687 ;;         _drive
  1688 ;;           _ser_putch
  1689 ;;         _ser_putch
  1690 ;;         _ser_getch
  1691 ;;           _ser_isrx
  1692 ;;         _detectCliff
  1693 ;;           _ser_putch
  1694 ;;           _ser_getch
  1695 ;;             _ser_isrx
  1696 ;;         _goReverse
  1697 ;;           _lcd_set_cursor
  1698 ;;             _lcd_write_control
  1699 ;;           _lcd_write_data
  1700 ;;           _drive
  1701 ;;             _ser_putch
  1702 ;;           _waitFor
  1703 ;;             _ser_putch
  1704 ;;           _updateOrientation
  1705 ;;   _getSuccessfulDrive
  1706 ;;   _updateLocation
  1707 ;;     _lcd_set_cursor
  1708 ;;       _lcd_write_control
  1709 ;;     _lcd_write_data
  1710 ;;     _getOrientation
  1711 ;;     _lcd_write_1_digit_bcd
  1712 ;;       _lcd_write_data
  1713 ;;   _updateNode
  1714 ;;   _checkIfHome
  1715 ;;     _drive
  1716 ;;       _ser_putch
  1717 ;;     _play_iCreate_song
  1718 ;;       _ser_putch
  1719 ;;
  1720 ;; _isr1 (ROOT)
  1721 ;;   ___lwmod
  1722 ;;
  1723                           
  1724 ;; Address spaces:
  1725                           
  1726 ;;Name               Size   Autos  Total    Cost      Usage
  1727 ;;BANK3               60      0      38       9       58.3%
  1728 ;;BITBANK3            60      0       0       8        0.0%
  1729 ;;SFR3                 0      0       0       4        0.0%
  1730 ;;BITSFR3              0      0       0       4        0.0%
  1731 ;;BANK2               60      0       0      11        0.0%
  1732 ;;BITBANK2            60      0       0      10        0.0%
  1733 ;;SFR2                 0      0       0       5        0.0%
  1734 ;;BITSFR2              0      0       0       5        0.0%
  1735 ;;SFR1                 0      0       0       2        0.0%
  1736 ;;BITSFR1              0      0       0       2        0.0%
  1737 ;;BANK1               50      B      49       7       91.3%
  1738 ;;BITBANK1            50      0       0       6        0.0%
  1739 ;;CODE                 0      0       0       0        0.0%
  1740 ;;DATA                 0      0      DD      12        0.0%
  1741 ;;ABS                  0      0      D3       3        0.0%
  1742 ;;NULL                 0      0       0       0        0.0%
  1743 ;;STACK                0      0       A       2        0.0%
  1744 ;;BANK0               50     25      46       5       87.5%
  1745 ;;BITBANK0            50      0       0       4        0.0%
  1746 ;;SFR0                 0      0       0       1        0.0%
  1747 ;;BITSFR0              0      0       0       1        0.0%
  1748 ;;COMMON               E      6       C       1       85.7%
  1749 ;;BITCOMMON            E      0       2       0       14.3%
  1750 ;;EEDATA             100      0       0       0        0.0%
  1751                           
  1752                           	global	_main
  1753                           psect	maintext,global,class=CODE,delta=2
  1754                           global __pmaintext
  1755  05DF                     __pmaintext:
  1756                           
  1757 ;; *************** function _main *****************
  1758 ;; Defined at:
  1759 ;;		line 257 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;		None               void
  1766 ;; Registers used:
  1767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 17F/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels required when called:    8
  1779 ;; This function calls:
  1780 ;;		_init
  1781 ;;		_drive
  1782 ;;		_lcd_set_cursor
  1783 ;;		_lcd_write_string
  1784 ;;		_checkForFinalDestination
  1785 ;;		_lookForVictim
  1786 ;;		_findWalls
  1787 ;;		_goToNextCell
  1788 ;;		_getSuccessfulDrive
  1789 ;;		_updateLocation
  1790 ;;		_updateNode
  1791 ;;		_checkIfHome
  1792 ;; This function is called by:
  1793 ;;		Startup code after reset
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           psect	maintext
  1797                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  1798                           	line	257
  1799                           	global	__size_of_main
  1800  007A                     	__size_of_main	equ	__end_of_main-_main
  1801                           	
  1802  05DF                     _main:	
  1803                           	opt	stack 0
  1804                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1805                           	line	258
  1806                           	
  1807  05DF                     l11776:	
  1808                           ;main.c: 258: init();
  1809  05DF  120A  158A  24A3   	fcall	_init
              120A  118A         
  1810                           	line	259
  1811                           ;main.c: 259: drive(0, 0, 0, 0);
  1812  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1813  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1814  05E6  01AC               	clrf	(?_drive)
  1815  05E7  01AD               	clrf	0+(?_drive)+01h
  1816  05E8  01AE               	clrf	0+(?_drive)+02h
  1817  05E9  3000               	movlw	(0)
  1818  05EA  120A  158A  24D9   	fcall	_drive
              120A  118A         
  1819                           	line	261
  1820                           	
  1821  05EF                     l11778:	
  1822                           ;main.c: 261: lcd_set_cursor(0x00);
  1823  05EF  3000               	movlw	(0)
  1824  05F0  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  1825                           	line	262
  1826                           	
  1827  05F5                     l11780:	
  1828                           ;main.c: 262: lcd_write_string("(-,-) E -- --- -");
  1829  05F5  3001               	movlw	((STR_1-__stringbase))&0ffh
  1830  05F6  120A  158A  22AB   	fcall	_lcd_write_string
              120A  118A         
  1831                           	line	263
  1832                           ;main.c: 263: lcd_set_cursor(0x40);
  1833  05FB  3040               	movlw	(040h)
  1834  05FC  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  1835                           	line	264
  1836                           	
  1837  0601                     l11782:	
  1838                           ;main.c: 264: lcd_write_string("- - - (0,0) GREG");
  1839  0601  3012               	movlw	((STR_2-__stringbase))&0ffh
  1840  0602  120A  158A  22AB   	fcall	_lcd_write_string
              120A  118A         
  1841                           	line	268
  1842                           ;main.c: 268: while(!home)
  1843  0607  2E51               	goto	l11806
  1844                           	
  1845  0608                     l3769:	
  1846                           	line	270
  1847                           	
  1848  0608                     l11784:	
  1849                           ;main.c: 269: {
  1850                           ;main.c: 270: if(start.pressed)
  1851  0608  1283               	bcf	status, 5	;RP0=0, select bank0
  1852  0609  1303               	bcf	status, 6	;RP1=0, select bank0
  1853  060A  0855               	movf	(_start),w
  1854  060B  1D03               	skipz
  1855  060C  2E0E               	goto	u5000
  1856  060D  2E51               	goto	l11806
  1857  060E                     u5000:
  1858                           	line	272
  1859                           	
  1860  060E                     l11786:	
  1861                           ;main.c: 271: {
  1862                           ;main.c: 272: checkForFinalDestination();
  1863  060E  120A  158A  2419   	fcall	_checkForFinalDestination
              120A  118A         
  1864                           	line	273
  1865                           ;main.c: 273: lookForVictim();
  1866  0613  120A  158A  26B0   	fcall	_lookForVictim
              120A  118A         
  1867                           	line	274
  1868                           	
  1869  0618                     l11788:	
  1870                           ;main.c: 274: findWalls();
  1871  0618  120A  118A  22AE   	fcall	_findWalls
              120A  118A         
  1872                           	line	275
  1873                           ;main.c: 275: switch(node)
  1874  061D  2E28               	goto	l11794
  1875                           	line	277
  1876                           ;main.c: 276: {
  1877                           ;main.c: 277: case 1:
  1878                           	
  1879  061E                     l3772:	
  1880                           	line	279
  1881                           ;main.c: 279: break;
  1882  061E  2E35               	goto	l11796
  1883                           	line	280
  1884                           ;main.c: 280: case 2:
  1885                           	
  1886  061F                     l3774:	
  1887                           	line	282
  1888                           ;main.c: 282: break;
  1889  061F  2E35               	goto	l11796
  1890                           	line	283
  1891                           ;main.c: 283: case 3:
  1892                           	
  1893  0620                     l3775:	
  1894                           	line	285
  1895                           ;main.c: 285: break;
  1896  0620  2E35               	goto	l11796
  1897                           	line	286
  1898                           ;main.c: 286: default:
  1899                           	
  1900  0621                     l3776:	
  1901                           	line	287
  1902                           	
  1903  0621                     l11790:	
  1904                           ;main.c: 287: goToNextCell();
  1905  0621  120A  158A  22D0   	fcall	_goToNextCell
              120A  118A         
  1906                           	line	288
  1907                           ;main.c: 288: break;
  1908  0626  2E35               	goto	l11796
  1909                           	line	289
  1910                           	
  1911  0627                     l11792:	
  1912                           ;main.c: 289: }
  1913  0627  2E35               	goto	l11796
  1914                           	line	275
  1915                           	
  1916  0628                     l3771:	
  1917                           	
  1918  0628                     l11794:	
  1919  0628  1283               	bcf	status, 5	;RP0=0, select bank0
  1920  0629  1303               	bcf	status, 6	;RP1=0, select bank0
  1921  062A  085E               	movf	(_node),w	;volatile
  1922                           	; Switch size 1, requested type "space"
  1923                           ; Number of cases is 3, Range of values is 1 to 3
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte           10     6 (average)
  1927                           ; direct_byte           20    11 (fixed)
  1928                           ; jumptable            263     9 (fixed)
  1929                           ;	Chosen strategy is simple_byte
  1930                           
  1931                           	opt asmopt_off
  1932  062B  3A01               	xorlw	1^0	; case 1
  1933  062C  1903               	skipnz
  1934  062D  2E35               	goto	l11796
  1935  062E  3A03               	xorlw	2^1	; case 2
  1936  062F  1903               	skipnz
  1937  0630  2E35               	goto	l11796
  1938  0631  3A01               	xorlw	3^2	; case 3
  1939  0632  1903               	skipnz
  1940  0633  2E35               	goto	l11796
  1941  0634  2E21               	goto	l11790
  1942                           	opt asmopt_on
  1943                           
  1944                           	line	289
  1945                           	
  1946  0635                     l3773:	
  1947                           	line	290
  1948                           	
  1949  0635                     l11796:	
  1950                           ;main.c: 290: if(getSuccessfulDrive());
  1951  0635  120A  158A  2156   	fcall	_getSuccessfulDrive
              120A  118A         
  1952  063A  2E3B               	goto	l11798
  1953                           	
  1954  063B                     l3777:	
  1955                           	line	293
  1956                           	
  1957  063B                     l11798:	
  1958                           ;main.c: 291: {
  1959                           ;main.c: 293: updateLocation();
  1960  063B  120A  118A  273E   	fcall	_updateLocation
              120A  118A         
  1961                           	line	294
  1962                           	
  1963  0640                     l11800:	
  1964                           ;main.c: 294: updateNode();
  1965  0640  120A  158A  25F5   	fcall	_updateNode
              120A  118A         
  1966                           	line	295
  1967                           	
  1968  0645                     l11802:	
  1969                           ;main.c: 295: if(goingHome)
  1970  0645  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  1971  0646  2E48               	goto	u5011
  1972  0647  2E49               	goto	u5010
  1973  0648                     u5011:
  1974  0648  2E51               	goto	l11806
  1975  0649                     u5010:
  1976                           	line	296
  1977                           	
  1978  0649                     l11804:	
  1979                           ;main.c: 296: checkIfHome();
  1980  0649  120A  158A  2248   	fcall	_checkIfHome
              120A  118A         
  1981  064E  2E51               	goto	l11806
  1982                           	
  1983  064F                     l3778:	
  1984  064F  2E51               	goto	l11806
  1985                           	line	298
  1986                           	
  1987  0650                     l3770:	
  1988  0650  2E51               	goto	l11806
  1989                           	line	299
  1990                           	
  1991  0651                     l3768:	
  1992                           	line	268
  1993                           	
  1994  0651                     l11806:	
  1995  0651  1F70               	btfss	(_home/8),(_home)&7
  1996  0652  2E54               	goto	u5021
  1997  0653  2E55               	goto	u5020
  1998  0654                     u5021:
  1999  0654  2E08               	goto	l11784
  2000  0655                     u5020:
  2001  0655  2E56               	goto	l3780
  2002                           	
  2003  0656                     l3779:	
  2004                           	line	301
  2005                           	
  2006  0656                     l3780:	
  2007                           	global	start
  2008  0656  120A  118A  2812   	ljmp	start
  2009                           	opt stack 0
  2010                           GLOBAL	__end_of_main
  2011  0659                     	__end_of_main:
  2012 ;; =============== function _main ends ============
  2013                           
  2014                           	signat	_main,88
  2015                           	global	_goToNextCell
  2016                           psect	text1622,local,class=CODE,delta=2
  2017                           global __ptext1622
  2018  0AD0                     __ptext1622:
  2019                           
  2020 ;; *************** function _goToNextCell *****************
  2021 ;; Defined at:
  2022 ;;		line 190 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;		None               void
  2029 ;; Registers used:
  2030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0
  2039 ;;      Totals:         0       0       0       0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    7
  2043 ;; This function calls:
  2044 ;;		_goLeft
  2045 ;;		_goForward
  2046 ;;		_goRight
  2047 ;;		_goBackward
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           psect	text1622
  2053                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  2054                           	line	190
  2055                           	global	__size_of_goToNextCell
  2056  0027                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  2057                           	
  2058  0AD0                     _goToNextCell:	
  2059                           	opt	stack 0
  2060                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2061                           	line	191
  2062                           	
  2063  0AD0                     l11766:	
  2064                           ;main.c: 191: if(!leftWall)
  2065  0AD0  1BF0               	btfsc	(_leftWall/8),(_leftWall)&7
  2066  0AD1  2AD3               	goto	u4971
  2067  0AD2  2AD4               	goto	u4970
  2068  0AD3                     u4971:
  2069  0AD3  2ADA               	goto	l3736
  2070  0AD4                     u4970:
  2071                           	line	192
  2072                           	
  2073  0AD4                     l11768:	
  2074                           ;main.c: 192: goLeft();
  2075  0AD4  120A  158A  231F   	fcall	_goLeft
              120A  158A         
  2076  0AD9  2AF6               	goto	l3742
  2077                           	line	193
  2078                           	
  2079  0ADA                     l3736:	
  2080                           ;main.c: 193: else if(!frontWall)
  2081  0ADA  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  2082  0ADB  2ADD               	goto	u4981
  2083  0ADC  2ADE               	goto	u4980
  2084  0ADD                     u4981:
  2085  0ADD  2AE4               	goto	l3738
  2086  0ADE                     u4980:
  2087                           	line	194
  2088                           	
  2089  0ADE                     l11770:	
  2090                           ;main.c: 194: goForward();
  2091  0ADE  120A  158A  21F5   	fcall	_goForward
              120A  158A         
  2092  0AE3  2AF6               	goto	l3742
  2093                           	line	195
  2094                           	
  2095  0AE4                     l3738:	
  2096                           ;main.c: 195: else if(!rightWall)
  2097  0AE4  18F1               	btfsc	(_rightWall/8),(_rightWall)&7
  2098  0AE5  2AE7               	goto	u4991
  2099  0AE6  2AE8               	goto	u4990
  2100  0AE7                     u4991:
  2101  0AE7  2AEE               	goto	l11774
  2102  0AE8                     u4990:
  2103                           	line	196
  2104                           	
  2105  0AE8                     l11772:	
  2106                           ;main.c: 196: goRight();
  2107  0AE8  120A  158A  2399   	fcall	_goRight
              120A  158A         
  2108  0AED  2AF6               	goto	l3742
  2109                           	line	197
  2110                           	
  2111  0AEE                     l3740:	
  2112                           	line	198
  2113                           	
  2114  0AEE                     l11774:	
  2115                           ;main.c: 197: else
  2116                           ;main.c: 198: goBackward();
  2117  0AEE  120A  158A  2370   	fcall	_goBackward
              120A  158A         
  2118  0AF3  2AF6               	goto	l3742
  2119                           	
  2120  0AF4                     l3741:	
  2121  0AF4  2AF6               	goto	l3742
  2122                           	
  2123  0AF5                     l3739:	
  2124  0AF5  2AF6               	goto	l3742
  2125                           	
  2126  0AF6                     l3737:	
  2127                           	line	199
  2128                           	
  2129  0AF6                     l3742:	
  2130  0AF6  0008               	return
  2131                           	opt stack 0
  2132                           GLOBAL	__end_of_goToNextCell
  2133  0AF7                     	__end_of_goToNextCell:
  2134 ;; =============== function _goToNextCell ends ============
  2135                           
  2136                           	signat	_goToNextCell,88
  2137                           	global	_findWalls
  2138                           psect	text1623,local,class=CODE,delta=2
  2139                           global __ptext1623
  2140  02AE                     __ptext1623:
  2141                           
  2142 ;; *************** function _findWalls *****************
  2143 ;; Defined at:
  2144 ;;		line 156 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;		None               void
  2151 ;; Registers used:
  2152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0
  2160 ;;      Temps:          0       0       1       0       0
  2161 ;;      Totals:         0       0       1       0       0
  2162 ;;Total ram usage:        1 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    7
  2165 ;; This function calls:
  2166 ;;		_lcd_set_cursor
  2167 ;;		_findWall
  2168 ;;		_lcd_write_data
  2169 ;;		_rotateIR
  2170 ;;		_frontWallCorrect
  2171 ;;		_rightWallCorrect
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           psect	text1623
  2177                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  2178                           	line	156
  2179                           	global	__size_of_findWalls
  2180  008F                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  2181                           	
  2182  02AE                     _findWalls:	
  2183                           	opt	stack 0
  2184                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2185                           	line	157
  2186                           	
  2187  02AE                     l11736:	
  2188                           ;main.c: 157: lcd_set_cursor(0x0B);
  2189  02AE  300B               	movlw	(0Bh)
  2190  02AF  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  2191                           	line	159
  2192                           	
  2193  02B4                     l11738:	
  2194                           ;main.c: 159: leftWall = findWall();
  2195  02B4  120A  158A  222C   	fcall	_findWall
              120A  118A         
  2196  02B9  1803               	btfsc	status,0
  2197  02BA  2ABC               	goto	u4881
  2198  02BB  2ABE               	goto	u4880
  2199                           	
  2200  02BC                     u4881:
  2201  02BC  17F0               	bsf	(_leftWall/8),(_leftWall)&7
  2202  02BD  2ABF               	goto	u4894
  2203  02BE                     u4880:
  2204  02BE  13F0               	bcf	(_leftWall/8),(_leftWall)&7
  2205  02BF                     u4894:
  2206                           	line	160
  2207                           	
  2208  02BF                     l11740:	
  2209                           ;main.c: 160: if(leftWall)
  2210  02BF  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2211  02C0  2AC2               	goto	u4901
  2212  02C1  2AC3               	goto	u4900
  2213  02C2                     u4901:
  2214  02C2  2ACA               	goto	l11744
  2215  02C3                     u4900:
  2216                           	line	162
  2217                           	
  2218  02C3                     l11742:	
  2219                           ;main.c: 161: {
  2220                           ;main.c: 162: lcd_write_data('L');
  2221  02C3  304C               	movlw	(04Ch)
  2222  02C4  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  2223                           	line	163
  2224                           ;main.c: 163: }
  2225  02C9  2AD0               	goto	l3728
  2226                           	line	164
  2227                           	
  2228  02CA                     l3727:	
  2229                           	line	165
  2230                           	
  2231  02CA                     l11744:	
  2232                           ;main.c: 164: else
  2233                           ;main.c: 165: lcd_write_data(' ');
  2234  02CA  3020               	movlw	(020h)
  2235  02CB  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  2236                           	
  2237  02D0                     l3728:	
  2238                           	line	166
  2239                           ;main.c: 166: rotateIR(24, 0b00001111);
  2240  02D0  300F               	movlw	(0Fh)
  2241  02D1  1683               	bsf	status, 5	;RP0=1, select bank1
  2242  02D2  1303               	bcf	status, 6	;RP1=0, select bank1
  2243  02D3  00E8               	movwf	(??_findWalls+0)^080h+0
  2244  02D4  0868               	movf	(??_findWalls+0)^080h+0,w
  2245  02D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2246  02D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2247  02D7  00AA               	movwf	(?_rotateIR)
  2248  02D8  3018               	movlw	(018h)
  2249  02D9  120A  158A  27BA   	fcall	_rotateIR
              120A  118A         
  2250                           	line	168
  2251                           	
  2252  02DE                     l11746:	
  2253                           ;main.c: 168: frontWall = findWall();
  2254  02DE  120A  158A  222C   	fcall	_findWall
              120A  118A         
  2255  02E3  1803               	btfsc	status,0
  2256  02E4  2AE6               	goto	u4911
  2257  02E5  2AE8               	goto	u4910
  2258                           	
  2259  02E6                     u4911:
  2260  02E6  1670               	bsf	(_frontWall/8),(_frontWall)&7
  2261  02E7  2AE9               	goto	u4924
  2262  02E8                     u4910:
  2263  02E8  1270               	bcf	(_frontWall/8),(_frontWall)&7
  2264  02E9                     u4924:
  2265                           	line	169
  2266                           	
  2267  02E9                     l11748:	
  2268                           ;main.c: 169: if(frontWall)
  2269  02E9  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2270  02EA  2AEC               	goto	u4931
  2271  02EB  2AED               	goto	u4930
  2272  02EC                     u4931:
  2273  02EC  2AF9               	goto	l11754
  2274  02ED                     u4930:
  2275                           	line	171
  2276                           	
  2277  02ED                     l11750:	
  2278                           ;main.c: 170: {
  2279                           ;main.c: 171: lcd_write_data('F');
  2280  02ED  3046               	movlw	(046h)
  2281  02EE  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  2282                           	line	172
  2283                           	
  2284  02F3                     l11752:	
  2285                           ;main.c: 172: frontWallCorrect();
  2286  02F3  120A  118A  2456   	fcall	_frontWallCorrect
              120A  118A         
  2287                           	line	173
  2288                           ;main.c: 173: }
  2289  02F8  2AFF               	goto	l3730
  2290                           	line	174
  2291                           	
  2292  02F9                     l3729:	
  2293                           	line	175
  2294                           	
  2295  02F9                     l11754:	
  2296                           ;main.c: 174: else
  2297                           ;main.c: 175: lcd_write_data(' ');
  2298  02F9  3020               	movlw	(020h)
  2299  02FA  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  2300                           	
  2301  02FF                     l3730:	
  2302                           	line	176
  2303                           ;main.c: 176: rotateIR(24, 0b00001111);
  2304  02FF  300F               	movlw	(0Fh)
  2305  0300  1683               	bsf	status, 5	;RP0=1, select bank1
  2306  0301  1303               	bcf	status, 6	;RP1=0, select bank1
  2307  0302  00E8               	movwf	(??_findWalls+0)^080h+0
  2308  0303  0868               	movf	(??_findWalls+0)^080h+0,w
  2309  0304  1283               	bcf	status, 5	;RP0=0, select bank0
  2310  0305  1303               	bcf	status, 6	;RP1=0, select bank0
  2311  0306  00AA               	movwf	(?_rotateIR)
  2312  0307  3018               	movlw	(018h)
  2313  0308  120A  158A  27BA   	fcall	_rotateIR
              120A  118A         
  2314                           	line	178
  2315                           	
  2316  030D                     l11756:	
  2317                           ;main.c: 178: rightWall = findWall();
  2318  030D  120A  158A  222C   	fcall	_findWall
              120A  118A         
  2319  0312  1803               	btfsc	status,0
  2320  0313  2B15               	goto	u4941
  2321  0314  2B17               	goto	u4940
  2322                           	
  2323  0315                     u4941:
  2324  0315  14F1               	bsf	(_rightWall/8),(_rightWall)&7
  2325  0316  2B18               	goto	u4954
  2326  0317                     u4940:
  2327  0317  10F1               	bcf	(_rightWall/8),(_rightWall)&7
  2328  0318                     u4954:
  2329                           	line	179
  2330                           	
  2331  0318                     l11758:	
  2332                           ;main.c: 179: if(rightWall)
  2333  0318  1CF1               	btfss	(_rightWall/8),(_rightWall)&7
  2334  0319  2B1B               	goto	u4961
  2335  031A  2B1C               	goto	u4960
  2336  031B                     u4961:
  2337  031B  2B28               	goto	l11764
  2338  031C                     u4960:
  2339                           	line	181
  2340                           	
  2341  031C                     l11760:	
  2342                           ;main.c: 180: {
  2343                           ;main.c: 181: lcd_write_data('R');
  2344  031C  3052               	movlw	(052h)
  2345  031D  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  2346                           	line	182
  2347                           	
  2348  0322                     l11762:	
  2349                           ;main.c: 182: rightWallCorrect();
  2350  0322  120A  118A  233D   	fcall	_rightWallCorrect
              120A  118A         
  2351                           	line	183
  2352                           ;main.c: 183: }
  2353  0327  2B2E               	goto	l3732
  2354                           	line	184
  2355                           	
  2356  0328                     l3731:	
  2357                           	line	185
  2358                           	
  2359  0328                     l11764:	
  2360                           ;main.c: 184: else
  2361                           ;main.c: 185: lcd_write_data(' ');
  2362  0328  3020               	movlw	(020h)
  2363  0329  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  2364                           	
  2365  032E                     l3732:	
  2366                           	line	186
  2367                           ;main.c: 186: rotateIR(48, 0b00001101);
  2368  032E  300D               	movlw	(0Dh)
  2369  032F  1683               	bsf	status, 5	;RP0=1, select bank1
  2370  0330  1303               	bcf	status, 6	;RP1=0, select bank1
  2371  0331  00E8               	movwf	(??_findWalls+0)^080h+0
  2372  0332  0868               	movf	(??_findWalls+0)^080h+0,w
  2373  0333  1283               	bcf	status, 5	;RP0=0, select bank0
  2374  0334  1303               	bcf	status, 6	;RP1=0, select bank0
  2375  0335  00AA               	movwf	(?_rotateIR)
  2376  0336  3030               	movlw	(030h)
  2377  0337  120A  158A  27BA   	fcall	_rotateIR
              120A  118A         
  2378                           	line	187
  2379                           	
  2380  033C                     l3733:	
  2381  033C  0008               	return
  2382                           	opt stack 0
  2383                           GLOBAL	__end_of_findWalls
  2384  033D                     	__end_of_findWalls:
  2385 ;; =============== function _findWalls ends ============
  2386                           
  2387                           	signat	_findWalls,88
  2388                           	global	_goRight
  2389                           psect	text1624,local,class=CODE,delta=2
  2390                           global __ptext1624
  2391  0B99                     __ptext1624:
  2392                           
  2393 ;; *************** function _goRight *****************
  2394 ;; Defined at:
  2395 ;;		line 147 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0
  2411 ;;      Temps:          0       1       0       0       0
  2412 ;;      Totals:         0       1       0       0       0
  2413 ;;Total ram usage:        1 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    6
  2416 ;; This function calls:
  2417 ;;		_lcd_set_cursor
  2418 ;;		_lcd_write_data
  2419 ;;		_turnRight90
  2420 ;;		_updateOrientation
  2421 ;;		_driveForDistance
  2422 ;; This function is called by:
  2423 ;;		_goToNextCell
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           psect	text1624
  2427                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  2428                           	line	147
  2429                           	global	__size_of_goRight
  2430  0029                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  2431                           	
  2432  0B99                     _goRight:	
  2433                           	opt	stack 0
  2434                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2435                           	line	148
  2436                           	
  2437  0B99                     l11726:	
  2438                           ;drive.c: 148: lcd_set_cursor(0x0F);
  2439  0B99  300F               	movlw	(0Fh)
  2440  0B9A  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  158A         
  2441                           	line	149
  2442                           ;drive.c: 149: lcd_write_data('R');
  2443  0B9F  3052               	movlw	(052h)
  2444  0BA0  120A  158A  218E   	fcall	_lcd_write_data
              120A  158A         
  2445                           	line	150
  2446                           	
  2447  0BA5                     l11728:	
  2448                           ;drive.c: 150: turnRight90();
  2449  0BA5  120A  158A  2633   	fcall	_turnRight90
              120A  158A         
  2450                           	line	151
  2451                           	
  2452  0BAA                     l11730:	
  2453                           ;drive.c: 151: updateOrientation(RIGHT);
  2454  0BAA  3003               	movlw	(03h)
  2455  0BAB  120A  158A  216B   	fcall	_updateOrientation
              120A  158A         
  2456                           	line	152
  2457                           	
  2458  0BB0                     l11732:	
  2459                           ;drive.c: 152: driveForDistance(1000);
  2460  0BB0  30E8               	movlw	low(03E8h)
  2461  0BB1  1283               	bcf	status, 5	;RP0=0, select bank0
  2462  0BB2  1303               	bcf	status, 6	;RP1=0, select bank0
  2463  0BB3  00B5               	movwf	(?_driveForDistance)
  2464  0BB4  3003               	movlw	high(03E8h)
  2465  0BB5  00B6               	movwf	((?_driveForDistance))+1
  2466  0BB6  120A  118A  23CB   	fcall	_driveForDistance
              120A  158A         
  2467                           	line	153
  2468                           	
  2469  0BBB                     l11734:	
  2470                           ;drive.c: 153: lastMove = RIGHT;
  2471  0BBB  3003               	movlw	(03h)
  2472  0BBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2473  0BBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2474  0BBE  00BF               	movwf	(??_goRight+0)+0
  2475  0BBF  083F               	movf	(??_goRight+0)+0,w
  2476  0BC0  00DD               	movwf	(_lastMove)	;volatile
  2477                           	line	154
  2478                           	
  2479  0BC1                     l2164:	
  2480  0BC1  0008               	return
  2481                           	opt stack 0
  2482                           GLOBAL	__end_of_goRight
  2483  0BC2                     	__end_of_goRight:
  2484 ;; =============== function _goRight ends ============
  2485                           
  2486                           	signat	_goRight,88
  2487                           	global	_goLeft
  2488                           psect	text1625,local,class=CODE,delta=2
  2489                           global __ptext1625
  2490  0B1F                     __ptext1625:
  2491                           
  2492 ;; *************** function _goLeft *****************
  2493 ;; Defined at:
  2494 ;;		line 113 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;		None               void
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    6
  2515 ;; This function calls:
  2516 ;;		_lcd_set_cursor
  2517 ;;		_lcd_write_data
  2518 ;;		_turnLeft90
  2519 ;;		_updateOrientation
  2520 ;;		_driveForDistance
  2521 ;; This function is called by:
  2522 ;;		_goToNextCell
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           psect	text1625
  2526                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  2527                           	line	113
  2528                           	global	__size_of_goLeft
  2529  0028                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  2530                           	
  2531  0B1F                     _goLeft:	
  2532                           	opt	stack 0
  2533                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2534                           	line	114
  2535                           	
  2536  0B1F                     l11716:	
  2537                           ;drive.c: 114: lcd_set_cursor(0x0F);
  2538  0B1F  300F               	movlw	(0Fh)
  2539  0B20  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  158A         
  2540                           	line	115
  2541                           ;drive.c: 115: lcd_write_data('L');
  2542  0B25  304C               	movlw	(04Ch)
  2543  0B26  120A  158A  218E   	fcall	_lcd_write_data
              120A  158A         
  2544                           	line	116
  2545                           	
  2546  0B2B                     l11718:	
  2547                           ;drive.c: 116: turnLeft90();
  2548  0B2B  120A  158A  2510   	fcall	_turnLeft90
              120A  158A         
  2549                           	line	117
  2550                           	
  2551  0B30                     l11720:	
  2552                           ;drive.c: 117: updateOrientation(LEFT);
  2553  0B30  3001               	movlw	(01h)
  2554  0B31  120A  158A  216B   	fcall	_updateOrientation
              120A  158A         
  2555                           	line	118
  2556                           	
  2557  0B36                     l11722:	
  2558                           ;drive.c: 118: driveForDistance(1000);
  2559  0B36  30E8               	movlw	low(03E8h)
  2560  0B37  1283               	bcf	status, 5	;RP0=0, select bank0
  2561  0B38  1303               	bcf	status, 6	;RP1=0, select bank0
  2562  0B39  00B5               	movwf	(?_driveForDistance)
  2563  0B3A  3003               	movlw	high(03E8h)
  2564  0B3B  00B6               	movwf	((?_driveForDistance))+1
  2565  0B3C  120A  118A  23CB   	fcall	_driveForDistance
              120A  158A         
  2566                           	line	119
  2567                           	
  2568  0B41                     l11724:	
  2569                           ;drive.c: 119: lastMove = LEFT;
  2570  0B41  1283               	bcf	status, 5	;RP0=0, select bank0
  2571  0B42  1303               	bcf	status, 6	;RP1=0, select bank0
  2572  0B43  01DD               	clrf	(_lastMove)	;volatile
  2573  0B44  1403               	bsf	status,0
  2574  0B45  0DDD               	rlf	(_lastMove),f	;volatile
  2575                           	line	120
  2576                           	
  2577  0B46                     l2155:	
  2578  0B46  0008               	return
  2579                           	opt stack 0
  2580                           GLOBAL	__end_of_goLeft
  2581  0B47                     	__end_of_goLeft:
  2582 ;; =============== function _goLeft ends ============
  2583                           
  2584                           	signat	_goLeft,88
  2585                           	global	_goForward
  2586                           psect	text1626,local,class=CODE,delta=2
  2587                           global __ptext1626
  2588  09F5                     __ptext1626:
  2589                           
  2590 ;; *************** function _goForward *****************
  2591 ;; Defined at:
  2592 ;;		line 104 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;		None               void
  2599 ;; Registers used:
  2600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0
  2609 ;;      Totals:         0       0       0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    6
  2613 ;; This function calls:
  2614 ;;		_lcd_set_cursor
  2615 ;;		_lcd_write_data
  2616 ;;		_driveForDistance
  2617 ;; This function is called by:
  2618 ;;		_goToNextCell
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           psect	text1626
  2622                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  2623                           	line	104
  2624                           	global	__size_of_goForward
  2625  001B                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  2626                           	
  2627  09F5                     _goForward:	
  2628                           	opt	stack 0
  2629                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2630                           	line	105
  2631                           	
  2632  09F5                     l11710:	
  2633                           ;drive.c: 105: lcd_set_cursor(0x0F);
  2634  09F5  300F               	movlw	(0Fh)
  2635  09F6  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  158A         
  2636                           	line	106
  2637                           ;drive.c: 106: lcd_write_data('F');
  2638  09FB  3046               	movlw	(046h)
  2639  09FC  120A  158A  218E   	fcall	_lcd_write_data
              120A  158A         
  2640                           	line	107
  2641                           	
  2642  0A01                     l11712:	
  2643                           ;drive.c: 107: driveForDistance(1000);
  2644  0A01  30E8               	movlw	low(03E8h)
  2645  0A02  1283               	bcf	status, 5	;RP0=0, select bank0
  2646  0A03  1303               	bcf	status, 6	;RP1=0, select bank0
  2647  0A04  00B5               	movwf	(?_driveForDistance)
  2648  0A05  3003               	movlw	high(03E8h)
  2649  0A06  00B6               	movwf	((?_driveForDistance))+1
  2650  0A07  120A  118A  23CB   	fcall	_driveForDistance
              120A  158A         
  2651                           	line	108
  2652                           	
  2653  0A0C                     l11714:	
  2654                           ;drive.c: 108: lastMove = FORWARD;
  2655  0A0C  1283               	bcf	status, 5	;RP0=0, select bank0
  2656  0A0D  1303               	bcf	status, 6	;RP1=0, select bank0
  2657  0A0E  01DD               	clrf	(_lastMove)	;volatile
  2658                           	line	109
  2659                           	
  2660  0A0F                     l2152:	
  2661  0A0F  0008               	return
  2662                           	opt stack 0
  2663                           GLOBAL	__end_of_goForward
  2664  0A10                     	__end_of_goForward:
  2665 ;; =============== function _goForward ends ============
  2666                           
  2667                           	signat	_goForward,88
  2668                           	global	_goBackward
  2669                           psect	text1627,local,class=CODE,delta=2
  2670                           global __ptext1627
  2671  0B70                     __ptext1627:
  2672                           
  2673 ;; *************** function _goBackward *****************
  2674 ;; Defined at:
  2675 ;;		line 93 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\driv
       e.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;		None               void
  2682 ;; Registers used:
  2683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0
  2691 ;;      Temps:          0       1       0       0       0
  2692 ;;      Totals:         0       1       0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    6
  2696 ;; This function calls:
  2697 ;;		_lcd_set_cursor
  2698 ;;		_lcd_write_data
  2699 ;;		_turnAround
  2700 ;;		_updateOrientation
  2701 ;;		_driveForDistance
  2702 ;; This function is called by:
  2703 ;;		_goToNextCell
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           psect	text1627
  2707                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  2708                           	line	93
  2709                           	global	__size_of_goBackward
  2710  0029                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  2711                           	
  2712  0B70                     _goBackward:	
  2713                           	opt	stack 0
  2714                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2715                           	line	94
  2716                           	
  2717  0B70                     l11700:	
  2718                           ;drive.c: 94: lcd_set_cursor(0x0F);
  2719  0B70  300F               	movlw	(0Fh)
  2720  0B71  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  158A         
  2721                           	line	95
  2722                           ;drive.c: 95: lcd_write_data('B');
  2723  0B76  3042               	movlw	(042h)
  2724  0B77  120A  158A  218E   	fcall	_lcd_write_data
              120A  158A         
  2725                           	line	96
  2726                           	
  2727  0B7C                     l11702:	
  2728                           ;drive.c: 96: turnAround();
  2729  0B7C  120A  158A  2775   	fcall	_turnAround
              120A  158A         
  2730                           	line	97
  2731                           	
  2732  0B81                     l11704:	
  2733                           ;drive.c: 97: updateOrientation(BACKWARD);
  2734  0B81  3002               	movlw	(02h)
  2735  0B82  120A  158A  216B   	fcall	_updateOrientation
              120A  158A         
  2736                           	line	98
  2737                           	
  2738  0B87                     l11706:	
  2739                           ;drive.c: 98: driveForDistance(1000);
  2740  0B87  30E8               	movlw	low(03E8h)
  2741  0B88  1283               	bcf	status, 5	;RP0=0, select bank0
  2742  0B89  1303               	bcf	status, 6	;RP1=0, select bank0
  2743  0B8A  00B5               	movwf	(?_driveForDistance)
  2744  0B8B  3003               	movlw	high(03E8h)
  2745  0B8C  00B6               	movwf	((?_driveForDistance))+1
  2746  0B8D  120A  118A  23CB   	fcall	_driveForDistance
              120A  158A         
  2747                           	line	99
  2748                           	
  2749  0B92                     l11708:	
  2750                           ;drive.c: 99: lastMove = BACKWARD;
  2751  0B92  3002               	movlw	(02h)
  2752  0B93  1283               	bcf	status, 5	;RP0=0, select bank0
  2753  0B94  1303               	bcf	status, 6	;RP1=0, select bank0
  2754  0B95  00BF               	movwf	(??_goBackward+0)+0
  2755  0B96  083F               	movf	(??_goBackward+0)+0,w
  2756  0B97  00DD               	movwf	(_lastMove)	;volatile
  2757                           	line	100
  2758                           	
  2759  0B98                     l2149:	
  2760  0B98  0008               	return
  2761                           	opt stack 0
  2762                           GLOBAL	__end_of_goBackward
  2763  0B99                     	__end_of_goBackward:
  2764 ;; =============== function _goBackward ends ============
  2765                           
  2766                           	signat	_goBackward,88
  2767                           	global	_findWall
  2768                           psect	text1628,local,class=CODE,delta=2
  2769                           global __ptext1628
  2770  0A2C                     __ptext1628:
  2771                           
  2772 ;; *************** function _findWall *****************
  2773 ;; Defined at:
  2774 ;;		line 32 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\ir.c
       "
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    6
  2795 ;; This function calls:
  2796 ;;		_readIR
  2797 ;; This function is called by:
  2798 ;;		_findWalls
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           psect	text1628
  2802                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\ir.c"
  2803                           	line	32
  2804                           	global	__size_of_findWall
  2805  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  2806                           	
  2807  0A2C                     _findWall:	
  2808                           	opt	stack 0
  2809                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2810                           	line	33
  2811                           	
  2812  0A2C                     l11688:	
  2813                           ;ir.c: 33: if(readIR() > 100)
  2814  0A2C  120A  158A  2474   	fcall	_readIR
              120A  158A         
  2815  0A31  1683               	bsf	status, 5	;RP0=1, select bank1
  2816  0A32  1303               	bcf	status, 6	;RP1=0, select bank1
  2817  0A33  0863               	movf	(1+(?_readIR))^080h,w
  2818  0A34  3A80               	xorlw	80h
  2819  0A35  00FF               	movwf	btemp+1
  2820  0A36  3080               	movlw	(high(065h))^80h
  2821  0A37  027F               	subwf	btemp+1,w
  2822  0A38  1D03               	skipz
  2823  0A39  2A3C               	goto	u4875
  2824  0A3A  3065               	movlw	low(065h)
  2825  0A3B  0262               	subwf	(0+(?_readIR))^080h,w
  2826  0A3C                     u4875:
  2827                           
  2828  0A3C  1C03               	skipc
  2829  0A3D  2A3F               	goto	u4871
  2830  0A3E  2A40               	goto	u4870
  2831  0A3F                     u4871:
  2832  0A3F  2A44               	goto	l11696
  2833  0A40                     u4870:
  2834                           	line	34
  2835                           	
  2836  0A40                     l11690:	
  2837                           ;ir.c: 34: return 0;
  2838  0A40  1003               	clrc
  2839                           	
  2840  0A41  2A47               	goto	l6715
  2841                           	
  2842  0A42                     l11692:	
  2843  0A42  2A47               	goto	l6715
  2844                           	
  2845  0A43                     l11694:	
  2846  0A43  2A47               	goto	l6715
  2847                           	line	35
  2848                           	
  2849  0A44                     l6714:	
  2850                           	line	36
  2851                           	
  2852  0A44                     l11696:	
  2853                           ;ir.c: 35: else
  2854                           ;ir.c: 36: return 1;
  2855  0A44  1403               	setc
  2856                           	
  2857  0A45  2A47               	goto	l6715
  2858                           	
  2859  0A46                     l11698:	
  2860  0A46  2A47               	goto	l6715
  2861                           	
  2862  0A47                     l6716:	
  2863                           	line	37
  2864                           	
  2865  0A47                     l6715:	
  2866  0A47  0008               	return
  2867                           	opt stack 0
  2868                           GLOBAL	__end_of_findWall
  2869  0A48                     	__end_of_findWall:
  2870 ;; =============== function _findWall ends ============
  2871                           
  2872                           	signat	_findWall,88
  2873                           	global	_frontWallCorrect
  2874                           psect	text1629,local,class=CODE,delta=2
  2875                           global __ptext1629
  2876  0456                     __ptext1629:
  2877                           
  2878 ;; *************** function _frontWallCorrect *****************
  2879 ;; Defined at:
  2880 ;;		line 214 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;		None               void
  2887 ;; Registers used:
  2888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       2       0       0
  2897 ;;      Totals:         0       0       2       0       0
  2898 ;;Total ram usage:        2 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    6
  2901 ;; This function calls:
  2902 ;;		_drive
  2903 ;;		_readIR
  2904 ;; This function is called by:
  2905 ;;		_findWalls
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           psect	text1629
  2909                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  2910                           	line	214
  2911                           	global	__size_of_frontWallCorrect
  2912  0088                     	__size_of_frontWallCorrect	equ	__end_of_frontWallCorrect-_frontWallCorrect
  2913                           	
  2914  0456                     _frontWallCorrect:	
  2915                           	opt	stack 0
  2916                           ; Regs used in _frontWallCorrect: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2917                           	line	215
  2918                           	
  2919  0456                     l11672:	
  2920                           ;drive.c: 215: while(readIR() < 50)
  2921  0456  2C6F               	goto	l11676
  2922                           	
  2923  0457                     l2193:	
  2924                           	line	217
  2925                           	
  2926  0457                     l11674:	
  2927                           ;drive.c: 216: {
  2928                           ;drive.c: 217: drive(255, 131, 128, 0);
  2929  0457  3083               	movlw	(083h)
  2930  0458  1683               	bsf	status, 5	;RP0=1, select bank1
  2931  0459  1303               	bcf	status, 6	;RP1=0, select bank1
  2932  045A  00E6               	movwf	(??_frontWallCorrect+0)^080h+0
  2933  045B  0866               	movf	(??_frontWallCorrect+0)^080h+0,w
  2934  045C  1283               	bcf	status, 5	;RP0=0, select bank0
  2935  045D  1303               	bcf	status, 6	;RP1=0, select bank0
  2936  045E  00AC               	movwf	(?_drive)
  2937  045F  3080               	movlw	(080h)
  2938  0460  1683               	bsf	status, 5	;RP0=1, select bank1
  2939  0461  1303               	bcf	status, 6	;RP1=0, select bank1
  2940  0462  00E7               	movwf	(??_frontWallCorrect+1)^080h+0
  2941  0463  0867               	movf	(??_frontWallCorrect+1)^080h+0,w
  2942  0464  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  0465  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  0466  00AD               	movwf	0+(?_drive)+01h
  2945  0467  01AE               	clrf	0+(?_drive)+02h
  2946  0468  30FF               	movlw	(0FFh)
  2947  0469  120A  158A  24D9   	fcall	_drive
              120A  118A         
  2948  046E  2C6F               	goto	l11676
  2949                           	line	218
  2950                           	
  2951  046F                     l2192:	
  2952                           	line	215
  2953                           	
  2954  046F                     l11676:	
  2955  046F  120A  158A  2474   	fcall	_readIR
              120A  118A         
  2956  0474  1683               	bsf	status, 5	;RP0=1, select bank1
  2957  0475  1303               	bcf	status, 6	;RP1=0, select bank1
  2958  0476  0863               	movf	(1+(?_readIR))^080h,w
  2959  0477  3A80               	xorlw	80h
  2960  0478  00FF               	movwf	btemp+1
  2961  0479  3080               	movlw	(high(032h))^80h
  2962  047A  027F               	subwf	btemp+1,w
  2963  047B  1D03               	skipz
  2964  047C  2C7F               	goto	u4845
  2965  047D  3032               	movlw	low(032h)
  2966  047E  0262               	subwf	(0+(?_readIR))^080h,w
  2967  047F                     u4845:
  2968                           
  2969  047F  1C03               	skipc
  2970  0480  2C82               	goto	u4841
  2971  0481  2C83               	goto	u4840
  2972  0482                     u4841:
  2973  0482  2C57               	goto	l11674
  2974  0483                     u4840:
  2975  0483  2C84               	goto	l11678
  2976                           	
  2977  0484                     l2194:	
  2978                           	line	219
  2979                           	
  2980  0484                     l11678:	
  2981                           ;drive.c: 218: }
  2982                           ;drive.c: 219: drive(0, 0, 0, 0);
  2983  0484  1283               	bcf	status, 5	;RP0=0, select bank0
  2984  0485  1303               	bcf	status, 6	;RP1=0, select bank0
  2985  0486  01AC               	clrf	(?_drive)
  2986  0487  01AD               	clrf	0+(?_drive)+01h
  2987  0488  01AE               	clrf	0+(?_drive)+02h
  2988  0489  3000               	movlw	(0)
  2989  048A  120A  158A  24D9   	fcall	_drive
              120A  118A         
  2990                           	line	221
  2991                           ;drive.c: 221: while(readIR() > 55 && readIR() < 100)
  2992  048F  2CA8               	goto	l11682
  2993                           	
  2994  0490                     l2196:	
  2995                           	line	223
  2996                           	
  2997  0490                     l11680:	
  2998                           ;drive.c: 222: {
  2999                           ;drive.c: 223: drive(0, 250, 128, 0);
  3000  0490  30FA               	movlw	(0FAh)
  3001  0491  1683               	bsf	status, 5	;RP0=1, select bank1
  3002  0492  1303               	bcf	status, 6	;RP1=0, select bank1
  3003  0493  00E6               	movwf	(??_frontWallCorrect+0)^080h+0
  3004  0494  0866               	movf	(??_frontWallCorrect+0)^080h+0,w
  3005  0495  1283               	bcf	status, 5	;RP0=0, select bank0
  3006  0496  1303               	bcf	status, 6	;RP1=0, select bank0
  3007  0497  00AC               	movwf	(?_drive)
  3008  0498  3080               	movlw	(080h)
  3009  0499  1683               	bsf	status, 5	;RP0=1, select bank1
  3010  049A  1303               	bcf	status, 6	;RP1=0, select bank1
  3011  049B  00E7               	movwf	(??_frontWallCorrect+1)^080h+0
  3012  049C  0867               	movf	(??_frontWallCorrect+1)^080h+0,w
  3013  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  3014  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  3015  049F  00AD               	movwf	0+(?_drive)+01h
  3016  04A0  01AE               	clrf	0+(?_drive)+02h
  3017  04A1  3000               	movlw	(0)
  3018  04A2  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3019  04A7  2CA8               	goto	l11682
  3020                           	line	224
  3021                           	
  3022  04A8                     l2195:	
  3023                           	line	221
  3024                           	
  3025  04A8                     l11682:	
  3026  04A8  120A  158A  2474   	fcall	_readIR
              120A  118A         
  3027  04AD  1683               	bsf	status, 5	;RP0=1, select bank1
  3028  04AE  1303               	bcf	status, 6	;RP1=0, select bank1
  3029  04AF  0863               	movf	(1+(?_readIR))^080h,w
  3030  04B0  3A80               	xorlw	80h
  3031  04B1  00FF               	movwf	btemp+1
  3032  04B2  3080               	movlw	(high(038h))^80h
  3033  04B3  027F               	subwf	btemp+1,w
  3034  04B4  1D03               	skipz
  3035  04B5  2CB8               	goto	u4855
  3036  04B6  3038               	movlw	low(038h)
  3037  04B7  0262               	subwf	(0+(?_readIR))^080h,w
  3038  04B8                     u4855:
  3039                           
  3040  04B8  1C03               	skipc
  3041  04B9  2CBB               	goto	u4851
  3042  04BA  2CBC               	goto	u4850
  3043  04BB                     u4851:
  3044  04BB  2CD2               	goto	l11686
  3045  04BC                     u4850:
  3046                           	
  3047  04BC                     l11684:	
  3048  04BC  120A  158A  2474   	fcall	_readIR
              120A  118A         
  3049  04C1  1683               	bsf	status, 5	;RP0=1, select bank1
  3050  04C2  1303               	bcf	status, 6	;RP1=0, select bank1
  3051  04C3  0863               	movf	(1+(?_readIR))^080h,w
  3052  04C4  3A80               	xorlw	80h
  3053  04C5  00FF               	movwf	btemp+1
  3054  04C6  3080               	movlw	(high(064h))^80h
  3055  04C7  027F               	subwf	btemp+1,w
  3056  04C8  1D03               	skipz
  3057  04C9  2CCC               	goto	u4865
  3058  04CA  3064               	movlw	low(064h)
  3059  04CB  0262               	subwf	(0+(?_readIR))^080h,w
  3060  04CC                     u4865:
  3061                           
  3062  04CC  1C03               	skipc
  3063  04CD  2CCF               	goto	u4861
  3064  04CE  2CD0               	goto	u4860
  3065  04CF                     u4861:
  3066  04CF  2C90               	goto	l11680
  3067  04D0                     u4860:
  3068  04D0  2CD2               	goto	l11686
  3069                           	
  3070  04D1                     l2198:	
  3071  04D1  2CD2               	goto	l11686
  3072                           	
  3073  04D2                     l2199:	
  3074                           	line	225
  3075                           	
  3076  04D2                     l11686:	
  3077                           ;drive.c: 224: }
  3078                           ;drive.c: 225: drive(0, 0, 0, 0);
  3079  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  3080  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  3081  04D4  01AC               	clrf	(?_drive)
  3082  04D5  01AD               	clrf	0+(?_drive)+01h
  3083  04D6  01AE               	clrf	0+(?_drive)+02h
  3084  04D7  3000               	movlw	(0)
  3085  04D8  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3086                           	line	226
  3087                           	
  3088  04DD                     l2200:	
  3089  04DD  0008               	return
  3090                           	opt stack 0
  3091                           GLOBAL	__end_of_frontWallCorrect
  3092  04DE                     	__end_of_frontWallCorrect:
  3093 ;; =============== function _frontWallCorrect ends ============
  3094                           
  3095                           	signat	_frontWallCorrect,88
  3096                           	global	_rightWallCorrect
  3097                           psect	text1630,local,class=CODE,delta=2
  3098                           global __ptext1630
  3099  033D                     __ptext1630:
  3100                           
  3101 ;; *************** function _rightWallCorrect *****************
  3102 ;; Defined at:
  3103 ;;		line 197 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;		None               void
  3110 ;; Registers used:
  3111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0
  3119 ;;      Temps:          0       0       2       0       0
  3120 ;;      Totals:         0       0       2       0       0
  3121 ;;Total ram usage:        2 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    6
  3124 ;; This function calls:
  3125 ;;		_turnRight90
  3126 ;;		_rotateIR
  3127 ;;		_drive
  3128 ;;		_readIR
  3129 ;;		_turnLeft90
  3130 ;; This function is called by:
  3131 ;;		_findWalls
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           psect	text1630
  3135                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  3136                           	line	197
  3137                           	global	__size_of_rightWallCorrect
  3138  008E                     	__size_of_rightWallCorrect	equ	__end_of_rightWallCorrect-_rightWallCorrect
  3139                           	
  3140  033D                     _rightWallCorrect:	
  3141                           	opt	stack 0
  3142                           ; Regs used in _rightWallCorrect: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3143                           	line	198
  3144                           	
  3145  033D                     l11654:	
  3146                           ;drive.c: 198: turnRight90();
  3147  033D  120A  158A  2633   	fcall	_turnRight90
              120A  118A         
  3148                           	line	199
  3149                           	
  3150  0342                     l11656:	
  3151                           ;drive.c: 199: rotateIR(24, 0b00001101);
  3152  0342  300D               	movlw	(0Dh)
  3153  0343  1683               	bsf	status, 5	;RP0=1, select bank1
  3154  0344  1303               	bcf	status, 6	;RP1=0, select bank1
  3155  0345  00E6               	movwf	(??_rightWallCorrect+0)^080h+0
  3156  0346  0866               	movf	(??_rightWallCorrect+0)^080h+0,w
  3157  0347  1283               	bcf	status, 5	;RP0=0, select bank0
  3158  0348  1303               	bcf	status, 6	;RP1=0, select bank0
  3159  0349  00AA               	movwf	(?_rotateIR)
  3160  034A  3018               	movlw	(018h)
  3161  034B  120A  158A  27BA   	fcall	_rotateIR
              120A  118A         
  3162                           	line	200
  3163                           ;drive.c: 200: while(readIR() <45)
  3164  0350  2B69               	goto	l11660
  3165                           	
  3166  0351                     l2184:	
  3167                           	line	202
  3168                           	
  3169  0351                     l11658:	
  3170                           ;drive.c: 201: {
  3171                           ;drive.c: 202: drive(255, 131, 128, 0);
  3172  0351  3083               	movlw	(083h)
  3173  0352  1683               	bsf	status, 5	;RP0=1, select bank1
  3174  0353  1303               	bcf	status, 6	;RP1=0, select bank1
  3175  0354  00E6               	movwf	(??_rightWallCorrect+0)^080h+0
  3176  0355  0866               	movf	(??_rightWallCorrect+0)^080h+0,w
  3177  0356  1283               	bcf	status, 5	;RP0=0, select bank0
  3178  0357  1303               	bcf	status, 6	;RP1=0, select bank0
  3179  0358  00AC               	movwf	(?_drive)
  3180  0359  3080               	movlw	(080h)
  3181  035A  1683               	bsf	status, 5	;RP0=1, select bank1
  3182  035B  1303               	bcf	status, 6	;RP1=0, select bank1
  3183  035C  00E7               	movwf	(??_rightWallCorrect+1)^080h+0
  3184  035D  0867               	movf	(??_rightWallCorrect+1)^080h+0,w
  3185  035E  1283               	bcf	status, 5	;RP0=0, select bank0
  3186  035F  1303               	bcf	status, 6	;RP1=0, select bank0
  3187  0360  00AD               	movwf	0+(?_drive)+01h
  3188  0361  01AE               	clrf	0+(?_drive)+02h
  3189  0362  30FF               	movlw	(0FFh)
  3190  0363  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3191  0368  2B69               	goto	l11660
  3192                           	line	203
  3193                           	
  3194  0369                     l2183:	
  3195                           	line	200
  3196                           	
  3197  0369                     l11660:	
  3198  0369  120A  158A  2474   	fcall	_readIR
              120A  118A         
  3199  036E  1683               	bsf	status, 5	;RP0=1, select bank1
  3200  036F  1303               	bcf	status, 6	;RP1=0, select bank1
  3201  0370  0863               	movf	(1+(?_readIR))^080h,w
  3202  0371  3A80               	xorlw	80h
  3203  0372  00FF               	movwf	btemp+1
  3204  0373  3080               	movlw	(high(02Dh))^80h
  3205  0374  027F               	subwf	btemp+1,w
  3206  0375  1D03               	skipz
  3207  0376  2B79               	goto	u4825
  3208  0377  302D               	movlw	low(02Dh)
  3209  0378  0262               	subwf	(0+(?_readIR))^080h,w
  3210  0379                     u4825:
  3211                           
  3212  0379  1C03               	skipc
  3213  037A  2B7C               	goto	u4821
  3214  037B  2B7D               	goto	u4820
  3215  037C                     u4821:
  3216  037C  2B51               	goto	l11658
  3217  037D                     u4820:
  3218  037D  2B97               	goto	l11664
  3219                           	
  3220  037E                     l2185:	
  3221                           	line	204
  3222                           ;drive.c: 203: }
  3223                           ;drive.c: 204: while(readIR() >55)
  3224  037E  2B97               	goto	l11664
  3225                           	
  3226  037F                     l2187:	
  3227                           	line	206
  3228                           	
  3229  037F                     l11662:	
  3230                           ;drive.c: 205: {
  3231                           ;drive.c: 206: drive(0, 250, 128, 0);
  3232  037F  30FA               	movlw	(0FAh)
  3233  0380  1683               	bsf	status, 5	;RP0=1, select bank1
  3234  0381  1303               	bcf	status, 6	;RP1=0, select bank1
  3235  0382  00E6               	movwf	(??_rightWallCorrect+0)^080h+0
  3236  0383  0866               	movf	(??_rightWallCorrect+0)^080h+0,w
  3237  0384  1283               	bcf	status, 5	;RP0=0, select bank0
  3238  0385  1303               	bcf	status, 6	;RP1=0, select bank0
  3239  0386  00AC               	movwf	(?_drive)
  3240  0387  3080               	movlw	(080h)
  3241  0388  1683               	bsf	status, 5	;RP0=1, select bank1
  3242  0389  1303               	bcf	status, 6	;RP1=0, select bank1
  3243  038A  00E7               	movwf	(??_rightWallCorrect+1)^080h+0
  3244  038B  0867               	movf	(??_rightWallCorrect+1)^080h+0,w
  3245  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  3246  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  3247  038E  00AD               	movwf	0+(?_drive)+01h
  3248  038F  01AE               	clrf	0+(?_drive)+02h
  3249  0390  3000               	movlw	(0)
  3250  0391  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3251  0396  2B97               	goto	l11664
  3252                           	line	207
  3253                           	
  3254  0397                     l2186:	
  3255                           	line	204
  3256                           	
  3257  0397                     l11664:	
  3258  0397  120A  158A  2474   	fcall	_readIR
              120A  118A         
  3259  039C  1683               	bsf	status, 5	;RP0=1, select bank1
  3260  039D  1303               	bcf	status, 6	;RP1=0, select bank1
  3261  039E  0863               	movf	(1+(?_readIR))^080h,w
  3262  039F  3A80               	xorlw	80h
  3263  03A0  00FF               	movwf	btemp+1
  3264  03A1  3080               	movlw	(high(038h))^80h
  3265  03A2  027F               	subwf	btemp+1,w
  3266  03A3  1D03               	skipz
  3267  03A4  2BA7               	goto	u4835
  3268  03A5  3038               	movlw	low(038h)
  3269  03A6  0262               	subwf	(0+(?_readIR))^080h,w
  3270  03A7                     u4835:
  3271                           
  3272  03A7  1803               	skipnc
  3273  03A8  2BAA               	goto	u4831
  3274  03A9  2BAB               	goto	u4830
  3275  03AA                     u4831:
  3276  03AA  2B7F               	goto	l11662
  3277  03AB                     u4830:
  3278  03AB  2BAC               	goto	l11666
  3279                           	
  3280  03AC                     l2188:	
  3281                           	line	208
  3282                           	
  3283  03AC                     l11666:	
  3284                           ;drive.c: 207: }
  3285                           ;drive.c: 208: turnLeft90();
  3286  03AC  120A  158A  2510   	fcall	_turnLeft90
              120A  118A         
  3287                           	line	209
  3288                           	
  3289  03B1                     l11668:	
  3290                           ;drive.c: 209: rotateIR(24, 0b00001111);
  3291  03B1  300F               	movlw	(0Fh)
  3292  03B2  1683               	bsf	status, 5	;RP0=1, select bank1
  3293  03B3  1303               	bcf	status, 6	;RP1=0, select bank1
  3294  03B4  00E6               	movwf	(??_rightWallCorrect+0)^080h+0
  3295  03B5  0866               	movf	(??_rightWallCorrect+0)^080h+0,w
  3296  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  3297  03B7  1303               	bcf	status, 6	;RP1=0, select bank0
  3298  03B8  00AA               	movwf	(?_rotateIR)
  3299  03B9  3018               	movlw	(018h)
  3300  03BA  120A  158A  27BA   	fcall	_rotateIR
              120A  118A         
  3301                           	line	210
  3302                           	
  3303  03BF                     l11670:	
  3304                           ;drive.c: 210: drive(0, 0, 0, 0);
  3305  03BF  1283               	bcf	status, 5	;RP0=0, select bank0
  3306  03C0  1303               	bcf	status, 6	;RP1=0, select bank0
  3307  03C1  01AC               	clrf	(?_drive)
  3308  03C2  01AD               	clrf	0+(?_drive)+01h
  3309  03C3  01AE               	clrf	0+(?_drive)+02h
  3310  03C4  3000               	movlw	(0)
  3311  03C5  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3312                           	line	211
  3313                           	
  3314  03CA                     l2189:	
  3315  03CA  0008               	return
  3316                           	opt stack 0
  3317                           GLOBAL	__end_of_rightWallCorrect
  3318  03CB                     	__end_of_rightWallCorrect:
  3319 ;; =============== function _rightWallCorrect ends ============
  3320                           
  3321                           	signat	_rightWallCorrect,88
  3322                           	global	_driveForDistance
  3323                           psect	text1631,local,class=CODE,delta=2
  3324                           global __ptext1631
  3325  03CB                     __ptext1631:
  3326                           
  3327 ;; *************** function _driveForDistance *****************
  3328 ;; Defined at:
  3329 ;;		line 35 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\driv
       e.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  moveDistance    2   21[BANK0 ] int 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  distance        2   27[BANK0 ] int 
  3334 ;;  deltaDistanc    2   25[BANK0 ] int 
  3335 ;;  low             1   30[BANK0 ] volatile unsigned char 
  3336 ;;  high            1   29[BANK0 ] volatile unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       2       0       0       0
  3347 ;;      Locals:         0       6       0       0       0
  3348 ;;      Temps:          0       2       0       0       0
  3349 ;;      Totals:         0      10       0       0       0
  3350 ;;Total ram usage:       10 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    5
  3353 ;; This function calls:
  3354 ;;		_drive
  3355 ;;		_ser_putch
  3356 ;;		_ser_getch
  3357 ;;		_detectCliff
  3358 ;;		_goReverse
  3359 ;; This function is called by:
  3360 ;;		_goBackward
  3361 ;;		_goForward
  3362 ;;		_goLeft
  3363 ;;		_goRight
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           psect	text1631
  3367                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  3368                           	line	35
  3369                           	global	__size_of_driveForDistance
  3370  008B                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  3371                           	
  3372  03CB                     _driveForDistance:	
  3373                           	opt	stack 0
  3374                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3375                           	line	38
  3376                           	
  3377  03CB                     l11626:	
  3378                           ;drive.c: 37: volatile char high, low;
  3379                           ;drive.c: 38: int deltaDistance = 0;
  3380  03CB  1283               	bcf	status, 5	;RP0=0, select bank0
  3381  03CC  1303               	bcf	status, 6	;RP1=0, select bank0
  3382  03CD  01B9               	clrf	(driveForDistance@deltaDistance)
  3383  03CE  01BA               	clrf	(driveForDistance@deltaDistance+1)
  3384                           	line	39
  3385                           ;drive.c: 39: int distance = 0;
  3386  03CF  01BB               	clrf	(driveForDistance@distance)
  3387  03D0  01BC               	clrf	(driveForDistance@distance+1)
  3388                           	line	41
  3389                           	
  3390  03D1                     l11628:	
  3391                           ;drive.c: 41: moving = 1;
  3392  03D1  1471               	bsf	(_moving/8),(_moving)&7
  3393                           	line	42
  3394                           	
  3395  03D2                     l11630:	
  3396                           ;drive.c: 42: drive(0, 250, 128, 0);
  3397  03D2  30FA               	movlw	(0FAh)
  3398  03D3  00B7               	movwf	(??_driveForDistance+0)+0
  3399  03D4  0837               	movf	(??_driveForDistance+0)+0,w
  3400  03D5  00AC               	movwf	(?_drive)
  3401  03D6  3080               	movlw	(080h)
  3402  03D7  00B8               	movwf	(??_driveForDistance+1)+0
  3403  03D8  0838               	movf	(??_driveForDistance+1)+0,w
  3404  03D9  00AD               	movwf	0+(?_drive)+01h
  3405  03DA  01AE               	clrf	0+(?_drive)+02h
  3406  03DB  3000               	movlw	(0)
  3407  03DC  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3408                           	line	44
  3409                           ;drive.c: 44: while(moving)
  3410  03E1  2C50               	goto	l11652
  3411                           	
  3412  03E2                     l2136:	
  3413                           	line	46
  3414                           	
  3415  03E2                     l11632:	
  3416                           ;drive.c: 45: {
  3417                           ;drive.c: 46: ser_putch(142);
  3418  03E2  308E               	movlw	(08Eh)
  3419  03E3  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  3420                           	line	47
  3421                           ;drive.c: 47: ser_putch(19);
  3422  03E8  3013               	movlw	(013h)
  3423  03E9  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  3424                           	line	48
  3425                           ;drive.c: 48: high = ser_getch();
  3426  03EE  120A  158A  2289   	fcall	_ser_getch
              120A  118A         
  3427  03F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3428  03F4  1303               	bcf	status, 6	;RP1=0, select bank0
  3429  03F5  00B7               	movwf	(??_driveForDistance+0)+0
  3430  03F6  0837               	movf	(??_driveForDistance+0)+0,w
  3431  03F7  00BD               	movwf	(driveForDistance@high)	;volatile
  3432                           	line	49
  3433                           ;drive.c: 49: low = ser_getch();
  3434  03F8  120A  158A  2289   	fcall	_ser_getch
              120A  118A         
  3435  03FD  1283               	bcf	status, 5	;RP0=0, select bank0
  3436  03FE  1303               	bcf	status, 6	;RP1=0, select bank0
  3437  03FF  00B7               	movwf	(??_driveForDistance+0)+0
  3438  0400  0837               	movf	(??_driveForDistance+0)+0,w
  3439  0401  00BE               	movwf	(driveForDistance@low)	;volatile
  3440                           	line	50
  3441                           	
  3442  0402                     l11634:	
  3443                           ;drive.c: 50: deltaDistance = high*256 + low;
  3444  0402  083D               	movf	(driveForDistance@high),w	;volatile
  3445  0403  00B7               	movwf	(??_driveForDistance+0)+0
  3446  0404  01B8               	clrf	(??_driveForDistance+0)+0+1
  3447  0405  0837               	movf	(??_driveForDistance+0)+0,w
  3448  0406  00B8               	movwf	(??_driveForDistance+0)+1
  3449  0407  01B7               	clrf	(??_driveForDistance+0)+0
  3450  0408  083E               	movf	(driveForDistance@low),w	;volatile
  3451  0409  0737               	addwf	0+(??_driveForDistance+0)+0,w
  3452  040A  00B9               	movwf	(driveForDistance@deltaDistance)
  3453  040B  3000               	movlw	0
  3454  040C  1803               	skipnc
  3455  040D  3001               	movlw	1
  3456  040E  0738               	addwf	1+(??_driveForDistance+0)+0,w
  3457  040F  00BA               	movwf	1+(driveForDistance@deltaDistance)
  3458                           	line	51
  3459                           	
  3460  0410                     l11636:	
  3461                           ;drive.c: 51: distance += deltaDistance;
  3462  0410  0839               	movf	(driveForDistance@deltaDistance),w
  3463  0411  07BB               	addwf	(driveForDistance@distance),f
  3464  0412  1803               	skipnc
  3465  0413  0ABC               	incf	(driveForDistance@distance+1),f
  3466  0414  083A               	movf	(driveForDistance@deltaDistance+1),w
  3467  0415  07BC               	addwf	(driveForDistance@distance+1),f
  3468                           	line	53
  3469                           	
  3470  0416                     l11638:	
  3471                           ;drive.c: 53: if(detectCliff())
  3472  0416  120A  118A  24DE   	fcall	_detectCliff
              120A  118A         
  3473  041B  1C03               	btfss	status,0
  3474  041C  2C1E               	goto	u4791
  3475  041D  2C1F               	goto	u4790
  3476  041E                     u4791:
  3477  041E  2C31               	goto	l11644
  3478  041F                     u4790:
  3479                           	line	55
  3480                           	
  3481  041F                     l11640:	
  3482                           ;drive.c: 54: {
  3483                           ;drive.c: 55: drive(0, 0, 0, 0);
  3484  041F  1283               	bcf	status, 5	;RP0=0, select bank0
  3485  0420  1303               	bcf	status, 6	;RP1=0, select bank0
  3486  0421  01AC               	clrf	(?_drive)
  3487  0422  01AD               	clrf	0+(?_drive)+01h
  3488  0423  01AE               	clrf	0+(?_drive)+02h
  3489  0424  3000               	movlw	(0)
  3490  0425  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3491                           	line	56
  3492                           ;drive.c: 56: goReverse();
  3493  042A  120A  118A  26CF   	fcall	_goReverse
              120A  118A         
  3494                           	line	58
  3495                           	
  3496  042F                     l11642:	
  3497                           ;drive.c: 58: successfulDrive = 0;
  3498  042F  11F1               	bcf	(_successfulDrive/8),(_successfulDrive)&7
  3499                           	line	59
  3500                           ;drive.c: 59: break;
  3501  0430  2C55               	goto	l2140
  3502                           	line	60
  3503                           	
  3504  0431                     l2137:	
  3505                           	line	72
  3506                           	
  3507  0431                     l11644:	
  3508                           ;drive.c: 60: }
  3509                           ;drive.c: 72: if(distance >= moveDistance)
  3510  0431  1283               	bcf	status, 5	;RP0=0, select bank0
  3511  0432  1303               	bcf	status, 6	;RP1=0, select bank0
  3512  0433  083C               	movf	(driveForDistance@distance+1),w
  3513  0434  3A80               	xorlw	80h
  3514  0435  00B7               	movwf	(??_driveForDistance+0)+0
  3515  0436  0836               	movf	(driveForDistance@moveDistance+1),w
  3516  0437  3A80               	xorlw	80h
  3517  0438  0237               	subwf	(??_driveForDistance+0)+0,w
  3518  0439  1D03               	skipz
  3519  043A  2C3D               	goto	u4805
  3520  043B  0835               	movf	(driveForDistance@moveDistance),w
  3521  043C  023B               	subwf	(driveForDistance@distance),w
  3522  043D                     u4805:
  3523                           
  3524  043D  1C03               	skipc
  3525  043E  2C40               	goto	u4801
  3526  043F  2C41               	goto	u4800
  3527  0440                     u4801:
  3528  0440  2C50               	goto	l11652
  3529  0441                     u4800:
  3530                           	line	74
  3531                           	
  3532  0441                     l11646:	
  3533                           ;drive.c: 73: {
  3534                           ;drive.c: 74: drive(0, 0, 0, 0);
  3535  0441  1283               	bcf	status, 5	;RP0=0, select bank0
  3536  0442  1303               	bcf	status, 6	;RP1=0, select bank0
  3537  0443  01AC               	clrf	(?_drive)
  3538  0444  01AD               	clrf	0+(?_drive)+01h
  3539  0445  01AE               	clrf	0+(?_drive)+02h
  3540  0446  3000               	movlw	(0)
  3541  0447  120A  158A  24D9   	fcall	_drive
              120A  118A         
  3542                           	line	75
  3543                           	
  3544  044C                     l11648:	
  3545                           ;drive.c: 75: moving = 0;
  3546  044C  1071               	bcf	(_moving/8),(_moving)&7
  3547                           	line	76
  3548                           	
  3549  044D                     l11650:	
  3550                           ;drive.c: 76: successfulDrive = 1;
  3551  044D  15F1               	bsf	(_successfulDrive/8),(_successfulDrive)&7
  3552  044E  2C50               	goto	l11652
  3553                           	line	77
  3554                           	
  3555  044F                     l2139:	
  3556  044F  2C50               	goto	l11652
  3557                           	line	78
  3558                           	
  3559  0450                     l2135:	
  3560                           	line	44
  3561                           	
  3562  0450                     l11652:	
  3563  0450  1871               	btfsc	(_moving/8),(_moving)&7
  3564  0451  2C53               	goto	u4811
  3565  0452  2C54               	goto	u4810
  3566  0453                     u4811:
  3567  0453  2BE2               	goto	l11632
  3568  0454                     u4810:
  3569  0454  2C55               	goto	l2140
  3570                           	
  3571  0455                     l2138:	
  3572                           	line	79
  3573                           	
  3574  0455                     l2140:	
  3575  0455  0008               	return
  3576                           	opt stack 0
  3577                           GLOBAL	__end_of_driveForDistance
  3578  0456                     	__end_of_driveForDistance:
  3579 ;; =============== function _driveForDistance ends ============
  3580                           
  3581                           	signat	_driveForDistance,4216
  3582                           	global	_updateLocation
  3583                           psect	text1632,local,class=CODE,delta=2
  3584                           global __ptext1632
  3585  073E                     __ptext1632:
  3586                           
  3587 ;; *************** function _updateLocation *****************
  3588 ;; Defined at:
  3589 ;;		line 202 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;		None               void
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0
  3605 ;;      Temps:          0       1       0       0       0
  3606 ;;      Totals:         0       1       0       0       0
  3607 ;;Total ram usage:        1 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    4
  3610 ;; This function calls:
  3611 ;;		_lcd_set_cursor
  3612 ;;		_lcd_write_data
  3613 ;;		_getOrientation
  3614 ;;		_lcd_write_1_digit_bcd
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           psect	text1632
  3620                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  3621                           	line	202
  3622                           	global	__size_of_updateLocation
  3623  0060                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  3624                           	
  3625  073E                     _updateLocation:	
  3626                           	opt	stack 3
  3627                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3628                           	line	203
  3629                           	
  3630  073E                     l11602:	
  3631                           ;main.c: 203: lcd_set_cursor(0x40);
  3632  073E  3040               	movlw	(040h)
  3633  073F  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  3634                           	line	204
  3635                           ;main.c: 204: switch(getOrientation())
  3636  0744  2F73               	goto	l11622
  3637                           	line	206
  3638                           ;main.c: 205: {
  3639                           ;main.c: 206: case NORTH:
  3640                           	
  3641  0745                     l3746:	
  3642                           	line	207
  3643                           	
  3644  0745                     l11604:	
  3645                           ;main.c: 207: ++yCoord;
  3646  0745  3001               	movlw	(01h)
  3647  0746  1283               	bcf	status, 5	;RP0=0, select bank0
  3648  0747  1303               	bcf	status, 6	;RP1=0, select bank0
  3649  0748  00AE               	movwf	(??_updateLocation+0)+0
  3650  0749  082E               	movf	(??_updateLocation+0)+0,w
  3651  074A  07FB               	addwf	(_yCoord),f	;volatile
  3652                           	line	208
  3653                           	
  3654  074B                     l11606:	
  3655                           ;main.c: 208: lcd_write_data('N');
  3656  074B  304E               	movlw	(04Eh)
  3657  074C  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  3658                           	line	209
  3659                           ;main.c: 209: break;
  3660  0751  2F85               	goto	l11624
  3661                           	line	210
  3662                           ;main.c: 210: case SOUTH:
  3663                           	
  3664  0752                     l3748:	
  3665                           	line	211
  3666                           	
  3667  0752                     l11608:	
  3668                           ;main.c: 211: --yCoord;
  3669  0752  3001               	movlw	low(01h)
  3670  0753  02FB               	subwf	(_yCoord),f	;volatile
  3671                           	line	212
  3672                           	
  3673  0754                     l11610:	
  3674                           ;main.c: 212: lcd_write_data('S');
  3675  0754  3053               	movlw	(053h)
  3676  0755  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  3677                           	line	213
  3678                           ;main.c: 213: break;
  3679  075A  2F85               	goto	l11624
  3680                           	line	214
  3681                           ;main.c: 214: case EAST:
  3682                           	
  3683  075B                     l3749:	
  3684                           	line	215
  3685                           	
  3686  075B                     l11612:	
  3687                           ;main.c: 215: ++xCoord;
  3688  075B  3001               	movlw	(01h)
  3689  075C  1283               	bcf	status, 5	;RP0=0, select bank0
  3690  075D  1303               	bcf	status, 6	;RP1=0, select bank0
  3691  075E  00AE               	movwf	(??_updateLocation+0)+0
  3692  075F  082E               	movf	(??_updateLocation+0)+0,w
  3693  0760  07FA               	addwf	(_xCoord),f	;volatile
  3694                           	line	216
  3695                           	
  3696  0761                     l11614:	
  3697                           ;main.c: 216: lcd_write_data('E');
  3698  0761  3045               	movlw	(045h)
  3699  0762  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  3700                           	line	217
  3701                           ;main.c: 217: break;
  3702  0767  2F85               	goto	l11624
  3703                           	line	218
  3704                           ;main.c: 218: case WEST:
  3705                           	
  3706  0768                     l3750:	
  3707                           	line	219
  3708                           	
  3709  0768                     l11616:	
  3710                           ;main.c: 219: --xCoord;
  3711  0768  3001               	movlw	low(01h)
  3712  0769  02FA               	subwf	(_xCoord),f	;volatile
  3713                           	line	220
  3714                           	
  3715  076A                     l11618:	
  3716                           ;main.c: 220: lcd_write_data('W');
  3717  076A  3057               	movlw	(057h)
  3718  076B  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  3719                           	line	221
  3720                           ;main.c: 221: break;
  3721  0770  2F85               	goto	l11624
  3722                           	line	222
  3723                           ;main.c: 222: default:
  3724                           	
  3725  0771                     l3751:	
  3726                           	line	223
  3727                           ;main.c: 223: break;
  3728  0771  2F85               	goto	l11624
  3729                           	line	224
  3730                           	
  3731  0772                     l11620:	
  3732                           ;main.c: 224: }
  3733  0772  2F85               	goto	l11624
  3734                           	line	204
  3735                           	
  3736  0773                     l3745:	
  3737                           	
  3738  0773                     l11622:	
  3739  0773  120A  158A  213F   	fcall	_getOrientation
              120A  118A         
  3740                           	; Switch size 1, requested type "space"
  3741                           ; Number of cases is 4, Range of values is 0 to 3
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte           13     7 (average)
  3745                           ; direct_byte           20     8 (fixed)
  3746                           ; jumptable            260     6 (fixed)
  3747                           ; rangetable             8     6 (fixed)
  3748                           ; spacedrange           14     9 (fixed)
  3749                           ; locatedrange           4     3 (fixed)
  3750                           ;	Chosen strategy is simple_byte
  3751                           
  3752                           	opt asmopt_off
  3753  0778  3A00               	xorlw	0^0	; case 0
  3754  0779  1903               	skipnz
  3755  077A  2F68               	goto	l11616
  3756  077B  3A01               	xorlw	1^0	; case 1
  3757  077C  1903               	skipnz
  3758  077D  2F52               	goto	l11608
  3759  077E  3A03               	xorlw	2^1	; case 2
  3760  077F  1903               	skipnz
  3761  0780  2F5B               	goto	l11612
  3762  0781  3A01               	xorlw	3^2	; case 3
  3763  0782  1903               	skipnz
  3764  0783  2F45               	goto	l11604
  3765  0784  2F85               	goto	l11624
  3766                           	opt asmopt_on
  3767                           
  3768                           	line	224
  3769                           	
  3770  0785                     l3747:	
  3771                           	line	226
  3772                           	
  3773  0785                     l11624:	
  3774                           ;main.c: 226: lcd_set_cursor(0x01);
  3775  0785  3001               	movlw	(01h)
  3776  0786  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  3777                           	line	227
  3778                           ;main.c: 227: lcd_write_1_digit_bcd(xCoord);
  3779  078B  087A               	movf	(_xCoord),w	;volatile
  3780  078C  120A  118A  27F3   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  3781                           	line	228
  3782                           ;main.c: 228: lcd_set_cursor(0x03);
  3783  0791  3003               	movlw	(03h)
  3784  0792  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  3785                           	line	229
  3786                           ;main.c: 229: lcd_write_1_digit_bcd(yCoord);
  3787  0797  087B               	movf	(_yCoord),w	;volatile
  3788  0798  120A  118A  27F3   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  3789                           	line	230
  3790                           	
  3791  079D                     l3752:	
  3792  079D  0008               	return
  3793                           	opt stack 0
  3794                           GLOBAL	__end_of_updateLocation
  3795  079E                     	__end_of_updateLocation:
  3796 ;; =============== function _updateLocation ends ============
  3797                           
  3798                           	signat	_updateLocation,88
  3799                           	global	_lookForVictim
  3800                           psect	text1633,local,class=CODE,delta=2
  3801                           global __ptext1633
  3802  0EB0                     __ptext1633:
  3803                           
  3804 ;; *************** function _lookForVictim *****************
  3805 ;; Defined at:
  3806 ;;		line 134 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;		None               void
  3813 ;; Registers used:
  3814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3820 ;;      Params:         0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0
  3822 ;;      Temps:          0       2       0       0       0
  3823 ;;      Totals:         0       2       0       0       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    4
  3827 ;; This function calls:
  3828 ;;		_play_iCreate_song
  3829 ;;		_lcd_set_cursor
  3830 ;;		_lcd_write_data
  3831 ;;		_getVictimZone
  3832 ;;		_lcd_write_1_digit_bcd
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           psect	text1633
  3838                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  3839                           	line	134
  3840                           	global	__size_of_lookForVictim
  3841  0040                     	__size_of_lookForVictim	equ	__end_of_lookForVictim-_lookForVictim
  3842                           	
  3843  0EB0                     _lookForVictim:	
  3844                           	opt	stack 3
  3845                           ; Regs used in _lookForVictim: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3846                           	line	136
  3847                           	
  3848  0EB0                     l11584:	
  3849                           ;main.c: 136: if(victimFound)
  3850  0EB0  1E71               	btfss	(_victimFound/8),(_victimFound)&7
  3851  0EB1  2EB3               	goto	u4771
  3852  0EB2  2EB4               	goto	u4770
  3853  0EB3                     u4771:
  3854  0EB3  2EEF               	goto	l3724
  3855  0EB4                     u4770:
  3856                           	line	138
  3857                           	
  3858  0EB4                     l11586:	
  3859                           ;main.c: 137: {
  3860                           ;main.c: 138: if(goingHome)
  3861  0EB4  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3862  0EB5  2EB7               	goto	u4781
  3863  0EB6  2EB8               	goto	u4780
  3864  0EB7                     u4781:
  3865  0EB7  2ECE               	goto	l11596
  3866  0EB8                     u4780:
  3867                           	line	140
  3868                           	
  3869  0EB8                     l11588:	
  3870                           ;main.c: 139: {
  3871                           ;main.c: 140: play_iCreate_song(3);
  3872  0EB8  3003               	movlw	(03h)
  3873  0EB9  120A  158A  217C   	fcall	_play_iCreate_song
              120A  158A         
  3874                           	line	141
  3875                           	
  3876  0EBE                     l11590:	
  3877                           ;main.c: 141: victimZone = 0;
  3878  0EBE  1283               	bcf	status, 5	;RP0=0, select bank0
  3879  0EBF  1303               	bcf	status, 6	;RP1=0, select bank0
  3880  0EC0  01E4               	clrf	(_victimZone)	;volatile
  3881                           	line	142
  3882                           	
  3883  0EC1                     l11592:	
  3884                           ;main.c: 142: lcd_set_cursor(0x09);
  3885  0EC1  3009               	movlw	(09h)
  3886  0EC2  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  158A         
  3887                           	line	143
  3888                           	
  3889  0EC7                     l11594:	
  3890                           ;main.c: 143: lcd_write_data('V');
  3891  0EC7  3056               	movlw	(056h)
  3892  0EC8  120A  158A  218E   	fcall	_lcd_write_data
              120A  158A         
  3893                           	line	144
  3894                           ;main.c: 144: }
  3895  0ECD  2EEF               	goto	l3724
  3896                           	line	145
  3897                           	
  3898  0ECE                     l3722:	
  3899                           	line	147
  3900                           	
  3901  0ECE                     l11596:	
  3902                           ;main.c: 145: else
  3903                           ;main.c: 146: {
  3904                           ;main.c: 147: victimZone = getVictimZone(xCoord, yCoord);
  3905  0ECE  087B               	movf	(_yCoord),w	;volatile
  3906  0ECF  1283               	bcf	status, 5	;RP0=0, select bank0
  3907  0ED0  1303               	bcf	status, 6	;RP1=0, select bank0
  3908  0ED1  00AE               	movwf	(??_lookForVictim+0)+0
  3909  0ED2  082E               	movf	(??_lookForVictim+0)+0,w
  3910  0ED3  00AA               	movwf	(?_getVictimZone)
  3911  0ED4  087A               	movf	(_xCoord),w	;volatile
  3912  0ED5  120A  118A  2560   	fcall	_getVictimZone
              120A  158A         
  3913  0EDA  1283               	bcf	status, 5	;RP0=0, select bank0
  3914  0EDB  1303               	bcf	status, 6	;RP1=0, select bank0
  3915  0EDC  00AF               	movwf	(??_lookForVictim+1)+0
  3916  0EDD  082F               	movf	(??_lookForVictim+1)+0,w
  3917  0EDE  00E4               	movwf	(_victimZone)	;volatile
  3918                           	line	148
  3919                           	
  3920  0EDF                     l11598:	
  3921                           ;main.c: 148: lcd_set_cursor(0x08);
  3922  0EDF  3008               	movlw	(08h)
  3923  0EE0  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  158A         
  3924                           	line	149
  3925                           	
  3926  0EE5                     l11600:	
  3927                           ;main.c: 149: lcd_write_1_digit_bcd(victimZone);
  3928  0EE5  1283               	bcf	status, 5	;RP0=0, select bank0
  3929  0EE6  1303               	bcf	status, 6	;RP1=0, select bank0
  3930  0EE7  0864               	movf	(_victimZone),w	;volatile
  3931  0EE8  120A  118A  27F3   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  3932  0EED  2EEF               	goto	l3724
  3933                           	line	150
  3934                           	
  3935  0EEE                     l3723:	
  3936  0EEE  2EEF               	goto	l3724
  3937                           	line	151
  3938                           	
  3939  0EEF                     l3721:	
  3940                           	line	152
  3941                           	
  3942  0EEF                     l3724:	
  3943  0EEF  0008               	return
  3944                           	opt stack 0
  3945                           GLOBAL	__end_of_lookForVictim
  3946  0EF0                     	__end_of_lookForVictim:
  3947 ;; =============== function _lookForVictim ends ============
  3948                           
  3949                           	signat	_lookForVictim,88
  3950                           	global	_checkForFinalDestination
  3951                           psect	text1634,local,class=CODE,delta=2
  3952                           global __ptext1634
  3953  0C19                     __ptext1634:
  3954                           
  3955 ;; *************** function _checkForFinalDestination *****************
  3956 ;; Defined at:
  3957 ;;		line 123 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    4
  3978 ;; This function calls:
  3979 ;;		_getFinalX
  3980 ;;		_getFinalY
  3981 ;;		_play_iCreate_song
  3982 ;;		_lcd_set_cursor
  3983 ;;		_lcd_write_data
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           psect	text1634
  3989                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  3990                           	line	123
  3991                           	global	__size_of_checkForFinalDestination
  3992  002D                     	__size_of_checkForFinalDestination	equ	__end_of_checkForFinalDestination-_checkForFinal
                                 Destination
  3993                           	
  3994  0C19                     _checkForFinalDestination:	
  3995                           	opt	stack 3
  3996                           ; Regs used in _checkForFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3997                           	line	124
  3998                           	
  3999  0C19                     l11570:	
  4000                           ;main.c: 124: if(!goingHome && (xCoord == getFinalX()) && (yCoord == getFinalY()))
  4001  0C19  1AF0               	btfsc	(_goingHome/8),(_goingHome)&7
  4002  0C1A  2C1C               	goto	u4741
  4003  0C1B  2C1D               	goto	u4740
  4004  0C1C                     u4741:
  4005  0C1C  2C45               	goto	l3718
  4006  0C1D                     u4740:
  4007                           	
  4008  0C1D                     l11572:	
  4009  0C1D  120A  158A  2144   	fcall	_getFinalX
              120A  158A         
  4010  0C22  067A               	xorwf	(_xCoord),w	;volatile
  4011  0C23  1D03               	skipz
  4012  0C24  2C26               	goto	u4751
  4013  0C25  2C27               	goto	u4750
  4014  0C26                     u4751:
  4015  0C26  2C45               	goto	l3718
  4016  0C27                     u4750:
  4017                           	
  4018  0C27                     l11574:	
  4019  0C27  120A  158A  2149   	fcall	_getFinalY
              120A  158A         
  4020  0C2C  067B               	xorwf	(_yCoord),w	;volatile
  4021  0C2D  1D03               	skipz
  4022  0C2E  2C30               	goto	u4761
  4023  0C2F  2C31               	goto	u4760
  4024  0C30                     u4761:
  4025  0C30  2C45               	goto	l3718
  4026  0C31                     u4760:
  4027                           	line	126
  4028                           	
  4029  0C31                     l11576:	
  4030                           ;main.c: 125: {
  4031                           ;main.c: 126: play_iCreate_song(2);
  4032  0C31  3002               	movlw	(02h)
  4033  0C32  120A  158A  217C   	fcall	_play_iCreate_song
              120A  158A         
  4034                           	line	127
  4035                           	
  4036  0C37                     l11578:	
  4037                           ;main.c: 127: goingHome = 1;
  4038  0C37  16F0               	bsf	(_goingHome/8),(_goingHome)&7
  4039                           	line	128
  4040                           	
  4041  0C38                     l11580:	
  4042                           ;main.c: 128: lcd_set_cursor(0x06);
  4043  0C38  3006               	movlw	(06h)
  4044  0C39  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  158A         
  4045                           	line	129
  4046                           	
  4047  0C3E                     l11582:	
  4048                           ;main.c: 129: lcd_write_data('R');
  4049  0C3E  3052               	movlw	(052h)
  4050  0C3F  120A  158A  218E   	fcall	_lcd_write_data
              120A  158A         
  4051  0C44  2C45               	goto	l3718
  4052                           	line	130
  4053                           	
  4054  0C45                     l3717:	
  4055                           	line	131
  4056                           	
  4057  0C45                     l3718:	
  4058  0C45  0008               	return
  4059                           	opt stack 0
  4060                           GLOBAL	__end_of_checkForFinalDestination
  4061  0C46                     	__end_of_checkForFinalDestination:
  4062 ;; =============== function _checkForFinalDestination ends ============
  4063                           
  4064                           	signat	_checkForFinalDestination,88
  4065                           	global	_init
  4066                           psect	text1635,local,class=CODE,delta=2
  4067                           global __ptext1635
  4068  0CA3                     __ptext1635:
  4069                           
  4070 ;; *************** function _init *****************
  4071 ;; Defined at:
  4072 ;;		line 86 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\main
       .c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;		None               void
  4079 ;; Registers used:
  4080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4086 ;;      Params:         0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    5
  4093 ;; This function calls:
  4094 ;;		_init_adc
  4095 ;;		_lcd_init
  4096 ;;		_ser_init
  4097 ;;		_initIRobot
  4098 ;;		_initSongs
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           psect	text1635
  4104                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  4105                           	line	86
  4106                           	global	__size_of_init
  4107  0036                     	__size_of_init	equ	__end_of_init-_init
  4108                           	
  4109  0CA3                     _init:	
  4110                           	opt	stack 2
  4111                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4112                           	line	87
  4113                           	
  4114  0CA3                     l11538:	
  4115                           ;main.c: 87: start.pressed = 0;
  4116  0CA3  1283               	bcf	status, 5	;RP0=0, select bank0
  4117  0CA4  1303               	bcf	status, 6	;RP1=0, select bank0
  4118  0CA5  01D5               	clrf	(_start)
  4119                           	line	88
  4120                           	
  4121  0CA6                     l11540:	
  4122                           ;main.c: 88: start.released = 1;
  4123  0CA6  01D6               	clrf	0+(_start)+01h
  4124  0CA7  1403               	bsf	status,0
  4125  0CA8  0DD6               	rlf	0+(_start)+01h,f
  4126                           	line	90
  4127                           	
  4128  0CA9                     l11542:	
  4129                           ;main.c: 90: init_adc();
  4130  0CA9  120A  158A  21C8   	fcall	_init_adc
              120A  158A         
  4131                           	line	91
  4132                           	
  4133  0CAE                     l11544:	
  4134                           ;main.c: 91: lcd_init();
  4135  0CAE  120A  158A  23C2   	fcall	_lcd_init
              120A  158A         
  4136                           	line	93
  4137                           	
  4138  0CB3                     l11546:	
  4139                           ;main.c: 93: TRISB = 0b00000001;
  4140  0CB3  3001               	movlw	(01h)
  4141  0CB4  1683               	bsf	status, 5	;RP0=1, select bank1
  4142  0CB5  1303               	bcf	status, 6	;RP1=0, select bank1
  4143  0CB6  0086               	movwf	(134)^080h	;volatile
  4144                           	line	96
  4145                           	
  4146  0CB7                     l11548:	
  4147                           ;main.c: 96: OPTION_REG = 0b00000100;
  4148  0CB7  3004               	movlw	(04h)
  4149  0CB8  0081               	movwf	(129)^080h	;volatile
  4150                           	line	98
  4151                           	
  4152  0CB9                     l11550:	
  4153                           ;main.c: 98: TMR0IE = 1;
  4154  0CB9  168B               	bsf	(93/8),(93)&7
  4155                           	line	99
  4156                           	
  4157  0CBA                     l11552:	
  4158                           ;main.c: 99: SSPSTAT = 0b01000000;
  4159  0CBA  3040               	movlw	(040h)
  4160  0CBB  0094               	movwf	(148)^080h	;volatile
  4161                           	line	100
  4162                           	
  4163  0CBC                     l11554:	
  4164                           ;main.c: 100: SSPCON = 0b00100010;
  4165  0CBC  3022               	movlw	(022h)
  4166  0CBD  1283               	bcf	status, 5	;RP0=0, select bank0
  4167  0CBE  1303               	bcf	status, 6	;RP1=0, select bank0
  4168  0CBF  0094               	movwf	(20)	;volatile
  4169                           	line	101
  4170                           	
  4171  0CC0                     l11556:	
  4172                           ;main.c: 101: TRISC = 0b10010000;
  4173  0CC0  3090               	movlw	(090h)
  4174  0CC1  1683               	bsf	status, 5	;RP0=1, select bank1
  4175  0CC2  1303               	bcf	status, 6	;RP1=0, select bank1
  4176  0CC3  0087               	movwf	(135)^080h	;volatile
  4177                           	line	102
  4178                           	
  4179  0CC4                     l11558:	
  4180                           ;main.c: 102: PORTC = 0b00000000;
  4181  0CC4  1283               	bcf	status, 5	;RP0=0, select bank0
  4182  0CC5  1303               	bcf	status, 6	;RP1=0, select bank0
  4183  0CC6  0187               	clrf	(7)	;volatile
  4184                           	line	105
  4185                           	
  4186  0CC7                     l11560:	
  4187                           ;main.c: 105: PEIE = 1;
  4188  0CC7  170B               	bsf	(94/8),(94)&7
  4189                           	line	106
  4190                           	
  4191  0CC8                     l11562:	
  4192                           ;main.c: 106: GIE = 1;
  4193  0CC8  178B               	bsf	(95/8),(95)&7
  4194                           	line	108
  4195                           	
  4196  0CC9                     l11564:	
  4197                           ;main.c: 108: ser_init();
  4198  0CC9  120A  158A  22F7   	fcall	_ser_init
              120A  158A         
  4199                           	line	109
  4200                           	
  4201  0CCE                     l11566:	
  4202                           ;main.c: 109: initIRobot();
  4203  0CCE  120A  158A  2210   	fcall	_initIRobot
              120A  158A         
  4204                           	line	110
  4205                           	
  4206  0CD3                     l11568:	
  4207                           ;main.c: 110: initSongs();
  4208  0CD3  120A  158A  25B8   	fcall	_initSongs
              120A  158A         
  4209                           	line	111
  4210                           	
  4211  0CD8                     l3711:	
  4212  0CD8  0008               	return
  4213                           	opt stack 0
  4214                           GLOBAL	__end_of_init
  4215  0CD9                     	__end_of_init:
  4216 ;; =============== function _init ends ============
  4217                           
  4218                           	signat	_init,88
  4219                           	global	_readIR
  4220                           psect	text1636,local,class=CODE,delta=2
  4221                           global __ptext1636
  4222  0C74                     __ptext1636:
  4223                           
  4224 ;; *************** function _readIR *****************
  4225 ;; Defined at:
  4226 ;;		line 43 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\ir.c
       "
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  cm              2    6[BANK1 ] int 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2    4[BANK1 ] int 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4240 ;;      Params:         0       0       2       0       0
  4241 ;;      Locals:         0       0       2       0       0
  4242 ;;      Temps:          0       0       0       0       0
  4243 ;;      Totals:         0       0       4       0       0
  4244 ;;Total ram usage:        4 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    5
  4247 ;; This function calls:
  4248 ;;		_adc_read_channel
  4249 ;;		_convert
  4250 ;; This function is called by:
  4251 ;;		_rightWallCorrect
  4252 ;;		_frontWallCorrect
  4253 ;;		_findWall
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           psect	text1636
  4257                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\ir.c"
  4258                           	line	43
  4259                           	global	__size_of_readIR
  4260  002F                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  4261                           	
  4262  0C74                     _readIR:	
  4263                           	opt	stack 0
  4264                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4265                           	line	44
  4266                           	
  4267  0C74                     l11532:	
  4268                           ;ir.c: 44: int cm = convert(adc_read_channel(0));
  4269  0C74  3000               	movlw	(0)
  4270  0C75  120A  118A  279E   	fcall	_adc_read_channel
              120A  158A         
  4271  0C7A  1683               	bsf	status, 5	;RP0=1, select bank1
  4272  0C7B  1303               	bcf	status, 6	;RP1=0, select bank1
  4273  0C7C  085F               	movf	(1+(?_adc_read_channel))^080h,w
  4274  0C7D  1283               	bcf	status, 5	;RP0=0, select bank0
  4275  0C7E  1303               	bcf	status, 6	;RP1=0, select bank0
  4276  0C7F  01C2               	clrf	(?_convert+1)
  4277  0C80  07C2               	addwf	(?_convert+1)
  4278  0C81  1683               	bsf	status, 5	;RP0=1, select bank1
  4279  0C82  1303               	bcf	status, 6	;RP1=0, select bank1
  4280  0C83  085E               	movf	(0+(?_adc_read_channel))^080h,w
  4281  0C84  1283               	bcf	status, 5	;RP0=0, select bank0
  4282  0C85  1303               	bcf	status, 6	;RP1=0, select bank0
  4283  0C86  01C1               	clrf	(?_convert)
  4284  0C87  07C1               	addwf	(?_convert)
  4285                           
  4286  0C88  120A  118A  2015   	fcall	_convert
              120A  158A         
  4287  0C8D  1283               	bcf	status, 5	;RP0=0, select bank0
  4288  0C8E  1303               	bcf	status, 6	;RP1=0, select bank0
  4289  0C8F  0842               	movf	(1+(?_convert)),w
  4290  0C90  1683               	bsf	status, 5	;RP0=1, select bank1
  4291  0C91  1303               	bcf	status, 6	;RP1=0, select bank1
  4292  0C92  01E5               	clrf	(readIR@cm+1)^080h
  4293  0C93  07E5               	addwf	(readIR@cm+1)^080h
  4294  0C94  1283               	bcf	status, 5	;RP0=0, select bank0
  4295  0C95  1303               	bcf	status, 6	;RP1=0, select bank0
  4296  0C96  0841               	movf	(0+(?_convert)),w
  4297  0C97  1683               	bsf	status, 5	;RP0=1, select bank1
  4298  0C98  1303               	bcf	status, 6	;RP1=0, select bank1
  4299  0C99  01E4               	clrf	(readIR@cm)^080h
  4300  0C9A  07E4               	addwf	(readIR@cm)^080h
  4301                           
  4302                           	line	45
  4303                           	
  4304  0C9B                     l11534:	
  4305                           ;ir.c: 45: return cm;
  4306  0C9B  0865               	movf	(readIR@cm+1)^080h,w
  4307  0C9C  01E3               	clrf	(?_readIR+1)^080h
  4308  0C9D  07E3               	addwf	(?_readIR+1)^080h
  4309  0C9E  0864               	movf	(readIR@cm)^080h,w
  4310  0C9F  01E2               	clrf	(?_readIR)^080h
  4311  0CA0  07E2               	addwf	(?_readIR)^080h
  4312                           
  4313  0CA1  2CA2               	goto	l6719
  4314                           	
  4315  0CA2                     l11536:	
  4316                           	line	46
  4317                           	
  4318  0CA2                     l6719:	
  4319  0CA2  0008               	return
  4320                           	opt stack 0
  4321                           GLOBAL	__end_of_readIR
  4322  0CA3                     	__end_of_readIR:
  4323 ;; =============== function _readIR ends ============
  4324                           
  4325                           	signat	_readIR,90
  4326                           	global	_goReverse
  4327                           psect	text1637,local,class=CODE,delta=2
  4328                           global __ptext1637
  4329  06CF                     __ptext1637:
  4330                           
  4331 ;; *************** function _goReverse *****************
  4332 ;; Defined at:
  4333 ;;		line 123 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;		None               void
  4340 ;; Registers used:
  4341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4347 ;;      Params:         0       0       0       0       0
  4348 ;;      Locals:         0       0       0       0       0
  4349 ;;      Temps:          0       2       0       0       0
  4350 ;;      Totals:         0       2       0       0       0
  4351 ;;Total ram usage:        2 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    4
  4354 ;; This function calls:
  4355 ;;		_lcd_set_cursor
  4356 ;;		_lcd_write_data
  4357 ;;		_drive
  4358 ;;		_waitFor
  4359 ;;		_updateOrientation
  4360 ;; This function is called by:
  4361 ;;		_driveForDistance
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           psect	text1637
  4365                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  4366                           	line	123
  4367                           	global	__size_of_goReverse
  4368  006F                     	__size_of_goReverse	equ	__end_of_goReverse-_goReverse
  4369                           	
  4370  06CF                     _goReverse:	
  4371                           	opt	stack 0
  4372                           ; Regs used in _goReverse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4373                           	line	124
  4374                           	
  4375  06CF                     l11516:	
  4376                           ;drive.c: 124: lcd_set_cursor(0x0F);
  4377  06CF  300F               	movlw	(0Fh)
  4378  06D0  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  4379                           	line	125
  4380                           ;drive.c: 125: lcd_write_data('!');
  4381  06D5  3021               	movlw	(021h)
  4382  06D6  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  4383                           	line	126
  4384                           	
  4385  06DB                     l11518:	
  4386                           ;drive.c: 126: drive(255, 131, 128, 0);
  4387  06DB  3083               	movlw	(083h)
  4388  06DC  1283               	bcf	status, 5	;RP0=0, select bank0
  4389  06DD  1303               	bcf	status, 6	;RP1=0, select bank0
  4390  06DE  00B3               	movwf	(??_goReverse+0)+0
  4391  06DF  0833               	movf	(??_goReverse+0)+0,w
  4392  06E0  00AC               	movwf	(?_drive)
  4393  06E1  3080               	movlw	(080h)
  4394  06E2  00B4               	movwf	(??_goReverse+1)+0
  4395  06E3  0834               	movf	(??_goReverse+1)+0,w
  4396  06E4  00AD               	movwf	0+(?_drive)+01h
  4397  06E5  01AE               	clrf	0+(?_drive)+02h
  4398  06E6  30FF               	movlw	(0FFh)
  4399  06E7  120A  158A  24D9   	fcall	_drive
              120A  118A         
  4400                           	line	127
  4401                           	
  4402  06EC                     l11520:	
  4403                           ;drive.c: 127: waitFor(156,1,244);
  4404  06EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4405  06ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4406  06EE  01AC               	clrf	(?_waitFor)
  4407  06EF  1403               	bsf	status,0
  4408  06F0  0DAC               	rlf	(?_waitFor),f
  4409  06F1  30F4               	movlw	(0F4h)
  4410  06F2  00B3               	movwf	(??_goReverse+0)+0
  4411  06F3  0833               	movf	(??_goReverse+0)+0,w
  4412  06F4  00AD               	movwf	0+(?_waitFor)+01h
  4413  06F5  309C               	movlw	(09Ch)
  4414  06F6  120A  158A  2347   	fcall	_waitFor
              120A  118A         
  4415                           	line	128
  4416                           	
  4417  06FB                     l11522:	
  4418                           ;drive.c: 128: drive(0, 0, 0, 0);
  4419  06FB  1283               	bcf	status, 5	;RP0=0, select bank0
  4420  06FC  1303               	bcf	status, 6	;RP1=0, select bank0
  4421  06FD  01AC               	clrf	(?_drive)
  4422  06FE  01AD               	clrf	0+(?_drive)+01h
  4423  06FF  01AE               	clrf	0+(?_drive)+02h
  4424  0700  3000               	movlw	(0)
  4425  0701  120A  158A  24D9   	fcall	_drive
              120A  118A         
  4426                           	line	129
  4427                           	
  4428  0706                     l11524:	
  4429                           ;drive.c: 129: if(lastMove == LEFT)
  4430  0706  1283               	bcf	status, 5	;RP0=0, select bank0
  4431  0707  1303               	bcf	status, 6	;RP1=0, select bank0
  4432  0708  085D               	movf	(_lastMove),w	;volatile
  4433  0709  3A01               	xorlw	01h
  4434  070A  1D03               	skipz
  4435  070B  2F0D               	goto	u4721
  4436  070C  2F0E               	goto	u4720
  4437  070D                     u4721:
  4438  070D  2F21               	goto	l11528
  4439  070E                     u4720:
  4440                           	line	131
  4441                           	
  4442  070E                     l11526:	
  4443                           ;drive.c: 130: {
  4444                           ;drive.c: 131: lcd_set_cursor(0x0F);
  4445  070E  300F               	movlw	(0Fh)
  4446  070F  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  4447                           	line	132
  4448                           ;drive.c: 132: lcd_write_data('R');
  4449  0714  3052               	movlw	(052h)
  4450  0715  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  4451                           	line	134
  4452                           ;drive.c: 134: updateOrientation(RIGHT);
  4453  071A  3003               	movlw	(03h)
  4454  071B  120A  158A  216B   	fcall	_updateOrientation
              120A  118A         
  4455                           	line	135
  4456                           ;drive.c: 135: }
  4457  0720  2F3D               	goto	l2161
  4458                           	line	136
  4459                           	
  4460  0721                     l2158:	
  4461                           	
  4462  0721                     l11528:	
  4463                           ;drive.c: 136: else if (lastMove == RIGHT)
  4464  0721  1283               	bcf	status, 5	;RP0=0, select bank0
  4465  0722  1303               	bcf	status, 6	;RP1=0, select bank0
  4466  0723  085D               	movf	(_lastMove),w	;volatile
  4467  0724  3A03               	xorlw	03h
  4468  0725  1D03               	skipz
  4469  0726  2F28               	goto	u4731
  4470  0727  2F29               	goto	u4730
  4471  0728                     u4731:
  4472  0728  2F3D               	goto	l2161
  4473  0729                     u4730:
  4474                           	line	138
  4475                           	
  4476  0729                     l11530:	
  4477                           ;drive.c: 137: {
  4478                           ;drive.c: 138: lcd_set_cursor(0x0F);
  4479  0729  300F               	movlw	(0Fh)
  4480  072A  120A  158A  2160   	fcall	_lcd_set_cursor
              120A  118A         
  4481                           	line	139
  4482                           ;drive.c: 139: lcd_write_data('L');
  4483  072F  304C               	movlw	(04Ch)
  4484  0730  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  4485                           	line	141
  4486                           ;drive.c: 141: updateOrientation(LEFT);
  4487  0735  3001               	movlw	(01h)
  4488  0736  120A  158A  216B   	fcall	_updateOrientation
              120A  118A         
  4489  073B  2F3D               	goto	l2161
  4490                           	line	142
  4491                           	
  4492  073C                     l2160:	
  4493  073C  2F3D               	goto	l2161
  4494                           	line	143
  4495                           	
  4496  073D                     l2159:	
  4497                           	
  4498  073D                     l2161:	
  4499  073D  0008               	return
  4500                           	opt stack 0
  4501                           GLOBAL	__end_of_goReverse
  4502  073E                     	__end_of_goReverse:
  4503 ;; =============== function _goReverse ends ============
  4504                           
  4505                           	signat	_goReverse,88
  4506                           	global	_checkIfHome
  4507                           psect	text1638,local,class=CODE,delta=2
  4508                           global __ptext1638
  4509  0A48                     __ptext1638:
  4510                           
  4511 ;; *************** function _checkIfHome *****************
  4512 ;; Defined at:
  4513 ;;		line 245 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;		None               void
  4520 ;; Registers used:
  4521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4527 ;;      Params:         0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0
  4530 ;;      Totals:         0       0       0       0       0
  4531 ;;Total ram usage:        0 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:    4
  4534 ;; This function calls:
  4535 ;;		_drive
  4536 ;;		_play_iCreate_song
  4537 ;; This function is called by:
  4538 ;;		_main
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           psect	text1638
  4542                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  4543                           	line	245
  4544                           	global	__size_of_checkIfHome
  4545  0020                     	__size_of_checkIfHome	equ	__end_of_checkIfHome-_checkIfHome
  4546                           	
  4547  0A48                     _checkIfHome:	
  4548                           	opt	stack 3
  4549                           ; Regs used in _checkIfHome: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4550                           	line	246
  4551                           	
  4552  0A48                     l11508:	
  4553                           ;main.c: 246: if((xCoord == 1) && (yCoord == 3))
  4554  0A48  087A               	movf	(_xCoord),w	;volatile
  4555  0A49  3A01               	xorlw	01h
  4556  0A4A  1D03               	skipz
  4557  0A4B  2A4D               	goto	u4701
  4558  0A4C  2A4E               	goto	u4700
  4559  0A4D                     u4701:
  4560  0A4D  2A67               	goto	l3765
  4561  0A4E                     u4700:
  4562                           	
  4563  0A4E                     l11510:	
  4564  0A4E  087B               	movf	(_yCoord),w	;volatile
  4565  0A4F  3A03               	xorlw	03h
  4566  0A50  1D03               	skipz
  4567  0A51  2A53               	goto	u4711
  4568  0A52  2A54               	goto	u4710
  4569  0A53                     u4711:
  4570  0A53  2A67               	goto	l3765
  4571  0A54                     u4710:
  4572                           	line	248
  4573                           	
  4574  0A54                     l11512:	
  4575                           ;main.c: 247: {
  4576                           ;main.c: 248: drive(0, 0, 0, 0);
  4577  0A54  1283               	bcf	status, 5	;RP0=0, select bank0
  4578  0A55  1303               	bcf	status, 6	;RP1=0, select bank0
  4579  0A56  01AC               	clrf	(?_drive)
  4580  0A57  01AD               	clrf	0+(?_drive)+01h
  4581  0A58  01AE               	clrf	0+(?_drive)+02h
  4582  0A59  3000               	movlw	(0)
  4583  0A5A  120A  158A  24D9   	fcall	_drive
              120A  158A         
  4584                           	line	249
  4585                           ;main.c: 249: play_iCreate_song(4);
  4586  0A5F  3004               	movlw	(04h)
  4587  0A60  120A  158A  217C   	fcall	_play_iCreate_song
              120A  158A         
  4588                           	line	250
  4589                           	
  4590  0A65                     l11514:	
  4591                           ;main.c: 250: home = 1;
  4592  0A65  1770               	bsf	(_home/8),(_home)&7
  4593  0A66  2A67               	goto	l3765
  4594                           	line	251
  4595                           	
  4596  0A67                     l3764:	
  4597                           	line	252
  4598                           	
  4599  0A67                     l3765:	
  4600  0A67  0008               	return
  4601                           	opt stack 0
  4602                           GLOBAL	__end_of_checkIfHome
  4603  0A68                     	__end_of_checkIfHome:
  4604 ;; =============== function _checkIfHome ends ============
  4605                           
  4606                           	signat	_checkIfHome,88
  4607                           	global	_initSongs
  4608                           psect	text1639,local,class=CODE,delta=2
  4609                           global __ptext1639
  4610  0DB8                     __ptext1639:
  4611                           
  4612 ;; *************** function _initSongs *****************
  4613 ;; Defined at:
  4614 ;;		line 30 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\song
       s.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;		None               void
  4621 ;; Registers used:
  4622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    4
  4635 ;; This function calls:
  4636 ;;		_ser_putArr
  4637 ;; This function is called by:
  4638 ;;		_init
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           psect	text1639
  4642                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\songs.c"
  4643                           	line	30
  4644                           	global	__size_of_initSongs
  4645  003D                     	__size_of_initSongs	equ	__end_of_initSongs-_initSongs
  4646                           	
  4647  0DB8                     _initSongs:	
  4648                           	opt	stack 2
  4649                           ; Regs used in _initSongs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4650                           	line	31
  4651                           	
  4652  0DB8                     l11506:	
  4653                           ;songs.c: 31: ser_putArr(finalCountdown, 27);
  4654  0DB8  30AD               	movlw	(_finalCountdown&0ffh)
  4655  0DB9  1283               	bcf	status, 5	;RP0=0, select bank0
  4656  0DBA  1303               	bcf	status, 6	;RP1=0, select bank0
  4657  0DBB  00AC               	movwf	(?_ser_putArr)
  4658  0DBC  3001               	movlw	(0x3/2)
  4659  0DBD  00AD               	movwf	(?_ser_putArr+1)
  4660  0DBE  301B               	movlw	low(01Bh)
  4661  0DBF  00AE               	movwf	0+(?_ser_putArr)+02h
  4662  0DC0  3000               	movlw	high(01Bh)
  4663  0DC1  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4664  0DC2  120A  158A  257F   	fcall	_ser_putArr
              120A  158A         
  4665                           	line	32
  4666                           ;songs.c: 32: ser_putArr(superMarioBros, 25);
  4667  0DC7  30A0               	movlw	(_superMarioBros&0ffh)
  4668  0DC8  1283               	bcf	status, 5	;RP0=0, select bank0
  4669  0DC9  1303               	bcf	status, 6	;RP1=0, select bank0
  4670  0DCA  00AC               	movwf	(?_ser_putArr)
  4671  0DCB  3000               	movlw	(0x1/2)
  4672  0DCC  00AD               	movwf	(?_ser_putArr+1)
  4673  0DCD  3019               	movlw	low(019h)
  4674  0DCE  00AE               	movwf	0+(?_ser_putArr)+02h
  4675  0DCF  3000               	movlw	high(019h)
  4676  0DD0  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4677  0DD1  120A  158A  257F   	fcall	_ser_putArr
              120A  158A         
  4678                           	line	33
  4679                           ;songs.c: 33: ser_putArr(lookingForU2, 29);
  4680  0DD6  3090               	movlw	(_lookingForU2&0ffh)
  4681  0DD7  1283               	bcf	status, 5	;RP0=0, select bank0
  4682  0DD8  1303               	bcf	status, 6	;RP1=0, select bank0
  4683  0DD9  00AC               	movwf	(?_ser_putArr)
  4684  0DDA  3001               	movlw	(0x3/2)
  4685  0DDB  00AD               	movwf	(?_ser_putArr+1)
  4686  0DDC  301D               	movlw	low(01Dh)
  4687  0DDD  00AE               	movwf	0+(?_ser_putArr)+02h
  4688  0DDE  3000               	movlw	high(01Dh)
  4689  0DDF  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4690  0DE0  120A  158A  257F   	fcall	_ser_putArr
              120A  158A         
  4691                           	line	34
  4692                           ;songs.c: 34: ser_putArr(champions, 21);
  4693  0DE5  30B9               	movlw	(_champions&0ffh)
  4694  0DE6  1283               	bcf	status, 5	;RP0=0, select bank0
  4695  0DE7  1303               	bcf	status, 6	;RP1=0, select bank0
  4696  0DE8  00AC               	movwf	(?_ser_putArr)
  4697  0DE9  3000               	movlw	(0x1/2)
  4698  0DEA  00AD               	movwf	(?_ser_putArr+1)
  4699  0DEB  3015               	movlw	low(015h)
  4700  0DEC  00AE               	movwf	0+(?_ser_putArr)+02h
  4701  0DED  3000               	movlw	high(015h)
  4702  0DEE  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4703  0DEF  120A  158A  257F   	fcall	_ser_putArr
              120A  158A         
  4704                           	line	35
  4705                           	
  4706  0DF4                     l6006:	
  4707  0DF4  0008               	return
  4708                           	opt stack 0
  4709                           GLOBAL	__end_of_initSongs
  4710  0DF5                     	__end_of_initSongs:
  4711 ;; =============== function _initSongs ends ============
  4712                           
  4713                           	signat	_initSongs,88
  4714                           	global	_lcd_init
  4715                           psect	text1640,local,class=CODE,delta=2
  4716                           global __ptext1640
  4717  0BC2                     __ptext1640:
  4718                           
  4719 ;; *************** function _lcd_init *****************
  4720 ;; Defined at:
  4721 ;;		line 78 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\lcd.
       c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;		None               void
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0, pclath, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4735 ;;      Params:         0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    3
  4742 ;; This function calls:
  4743 ;;		_lcd_write_control
  4744 ;; This function is called by:
  4745 ;;		_init
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           psect	text1640
  4749                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\lcd.c"
  4750                           	line	78
  4751                           	global	__size_of_lcd_init
  4752  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4753                           	
  4754  0BC2                     _lcd_init:	
  4755                           	opt	stack 3
  4756                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4757                           	line	82
  4758                           	
  4759  0BC2                     l11486:	
  4760                           ;lcd.c: 82: ADCON1 = 0b00000010;
  4761  0BC2  3002               	movlw	(02h)
  4762  0BC3  1683               	bsf	status, 5	;RP0=1, select bank1
  4763  0BC4  1303               	bcf	status, 6	;RP1=0, select bank1
  4764  0BC5  009F               	movwf	(159)^080h	;volatile
  4765                           	line	85
  4766                           	
  4767  0BC6                     l11488:	
  4768                           ;lcd.c: 85: PORTD = 0;
  4769  0BC6  1283               	bcf	status, 5	;RP0=0, select bank0
  4770  0BC7  1303               	bcf	status, 6	;RP1=0, select bank0
  4771  0BC8  0188               	clrf	(8)	;volatile
  4772                           	line	86
  4773                           	
  4774  0BC9                     l11490:	
  4775                           ;lcd.c: 86: PORTE = 0;
  4776  0BC9  0189               	clrf	(9)	;volatile
  4777                           	line	88
  4778                           	
  4779  0BCA                     l11492:	
  4780                           ;lcd.c: 88: TRISD = 0b00000000;
  4781  0BCA  1683               	bsf	status, 5	;RP0=1, select bank1
  4782  0BCB  1303               	bcf	status, 6	;RP1=0, select bank1
  4783  0BCC  0188               	clrf	(136)^080h	;volatile
  4784                           	line	89
  4785                           	
  4786  0BCD                     l11494:	
  4787                           ;lcd.c: 89: TRISE = 0b00000000;
  4788  0BCD  0189               	clrf	(137)^080h	;volatile
  4789                           	line	92
  4790                           	
  4791  0BCE                     l11496:	
  4792                           ;lcd.c: 92: lcd_write_control(0b00000001);
  4793  0BCE  3001               	movlw	(01h)
  4794  0BCF  120A  158A  21B4   	fcall	_lcd_write_control
              120A  158A         
  4795                           	line	93
  4796                           	
  4797  0BD4                     l11498:	
  4798                           ;lcd.c: 93: lcd_write_control(0b00111000);
  4799  0BD4  3038               	movlw	(038h)
  4800  0BD5  120A  158A  21B4   	fcall	_lcd_write_control
              120A  158A         
  4801                           	line	94
  4802                           	
  4803  0BDA                     l11500:	
  4804                           ;lcd.c: 94: lcd_write_control(0b00001100);
  4805  0BDA  300C               	movlw	(0Ch)
  4806  0BDB  120A  158A  21B4   	fcall	_lcd_write_control
              120A  158A         
  4807                           	line	95
  4808                           	
  4809  0BE0                     l11502:	
  4810                           ;lcd.c: 95: lcd_write_control(0b00000110);
  4811  0BE0  3006               	movlw	(06h)
  4812  0BE1  120A  158A  21B4   	fcall	_lcd_write_control
              120A  158A         
  4813                           	line	96
  4814                           	
  4815  0BE6                     l11504:	
  4816                           ;lcd.c: 96: lcd_write_control(0b00000010);
  4817  0BE6  3002               	movlw	(02h)
  4818  0BE7  120A  158A  21B4   	fcall	_lcd_write_control
              120A  158A         
  4819                           	line	98
  4820                           	
  4821  0BEC                     l2914:	
  4822  0BEC  0008               	return
  4823                           	opt stack 0
  4824                           GLOBAL	__end_of_lcd_init
  4825  0BED                     	__end_of_lcd_init:
  4826 ;; =============== function _lcd_init ends ============
  4827                           
  4828                           	signat	_lcd_init,88
  4829                           	global	_lcd_write_1_digit_bcd
  4830                           psect	text1641,local,class=CODE,delta=2
  4831                           global __ptext1641
  4832  07F3                     __ptext1641:
  4833                           
  4834 ;; *************** function _lcd_write_1_digit_bcd *****************
  4835 ;; Defined at:
  4836 ;;		line 44 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\lcd.
       c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  data            1    wreg     unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  data            1   13[BANK0 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;		None               void
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4850 ;;      Params:         0       0       0       0       0
  4851 ;;      Locals:         0       1       0       0       0
  4852 ;;      Temps:          0       0       0       0       0
  4853 ;;      Totals:         0       1       0       0       0
  4854 ;;Total ram usage:        1 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    3
  4857 ;; This function calls:
  4858 ;;		_lcd_write_data
  4859 ;; This function is called by:
  4860 ;;		_lookForVictim
  4861 ;;		_updateLocation
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           psect	text1641
  4865                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\lcd.c"
  4866                           	line	44
  4867                           	global	__size_of_lcd_write_1_digit_bcd
  4868  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  4869                           	
  4870  07F3                     _lcd_write_1_digit_bcd:	
  4871                           	opt	stack 3
  4872                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  4873                           ;lcd_write_1_digit_bcd@data stored from wreg
  4874  07F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4875  07F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4876  07F5  00AD               	movwf	(lcd_write_1_digit_bcd@data)
  4877                           	line	45
  4878                           	
  4879  07F6                     l11484:	
  4880                           ;lcd.c: 45: lcd_write_data(data + 48);
  4881  07F6  082D               	movf	(lcd_write_1_digit_bcd@data),w
  4882  07F7  3E30               	addlw	030h
  4883  07F8  120A  158A  218E   	fcall	_lcd_write_data
              120A  118A         
  4884                           	line	46
  4885                           	
  4886  07FD                     l2902:	
  4887  07FD  0008               	return
  4888                           	opt stack 0
  4889                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  4890  07FE                     	__end_of_lcd_write_1_digit_bcd:
  4891 ;; =============== function _lcd_write_1_digit_bcd ends ============
  4892                           
  4893                           	signat	_lcd_write_1_digit_bcd,4216
  4894                           	global	_lcd_write_string
  4895                           psect	text1642,local,class=CODE,delta=2
  4896                           global __ptext1642
  4897  0AAB                     __ptext1642:
  4898                           
  4899 ;; *************** function _lcd_write_string *****************
  4900 ;; Defined at:
  4901 ;;		line 38 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\lcd.
       c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  s               1    wreg     PTR const unsigned char 
  4904 ;;		 -> STR_2(17), STR_1(17), 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  4907 ;;		 -> STR_2(17), STR_1(17), 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;		None               void
  4910 ;; Registers used:
  4911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4917 ;;      Params:         0       0       0       0       0
  4918 ;;      Locals:         0       1       0       0       0
  4919 ;;      Temps:          0       1       0       0       0
  4920 ;;      Totals:         0       2       0       0       0
  4921 ;;Total ram usage:        2 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    3
  4924 ;; This function calls:
  4925 ;;		_lcd_write_data
  4926 ;; This function is called by:
  4927 ;;		_main
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           psect	text1642
  4931                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\lcd.c"
  4932                           	line	38
  4933                           	global	__size_of_lcd_write_string
  4934  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4935                           	
  4936  0AAB                     _lcd_write_string:	
  4937                           	opt	stack 4
  4938                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4939                           ;lcd_write_string@s stored from wreg
  4940  0AAB  1283               	bcf	status, 5	;RP0=0, select bank0
  4941  0AAC  1303               	bcf	status, 6	;RP1=0, select bank0
  4942  0AAD  00AE               	movwf	(lcd_write_string@s)
  4943                           	line	40
  4944                           	
  4945  0AAE                     l11476:	
  4946                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  4947  0AAE  2AC2               	goto	l11482
  4948                           	
  4949  0AAF                     l2897:	
  4950                           	
  4951  0AAF                     l11478:	
  4952  0AAF  082E               	movf	(lcd_write_string@s),w
  4953  0AB0  0084               	movwf	fsr0
  4954  0AB1  120A  158A  2000   	fcall	stringdir
              120A  158A         
  4955  0AB6  120A  158A  218E   	fcall	_lcd_write_data
              120A  158A         
  4956                           	
  4957  0ABB                     l11480:	
  4958  0ABB  3001               	movlw	(01h)
  4959  0ABC  1283               	bcf	status, 5	;RP0=0, select bank0
  4960  0ABD  1303               	bcf	status, 6	;RP1=0, select bank0
  4961  0ABE  00AD               	movwf	(??_lcd_write_string+0)+0
  4962  0ABF  082D               	movf	(??_lcd_write_string+0)+0,w
  4963  0AC0  07AE               	addwf	(lcd_write_string@s),f
  4964  0AC1  2AC2               	goto	l11482
  4965                           	
  4966  0AC2                     l2896:	
  4967                           	
  4968  0AC2                     l11482:	
  4969  0AC2  082E               	movf	(lcd_write_string@s),w
  4970  0AC3  0084               	movwf	fsr0
  4971  0AC4  120A  158A  2000   	fcall	stringdir
              120A  158A         
  4972  0AC9  3800               	iorlw	0
  4973  0ACA  1D03               	skipz
  4974  0ACB  2ACD               	goto	u4691
  4975  0ACC  2ACE               	goto	u4690
  4976  0ACD                     u4691:
  4977  0ACD  2AAF               	goto	l11478
  4978  0ACE                     u4690:
  4979  0ACE  2ACF               	goto	l2899
  4980                           	
  4981  0ACF                     l2898:	
  4982                           	line	41
  4983                           	
  4984  0ACF                     l2899:	
  4985  0ACF  0008               	return
  4986                           	opt stack 0
  4987                           GLOBAL	__end_of_lcd_write_string
  4988  0AD0                     	__end_of_lcd_write_string:
  4989 ;; =============== function _lcd_write_string ends ============
  4990                           
  4991                           	signat	_lcd_write_string,4216
  4992                           	global	_turnRight90
  4993                           psect	text1643,local,class=CODE,delta=2
  4994                           global __ptext1643
  4995  0E33                     __ptext1643:
  4996                           
  4997 ;; *************** function _turnRight90 *****************
  4998 ;; Defined at:
  4999 ;;		line 174 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;		None               void
  5006 ;; Registers used:
  5007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0
  5015 ;;      Temps:          0       3       0       0       0
  5016 ;;      Totals:         0       3       0       0       0
  5017 ;;Total ram usage:        3 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    4
  5020 ;; This function calls:
  5021 ;;		_drive
  5022 ;;		_waitFor
  5023 ;; This function is called by:
  5024 ;;		_goRight
  5025 ;;		_rightWallCorrect
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           psect	text1643
  5029                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  5030                           	line	174
  5031                           	global	__size_of_turnRight90
  5032  003E                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  5033                           	
  5034  0E33                     _turnRight90:	
  5035                           	opt	stack 1
  5036                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5037                           	line	175
  5038                           	
  5039  0E33                     l11472:	
  5040                           ;drive.c: 175: drive(0, 25, 255, 255);
  5041  0E33  3019               	movlw	(019h)
  5042  0E34  1283               	bcf	status, 5	;RP0=0, select bank0
  5043  0E35  1303               	bcf	status, 6	;RP1=0, select bank0
  5044  0E36  00B3               	movwf	(??_turnRight90+0)+0
  5045  0E37  0833               	movf	(??_turnRight90+0)+0,w
  5046  0E38  00AC               	movwf	(?_drive)
  5047  0E39  30FF               	movlw	(0FFh)
  5048  0E3A  00B4               	movwf	(??_turnRight90+1)+0
  5049  0E3B  0834               	movf	(??_turnRight90+1)+0,w
  5050  0E3C  00AD               	movwf	0+(?_drive)+01h
  5051  0E3D  30FF               	movlw	(0FFh)
  5052  0E3E  00B5               	movwf	(??_turnRight90+2)+0
  5053  0E3F  0835               	movf	(??_turnRight90+2)+0,w
  5054  0E40  00AE               	movwf	0+(?_drive)+02h
  5055  0E41  3000               	movlw	(0)
  5056  0E42  120A  158A  24D9   	fcall	_drive
              120A  158A         
  5057                           	line	176
  5058                           ;drive.c: 176: waitFor(157,255,169);
  5059  0E47  30FF               	movlw	(0FFh)
  5060  0E48  1283               	bcf	status, 5	;RP0=0, select bank0
  5061  0E49  1303               	bcf	status, 6	;RP1=0, select bank0
  5062  0E4A  00B3               	movwf	(??_turnRight90+0)+0
  5063  0E4B  0833               	movf	(??_turnRight90+0)+0,w
  5064  0E4C  00AC               	movwf	(?_waitFor)
  5065  0E4D  30A9               	movlw	(0A9h)
  5066  0E4E  00B4               	movwf	(??_turnRight90+1)+0
  5067  0E4F  0834               	movf	(??_turnRight90+1)+0,w
  5068  0E50  00AD               	movwf	0+(?_waitFor)+01h
  5069  0E51  309D               	movlw	(09Dh)
  5070  0E52  120A  158A  2347   	fcall	_waitFor
              120A  158A         
  5071                           	line	177
  5072                           ;drive.c: 177: drive(0, 0, 0, 0);
  5073  0E57  1283               	bcf	status, 5	;RP0=0, select bank0
  5074  0E58  1303               	bcf	status, 6	;RP1=0, select bank0
  5075  0E59  01AC               	clrf	(?_drive)
  5076  0E5A  01AD               	clrf	0+(?_drive)+01h
  5077  0E5B  01AE               	clrf	0+(?_drive)+02h
  5078  0E5C  3000               	movlw	(0)
  5079  0E5D  120A  158A  24D9   	fcall	_drive
              120A  158A         
  5080                           	line	178
  5081                           	
  5082  0E62                     l11474:	
  5083                           ;drive.c: 178: _delay((unsigned long)((6500)*(20000000/4000.0)));
  5084                           	opt asmopt_off
  5085  0E62  30A5               movlw  165
  5086  0E63  1283               	bcf	status, 5	;RP0=0, select bank0
  5087  0E64  1303               	bcf	status, 6	;RP1=0, select bank0
  5088  0E65  00B5               movwf	((??_turnRight90+0)+0+2),f
  5089  0E66  30E0               movlw	224
  5090  0E67  00B4               movwf	((??_turnRight90+0)+0+1),f
  5091  0E68  30FE               	movlw	254
  5092  0E69  00B3               movwf	((??_turnRight90+0)+0),f
  5093  0E6A                     u5037:
  5094  0E6A  0BB3               	decfsz	((??_turnRight90+0)+0),f
  5095  0E6B  2E6A               	goto	u5037
  5096  0E6C  0BB4               	decfsz	((??_turnRight90+0)+0+1),f
  5097  0E6D  2E6A               	goto	u5037
  5098  0E6E  0BB5               	decfsz	((??_turnRight90+0)+0+2),f
  5099  0E6F  2E6A               	goto	u5037
  5100                           opt asmopt_on
  5101                           
  5102                           	line	179
  5103                           	
  5104  0E70                     l2173:	
  5105  0E70  0008               	return
  5106                           	opt stack 0
  5107                           GLOBAL	__end_of_turnRight90
  5108  0E71                     	__end_of_turnRight90:
  5109 ;; =============== function _turnRight90 ends ============
  5110                           
  5111                           	signat	_turnRight90,88
  5112                           	global	_turnLeft90
  5113                           psect	text1644,local,class=CODE,delta=2
  5114                           global __ptext1644
  5115  0D10                     __ptext1644:
  5116                           
  5117 ;; *************** function _turnLeft90 *****************
  5118 ;; Defined at:
  5119 ;;		line 166 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;		None               void
  5126 ;; Registers used:
  5127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5133 ;;      Params:         0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0
  5135 ;;      Temps:          0       3       0       0       0
  5136 ;;      Totals:         0       3       0       0       0
  5137 ;;Total ram usage:        3 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    4
  5140 ;; This function calls:
  5141 ;;		_drive
  5142 ;;		_waitFor
  5143 ;; This function is called by:
  5144 ;;		_goLeft
  5145 ;;		_rightWallCorrect
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           psect	text1644
  5149                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  5150                           	line	166
  5151                           	global	__size_of_turnLeft90
  5152  0037                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  5153                           	
  5154  0D10                     _turnLeft90:	
  5155                           	opt	stack 1
  5156                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5157                           	line	167
  5158                           	
  5159  0D10                     l11468:	
  5160                           ;drive.c: 167: drive(0, 25, 0, 1);
  5161  0D10  3019               	movlw	(019h)
  5162  0D11  1283               	bcf	status, 5	;RP0=0, select bank0
  5163  0D12  1303               	bcf	status, 6	;RP1=0, select bank0
  5164  0D13  00B3               	movwf	(??_turnLeft90+0)+0
  5165  0D14  0833               	movf	(??_turnLeft90+0)+0,w
  5166  0D15  00AC               	movwf	(?_drive)
  5167  0D16  01AD               	clrf	0+(?_drive)+01h
  5168  0D17  01AE               	clrf	0+(?_drive)+02h
  5169  0D18  1403               	bsf	status,0
  5170  0D19  0DAE               	rlf	0+(?_drive)+02h,f
  5171  0D1A  3000               	movlw	(0)
  5172  0D1B  120A  158A  24D9   	fcall	_drive
              120A  158A         
  5173                           	line	168
  5174                           ;drive.c: 168: waitFor(157,0,85);
  5175  0D20  1283               	bcf	status, 5	;RP0=0, select bank0
  5176  0D21  1303               	bcf	status, 6	;RP1=0, select bank0
  5177  0D22  01AC               	clrf	(?_waitFor)
  5178  0D23  3055               	movlw	(055h)
  5179  0D24  00B3               	movwf	(??_turnLeft90+0)+0
  5180  0D25  0833               	movf	(??_turnLeft90+0)+0,w
  5181  0D26  00AD               	movwf	0+(?_waitFor)+01h
  5182  0D27  309D               	movlw	(09Dh)
  5183  0D28  120A  158A  2347   	fcall	_waitFor
              120A  158A         
  5184                           	line	169
  5185                           ;drive.c: 169: drive(0, 0, 0, 0);
  5186  0D2D  1283               	bcf	status, 5	;RP0=0, select bank0
  5187  0D2E  1303               	bcf	status, 6	;RP1=0, select bank0
  5188  0D2F  01AC               	clrf	(?_drive)
  5189  0D30  01AD               	clrf	0+(?_drive)+01h
  5190  0D31  01AE               	clrf	0+(?_drive)+02h
  5191  0D32  3000               	movlw	(0)
  5192  0D33  120A  158A  24D9   	fcall	_drive
              120A  158A         
  5193                           	line	170
  5194                           	
  5195  0D38                     l11470:	
  5196                           ;drive.c: 170: _delay((unsigned long)((6500)*(20000000/4000.0)));
  5197                           	opt asmopt_off
  5198  0D38  30A5               movlw  165
  5199  0D39  1283               	bcf	status, 5	;RP0=0, select bank0
  5200  0D3A  1303               	bcf	status, 6	;RP1=0, select bank0
  5201  0D3B  00B5               movwf	((??_turnLeft90+0)+0+2),f
  5202  0D3C  30E0               movlw	224
  5203  0D3D  00B4               movwf	((??_turnLeft90+0)+0+1),f
  5204  0D3E  30FE               	movlw	254
  5205  0D3F  00B3               movwf	((??_turnLeft90+0)+0),f
  5206  0D40                     u5047:
  5207  0D40  0BB3               	decfsz	((??_turnLeft90+0)+0),f
  5208  0D41  2D40               	goto	u5047
  5209  0D42  0BB4               	decfsz	((??_turnLeft90+0)+0+1),f
  5210  0D43  2D40               	goto	u5047
  5211  0D44  0BB5               	decfsz	((??_turnLeft90+0)+0+2),f
  5212  0D45  2D40               	goto	u5047
  5213                           opt asmopt_on
  5214                           
  5215                           	line	171
  5216                           	
  5217  0D46                     l2170:	
  5218  0D46  0008               	return
  5219                           	opt stack 0
  5220                           GLOBAL	__end_of_turnLeft90
  5221  0D47                     	__end_of_turnLeft90:
  5222 ;; =============== function _turnLeft90 ends ============
  5223                           
  5224                           	signat	_turnLeft90,88
  5225                           	global	_turnAround
  5226                           psect	text1645,local,class=CODE,delta=2
  5227                           global __ptext1645
  5228  0F75                     __ptext1645:
  5229                           
  5230 ;; *************** function _turnAround *****************
  5231 ;; Defined at:
  5232 ;;		line 157 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;		None
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;		None               void
  5239 ;; Registers used:
  5240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5246 ;;      Params:         0       0       0       0       0
  5247 ;;      Locals:         0       0       0       0       0
  5248 ;;      Temps:          0       3       0       0       0
  5249 ;;      Totals:         0       3       0       0       0
  5250 ;;Total ram usage:        3 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    4
  5253 ;; This function calls:
  5254 ;;		_drive
  5255 ;;		_waitFor
  5256 ;; This function is called by:
  5257 ;;		_goBackward
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           psect	text1645
  5261                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  5262                           	line	157
  5263                           	global	__size_of_turnAround
  5264  0045                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  5265                           	
  5266  0F75                     _turnAround:	
  5267                           	opt	stack 1
  5268                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5269                           	line	158
  5270                           	
  5271  0F75                     l11462:	
  5272                           ;drive.c: 158: drive(0, 25, 0, 1);
  5273  0F75  3019               	movlw	(019h)
  5274  0F76  1283               	bcf	status, 5	;RP0=0, select bank0
  5275  0F77  1303               	bcf	status, 6	;RP1=0, select bank0
  5276  0F78  00B3               	movwf	(??_turnAround+0)+0
  5277  0F79  0833               	movf	(??_turnAround+0)+0,w
  5278  0F7A  00AC               	movwf	(?_drive)
  5279  0F7B  01AD               	clrf	0+(?_drive)+01h
  5280  0F7C  01AE               	clrf	0+(?_drive)+02h
  5281  0F7D  1403               	bsf	status,0
  5282  0F7E  0DAE               	rlf	0+(?_drive)+02h,f
  5283  0F7F  3000               	movlw	(0)
  5284  0F80  120A  158A  24D9   	fcall	_drive
              120A  158A         
  5285                           	line	159
  5286                           ;drive.c: 159: waitFor(157,0,170);
  5287  0F85  1283               	bcf	status, 5	;RP0=0, select bank0
  5288  0F86  1303               	bcf	status, 6	;RP1=0, select bank0
  5289  0F87  01AC               	clrf	(?_waitFor)
  5290  0F88  30AA               	movlw	(0AAh)
  5291  0F89  00B3               	movwf	(??_turnAround+0)+0
  5292  0F8A  0833               	movf	(??_turnAround+0)+0,w
  5293  0F8B  00AD               	movwf	0+(?_waitFor)+01h
  5294  0F8C  309D               	movlw	(09Dh)
  5295  0F8D  120A  158A  2347   	fcall	_waitFor
              120A  158A         
  5296                           	line	160
  5297                           ;drive.c: 160: drive(0, 0, 0, 0);
  5298  0F92  1283               	bcf	status, 5	;RP0=0, select bank0
  5299  0F93  1303               	bcf	status, 6	;RP1=0, select bank0
  5300  0F94  01AC               	clrf	(?_drive)
  5301  0F95  01AD               	clrf	0+(?_drive)+01h
  5302  0F96  01AE               	clrf	0+(?_drive)+02h
  5303  0F97  3000               	movlw	(0)
  5304  0F98  120A  158A  24D9   	fcall	_drive
              120A  158A         
  5305                           	line	161
  5306                           	
  5307  0F9D                     l11464:	
  5308                           ;drive.c: 161: _delay((unsigned long)((6500)*(20000000/4000.0)));
  5309                           	opt asmopt_off
  5310  0F9D  30A5               movlw  165
  5311  0F9E  1283               	bcf	status, 5	;RP0=0, select bank0
  5312  0F9F  1303               	bcf	status, 6	;RP1=0, select bank0
  5313  0FA0  00B5               movwf	((??_turnAround+0)+0+2),f
  5314  0FA1  30E0               movlw	224
  5315  0FA2  00B4               movwf	((??_turnAround+0)+0+1),f
  5316  0FA3  30FE               	movlw	254
  5317  0FA4  00B3               movwf	((??_turnAround+0)+0),f
  5318  0FA5                     u5057:
  5319  0FA5  0BB3               	decfsz	((??_turnAround+0)+0),f
  5320  0FA6  2FA5               	goto	u5057
  5321  0FA7  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  5322  0FA8  2FA5               	goto	u5057
  5323  0FA9  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  5324  0FAA  2FA5               	goto	u5057
  5325                           opt asmopt_on
  5326                           
  5327                           	line	162
  5328                           	
  5329  0FAB                     l11466:	
  5330                           ;drive.c: 162: _delay((unsigned long)((6500)*(20000000/4000.0)));
  5331                           	opt asmopt_off
  5332  0FAB  30A5               movlw  165
  5333  0FAC  1283               	bcf	status, 5	;RP0=0, select bank0
  5334  0FAD  1303               	bcf	status, 6	;RP1=0, select bank0
  5335  0FAE  00B5               movwf	((??_turnAround+0)+0+2),f
  5336  0FAF  30E0               movlw	224
  5337  0FB0  00B4               movwf	((??_turnAround+0)+0+1),f
  5338  0FB1  30FE               	movlw	254
  5339  0FB2  00B3               movwf	((??_turnAround+0)+0),f
  5340  0FB3                     u5067:
  5341  0FB3  0BB3               	decfsz	((??_turnAround+0)+0),f
  5342  0FB4  2FB3               	goto	u5067
  5343  0FB5  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  5344  0FB6  2FB3               	goto	u5067
  5345  0FB7  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  5346  0FB8  2FB3               	goto	u5067
  5347                           opt asmopt_on
  5348                           
  5349                           	line	163
  5350                           	
  5351  0FB9                     l2167:	
  5352  0FB9  0008               	return
  5353                           	opt stack 0
  5354                           GLOBAL	__end_of_turnAround
  5355  0FBA                     	__end_of_turnAround:
  5356 ;; =============== function _turnAround ends ============
  5357                           
  5358                           	signat	_turnAround,88
  5359                           	global	_lcd_set_cursor
  5360                           psect	text1646,local,class=CODE,delta=2
  5361                           global __ptext1646
  5362  0960                     __ptext1646:
  5363                           
  5364 ;; *************** function _lcd_set_cursor *****************
  5365 ;; Defined at:
  5366 ;;		line 32 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\lcd.
       c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  address         1    wreg     unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  address         1   13[BANK0 ] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;		None               void
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5380 ;;      Params:         0       0       0       0       0
  5381 ;;      Locals:         0       1       0       0       0
  5382 ;;      Temps:          0       0       0       0       0
  5383 ;;      Totals:         0       1       0       0       0
  5384 ;;Total ram usage:        1 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    3
  5387 ;; This function calls:
  5388 ;;		_lcd_write_control
  5389 ;; This function is called by:
  5390 ;;		_goBackward
  5391 ;;		_goForward
  5392 ;;		_goLeft
  5393 ;;		_goReverse
  5394 ;;		_goRight
  5395 ;;		_checkForFinalDestination
  5396 ;;		_lookForVictim
  5397 ;;		_findWalls
  5398 ;;		_updateLocation
  5399 ;;		_main
  5400 ;;		_findFinalDestination
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           psect	text1646
  5404                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\lcd.c"
  5405                           	line	32
  5406                           	global	__size_of_lcd_set_cursor
  5407  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5408                           	
  5409  0960                     _lcd_set_cursor:	
  5410                           	opt	stack 3
  5411                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5412                           ;lcd_set_cursor@address stored from wreg
  5413  0960  1283               	bcf	status, 5	;RP0=0, select bank0
  5414  0961  1303               	bcf	status, 6	;RP1=0, select bank0
  5415  0962  00AD               	movwf	(lcd_set_cursor@address)
  5416                           	line	33
  5417                           	
  5418  0963                     l11458:	
  5419                           ;lcd.c: 33: address |= 0b10000000;
  5420  0963  17AD               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5421                           	line	34
  5422                           	
  5423  0964                     l11460:	
  5424                           ;lcd.c: 34: lcd_write_control(address);
  5425  0964  082D               	movf	(lcd_set_cursor@address),w
  5426  0965  120A  158A  21B4   	fcall	_lcd_write_control
              120A  158A         
  5427                           	line	35
  5428                           	
  5429  096A                     l2893:	
  5430  096A  0008               	return
  5431                           	opt stack 0
  5432                           GLOBAL	__end_of_lcd_set_cursor
  5433  096B                     	__end_of_lcd_set_cursor:
  5434 ;; =============== function _lcd_set_cursor ends ============
  5435                           
  5436                           	signat	_lcd_set_cursor,4216
  5437                           	global	_adc_read_channel
  5438                           psect	text1647,local,class=CODE,delta=2
  5439                           global __ptext1647
  5440  079E                     __ptext1647:
  5441                           
  5442 ;; *************** function _adc_read_channel *****************
  5443 ;; Defined at:
  5444 ;;		line 7 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  channel         1    wreg     unsigned char 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  channel         1    3[BANK1 ] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  2    0[BANK1 ] int 
  5451 ;; Registers used:
  5452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5458 ;;      Params:         0       0       2       0       0
  5459 ;;      Locals:         0       0       1       0       0
  5460 ;;      Temps:          0       0       1       0       0
  5461 ;;      Totals:         0       0       4       0       0
  5462 ;;Total ram usage:        4 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    4
  5465 ;; This function calls:
  5466 ;;		_adc_read
  5467 ;; This function is called by:
  5468 ;;		_readIR
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           psect	text1647
  5472                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  5473                           	line	7
  5474                           	global	__size_of_adc_read_channel
  5475  0055                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  5476                           	
  5477  079E                     _adc_read_channel:	
  5478                           	opt	stack 0
  5479                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5480                           ;adc_read_channel@channel stored from wreg
  5481  079E  1683               	bsf	status, 5	;RP0=1, select bank1
  5482  079F  1303               	bcf	status, 6	;RP1=0, select bank1
  5483  07A0  00E1               	movwf	(adc_read_channel@channel)^080h
  5484                           	line	8
  5485                           	
  5486  07A1                     l11442:	
  5487                           ;adc.c: 8: switch(channel)
  5488  07A1  2FC7               	goto	l11450
  5489                           	line	10
  5490                           ;adc.c: 9: {
  5491                           ;adc.c: 10: case 0:
  5492                           	
  5493  07A2                     l1390:	
  5494                           	line	11
  5495                           ;adc.c: 11: CHS0 = 0;
  5496  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
  5497  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
  5498  07A4  119F               	bcf	(251/8),(251)&7
  5499                           	line	12
  5500                           ;adc.c: 12: CHS1 = 0;
  5501  07A5  121F               	bcf	(252/8),(252)&7
  5502                           	line	13
  5503                           ;adc.c: 13: CHS2 = 0;
  5504  07A6  129F               	bcf	(253/8),(253)&7
  5505                           	line	14
  5506                           ;adc.c: 14: break;
  5507  07A7  2FD8               	goto	l11452
  5508                           	line	15
  5509                           ;adc.c: 15: case 1:
  5510                           	
  5511  07A8                     l1392:	
  5512                           	line	16
  5513                           ;adc.c: 16: CHS0 = 1;
  5514  07A8  1283               	bcf	status, 5	;RP0=0, select bank0
  5515  07A9  1303               	bcf	status, 6	;RP1=0, select bank0
  5516  07AA  159F               	bsf	(251/8),(251)&7
  5517                           	line	17
  5518                           ;adc.c: 17: CHS1 = 0;
  5519  07AB  121F               	bcf	(252/8),(252)&7
  5520                           	line	18
  5521                           ;adc.c: 18: CHS2 = 0;
  5522  07AC  129F               	bcf	(253/8),(253)&7
  5523                           	line	19
  5524                           ;adc.c: 19: break;
  5525  07AD  2FD8               	goto	l11452
  5526                           	line	20
  5527                           ;adc.c: 20: case 2:
  5528                           	
  5529  07AE                     l1393:	
  5530                           	line	21
  5531                           ;adc.c: 21: CHS0 = 0;
  5532  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
  5533  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
  5534  07B0  119F               	bcf	(251/8),(251)&7
  5535                           	line	22
  5536                           ;adc.c: 22: CHS1 = 1;
  5537  07B1  161F               	bsf	(252/8),(252)&7
  5538                           	line	23
  5539                           ;adc.c: 23: CHS2 = 0;
  5540  07B2  129F               	bcf	(253/8),(253)&7
  5541                           	line	24
  5542                           ;adc.c: 24: break;
  5543  07B3  2FD8               	goto	l11452
  5544                           	line	25
  5545                           ;adc.c: 25: case 3:
  5546                           	
  5547  07B4                     l1394:	
  5548                           	line	26
  5549                           ;adc.c: 26: CHS0 = 1;
  5550  07B4  1283               	bcf	status, 5	;RP0=0, select bank0
  5551  07B5  1303               	bcf	status, 6	;RP1=0, select bank0
  5552  07B6  159F               	bsf	(251/8),(251)&7
  5553                           	line	27
  5554                           ;adc.c: 27: CHS1 = 1;
  5555  07B7  161F               	bsf	(252/8),(252)&7
  5556                           	line	28
  5557                           ;adc.c: 28: CHS2 = 0;
  5558  07B8  129F               	bcf	(253/8),(253)&7
  5559                           	line	29
  5560                           ;adc.c: 29: break;
  5561  07B9  2FD8               	goto	l11452
  5562                           	line	30
  5563                           ;adc.c: 30: case 4:
  5564                           	
  5565  07BA                     l1395:	
  5566                           	line	31
  5567                           ;adc.c: 31: CHS0 = 0;
  5568  07BA  1283               	bcf	status, 5	;RP0=0, select bank0
  5569  07BB  1303               	bcf	status, 6	;RP1=0, select bank0
  5570  07BC  119F               	bcf	(251/8),(251)&7
  5571                           	line	32
  5572                           ;adc.c: 32: CHS1 = 0;
  5573  07BD  121F               	bcf	(252/8),(252)&7
  5574                           	line	33
  5575                           ;adc.c: 33: CHS2 = 1;
  5576  07BE  169F               	bsf	(253/8),(253)&7
  5577                           	line	34
  5578                           ;adc.c: 34: break;
  5579  07BF  2FD8               	goto	l11452
  5580                           	line	37
  5581                           ;adc.c: 37: default:
  5582                           	
  5583  07C0                     l1396:	
  5584                           	line	38
  5585                           	
  5586  07C0                     l11444:	
  5587                           ;adc.c: 38: return 0;
  5588  07C0  1683               	bsf	status, 5	;RP0=1, select bank1
  5589  07C1  1303               	bcf	status, 6	;RP1=0, select bank1
  5590  07C2  01DE               	clrf	(?_adc_read_channel)^080h
  5591  07C3  01DF               	clrf	(?_adc_read_channel+1)^080h
  5592  07C4  2FF2               	goto	l1397
  5593                           	
  5594  07C5                     l11446:	
  5595  07C5  2FF2               	goto	l1397
  5596                           	line	39
  5597                           	
  5598  07C6                     l11448:	
  5599                           ;adc.c: 39: }
  5600  07C6  2FD8               	goto	l11452
  5601                           	line	8
  5602                           	
  5603  07C7                     l1389:	
  5604                           	
  5605  07C7                     l11450:	
  5606  07C7  0861               	movf	(adc_read_channel@channel)^080h,w
  5607                           	; Switch size 1, requested type "space"
  5608                           ; Number of cases is 5, Range of values is 0 to 4
  5609                           ; switch strategies available:
  5610                           ; Name         Instructions Cycles
  5611                           ; simple_byte           16     9 (average)
  5612                           ; direct_byte           23     8 (fixed)
  5613                           ; jumptable            260     6 (fixed)
  5614                           ; rangetable             9     6 (fixed)
  5615                           ; spacedrange           16     9 (fixed)
  5616                           ; locatedrange           5     3 (fixed)
  5617                           ;	Chosen strategy is simple_byte
  5618                           
  5619                           	opt asmopt_off
  5620  07C8  3A00               	xorlw	0^0	; case 0
  5621  07C9  1903               	skipnz
  5622  07CA  2FA2               	goto	l1390
  5623  07CB  3A01               	xorlw	1^0	; case 1
  5624  07CC  1903               	skipnz
  5625  07CD  2FA8               	goto	l1392
  5626  07CE  3A03               	xorlw	2^1	; case 2
  5627  07CF  1903               	skipnz
  5628  07D0  2FAE               	goto	l1393
  5629  07D1  3A01               	xorlw	3^2	; case 3
  5630  07D2  1903               	skipnz
  5631  07D3  2FB4               	goto	l1394
  5632  07D4  3A07               	xorlw	4^3	; case 4
  5633  07D5  1903               	skipnz
  5634  07D6  2FBA               	goto	l1395
  5635  07D7  2FC0               	goto	l11444
  5636                           	opt asmopt_on
  5637                           
  5638                           	line	39
  5639                           	
  5640  07D8                     l1391:	
  5641                           	line	41
  5642                           	
  5643  07D8                     l11452:	
  5644                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5645                           	opt asmopt_off
  5646  07D8  3053               movlw	83
  5647  07D9  1683               	bsf	status, 5	;RP0=1, select bank1
  5648  07DA  1303               	bcf	status, 6	;RP1=0, select bank1
  5649  07DB  00E0               movwf	(??_adc_read_channel+0)^080h+0,f
  5650  07DC                     u5077:
  5651  07DC  0BE0               decfsz	(??_adc_read_channel+0)^080h+0,f
  5652  07DD  2FDC               	goto	u5077
  5653                           opt asmopt_on
  5654                           
  5655                           	line	43
  5656                           	
  5657  07DE                     l11454:	
  5658                           ;adc.c: 43: return adc_read();
  5659  07DE  120A  158A  2671   	fcall	_adc_read
              120A  118A         
  5660  07E3  1283               	bcf	status, 5	;RP0=0, select bank0
  5661  07E4  1303               	bcf	status, 6	;RP1=0, select bank0
  5662  07E5  083A               	movf	(1+(?_adc_read)),w
  5663  07E6  1683               	bsf	status, 5	;RP0=1, select bank1
  5664  07E7  1303               	bcf	status, 6	;RP1=0, select bank1
  5665  07E8  01DF               	clrf	(?_adc_read_channel+1)^080h
  5666  07E9  07DF               	addwf	(?_adc_read_channel+1)^080h
  5667  07EA  1283               	bcf	status, 5	;RP0=0, select bank0
  5668  07EB  1303               	bcf	status, 6	;RP1=0, select bank0
  5669  07EC  0839               	movf	(0+(?_adc_read)),w
  5670  07ED  1683               	bsf	status, 5	;RP0=1, select bank1
  5671  07EE  1303               	bcf	status, 6	;RP1=0, select bank1
  5672  07EF  01DE               	clrf	(?_adc_read_channel)^080h
  5673  07F0  07DE               	addwf	(?_adc_read_channel)^080h
  5674                           
  5675  07F1  2FF2               	goto	l1397
  5676                           	
  5677  07F2                     l11456:	
  5678                           	line	45
  5679                           	
  5680  07F2                     l1397:	
  5681  07F2  0008               	return
  5682                           	opt stack 0
  5683                           GLOBAL	__end_of_adc_read_channel
  5684  07F3                     	__end_of_adc_read_channel:
  5685 ;; =============== function _adc_read_channel ends ============
  5686                           
  5687                           	signat	_adc_read_channel,4218
  5688                           	global	_detectCliff
  5689                           psect	text1648,local,class=CODE,delta=2
  5690                           global __ptext1648
  5691  04DE                     __ptext1648:
  5692                           
  5693 ;; *************** function _detectCliff *****************
  5694 ;; Defined at:
  5695 ;;		line 12 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\sens
       ors.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;		None               void
  5702 ;; Registers used:
  5703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0
  5711 ;;      Temps:          0       1       0       0       0
  5712 ;;      Totals:         0       1       0       0       0
  5713 ;;Total ram usage:        1 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    4
  5716 ;; This function calls:
  5717 ;;		_ser_putch
  5718 ;;		_ser_getch
  5719 ;; This function is called by:
  5720 ;;		_driveForDistance
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           psect	text1648
  5724                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\sensors.c"
  5725                           	line	12
  5726                           	global	__size_of_detectCliff
  5727  0082                     	__size_of_detectCliff	equ	__end_of_detectCliff-_detectCliff
  5728                           	
  5729  04DE                     _detectCliff:	
  5730                           	opt	stack 0
  5731                           ; Regs used in _detectCliff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5732                           	line	13
  5733                           	
  5734  04DE                     l11404:	
  5735                           ;sensors.c: 13: sensorDetected = 0;
  5736  04DE  1171               	bcf	(_sensorDetected/8),(_sensorDetected)&7
  5737                           	line	14
  5738                           	
  5739  04DF                     l11406:	
  5740                           ;sensors.c: 14: ser_putch(149);
  5741  04DF  3095               	movlw	(095h)
  5742  04E0  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  5743                           	line	15
  5744                           ;sensors.c: 15: ser_putch(4);
  5745  04E5  3004               	movlw	(04h)
  5746  04E6  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  5747                           	line	16
  5748                           ;sensors.c: 16: ser_putch(9);
  5749  04EB  3009               	movlw	(09h)
  5750  04EC  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  5751                           	line	17
  5752                           ;sensors.c: 17: ser_putch(10);
  5753  04F1  300A               	movlw	(0Ah)
  5754  04F2  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  5755                           	line	18
  5756                           ;sensors.c: 18: ser_putch(11);
  5757  04F7  300B               	movlw	(0Bh)
  5758  04F8  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  5759                           	line	19
  5760                           ;sensors.c: 19: ser_putch(12);
  5761  04FD  300C               	movlw	(0Ch)
  5762  04FE  120A  158A  2268   	fcall	_ser_putch
              120A  118A         
  5763                           	line	21
  5764                           ;sensors.c: 21: sensorData = ser_getch();
  5765  0503  120A  158A  2289   	fcall	_ser_getch
              120A  118A         
  5766  0508  1283               	bcf	status, 5	;RP0=0, select bank0
  5767  0509  1303               	bcf	status, 6	;RP1=0, select bank0
  5768  050A  00AC               	movwf	(??_detectCliff+0)+0
  5769  050B  082C               	movf	(??_detectCliff+0)+0,w
  5770  050C  00E0               	movwf	(_sensorData)
  5771                           	line	22
  5772                           	
  5773  050D                     l11408:	
  5774                           ;sensors.c: 22: if(sensorData == 1)
  5775  050D  0860               	movf	(_sensorData),w
  5776  050E  3A01               	xorlw	01h
  5777  050F  1D03               	skipz
  5778  0510  2D12               	goto	u4611
  5779  0511  2D13               	goto	u4610
  5780  0512                     u4611:
  5781  0512  2D15               	goto	l11412
  5782  0513                     u4610:
  5783                           	line	23
  5784                           	
  5785  0513                     l11410:	
  5786                           ;sensors.c: 23: sensorDetected = 1;
  5787  0513  1571               	bsf	(_sensorDetected/8),(_sensorDetected)&7
  5788  0514  2D15               	goto	l11412
  5789                           	
  5790  0515                     l693:	
  5791                           	line	25
  5792                           	
  5793  0515                     l11412:	
  5794                           ;sensors.c: 25: sensorData = ser_getch();
  5795  0515  120A  158A  2289   	fcall	_ser_getch
              120A  118A         
  5796  051A  1283               	bcf	status, 5	;RP0=0, select bank0
  5797  051B  1303               	bcf	status, 6	;RP1=0, select bank0
  5798  051C  00AC               	movwf	(??_detectCliff+0)+0
  5799  051D  082C               	movf	(??_detectCliff+0)+0,w
  5800  051E  00E0               	movwf	(_sensorData)
  5801                           	line	26
  5802                           	
  5803  051F                     l11414:	
  5804                           ;sensors.c: 26: if(sensorData == 1 && !sensorDetected)
  5805  051F  0860               	movf	(_sensorData),w
  5806  0520  3A01               	xorlw	01h
  5807  0521  1D03               	skipz
  5808  0522  2D24               	goto	u4621
  5809  0523  2D25               	goto	u4620
  5810  0524                     u4621:
  5811  0524  2D2B               	goto	l11420
  5812  0525                     u4620:
  5813                           	
  5814  0525                     l11416:	
  5815  0525  1971               	btfsc	(_sensorDetected/8),(_sensorDetected)&7
  5816  0526  2D28               	goto	u4631
  5817  0527  2D29               	goto	u4630
  5818  0528                     u4631:
  5819  0528  2D2B               	goto	l11420
  5820  0529                     u4630:
  5821                           	line	27
  5822                           	
  5823  0529                     l11418:	
  5824                           ;sensors.c: 27: sensorDetected = 1;
  5825  0529  1571               	bsf	(_sensorDetected/8),(_sensorDetected)&7
  5826  052A  2D2B               	goto	l11420
  5827                           	
  5828  052B                     l694:	
  5829                           	line	29
  5830                           	
  5831  052B                     l11420:	
  5832                           ;sensors.c: 29: sensorData = ser_getch();
  5833  052B  120A  158A  2289   	fcall	_ser_getch
              120A  118A         
  5834  0530  1283               	bcf	status, 5	;RP0=0, select bank0
  5835  0531  1303               	bcf	status, 6	;RP1=0, select bank0
  5836  0532  00AC               	movwf	(??_detectCliff+0)+0
  5837  0533  082C               	movf	(??_detectCliff+0)+0,w
  5838  0534  00E0               	movwf	(_sensorData)
  5839                           	line	30
  5840                           	
  5841  0535                     l11422:	
  5842                           ;sensors.c: 30: if(sensorData == 1 && !sensorDetected)
  5843  0535  0860               	movf	(_sensorData),w
  5844  0536  3A01               	xorlw	01h
  5845  0537  1D03               	skipz
  5846  0538  2D3A               	goto	u4641
  5847  0539  2D3B               	goto	u4640
  5848  053A                     u4641:
  5849  053A  2D41               	goto	l11428
  5850  053B                     u4640:
  5851                           	
  5852  053B                     l11424:	
  5853  053B  1971               	btfsc	(_sensorDetected/8),(_sensorDetected)&7
  5854  053C  2D3E               	goto	u4651
  5855  053D  2D3F               	goto	u4650
  5856  053E                     u4651:
  5857  053E  2D41               	goto	l11428
  5858  053F                     u4650:
  5859                           	line	31
  5860                           	
  5861  053F                     l11426:	
  5862                           ;sensors.c: 31: sensorDetected = 1;
  5863  053F  1571               	bsf	(_sensorDetected/8),(_sensorDetected)&7
  5864  0540  2D41               	goto	l11428
  5865                           	
  5866  0541                     l695:	
  5867                           	line	33
  5868                           	
  5869  0541                     l11428:	
  5870                           ;sensors.c: 33: sensorData = ser_getch();
  5871  0541  120A  158A  2289   	fcall	_ser_getch
              120A  118A         
  5872  0546  1283               	bcf	status, 5	;RP0=0, select bank0
  5873  0547  1303               	bcf	status, 6	;RP1=0, select bank0
  5874  0548  00AC               	movwf	(??_detectCliff+0)+0
  5875  0549  082C               	movf	(??_detectCliff+0)+0,w
  5876  054A  00E0               	movwf	(_sensorData)
  5877                           	line	34
  5878                           	
  5879  054B                     l11430:	
  5880                           ;sensors.c: 34: if(sensorData == 1 && !sensorDetected)
  5881  054B  0860               	movf	(_sensorData),w
  5882  054C  3A01               	xorlw	01h
  5883  054D  1D03               	skipz
  5884  054E  2D50               	goto	u4661
  5885  054F  2D51               	goto	u4660
  5886  0550                     u4661:
  5887  0550  2D56               	goto	l696
  5888  0551                     u4660:
  5889                           	
  5890  0551                     l11432:	
  5891  0551  1971               	btfsc	(_sensorDetected/8),(_sensorDetected)&7
  5892  0552  2D54               	goto	u4671
  5893  0553  2D55               	goto	u4670
  5894  0554                     u4671:
  5895  0554  2D56               	goto	l696
  5896  0555                     u4670:
  5897                           	line	35
  5898                           	
  5899  0555                     l11434:	
  5900                           ;sensors.c: 35: sensorDetected = 1;
  5901  0555  1571               	bsf	(_sensorDetected/8),(_sensorDetected)&7
  5902                           	
  5903  0556                     l696:	
  5904                           	line	37
  5905                           ;sensors.c: 37: return sensorDetected;
  5906  0556  1971               	btfsc	(_sensorDetected/8),(_sensorDetected)&7
  5907  0557  2D59               	goto	u4681
  5908  0558  2D5A               	goto	u4680
  5909  0559                     u4681:
  5910  0559  2D5C               	goto	l11438
  5911  055A                     u4680:
  5912                           	
  5913  055A                     l11436:	
  5914  055A  1003               	clrc
  5915                           	
  5916  055B  2D5F               	goto	l697
  5917                           	
  5918  055C                     l10870:	
  5919                           	
  5920  055C                     l11438:	
  5921  055C  1403               	setc
  5922                           	
  5923  055D  2D5F               	goto	l697
  5924                           	
  5925  055E                     l10872:	
  5926  055E  2D5F               	goto	l697
  5927                           	
  5928  055F                     l11440:	
  5929                           	line	38
  5930                           	
  5931  055F                     l697:	
  5932  055F  0008               	return
  5933                           	opt stack 0
  5934                           GLOBAL	__end_of_detectCliff
  5935  0560                     	__end_of_detectCliff:
  5936 ;; =============== function _detectCliff ends ============
  5937                           
  5938                           	signat	_detectCliff,88
  5939                           	global	_convert
  5940                           psect	text1649,local,class=CODE,delta=2
  5941                           global __ptext1649
  5942  0015                     __ptext1649:
  5943                           
  5944 ;; *************** function _convert *****************
  5945 ;; Defined at:
  5946 ;;		line 12 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\ir.c
       "
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  adc_value       2   33[BANK0 ] int 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  2   33[BANK0 ] int 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5960 ;;      Params:         0       2       0       0       0
  5961 ;;      Locals:         0       0       0       0       0
  5962 ;;      Temps:          0       2       0       0       0
  5963 ;;      Totals:         0       4       0       0       0
  5964 ;;Total ram usage:        4 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    3
  5967 ;; This function calls:
  5968 ;;		___wmul
  5969 ;;		___awdiv
  5970 ;; This function is called by:
  5971 ;;		_readIR
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           psect	text1649
  5975                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\ir.c"
  5976                           	line	12
  5977                           	global	__size_of_convert
  5978  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
  5979                           	
  5980  0015                     _convert:	
  5981                           	opt	stack 1
  5982                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5983                           	line	13
  5984                           	
  5985  0015                     l11344:	
  5986                           ;ir.c: 13: if(adc_value < 82)
  5987  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  5988  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  5989  0017  0842               	movf	(convert@adc_value+1),w
  5990  0018  3A80               	xorlw	80h
  5991  0019  00FF               	movwf	btemp+1
  5992  001A  3080               	movlw	(high(052h))^80h
  5993  001B  027F               	subwf	btemp+1,w
  5994  001C  1D03               	skipz
  5995  001D  2820               	goto	u4545
  5996  001E  3052               	movlw	low(052h)
  5997  001F  0241               	subwf	(convert@adc_value),w
  5998  0020                     u4545:
  5999                           
  6000  0020  1803               	skipnc
  6001  0021  2823               	goto	u4541
  6002  0022  2824               	goto	u4540
  6003  0023                     u4541:
  6004  0023  282D               	goto	l11352
  6005  0024                     u4540:
  6006                           	line	14
  6007                           	
  6008  0024                     l11346:	
  6009                           ;ir.c: 14: return 999;
  6010  0024  30E7               	movlw	low(03E7h)
  6011  0025  1283               	bcf	status, 5	;RP0=0, select bank0
  6012  0026  1303               	bcf	status, 6	;RP1=0, select bank0
  6013  0027  00C1               	movwf	(?_convert)
  6014  0028  3003               	movlw	high(03E7h)
  6015  0029  00C2               	movwf	((?_convert))+1
  6016  002A  29E3               	goto	l6698
  6017                           	
  6018  002B                     l11348:	
  6019  002B  29E3               	goto	l6698
  6020                           	
  6021  002C                     l11350:	
  6022  002C  29E3               	goto	l6698
  6023                           	line	15
  6024                           	
  6025  002D                     l6697:	
  6026                           	
  6027  002D                     l11352:	
  6028                           ;ir.c: 15: else if(adc_value < 133)
  6029  002D  1283               	bcf	status, 5	;RP0=0, select bank0
  6030  002E  1303               	bcf	status, 6	;RP1=0, select bank0
  6031  002F  0842               	movf	(convert@adc_value+1),w
  6032  0030  3A80               	xorlw	80h
  6033  0031  00FF               	movwf	btemp+1
  6034  0032  3080               	movlw	(high(085h))^80h
  6035  0033  027F               	subwf	btemp+1,w
  6036  0034  1D03               	skipz
  6037  0035  2838               	goto	u4555
  6038  0036  3085               	movlw	low(085h)
  6039  0037  0241               	subwf	(convert@adc_value),w
  6040  0038                     u4555:
  6041                           
  6042  0038  1803               	skipnc
  6043  0039  283B               	goto	u4551
  6044  003A  283C               	goto	u4550
  6045  003B                     u4551:
  6046  003B  2874               	goto	l11360
  6047  003C                     u4550:
  6048                           	line	16
  6049                           	
  6050  003C                     l11354:	
  6051                           ;ir.c: 16: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
  6052  003C  3033               	movlw	low(033h)
  6053  003D  1283               	bcf	status, 5	;RP0=0, select bank0
  6054  003E  1303               	bcf	status, 6	;RP1=0, select bank0
  6055  003F  00B0               	movwf	(?___awdiv)
  6056  0040  3000               	movlw	high(033h)
  6057  0041  00B1               	movwf	((?___awdiv))+1
  6058  0042  0941               	comf	(convert@adc_value),w
  6059  0043  00C3               	movwf	(??_convert+0)+0
  6060  0044  0942               	comf	(convert@adc_value+1),w
  6061  0045  00C4               	movwf	((??_convert+0)+0+1)
  6062  0046  0AC3               	incf	(??_convert+0)+0,f
  6063  0047  1903               	skipnz
  6064  0048  0AC4               	incf	((??_convert+0)+0+1),f
  6065  0049  0843               	movf	0+(??_convert+0)+0,w
  6066  004A  3E85               	addlw	low(085h)
  6067  004B  00AA               	movwf	(?___wmul)
  6068  004C  0844               	movf	1+(??_convert+0)+0,w
  6069  004D  1803               	skipnc
  6070  004E  3E01               	addlw	1
  6071  004F  3E00               	addlw	high(085h)
  6072  0050  00AB               	movwf	1+(?___wmul)
  6073  0051  3032               	movlw	low(032h)
  6074  0052  00AC               	movwf	0+(?___wmul)+02h
  6075  0053  3000               	movlw	high(032h)
  6076  0054  00AD               	movwf	(0+(?___wmul)+02h)+1
  6077  0055  120A  158A  23ED   	fcall	___wmul
              120A  118A         
  6078  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  6079  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  6080  005C  082B               	movf	(1+(?___wmul)),w
  6081  005D  01B3               	clrf	1+(?___awdiv)+02h
  6082  005E  07B3               	addwf	1+(?___awdiv)+02h
  6083  005F  082A               	movf	(0+(?___wmul)),w
  6084  0060  01B2               	clrf	0+(?___awdiv)+02h
  6085  0061  07B2               	addwf	0+(?___awdiv)+02h
  6086                           
  6087  0062  120A  118A  2659   	fcall	___awdiv
              120A  118A         
  6088  0067  1283               	bcf	status, 5	;RP0=0, select bank0
  6089  0068  1303               	bcf	status, 6	;RP1=0, select bank0
  6090  0069  0830               	movf	(0+(?___awdiv)),w
  6091  006A  3E61               	addlw	low(061h)
  6092  006B  00C1               	movwf	(?_convert)
  6093  006C  0831               	movf	(1+(?___awdiv)),w
  6094  006D  1803               	skipnc
  6095  006E  3E01               	addlw	1
  6096  006F  3E00               	addlw	high(061h)
  6097  0070  00C2               	movwf	1+(?_convert)
  6098  0071  29E3               	goto	l6698
  6099                           	
  6100  0072                     l11356:	
  6101  0072  29E3               	goto	l6698
  6102                           	
  6103  0073                     l11358:	
  6104  0073  29E3               	goto	l6698
  6105                           	line	17
  6106                           	
  6107  0074                     l6700:	
  6108                           	
  6109  0074                     l11360:	
  6110                           ;ir.c: 17: else if(adc_value < 184)
  6111  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  6112  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  6113  0076  0842               	movf	(convert@adc_value+1),w
  6114  0077  3A80               	xorlw	80h
  6115  0078  00FF               	movwf	btemp+1
  6116  0079  3080               	movlw	(high(0B8h))^80h
  6117  007A  027F               	subwf	btemp+1,w
  6118  007B  1D03               	skipz
  6119  007C  287F               	goto	u4565
  6120  007D  30B8               	movlw	low(0B8h)
  6121  007E  0241               	subwf	(convert@adc_value),w
  6122  007F                     u4565:
  6123                           
  6124  007F  1803               	skipnc
  6125  0080  2882               	goto	u4561
  6126  0081  2883               	goto	u4560
  6127  0082                     u4561:
  6128  0082  28BB               	goto	l11368
  6129  0083                     u4560:
  6130                           	line	18
  6131                           	
  6132  0083                     l11362:	
  6133                           ;ir.c: 18: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
  6134  0083  3033               	movlw	low(033h)
  6135  0084  1283               	bcf	status, 5	;RP0=0, select bank0
  6136  0085  1303               	bcf	status, 6	;RP1=0, select bank0
  6137  0086  00B0               	movwf	(?___awdiv)
  6138  0087  3000               	movlw	high(033h)
  6139  0088  00B1               	movwf	((?___awdiv))+1
  6140  0089  0941               	comf	(convert@adc_value),w
  6141  008A  00C3               	movwf	(??_convert+0)+0
  6142  008B  0942               	comf	(convert@adc_value+1),w
  6143  008C  00C4               	movwf	((??_convert+0)+0+1)
  6144  008D  0AC3               	incf	(??_convert+0)+0,f
  6145  008E  1903               	skipnz
  6146  008F  0AC4               	incf	((??_convert+0)+0+1),f
  6147  0090  0843               	movf	0+(??_convert+0)+0,w
  6148  0091  3EB8               	addlw	low(0B8h)
  6149  0092  00AA               	movwf	(?___wmul)
  6150  0093  0844               	movf	1+(??_convert+0)+0,w
  6151  0094  1803               	skipnc
  6152  0095  3E01               	addlw	1
  6153  0096  3E00               	addlw	high(0B8h)
  6154  0097  00AB               	movwf	1+(?___wmul)
  6155  0098  301E               	movlw	low(01Eh)
  6156  0099  00AC               	movwf	0+(?___wmul)+02h
  6157  009A  3000               	movlw	high(01Eh)
  6158  009B  00AD               	movwf	(0+(?___wmul)+02h)+1
  6159  009C  120A  158A  23ED   	fcall	___wmul
              120A  118A         
  6160  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  6161  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  6162  00A3  082B               	movf	(1+(?___wmul)),w
  6163  00A4  01B3               	clrf	1+(?___awdiv)+02h
  6164  00A5  07B3               	addwf	1+(?___awdiv)+02h
  6165  00A6  082A               	movf	(0+(?___wmul)),w
  6166  00A7  01B2               	clrf	0+(?___awdiv)+02h
  6167  00A8  07B2               	addwf	0+(?___awdiv)+02h
  6168                           
  6169  00A9  120A  118A  2659   	fcall	___awdiv
              120A  118A         
  6170  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  6171  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  6172  00B0  0830               	movf	(0+(?___awdiv)),w
  6173  00B1  3E43               	addlw	low(043h)
  6174  00B2  00C1               	movwf	(?_convert)
  6175  00B3  0831               	movf	(1+(?___awdiv)),w
  6176  00B4  1803               	skipnc
  6177  00B5  3E01               	addlw	1
  6178  00B6  3E00               	addlw	high(043h)
  6179  00B7  00C2               	movwf	1+(?_convert)
  6180  00B8  29E3               	goto	l6698
  6181                           	
  6182  00B9                     l11364:	
  6183  00B9  29E3               	goto	l6698
  6184                           	
  6185  00BA                     l11366:	
  6186  00BA  29E3               	goto	l6698
  6187                           	line	19
  6188                           	
  6189  00BB                     l6702:	
  6190                           	
  6191  00BB                     l11368:	
  6192                           ;ir.c: 19: else if(adc_value < 256)
  6193  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  6194  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  6195  00BD  0842               	movf	(convert@adc_value+1),w
  6196  00BE  3A80               	xorlw	80h
  6197  00BF  00FF               	movwf	btemp+1
  6198  00C0  3081               	movlw	(high(0100h))^80h
  6199  00C1  027F               	subwf	btemp+1,w
  6200  00C2  1D03               	skipz
  6201  00C3  28C6               	goto	u4575
  6202  00C4  3000               	movlw	low(0100h)
  6203  00C5  0241               	subwf	(convert@adc_value),w
  6204  00C6                     u4575:
  6205                           
  6206  00C6  1803               	skipnc
  6207  00C7  28C9               	goto	u4571
  6208  00C8  28CA               	goto	u4570
  6209  00C9                     u4571:
  6210  00C9  2902               	goto	l11376
  6211  00CA                     u4570:
  6212                           	line	20
  6213                           	
  6214  00CA                     l11370:	
  6215                           ;ir.c: 20: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
  6216  00CA  3048               	movlw	low(048h)
  6217  00CB  1283               	bcf	status, 5	;RP0=0, select bank0
  6218  00CC  1303               	bcf	status, 6	;RP1=0, select bank0
  6219  00CD  00B0               	movwf	(?___awdiv)
  6220  00CE  3000               	movlw	high(048h)
  6221  00CF  00B1               	movwf	((?___awdiv))+1
  6222  00D0  0941               	comf	(convert@adc_value),w
  6223  00D1  00C3               	movwf	(??_convert+0)+0
  6224  00D2  0942               	comf	(convert@adc_value+1),w
  6225  00D3  00C4               	movwf	((??_convert+0)+0+1)
  6226  00D4  0AC3               	incf	(??_convert+0)+0,f
  6227  00D5  1903               	skipnz
  6228  00D6  0AC4               	incf	((??_convert+0)+0+1),f
  6229  00D7  0843               	movf	0+(??_convert+0)+0,w
  6230  00D8  3E00               	addlw	low(0100h)
  6231  00D9  00AA               	movwf	(?___wmul)
  6232  00DA  0844               	movf	1+(??_convert+0)+0,w
  6233  00DB  1803               	skipnc
  6234  00DC  3E01               	addlw	1
  6235  00DD  3E01               	addlw	high(0100h)
  6236  00DE  00AB               	movwf	1+(?___wmul)
  6237  00DF  3014               	movlw	low(014h)
  6238  00E0  00AC               	movwf	0+(?___wmul)+02h
  6239  00E1  3000               	movlw	high(014h)
  6240  00E2  00AD               	movwf	(0+(?___wmul)+02h)+1
  6241  00E3  120A  158A  23ED   	fcall	___wmul
              120A  118A         
  6242  00E8  1283               	bcf	status, 5	;RP0=0, select bank0
  6243  00E9  1303               	bcf	status, 6	;RP1=0, select bank0
  6244  00EA  082B               	movf	(1+(?___wmul)),w
  6245  00EB  01B3               	clrf	1+(?___awdiv)+02h
  6246  00EC  07B3               	addwf	1+(?___awdiv)+02h
  6247  00ED  082A               	movf	(0+(?___wmul)),w
  6248  00EE  01B2               	clrf	0+(?___awdiv)+02h
  6249  00EF  07B2               	addwf	0+(?___awdiv)+02h
  6250                           
  6251  00F0  120A  118A  2659   	fcall	___awdiv
              120A  118A         
  6252  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
  6253  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
  6254  00F7  0830               	movf	(0+(?___awdiv)),w
  6255  00F8  3E2E               	addlw	low(02Eh)
  6256  00F9  00C1               	movwf	(?_convert)
  6257  00FA  0831               	movf	(1+(?___awdiv)),w
  6258  00FB  1803               	skipnc
  6259  00FC  3E01               	addlw	1
  6260  00FD  3E00               	addlw	high(02Eh)
  6261  00FE  00C2               	movwf	1+(?_convert)
  6262  00FF  29E3               	goto	l6698
  6263                           	
  6264  0100                     l11372:	
  6265  0100  29E3               	goto	l6698
  6266                           	
  6267  0101                     l11374:	
  6268  0101  29E3               	goto	l6698
  6269                           	line	21
  6270                           	
  6271  0102                     l6704:	
  6272                           	
  6273  0102                     l11376:	
  6274                           ;ir.c: 21: else if(adc_value < 317)
  6275  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  6276  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  6277  0104  0842               	movf	(convert@adc_value+1),w
  6278  0105  3A80               	xorlw	80h
  6279  0106  00FF               	movwf	btemp+1
  6280  0107  3081               	movlw	(high(013Dh))^80h
  6281  0108  027F               	subwf	btemp+1,w
  6282  0109  1D03               	skipz
  6283  010A  290D               	goto	u4585
  6284  010B  303D               	movlw	low(013Dh)
  6285  010C  0241               	subwf	(convert@adc_value),w
  6286  010D                     u4585:
  6287                           
  6288  010D  1803               	skipnc
  6289  010E  2910               	goto	u4581
  6290  010F  2911               	goto	u4580
  6291  0110                     u4581:
  6292  0110  2949               	goto	l11384
  6293  0111                     u4580:
  6294                           	line	22
  6295                           	
  6296  0111                     l11378:	
  6297                           ;ir.c: 22: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
  6298  0111  303D               	movlw	low(03Dh)
  6299  0112  1283               	bcf	status, 5	;RP0=0, select bank0
  6300  0113  1303               	bcf	status, 6	;RP1=0, select bank0
  6301  0114  00B0               	movwf	(?___awdiv)
  6302  0115  3000               	movlw	high(03Dh)
  6303  0116  00B1               	movwf	((?___awdiv))+1
  6304  0117  0941               	comf	(convert@adc_value),w
  6305  0118  00C3               	movwf	(??_convert+0)+0
  6306  0119  0942               	comf	(convert@adc_value+1),w
  6307  011A  00C4               	movwf	((??_convert+0)+0+1)
  6308  011B  0AC3               	incf	(??_convert+0)+0,f
  6309  011C  1903               	skipnz
  6310  011D  0AC4               	incf	((??_convert+0)+0+1),f
  6311  011E  0843               	movf	0+(??_convert+0)+0,w
  6312  011F  3E3D               	addlw	low(013Dh)
  6313  0120  00AA               	movwf	(?___wmul)
  6314  0121  0844               	movf	1+(??_convert+0)+0,w
  6315  0122  1803               	skipnc
  6316  0123  3E01               	addlw	1
  6317  0124  3E01               	addlw	high(013Dh)
  6318  0125  00AB               	movwf	1+(?___wmul)
  6319  0126  300A               	movlw	low(0Ah)
  6320  0127  00AC               	movwf	0+(?___wmul)+02h
  6321  0128  3000               	movlw	high(0Ah)
  6322  0129  00AD               	movwf	(0+(?___wmul)+02h)+1
  6323  012A  120A  158A  23ED   	fcall	___wmul
              120A  118A         
  6324  012F  1283               	bcf	status, 5	;RP0=0, select bank0
  6325  0130  1303               	bcf	status, 6	;RP1=0, select bank0
  6326  0131  082B               	movf	(1+(?___wmul)),w
  6327  0132  01B3               	clrf	1+(?___awdiv)+02h
  6328  0133  07B3               	addwf	1+(?___awdiv)+02h
  6329  0134  082A               	movf	(0+(?___wmul)),w
  6330  0135  01B2               	clrf	0+(?___awdiv)+02h
  6331  0136  07B2               	addwf	0+(?___awdiv)+02h
  6332                           
  6333  0137  120A  118A  2659   	fcall	___awdiv
              120A  118A         
  6334  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  6335  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  6336  013E  0830               	movf	(0+(?___awdiv)),w
  6337  013F  3E25               	addlw	low(025h)
  6338  0140  00C1               	movwf	(?_convert)
  6339  0141  0831               	movf	(1+(?___awdiv)),w
  6340  0142  1803               	skipnc
  6341  0143  3E01               	addlw	1
  6342  0144  3E00               	addlw	high(025h)
  6343  0145  00C2               	movwf	1+(?_convert)
  6344  0146  29E3               	goto	l6698
  6345                           	
  6346  0147                     l11380:	
  6347  0147  29E3               	goto	l6698
  6348                           	
  6349  0148                     l11382:	
  6350  0148  29E3               	goto	l6698
  6351                           	line	23
  6352                           	
  6353  0149                     l6706:	
  6354                           	
  6355  0149                     l11384:	
  6356                           ;ir.c: 23: else if(adc_value < 410)
  6357  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  6358  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  6359  014B  0842               	movf	(convert@adc_value+1),w
  6360  014C  3A80               	xorlw	80h
  6361  014D  00FF               	movwf	btemp+1
  6362  014E  3081               	movlw	(high(019Ah))^80h
  6363  014F  027F               	subwf	btemp+1,w
  6364  0150  1D03               	skipz
  6365  0151  2954               	goto	u4595
  6366  0152  309A               	movlw	low(019Ah)
  6367  0153  0241               	subwf	(convert@adc_value),w
  6368  0154                     u4595:
  6369                           
  6370  0154  1803               	skipnc
  6371  0155  2957               	goto	u4591
  6372  0156  2958               	goto	u4590
  6373  0157                     u4591:
  6374  0157  2990               	goto	l11392
  6375  0158                     u4590:
  6376                           	line	24
  6377                           	
  6378  0158                     l11386:	
  6379                           ;ir.c: 24: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
  6380  0158  305D               	movlw	low(05Dh)
  6381  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  6382  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  6383  015B  00B0               	movwf	(?___awdiv)
  6384  015C  3000               	movlw	high(05Dh)
  6385  015D  00B1               	movwf	((?___awdiv))+1
  6386  015E  0941               	comf	(convert@adc_value),w
  6387  015F  00C3               	movwf	(??_convert+0)+0
  6388  0160  0942               	comf	(convert@adc_value+1),w
  6389  0161  00C4               	movwf	((??_convert+0)+0+1)
  6390  0162  0AC3               	incf	(??_convert+0)+0,f
  6391  0163  1903               	skipnz
  6392  0164  0AC4               	incf	((??_convert+0)+0+1),f
  6393  0165  0843               	movf	0+(??_convert+0)+0,w
  6394  0166  3E9A               	addlw	low(019Ah)
  6395  0167  00AA               	movwf	(?___wmul)
  6396  0168  0844               	movf	1+(??_convert+0)+0,w
  6397  0169  1803               	skipnc
  6398  016A  3E01               	addlw	1
  6399  016B  3E01               	addlw	high(019Ah)
  6400  016C  00AB               	movwf	1+(?___wmul)
  6401  016D  300A               	movlw	low(0Ah)
  6402  016E  00AC               	movwf	0+(?___wmul)+02h
  6403  016F  3000               	movlw	high(0Ah)
  6404  0170  00AD               	movwf	(0+(?___wmul)+02h)+1
  6405  0171  120A  158A  23ED   	fcall	___wmul
              120A  118A         
  6406  0176  1283               	bcf	status, 5	;RP0=0, select bank0
  6407  0177  1303               	bcf	status, 6	;RP1=0, select bank0
  6408  0178  082B               	movf	(1+(?___wmul)),w
  6409  0179  01B3               	clrf	1+(?___awdiv)+02h
  6410  017A  07B3               	addwf	1+(?___awdiv)+02h
  6411  017B  082A               	movf	(0+(?___wmul)),w
  6412  017C  01B2               	clrf	0+(?___awdiv)+02h
  6413  017D  07B2               	addwf	0+(?___awdiv)+02h
  6414                           
  6415  017E  120A  118A  2659   	fcall	___awdiv
              120A  118A         
  6416  0183  1283               	bcf	status, 5	;RP0=0, select bank0
  6417  0184  1303               	bcf	status, 6	;RP1=0, select bank0
  6418  0185  0830               	movf	(0+(?___awdiv)),w
  6419  0186  3E1C               	addlw	low(01Ch)
  6420  0187  00C1               	movwf	(?_convert)
  6421  0188  0831               	movf	(1+(?___awdiv)),w
  6422  0189  1803               	skipnc
  6423  018A  3E01               	addlw	1
  6424  018B  3E00               	addlw	high(01Ch)
  6425  018C  00C2               	movwf	1+(?_convert)
  6426  018D  29E3               	goto	l6698
  6427                           	
  6428  018E                     l11388:	
  6429  018E  29E3               	goto	l6698
  6430                           	
  6431  018F                     l11390:	
  6432  018F  29E3               	goto	l6698
  6433                           	line	25
  6434                           	
  6435  0190                     l6708:	
  6436                           	
  6437  0190                     l11392:	
  6438                           ;ir.c: 25: else if(adc_value < 522)
  6439  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  6440  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  6441  0192  0842               	movf	(convert@adc_value+1),w
  6442  0193  3A80               	xorlw	80h
  6443  0194  00FF               	movwf	btemp+1
  6444  0195  3082               	movlw	(high(020Ah))^80h
  6445  0196  027F               	subwf	btemp+1,w
  6446  0197  1D03               	skipz
  6447  0198  299B               	goto	u4605
  6448  0199  300A               	movlw	low(020Ah)
  6449  019A  0241               	subwf	(convert@adc_value),w
  6450  019B                     u4605:
  6451                           
  6452  019B  1803               	skipnc
  6453  019C  299E               	goto	u4601
  6454  019D  299F               	goto	u4600
  6455  019E                     u4601:
  6456  019E  29D7               	goto	l11400
  6457  019F                     u4600:
  6458                           	line	26
  6459                           	
  6460  019F                     l11394:	
  6461                           ;ir.c: 26: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
  6462  019F  3070               	movlw	low(070h)
  6463  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  6464  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  6465  01A2  00B0               	movwf	(?___awdiv)
  6466  01A3  3000               	movlw	high(070h)
  6467  01A4  00B1               	movwf	((?___awdiv))+1
  6468  01A5  0941               	comf	(convert@adc_value),w
  6469  01A6  00C3               	movwf	(??_convert+0)+0
  6470  01A7  0942               	comf	(convert@adc_value+1),w
  6471  01A8  00C4               	movwf	((??_convert+0)+0+1)
  6472  01A9  0AC3               	incf	(??_convert+0)+0,f
  6473  01AA  1903               	skipnz
  6474  01AB  0AC4               	incf	((??_convert+0)+0+1),f
  6475  01AC  0843               	movf	0+(??_convert+0)+0,w
  6476  01AD  3E0A               	addlw	low(020Ah)
  6477  01AE  00AA               	movwf	(?___wmul)
  6478  01AF  0844               	movf	1+(??_convert+0)+0,w
  6479  01B0  1803               	skipnc
  6480  01B1  3E01               	addlw	1
  6481  01B2  3E02               	addlw	high(020Ah)
  6482  01B3  00AB               	movwf	1+(?___wmul)
  6483  01B4  300A               	movlw	low(0Ah)
  6484  01B5  00AC               	movwf	0+(?___wmul)+02h
  6485  01B6  3000               	movlw	high(0Ah)
  6486  01B7  00AD               	movwf	(0+(?___wmul)+02h)+1
  6487  01B8  120A  158A  23ED   	fcall	___wmul
              120A  118A         
  6488  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  6489  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  6490  01BF  082B               	movf	(1+(?___wmul)),w
  6491  01C0  01B3               	clrf	1+(?___awdiv)+02h
  6492  01C1  07B3               	addwf	1+(?___awdiv)+02h
  6493  01C2  082A               	movf	(0+(?___wmul)),w
  6494  01C3  01B2               	clrf	0+(?___awdiv)+02h
  6495  01C4  07B2               	addwf	0+(?___awdiv)+02h
  6496                           
  6497  01C5  120A  118A  2659   	fcall	___awdiv
              120A  118A         
  6498  01CA  1283               	bcf	status, 5	;RP0=0, select bank0
  6499  01CB  1303               	bcf	status, 6	;RP1=0, select bank0
  6500  01CC  0830               	movf	(0+(?___awdiv)),w
  6501  01CD  3E12               	addlw	low(012h)
  6502  01CE  00C1               	movwf	(?_convert)
  6503  01CF  0831               	movf	(1+(?___awdiv)),w
  6504  01D0  1803               	skipnc
  6505  01D1  3E01               	addlw	1
  6506  01D2  3E00               	addlw	high(012h)
  6507  01D3  00C2               	movwf	1+(?_convert)
  6508  01D4  29E3               	goto	l6698
  6509                           	
  6510  01D5                     l11396:	
  6511  01D5  29E3               	goto	l6698
  6512                           	
  6513  01D6                     l11398:	
  6514  01D6  29E3               	goto	l6698
  6515                           	line	27
  6516                           	
  6517  01D7                     l6710:	
  6518                           	
  6519  01D7                     l11400:	
  6520                           ;ir.c: 27: else return 0;
  6521  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  6522  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  6523  01D9  01C1               	clrf	(?_convert)
  6524  01DA  01C2               	clrf	(?_convert+1)
  6525  01DB  29E3               	goto	l6698
  6526                           	
  6527  01DC                     l11402:	
  6528  01DC  29E3               	goto	l6698
  6529                           	
  6530  01DD                     l6711:	
  6531  01DD  29E3               	goto	l6698
  6532                           	
  6533  01DE                     l6709:	
  6534  01DE  29E3               	goto	l6698
  6535                           	
  6536  01DF                     l6707:	
  6537  01DF  29E3               	goto	l6698
  6538                           	
  6539  01E0                     l6705:	
  6540  01E0  29E3               	goto	l6698
  6541                           	
  6542  01E1                     l6703:	
  6543  01E1  29E3               	goto	l6698
  6544                           	
  6545  01E2                     l6701:	
  6546  01E2  29E3               	goto	l6698
  6547                           	
  6548  01E3                     l6699:	
  6549                           	line	28
  6550                           	
  6551  01E3                     l6698:	
  6552  01E3  0008               	return
  6553                           	opt stack 0
  6554                           GLOBAL	__end_of_convert
  6555  01E4                     	__end_of_convert:
  6556 ;; =============== function _convert ends ============
  6557                           
  6558                           	signat	_convert,4218
  6559                           	global	_ser_putArr
  6560                           psect	text1650,local,class=CODE,delta=2
  6561                           global __ptext1650
  6562  0D7F                     __ptext1650:
  6563                           
  6564 ;; *************** function _ser_putArr *****************
  6565 ;; Defined at:
  6566 ;;		line 73 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  array           2   12[BANK0 ] PTR unsigned char 
  6569 ;;		 -> champions(21), lookingForU2(29), superMarioBros(25), finalCountdown(27), 
  6570 ;;  length          2   14[BANK0 ] int 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  i               2   19[BANK0 ] int 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6582 ;;      Params:         0       4       0       0       0
  6583 ;;      Locals:         0       2       0       0       0
  6584 ;;      Temps:          0       3       0       0       0
  6585 ;;      Totals:         0       9       0       0       0
  6586 ;;Total ram usage:        9 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    3
  6589 ;; This function calls:
  6590 ;;		_ser_putch
  6591 ;; This function is called by:
  6592 ;;		_initSongs
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           psect	text1650
  6596                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  6597                           	line	73
  6598                           	global	__size_of_ser_putArr
  6599  0039                     	__size_of_ser_putArr	equ	__end_of_ser_putArr-_ser_putArr
  6600                           	
  6601  0D7F                     _ser_putArr:	
  6602                           	opt	stack 2
  6603                           ; Regs used in _ser_putArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6604                           	line	74
  6605                           	
  6606  0D7F                     l11336:	
  6607                           ;ser.c: 74: for(int i =0; i< length; i++)
  6608  0D7F  1283               	bcf	status, 5	;RP0=0, select bank0
  6609  0D80  1303               	bcf	status, 6	;RP1=0, select bank0
  6610  0D81  01B3               	clrf	(ser_putArr@i)
  6611  0D82  01B4               	clrf	(ser_putArr@i+1)
  6612  0D83  2DA8               	goto	l11342
  6613                           	line	75
  6614                           	
  6615  0D84                     l5276:	
  6616                           	line	76
  6617                           	
  6618  0D84                     l11338:	
  6619                           ;ser.c: 75: {
  6620                           ;ser.c: 76: ser_putch(array[i]);
  6621  0D84  1283               	bcf	status, 5	;RP0=0, select bank0
  6622  0D85  1303               	bcf	status, 6	;RP1=0, select bank0
  6623  0D86  0833               	movf	(ser_putArr@i),w
  6624  0D87  072C               	addwf	(ser_putArr@array),w
  6625  0D88  00B1               	movwf	(??_ser_putArr+1)+0
  6626  0D89  082D               	movf	(ser_putArr@array+1),w
  6627  0D8A  00B0               	movwf	(??_ser_putArr+0)+0
  6628  0D8B  1803               	skipnc
  6629  0D8C  0AB0               	incf	(??_ser_putArr+0)+0,f
  6630  0D8D  1FB3               	btfss	(ser_putArr@i),7
  6631  0D8E  2D90               	goto	u4520
  6632  0D8F  03B0               	decf	(??_ser_putArr+0)+0,f
  6633  0D90                     u4520:
  6634  0D90  1283               	bcf	status, 5	;RP0=0, select bank0
  6635  0D91  1303               	bcf	status, 6	;RP1=0, select bank0
  6636  0D92  0830               	movf	(??_ser_putArr+0)+0,w
  6637  0D93  00B2               	movwf	0+((??_ser_putArr+1)+0)+1
  6638  0D94  0831               	movf	0+(??_ser_putArr+1)+0,w
  6639  0D95  0084               	movwf	fsr0
  6640  0D96  1783               	bsf	status,7
  6641  0D97  1C32               	btfss	1+(??_ser_putArr+1)+0,0
  6642  0D98  1383               	bcf	status,7
  6643  0D99  0800               	movf	indf,w
  6644  0D9A  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  6645                           	line	74
  6646                           	
  6647  0D9F                     l11340:	
  6648  0D9F  3001               	movlw	low(01h)
  6649  0DA0  1283               	bcf	status, 5	;RP0=0, select bank0
  6650  0DA1  1303               	bcf	status, 6	;RP1=0, select bank0
  6651  0DA2  07B3               	addwf	(ser_putArr@i),f
  6652  0DA3  1803               	skipnc
  6653  0DA4  0AB4               	incf	(ser_putArr@i+1),f
  6654  0DA5  3000               	movlw	high(01h)
  6655  0DA6  07B4               	addwf	(ser_putArr@i+1),f
  6656  0DA7  2DA8               	goto	l11342
  6657                           	
  6658  0DA8                     l5275:	
  6659                           	
  6660  0DA8                     l11342:	
  6661  0DA8  0834               	movf	(ser_putArr@i+1),w
  6662  0DA9  3A80               	xorlw	80h
  6663  0DAA  00B0               	movwf	(??_ser_putArr+0)+0
  6664  0DAB  082F               	movf	(ser_putArr@length+1),w
  6665  0DAC  3A80               	xorlw	80h
  6666  0DAD  0230               	subwf	(??_ser_putArr+0)+0,w
  6667  0DAE  1D03               	skipz
  6668  0DAF  2DB2               	goto	u4535
  6669  0DB0  082E               	movf	(ser_putArr@length),w
  6670  0DB1  0233               	subwf	(ser_putArr@i),w
  6671  0DB2                     u4535:
  6672                           
  6673  0DB2  1C03               	skipc
  6674  0DB3  2DB5               	goto	u4531
  6675  0DB4  2DB6               	goto	u4530
  6676  0DB5                     u4531:
  6677  0DB5  2D84               	goto	l11338
  6678  0DB6                     u4530:
  6679  0DB6  2DB7               	goto	l5278
  6680                           	
  6681  0DB7                     l5277:	
  6682                           	line	78
  6683                           	
  6684  0DB7                     l5278:	
  6685  0DB7  0008               	return
  6686                           	opt stack 0
  6687                           GLOBAL	__end_of_ser_putArr
  6688  0DB8                     	__end_of_ser_putArr:
  6689 ;; =============== function _ser_putArr ends ============
  6690                           
  6691                           	signat	_ser_putArr,8312
  6692                           	global	_play_iCreate_song
  6693                           psect	text1651,local,class=CODE,delta=2
  6694                           global __ptext1651
  6695  097C                     __ptext1651:
  6696                           
  6697 ;; *************** function _play_iCreate_song *****************
  6698 ;; Defined at:
  6699 ;;		line 24 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\song
       s.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  song            1    wreg     unsigned char 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  song            1   12[BANK0 ] unsigned char 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;		None               void
  6706 ;; Registers used:
  6707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6713 ;;      Params:         0       0       0       0       0
  6714 ;;      Locals:         0       1       0       0       0
  6715 ;;      Temps:          0       0       0       0       0
  6716 ;;      Totals:         0       1       0       0       0
  6717 ;;Total ram usage:        1 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    3
  6720 ;; This function calls:
  6721 ;;		_ser_putch
  6722 ;; This function is called by:
  6723 ;;		_checkForFinalDestination
  6724 ;;		_lookForVictim
  6725 ;;		_checkIfHome
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           psect	text1651
  6729                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\songs.c"
  6730                           	line	24
  6731                           	global	__size_of_play_iCreate_song
  6732  0012                     	__size_of_play_iCreate_song	equ	__end_of_play_iCreate_song-_play_iCreate_song
  6733                           	
  6734  097C                     _play_iCreate_song:	
  6735                           	opt	stack 3
  6736                           ; Regs used in _play_iCreate_song: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6737                           ;play_iCreate_song@song stored from wreg
  6738  097C  1283               	bcf	status, 5	;RP0=0, select bank0
  6739  097D  1303               	bcf	status, 6	;RP1=0, select bank0
  6740  097E  00AC               	movwf	(play_iCreate_song@song)
  6741                           	line	25
  6742                           	
  6743  097F                     l11334:	
  6744                           ;songs.c: 25: ser_putch(141);
  6745  097F  308D               	movlw	(08Dh)
  6746  0980  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  6747                           	line	26
  6748                           ;songs.c: 26: ser_putch(song);
  6749  0985  1283               	bcf	status, 5	;RP0=0, select bank0
  6750  0986  1303               	bcf	status, 6	;RP1=0, select bank0
  6751  0987  082C               	movf	(play_iCreate_song@song),w
  6752  0988  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  6753                           	line	27
  6754                           	
  6755  098D                     l6003:	
  6756  098D  0008               	return
  6757                           	opt stack 0
  6758                           GLOBAL	__end_of_play_iCreate_song
  6759  098E                     	__end_of_play_iCreate_song:
  6760 ;; =============== function _play_iCreate_song ends ============
  6761                           
  6762                           	signat	_play_iCreate_song,4216
  6763                           	global	_initIRobot
  6764                           psect	text1652,local,class=CODE,delta=2
  6765                           global __ptext1652
  6766  0A10                     __ptext1652:
  6767                           
  6768 ;; *************** function _initIRobot *****************
  6769 ;; Defined at:
  6770 ;;		line 114 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;		None               void
  6777 ;; Registers used:
  6778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6784 ;;      Params:         0       0       0       0       0
  6785 ;;      Locals:         0       0       0       0       0
  6786 ;;      Temps:          0       3       0       0       0
  6787 ;;      Totals:         0       3       0       0       0
  6788 ;;Total ram usage:        3 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    3
  6791 ;; This function calls:
  6792 ;;		_ser_putch
  6793 ;; This function is called by:
  6794 ;;		_init
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           psect	text1652
  6798                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  6799                           	line	114
  6800                           	global	__size_of_initIRobot
  6801  001C                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
  6802                           	
  6803  0A10                     _initIRobot:	
  6804                           	opt	stack 3
  6805                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6806                           	line	115
  6807                           	
  6808  0A10                     l11328:	
  6809                           ;main.c: 115: _delay((unsigned long)((100)*(20000000/4000.0)));
  6810                           	opt asmopt_off
  6811  0A10  3003               movlw  3
  6812  0A11  1283               	bcf	status, 5	;RP0=0, select bank0
  6813  0A12  1303               	bcf	status, 6	;RP1=0, select bank0
  6814  0A13  00AE               movwf	((??_initIRobot+0)+0+2),f
  6815  0A14  308A               movlw	138
  6816  0A15  00AD               movwf	((??_initIRobot+0)+0+1),f
  6817  0A16  3056               	movlw	86
  6818  0A17  00AC               movwf	((??_initIRobot+0)+0),f
  6819  0A18                     u5087:
  6820  0A18  0BAC               	decfsz	((??_initIRobot+0)+0),f
  6821  0A19  2A18               	goto	u5087
  6822  0A1A  0BAD               	decfsz	((??_initIRobot+0)+0+1),f
  6823  0A1B  2A18               	goto	u5087
  6824  0A1C  0BAE               	decfsz	((??_initIRobot+0)+0+2),f
  6825  0A1D  2A18               	goto	u5087
  6826  0A1E  2A1F               	nop2
  6827                           opt asmopt_on
  6828                           
  6829                           	line	116
  6830                           	
  6831  0A1F                     l11330:	
  6832                           ;main.c: 116: ser_putch(128);
  6833  0A1F  3080               	movlw	(080h)
  6834  0A20  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  6835                           	line	117
  6836                           	
  6837  0A25                     l11332:	
  6838                           ;main.c: 117: ser_putch(132);
  6839  0A25  3084               	movlw	(084h)
  6840  0A26  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  6841                           	line	118
  6842                           	
  6843  0A2B                     l3714:	
  6844  0A2B  0008               	return
  6845                           	opt stack 0
  6846                           GLOBAL	__end_of_initIRobot
  6847  0A2C                     	__end_of_initIRobot:
  6848 ;; =============== function _initIRobot ends ============
  6849                           
  6850                           	signat	_initIRobot,88
  6851                           	global	_lcd_write_control
  6852                           psect	text1653,local,class=CODE,delta=2
  6853                           global __ptext1653
  6854  09B4                     __ptext1653:
  6855                           
  6856 ;; *************** function _lcd_write_control *****************
  6857 ;; Defined at:
  6858 ;;		line 8 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\lcd.c
       "
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  databyte        1    wreg     unsigned char 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  databyte        1   12[BANK0 ] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;		None               void
  6865 ;; Registers used:
  6866 ;;		wreg
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6872 ;;      Params:         0       0       0       0       0
  6873 ;;      Locals:         0       1       0       0       0
  6874 ;;      Temps:          0       2       0       0       0
  6875 ;;      Totals:         0       3       0       0       0
  6876 ;;Total ram usage:        3 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    2
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_lcd_set_cursor
  6883 ;;		_lcd_init
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           psect	text1653
  6887                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\lcd.c"
  6888                           	line	8
  6889                           	global	__size_of_lcd_write_control
  6890  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  6891                           	
  6892  09B4                     _lcd_write_control:	
  6893                           	opt	stack 3
  6894                           ; Regs used in _lcd_write_control: [wreg]
  6895                           ;lcd_write_control@databyte stored from wreg
  6896  09B4  1283               	bcf	status, 5	;RP0=0, select bank0
  6897  09B5  1303               	bcf	status, 6	;RP1=0, select bank0
  6898  09B6  00AC               	movwf	(lcd_write_control@databyte)
  6899                           	line	9
  6900                           	
  6901  09B7                     l11320:	
  6902                           ;lcd.c: 9: RE2 = 0;
  6903  09B7  1109               	bcf	(74/8),(74)&7
  6904                           	line	10
  6905                           ;lcd.c: 10: RE1 = 0;
  6906  09B8  1089               	bcf	(73/8),(73)&7
  6907                           	line	11
  6908                           ;lcd.c: 11: RE0 = 0;
  6909  09B9  1009               	bcf	(72/8),(72)&7
  6910                           	line	12
  6911                           	
  6912  09BA                     l11322:	
  6913                           ;lcd.c: 12: PORTD = databyte;
  6914  09BA  082C               	movf	(lcd_write_control@databyte),w
  6915  09BB  0088               	movwf	(8)	;volatile
  6916                           	line	13
  6917                           	
  6918  09BC                     l11324:	
  6919                           ;lcd.c: 13: RE2 = 1;
  6920  09BC  1509               	bsf	(74/8),(74)&7
  6921                           	line	14
  6922                           	
  6923  09BD                     l11326:	
  6924                           ;lcd.c: 14: RE2 = 0;
  6925  09BD  1109               	bcf	(74/8),(74)&7
  6926                           	line	15
  6927                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
  6928                           	opt asmopt_off
  6929  09BE  300D               movlw	13
  6930  09BF  00AB               movwf	((??_lcd_write_control+0)+0+1),f
  6931  09C0  30FB               	movlw	251
  6932  09C1  00AA               movwf	((??_lcd_write_control+0)+0),f
  6933  09C2                     u5097:
  6934  09C2  0BAA               	decfsz	((??_lcd_write_control+0)+0),f
  6935  09C3  29C2               	goto	u5097
  6936  09C4  0BAB               	decfsz	((??_lcd_write_control+0)+0+1),f
  6937  09C5  29C2               	goto	u5097
  6938  09C6  29C7               	nop2
  6939                           opt asmopt_on
  6940                           
  6941                           	line	16
  6942                           	
  6943  09C7                     l2887:	
  6944  09C7  0008               	return
  6945                           	opt stack 0
  6946                           GLOBAL	__end_of_lcd_write_control
  6947  09C8                     	__end_of_lcd_write_control:
  6948 ;; =============== function _lcd_write_control ends ============
  6949                           
  6950                           	signat	_lcd_write_control,4216
  6951                           	global	_rotateIR
  6952                           psect	text1654,local,class=CODE,delta=2
  6953                           global __ptext1654
  6954  0FBA                     __ptext1654:
  6955                           
  6956 ;; *************** function _rotateIR *****************
  6957 ;; Defined at:
  6958 ;;		line 49 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\ir.c
       "
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  steps           1    wreg     unsigned char 
  6961 ;;  direction       1   10[BANK0 ] unsigned char 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  steps           1   14[BANK0 ] unsigned char 
  6964 ;;  stepNum         1   15[BANK0 ] unsigned char 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;		None               void
  6967 ;; Registers used:
  6968 ;;		wreg, status,2, status,0
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6974 ;;      Params:         0       1       0       0       0
  6975 ;;      Locals:         0       2       0       0       0
  6976 ;;      Temps:          0       3       0       0       0
  6977 ;;      Totals:         0       6       0       0       0
  6978 ;;Total ram usage:        6 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    2
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_rightWallCorrect
  6985 ;;		_findWalls
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           psect	text1654
  6989                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\ir.c"
  6990                           	line	49
  6991                           	global	__size_of_rotateIR
  6992  0046                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
  6993                           	
  6994  0FBA                     _rotateIR:	
  6995                           	opt	stack 3
  6996                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
  6997                           ;rotateIR@steps stored from wreg
  6998  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  6999  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  7000  0FBC  00AE               	movwf	(rotateIR@steps)
  7001                           	line	50
  7002                           	
  7003  0FBD                     l11302:	
  7004                           ;ir.c: 50: PORTC |= 0b00000011;
  7005  0FBD  3003               	movlw	(03h)
  7006  0FBE  00AB               	movwf	(??_rotateIR+0)+0
  7007  0FBF  082B               	movf	(??_rotateIR+0)+0,w
  7008  0FC0  0487               	iorwf	(7),f	;volatile
  7009                           	line	51
  7010                           	
  7011  0FC1                     l11304:	
  7012                           ;ir.c: 51: SSPBUF = direction;
  7013  0FC1  082A               	movf	(rotateIR@direction),w
  7014  0FC2  0093               	movwf	(19)	;volatile
  7015                           	line	52
  7016                           	
  7017  0FC3                     l11306:	
  7018                           ;ir.c: 52: _delay((unsigned long)((200)*(20000000/4000.0)));
  7019                           	opt asmopt_off
  7020  0FC3  3006               movlw  6
  7021  0FC4  00AD               movwf	((??_rotateIR+0)+0+2),f
  7022  0FC5  3013               movlw	19
  7023  0FC6  00AC               movwf	((??_rotateIR+0)+0+1),f
  7024  0FC7  30B1               	movlw	177
  7025  0FC8  00AB               movwf	((??_rotateIR+0)+0),f
  7026  0FC9                     u5107:
  7027  0FC9  0BAB               	decfsz	((??_rotateIR+0)+0),f
  7028  0FCA  2FC9               	goto	u5107
  7029  0FCB  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  7030  0FCC  2FC9               	goto	u5107
  7031  0FCD  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  7032  0FCE  2FC9               	goto	u5107
  7033  0FCF  2FD0               	nop2
  7034                           opt asmopt_on
  7035                           
  7036                           	line	54
  7037                           	
  7038  0FD0                     l11308:	
  7039                           ;ir.c: 54: for (char stepNum = 1; stepNum <= steps; ++stepNum)
  7040  0FD0  1283               	bcf	status, 5	;RP0=0, select bank0
  7041  0FD1  1303               	bcf	status, 6	;RP1=0, select bank0
  7042  0FD2  01AF               	clrf	(rotateIR@stepNum)
  7043  0FD3  1403               	bsf	status,0
  7044  0FD4  0DAF               	rlf	(rotateIR@stepNum),f
  7045  0FD5  2FEA               	goto	l6722
  7046                           	line	55
  7047                           	
  7048  0FD6                     l6723:	
  7049                           	line	56
  7050                           ;ir.c: 55: {
  7051                           ;ir.c: 56: PORTC |= 0b00000100;
  7052  0FD6  1507               	bsf	(7)+(2/8),(2)&7	;volatile
  7053                           	line	57
  7054                           	
  7055  0FD7                     l11310:	
  7056                           ;ir.c: 57: PORTC &= 0b11111011;
  7057  0FD7  30FB               	movlw	(0FBh)
  7058  0FD8  00AB               	movwf	(??_rotateIR+0)+0
  7059  0FD9  082B               	movf	(??_rotateIR+0)+0,w
  7060  0FDA  0587               	andwf	(7),f	;volatile
  7061                           	line	58
  7062                           	
  7063  0FDB                     l11312:	
  7064                           ;ir.c: 58: _delay((unsigned long)((20)*(20000000/4000.0)));
  7065                           	opt asmopt_off
  7066  0FDB  3082               movlw	130
  7067  0FDC  00AC               movwf	((??_rotateIR+0)+0+1),f
  7068  0FDD  30DD               	movlw	221
  7069  0FDE  00AB               movwf	((??_rotateIR+0)+0),f
  7070  0FDF                     u5117:
  7071  0FDF  0BAB               	decfsz	((??_rotateIR+0)+0),f
  7072  0FE0  2FDF               	goto	u5117
  7073  0FE1  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  7074  0FE2  2FDF               	goto	u5117
  7075  0FE3  2FE4               	nop2
  7076                           opt asmopt_on
  7077                           
  7078                           	line	54
  7079                           	
  7080  0FE4                     l11314:	
  7081  0FE4  3001               	movlw	(01h)
  7082  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  7083  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  7084  0FE7  00AB               	movwf	(??_rotateIR+0)+0
  7085  0FE8  082B               	movf	(??_rotateIR+0)+0,w
  7086  0FE9  07AF               	addwf	(rotateIR@stepNum),f
  7087                           	
  7088  0FEA                     l6722:	
  7089  0FEA  082F               	movf	(rotateIR@stepNum),w
  7090  0FEB  022E               	subwf	(rotateIR@steps),w
  7091  0FEC  1803               	skipnc
  7092  0FED  2FEF               	goto	u4511
  7093  0FEE  2FF0               	goto	u4510
  7094  0FEF                     u4511:
  7095  0FEF  2FD6               	goto	l6723
  7096  0FF0                     u4510:
  7097  0FF0  2FF1               	goto	l11316
  7098                           	
  7099  0FF1                     l6724:	
  7100                           	line	61
  7101                           	
  7102  0FF1                     l11316:	
  7103                           ;ir.c: 59: }
  7104                           ;ir.c: 61: SSPBUF = 0b00000000;
  7105  0FF1  0193               	clrf	(19)	;volatile
  7106                           	line	62
  7107                           	
  7108  0FF2                     l11318:	
  7109                           ;ir.c: 62: _delay((unsigned long)((200)*(20000000/4000.0)));
  7110                           	opt asmopt_off
  7111  0FF2  3006               movlw  6
  7112  0FF3  00AD               movwf	((??_rotateIR+0)+0+2),f
  7113  0FF4  3013               movlw	19
  7114  0FF5  00AC               movwf	((??_rotateIR+0)+0+1),f
  7115  0FF6  30B1               	movlw	177
  7116  0FF7  00AB               movwf	((??_rotateIR+0)+0),f
  7117  0FF8                     u5127:
  7118  0FF8  0BAB               	decfsz	((??_rotateIR+0)+0),f
  7119  0FF9  2FF8               	goto	u5127
  7120  0FFA  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  7121  0FFB  2FF8               	goto	u5127
  7122  0FFC  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  7123  0FFD  2FF8               	goto	u5127
  7124  0FFE  2FFF               	nop2
  7125                           opt asmopt_on
  7126                           
  7127                           	line	64
  7128                           	
  7129  0FFF                     l6725:	
  7130  0FFF  0008               	return
  7131                           	opt stack 0
  7132                           GLOBAL	__end_of_rotateIR
  7133  1000                     	__end_of_rotateIR:
  7134 ;; =============== function _rotateIR ends ============
  7135                           
  7136                           	signat	_rotateIR,8312
  7137                           	global	_waitFor
  7138                           psect	text1655,local,class=CODE,delta=2
  7139                           global __ptext1655
  7140  0B47                     __ptext1655:
  7141                           
  7142 ;; *************** function _waitFor *****************
  7143 ;; Defined at:
  7144 ;;		line 189 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  type            1    wreg     unsigned char 
  7147 ;;  highByte        1   12[BANK0 ] unsigned char 
  7148 ;;  lowByte         1   13[BANK0 ] unsigned char 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;  type            1   17[BANK0 ] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;		None               void
  7153 ;; Registers used:
  7154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7160 ;;      Params:         0       2       0       0       0
  7161 ;;      Locals:         0       1       0       0       0
  7162 ;;      Temps:          0       3       0       0       0
  7163 ;;      Totals:         0       6       0       0       0
  7164 ;;Total ram usage:        6 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    3
  7167 ;; This function calls:
  7168 ;;		_ser_putch
  7169 ;; This function is called by:
  7170 ;;		_goReverse
  7171 ;;		_turnAround
  7172 ;;		_turnLeft90
  7173 ;;		_turnRight90
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           psect	text1655
  7177                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  7178                           	line	189
  7179                           	global	__size_of_waitFor
  7180  0029                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
  7181                           	
  7182  0B47                     _waitFor:	
  7183                           	opt	stack 0
  7184                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7185                           ;waitFor@type stored from wreg
  7186  0B47  1283               	bcf	status, 5	;RP0=0, select bank0
  7187  0B48  1303               	bcf	status, 6	;RP1=0, select bank0
  7188  0B49  00B1               	movwf	(waitFor@type)
  7189                           	line	190
  7190                           	
  7191  0B4A                     l11294:	
  7192                           ;drive.c: 190: _delay((unsigned long)((100)*(20000000/4000.0)));
  7193                           	opt asmopt_off
  7194  0B4A  3003               movlw  3
  7195  0B4B  00B0               movwf	((??_waitFor+0)+0+2),f
  7196  0B4C  308A               movlw	138
  7197  0B4D  00AF               movwf	((??_waitFor+0)+0+1),f
  7198  0B4E  3056               	movlw	86
  7199  0B4F  00AE               movwf	((??_waitFor+0)+0),f
  7200  0B50                     u5137:
  7201  0B50  0BAE               	decfsz	((??_waitFor+0)+0),f
  7202  0B51  2B50               	goto	u5137
  7203  0B52  0BAF               	decfsz	((??_waitFor+0)+0+1),f
  7204  0B53  2B50               	goto	u5137
  7205  0B54  0BB0               	decfsz	((??_waitFor+0)+0+2),f
  7206  0B55  2B50               	goto	u5137
  7207  0B56  2B57               	nop2
  7208                           opt asmopt_on
  7209                           
  7210                           	line	191
  7211                           	
  7212  0B57                     l11296:	
  7213                           ;drive.c: 191: ser_putch(type);
  7214  0B57  1283               	bcf	status, 5	;RP0=0, select bank0
  7215  0B58  1303               	bcf	status, 6	;RP1=0, select bank0
  7216  0B59  0831               	movf	(waitFor@type),w
  7217  0B5A  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7218                           	line	192
  7219                           	
  7220  0B5F                     l11298:	
  7221                           ;drive.c: 192: ser_putch(highByte);
  7222  0B5F  1283               	bcf	status, 5	;RP0=0, select bank0
  7223  0B60  1303               	bcf	status, 6	;RP1=0, select bank0
  7224  0B61  082C               	movf	(waitFor@highByte),w
  7225  0B62  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7226                           	line	193
  7227                           	
  7228  0B67                     l11300:	
  7229                           ;drive.c: 193: ser_putch(lowByte);
  7230  0B67  1283               	bcf	status, 5	;RP0=0, select bank0
  7231  0B68  1303               	bcf	status, 6	;RP1=0, select bank0
  7232  0B69  082D               	movf	(waitFor@lowByte),w
  7233  0B6A  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7234                           	line	194
  7235                           	
  7236  0B6F                     l2180:	
  7237  0B6F  0008               	return
  7238                           	opt stack 0
  7239                           GLOBAL	__end_of_waitFor
  7240  0B70                     	__end_of_waitFor:
  7241 ;; =============== function _waitFor ends ============
  7242                           
  7243                           	signat	_waitFor,12408
  7244                           	global	_lcd_write_data
  7245                           psect	text1656,local,class=CODE,delta=2
  7246                           global __ptext1656
  7247  098E                     __ptext1656:
  7248                           
  7249 ;; *************** function _lcd_write_data *****************
  7250 ;; Defined at:
  7251 ;;		line 20 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\lcd.
       c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  databyte        1    wreg     unsigned char 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  databyte        1   12[BANK0 ] unsigned char 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;		None               void
  7258 ;; Registers used:
  7259 ;;		wreg
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7265 ;;      Params:         0       0       0       0       0
  7266 ;;      Locals:         0       1       0       0       0
  7267 ;;      Temps:          0       2       0       0       0
  7268 ;;      Totals:         0       3       0       0       0
  7269 ;;Total ram usage:        3 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    2
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_goBackward
  7276 ;;		_goForward
  7277 ;;		_goLeft
  7278 ;;		_goReverse
  7279 ;;		_goRight
  7280 ;;		_lcd_write_string
  7281 ;;		_lcd_write_1_digit_bcd
  7282 ;;		_checkForFinalDestination
  7283 ;;		_lookForVictim
  7284 ;;		_findWalls
  7285 ;;		_updateLocation
  7286 ;;		_lcd_write_3_digit_bcd
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           psect	text1656
  7290                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\lcd.c"
  7291                           	line	20
  7292                           	global	__size_of_lcd_write_data
  7293  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  7294                           	
  7295  098E                     _lcd_write_data:	
  7296                           	opt	stack 3
  7297                           ; Regs used in _lcd_write_data: [wreg]
  7298                           ;lcd_write_data@databyte stored from wreg
  7299  098E  1283               	bcf	status, 5	;RP0=0, select bank0
  7300  098F  1303               	bcf	status, 6	;RP1=0, select bank0
  7301  0990  00AC               	movwf	(lcd_write_data@databyte)
  7302                           	line	21
  7303                           	
  7304  0991                     l11286:	
  7305                           ;lcd.c: 21: RE2 = 0;
  7306  0991  1109               	bcf	(74/8),(74)&7
  7307                           	line	22
  7308                           ;lcd.c: 22: RE1 = 0;
  7309  0992  1089               	bcf	(73/8),(73)&7
  7310                           	line	23
  7311                           ;lcd.c: 23: RE0 = 1;
  7312  0993  1409               	bsf	(72/8),(72)&7
  7313                           	line	24
  7314                           	
  7315  0994                     l11288:	
  7316                           ;lcd.c: 24: PORTD = databyte;
  7317  0994  082C               	movf	(lcd_write_data@databyte),w
  7318  0995  0088               	movwf	(8)	;volatile
  7319                           	line	25
  7320                           	
  7321  0996                     l11290:	
  7322                           ;lcd.c: 25: RE2 = 1;
  7323  0996  1509               	bsf	(74/8),(74)&7
  7324                           	line	26
  7325                           	
  7326  0997                     l11292:	
  7327                           ;lcd.c: 26: RE2 = 0;
  7328  0997  1109               	bcf	(74/8),(74)&7
  7329                           	line	27
  7330                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
  7331                           	opt asmopt_off
  7332  0998  3007               movlw	7
  7333  0999  00AB               movwf	((??_lcd_write_data+0)+0+1),f
  7334  099A  307D               	movlw	125
  7335  099B  00AA               movwf	((??_lcd_write_data+0)+0),f
  7336  099C                     u5147:
  7337  099C  0BAA               	decfsz	((??_lcd_write_data+0)+0),f
  7338  099D  299C               	goto	u5147
  7339  099E  0BAB               	decfsz	((??_lcd_write_data+0)+0+1),f
  7340  099F  299C               	goto	u5147
  7341                           opt asmopt_on
  7342                           
  7343                           	line	28
  7344                           	
  7345  09A0                     l2890:	
  7346  09A0  0008               	return
  7347                           	opt stack 0
  7348                           GLOBAL	__end_of_lcd_write_data
  7349  09A1                     	__end_of_lcd_write_data:
  7350 ;; =============== function _lcd_write_data ends ============
  7351                           
  7352                           	signat	_lcd_write_data,4216
  7353                           	global	_drive
  7354                           psect	text1657,local,class=CODE,delta=2
  7355                           global __ptext1657
  7356  0CD9                     __ptext1657:
  7357                           
  7358 ;; *************** function _drive *****************
  7359 ;; Defined at:
  7360 ;;		line 20 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\driv
       e.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  highByteSpee    1    wreg     unsigned char 
  7363 ;;  lowByteSpeed    1   12[BANK0 ] unsigned char 
  7364 ;;  highByteRadi    1   13[BANK0 ] unsigned char 
  7365 ;;  lowByteRadiu    1   14[BANK0 ] unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  highByteSpee    1   18[BANK0 ] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;		None               void
  7370 ;; Registers used:
  7371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7377 ;;      Params:         0       3       0       0       0
  7378 ;;      Locals:         0       1       0       0       0
  7379 ;;      Temps:          0       3       0       0       0
  7380 ;;      Totals:         0       7       0       0       0
  7381 ;;Total ram usage:        7 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    3
  7384 ;; This function calls:
  7385 ;;		_ser_putch
  7386 ;; This function is called by:
  7387 ;;		_driveForDistance
  7388 ;;		_goReverse
  7389 ;;		_turnAround
  7390 ;;		_turnLeft90
  7391 ;;		_turnRight90
  7392 ;;		_rightWallCorrect
  7393 ;;		_frontWallCorrect
  7394 ;;		_checkIfHome
  7395 ;;		_main
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           psect	text1657
  7399                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  7400                           	line	20
  7401                           	global	__size_of_drive
  7402  0037                     	__size_of_drive	equ	__end_of_drive-_drive
  7403                           	
  7404  0CD9                     _drive:	
  7405                           	opt	stack 3
  7406                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7407                           ;drive@highByteSpeed stored from wreg
  7408  0CD9  1283               	bcf	status, 5	;RP0=0, select bank0
  7409  0CDA  1303               	bcf	status, 6	;RP1=0, select bank0
  7410  0CDB  00B2               	movwf	(drive@highByteSpeed)
  7411                           	line	21
  7412                           	
  7413  0CDC                     l11274:	
  7414                           ;drive.c: 21: _delay((unsigned long)((100)*(20000000/4000.0)));
  7415                           	opt asmopt_off
  7416  0CDC  3003               movlw  3
  7417  0CDD  00B1               movwf	((??_drive+0)+0+2),f
  7418  0CDE  308A               movlw	138
  7419  0CDF  00B0               movwf	((??_drive+0)+0+1),f
  7420  0CE0  3056               	movlw	86
  7421  0CE1  00AF               movwf	((??_drive+0)+0),f
  7422  0CE2                     u5157:
  7423  0CE2  0BAF               	decfsz	((??_drive+0)+0),f
  7424  0CE3  2CE2               	goto	u5157
  7425  0CE4  0BB0               	decfsz	((??_drive+0)+0+1),f
  7426  0CE5  2CE2               	goto	u5157
  7427  0CE6  0BB1               	decfsz	((??_drive+0)+0+2),f
  7428  0CE7  2CE2               	goto	u5157
  7429  0CE8  2CE9               	nop2
  7430                           opt asmopt_on
  7431                           
  7432                           	line	22
  7433                           	
  7434  0CE9                     l11276:	
  7435                           ;drive.c: 22: ser_putch(137);
  7436  0CE9  3089               	movlw	(089h)
  7437  0CEA  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7438                           	line	23
  7439                           	
  7440  0CEF                     l11278:	
  7441                           ;drive.c: 23: ser_putch(highByteSpeed);
  7442  0CEF  1283               	bcf	status, 5	;RP0=0, select bank0
  7443  0CF0  1303               	bcf	status, 6	;RP1=0, select bank0
  7444  0CF1  0832               	movf	(drive@highByteSpeed),w
  7445  0CF2  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7446                           	line	24
  7447                           	
  7448  0CF7                     l11280:	
  7449                           ;drive.c: 24: ser_putch(lowByteSpeed);
  7450  0CF7  1283               	bcf	status, 5	;RP0=0, select bank0
  7451  0CF8  1303               	bcf	status, 6	;RP1=0, select bank0
  7452  0CF9  082C               	movf	(drive@lowByteSpeed),w
  7453  0CFA  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7454                           	line	25
  7455                           	
  7456  0CFF                     l11282:	
  7457                           ;drive.c: 25: ser_putch(highByteRadius);
  7458  0CFF  1283               	bcf	status, 5	;RP0=0, select bank0
  7459  0D00  1303               	bcf	status, 6	;RP1=0, select bank0
  7460  0D01  082D               	movf	(drive@highByteRadius),w
  7461  0D02  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7462                           	line	26
  7463                           	
  7464  0D07                     l11284:	
  7465                           ;drive.c: 26: ser_putch(lowByteRadius);
  7466  0D07  1283               	bcf	status, 5	;RP0=0, select bank0
  7467  0D08  1303               	bcf	status, 6	;RP1=0, select bank0
  7468  0D09  082E               	movf	(drive@lowByteRadius),w
  7469  0D0A  120A  158A  2268   	fcall	_ser_putch
              120A  158A         
  7470                           	line	27
  7471                           	
  7472  0D0F                     l2129:	
  7473  0D0F  0008               	return
  7474                           	opt stack 0
  7475                           GLOBAL	__end_of_drive
  7476  0D10                     	__end_of_drive:
  7477 ;; =============== function _drive ends ============
  7478                           
  7479                           	signat	_drive,16504
  7480                           	global	_init_adc
  7481                           psect	text1658,local,class=CODE,delta=2
  7482                           global __ptext1658
  7483  09C8                     __ptext1658:
  7484                           
  7485 ;; *************** function _init_adc *****************
  7486 ;; Defined at:
  7487 ;;		line 48 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;		None
  7492 ;; Return value:  Size  Location     Type
  7493 ;;		None               void
  7494 ;; Registers used:
  7495 ;;		wreg, status,2
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7501 ;;      Params:         0       0       0       0       0
  7502 ;;      Locals:         0       0       0       0       0
  7503 ;;      Temps:          0       1       0       0       0
  7504 ;;      Totals:         0       1       0       0       0
  7505 ;;Total ram usage:        1 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    2
  7508 ;; This function calls:
  7509 ;;		Nothing
  7510 ;; This function is called by:
  7511 ;;		_init
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           psect	text1658
  7515                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7516                           	line	48
  7517                           	global	__size_of_init_adc
  7518  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  7519                           	
  7520  09C8                     _init_adc:	
  7521                           	opt	stack 4
  7522                           ; Regs used in _init_adc: [wreg+status,2]
  7523                           	line	50
  7524                           	
  7525  09C8                     l11264:	
  7526                           ;adc.c: 50: PORTA = 0;
  7527  09C8  1283               	bcf	status, 5	;RP0=0, select bank0
  7528  09C9  1303               	bcf	status, 6	;RP1=0, select bank0
  7529  09CA  0185               	clrf	(5)	;volatile
  7530                           	line	51
  7531                           	
  7532  09CB                     l11266:	
  7533                           ;adc.c: 51: TRISA = 0b00111111;
  7534  09CB  303F               	movlw	(03Fh)
  7535  09CC  1683               	bsf	status, 5	;RP0=1, select bank1
  7536  09CD  1303               	bcf	status, 6	;RP1=0, select bank1
  7537  09CE  0085               	movwf	(133)^080h	;volatile
  7538                           	line	54
  7539                           	
  7540  09CF                     l11268:	
  7541                           ;adc.c: 54: ADCON0 = 0b10100001;
  7542  09CF  30A1               	movlw	(0A1h)
  7543  09D0  1283               	bcf	status, 5	;RP0=0, select bank0
  7544  09D1  1303               	bcf	status, 6	;RP1=0, select bank0
  7545  09D2  009F               	movwf	(31)	;volatile
  7546                           	line	55
  7547                           	
  7548  09D3                     l11270:	
  7549                           ;adc.c: 55: ADCON1 = 0b00000010;
  7550  09D3  3002               	movlw	(02h)
  7551  09D4  1683               	bsf	status, 5	;RP0=1, select bank1
  7552  09D5  1303               	bcf	status, 6	;RP1=0, select bank1
  7553  09D6  009F               	movwf	(159)^080h	;volatile
  7554                           	line	57
  7555                           	
  7556  09D7                     l11272:	
  7557                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7558                           	opt asmopt_off
  7559  09D7  3053               movlw	83
  7560  09D8  1283               	bcf	status, 5	;RP0=0, select bank0
  7561  09D9  1303               	bcf	status, 6	;RP1=0, select bank0
  7562  09DA  00AA               movwf	(??_init_adc+0)+0,f
  7563  09DB                     u5167:
  7564  09DB  0BAA               decfsz	(??_init_adc+0)+0,f
  7565  09DC  29DB               	goto	u5167
  7566                           opt asmopt_on
  7567                           
  7568                           	line	58
  7569                           	
  7570  09DD                     l1400:	
  7571  09DD  0008               	return
  7572                           	opt stack 0
  7573                           GLOBAL	__end_of_init_adc
  7574  09DE                     	__end_of_init_adc:
  7575 ;; =============== function _init_adc ends ============
  7576                           
  7577                           	signat	_init_adc,88
  7578                           	global	_adc_read
  7579                           psect	text1659,local,class=CODE,delta=2
  7580                           global __ptext1659
  7581  0E71                     __ptext1659:
  7582                           
  7583 ;; *************** function _adc_read *****************
  7584 ;; Defined at:
  7585 ;;		line 62 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;		None
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  adc_value       2   31[BANK0 ] volatile int 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2   25[BANK0 ] int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7599 ;;      Params:         0       2       0       0       0
  7600 ;;      Locals:         0       2       0       0       0
  7601 ;;      Temps:          0       4       0       0       0
  7602 ;;      Totals:         0       8       0       0       0
  7603 ;;Total ram usage:        8 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    3
  7606 ;; This function calls:
  7607 ;;		___awdiv
  7608 ;; This function is called by:
  7609 ;;		_adc_read_channel
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           psect	text1659
  7613                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7614                           	line	62
  7615                           	global	__size_of_adc_read
  7616  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7617                           	
  7618  0E71                     _adc_read:	
  7619                           	opt	stack 0
  7620                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7621                           	line	65
  7622                           	
  7623  0E71                     l11254:	
  7624                           ;adc.c: 63: volatile int adc_value;
  7625                           ;adc.c: 65: ADRESH = 0;
  7626  0E71  1283               	bcf	status, 5	;RP0=0, select bank0
  7627  0E72  1303               	bcf	status, 6	;RP1=0, select bank0
  7628  0E73  019E               	clrf	(30)	;volatile
  7629                           	line	66
  7630                           ;adc.c: 66: ADRESL = 0;
  7631  0E74  1683               	bsf	status, 5	;RP0=1, select bank1
  7632  0E75  1303               	bcf	status, 6	;RP1=0, select bank1
  7633  0E76  019E               	clrf	(158)^080h	;volatile
  7634                           	line	68
  7635                           	
  7636  0E77                     l11256:	
  7637                           ;adc.c: 68: GO = 1;
  7638  0E77  1283               	bcf	status, 5	;RP0=0, select bank0
  7639  0E78  1303               	bcf	status, 6	;RP1=0, select bank0
  7640  0E79  151F               	bsf	(250/8),(250)&7
  7641                           	line	69
  7642                           ;adc.c: 69: while(GO) continue;
  7643  0E7A  2E7B               	goto	l1403
  7644                           	
  7645  0E7B                     l1404:	
  7646                           	
  7647  0E7B                     l1403:	
  7648  0E7B  191F               	btfsc	(250/8),(250)&7
  7649  0E7C  2E7E               	goto	u4491
  7650  0E7D  2E7F               	goto	u4490
  7651  0E7E                     u4491:
  7652  0E7E  2E7B               	goto	l1403
  7653  0E7F                     u4490:
  7654  0E7F  2E80               	goto	l11258
  7655                           	
  7656  0E80                     l1405:	
  7657                           	line	75
  7658                           	
  7659  0E80                     l11258:	
  7660                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
  7661  0E80  3040               	movlw	low(040h)
  7662  0E81  00B0               	movwf	(?___awdiv)
  7663  0E82  3000               	movlw	high(040h)
  7664  0E83  00B1               	movwf	((?___awdiv))+1
  7665  0E84  1683               	bsf	status, 5	;RP0=1, select bank1
  7666  0E85  1303               	bcf	status, 6	;RP1=0, select bank1
  7667  0E86  081E               	movf	(158)^080h,w	;volatile
  7668  0E87  1283               	bcf	status, 5	;RP0=0, select bank0
  7669  0E88  1303               	bcf	status, 6	;RP1=0, select bank0
  7670  0E89  00BB               	movwf	(??_adc_read+0)+0
  7671  0E8A  01BC               	clrf	(??_adc_read+0)+0+1
  7672  0E8B  083B               	movf	0+(??_adc_read+0)+0,w
  7673  0E8C  00B2               	movwf	0+(?___awdiv)+02h
  7674  0E8D  083C               	movf	1+(??_adc_read+0)+0,w
  7675  0E8E  00B3               	movwf	1+(?___awdiv)+02h
  7676  0E8F  120A  118A  2659   	fcall	___awdiv
              120A  158A         
  7677  0E94  1283               	bcf	status, 5	;RP0=0, select bank0
  7678  0E95  1303               	bcf	status, 6	;RP1=0, select bank0
  7679  0E96  081E               	movf	(30),w	;volatile
  7680  0E97  00BD               	movwf	(??_adc_read+2)+0
  7681  0E98  01BE               	clrf	(??_adc_read+2)+0+1
  7682  0E99  3002               	movlw	02h
  7683  0E9A  00FF               	movwf	btemp+1
  7684  0E9B                     u4505:
  7685  0E9B  1003               	clrc
  7686  0E9C  0DBD               	rlf	(??_adc_read+2)+0,f
  7687  0E9D  0DBE               	rlf	(??_adc_read+2)+1,f
  7688  0E9E  0BFF               	decfsz	btemp+1,f
  7689  0E9F  2E9B               	goto	u4505
  7690  0EA0  0830               	movf	(0+(?___awdiv)),w
  7691  0EA1  073D               	addwf	0+(??_adc_read+2)+0,w
  7692  0EA2  00BF               	movwf	(adc_read@adc_value)	;volatile
  7693  0EA3  0831               	movf	(1+(?___awdiv)),w
  7694  0EA4  1803               	skipnc
  7695  0EA5  0A31               	incf	(1+(?___awdiv)),w
  7696  0EA6  073E               	addwf	1+(??_adc_read+2)+0,w
  7697  0EA7  00C0               	movwf	1+(adc_read@adc_value)	;volatile
  7698                           	line	77
  7699                           	
  7700  0EA8                     l11260:	
  7701                           ;adc.c: 77: return (adc_value);
  7702  0EA8  0840               	movf	(adc_read@adc_value+1),w	;volatile
  7703  0EA9  01BA               	clrf	(?_adc_read+1)
  7704  0EAA  07BA               	addwf	(?_adc_read+1)
  7705  0EAB  083F               	movf	(adc_read@adc_value),w	;volatile
  7706  0EAC  01B9               	clrf	(?_adc_read)
  7707  0EAD  07B9               	addwf	(?_adc_read)
  7708                           
  7709  0EAE  2EAF               	goto	l1406
  7710                           	
  7711  0EAF                     l11262:	
  7712                           	line	78
  7713                           	
  7714  0EAF                     l1406:	
  7715  0EAF  0008               	return
  7716                           	opt stack 0
  7717                           GLOBAL	__end_of_adc_read
  7718  0EB0                     	__end_of_adc_read:
  7719 ;; =============== function _adc_read ends ============
  7720                           
  7721                           	signat	_adc_read,90
  7722                           	global	_ser_getch
  7723                           psect	text1660,local,class=CODE,delta=2
  7724                           global __ptext1660
  7725  0A89                     __ptext1660:
  7726                           
  7727 ;; *************** function _ser_getch *****************
  7728 ;; Defined at:
  7729 ;;		line 58 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  c               1   11[BANK0 ] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      unsigned char 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7743 ;;      Params:         0       0       0       0       0
  7744 ;;      Locals:         0       1       0       0       0
  7745 ;;      Temps:          0       1       0       0       0
  7746 ;;      Totals:         0       2       0       0       0
  7747 ;;Total ram usage:        2 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    3
  7750 ;; This function calls:
  7751 ;;		_ser_isrx
  7752 ;; This function is called by:
  7753 ;;		_detectCliff
  7754 ;;		_driveForDistance
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           psect	text1660
  7758                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  7759                           	line	58
  7760                           	global	__size_of_ser_getch
  7761  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  7762                           	
  7763  0A89                     _ser_getch:	
  7764                           	opt	stack 0
  7765                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7766                           	line	61
  7767                           	
  7768  0A89                     l11238:	
  7769                           ;ser.c: 59: unsigned char c;
  7770                           ;ser.c: 61: while (ser_isrx()==0)
  7771  0A89  2A8B               	goto	l11240
  7772                           	
  7773  0A8A                     l5270:	
  7774                           	line	62
  7775                           ;ser.c: 62: continue;
  7776  0A8A  2A8B               	goto	l11240
  7777                           	
  7778  0A8B                     l5269:	
  7779                           	line	61
  7780                           	
  7781  0A8B                     l11240:	
  7782  0A8B  120A  158A  21DE   	fcall	_ser_isrx
              120A  158A         
  7783  0A90  1C03               	btfss	status,0
  7784  0A91  2A93               	goto	u4481
  7785  0A92  2A94               	goto	u4480
  7786  0A93                     u4481:
  7787  0A93  2A8B               	goto	l11240
  7788  0A94                     u4480:
  7789                           	
  7790  0A94                     l5271:	
  7791                           	line	64
  7792                           ;ser.c: 64: GIE=0;
  7793  0A94  138B               	bcf	(95/8),(95)&7
  7794                           	line	65
  7795                           	
  7796  0A95                     l11242:	
  7797                           ;ser.c: 65: c=rxfifo[rxoptr];
  7798  0A95  1283               	bcf	status, 5	;RP0=0, select bank0
  7799  0A96  1303               	bcf	status, 6	;RP1=0, select bank0
  7800  0A97  085F               	movf	(_rxoptr),w
  7801  0A98  3E45               	addlw	_rxfifo&0ffh
  7802  0A99  0084               	movwf	fsr0
  7803  0A9A  1383               	bcf	status, 7	;select IRP bank0
  7804  0A9B  0800               	movf	indf,w
  7805  0A9C  00AA               	movwf	(??_ser_getch+0)+0
  7806  0A9D  082A               	movf	(??_ser_getch+0)+0,w
  7807  0A9E  00AB               	movwf	(ser_getch@c)
  7808                           	line	66
  7809                           	
  7810  0A9F                     l11244:	
  7811                           ;ser.c: 66: ++rxoptr;
  7812  0A9F  3001               	movlw	(01h)
  7813  0AA0  00AA               	movwf	(??_ser_getch+0)+0
  7814  0AA1  082A               	movf	(??_ser_getch+0)+0,w
  7815  0AA2  07DF               	addwf	(_rxoptr),f	;volatile
  7816                           	line	67
  7817                           	
  7818  0AA3                     l11246:	
  7819                           ;ser.c: 67: rxoptr &= (16-1);
  7820  0AA3  300F               	movlw	(0Fh)
  7821  0AA4  00AA               	movwf	(??_ser_getch+0)+0
  7822  0AA5  082A               	movf	(??_ser_getch+0)+0,w
  7823  0AA6  05DF               	andwf	(_rxoptr),f	;volatile
  7824                           	line	68
  7825                           	
  7826  0AA7                     l11248:	
  7827                           ;ser.c: 68: GIE=1;
  7828  0AA7  178B               	bsf	(95/8),(95)&7
  7829                           	line	69
  7830                           	
  7831  0AA8                     l11250:	
  7832                           ;ser.c: 69: return c;
  7833  0AA8  082B               	movf	(ser_getch@c),w
  7834  0AA9  2AAA               	goto	l5272
  7835                           	
  7836  0AAA                     l11252:	
  7837                           	line	70
  7838                           	
  7839  0AAA                     l5272:	
  7840  0AAA  0008               	return
  7841                           	opt stack 0
  7842                           GLOBAL	__end_of_ser_getch
  7843  0AAB                     	__end_of_ser_getch:
  7844 ;; =============== function _ser_getch ends ============
  7845                           
  7846                           	signat	_ser_getch,89
  7847                           	global	___awdiv
  7848                           psect	text1661,local,class=CODE,delta=2
  7849                           global __ptext1661
  7850  0659                     __ptext1661:
  7851                           
  7852 ;; *************** function ___awdiv *****************
  7853 ;; Defined at:
  7854 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  divisor         2   16[BANK0 ] int 
  7857 ;;  dividend        2   18[BANK0 ] int 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  quotient        2   23[BANK0 ] int 
  7860 ;;  sign            1   22[BANK0 ] unsigned char 
  7861 ;;  counter         1   21[BANK0 ] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  2   16[BANK0 ] int 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7871 ;;      Params:         0       4       0       0       0
  7872 ;;      Locals:         0       4       0       0       0
  7873 ;;      Temps:          0       1       0       0       0
  7874 ;;      Totals:         0       9       0       0       0
  7875 ;;Total ram usage:        9 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    2
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_adc_read
  7882 ;;		_convert
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           psect	text1661
  7886                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  7887                           	line	5
  7888                           	global	__size_of___awdiv
  7889  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  7890                           	
  7891  0659                     ___awdiv:	
  7892                           	opt	stack 1
  7893                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7894                           	line	9
  7895                           	
  7896  0659                     l11198:	
  7897  0659  1283               	bcf	status, 5	;RP0=0, select bank0
  7898  065A  1303               	bcf	status, 6	;RP1=0, select bank0
  7899  065B  01B6               	clrf	(___awdiv@sign)
  7900                           	line	10
  7901  065C  1FB1               	btfss	(___awdiv@divisor+1),7
  7902  065D  2E5F               	goto	u4381
  7903  065E  2E60               	goto	u4380
  7904  065F                     u4381:
  7905  065F  2E69               	goto	l11202
  7906  0660                     u4380:
  7907                           	line	11
  7908                           	
  7909  0660                     l11200:	
  7910  0660  09B0               	comf	(___awdiv@divisor),f
  7911  0661  09B1               	comf	(___awdiv@divisor+1),f
  7912  0662  0AB0               	incf	(___awdiv@divisor),f
  7913  0663  1903               	skipnz
  7914  0664  0AB1               	incf	(___awdiv@divisor+1),f
  7915                           	line	12
  7916  0665  01B6               	clrf	(___awdiv@sign)
  7917  0666  1403               	bsf	status,0
  7918  0667  0DB6               	rlf	(___awdiv@sign),f
  7919  0668  2E69               	goto	l11202
  7920                           	line	13
  7921                           	
  7922  0669                     l7548:	
  7923                           	line	14
  7924                           	
  7925  0669                     l11202:	
  7926  0669  1FB3               	btfss	(___awdiv@dividend+1),7
  7927  066A  2E6C               	goto	u4391
  7928  066B  2E6D               	goto	u4390
  7929  066C                     u4391:
  7930  066C  2E77               	goto	l11208
  7931  066D                     u4390:
  7932                           	line	15
  7933                           	
  7934  066D                     l11204:	
  7935  066D  09B2               	comf	(___awdiv@dividend),f
  7936  066E  09B3               	comf	(___awdiv@dividend+1),f
  7937  066F  0AB2               	incf	(___awdiv@dividend),f
  7938  0670  1903               	skipnz
  7939  0671  0AB3               	incf	(___awdiv@dividend+1),f
  7940                           	line	16
  7941                           	
  7942  0672                     l11206:	
  7943  0672  3001               	movlw	(01h)
  7944  0673  00B4               	movwf	(??___awdiv+0)+0
  7945  0674  0834               	movf	(??___awdiv+0)+0,w
  7946  0675  06B6               	xorwf	(___awdiv@sign),f
  7947  0676  2E77               	goto	l11208
  7948                           	line	17
  7949                           	
  7950  0677                     l7549:	
  7951                           	line	18
  7952                           	
  7953  0677                     l11208:	
  7954  0677  01B7               	clrf	(___awdiv@quotient)
  7955  0678  01B8               	clrf	(___awdiv@quotient+1)
  7956                           	line	19
  7957                           	
  7958  0679                     l11210:	
  7959  0679  0831               	movf	(___awdiv@divisor+1),w
  7960  067A  0430               	iorwf	(___awdiv@divisor),w
  7961  067B  1903               	skipnz
  7962  067C  2E7E               	goto	u4401
  7963  067D  2E7F               	goto	u4400
  7964  067E                     u4401:
  7965  067E  2EBD               	goto	l11230
  7966  067F                     u4400:
  7967                           	line	20
  7968                           	
  7969  067F                     l11212:	
  7970  067F  01B5               	clrf	(___awdiv@counter)
  7971  0680  1403               	bsf	status,0
  7972  0681  0DB5               	rlf	(___awdiv@counter),f
  7973                           	line	21
  7974  0682  2E8F               	goto	l11218
  7975                           	
  7976  0683                     l7552:	
  7977                           	line	22
  7978                           	
  7979  0683                     l11214:	
  7980  0683  3001               	movlw	01h
  7981                           	
  7982  0684                     u4415:
  7983  0684  1003               	clrc
  7984  0685  0DB0               	rlf	(___awdiv@divisor),f
  7985  0686  0DB1               	rlf	(___awdiv@divisor+1),f
  7986  0687  3EFF               	addlw	-1
  7987  0688  1D03               	skipz
  7988  0689  2E84               	goto	u4415
  7989                           	line	23
  7990                           	
  7991  068A                     l11216:	
  7992  068A  3001               	movlw	(01h)
  7993  068B  00B4               	movwf	(??___awdiv+0)+0
  7994  068C  0834               	movf	(??___awdiv+0)+0,w
  7995  068D  07B5               	addwf	(___awdiv@counter),f
  7996  068E  2E8F               	goto	l11218
  7997                           	line	24
  7998                           	
  7999  068F                     l7551:	
  8000                           	line	21
  8001                           	
  8002  068F                     l11218:	
  8003  068F  1FB1               	btfss	(___awdiv@divisor+1),(15)&7
  8004  0690  2E92               	goto	u4421
  8005  0691  2E93               	goto	u4420
  8006  0692                     u4421:
  8007  0692  2E83               	goto	l11214
  8008  0693                     u4420:
  8009  0693  2E95               	goto	l11220
  8010                           	
  8011  0694                     l7553:	
  8012  0694  2E95               	goto	l11220
  8013                           	line	25
  8014                           	
  8015  0695                     l7554:	
  8016                           	line	26
  8017                           	
  8018  0695                     l11220:	
  8019  0695  3001               	movlw	01h
  8020                           	
  8021  0696                     u4435:
  8022  0696  1003               	clrc
  8023  0697  0DB7               	rlf	(___awdiv@quotient),f
  8024  0698  0DB8               	rlf	(___awdiv@quotient+1),f
  8025  0699  3EFF               	addlw	-1
  8026  069A  1D03               	skipz
  8027  069B  2E96               	goto	u4435
  8028                           	line	27
  8029  069C  0831               	movf	(___awdiv@divisor+1),w
  8030  069D  0233               	subwf	(___awdiv@dividend+1),w
  8031  069E  1D03               	skipz
  8032  069F  2EA2               	goto	u4445
  8033  06A0  0830               	movf	(___awdiv@divisor),w
  8034  06A1  0232               	subwf	(___awdiv@dividend),w
  8035  06A2                     u4445:
  8036  06A2  1C03               	skipc
  8037  06A3  2EA5               	goto	u4441
  8038  06A4  2EA6               	goto	u4440
  8039  06A5                     u4441:
  8040  06A5  2EAE               	goto	l11226
  8041  06A6                     u4440:
  8042                           	line	28
  8043                           	
  8044  06A6                     l11222:	
  8045  06A6  0830               	movf	(___awdiv@divisor),w
  8046  06A7  02B2               	subwf	(___awdiv@dividend),f
  8047  06A8  0831               	movf	(___awdiv@divisor+1),w
  8048  06A9  1C03               	skipc
  8049  06AA  03B3               	decf	(___awdiv@dividend+1),f
  8050  06AB  02B3               	subwf	(___awdiv@dividend+1),f
  8051                           	line	29
  8052                           	
  8053  06AC                     l11224:	
  8054  06AC  1437               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  8055  06AD  2EAE               	goto	l11226
  8056                           	line	30
  8057                           	
  8058  06AE                     l7555:	
  8059                           	line	31
  8060                           	
  8061  06AE                     l11226:	
  8062  06AE  3001               	movlw	01h
  8063                           	
  8064  06AF                     u4455:
  8065  06AF  1003               	clrc
  8066  06B0  0CB1               	rrf	(___awdiv@divisor+1),f
  8067  06B1  0CB0               	rrf	(___awdiv@divisor),f
  8068  06B2  3EFF               	addlw	-1
  8069  06B3  1D03               	skipz
  8070  06B4  2EAF               	goto	u4455
  8071                           	line	32
  8072                           	
  8073  06B5                     l11228:	
  8074  06B5  3001               	movlw	low(01h)
  8075  06B6  02B5               	subwf	(___awdiv@counter),f
  8076  06B7  1D03               	btfss	status,2
  8077  06B8  2EBA               	goto	u4461
  8078  06B9  2EBB               	goto	u4460
  8079  06BA                     u4461:
  8080  06BA  2E95               	goto	l11220
  8081  06BB                     u4460:
  8082  06BB  2EBD               	goto	l11230
  8083                           	
  8084  06BC                     l7556:	
  8085  06BC  2EBD               	goto	l11230
  8086                           	line	33
  8087                           	
  8088  06BD                     l7550:	
  8089                           	line	34
  8090                           	
  8091  06BD                     l11230:	
  8092  06BD  0836               	movf	(___awdiv@sign),w
  8093  06BE  1D03               	skipz
  8094  06BF  2EC1               	goto	u4470
  8095  06C0  2EC7               	goto	l11234
  8096  06C1                     u4470:
  8097                           	line	35
  8098                           	
  8099  06C1                     l11232:	
  8100  06C1  09B7               	comf	(___awdiv@quotient),f
  8101  06C2  09B8               	comf	(___awdiv@quotient+1),f
  8102  06C3  0AB7               	incf	(___awdiv@quotient),f
  8103  06C4  1903               	skipnz
  8104  06C5  0AB8               	incf	(___awdiv@quotient+1),f
  8105  06C6  2EC7               	goto	l11234
  8106                           	
  8107  06C7                     l7557:	
  8108                           	line	36
  8109                           	
  8110  06C7                     l11234:	
  8111  06C7  0838               	movf	(___awdiv@quotient+1),w
  8112  06C8  01B1               	clrf	(?___awdiv+1)
  8113  06C9  07B1               	addwf	(?___awdiv+1)
  8114  06CA  0837               	movf	(___awdiv@quotient),w
  8115  06CB  01B0               	clrf	(?___awdiv)
  8116  06CC  07B0               	addwf	(?___awdiv)
  8117                           
  8118  06CD  2ECE               	goto	l7558
  8119                           	
  8120  06CE                     l11236:	
  8121                           	line	37
  8122                           	
  8123  06CE                     l7558:	
  8124  06CE  0008               	return
  8125                           	opt stack 0
  8126                           GLOBAL	__end_of___awdiv
  8127  06CF                     	__end_of___awdiv:
  8128 ;; =============== function ___awdiv ends ============
  8129                           
  8130                           	signat	___awdiv,8314
  8131                           	global	___wmul
  8132                           psect	text1662,local,class=CODE,delta=2
  8133                           global __ptext1662
  8134  0BED                     __ptext1662:
  8135                           
  8136 ;; *************** function ___wmul *****************
  8137 ;; Defined at:
  8138 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\wmul.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  multiplier      2   10[BANK0 ] unsigned int 
  8141 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  product         2   14[BANK0 ] unsigned int 
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  2   10[BANK0 ] unsigned int 
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8153 ;;      Params:         0       4       0       0       0
  8154 ;;      Locals:         0       2       0       0       0
  8155 ;;      Temps:          0       0       0       0       0
  8156 ;;      Totals:         0       6       0       0       0
  8157 ;;Total ram usage:        6 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:    2
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_convert
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           psect	text1662
  8167                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\wmul.c"
  8168                           	line	3
  8169                           	global	__size_of___wmul
  8170  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  8171                           	
  8172  0BED                     ___wmul:	
  8173                           	opt	stack 1
  8174                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8175                           	line	4
  8176                           	
  8177  0BED                     l11186:	
  8178  0BED  1283               	bcf	status, 5	;RP0=0, select bank0
  8179  0BEE  1303               	bcf	status, 6	;RP1=0, select bank0
  8180  0BEF  01AE               	clrf	(___wmul@product)
  8181  0BF0  01AF               	clrf	(___wmul@product+1)
  8182  0BF1  2BF2               	goto	l11188
  8183                           	line	6
  8184                           	
  8185  0BF2                     l7408:	
  8186                           	line	7
  8187                           	
  8188  0BF2                     l11188:	
  8189  0BF2  1C2A               	btfss	(___wmul@multiplier),(0)&7
  8190  0BF3  2BF5               	goto	u4341
  8191  0BF4  2BF6               	goto	u4340
  8192  0BF5                     u4341:
  8193  0BF5  2BFC               	goto	l7409
  8194  0BF6                     u4340:
  8195                           	line	8
  8196                           	
  8197  0BF6                     l11190:	
  8198  0BF6  082C               	movf	(___wmul@multiplicand),w
  8199  0BF7  07AE               	addwf	(___wmul@product),f
  8200  0BF8  1803               	skipnc
  8201  0BF9  0AAF               	incf	(___wmul@product+1),f
  8202  0BFA  082D               	movf	(___wmul@multiplicand+1),w
  8203  0BFB  07AF               	addwf	(___wmul@product+1),f
  8204                           	
  8205  0BFC                     l7409:	
  8206                           	line	9
  8207  0BFC  3001               	movlw	01h
  8208                           	
  8209  0BFD                     u4355:
  8210  0BFD  1003               	clrc
  8211  0BFE  0DAC               	rlf	(___wmul@multiplicand),f
  8212  0BFF  0DAD               	rlf	(___wmul@multiplicand+1),f
  8213  0C00  3EFF               	addlw	-1
  8214  0C01  1D03               	skipz
  8215  0C02  2BFD               	goto	u4355
  8216                           	line	10
  8217                           	
  8218  0C03                     l11192:	
  8219  0C03  3001               	movlw	01h
  8220                           	
  8221  0C04                     u4365:
  8222  0C04  1003               	clrc
  8223  0C05  0CAB               	rrf	(___wmul@multiplier+1),f
  8224  0C06  0CAA               	rrf	(___wmul@multiplier),f
  8225  0C07  3EFF               	addlw	-1
  8226  0C08  1D03               	skipz
  8227  0C09  2C04               	goto	u4365
  8228                           	line	11
  8229  0C0A  082B               	movf	((___wmul@multiplier+1)),w
  8230  0C0B  042A               	iorwf	((___wmul@multiplier)),w
  8231  0C0C  1D03               	skipz
  8232  0C0D  2C0F               	goto	u4371
  8233  0C0E  2C10               	goto	u4370
  8234  0C0F                     u4371:
  8235  0C0F  2BF2               	goto	l11188
  8236  0C10                     u4370:
  8237  0C10  2C11               	goto	l11194
  8238                           	
  8239  0C11                     l7410:	
  8240                           	line	12
  8241                           	
  8242  0C11                     l11194:	
  8243  0C11  082F               	movf	(___wmul@product+1),w
  8244  0C12  01AB               	clrf	(?___wmul+1)
  8245  0C13  07AB               	addwf	(?___wmul+1)
  8246  0C14  082E               	movf	(___wmul@product),w
  8247  0C15  01AA               	clrf	(?___wmul)
  8248  0C16  07AA               	addwf	(?___wmul)
  8249                           
  8250  0C17  2C18               	goto	l7411
  8251                           	
  8252  0C18                     l11196:	
  8253                           	line	13
  8254                           	
  8255  0C18                     l7411:	
  8256  0C18  0008               	return
  8257                           	opt stack 0
  8258                           GLOBAL	__end_of___wmul
  8259  0C19                     	__end_of___wmul:
  8260 ;; =============== function ___wmul ends ============
  8261                           
  8262                           	signat	___wmul,8314
  8263                           	global	_ser_isrx
  8264                           psect	text1663,local,class=CODE,delta=2
  8265                           global __ptext1663
  8266  09DE                     __ptext1663:
  8267                           
  8268 ;; *************** function _ser_isrx *****************
  8269 ;; Defined at:
  8270 ;;		line 48 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;		None               void
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, status,0
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8284 ;;      Params:         0       0       0       0       0
  8285 ;;      Locals:         0       0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0
  8287 ;;      Totals:         0       0       0       0       0
  8288 ;;Total ram usage:        0 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    2
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_ser_getch
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           psect	text1663
  8298                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  8299                           	line	48
  8300                           	global	__size_of_ser_isrx
  8301  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  8302                           	
  8303  09DE                     _ser_isrx:	
  8304                           	opt	stack 0
  8305                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  8306                           	line	49
  8307                           	
  8308  09DE                     l11138:	
  8309                           ;ser.c: 49: if(OERR) {
  8310  09DE  1283               	bcf	status, 5	;RP0=0, select bank0
  8311  09DF  1303               	bcf	status, 6	;RP1=0, select bank0
  8312  09E0  1C98               	btfss	(193/8),(193)&7
  8313  09E1  29E3               	goto	u4271
  8314  09E2  29E4               	goto	u4270
  8315  09E3                     u4271:
  8316  09E3  29E9               	goto	l11146
  8317  09E4                     u4270:
  8318                           	line	50
  8319                           	
  8320  09E4                     l11140:	
  8321                           ;ser.c: 50: CREN = 0;
  8322  09E4  1218               	bcf	(196/8),(196)&7
  8323                           	line	51
  8324                           ;ser.c: 51: CREN = 1;
  8325  09E5  1618               	bsf	(196/8),(196)&7
  8326                           	line	52
  8327                           	
  8328  09E6                     l11142:	
  8329                           ;ser.c: 52: return 0;
  8330  09E6  1003               	clrc
  8331                           	
  8332  09E7  29F4               	goto	l5266
  8333                           	
  8334  09E8                     l11144:	
  8335  09E8  29F4               	goto	l5266
  8336                           	line	53
  8337                           	
  8338  09E9                     l5265:	
  8339                           	line	54
  8340                           	
  8341  09E9                     l11146:	
  8342                           ;ser.c: 53: }
  8343                           ;ser.c: 54: return (rxiptr!=rxoptr);
  8344  09E9  0878               	movf	(_rxiptr),w	;volatile
  8345  09EA  065F               	xorwf	(_rxoptr),w	;volatile
  8346  09EB  1D03               	skipz
  8347  09EC  29EE               	goto	u4281
  8348  09ED  29EF               	goto	u4280
  8349  09EE                     u4281:
  8350  09EE  29F1               	goto	l11150
  8351  09EF                     u4280:
  8352                           	
  8353  09EF                     l11148:	
  8354  09EF  1003               	clrc
  8355                           	
  8356  09F0  29F4               	goto	l5266
  8357                           	
  8358  09F1                     l10878:	
  8359                           	
  8360  09F1                     l11150:	
  8361  09F1  1403               	setc
  8362                           	
  8363  09F2  29F4               	goto	l5266
  8364                           	
  8365  09F3                     l10880:	
  8366  09F3  29F4               	goto	l5266
  8367                           	
  8368  09F4                     l11152:	
  8369                           	line	55
  8370                           	
  8371  09F4                     l5266:	
  8372  09F4  0008               	return
  8373                           	opt stack 0
  8374                           GLOBAL	__end_of_ser_isrx
  8375  09F5                     	__end_of_ser_isrx:
  8376 ;; =============== function _ser_isrx ends ============
  8377                           
  8378                           	signat	_ser_isrx,88
  8379                           	global	_updateNode
  8380                           psect	text1664,local,class=CODE,delta=2
  8381                           global __ptext1664
  8382  0DF5                     __ptext1664:
  8383                           
  8384 ;; *************** function _updateNode *****************
  8385 ;; Defined at:
  8386 ;;		line 233 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\mai
       n.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;		None               void
  8393 ;; Registers used:
  8394 ;;		wreg, status,2, status,0
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8400 ;;      Params:         0       0       0       0       0
  8401 ;;      Locals:         0       0       0       0       0
  8402 ;;      Temps:          0       1       0       0       0
  8403 ;;      Totals:         0       1       0       0       0
  8404 ;;Total ram usage:        1 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    2
  8407 ;; This function calls:
  8408 ;;		Nothing
  8409 ;; This function is called by:
  8410 ;;		_main
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           psect	text1664
  8414                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  8415                           	line	233
  8416                           	global	__size_of_updateNode
  8417  003E                     	__size_of_updateNode	equ	__end_of_updateNode-_updateNode
  8418                           	
  8419  0DF5                     _updateNode:	
  8420                           	opt	stack 5
  8421                           ; Regs used in _updateNode: [wreg+status,2+status,0]
  8422                           	line	234
  8423                           	
  8424  0DF5                     l11036:	
  8425                           ;main.c: 234: if((xCoord == 2) && (yCoord == 2))
  8426  0DF5  087A               	movf	(_xCoord),w	;volatile
  8427  0DF6  3A02               	xorlw	02h
  8428  0DF7  1D03               	skipz
  8429  0DF8  2DFA               	goto	u4181
  8430  0DF9  2DFB               	goto	u4180
  8431  0DFA                     u4181:
  8432  0DFA  2E07               	goto	l11042
  8433  0DFB                     u4180:
  8434                           	
  8435  0DFB                     l11038:	
  8436  0DFB  087B               	movf	(_yCoord),w	;volatile
  8437  0DFC  3A02               	xorlw	02h
  8438  0DFD  1D03               	skipz
  8439  0DFE  2E00               	goto	u4191
  8440  0DFF  2E01               	goto	u4190
  8441  0E00                     u4191:
  8442  0E00  2E07               	goto	l11042
  8443  0E01                     u4190:
  8444                           	line	235
  8445                           	
  8446  0E01                     l11040:	
  8447                           ;main.c: 235: node = 1;
  8448  0E01  1283               	bcf	status, 5	;RP0=0, select bank0
  8449  0E02  1303               	bcf	status, 6	;RP1=0, select bank0
  8450  0E03  01DE               	clrf	(_node)	;volatile
  8451  0E04  1403               	bsf	status,0
  8452  0E05  0DDE               	rlf	(_node),f	;volatile
  8453  0E06  2E32               	goto	l3761
  8454                           	line	236
  8455                           	
  8456  0E07                     l3755:	
  8457                           	
  8458  0E07                     l11042:	
  8459                           ;main.c: 236: else if((xCoord == 4) && (yCoord == 2))
  8460  0E07  087A               	movf	(_xCoord),w	;volatile
  8461  0E08  3A04               	xorlw	04h
  8462  0E09  1D03               	skipz
  8463  0E0A  2E0C               	goto	u4201
  8464  0E0B  2E0D               	goto	u4200
  8465  0E0C                     u4201:
  8466  0E0C  2E1A               	goto	l11048
  8467  0E0D                     u4200:
  8468                           	
  8469  0E0D                     l11044:	
  8470  0E0D  087B               	movf	(_yCoord),w	;volatile
  8471  0E0E  3A02               	xorlw	02h
  8472  0E0F  1D03               	skipz
  8473  0E10  2E12               	goto	u4211
  8474  0E11  2E13               	goto	u4210
  8475  0E12                     u4211:
  8476  0E12  2E1A               	goto	l11048
  8477  0E13                     u4210:
  8478                           	line	237
  8479                           	
  8480  0E13                     l11046:	
  8481                           ;main.c: 237: node = 2;
  8482  0E13  3002               	movlw	(02h)
  8483  0E14  1283               	bcf	status, 5	;RP0=0, select bank0
  8484  0E15  1303               	bcf	status, 6	;RP1=0, select bank0
  8485  0E16  00AA               	movwf	(??_updateNode+0)+0
  8486  0E17  082A               	movf	(??_updateNode+0)+0,w
  8487  0E18  00DE               	movwf	(_node)	;volatile
  8488  0E19  2E32               	goto	l3761
  8489                           	line	238
  8490                           	
  8491  0E1A                     l3757:	
  8492                           	
  8493  0E1A                     l11048:	
  8494                           ;main.c: 238: else if((xCoord == 2) && (yCoord == 0))
  8495  0E1A  087A               	movf	(_xCoord),w	;volatile
  8496  0E1B  3A02               	xorlw	02h
  8497  0E1C  1D03               	skipz
  8498  0E1D  2E1F               	goto	u4221
  8499  0E1E  2E20               	goto	u4220
  8500  0E1F                     u4221:
  8501  0E1F  2E2C               	goto	l3759
  8502  0E20                     u4220:
  8503                           	
  8504  0E20                     l11050:	
  8505  0E20  08FB               	movf	(_yCoord),f
  8506  0E21  1D03               	skipz	;volatile
  8507  0E22  2E24               	goto	u4231
  8508  0E23  2E25               	goto	u4230
  8509  0E24                     u4231:
  8510  0E24  2E2C               	goto	l3759
  8511  0E25                     u4230:
  8512                           	line	239
  8513                           	
  8514  0E25                     l11052:	
  8515                           ;main.c: 239: node = 3;
  8516  0E25  3003               	movlw	(03h)
  8517  0E26  1283               	bcf	status, 5	;RP0=0, select bank0
  8518  0E27  1303               	bcf	status, 6	;RP1=0, select bank0
  8519  0E28  00AA               	movwf	(??_updateNode+0)+0
  8520  0E29  082A               	movf	(??_updateNode+0)+0,w
  8521  0E2A  00DE               	movwf	(_node)	;volatile
  8522  0E2B  2E32               	goto	l3761
  8523                           	line	240
  8524                           	
  8525  0E2C                     l3759:	
  8526                           	line	241
  8527                           ;main.c: 240: else
  8528                           ;main.c: 241: node = 0;
  8529  0E2C  1283               	bcf	status, 5	;RP0=0, select bank0
  8530  0E2D  1303               	bcf	status, 6	;RP1=0, select bank0
  8531  0E2E  01DE               	clrf	(_node)	;volatile
  8532  0E2F  2E32               	goto	l3761
  8533                           	
  8534  0E30                     l3760:	
  8535  0E30  2E32               	goto	l3761
  8536                           	
  8537  0E31                     l3758:	
  8538  0E31  2E32               	goto	l3761
  8539                           	
  8540  0E32                     l3756:	
  8541                           	line	242
  8542                           	
  8543  0E32                     l3761:	
  8544  0E32  0008               	return
  8545                           	opt stack 0
  8546                           GLOBAL	__end_of_updateNode
  8547  0E33                     	__end_of_updateNode:
  8548 ;; =============== function _updateNode ends ============
  8549                           
  8550                           	signat	_updateNode,88
  8551                           	global	_getVictimZone
  8552                           psect	text1665,local,class=CODE,delta=2
  8553                           global __ptext1665
  8554  0560                     __ptext1665:
  8555                           
  8556 ;; *************** function _getVictimZone *****************
  8557 ;; Defined at:
  8558 ;;		line 157 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\map
       .c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  victimX         1    wreg     unsigned char 
  8561 ;;  victimY         1   10[BANK0 ] unsigned char 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  victimX         1   12[BANK0 ] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      unsigned char 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8573 ;;      Params:         0       1       0       0       0
  8574 ;;      Locals:         0       1       0       0       0
  8575 ;;      Temps:          0       1       0       0       0
  8576 ;;      Totals:         0       3       0       0       0
  8577 ;;Total ram usage:        3 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    2
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_lookForVictim
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           psect	text1665
  8587                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\map.c"
  8588                           	line	157
  8589                           	global	__size_of_getVictimZone
  8590  007F                     	__size_of_getVictimZone	equ	__end_of_getVictimZone-_getVictimZone
  8591                           	
  8592  0560                     _getVictimZone:	
  8593                           	opt	stack 4
  8594                           ; Regs used in _getVictimZone: [wreg-fsr0h+status,2+status,0]
  8595                           ;getVictimZone@victimX stored from wreg
  8596  0560  1283               	bcf	status, 5	;RP0=0, select bank0
  8597  0561  1303               	bcf	status, 6	;RP1=0, select bank0
  8598  0562  00AC               	movwf	(getVictimZone@victimX)
  8599                           	line	163
  8600                           	
  8601  0563                     l10988:	
  8602                           ;map.c: 163: switch (victimX)
  8603  0563  2DCB               	goto	l11030
  8604                           	line	165
  8605                           ;map.c: 164: {
  8606                           ;map.c: 165: case 0:
  8607                           	
  8608  0564                     l4533:	
  8609                           	line	166
  8610                           ;map.c: 166: switch (victimY)
  8611  0564  2D71               	goto	l10996
  8612                           	line	168
  8613                           ;map.c: 167: {
  8614                           ;map.c: 168: case 0:
  8615                           	
  8616  0565                     l4535:	
  8617                           	line	169
  8618                           	
  8619  0565                     l10990:	
  8620                           ;map.c: 169: vicZone = 4;
  8621  0565  3004               	movlw	(04h)
  8622  0566  00AB               	movwf	(??_getVictimZone+0)+0
  8623  0567  082B               	movf	(??_getVictimZone+0)+0,w
  8624  0568  00E3               	movwf	(_vicZone)
  8625                           	line	170
  8626                           ;map.c: 170: break;
  8627  0569  2DDC               	goto	l11032
  8628                           	line	171
  8629                           ;map.c: 171: case 1:
  8630                           	
  8631  056A                     l4537:	
  8632                           	line	172
  8633                           	
  8634  056A                     l10992:	
  8635                           ;map.c: 172: vicZone = 4;
  8636  056A  3004               	movlw	(04h)
  8637  056B  00AB               	movwf	(??_getVictimZone+0)+0
  8638  056C  082B               	movf	(??_getVictimZone+0)+0,w
  8639  056D  00E3               	movwf	(_vicZone)
  8640                           	line	173
  8641                           ;map.c: 173: break;
  8642  056E  2DDC               	goto	l11032
  8643                           	line	178
  8644                           ;map.c: 178: default:
  8645                           	
  8646  056F                     l4538:	
  8647                           	line	179
  8648                           ;map.c: 179: break;
  8649  056F  2DDC               	goto	l11032
  8650                           	line	180
  8651                           	
  8652  0570                     l10994:	
  8653                           ;map.c: 180: }
  8654  0570  2DDC               	goto	l11032
  8655                           	line	166
  8656                           	
  8657  0571                     l4534:	
  8658                           	
  8659  0571                     l10996:	
  8660  0571  082A               	movf	(getVictimZone@victimY),w
  8661                           	; Switch size 1, requested type "space"
  8662                           ; Number of cases is 2, Range of values is 0 to 1
  8663                           ; switch strategies available:
  8664                           ; Name         Instructions Cycles
  8665                           ; simple_byte            7     4 (average)
  8666                           ; direct_byte           14     8 (fixed)
  8667                           ; jumptable            260     6 (fixed)
  8668                           ; rangetable             6     6 (fixed)
  8669                           ; spacedrange           10     9 (fixed)
  8670                           ; locatedrange           2     3 (fixed)
  8671                           ;	Chosen strategy is simple_byte
  8672                           
  8673                           	opt asmopt_off
  8674  0572  3A00               	xorlw	0^0	; case 0
  8675  0573  1903               	skipnz
  8676  0574  2D65               	goto	l10990
  8677  0575  3A01               	xorlw	1^0	; case 1
  8678  0576  1903               	skipnz
  8679  0577  2D6A               	goto	l10992
  8680  0578  2DDC               	goto	l11032
  8681                           	opt asmopt_on
  8682                           
  8683                           	line	180
  8684                           	
  8685  0579                     l4536:	
  8686                           	line	181
  8687                           ;map.c: 181: break;
  8688  0579  2DDC               	goto	l11032
  8689                           	line	183
  8690                           ;map.c: 183: case 1:
  8691                           	
  8692  057A                     l4540:	
  8693                           	line	184
  8694                           ;map.c: 184: switch (victimY)
  8695  057A  2D87               	goto	l11004
  8696                           	line	186
  8697                           ;map.c: 185: {
  8698                           ;map.c: 186: case 0:
  8699                           	
  8700  057B                     l4542:	
  8701                           	line	187
  8702                           	
  8703  057B                     l10998:	
  8704                           ;map.c: 187: vicZone = 4;
  8705  057B  3004               	movlw	(04h)
  8706  057C  00AB               	movwf	(??_getVictimZone+0)+0
  8707  057D  082B               	movf	(??_getVictimZone+0)+0,w
  8708  057E  00E3               	movwf	(_vicZone)
  8709                           	line	188
  8710                           ;map.c: 188: break;
  8711  057F  2DDC               	goto	l11032
  8712                           	line	189
  8713                           ;map.c: 189: case 1:
  8714                           	
  8715  0580                     l4544:	
  8716                           	line	190
  8717                           	
  8718  0580                     l11000:	
  8719                           ;map.c: 190: vicZone = 4;
  8720  0580  3004               	movlw	(04h)
  8721  0581  00AB               	movwf	(??_getVictimZone+0)+0
  8722  0582  082B               	movf	(??_getVictimZone+0)+0,w
  8723  0583  00E3               	movwf	(_vicZone)
  8724                           	line	191
  8725                           ;map.c: 191: break;
  8726  0584  2DDC               	goto	l11032
  8727                           	line	196
  8728                           ;map.c: 196: default:
  8729                           	
  8730  0585                     l4545:	
  8731                           	line	197
  8732                           ;map.c: 197: break;
  8733  0585  2DDC               	goto	l11032
  8734                           	line	198
  8735                           	
  8736  0586                     l11002:	
  8737                           ;map.c: 198: }
  8738  0586  2DDC               	goto	l11032
  8739                           	line	184
  8740                           	
  8741  0587                     l4541:	
  8742                           	
  8743  0587                     l11004:	
  8744  0587  082A               	movf	(getVictimZone@victimY),w
  8745                           	; Switch size 1, requested type "space"
  8746                           ; Number of cases is 2, Range of values is 0 to 1
  8747                           ; switch strategies available:
  8748                           ; Name         Instructions Cycles
  8749                           ; simple_byte            7     4 (average)
  8750                           ; direct_byte           14     8 (fixed)
  8751                           ; jumptable            260     6 (fixed)
  8752                           ; rangetable             6     6 (fixed)
  8753                           ; spacedrange           10     9 (fixed)
  8754                           ; locatedrange           2     3 (fixed)
  8755                           ;	Chosen strategy is simple_byte
  8756                           
  8757                           	opt asmopt_off
  8758  0588  3A00               	xorlw	0^0	; case 0
  8759  0589  1903               	skipnz
  8760  058A  2D7B               	goto	l10998
  8761  058B  3A01               	xorlw	1^0	; case 1
  8762  058C  1903               	skipnz
  8763  058D  2D80               	goto	l11000
  8764  058E  2DDC               	goto	l11032
  8765                           	opt asmopt_on
  8766                           
  8767                           	line	198
  8768                           	
  8769  058F                     l4543:	
  8770                           	line	199
  8771                           ;map.c: 199: break;
  8772  058F  2DDC               	goto	l11032
  8773                           	line	201
  8774                           ;map.c: 201: case 2:
  8775                           	
  8776  0590                     l4546:	
  8777                           	line	202
  8778                           ;map.c: 202: switch (victimY)
  8779  0590  2D9C               	goto	l11012
  8780                           	line	206
  8781                           ;map.c: 203: {
  8782                           ;map.c: 206: case 1:
  8783                           	
  8784  0591                     l4548:	
  8785                           	line	207
  8786                           	
  8787  0591                     l11006:	
  8788                           ;map.c: 207: vicZone = 3;
  8789  0591  3003               	movlw	(03h)
  8790  0592  00AB               	movwf	(??_getVictimZone+0)+0
  8791  0593  082B               	movf	(??_getVictimZone+0)+0,w
  8792  0594  00E3               	movwf	(_vicZone)
  8793                           	line	208
  8794                           ;map.c: 208: break;
  8795  0595  2DDC               	goto	l11032
  8796                           	line	211
  8797                           ;map.c: 211: case 3:
  8798                           	
  8799  0596                     l4550:	
  8800                           	line	212
  8801                           	
  8802  0596                     l11008:	
  8803                           ;map.c: 212: vicZone = 1;
  8804  0596  01E3               	clrf	(_vicZone)
  8805  0597  1403               	bsf	status,0
  8806  0598  0DE3               	rlf	(_vicZone),f
  8807                           	line	213
  8808                           ;map.c: 213: break;
  8809  0599  2DDC               	goto	l11032
  8810                           	line	214
  8811                           ;map.c: 214: default:
  8812                           	
  8813  059A                     l4551:	
  8814                           	line	215
  8815                           ;map.c: 215: break;
  8816  059A  2DDC               	goto	l11032
  8817                           	line	216
  8818                           	
  8819  059B                     l11010:	
  8820                           ;map.c: 216: }
  8821  059B  2DDC               	goto	l11032
  8822                           	line	202
  8823                           	
  8824  059C                     l4547:	
  8825                           	
  8826  059C                     l11012:	
  8827  059C  082A               	movf	(getVictimZone@victimY),w
  8828                           	; Switch size 1, requested type "space"
  8829                           ; Number of cases is 2, Range of values is 1 to 3
  8830                           ; switch strategies available:
  8831                           ; Name         Instructions Cycles
  8832                           ; simple_byte            7     4 (average)
  8833                           ; direct_byte           20    11 (fixed)
  8834                           ; jumptable            263     9 (fixed)
  8835                           ;	Chosen strategy is simple_byte
  8836                           
  8837                           	opt asmopt_off
  8838  059D  3A01               	xorlw	1^0	; case 1
  8839  059E  1903               	skipnz
  8840  059F  2D91               	goto	l11006
  8841  05A0  3A02               	xorlw	3^1	; case 3
  8842  05A1  1903               	skipnz
  8843  05A2  2D96               	goto	l11008
  8844  05A3  2DDC               	goto	l11032
  8845                           	opt asmopt_on
  8846                           
  8847                           	line	216
  8848                           	
  8849  05A4                     l4549:	
  8850                           	line	217
  8851                           ;map.c: 217: break;
  8852  05A4  2DDC               	goto	l11032
  8853                           	line	219
  8854                           ;map.c: 219: case 3:
  8855                           	
  8856  05A5                     l4552:	
  8857                           	line	220
  8858                           ;map.c: 220: switch (victimY)
  8859  05A5  2DB2               	goto	l11020
  8860                           	line	224
  8861                           ;map.c: 221: {
  8862                           ;map.c: 224: case 1:
  8863                           	
  8864  05A6                     l4554:	
  8865                           	line	225
  8866                           	
  8867  05A6                     l11014:	
  8868                           ;map.c: 225: vicZone = 3;
  8869  05A6  3003               	movlw	(03h)
  8870  05A7  00AB               	movwf	(??_getVictimZone+0)+0
  8871  05A8  082B               	movf	(??_getVictimZone+0)+0,w
  8872  05A9  00E3               	movwf	(_vicZone)
  8873                           	line	226
  8874                           ;map.c: 226: break;
  8875  05AA  2DDC               	goto	l11032
  8876                           	line	229
  8877                           ;map.c: 229: case 3:
  8878                           	
  8879  05AB                     l4556:	
  8880                           	line	230
  8881                           	
  8882  05AB                     l11016:	
  8883                           ;map.c: 230: vicZone = 2;
  8884  05AB  3002               	movlw	(02h)
  8885  05AC  00AB               	movwf	(??_getVictimZone+0)+0
  8886  05AD  082B               	movf	(??_getVictimZone+0)+0,w
  8887  05AE  00E3               	movwf	(_vicZone)
  8888                           	line	231
  8889                           ;map.c: 231: break;
  8890  05AF  2DDC               	goto	l11032
  8891                           	line	232
  8892                           ;map.c: 232: default:
  8893                           	
  8894  05B0                     l4557:	
  8895                           	line	233
  8896                           ;map.c: 233: break;
  8897  05B0  2DDC               	goto	l11032
  8898                           	line	234
  8899                           	
  8900  05B1                     l11018:	
  8901                           ;map.c: 234: }
  8902  05B1  2DDC               	goto	l11032
  8903                           	line	220
  8904                           	
  8905  05B2                     l4553:	
  8906                           	
  8907  05B2                     l11020:	
  8908  05B2  082A               	movf	(getVictimZone@victimY),w
  8909                           	; Switch size 1, requested type "space"
  8910                           ; Number of cases is 2, Range of values is 1 to 3
  8911                           ; switch strategies available:
  8912                           ; Name         Instructions Cycles
  8913                           ; simple_byte            7     4 (average)
  8914                           ; direct_byte           20    11 (fixed)
  8915                           ; jumptable            263     9 (fixed)
  8916                           ;	Chosen strategy is simple_byte
  8917                           
  8918                           	opt asmopt_off
  8919  05B3  3A01               	xorlw	1^0	; case 1
  8920  05B4  1903               	skipnz
  8921  05B5  2DA6               	goto	l11014
  8922  05B6  3A02               	xorlw	3^1	; case 3
  8923  05B7  1903               	skipnz
  8924  05B8  2DAB               	goto	l11016
  8925  05B9  2DDC               	goto	l11032
  8926                           	opt asmopt_on
  8927                           
  8928                           	line	234
  8929                           	
  8930  05BA                     l4555:	
  8931                           	line	235
  8932                           ;map.c: 235: break;
  8933  05BA  2DDC               	goto	l11032
  8934                           	line	237
  8935                           ;map.c: 237: case 4:
  8936                           	
  8937  05BB                     l4558:	
  8938                           	line	238
  8939                           ;map.c: 238: switch (victimY)
  8940  05BB  2DC3               	goto	l11026
  8941                           	line	246
  8942                           ;map.c: 239: {
  8943                           ;map.c: 246: case 3:
  8944                           	
  8945  05BC                     l4560:	
  8946                           	line	247
  8947                           	
  8948  05BC                     l11022:	
  8949                           ;map.c: 247: vicZone = 2;
  8950  05BC  3002               	movlw	(02h)
  8951  05BD  00AB               	movwf	(??_getVictimZone+0)+0
  8952  05BE  082B               	movf	(??_getVictimZone+0)+0,w
  8953  05BF  00E3               	movwf	(_vicZone)
  8954                           	line	248
  8955                           ;map.c: 248: break;
  8956  05C0  2DDC               	goto	l11032
  8957                           	line	249
  8958                           ;map.c: 249: default:
  8959                           	
  8960  05C1                     l4562:	
  8961                           	line	250
  8962                           ;map.c: 250: break;
  8963  05C1  2DDC               	goto	l11032
  8964                           	line	251
  8965                           	
  8966  05C2                     l11024:	
  8967                           ;map.c: 251: }
  8968  05C2  2DDC               	goto	l11032
  8969                           	line	238
  8970                           	
  8971  05C3                     l4559:	
  8972                           	
  8973  05C3                     l11026:	
  8974  05C3  082A               	movf	(getVictimZone@victimY),w
  8975                           	; Switch size 1, requested type "space"
  8976                           ; Number of cases is 1, Range of values is 3 to 3
  8977                           ; switch strategies available:
  8978                           ; Name         Instructions Cycles
  8979                           ; simple_byte            4     3 (average)
  8980                           ; direct_byte           14    11 (fixed)
  8981                           ; jumptable            263     9 (fixed)
  8982                           ;	Chosen strategy is simple_byte
  8983                           
  8984                           	opt asmopt_off
  8985  05C4  3A03               	xorlw	3^0	; case 3
  8986  05C5  1903               	skipnz
  8987  05C6  2DBC               	goto	l11022
  8988  05C7  2DDC               	goto	l11032
  8989                           	opt asmopt_on
  8990                           
  8991                           	line	251
  8992                           	
  8993  05C8                     l4561:	
  8994                           	line	252
  8995                           ;map.c: 252: break;
  8996  05C8  2DDC               	goto	l11032
  8997                           	line	254
  8998                           ;map.c: 254: default:
  8999                           	
  9000  05C9                     l4563:	
  9001                           	line	255
  9002                           ;map.c: 255: break;
  9003  05C9  2DDC               	goto	l11032
  9004                           	line	256
  9005                           	
  9006  05CA                     l11028:	
  9007                           ;map.c: 256: }
  9008  05CA  2DDC               	goto	l11032
  9009                           	line	163
  9010                           	
  9011  05CB                     l4532:	
  9012                           	
  9013  05CB                     l11030:	
  9014  05CB  082C               	movf	(getVictimZone@victimX),w
  9015                           	; Switch size 1, requested type "space"
  9016                           ; Number of cases is 5, Range of values is 0 to 4
  9017                           ; switch strategies available:
  9018                           ; Name         Instructions Cycles
  9019                           ; simple_byte           16     9 (average)
  9020                           ; direct_byte           23     8 (fixed)
  9021                           ; jumptable            260     6 (fixed)
  9022                           ; rangetable             9     6 (fixed)
  9023                           ; spacedrange           16     9 (fixed)
  9024                           ; locatedrange           5     3 (fixed)
  9025                           ;	Chosen strategy is simple_byte
  9026                           
  9027                           	opt asmopt_off
  9028  05CC  3A00               	xorlw	0^0	; case 0
  9029  05CD  1903               	skipnz
  9030  05CE  2D71               	goto	l10996
  9031  05CF  3A01               	xorlw	1^0	; case 1
  9032  05D0  1903               	skipnz
  9033  05D1  2D87               	goto	l11004
  9034  05D2  3A03               	xorlw	2^1	; case 2
  9035  05D3  1903               	skipnz
  9036  05D4  2D9C               	goto	l11012
  9037  05D5  3A01               	xorlw	3^2	; case 3
  9038  05D6  1903               	skipnz
  9039  05D7  2DB2               	goto	l11020
  9040  05D8  3A07               	xorlw	4^3	; case 4
  9041  05D9  1903               	skipnz
  9042  05DA  2DC3               	goto	l11026
  9043  05DB  2DDC               	goto	l11032
  9044                           	opt asmopt_on
  9045                           
  9046                           	line	256
  9047                           	
  9048  05DC                     l4539:	
  9049                           	line	258
  9050                           	
  9051  05DC                     l11032:	
  9052                           ;map.c: 258: return vicZone;
  9053  05DC  0863               	movf	(_vicZone),w
  9054  05DD  2DDE               	goto	l4564
  9055                           	
  9056  05DE                     l11034:	
  9057                           	line	259
  9058                           	
  9059  05DE                     l4564:	
  9060  05DE  0008               	return
  9061                           	opt stack 0
  9062                           GLOBAL	__end_of_getVictimZone
  9063  05DF                     	__end_of_getVictimZone:
  9064 ;; =============== function _getVictimZone ends ============
  9065                           
  9066                           	signat	_getVictimZone,8313
  9067                           	global	_getFinalY
  9068                           psect	text1666,local,class=CODE,delta=2
  9069                           global __ptext1666
  9070  0949                     __ptext1666:
  9071                           
  9072 ;; *************** function _getFinalY *****************
  9073 ;; Defined at:
  9074 ;;		line 152 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\map
       .c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      unsigned char 
  9081 ;; Registers used:
  9082 ;;		wreg
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9088 ;;      Params:         0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0
  9091 ;;      Totals:         0       0       0       0       0
  9092 ;;Total ram usage:        0 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    2
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_checkForFinalDestination
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           psect	text1666
  9102                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\map.c"
  9103                           	line	152
  9104                           	global	__size_of_getFinalY
  9105  0005                     	__size_of_getFinalY	equ	__end_of_getFinalY-_getFinalY
  9106                           	
  9107  0949                     _getFinalY:	
  9108                           	opt	stack 4
  9109                           ; Regs used in _getFinalY: [wreg]
  9110                           	line	153
  9111                           	
  9112  0949                     l10984:	
  9113                           ;map.c: 153: return finalY;
  9114  0949  1283               	bcf	status, 5	;RP0=0, select bank0
  9115  094A  1303               	bcf	status, 6	;RP1=0, select bank0
  9116  094B  085C               	movf	(_finalY),w
  9117  094C  294D               	goto	l4529
  9118                           	
  9119  094D                     l10986:	
  9120                           	line	154
  9121                           	
  9122  094D                     l4529:	
  9123  094D  0008               	return
  9124                           	opt stack 0
  9125                           GLOBAL	__end_of_getFinalY
  9126  094E                     	__end_of_getFinalY:
  9127 ;; =============== function _getFinalY ends ============
  9128                           
  9129                           	signat	_getFinalY,89
  9130                           	global	_getFinalX
  9131                           psect	text1667,local,class=CODE,delta=2
  9132                           global __ptext1667
  9133  0944                     __ptext1667:
  9134                           
  9135 ;; *************** function _getFinalX *****************
  9136 ;; Defined at:
  9137 ;;		line 147 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\map
       .c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;		None
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;		None
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  1    wreg      unsigned char 
  9144 ;; Registers used:
  9145 ;;		wreg
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9151 ;;      Params:         0       0       0       0       0
  9152 ;;      Locals:         0       0       0       0       0
  9153 ;;      Temps:          0       0       0       0       0
  9154 ;;      Totals:         0       0       0       0       0
  9155 ;;Total ram usage:        0 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; Hardware stack levels required when called:    2
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_checkForFinalDestination
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           psect	text1667
  9165                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\map.c"
  9166                           	line	147
  9167                           	global	__size_of_getFinalX
  9168  0005                     	__size_of_getFinalX	equ	__end_of_getFinalX-_getFinalX
  9169                           	
  9170  0944                     _getFinalX:	
  9171                           	opt	stack 4
  9172                           ; Regs used in _getFinalX: [wreg]
  9173                           	line	148
  9174                           	
  9175  0944                     l10980:	
  9176                           ;map.c: 148: return finalX;
  9177  0944  1283               	bcf	status, 5	;RP0=0, select bank0
  9178  0945  1303               	bcf	status, 6	;RP1=0, select bank0
  9179  0946  085B               	movf	(_finalX),w
  9180  0947  2948               	goto	l4526
  9181                           	
  9182  0948                     l10982:	
  9183                           	line	149
  9184                           	
  9185  0948                     l4526:	
  9186  0948  0008               	return
  9187                           	opt stack 0
  9188                           GLOBAL	__end_of_getFinalX
  9189  0949                     	__end_of_getFinalX:
  9190 ;; =============== function _getFinalX ends ============
  9191                           
  9192                           	signat	_getFinalX,89
  9193                           	global	_ser_init
  9194                           psect	text1668,local,class=CODE,delta=2
  9195                           global __ptext1668
  9196  0AF7                     __ptext1668:
  9197                           
  9198 ;; *************** function _ser_init *****************
  9199 ;; Defined at:
  9200 ;;		line 124 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;		None               void
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9214 ;;      Params:         0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0
  9216 ;;      Temps:          0       1       0       0       0
  9217 ;;      Totals:         0       1       0       0       0
  9218 ;;Total ram usage:        1 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    2
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_init
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           psect	text1668
  9228                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  9229                           	line	124
  9230                           	global	__size_of_ser_init
  9231  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  9232                           	
  9233  0AF7                     _ser_init:	
  9234                           	opt	stack 4
  9235                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  9236                           	line	125
  9237                           	
  9238  0AF7                     l10954:	
  9239                           ;ser.c: 125: TRISC |= 0b10000000;
  9240  0AF7  1683               	bsf	status, 5	;RP0=1, select bank1
  9241  0AF8  1303               	bcf	status, 6	;RP1=0, select bank1
  9242  0AF9  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  9243                           	line	126
  9244                           	
  9245  0AFA                     l10956:	
  9246                           ;ser.c: 126: TRISC &= 0b10111111;
  9247  0AFA  30BF               	movlw	(0BFh)
  9248  0AFB  1283               	bcf	status, 5	;RP0=0, select bank0
  9249  0AFC  1303               	bcf	status, 6	;RP1=0, select bank0
  9250  0AFD  00AA               	movwf	(??_ser_init+0)+0
  9251  0AFE  082A               	movf	(??_ser_init+0)+0,w
  9252  0AFF  1683               	bsf	status, 5	;RP0=1, select bank1
  9253  0B00  1303               	bcf	status, 6	;RP1=0, select bank1
  9254  0B01  0587               	andwf	(135)^080h,f	;volatile
  9255                           	line	127
  9256                           	
  9257  0B02                     l10958:	
  9258                           ;ser.c: 127: BRGH=1;
  9259  0B02  1518               	bsf	(1218/8)^080h,(1218)&7
  9260                           	line	129
  9261                           	
  9262  0B03                     l10960:	
  9263                           ;ser.c: 129: SPBRG=20;
  9264  0B03  3014               	movlw	(014h)
  9265  0B04  0099               	movwf	(153)^080h	;volatile
  9266                           	line	132
  9267                           	
  9268  0B05                     l10962:	
  9269                           ;ser.c: 132: TX9=0;
  9270  0B05  1318               	bcf	(1222/8)^080h,(1222)&7
  9271                           	line	133
  9272                           	
  9273  0B06                     l10964:	
  9274                           ;ser.c: 133: RX9=0;
  9275  0B06  1283               	bcf	status, 5	;RP0=0, select bank0
  9276  0B07  1303               	bcf	status, 6	;RP1=0, select bank0
  9277  0B08  1318               	bcf	(198/8),(198)&7
  9278                           	line	135
  9279                           	
  9280  0B09                     l10966:	
  9281                           ;ser.c: 135: SYNC=0;
  9282  0B09  1683               	bsf	status, 5	;RP0=1, select bank1
  9283  0B0A  1303               	bcf	status, 6	;RP1=0, select bank1
  9284  0B0B  1218               	bcf	(1220/8)^080h,(1220)&7
  9285                           	line	136
  9286                           	
  9287  0B0C                     l10968:	
  9288                           ;ser.c: 136: SPEN=1;
  9289  0B0C  1283               	bcf	status, 5	;RP0=0, select bank0
  9290  0B0D  1303               	bcf	status, 6	;RP1=0, select bank0
  9291  0B0E  1798               	bsf	(199/8),(199)&7
  9292                           	line	137
  9293                           	
  9294  0B0F                     l10970:	
  9295                           ;ser.c: 137: CREN=1;
  9296  0B0F  1618               	bsf	(196/8),(196)&7
  9297                           	line	138
  9298                           	
  9299  0B10                     l10972:	
  9300                           ;ser.c: 138: TXIE=0;
  9301  0B10  1683               	bsf	status, 5	;RP0=1, select bank1
  9302  0B11  1303               	bcf	status, 6	;RP1=0, select bank1
  9303  0B12  120C               	bcf	(1124/8)^080h,(1124)&7
  9304                           	line	139
  9305                           	
  9306  0B13                     l10974:	
  9307                           ;ser.c: 139: RCIE=1;
  9308  0B13  168C               	bsf	(1125/8)^080h,(1125)&7
  9309                           	line	140
  9310                           	
  9311  0B14                     l10976:	
  9312                           ;ser.c: 140: TXEN=1;
  9313  0B14  1698               	bsf	(1221/8)^080h,(1221)&7
  9314                           	line	143
  9315                           	
  9316  0B15                     l10978:	
  9317                           ;ser.c: 143: rxiptr=rxoptr=txiptr=txoptr=0;
  9318  0B15  3000               	movlw	(0)
  9319  0B16  1283               	bcf	status, 5	;RP0=0, select bank0
  9320  0B17  1303               	bcf	status, 6	;RP1=0, select bank0
  9321  0B18  00E2               	movwf	(_txoptr)	;volatile
  9322  0B19  00F9               	movwf	(_txiptr)	;volatile
  9323  0B1A  00DF               	movwf	(_rxoptr)	;volatile
  9324  0B1B  00AA               	movwf	(??_ser_init+0)+0
  9325  0B1C  082A               	movf	(??_ser_init+0)+0,w
  9326  0B1D  00F8               	movwf	(_rxiptr)	;volatile
  9327                           	line	144
  9328                           	
  9329  0B1E                     l5306:	
  9330  0B1E  0008               	return
  9331                           	opt stack 0
  9332                           GLOBAL	__end_of_ser_init
  9333  0B1F                     	__end_of_ser_init:
  9334 ;; =============== function _ser_init ends ============
  9335                           
  9336                           	signat	_ser_init,88
  9337                           	global	_updateOrientation
  9338                           psect	text1669,local,class=CODE,delta=2
  9339                           global __ptext1669
  9340  096B                     __ptext1669:
  9341                           
  9342 ;; *************** function _updateOrientation *****************
  9343 ;; Defined at:
  9344 ;;		line 182 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\dri
       ve.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  moved           1    wreg     enum E1111
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  moved           1   11[BANK0 ] enum E1111
  9349 ;; Return value:  Size  Location     Type
  9350 ;;		None               void
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9358 ;;      Params:         0       0       0       0       0
  9359 ;;      Locals:         0       1       0       0       0
  9360 ;;      Temps:          0       1       0       0       0
  9361 ;;      Totals:         0       2       0       0       0
  9362 ;;Total ram usage:        2 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    2
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_goBackward
  9369 ;;		_goLeft
  9370 ;;		_goReverse
  9371 ;;		_goRight
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           psect	text1669
  9375                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  9376                           	line	182
  9377                           	global	__size_of_updateOrientation
  9378  0011                     	__size_of_updateOrientation	equ	__end_of_updateOrientation-_updateOrientation
  9379                           	
  9380  096B                     _updateOrientation:	
  9381                           	opt	stack 1
  9382                           ; Regs used in _updateOrientation: [wreg+status,2+status,0]
  9383                           ;updateOrientation@moved stored from wreg
  9384  096B  1283               	bcf	status, 5	;RP0=0, select bank0
  9385  096C  1303               	bcf	status, 6	;RP1=0, select bank0
  9386  096D  00AB               	movwf	(updateOrientation@moved)
  9387                           	line	183
  9388                           	
  9389  096E                     l10932:	
  9390                           ;drive.c: 183: currentOrientation += moved;
  9391  096E  082B               	movf	(updateOrientation@moved),w	;volatile
  9392  096F  00AA               	movwf	(??_updateOrientation+0)+0
  9393  0970  082A               	movf	(??_updateOrientation+0)+0,w
  9394  0971  07DA               	addwf	(_currentOrientation),f	;volatile
  9395                           	line	184
  9396                           	
  9397  0972                     l10934:	
  9398                           ;drive.c: 184: if(currentOrientation >= 4)
  9399  0972  3004               	movlw	(04h)
  9400  0973  025A               	subwf	(_currentOrientation),w	;volatile
  9401  0974  1C03               	skipc
  9402  0975  2977               	goto	u4151
  9403  0976  2978               	goto	u4150
  9404  0977                     u4151:
  9405  0977  297B               	goto	l2177
  9406  0978                     u4150:
  9407                           	line	185
  9408                           	
  9409  0978                     l10936:	
  9410                           ;drive.c: 185: currentOrientation -= 4;
  9411  0978  3004               	movlw	low(04h)
  9412  0979  02DA               	subwf	(_currentOrientation),f	;volatile
  9413  097A  297B               	goto	l2177
  9414                           	
  9415  097B                     l2176:	
  9416                           	line	186
  9417                           	
  9418  097B                     l2177:	
  9419  097B  0008               	return
  9420                           	opt stack 0
  9421                           GLOBAL	__end_of_updateOrientation
  9422  097C                     	__end_of_updateOrientation:
  9423 ;; =============== function _updateOrientation ends ============
  9424                           
  9425                           	signat	_updateOrientation,4216
  9426                           	global	_getOrientation
  9427                           psect	text1670,local,class=CODE,delta=2
  9428                           global __ptext1670
  9429  093F                     __ptext1670:
  9430                           
  9431 ;; *************** function _getOrientation *****************
  9432 ;; Defined at:
  9433 ;;		line 82 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\driv
       e.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;		None
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;		None
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      enum E1117
  9440 ;; Registers used:
  9441 ;;		wreg
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9447 ;;      Params:         0       0       0       0       0
  9448 ;;      Locals:         0       0       0       0       0
  9449 ;;      Temps:          0       0       0       0       0
  9450 ;;      Totals:         0       0       0       0       0
  9451 ;;Total ram usage:        0 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    2
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_updateLocation
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           psect	text1670
  9461                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  9462                           	line	82
  9463                           	global	__size_of_getOrientation
  9464  0005                     	__size_of_getOrientation	equ	__end_of_getOrientation-_getOrientation
  9465                           	
  9466  093F                     _getOrientation:	
  9467                           	opt	stack 4
  9468                           ; Regs used in _getOrientation: [wreg]
  9469                           	line	83
  9470                           	
  9471  093F                     l10928:	
  9472                           ;drive.c: 83: return currentOrientation;
  9473  093F  1283               	bcf	status, 5	;RP0=0, select bank0
  9474  0940  1303               	bcf	status, 6	;RP1=0, select bank0
  9475  0941  085A               	movf	(_currentOrientation),w	;volatile
  9476  0942  2943               	goto	l2143
  9477                           	
  9478  0943                     l10930:	
  9479                           	line	84
  9480                           	
  9481  0943                     l2143:	
  9482  0943  0008               	return
  9483                           	opt stack 0
  9484                           GLOBAL	__end_of_getOrientation
  9485  0944                     	__end_of_getOrientation:
  9486 ;; =============== function _getOrientation ends ============
  9487                           
  9488                           	signat	_getOrientation,89
  9489                           	global	_getSuccessfulDrive
  9490                           psect	text1671,local,class=CODE,delta=2
  9491                           global __ptext1671
  9492  0956                     __ptext1671:
  9493                           
  9494 ;; *************** function _getSuccessfulDrive *****************
  9495 ;; Defined at:
  9496 ;;		line 30 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\driv
       e.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;		None               void
  9503 ;; Registers used:
  9504 ;;		status,2, status,0
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9510 ;;      Params:         0       0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0
  9512 ;;      Temps:          0       0       0       0       0
  9513 ;;      Totals:         0       0       0       0       0
  9514 ;;Total ram usage:        0 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    2
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_main
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           psect	text1671
  9524                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\drive.c"
  9525                           	line	30
  9526                           	global	__size_of_getSuccessfulDrive
  9527  000A                     	__size_of_getSuccessfulDrive	equ	__end_of_getSuccessfulDrive-_getSuccessfulDrive
  9528                           	
  9529  0956                     _getSuccessfulDrive:	
  9530                           	opt	stack 5
  9531                           ; Regs used in _getSuccessfulDrive: [status]
  9532                           	line	31
  9533                           	
  9534  0956                     l10920:	
  9535                           ;drive.c: 31: return successfulDrive;
  9536  0956  19F1               	btfsc	(_successfulDrive/8),(_successfulDrive)&7
  9537  0957  2959               	goto	u4141
  9538  0958  295A               	goto	u4140
  9539  0959                     u4141:
  9540  0959  295C               	goto	l10924
  9541  095A                     u4140:
  9542                           	
  9543  095A                     l10922:	
  9544  095A  1003               	clrc
  9545                           	
  9546  095B  295F               	goto	l2132
  9547                           	
  9548  095C                     l10874:	
  9549                           	
  9550  095C                     l10924:	
  9551  095C  1403               	setc
  9552                           	
  9553  095D  295F               	goto	l2132
  9554                           	
  9555  095E                     l10876:	
  9556  095E  295F               	goto	l2132
  9557                           	
  9558  095F                     l10926:	
  9559                           	line	32
  9560                           	
  9561  095F                     l2132:	
  9562  095F  0008               	return
  9563                           	opt stack 0
  9564                           GLOBAL	__end_of_getSuccessfulDrive
  9565  0960                     	__end_of_getSuccessfulDrive:
  9566 ;; =============== function _getSuccessfulDrive ends ============
  9567                           
  9568                           	signat	_getSuccessfulDrive,88
  9569                           	global	_ser_putch
  9570                           psect	text1672,local,class=CODE,delta=2
  9571                           global __ptext1672
  9572  0A68                     __ptext1672:
  9573                           
  9574 ;; *************** function _ser_putch *****************
  9575 ;; Defined at:
  9576 ;;		line 81 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;  c               1    wreg     unsigned char 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;  c               1   11[BANK0 ] unsigned char 
  9581 ;; Return value:  Size  Location     Type
  9582 ;;		None               void
  9583 ;; Registers used:
  9584 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9590 ;;      Params:         0       0       0       0       0
  9591 ;;      Locals:         0       1       0       0       0
  9592 ;;      Temps:          0       1       0       0       0
  9593 ;;      Totals:         0       2       0       0       0
  9594 ;;Total ram usage:        2 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; Hardware stack levels required when called:    2
  9597 ;; This function calls:
  9598 ;;		Nothing
  9599 ;; This function is called by:
  9600 ;;		_detectCliff
  9601 ;;		_drive
  9602 ;;		_driveForDistance
  9603 ;;		_waitFor
  9604 ;;		_initIRobot
  9605 ;;		_ser_putArr
  9606 ;;		_play_iCreate_song
  9607 ;;		_ser_puts
  9608 ;;		_ser_puts2
  9609 ;;		_ser_puthex
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           psect	text1672
  9613                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  9614                           	line	81
  9615                           	global	__size_of_ser_putch
  9616  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  9617                           	
  9618  0A68                     _ser_putch:	
  9619                           	opt	stack 3
  9620                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  9621                           ;ser_putch@c stored from wreg
  9622  0A68  1283               	bcf	status, 5	;RP0=0, select bank0
  9623  0A69  1303               	bcf	status, 6	;RP1=0, select bank0
  9624  0A6A  00AB               	movwf	(ser_putch@c)
  9625                           	line	82
  9626                           	
  9627  0A6B                     l10908:	
  9628                           ;ser.c: 82: while (((txiptr+1) & (16-1))==txoptr)
  9629  0A6B  2A6D               	goto	l10910
  9630                           	
  9631  0A6C                     l5282:	
  9632                           	line	83
  9633                           ;ser.c: 83: continue;
  9634  0A6C  2A6D               	goto	l10910
  9635                           	
  9636  0A6D                     l5281:	
  9637                           	line	82
  9638                           	
  9639  0A6D                     l10910:	
  9640  0A6D  0879               	movf	(_txiptr),w	;volatile
  9641  0A6E  3E01               	addlw	01h
  9642  0A6F  390F               	andlw	0Fh
  9643  0A70  0662               	xorwf	(_txoptr),w	;volatile
  9644  0A71  1903               	skipnz
  9645  0A72  2A74               	goto	u4131
  9646  0A73  2A75               	goto	u4130
  9647  0A74                     u4131:
  9648  0A74  2A6D               	goto	l10910
  9649  0A75                     u4130:
  9650                           	
  9651  0A75                     l5283:	
  9652                           	line	84
  9653                           ;ser.c: 84: GIE=0;
  9654  0A75  138B               	bcf	(95/8),(95)&7
  9655                           	line	85
  9656                           	
  9657  0A76                     l10912:	
  9658                           ;ser.c: 85: txfifo[txiptr] = c;
  9659  0A76  082B               	movf	(ser_putch@c),w
  9660  0A77  00AA               	movwf	(??_ser_putch+0)+0
  9661  0A78  0879               	movf	(_txiptr),w
  9662  0A79  3ECE               	addlw	_txfifo&0ffh
  9663  0A7A  0084               	movwf	fsr0
  9664  0A7B  082A               	movf	(??_ser_putch+0)+0,w
  9665  0A7C  1383               	bcf	status, 7	;select IRP bank1
  9666  0A7D  0080               	movwf	indf
  9667                           	line	86
  9668                           	
  9669  0A7E                     l10914:	
  9670                           ;ser.c: 86: txiptr=(txiptr+1) & (16-1);
  9671  0A7E  0879               	movf	(_txiptr),w	;volatile
  9672  0A7F  3E01               	addlw	01h
  9673  0A80  390F               	andlw	0Fh
  9674  0A81  00AA               	movwf	(??_ser_putch+0)+0
  9675  0A82  082A               	movf	(??_ser_putch+0)+0,w
  9676  0A83  00F9               	movwf	(_txiptr)	;volatile
  9677                           	line	87
  9678                           	
  9679  0A84                     l10916:	
  9680                           ;ser.c: 87: TXIE=1;
  9681  0A84  1683               	bsf	status, 5	;RP0=1, select bank1
  9682  0A85  1303               	bcf	status, 6	;RP1=0, select bank1
  9683  0A86  160C               	bsf	(1124/8)^080h,(1124)&7
  9684                           	line	88
  9685                           	
  9686  0A87                     l10918:	
  9687                           ;ser.c: 88: GIE=1;
  9688  0A87  178B               	bsf	(95/8),(95)&7
  9689                           	line	89
  9690                           	
  9691  0A88                     l5284:	
  9692  0A88  0008               	return
  9693                           	opt stack 0
  9694                           GLOBAL	__end_of_ser_putch
  9695  0A89                     	__end_of_ser_putch:
  9696 ;; =============== function _ser_putch ends ============
  9697                           
  9698                           	signat	_ser_putch,4216
  9699                           	global	_isr1
  9700                           psect	text1673,local,class=CODE,delta=2
  9701                           global __ptext1673
  9702  01E4                     __ptext1673:
  9703                           
  9704 ;; *************** function _isr1 *****************
  9705 ;; Defined at:
  9706 ;;		line 46 in file "C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\COMPETITIONv0.4\main
       .c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;		None               void
  9713 ;; Registers used:
  9714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9720 ;;      Params:         0       0       0       0       0
  9721 ;;      Locals:         0       0       0       0       0
  9722 ;;      Temps:          0      10       0       0       0
  9723 ;;      Totals:         0      10       0       0       0
  9724 ;;Total ram usage:       10 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    1
  9727 ;; This function calls:
  9728 ;;		___lwmod
  9729 ;; This function is called by:
  9730 ;;		Interrupt level 1
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           psect	text1673
  9734                           	file	"C:\Documents and Settings\User\My Documents\Dropbox\Mechatronics 2\COMPETITION\CO
                                 MPETITIONv0.4\main.c"
  9735                           	line	46
  9736                           	global	__size_of_isr1
  9737  00CA                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  9738                           	
  9739  01E4                     _isr1:	
  9740                           	opt	stack 0
  9741                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9742                           psect	intentry,class=CODE,delta=2
  9743                           global __pintentry
  9744  0004                     __pintentry:
  9745                           global interrupt_function
  9746  0004                     interrupt_function:
  9747                           	global saved_w
  9748  007E                     	saved_w	set	btemp+0
  9749  0004  00FE               	movwf	saved_w
  9750  0005  0E03               	swapf	status,w
  9751  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  9752  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  9753  0008  00A6               	movwf	(??_isr1+6)
  9754  0009  0804               	movf	fsr0,w
  9755  000A  00A7               	movwf	(??_isr1+7)
  9756  000B  080A               	movf	pclath,w
  9757  000C  00A8               	movwf	(??_isr1+8)
  9758  000D  087F               	movf	btemp+1,w
  9759  000E  00A9               	movwf	(??_isr1+9)
  9760  000F  120A  118A  29E4   	ljmp	_isr1
  9761                           psect	text1673
  9762                           	line	48
  9763                           	
  9764  01E4                     i1l9942:	
  9765                           ;main.c: 48: if(TMR0IF)
  9766  01E4  1D0B               	btfss	(90/8),(90)&7
  9767  01E5  29E7               	goto	u312_21
  9768  01E6  29E8               	goto	u312_20
  9769  01E7                     u312_21:
  9770  01E7  2AA2               	goto	i1l3708
  9771  01E8                     u312_20:
  9772                           	line	50
  9773                           	
  9774  01E8                     i1l9944:	
  9775                           ;main.c: 49: {
  9776                           ;main.c: 50: TMR0IF = 0;
  9777  01E8  110B               	bcf	(90/8),(90)&7
  9778                           	line	51
  9779                           	
  9780  01E9                     i1l9946:	
  9781                           ;main.c: 51: TMR0 = 100;
  9782  01E9  3064               	movlw	(064h)
  9783  01EA  0081               	movwf	(1)	;volatile
  9784                           	line	53
  9785                           ;main.c: 53: RTC_Counter++;
  9786  01EB  3001               	movlw	low(01h)
  9787  01EC  07D8               	addwf	(_RTC_Counter),f	;volatile
  9788  01ED  1803               	skipnc
  9789  01EE  0AD9               	incf	(_RTC_Counter+1),f	;volatile
  9790  01EF  3000               	movlw	high(01h)
  9791  01F0  07D9               	addwf	(_RTC_Counter+1),f	;volatile
  9792                           	line	55
  9793                           	
  9794  01F1                     i1l9948:	
  9795                           ;main.c: 55: RTC_FLAG_1MS = 1;
  9796  01F1  14F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  9797                           	line	57
  9798                           	
  9799  01F2                     i1l9950:	
  9800                           ;main.c: 57: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  9801  01F2  300A               	movlw	low(0Ah)
  9802  01F3  00F2               	movwf	(?___lwmod)
  9803  01F4  3000               	movlw	high(0Ah)
  9804  01F5  00F3               	movwf	((?___lwmod))+1
  9805  01F6  0859               	movf	(_RTC_Counter+1),w	;volatile
  9806  01F7  01F5               	clrf	1+(?___lwmod)+02h
  9807  01F8  07F5               	addwf	1+(?___lwmod)+02h
  9808  01F9  0858               	movf	(_RTC_Counter),w	;volatile
  9809  01FA  01F4               	clrf	0+(?___lwmod)+02h
  9810  01FB  07F4               	addwf	0+(?___lwmod)+02h
  9811                           
  9812  01FC  120A  158A  2731   	fcall	___lwmod
              120A  118A         
  9813  0201  0873               	movf	((1+(?___lwmod))),w
  9814  0202  0472               	iorwf	((0+(?___lwmod))),w
  9815  0203  1D03               	skipz
  9816  0204  2A06               	goto	u313_21
  9817  0205  2A07               	goto	u313_20
  9818  0206                     u313_21:
  9819  0206  2A09               	goto	i1l9954
  9820  0207                     u313_20:
  9821                           	
  9822  0207                     i1l9952:	
  9823  0207  1470               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  9824  0208  2A09               	goto	i1l9954
  9825                           	
  9826  0209                     i1l3698:	
  9827                           	line	58
  9828                           	
  9829  0209                     i1l9954:	
  9830                           ;main.c: 58: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  9831  0209  3032               	movlw	low(032h)
  9832  020A  00F2               	movwf	(?___lwmod)
  9833  020B  3000               	movlw	high(032h)
  9834  020C  00F3               	movwf	((?___lwmod))+1
  9835  020D  1283               	bcf	status, 5	;RP0=0, select bank0
  9836  020E  1303               	bcf	status, 6	;RP1=0, select bank0
  9837  020F  0859               	movf	(_RTC_Counter+1),w	;volatile
  9838  0210  01F5               	clrf	1+(?___lwmod)+02h
  9839  0211  07F5               	addwf	1+(?___lwmod)+02h
  9840  0212  0858               	movf	(_RTC_Counter),w	;volatile
  9841  0213  01F4               	clrf	0+(?___lwmod)+02h
  9842  0214  07F4               	addwf	0+(?___lwmod)+02h
  9843                           
  9844  0215  120A  158A  2731   	fcall	___lwmod
              120A  118A         
  9845  021A  0873               	movf	((1+(?___lwmod))),w
  9846  021B  0472               	iorwf	((0+(?___lwmod))),w
  9847  021C  1D03               	skipz
  9848  021D  2A1F               	goto	u314_21
  9849  021E  2A20               	goto	u314_20
  9850  021F                     u314_21:
  9851  021F  2A22               	goto	i1l9958
  9852  0220                     u314_20:
  9853                           	
  9854  0220                     i1l9956:	
  9855  0220  15F0               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  9856  0221  2A22               	goto	i1l9958
  9857                           	
  9858  0222                     i1l3699:	
  9859                           	line	59
  9860                           	
  9861  0222                     i1l9958:	
  9862                           ;main.c: 59: if(RTC_Counter % 500 == 0)
  9863  0222  30F4               	movlw	low(01F4h)
  9864  0223  00F2               	movwf	(?___lwmod)
  9865  0224  3001               	movlw	high(01F4h)
  9866  0225  00F3               	movwf	((?___lwmod))+1
  9867  0226  1283               	bcf	status, 5	;RP0=0, select bank0
  9868  0227  1303               	bcf	status, 6	;RP1=0, select bank0
  9869  0228  0859               	movf	(_RTC_Counter+1),w	;volatile
  9870  0229  01F5               	clrf	1+(?___lwmod)+02h
  9871  022A  07F5               	addwf	1+(?___lwmod)+02h
  9872  022B  0858               	movf	(_RTC_Counter),w	;volatile
  9873  022C  01F4               	clrf	0+(?___lwmod)+02h
  9874  022D  07F4               	addwf	0+(?___lwmod)+02h
  9875                           
  9876  022E  120A  158A  2731   	fcall	___lwmod
              120A  118A         
  9877                           	line	62
  9878                           ;main.c: 60: {
  9879                           	
  9880  0233                     i1l3700:	
  9881                           	line	64
  9882                           ;main.c: 62: }
  9883                           ;main.c: 64: if(!RB0)
  9884  0233  1283               	bcf	status, 5	;RP0=0, select bank0
  9885  0234  1303               	bcf	status, 6	;RP1=0, select bank0
  9886  0235  1806               	btfsc	(48/8),(48)&7
  9887  0236  2A38               	goto	u315_21
  9888  0237  2A39               	goto	u315_20
  9889  0238                     u315_21:
  9890  0238  2A59               	goto	i1l3701
  9891  0239                     u315_20:
  9892                           	line	66
  9893                           	
  9894  0239                     i1l9960:	
  9895                           ;main.c: 65: {
  9896                           ;main.c: 66: start.debounceCount++;
  9897  0239  3001               	movlw	(01h)
  9898  023A  00A0               	movwf	(??_isr1+0)+0
  9899  023B  0820               	movf	(??_isr1+0)+0,w
  9900  023C  07D7               	addwf	0+(_start)+02h,f
  9901                           	line	67
  9902                           	
  9903  023D                     i1l9962:	
  9904                           ;main.c: 67: if(start.debounceCount >= 10 & start.released)
  9905  023D  0856               	movf	0+(_start)+01h,w
  9906  023E  00A0               	movwf	(??_isr1+0)+0
  9907  023F  01A1               	clrf	(??_isr1+0)+0+1
  9908  0240  300A               	movlw	(0Ah)
  9909  0241  0257               	subwf	0+(_start)+02h,w
  9910  0242  3000               	movlw	0
  9911  0243  1803               	skipnc
  9912  0244  3001               	movlw	1
  9913  0245  00A2               	movwf	(??_isr1+2)+0
  9914  0246  01A3               	clrf	(??_isr1+2)+0+1
  9915  0247  0820               	movf	0+(??_isr1+0)+0,w
  9916  0248  0522               	andwf	0+(??_isr1+2)+0,w
  9917  0249  00A4               	movwf	(??_isr1+4)+0
  9918  024A  0821               	movf	1+(??_isr1+0)+0,w
  9919  024B  0523               	andwf	1+(??_isr1+2)+0,w
  9920  024C  00A5               	movwf	1+(??_isr1+4)+0
  9921  024D  0825               	movf	1+(??_isr1+4)+0,w
  9922  024E  0424               	iorwf	0+(??_isr1+4)+0,w
  9923  024F  1903               	skipnz
  9924  0250  2A52               	goto	u316_21
  9925  0251  2A53               	goto	u316_20
  9926  0252                     u316_21:
  9927  0252  2A5E               	goto	i1l9970
  9928  0253                     u316_20:
  9929                           	line	69
  9930                           	
  9931  0253                     i1l9964:	
  9932                           ;main.c: 68: {
  9933                           ;main.c: 69: start.pressed = 1;
  9934  0253  01D5               	clrf	(_start)
  9935  0254  1403               	bsf	status,0
  9936  0255  0DD5               	rlf	(_start),f
  9937                           	line	70
  9938                           	
  9939  0256                     i1l9966:	
  9940                           ;main.c: 70: start.released = 0;
  9941  0256  01D6               	clrf	0+(_start)+01h
  9942  0257  2A5E               	goto	i1l9970
  9943                           	line	71
  9944                           	
  9945  0258                     i1l3702:	
  9946                           	line	72
  9947                           ;main.c: 71: }
  9948                           ;main.c: 72: }
  9949  0258  2A5E               	goto	i1l9970
  9950                           	line	73
  9951                           	
  9952  0259                     i1l3701:	
  9953                           	line	75
  9954                           ;main.c: 73: else
  9955                           ;main.c: 74: {
  9956                           ;main.c: 75: start.debounceCount = 0;
  9957  0259  01D7               	clrf	0+(_start)+02h
  9958                           	line	76
  9959                           	
  9960  025A                     i1l9968:	
  9961                           ;main.c: 76: start.released = 1;
  9962  025A  01D6               	clrf	0+(_start)+01h
  9963  025B  1403               	bsf	status,0
  9964  025C  0DD6               	rlf	0+(_start)+01h,f
  9965  025D  2A5E               	goto	i1l9970
  9966                           	line	77
  9967                           	
  9968  025E                     i1l3703:	
  9969                           	line	79
  9970                           	
  9971  025E                     i1l9970:	
  9972                           ;main.c: 77: }
  9973                           ;main.c: 79: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  9974  025E  1E8C               	btfss	(101/8),(101)&7
  9975  025F  2A61               	goto	u317_21
  9976  0260  2A62               	goto	u317_20
  9977  0261                     u317_21:
  9978  0261  2A7C               	goto	i1l9980
  9979  0262                     u317_20:
  9980                           	
  9981  0262                     i1l9972:	
  9982  0262  081A               	movf	(26),w	;volatile
  9983  0263  00A0               	movwf	(??_isr1+0)+0
  9984  0264  0878               	movf	(_rxiptr),w
  9985  0265  3E45               	addlw	_rxfifo&0ffh
  9986  0266  0084               	movwf	fsr0
  9987  0267  0820               	movf	(??_isr1+0)+0,w
  9988  0268  1383               	bcf	status, 7	;select IRP bank0
  9989  0269  0080               	movwf	indf
  9990                           	
  9991  026A                     i1l9974:	
  9992  026A  0878               	movf	(_rxiptr),w	;volatile
  9993  026B  3E01               	addlw	01h
  9994  026C  390F               	andlw	0Fh
  9995  026D  00A0               	movwf	(??_isr1+0)+0
  9996  026E  0820               	movf	(??_isr1+0)+0,w
  9997  026F  00E1               	movwf	(_ser_tmp)
  9998                           	
  9999  0270                     i1l9976:	
 10000  0270  0861               	movf	(_ser_tmp),w
 10001  0271  065F               	xorwf	(_rxoptr),w	;volatile
 10002  0272  1903               	skipnz
 10003  0273  2A75               	goto	u318_21
 10004  0274  2A76               	goto	u318_20
 10005  0275                     u318_21:
 10006  0275  2A7C               	goto	i1l9980
 10007  0276                     u318_20:
 10008                           	
 10009  0276                     i1l9978:	
 10010  0276  0861               	movf	(_ser_tmp),w
 10011  0277  00A0               	movwf	(??_isr1+0)+0
 10012  0278  0820               	movf	(??_isr1+0)+0,w
 10013  0279  00F8               	movwf	(_rxiptr)	;volatile
 10014  027A  2A7C               	goto	i1l9980
 10015                           	
 10016  027B                     i1l3705:	
 10017  027B  2A7C               	goto	i1l9980
 10018                           	
 10019  027C                     i1l3704:	
 10020                           	
 10021  027C                     i1l9980:	
 10022  027C  1E0C               	btfss	(100/8),(100)&7
 10023  027D  2A7F               	goto	u319_21
 10024  027E  2A80               	goto	u319_20
 10025  027F                     u319_21:
 10026  027F  2AA2               	goto	i1l3708
 10027  0280                     u319_20:
 10028                           	
 10029  0280                     i1l9982:	
 10030  0280  1683               	bsf	status, 5	;RP0=1, select bank1
 10031  0281  1303               	bcf	status, 6	;RP1=0, select bank1
 10032  0282  1E0C               	btfss	(1124/8)^080h,(1124)&7
 10033  0283  2A85               	goto	u320_21
 10034  0284  2A86               	goto	u320_20
 10035  0285                     u320_21:
 10036  0285  2AA2               	goto	i1l3708
 10037  0286                     u320_20:
 10038                           	
 10039  0286                     i1l9984:	
 10040  0286  1283               	bcf	status, 5	;RP0=0, select bank0
 10041  0287  1303               	bcf	status, 6	;RP1=0, select bank0
 10042  0288  0862               	movf	(_txoptr),w
 10043  0289  3ECE               	addlw	_txfifo&0ffh
 10044  028A  0084               	movwf	fsr0
 10045  028B  1383               	bcf	status, 7	;select IRP bank1
 10046  028C  0800               	movf	indf,w
 10047  028D  0099               	movwf	(25)	;volatile
 10048                           	
 10049  028E                     i1l9986:	
 10050  028E  3001               	movlw	(01h)
 10051  028F  00A0               	movwf	(??_isr1+0)+0
 10052  0290  0820               	movf	(??_isr1+0)+0,w
 10053  0291  07E2               	addwf	(_txoptr),f	;volatile
 10054                           	
 10055  0292                     i1l9988:	
 10056  0292  300F               	movlw	(0Fh)
 10057  0293  00A0               	movwf	(??_isr1+0)+0
 10058  0294  0820               	movf	(??_isr1+0)+0,w
 10059  0295  05E2               	andwf	(_txoptr),f	;volatile
 10060                           	
 10061  0296                     i1l9990:	
 10062  0296  0862               	movf	(_txoptr),w	;volatile
 10063  0297  0679               	xorwf	(_txiptr),w	;volatile
 10064  0298  1D03               	skipz
 10065  0299  2A9B               	goto	u321_21
 10066  029A  2A9C               	goto	u321_20
 10067  029B                     u321_21:
 10068  029B  2AA2               	goto	i1l3708
 10069  029C                     u321_20:
 10070                           	
 10071  029C                     i1l9992:	
 10072  029C  1683               	bsf	status, 5	;RP0=1, select bank1
 10073  029D  1303               	bcf	status, 6	;RP1=0, select bank1
 10074  029E  120C               	bcf	(1124/8)^080h,(1124)&7
 10075  029F  2AA2               	goto	i1l3708
 10076                           	
 10077  02A0                     i1l3707:	
 10078  02A0  2AA2               	goto	i1l3708
 10079                           	
 10080  02A1                     i1l3706:	
 10081  02A1  2AA2               	goto	i1l3708
 10082                           	line	80
 10083                           	
 10084  02A2                     i1l3697:	
 10085                           	line	81
 10086                           	
 10087  02A2                     i1l3708:	
 10088  02A2  1283               	bcf	status, 5	;RP0=0, select bank0
 10089  02A3  0829               	movf	(??_isr1+9),w
 10090  02A4  00FF               	movwf	btemp+1
 10091  02A5  0828               	movf	(??_isr1+8),w
 10092  02A6  008A               	movwf	pclath
 10093  02A7  0827               	movf	(??_isr1+7),w
 10094  02A8  0084               	movwf	fsr0
 10095  02A9  0E26               	swapf	(??_isr1+6)^00h,w
 10096  02AA  0083               	movwf	status
 10097  02AB  0EFE               	swapf	saved_w,f
 10098  02AC  0E7E               	swapf	saved_w,w
 10099  02AD  0009               	retfie
 10100                           	opt stack 0
 10101                           GLOBAL	__end_of_isr1
 10102  02AE                     	__end_of_isr1:
 10103 ;; =============== function _isr1 ends ============
 10104                           
 10105                           	signat	_isr1,88
 10106                           	global	___lwmod
 10107                           psect	text1674,local,class=CODE,delta=2
 10108                           global __ptext1674
 10109  0F31                     __ptext1674:
 10110                           
 10111 ;; *************** function ___lwmod *****************
 10112 ;; Defined at:
 10113 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.82\sources\lwmod.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  divisor         2    0[COMMON] unsigned int 
 10116 ;;  dividend        2    2[COMMON] unsigned int 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  counter         1    5[COMMON] unsigned char 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  2    0[COMMON] unsigned int 
 10121 ;; Registers used:
 10122 ;;		wreg, status,2, status,0
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10128 ;;      Params:         4       0       0       0       0
 10129 ;;      Locals:         1       0       0       0       0
 10130 ;;      Temps:          1       0       0       0       0
 10131 ;;      Totals:         6       0       0       0       0
 10132 ;;Total ram usage:        6 bytes
 10133 ;; Hardware stack levels used:    1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_isr1
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           psect	text1674
 10141                           	file	"C:\Program Files\HI-TECH Software\PICC\9.82\sources\lwmod.c"
 10142                           	line	5
 10143                           	global	__size_of___lwmod
 10144  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 10145                           	
 10146  0F31                     ___lwmod:	
 10147                           	opt	stack 0
 10148                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10149                           	line	8
 10150                           	
 10151  0F31                     i1l10238:	
 10152  0F31  0873               	movf	(___lwmod@divisor+1),w
 10153  0F32  0472               	iorwf	(___lwmod@divisor),w
 10154  0F33  1903               	skipnz
 10155  0F34  2F36               	goto	u342_21
 10156  0F35  2F37               	goto	u342_20
 10157  0F36                     u342_21:
 10158  0F36  2F6D               	goto	i1l10256
 10159  0F37                     u342_20:
 10160                           	line	9
 10161                           	
 10162  0F37                     i1l10240:	
 10163  0F37  01F7               	clrf	(___lwmod@counter)
 10164  0F38  1403               	bsf	status,0
 10165  0F39  0DF7               	rlf	(___lwmod@counter),f
 10166                           	line	10
 10167  0F3A  2F47               	goto	i1l10246
 10168                           	
 10169  0F3B                     i1l7426:	
 10170                           	line	11
 10171                           	
 10172  0F3B                     i1l10242:	
 10173  0F3B  3001               	movlw	01h
 10174                           	
 10175  0F3C                     u343_25:
 10176  0F3C  1003               	clrc
 10177  0F3D  0DF2               	rlf	(___lwmod@divisor),f
 10178  0F3E  0DF3               	rlf	(___lwmod@divisor+1),f
 10179  0F3F  3EFF               	addlw	-1
 10180  0F40  1D03               	skipz
 10181  0F41  2F3C               	goto	u343_25
 10182                           	line	12
 10183                           	
 10184  0F42                     i1l10244:	
 10185  0F42  3001               	movlw	(01h)
 10186  0F43  00F6               	movwf	(??___lwmod+0)+0
 10187  0F44  0876               	movf	(??___lwmod+0)+0,w
 10188  0F45  07F7               	addwf	(___lwmod@counter),f
 10189  0F46  2F47               	goto	i1l10246
 10190                           	line	13
 10191                           	
 10192  0F47                     i1l7425:	
 10193                           	line	10
 10194                           	
 10195  0F47                     i1l10246:	
 10196  0F47  1FF3               	btfss	(___lwmod@divisor+1),(15)&7
 10197  0F48  2F4A               	goto	u344_21
 10198  0F49  2F4B               	goto	u344_20
 10199  0F4A                     u344_21:
 10200  0F4A  2F3B               	goto	i1l10242
 10201  0F4B                     u344_20:
 10202  0F4B  2F4D               	goto	i1l10248
 10203                           	
 10204  0F4C                     i1l7427:	
 10205  0F4C  2F4D               	goto	i1l10248
 10206                           	line	14
 10207                           	
 10208  0F4D                     i1l7428:	
 10209                           	line	15
 10210                           	
 10211  0F4D                     i1l10248:	
 10212  0F4D  0873               	movf	(___lwmod@divisor+1),w
 10213  0F4E  0275               	subwf	(___lwmod@dividend+1),w
 10214  0F4F  1D03               	skipz
 10215  0F50  2F53               	goto	u345_25
 10216  0F51  0872               	movf	(___lwmod@divisor),w
 10217  0F52  0274               	subwf	(___lwmod@dividend),w
 10218  0F53                     u345_25:
 10219  0F53  1C03               	skipc
 10220  0F54  2F56               	goto	u345_21
 10221  0F55  2F57               	goto	u345_20
 10222  0F56                     u345_21:
 10223  0F56  2F5E               	goto	i1l10252
 10224  0F57                     u345_20:
 10225                           	line	16
 10226                           	
 10227  0F57                     i1l10250:	
 10228  0F57  0872               	movf	(___lwmod@divisor),w
 10229  0F58  02F4               	subwf	(___lwmod@dividend),f
 10230  0F59  0873               	movf	(___lwmod@divisor+1),w
 10231  0F5A  1C03               	skipc
 10232  0F5B  03F5               	decf	(___lwmod@dividend+1),f
 10233  0F5C  02F5               	subwf	(___lwmod@dividend+1),f
 10234  0F5D  2F5E               	goto	i1l10252
 10235                           	
 10236  0F5E                     i1l7429:	
 10237                           	line	17
 10238                           	
 10239  0F5E                     i1l10252:	
 10240  0F5E  3001               	movlw	01h
 10241                           	
 10242  0F5F                     u346_25:
 10243  0F5F  1003               	clrc
 10244  0F60  0CF3               	rrf	(___lwmod@divisor+1),f
 10245  0F61  0CF2               	rrf	(___lwmod@divisor),f
 10246  0F62  3EFF               	addlw	-1
 10247  0F63  1D03               	skipz
 10248  0F64  2F5F               	goto	u346_25
 10249                           	line	18
 10250                           	
 10251  0F65                     i1l10254:	
 10252  0F65  3001               	movlw	low(01h)
 10253  0F66  02F7               	subwf	(___lwmod@counter),f
 10254  0F67  1D03               	btfss	status,2
 10255  0F68  2F6A               	goto	u347_21
 10256  0F69  2F6B               	goto	u347_20
 10257  0F6A                     u347_21:
 10258  0F6A  2F4D               	goto	i1l10248
 10259  0F6B                     u347_20:
 10260  0F6B  2F6D               	goto	i1l10256
 10261                           	
 10262  0F6C                     i1l7430:	
 10263  0F6C  2F6D               	goto	i1l10256
 10264                           	line	19
 10265                           	
 10266  0F6D                     i1l7424:	
 10267                           	line	20
 10268                           	
 10269  0F6D                     i1l10256:	
 10270  0F6D  0875               	movf	(___lwmod@dividend+1),w
 10271  0F6E  01F3               	clrf	(?___lwmod+1)
 10272  0F6F  07F3               	addwf	(?___lwmod+1)
 10273  0F70  0874               	movf	(___lwmod@dividend),w
 10274  0F71  01F2               	clrf	(?___lwmod)
 10275  0F72  07F2               	addwf	(?___lwmod)
 10276                           
 10277  0F73  2F74               	goto	i1l7431
 10278                           	
 10279  0F74                     i1l10258:	
 10280                           	line	21
 10281                           	
 10282  0F74                     i1l7431:	
 10283  0F74  0008               	return
 10284                           	opt stack 0
 10285                           GLOBAL	__end_of___lwmod
 10286  0F75                     	__end_of___lwmod:
 10287 ;; =============== function ___lwmod ends ============
 10288                           
 10289                           	signat	___lwmod,8314
 10290                           psect	text1675,local,class=CODE,delta=2
 10291                           global __ptext1675
 10292  0000                     __ptext1675:
 10293                           	global	btemp
 10294  007E                     	btemp set 07Eh
 10295                           
 10296                           	DABS	1,126,2	;btemp
 10297                           	global	wtemp0
 10298  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed May 22 23:59:02 2013

            __end_of_lookForVictim 0EF0          __end_of_lcd_write_control 09C8  
        __end_of_updateOrientation 097C                                  pc 0002  
                               _GO 00FA                                 _RD 0C60  
                               _WR 0C61                       ___awdiv@sign 0036  
                               fsr 0004                ___wmul@multiplicand 002C  
                 ??_getOrientation 002A                                l693 0515  
                              l694 052B                                l695 0541  
                              l696 0556                                l697 055F  
                              _GIE 005F                                _RB0 0030  
                              _RE0 0048                                _RE1 0049  
                              _RE2 004A                                _RX9 00C6  
                              _TX9 04C6                    ??_getVictimZone 002B  
                              fsr0 0004                                indf 0000  
               drive@highByteSpeed 0032          lcd_write_1_digit_bcd@data 002D  
                  ?_lcd_set_cursor 0072             __end_of_updateLocation 079E  
                             l1400 09DD                               l2200 04DD  
                             l1403 0E7B                               l2132 095F  
                             l1404 0E7B                               l2140 0455  
                             l1405 0E80                               l1406 0EAF  
                             l2143 0943                               l2135 0450  
                             l2160 073C                               l2136 03E2  
                             l2152 0A0F                               l2129 0D0F  
                             l2161 073D                               l2137 0431  
                             l2170 0D46                               l2138 0455  
                             l2139 044F                               l2155 0B46  
                             l2180 0B6F                               l2164 0BC1  
                             l2173 0E70                               l2149 0B98  
                             l1390 07A2                               l2158 0721  
                             l1391 07D8                               l2167 0FB9  
                             l2159 073D                               l2183 0369  
                             l2176 097B                               l1392 07A8  
                             l2184 0351                               l2192 046F  
                             l2177 097B                               l1393 07AE  
                             l2185 037E                               l2193 0457  
                             l1394 07B4                               l2186 0397  
                             l2194 0484                               l1395 07BA  
                             l2187 037F                               l2195 04A8  
                             l1396 07C0                               l2188 03AC  
                             l2196 0490                               l1389 07C7  
                             l1397 07F2                               l2189 03CA  
                             l2198 04D1                               l2199 04D2  
                             l6003 098D                               l2902 07FD  
                             l6006 0DF4                               l3711 0CD8  
                             l3721 0EEF                               l5306 0B1E  
                             l3714 0A2B                               l2914 0BEC  
                             l3722 0ECE                               l3730 02FF  
                             l3723 0EEE                               l3731 0328  
                             l4532 05CB                               l4540 057A  
                             l3724 0EEF                               l3732 032E  
                             l3740 0AEE                               l4541 0587  
                             l4533 0564                               l3717 0C45  
                             l3733 033C                               l3741 0AF4  
                             l4526 0948                               l4550 0596  
                             l4542 057B                               l4534 0571  
                             l5270 0A8A                               l3718 0C45  
                             l3750 0768                               l3742 0AF6  
                             l4551 059A                               l4543 058F  
                             l4535 0565                               l5271 0A94  
                             l3751 0771                               l3727 02CA  
                             l4560 05BC                               l4552 05A5  
                             l4544 0580                               l4536 0579  
                             l3760 0E30                               l5272 0AAA  
                             l3752 079D                               l3728 02D0  
                             l3736 0ADA                               l5281 0A6D  
                             l4529 094D                               l4561 05C8  
                             l4553 05B2                               l4545 0585  
                             l4537 056A                               l3761 0E32  
                             l5265 09E9                               l3745 0773  
                             l3729 02F9                               l3737 0AF6  
                             l5282 0A6C                               l4562 05C1  
                             l4554 05A6                               l4546 0590  
                             l4538 056F                               l5266 09F4  
                             l2890 09A0                               l3746 0745  
                             l3738 0AE4                               l3770 0650  
                             l5283 0A75                               l4539 05DC  
                             l4563 05C9                               l4555 05BA  
                             l4547 059C                               l3755 0E07  
                             l5275 0DA8                               l3747 0785  
                             l3739 0AF5                               l3771 0628  
                             l5284 0A88                               l4564 05DE  
                             l4556 05AB                               l4548 0591  
                             l3756 0E32                               l5276 0D84  
                             l3764 0A67                               l3748 0752  
                             l3780 0656                               l3772 061E  
                             l4557 05B0                               l4549 05A4  
                             l3757 0E1A                               l5269 0A8B  
                             l5277 0DB7                               l2893 096A  
                             l3765 0A67                               l3749 075B  
                             l3773 0635                               l4558 05BB  
                             l3758 0E31                               l5278 0DB7  
                             l3774 061F                               l4559 05C3  
                             l3759 0E2C                               l2887 09C7  
                             l3775 0620                               l2896 0AC2  
                             l3768 0651                               l3776 0621  
                             l2897 0AAF                               l3777 063B  
                             l3769 0608                               l7410 0C11  
                             l2898 0ACF                               l3778 064F  
                             l7411 0C18                               l2899 0ACF  
                             l3779 0656                               l6700 0074  
                             l6701 01E2                               l6710 01D7  
                             l6702 00BB                               l6703 01E1  
                             l6711 01DD                               l7408 0BF2  
                             l6704 0102                               l7409 0BFC  
                             l6705 01E0                               l6722 0FEA  
                             l6706 0149                               l6714 0A44  
                             l6723 0FD6                               l6707 01DF  
                             l6715 0A47                               l6724 0FF1  
                             l6708 0190                               l6716 0A47  
                             l6725 0FFF                               l6709 01DE  
                             l7550 06BD                               l7551 068F  
                             l6719 0CA2                               l7552 0683  
                             l7553 0694                               l7554 0695  
                             l7555 06AE                               l7556 06BC  
                             l7548 0669                               l7557 06C7  
                             l7549 0677                               l7558 06CE  
                             l6697 002D                               l6698 01E3  
                             l6699 01E3                               _CHS0 00FB  
                             _CHS1 00FC                               _CHS2 00FD  
                             STR_1 0806                               STR_2 0817  
                             _BRGH 04C2                               _CREN 00C4  
                             u4200 0E0D                               u5000 060E  
                             u4201 0E0C                               u4130 0A75  
                             u4210 0E13                               u5010 0649  
                             u4131 0A74                               u4211 0E12  
                             u5011 0648                               u4140 095A  
                             u4220 0E20                               u5020 0655  
                             u4141 0959                               u4221 0E1F  
                             u5021 0654                               u4150 0978  
                             u4230 0E25                               u4151 0977  
                             u4231 0E24                               u4400 067F  
                             u4401 067E                               u5107 0FC9  
                             u4180 0DFB                               u4340 0BF6  
                             u4420 0693                               u4181 0DFA  
                             u4341 0BF5                               u4421 0692  
                             u5117 0FDF                               u5037 0E6A  
                             u4190 0E01                               u4270 09E4  
                             u4510 0FF0                               u4191 0E00  
                             u4271 09E3                               u4415 0684  
                             u5127 0FF8                               u4511 0FEF  
                             u5047 0D40                               u4280 09EF  
                             u4440 06A6                               u4520 0D90  
                             u4600 019F                               u4281 09EE  
                             u4441 06A5                               u4505 0E9B  
                             u5137 0B50                               u4601 019E  
                             u5057 0FA5                               u4370 0C10  
                             u4530 0DB6                               u4610 0513  
                             u4371 0C0F                               u4355 0BFD  
                             u4435 0696                               u5147 099C  
                             u4531 0DB5                               u4611 0512  
                             u5067 0FB3                               _PEIE 005E  
                             u4460 06BB                               u4380 0660  
                             u4540 0024                               u4620 0525  
                             u4700 0A4E                               u4365 0C04  
                             u4461 06BA                               u4445 06A2  
                             u4381 065F                               u5157 0CE2  
                             u4605 019B                               u4541 0023  
                             u4621 0524                               u5077 07DC  
                             u4701 0A4D                               u4470 06C1  
                             u4390 066D                               u4550 003C  
                             u4630 0529                               u4710 0A54  
                             u4455 06AF                               u4391 066C  
                             u5167 09DB                               u5087 0A18  
                             u4535 0DB2                               u4551 003B  
                             u4631 0528                               u4711 0A53  
                             u4480 0A94                               u4560 0083  
                             u4640 053B                               u4720 070E  
                             u4800 0441                               u4481 0A93  
                             u5097 09C2                               u4561 0082  
                             u4545 0020                               u4641 053A  
                             u4721 070D                               u4801 0440  
                             u4490 0E7F                               u4570 00CA  
                             u4650 053F                               u4730 0729  
                             u4810 0454                               u4491 0E7E  
                             u4571 00C9                               u4555 0038  
                             u4651 053E                               u4731 0728  
                             u4811 0453                               _RCIE 0465  
                             u4580 0111                               u4660 0551  
                             u4740 0C1D                               u4820 037D  
                             u4900 02C3                               _RCIF 0065  
                             u4581 0110                               u4565 007F  
                             u4661 0550                               u4741 0C1C  
                             u4805 043D                               u4821 037C  
                             u4901 02C2                               u4590 0158  
                             u4670 0555                               u4750 0C27  
                             u4830 03AB                               u4910 02E8  
                             u4591 0157                               u4575 00C6  
                             u4671 0554                               u4751 0C26  
                             u4831 03AA                               u4911 02E6  
                             u4680 055A                               u4760 0C31  
                             u4840 0483                               u4585 010D  
                             u4681 0559                               u4761 0C30  
                             u4825 0379                               u4841 0482  
                             u4690 0ACE                               u4770 0EB4  
                             u4850 04BC                               u4930 02ED  
                             u4595 0154                               u4691 0ACD  
                             u4771 0EB3                               u4835 03A7  
                             u4851 04BB                               u4931 02EC  
                             u4780 0EB8                               u4860 04D0  
                             u4940 0317                               u4924 02E9  
                             u4781 0EB7                               u4861 04CF  
                             u4845 047F                               u4941 0315  
                             u4790 041F                               u4870 0A40  
                             u4791 041E                               u4855 04B8  
                             u4871 0A3F                               u4960 031C  
                             u4880 02BE                               u4865 04CC  
                             u4961 031B                               u4881 02BC  
                             u4954 0318                               u4970 0AD4  
                             _OERR 00C1                               u4875 0A3C  
                             u4971 0AD3                               u4980 0ADE  
                             u4981 0ADD                               u4894 02BF  
                             u4990 0AE8                               u4991 0AE7  
                             _TMR0 0001                               _SPEN 00C7  
                             _TXIE 0464                               _WREN 0C62  
                             _TXEN 04C5                               _TXIF 0064  
                             _SYNC 04C4             __end_of_lcd_write_data 09A1  
                             _isr1 01E4                               _main 05DF  
                             _home 0386                               _init 0CA3  
                             _node 005E                drive@highByteRadius 002D  
                             btemp 007E                               start 0012  
                  rotateIR@stepNum 002F              _lcd_write_1_digit_bcd 07F3  
                ?_driveForDistance 0035                        _turnRight90 0E33  
                            l11000 0580                              l11010 059B  
                            l11002 0586                              l11020 05B2  
                            l11012 059C                              l11004 0587  
                            l11022 05BC                              l11014 05A6  
                            l11006 0591                              l11030 05CB  
                            l11024 05C2                              l11016 05AB  
                            l11008 0596                              l11032 05DC  
                            l11040 0E01                              l11200 0660  
                            l11034 05DE                              l11026 05C3  
                            l11018 05B1                              l11050 0E20  
                            l11042 0E07                              l11210 0679  
                            l11202 0669                              l11028 05CA  
                            l11052 0E25                              l11044 0E0D  
                            l11036 0DF5                              l11140 09E4  
                            l11220 0695                              l11212 067F  
                            l11204 066D                              l11300 0B67  
                            l11046 0E13                              l11038 0DFB  
                            l11150 09F1                              l11142 09E6  
                            l11222 06A6                              l11214 0683  
                            l11230 06BD                              l11206 0672  
                            l11310 0FD7                              l11302 0FBD  
                            l11048 0E1A                              l11152 09F4  
                            l11144 09E8                              l11232 06C1  
                            l11224 06AC                              l11216 068A  
                            l11208 0677                              l11240 0A8B  
                            l11312 0FDB                              l11304 0FC1  
                            l11320 09B7                              l11400 01D7  
                            l11146 09E9                              l11138 09DE  
                            l11234 06C7                              l11226 06AE  
                            l11218 068F                              l11250 0AA8  
                            l11242 0A95                              l11314 0FE4  
                            l11306 0FC3                              l11322 09BA  
                            l11330 0A1F                              l11402 01DC  
                            l11410 0513                              l11148 09EF  
                            l11236 06CE                              l11228 06B5  
                            l11252 0AAA                              l11244 0A9F  
                            l11260 0EA8                              l11316 0FF1  
                            l11308 0FD0                              l11324 09BC  
                            l11332 0A25                              l11340 0D9F  
                            l11420 052B                              l11412 0515  
                            l11404 04DE                              l11500 0BDA  
                            l11190 0BF6                              l11246 0AA3  
                            l11238 0A89                              l11262 0EAF  
                            l11254 0E71                              l11270 09D3  
                            l11318 0FF2                              l11326 09BD  
                            l11334 097F                              l11342 0DA8  
                            l11350 002C                              l11430 054B  
                            l11422 0535                              l11414 051F  
                            l11406 04DF                              l11502 0BE0  
                            l11510 0A4E                              l11192 0C03  
                            l11248 0AA7                              l11256 0E77  
                            l11272 09D7                              l11264 09C8  
                            l11280 0CF7                              l11328 0A10  
                            l11336 0D7F                              l11360 0074  
                            l11352 002D                              l11344 0015  
                            l11440 055F                              l11432 0551  
                            l11424 053B                              l11416 0525  
                            l11408 050D                              l11504 0BE6  
                            l11512 0A54                              l11520 06EC  
                            l11600 0EE5                 ??_driveForDistance 0037  
                            l11194 0C11                              l11186 0BED  
                            l11258 0E80                              l11266 09CB  
                            l11282 0CFF                              l11274 0CDC  
                            l11290 0996                              l11338 0D84  
                            l11370 00CA                              l11362 0083  
                            l11354 003C                              l11346 0024  
                            l11434 0555                              l11426 053F  
                            l11418 0529                              l11450 07C7  
                            l11442 07A1                              l11506 0DB8  
                            l11514 0A65                              l11530 0729  
                            l11522 06FB                              l11610 0754  
                            l11602 073E                              l11196 0C18  
                            l11188 0BF2                              l11268 09CF  
                            l11284 0D07                              l11276 0CE9  
                            l11292 0997                              l11380 0147  
                            l11372 0100                              l11364 00B9  
                            l11356 0072                              l11348 002B  
                            l11436 055A                              l11428 0541  
                            l11444 07C0                              l11452 07D8  
                            l11460 0964                              l11508 0A48  
                            l11524 0706                              l11516 06CF  
                            l11532 0C74                              l11540 0CA6  
                            l11620 0772                              l11612 075B  
                            l11604 0745                              l11700 0B70  
                            l10910 0A6D                              l11198 0659  
                            l11278 0CEF                              l11286 0991  
                            l11294 0B4A                              l11390 018F  
                            l11382 0148                              l11374 0101  
                            l11366 00BA                              l11358 0073  
                            l11438 055C                              l11454 07DE  
                            l11446 07C5                              l11462 0F75  
                            l11470 0D38                              l11526 070E  
                            l11518 06DB                              l11534 0C9B  
                            l11550 0CB9                              l11542 0CA9  
                            l11614 0761                              l11606 074B  
                            l11622 0773                              l11630 03D2  
                            l11702 0B7C                              l11710 09F5  
                            l10912 0A76                              l10920 0956  
                            l11288 0994                              l11296 0B57  
                            l11392 0190                              l11384 0149  
                            l11376 0102                              l11368 00BB  
                            l11456 07F2                              l11448 07C6  
                            l11464 0F9D                              l11472 0E33  
                            l11480 0ABB                              l11528 0721  
                            l11536 0CA2                              l11560 0CC7  
                            l11552 0CBA                              l11544 0CAE  
                            l11616 0768                              l11608 0752  
                            l11624 0785                              l11640 041F  
                            l11632 03E2                              l11704 0B81  
                            l11712 0A01                              l11720 0B30  
                            l11800 0640                              l10914 0A7E  
                            l10922 095A                              l10930 0943  
                            l11298 0B5F                              l11394 019F  
                            l11386 0158                              l11378 0111  
                            l11458 0963                              l11466 0FAB  
                            l11474 0E62                              l11482 0AC2  
                            l11490 0BC9                              l11562 0CC8  
                            l11554 0CBC                              l11546 0CB3  
                            l11538 0CA3                              l11570 0C19  
                            l11618 076A                              l11650 044D  
                            l11642 042F                              l11634 0402  
                            l11626 03CB                              l11706 0B87  
                            l11714 0A0C                              l11722 0B36  
                            l11730 0BAA                              l11802 0645  
                            l10916 0A84                              l10908 0A6B  
                            l10924 095C                              l10932 096E  
                            l11396 01D5                              l11388 018E  
                            l11468 0D10                              l11476 0AAE  
                            l11484 07F6                              l11492 0BCA  
                            l11564 0CC9                              l11556 0CC0  
                            l11548 0CB7                              l11580 0C38  
                            l11572 0C1D                              l11644 0431  
                            l11636 0410                              l11652 0450  
                            l11628 03D1                              l11660 0369  
                            l11708 0B92                              l11724 0B41  
                            l11716 0B1F                              l11732 0BB0  
                            l11740 02BF                              l11804 0649  
                            l10918 0A87                              l10926 095F  
                            l10934 0972                              l11398 01D6  
                            l10870 055C                              l11478 0AAF  
                            l11494 0BCD                              l11486 0BC2  
                            l11566 0CCE                              l11558 0CC4  
                            l11582 0C3E                              l11574 0C27  
                            l11590 0EBE                              l11646 0441  
                            l11638 0416                              l11670 03BF  
                            l11662 037F                              l11654 033D  
                            l11718 0B2B                              l11734 0BBB  
                            l11726 0B99                              l11750 02ED  
                            l11742 02C3                              l11806 0651  
                            l10928 093F                              l10936 0978  
                            l10960 0B03                              l10880 09F3  
                            l10872 055E                              l11496 0BCE  
                            l11488 0BC6                              l11568 0CD3  
                            l11576 0C31                              l11592 0EC1  
                            l11584 0EB0                              l11648 044C  
                            l11664 0397                              l11656 0342  
                            l11680 0490                              l11672 0456  
                            l11728 0BA5                              l11760 031C  
                            l11752 02F3                              l11744 02CA  
                            l11736 02AE                              l10874 095C  
                            l10970 0B0F                              l10962 0B05  
                            l10954 0AF7                              l11498 0BD4  
                            l11578 0C37                              l11594 0EC7  
                            l11586 0EB4                              l11666 03AC  
                            l11658 0351                              l11682 04A8  
                            l11674 0457                              l11690 0A40  
                            l11762 0322                              l11754 02F9  
                            l11746 02DE                              l11738 02B4  
                            l11770 0ADE                              l10876 095E  
                            l10972 0B10                              l10964 0B06  
                            l10956 0AFA                              l10980 0944  
                            l11588 0EB8                              l11596 0ECE  
                            l11668 03B1                              l11684 04BC  
                            l11676 046F                              l11692 0A42  
                            l11764 0328                              l11756 030D  
                            l11748 02E9                              l11772 0AE8  
                            l11780 05F5                              l10974 0B13  
                            l10966 0B09                              l10958 0B02  
                            l10982 0948                              l10990 0565  
                            l10878 09F1                              l11598 0EDF  
                            l11686 04D2                              l11678 0484  
                            l11694 0A43                              l11758 0318  
                            l11774 0AEE                              l11766 0AD0  
                            l11790 0621                              l11782 0601  
                            l10976 0B14                              l10968 0B0C  
                            l10984 0949                              l10992 056A  
                            l11696 0A44                              l11688 0A2C  
                            l11768 0AD4                              l11792 0627  
                            l11784 0608                              l11776 05DF  
                            l10978 0B15                              l10986 094D  
                            l10994 0570                              l11698 0A46  
                            l11794 0628                              l11786 060E  
                            l11778 05EF                              l10996 0571  
                            l10988 0563                              l11796 0635  
                            l11788 0618                              l10998 057B  
                            l11798 063B                              ?_isr1 0072  
                            ?_main 0072                              ?_init 0072  
                  __end_of___awdiv 06CF               __size_of_checkIfHome 0020  
                            _EEADR 010D                              _CARRY 0018  
                  ___awdiv@divisor 0030                    __end_of___lwmod 0F75  
                  ___awdiv@counter 0035                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _TRISE 0089  
                            _TXREG 0019             lcd_write_data@databyte 002C  
                  __end_of_goRight 0BC2                 _getSuccessfulDrive 0956  
                  __end_of_convert 01E4                              _drive 0CD9  
                  ?_updateLocation 0072                              _start 0055  
                   __pbitbssCOMMON 0380                    __end_of_waitFor 0B70  
                            pclath 000A                ?_getSuccessfulDrive 0072  
                  ?_lcd_write_data 0072                  ?_adc_read_channel 00DE  
                  _successfulDrive 038B                              status 0003  
                            wtemp0 007E                  ?_frontWallCorrect 0072  
               ??_adc_read_channel 00E0               __end_of_goToNextCell 0AF7  
               ??_frontWallCorrect 00E6         __size_of_lcd_write_control 0014  
                     __end_of_isr1 02AE                       __end_of_main 0659  
                     __end_of_init 0CD9         __size_of_updateOrientation 0011  
             ??_getSuccessfulDrive 002A                             ??_isr1 0020  
                           ??_main 0045                             ??_init 0035  
             __size_of_detectCliff 0082                             _ADCON0 001F  
                           _ADCON1 009F                             ?_drive 002C  
                           _ADRESH 001E                             _ADRESL 009E  
                           _EEDATA 010C                             _EECON1 018C  
                           _EECON2 018D                   ___awdiv@dividend 0032  
                 __end_of_adc_read 0EB0                             i1l3700 0233  
                           i1l3701 0259                             i1l3702 0258  
                           i1l3703 025E                             i1l3704 027C  
                           i1l3705 027B                             i1l3706 02A1  
                           i1l3707 02A0                             i1l3708 02A2  
                           i1l3697 02A2                             i1l3698 0209  
                           i1l3699 0222                             i1l7430 0F6C  
                           i1l7431 0F74                             i1l7424 0F6D  
                           i1l7425 0F47                             i1l7426 0F3B  
                           i1l7427 0F4C                             i1l7428 0F4D  
                           i1l7429 0F5E                             u320_20 0286  
                           u312_20 01E8                             u320_21 0285  
                           u312_21 01E7                             u321_20 029C  
                           u313_20 0207                             u321_21 029B  
                           u313_21 0206                             u314_20 0220  
                           u314_21 021F                             i1l9950 01F2  
                           i1l9942 01E4                             i1l9960 0239  
                           u315_20 0239                             i1l9952 0207  
                           i1l9944 01E8                             u315_21 0238  
                           i1l9970 025E                             i1l9962 023D  
                           i1l9954 0209                             i1l9946 01E9  
                           i1l9972 0262                             i1l9980 027C  
                           i1l9964 0253                             i1l9956 0220  
                           i1l9948 01F1                             i1l9990 0296  
                           i1l9982 0280                             i1l9974 026A  
                           i1l9966 0256                             i1l9958 0222  
                           i1l9992 029C                             i1l9984 0286  
                           i1l9976 0270                             i1l9968 025A  
                           u316_20 0253                             u316_21 0252  
                           i1l9986 028E                             i1l9978 0276  
                           i1l9988 0292                             u317_20 0262  
                           u317_21 0261                             u342_20 0F37  
                           u318_20 0276                             u342_21 0F36  
                           u318_21 0275                             u319_20 0280  
                           u319_21 027F                             u343_25 0F3C  
                           u344_20 0F4B                             u344_21 0F4A  
                           u345_20 0F57                             u345_21 0F56  
                           u345_25 0F53                             u346_25 0F5F  
                           u347_20 0F6B                             u347_21 0F6A  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _SSPCON 0014                             _SSPBUF 0013  
                 convert@adc_value 0041                  rotateIR@direction 002A  
                 _rightWallCorrect 033D             ?_lcd_write_1_digit_bcd 0072  
                 __end_of_findWall 0A48                   __end_of_lcd_init 0BED  
                           ___wmul 0BED                          ??___awdiv 0034  
                           _goLeft 0B1F                             _finalX 005B  
                           _finalY 005C                          ??___lwmod 0076  
                           _xCoord 007A                             _yCoord 007B  
                           _readIR 0C74                   __end_of_init_adc 09DE  
                 ___awdiv@quotient 0037           __end_of_lcd_write_string 0AD0  
                           _moving 0388                          ??_goRight 003F  
                           _rxfifo 0045                             clrloop 094F  
                           _txfifo 00CE                             _rxiptr 0078  
                           _rxoptr 005F                             _txiptr 0079  
                        ??_convert 0043                             _txoptr 0062  
                 __end_of_ser_init 0B1F                       __pdataCOMMON 007A  
                 __end_of_ser_isrx 09F5                             saved_w 007E  
                        ??_waitFor 002E                   __end_of_rotateIR 1000  
                lcd_write_string@s 002E              play_iCreate_song@song 002C  
                    rotateIR@steps 002E                     __pcstackCOMMON 0072  
                     __pidataBANK1 0C46                       __pidataBANK3 0D47  
                    __end_of_drive 0D10                  _play_iCreate_song 097C  
               __size_of_goForward 001B                 __size_of_getFinalX 0005  
               __size_of_getFinalY 0005                   ??_lcd_set_cursor 002D  
               __size_of_goReverse 006F                 ?_play_iCreate_song 0072  
               __size_of_findWalls 008F                         _goBackward 0B70  
                          ??_drive 002F                ??_play_iCreate_song 002C  
                       __pbssBANK0 0045                         __pbssBANK1 00CE  
            __size_of_goToNextCell 0027                 __size_of_initSongs 003D  
                drive@lowByteSpeed 002C                         __pmaintext 05DF  
                          ?___wmul 002A                            ?_goLeft 0072  
                       __pintentry 0004          __end_of_play_iCreate_song 098E  
                          ?_readIR 00E2                       ?_turnRight90 0072  
                       __ptext1630 033D                         __ptext1622 0AD0  
                       __ptext1631 03CB                         __ptext1623 02AE  
                       __ptext1640 0BC2                         __ptext1632 073E  
                       __ptext1624 0B99                         __ptext1641 07F3  
                       __ptext1633 0EB0                         __ptext1625 0B1F  
                       __ptext1650 0D7F                         __ptext1642 0AAB  
                       __ptext1634 0C19                         __ptext1626 09F5  
                       __ptext1651 097C                         __ptext1643 0E33  
                       __ptext1635 0CA3                         __ptext1627 0B70  
                       __ptext1660 0A89                         __ptext1652 0A10  
                       __ptext1644 0D10                         __ptext1636 0C74  
                       __ptext1628 0A2C                         __ptext1661 0659  
                       __ptext1653 09B4                         __ptext1645 0F75  
                       __ptext1637 06CF                         __ptext1629 0456  
                       __ptext1670 093F                         __ptext1662 0BED  
                       __ptext1654 0FBA                         __ptext1646 0960  
                       __ptext1638 0A48                         __ptext1671 0956  
                       __ptext1663 09DE                         __ptext1655 0B47  
                       __ptext1647 079E                         __ptext1639 0DB8  
                       __ptext1672 0A68                         __ptext1664 0DF5  
                       __ptext1656 098E                         __ptext1648 04DE  
                       __ptext1673 01E4                         __ptext1665 0560  
                       __ptext1657 0CD9                         __ptext1649 0015  
                       __ptext1674 0F31                         __ptext1666 0949  
                       __ptext1658 09C8                         __ptext1675 0000  
                       __ptext1667 0944                         __ptext1659 0E71  
                       __ptext1668 0AF7                         __ptext1669 096B  
               __size_of_ser_getch 0022                          ?_adc_read 0039  
               __size_of_ser_putch 0021           _checkForFinalDestination 0C19  
                          i1l10240 0F37                            i1l10250 0F57  
                          i1l10242 0F3B                            i1l10252 0F5E  
                          i1l10244 0F42                            i1l10254 0F65  
                          i1l10246 0F47                            i1l10238 0F31  
                          i1l10248 0F4D                            i1l10256 0F6D  
                          i1l10258 0F74                   ??_updateLocation 002E  
            __end_of_getVictimZone 05DF                       _goToNextCell 0AD0  
                 ??_lcd_write_data 002A                          ?_findWall 0072  
        __size_of_driveForDistance 008B                     waitFor@lowByte 002D  
           __size_of_lookForVictim 0040                          ?_lcd_init 0072  
                          _SSPSTAT 0094                          ?_init_adc 0072  
                __end_of_goForward 0A10                  __end_of_getFinalX 0949  
                __end_of_getFinalY 094E                  __end_of_goReverse 073E  
                       _initIRobot 0A10                  __end_of_findWalls 033D  
                        ?_ser_init 0072                          ?_ser_isrx 0072  
                          ___awdiv 0659                          ?_rotateIR 002A  
                  __size_of___wmul 002C                      ??_checkIfHome 0033  
                          ___lwmod 0F31                    __size_of_goLeft 0028  
                  __size_of_readIR 002F          __size_of_adc_read_channel 0055  
                          _goRight 0B99                         ??_adc_read 003B  
        __size_of_frontWallCorrect 0088                            _convert 0015  
                      waitFor@type 0031                  __end_of_initSongs 0DF5  
     driveForDistance@moveDistance 0035           __end_of_rightWallCorrect 03CB  
                          _waitFor 0B47                            _ser_tmp 0061  
                          _vicZone 0063                        ?_goBackward 0072  
                          _wayWent 0065                driveForDistance@low 003E  
                      ser_putArr@i 0033                         ??_findWall 0045  
          __size_of_getOrientation 0005                         ??_lcd_init 002D  
             end_of_initialization 0F2D                  __end_of_ser_getch 0AAB  
                          init_ram 09A5                     _superMarioBros 00A0  
                       ??_init_adc 002A            ??_lcd_write_1_digit_bcd 002D  
                __end_of_ser_putch 0A89                         ??_ser_init 002A  
                       ??_ser_isrx 002A                         _ser_putArr 0D7F  
                    _lookForVictim 0EB0                         _sensorData 0060  
                       ??_rotateIR 002B         __size_of_play_iCreate_song 0012  
                    ??_detectCliff 002C        __size_of_getSuccessfulDrive 000A  
                ?_lcd_write_string 0072                         _victimZone 0064  
               ??_lcd_write_string 002D                __end_of_checkIfHome 0A68  
                adc_read@adc_value 003F                         _updateNode 0DF5  
                      ?_initIRobot 0072                         _turnLeft90 0D10  
                   ?_lookForVictim 0072                         _turnAround 0F75  
              __size_of_goBackward 0029                     __end_of___wmul 0C19  
                   __end_of_goLeft 0B47                      __pidataCOMMON 07FE  
                   __end_of_readIR 0CA3               __size_of_turnRight90 003E  
              __end_of_detectCliff 0560                start_initialization 0EF0  
                 _driveForDistance 03CB              lcd_set_cursor@address 002D  
                      ?_ser_putArr 002C                     _sensorDetected 038A  
       ??_checkForFinalDestination 002E                     _RTC_FLAG_500MS 0382  
                         ??___wmul 002E                           ??_goLeft 003F  
                      __pdataBANK1 00A0                        __pdataBANK3 0190  
                      _checkIfHome 0A48                           ??_readIR 0045  
                 _adc_read_channel 079E                   _frontWallCorrect 0456  
                __size_of_adc_read 003F                        __pbssCOMMON 0078  
                      ?_updateNode 0072                      __pcstackBANK0 0020  
                    __pcstackBANK1 00DE                __size_of_initIRobot 001C  
                   _getOrientation 093F                  __size_of_findWall 001C  
                __size_of_lcd_init 002B                 drive@lowByteRadius 002E  
                        _champions 00B9                  __size_of_init_adc 0016  
                  ??_lookForVictim 002E                          _goForward 09F5  
                      ?_turnLeft90 0072                          _getFinalX 0944  
                        _getFinalY 0949                        ?_turnAround 0072  
                         ?___awdiv 0030                          _goReverse 06CF  
                __size_of_ser_init 0028                  __size_of_ser_isrx 0017  
                         ?___lwmod 0072                          _findWalls 02AE  
                      _detectCliff 04DE                          __pstrings 0800  
                __size_of_rotateIR 0046                           ?_goRight 0072  
                         ?_convert 0041                     _finalCountdown 01AD  
                        _goingHome 0385             __end_of_getOrientation 0944  
                ?_rightWallCorrect 0072                           ?_waitFor 002C  
                     ??_goBackward 003F                         ser_getch@c 002B  
                        _initSongs 0DB8                __size_of_ser_putArr 0039  
               ??_rightWallCorrect 00E6                     __size_of_drive 0037  
                        _frontWall 0384            __size_of_lcd_set_cursor 000B  
                interrupt_function 0004                     ___wmul@product 002E  
                       ser_putch@c 002B     __size_of_lcd_write_1_digit_bcd 000B  
    __end_of_lcd_write_1_digit_bcd 07FE                    waitFor@highByte 002C  
                        _rightWall 0389                          _ser_getch 0A89  
                       ?_goForward 0072                          _ser_putch 0A68  
                       ?_getFinalX 0072                         ?_getFinalY 0072  
              __size_of_updateNode 003E             __size_of_getVictimZone 007F  
                       ?_goReverse 0072                 __end_of_goBackward 0B99  
                       ?_findWalls 0072                        __stringbase 0805  
                ___wmul@multiplier 002A                    ?_getOrientation 0072  
                       ?_initSongs 0072                __size_of_turnLeft90 0037  
              __size_of_turnAround 0045            __size_of_updateLocation 0060  
        __size_of_lcd_write_string 0025                       ??_initIRobot 002C  
          __size_of_lcd_write_data 0013                         ?_ser_getch 0072  
 __end_of_checkForFinalDestination 0C46                       _lookingForU2 0190  
                       ?_ser_putch 0072            adc_read_channel@channel 00E1  
                    _RTC_FLAG_10MS 0380                      _RTC_FLAG_50MS 0383  
                        init_fetch 09A1           __end_of_driveForDistance 0456  
       __end_of_getSuccessfulDrive 0960                   __size_of___awdiv 0076  
               _currentOrientation 005A                   __size_of___lwmod 0044  
             getVictimZone@victimX 002C               getVictimZone@victimY 002A  
                         _adc_read 0E71                   __size_of_goRight 0029  
                 __size_of_convert 01CF                 __end_of_initIRobot 0A2C  
                    _getVictimZone 0560                   __size_of_waitFor 0029  
                         _findWall 0A2C                           _lcd_init 0BC2  
                         _leftWall 0387           __end_of_adc_read_channel 07F3  
        lcd_write_control@databyte 002C                           _lastMove 005D  
                         _init_adc 09C8                      __size_of_isr1 00CA  
                    __size_of_main 007A                      __size_of_init 0036  
         __end_of_frontWallCorrect 04DE                           clear_ram 094E  
                         _ser_init 0AF7                        ??_goForward 003F  
                     ??_ser_putArr 0030                           _ser_isrx 09DE  
                      ??_getFinalX 002A                        ??_getFinalY 002A  
             driveForDistance@high 003D                        ??_goReverse 0033  
                         _rotateIR 0FBA                        ??_findWalls 00E8  
                     ?_checkIfHome 0072                      ??_turnRight90 0033  
                         readIR@cm 00E4                       ??_updateNode 002A  
                    ?_goToNextCell 0072                     ?_getVictimZone 002A  
    driveForDistance@deltaDistance 0039                       _RTC_FLAG_1MS 0381  
                      ??_initSongs 0035                 __end_of_ser_putArr 0DB8  
                         intlevel1 0000                     _lcd_set_cursor 0960  
                 ___lwmod@dividend 0074                          stringcode 0800  
                      ??_ser_getch 002A                       ??_turnLeft90 0033  
                      ??_ser_putch 002A                       ??_turnAround 0033  
               __end_of_updateNode 0E33                  _lcd_write_control 09B4  
                     ?_detectCliff 0072                  _updateOrientation 096B  
               ?_lcd_write_control 0072             updateOrientation@moved 002B  
                       _OPTION_REG 0081                 ?_updateOrientation 0072  
                  ___lwmod@divisor 0072                     ??_goToNextCell 0040  
                  ___lwmod@counter 0077                __end_of_turnRight90 0E71  
                         stringdir 0800           driveForDistance@distance 003B  
                         stringtab 0800  __size_of_checkForFinalDestination 002D  
        ?_checkForFinalDestination 0072                ??_lcd_write_control 002A  
           __end_of_lcd_set_cursor 096B                ??_updateOrientation 002A  
               __end_of_turnLeft90 0D47                 __end_of_turnAround 0FBA  
                   _updateLocation 073E                   _lcd_write_string 0AAB  
                      _victimFound 038C                        _RTC_Counter 0058  
                   _lcd_write_data 098E          __size_of_rightWallCorrect 008E  
                  ser_putArr@array 002C                   ser_putArr@length 002E  
