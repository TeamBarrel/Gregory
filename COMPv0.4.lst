

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Tue May 21 15:29:59 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 21 "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 21 "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_drive
    48                           	FNCALL	_main,_lcd_set_cursor
    49                           	FNCALL	_main,_lcd_write_string
    50                           	FNCALL	_main,_checkForFinalDestination
    51                           	FNCALL	_main,_lookForVictim
    52                           	FNCALL	_main,_findWalls
    53                           	FNCALL	_main,_goToNextCell
    54                           	FNCALL	_main,_updateLocation
    55                           	FNCALL	_main,_updateNode
    56                           	FNCALL	_main,_checkIfHome
    57                           	FNCALL	_findWalls,_lcd_set_cursor
    58                           	FNCALL	_findWalls,_findWall
    59                           	FNCALL	_findWalls,_lcd_write_data
    60                           	FNCALL	_findWalls,_rotateIR
    61                           	FNCALL	_findWalls,_frontWallCorrect
    62                           	FNCALL	_findWalls,_rightWallCorrect
    63                           	FNCALL	_goToNextCell,_goLeft
    64                           	FNCALL	_goToNextCell,_goForward
    65                           	FNCALL	_goToNextCell,_goRight
    66                           	FNCALL	_goToNextCell,_goBackward
    67                           	FNCALL	_findWall,_readIR
    68                           	FNCALL	_frontWallCorrect,_drive
    69                           	FNCALL	_frontWallCorrect,_readIR
    70                           	FNCALL	_rightWallCorrect,_turnRight90
    71                           	FNCALL	_rightWallCorrect,_rotateIR
    72                           	FNCALL	_rightWallCorrect,_drive
    73                           	FNCALL	_rightWallCorrect,_readIR
    74                           	FNCALL	_rightWallCorrect,_turnLeft90
    75                           	FNCALL	_updateLocation,_lcd_set_cursor
    76                           	FNCALL	_updateLocation,_lcd_write_data
    77                           	FNCALL	_updateLocation,_getOrientation
    78                           	FNCALL	_updateLocation,_lcd_write_1_digit_bcd
    79                           	FNCALL	_lookForVictim,_play_iCreate_song
    80                           	FNCALL	_lookForVictim,_lcd_set_cursor
    81                           	FNCALL	_lookForVictim,_lcd_write_data
    82                           	FNCALL	_lookForVictim,_getVictimZone
    83                           	FNCALL	_lookForVictim,_lcd_write_1_digit_bcd
    84                           	FNCALL	_checkForFinalDestination,_getFinalX
    85                           	FNCALL	_checkForFinalDestination,_getFinalY
    86                           	FNCALL	_checkForFinalDestination,_play_iCreate_song
    87                           	FNCALL	_checkForFinalDestination,_lcd_set_cursor
    88                           	FNCALL	_checkForFinalDestination,_lcd_write_data
    89                           	FNCALL	_init,_init_adc
    90                           	FNCALL	_init,_lcd_init
    91                           	FNCALL	_init,_ser_init
    92                           	FNCALL	_init,_initIRobot
    93                           	FNCALL	_init,_initSongs
    94                           	FNCALL	_readIR,_adc_read_channel
    95                           	FNCALL	_readIR,_convert
    96                           	FNCALL	_goRight,_lcd_set_cursor
    97                           	FNCALL	_goRight,_lcd_write_data
    98                           	FNCALL	_goRight,_turnRight90
    99                           	FNCALL	_goRight,_updateOrientation
   100                           	FNCALL	_goRight,_driveForDistance
   101                           	FNCALL	_goLeft,_lcd_set_cursor
   102                           	FNCALL	_goLeft,_lcd_write_data
   103                           	FNCALL	_goLeft,_turnLeft90
   104                           	FNCALL	_goLeft,_updateOrientation
   105                           	FNCALL	_goLeft,_driveForDistance
   106                           	FNCALL	_goForward,_lcd_set_cursor
   107                           	FNCALL	_goForward,_lcd_write_data
   108                           	FNCALL	_goForward,_driveForDistance
   109                           	FNCALL	_goBackward,_lcd_set_cursor
   110                           	FNCALL	_goBackward,_lcd_write_data
   111                           	FNCALL	_goBackward,_turnAround
   112                           	FNCALL	_goBackward,_updateOrientation
   113                           	FNCALL	_goBackward,_driveForDistance
   114                           	FNCALL	_checkIfHome,_drive
   115                           	FNCALL	_checkIfHome,_play_iCreate_song
   116                           	FNCALL	_initSongs,_ser_putArr
   117                           	FNCALL	_lcd_init,_lcd_write_control
   118                           	FNCALL	_lcd_write_1_digit_bcd,_lcd_write_data
   119                           	FNCALL	_lcd_write_string,_lcd_write_data
   120                           	FNCALL	_turnRight90,_drive
   121                           	FNCALL	_turnRight90,_waitFor
   122                           	FNCALL	_turnLeft90,_drive
   123                           	FNCALL	_turnLeft90,_waitFor
   124                           	FNCALL	_turnAround,_drive
   125                           	FNCALL	_turnAround,_waitFor
   126                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   127                           	FNCALL	_driveForDistance,_drive
   128                           	FNCALL	_driveForDistance,_ser_putch
   129                           	FNCALL	_driveForDistance,_ser_getch
   130                           	FNCALL	_adc_read_channel,_adc_read
   131                           	FNCALL	_convert,___wmul
   132                           	FNCALL	_convert,___awdiv
   133                           	FNCALL	_ser_putArr,_ser_putch
   134                           	FNCALL	_play_iCreate_song,_ser_putch
   135                           	FNCALL	_initIRobot,_ser_putch
   136                           	FNCALL	_waitFor,_ser_putch
   137                           	FNCALL	_ser_getch,_ser_isrx
   138                           	FNCALL	_drive,_ser_putch
   139                           	FNCALL	_adc_read,___awdiv
   140                           	FNROOT	_main
   141                           	FNCALL	_isr1,___lwmod
   142                           	FNCALL	intlevel1,_isr1
   143                           	global	intlevel1
   144                           	FNROOT	intlevel1
   145                           	global	_xCoord
   146                           	global	_yCoord
   147                           	global	_lookingForU2
   148                           	global	_finalCountdown
   149                           	global	_superMarioBros
   150                           	global	_champions
   151                           psect	idataCOMMON,class=CODE,space=0,delta=2
   152                           global __pidataCOMMON
   153  0A4C                     __pidataCOMMON:
   154                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
   155                           	line	36
   156                           
   157                           ;initializer for _xCoord
   158  0A4C  3401               	retlw	01h
   159                           	line	37
   160                           
   161                           ;initializer for _yCoord
   162  0A4D  3403               	retlw	03h
   163                           psect	idataBANK3,class=CODE,space=0,delta=2
   164                           global __pidataBANK3
   165  0E57                     __pidataBANK3:
   166                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
   167                           	line	11
   168                           
   169                           ;initializer for _lookingForU2
   170  0E57  348C               	retlw	08Ch
   171  0E58  3402               	retlw	02h
   172  0E59  340D               	retlw	0Dh
   173  0E5A  3448               	retlw	048h
   174  0E5B  341C               	retlw	01Ch
   175  0E5C  3448               	retlw	048h
   176  0E5D  341C               	retlw	01Ch
   177  0E5E  344F               	retlw	04Fh
   178  0E5F  3440               	retlw	040h
   179  0E60  3480               	retlw	080h
   180  0E61  3410               	retlw	010h
   181  0E62  344D               	retlw	04Dh
   182  0E63  341C               	retlw	01Ch
   183  0E64  344C               	retlw	04Ch
   184  0E65  341C               	retlw	01Ch
   185  0E66  3448               	retlw	048h
   186  0E67  3440               	retlw	040h
   187  0E68  3480               	retlw	080h
   188  0E69  3410               	retlw	010h
   189  0E6A  3445               	retlw	045h
   190  0E6B  341C               	retlw	01Ch
   191  0E6C  3445               	retlw	045h
   192  0E6D  341C               	retlw	01Ch
   193  0E6E  3445               	retlw	045h
   194  0E6F  341C               	retlw	01Ch
   195  0E70  3448               	retlw	048h
   196  0E71  341C               	retlw	01Ch
   197  0E72  3448               	retlw	048h
   198  0E73  3440               	retlw	040h
   199                           	line	12
   200                           
   201                           ;initializer for _finalCountdown
   202  0E74  348C               	retlw	08Ch
   203  0E75  3403               	retlw	03h
   204  0E76  340C               	retlw	0Ch
   205  0E77  3449               	retlw	049h
   206  0E78  3408               	retlw	08h
   207  0E79  3447               	retlw	047h
   208  0E7A  3408               	retlw	08h
   209  0E7B  3449               	retlw	049h
   210  0E7C  3420               	retlw	020h
   211  0E7D  3442               	retlw	042h
   212  0E7E  3440               	retlw	040h
   213  0E7F  3480               	retlw	080h
   214  0E80  3420               	retlw	020h
   215  0E81  344A               	retlw	04Ah
   216  0E82  3408               	retlw	08h
   217  0E83  3449               	retlw	049h
   218  0E84  3408               	retlw	08h
   219  0E85  344A               	retlw	04Ah
   220  0E86  3408               	retlw	08h
   221  0E87  3480               	retlw	080h
   222  0E88  340C               	retlw	0Ch
   223  0E89  3449               	retlw	049h
   224  0E8A  3406               	retlw	06h
   225  0E8B  3480               	retlw	080h
   226  0E8C  340C               	retlw	0Ch
   227  0E8D  3447               	retlw	047h
   228  0E8E  3430               	retlw	030h
   229                           psect	idataBANK1,class=CODE,space=0,delta=2
   230                           global __pidataBANK1
   231  0D56                     __pidataBANK1:
   232                           	line	10
   233                           
   234                           ;initializer for _superMarioBros
   235  0D56  348C               	retlw	08Ch
   236  0D57  3401               	retlw	01h
   237  0D58  340B               	retlw	0Bh
   238  0D59  344C               	retlw	04Ch
   239  0D5A  3408               	retlw	08h
   240  0D5B  3480               	retlw	080h
   241  0D5C  3404               	retlw	04h
   242  0D5D  344C               	retlw	04Ch
   243  0D5E  3410               	retlw	010h
   244  0D5F  3480               	retlw	080h
   245  0D60  3404               	retlw	04h
   246  0D61  344C               	retlw	04Ch
   247  0D62  3410               	retlw	010h
   248  0D63  3480               	retlw	080h
   249  0D64  3404               	retlw	04h
   250  0D65  3448               	retlw	048h
   251  0D66  3408               	retlw	08h
   252  0D67  344C               	retlw	04Ch
   253  0D68  3410               	retlw	010h
   254  0D69  344F               	retlw	04Fh
   255  0D6A  3420               	retlw	020h
   256  0D6B  3480               	retlw	080h
   257  0D6C  3408               	retlw	08h
   258  0D6D  3443               	retlw	043h
   259  0D6E  3410               	retlw	010h
   260                           	line	13
   261                           
   262                           ;initializer for _champions
   263  0D6F  348C               	retlw	08Ch
   264  0D70  3404               	retlw	04h
   265  0D71  3409               	retlw	09h
   266  0D72  344A               	retlw	04Ah
   267  0D73  3440               	retlw	040h
   268  0D74  3449               	retlw	049h
   269  0D75  3410               	retlw	010h
   270  0D76  344A               	retlw	04Ah
   271  0D77  3410               	retlw	010h
   272  0D78  3449               	retlw	049h
   273  0D79  3430               	retlw	030h
   274  0D7A  3445               	retlw	045h
   275  0D7B  3430               	retlw	030h
   276  0D7C  3480               	retlw	080h
   277  0D7D  3420               	retlw	020h
   278  0D7E  3442               	retlw	042h
   279  0D7F  341C               	retlw	01Ch
   280  0D80  3447               	retlw	047h
   281  0D81  3420               	retlw	020h
   282  0D82  3442               	retlw	042h
   283  0D83  3430               	retlw	030h
   284                           	global	_rxfifo
   285                           	global	_start
   286                           	global	_RTC_Counter
   287                           	global	_currentOrientation
   288                           	global	_finalX
   289                           	global	_finalY
   290                           	global	_lastMove
   291                           	global	_node
   292                           	global	_rxoptr
   293                           	global	_ser_tmp
   294                           	global	_txoptr
   295                           	global	_vicZone
   296                           	global	_victimZone
   297                           	global	_wayWent
   298                           	global	_rxiptr
   299                           	global	_txiptr
   300                           	global	_RTC_FLAG_10MS
   301                           	global	_RTC_FLAG_1MS
   302                           	global	_RTC_FLAG_500MS
   303                           	global	_RTC_FLAG_50MS
   304                           	global	_frontWall
   305                           	global	_goingHome
   306                           	global	_home
   307                           	global	_leftWall
   308                           	global	_moving
   309                           	global	_rightWall
   310                           	global	_victimFound
   311                           	global	_txfifo
   312                           	global	_ADCON0
   313  001F                     _ADCON0	set	31
   314                           	global	_ADRESH
   315  001E                     _ADRESH	set	30
   316                           	global	_PORTA
   317  0005                     _PORTA	set	5
   318                           	global	_PORTC
   319  0007                     _PORTC	set	7
   320                           	global	_PORTD
   321  0008                     _PORTD	set	8
   322                           	global	_PORTE
   323  0009                     _PORTE	set	9
   324                           	global	_RCREG
   325  001A                     _RCREG	set	26
   326                           	global	_SSPBUF
   327  0013                     _SSPBUF	set	19
   328                           	global	_SSPCON
   329  0014                     _SSPCON	set	20
   330                           	global	_TMR0
   331  0001                     _TMR0	set	1
   332                           	global	_TXREG
   333  0019                     _TXREG	set	25
   334                           	global	_CARRY
   335  0018                     _CARRY	set	24
   336                           	global	_CHS0
   337  00FB                     _CHS0	set	251
   338                           	global	_CHS1
   339  00FC                     _CHS1	set	252
   340                           	global	_CHS2
   341  00FD                     _CHS2	set	253
   342                           	global	_CREN
   343  00C4                     _CREN	set	196
   344                           	global	_GIE
   345  005F                     _GIE	set	95
   346                           	global	_GO
   347  00FA                     _GO	set	250
   348                           	global	_OERR
   349  00C1                     _OERR	set	193
   350                           	global	_PEIE
   351  005E                     _PEIE	set	94
   352                           	global	_RB0
   353  0030                     _RB0	set	48
   354                           	global	_RCIF
   355  0065                     _RCIF	set	101
   356                           	global	_RE0
   357  0048                     _RE0	set	72
   358                           	global	_RE1
   359  0049                     _RE1	set	73
   360                           	global	_RE2
   361  004A                     _RE2	set	74
   362                           	global	_RX9
   363  00C6                     _RX9	set	198
   364                           	global	_SPEN
   365  00C7                     _SPEN	set	199
   366                           	global	_TMR0IE
   367  005D                     _TMR0IE	set	93
   368                           	global	_TMR0IF
   369  005A                     _TMR0IF	set	90
   370                           	global	_TXIF
   371  0064                     _TXIF	set	100
   372                           	global	_ADCON1
   373  009F                     _ADCON1	set	159
   374                           	global	_ADRESL
   375  009E                     _ADRESL	set	158
   376                           	global	_OPTION_REG
   377  0081                     _OPTION_REG	set	129
   378                           	global	_SPBRG
   379  0099                     _SPBRG	set	153
   380                           	global	_SSPSTAT
   381  0094                     _SSPSTAT	set	148
   382                           	global	_TRISA
   383  0085                     _TRISA	set	133
   384                           	global	_TRISB
   385  0086                     _TRISB	set	134
   386                           	global	_TRISC
   387  0087                     _TRISC	set	135
   388                           	global	_TRISD
   389  0088                     _TRISD	set	136
   390                           	global	_TRISE
   391  0089                     _TRISE	set	137
   392                           	global	_BRGH
   393  04C2                     _BRGH	set	1218
   394                           	global	_RCIE
   395  0465                     _RCIE	set	1125
   396                           	global	_SYNC
   397  04C4                     _SYNC	set	1220
   398                           	global	_TX9
   399  04C6                     _TX9	set	1222
   400                           	global	_TXEN
   401  04C5                     _TXEN	set	1221
   402                           	global	_TXIE
   403  0464                     _TXIE	set	1124
   404                           	global	_EEADR
   405  010D                     _EEADR	set	269
   406                           	global	_EEDATA
   407  010C                     _EEDATA	set	268
   408                           	global	_EECON1
   409  018C                     _EECON1	set	396
   410                           	global	_EECON2
   411  018D                     _EECON2	set	397
   412                           	global	_RD
   413  0C60                     _RD	set	3168
   414                           	global	_WR
   415  0C61                     _WR	set	3169
   416                           	global	_WREN
   417  0C62                     _WREN	set	3170
   418                           psect	strings,class=STRING,delta=2
   419                           global __pstrings
   420  0800                     __pstrings:
   421                           ;	global	stringdir,stringtab,__stringbase
   422  0800                     stringtab:
   423                           ;	String table - string pointers are 1 byte each
   424  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
   425  0800  3008               movlw high(stringdir)
   426  0801  008A               movwf pclath
   427  0802  0804               movf fsr,w
   428  0803  0A84               incf fsr
   429  0804  0782               	addwf pc
   430  0805                     __stringbase:
   431  0805  3400               	retlw	0
   432                           psect	strings
   433                           	
   434  0806                     STR_1:	
   435  0806  3428               	retlw	40	;'('
   436  0807  342D               	retlw	45	;'-'
   437  0808  342C               	retlw	44	;','
   438  0809  342D               	retlw	45	;'-'
   439  080A  3429               	retlw	41	;')'
   440  080B  3420               	retlw	32	;' '
   441  080C  3445               	retlw	69	;'E'
   442  080D  3420               	retlw	32	;' '
   443  080E  342D               	retlw	45	;'-'
   444  080F  342D               	retlw	45	;'-'
   445  0810  3420               	retlw	32	;' '
   446  0811  342D               	retlw	45	;'-'
   447  0812  342D               	retlw	45	;'-'
   448  0813  342D               	retlw	45	;'-'
   449  0814  3420               	retlw	32	;' '
   450  0815  342D               	retlw	45	;'-'
   451  0816  3400               	retlw	0
   452                           psect	strings
   453                           	
   454  0817                     STR_2:	
   455  0817  342D               	retlw	45	;'-'
   456  0818  3420               	retlw	32	;' '
   457  0819  342D               	retlw	45	;'-'
   458  081A  3420               	retlw	32	;' '
   459  081B  342D               	retlw	45	;'-'
   460  081C  3420               	retlw	32	;' '
   461  081D  3428               	retlw	40	;'('
   462  081E  3430               	retlw	48	;'0'
   463  081F  342C               	retlw	44	;','
   464  0820  3430               	retlw	48	;'0'
   465  0821  3429               	retlw	41	;')'
   466  0822  3420               	retlw	32	;' '
   467  0823  3447               	retlw	71	;'G'
   468  0824  3452               	retlw	82	;'R'
   469  0825  3445               	retlw	69	;'E'
   470  0826  3447               	retlw	71	;'G'
   471  0827  3400               	retlw	0
   472                           psect	strings
   473                           	file	"COMPv0.4.as"
   474                           	line	#
   475                           psect cinit,class=CODE,delta=2
   476                           global start_initialization
   477  07BE                     start_initialization:
   478                           
   479                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   480                           global __pbitbssCOMMON
   481  0380                     __pbitbssCOMMON:
   482  0380                     _RTC_FLAG_10MS:
   483  0380                            ds      1
   484                           
   485  0381                     _RTC_FLAG_1MS:
   486  0381                            ds      1
   487                           
   488  0382                     _RTC_FLAG_500MS:
   489  0382                            ds      1
   490                           
   491  0383                     _RTC_FLAG_50MS:
   492  0383                            ds      1
   493                           
   494  0384                     _frontWall:
   495  0384                            ds      1
   496                           
   497  0385                     _goingHome:
   498  0385                            ds      1
   499                           
   500  0386                     _home:
   501  0386                            ds      1
   502                           
   503  0387                     _leftWall:
   504  0387                            ds      1
   505                           
   506  0388                     _moving:
   507  0388                            ds      1
   508                           
   509  0389                     _rightWall:
   510  0389                            ds      1
   511                           
   512  038A                     _victimFound:
   513  038A                            ds      1
   514                           
   515                           psect	bssCOMMON,class=COMMON,space=1
   516                           global __pbssCOMMON
   517  0078                     __pbssCOMMON:
   518  0078                     _rxiptr:
   519  0078                            ds      1
   520                           
   521  0079                     _txiptr:
   522  0079                            ds      1
   523                           
   524                           psect	dataCOMMON,class=COMMON,space=1
   525                           global __pdataCOMMON
   526  007A                     __pdataCOMMON:
   527                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
   528                           	line	36
   529  007A                     _xCoord:
   530  007A                            ds      1
   531                           
   532                           psect	dataCOMMON
   533                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
   534                           	line	37
   535  007B                     _yCoord:
   536  007B                            ds      1
   537                           
   538                           psect	bssBANK0,class=BANK0,space=1
   539                           global __pbssBANK0
   540  0046                     __pbssBANK0:
   541  0046                     _rxfifo:
   542  0046                            ds      16
   543                           
   544  0056                     _start:
   545  0056                            ds      3
   546                           
   547  0059                     _RTC_Counter:
   548  0059                            ds      2
   549                           
   550  005B                     _currentOrientation:
   551  005B                            ds      1
   552                           
   553  005C                     _finalX:
   554  005C                            ds      1
   555                           
   556  005D                     _finalY:
   557  005D                            ds      1
   558                           
   559  005E                     _lastMove:
   560  005E                            ds      1
   561                           
   562  005F                     _node:
   563  005F                            ds      1
   564                           
   565  0060                     _rxoptr:
   566  0060                            ds      1
   567                           
   568  0061                     _ser_tmp:
   569  0061                            ds      1
   570                           
   571  0062                     _txoptr:
   572  0062                            ds      1
   573                           
   574  0063                     _vicZone:
   575  0063                            ds      1
   576                           
   577  0064                     _victimZone:
   578  0064                            ds      1
   579                           
   580  0065                     _wayWent:
   581  0065                            ds      1
   582                           
   583                           psect	bssBANK1,class=BANK1,space=1
   584                           global __pbssBANK1
   585  00CE                     __pbssBANK1:
   586  00CE                     _txfifo:
   587  00CE                            ds      16
   588                           
   589                           psect	dataBANK1,class=BANK1,space=1
   590                           global __pdataBANK1
   591  00A0                     __pdataBANK1:
   592                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
   593                           	line	10
   594  00A0                     _superMarioBros:
   595  00A0                            ds      25
   596                           
   597                           psect	dataBANK1
   598                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
   599                           	line	13
   600  00B9                     _champions:
   601  00B9                            ds      21
   602                           
   603                           psect	dataBANK3,class=BANK3,space=1
   604                           global __pdataBANK3
   605  0190                     __pdataBANK3:
   606                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
   607                           	line	11
   608  0190                     _lookingForU2:
   609  0190                            ds      29
   610                           
   611                           psect	dataBANK3
   612                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
   613                           	line	12
   614  01AD                     _finalCountdown:
   615  01AD                            ds      27
   616                           
   617                           psect clrtext,class=CODE,delta=2
   618                           global clear_ram
   619                           ;	Called with FSR containing the base address, and
   620                           ;	W with the last address+1
   621  0A5D                     clear_ram:
   622  0A5D  0064               	clrwdt			;clear the watchdog before getting into this loop
   623  0A5E                     clrloop:
   624  0A5E  0180               	clrf	indf		;clear RAM location pointed to by FSR
   625  0A5F  0A84               	incf	fsr,f		;increment pointer
   626  0A60  0604               	xorwf	fsr,w		;XOR with final address
   627  0A61  1903               	btfsc	status,2	;have we reached the end yet?
   628  0A62  3400               	retlw	0		;all done for this memory range, return
   629  0A63  0604               	xorwf	fsr,w		;XOR again to restore value
   630  0A64  2A5E               	goto	clrloop		;do the next byte
   631                           
   632                           ; Clear objects allocated to BITCOMMON
   633                           psect cinit,class=CODE,delta=2
   634  07BE  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   635  07BF  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   636                           ; Clear objects allocated to COMMON
   637                           psect cinit,class=CODE,delta=2
   638  07C0  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   639  07C1  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   640                           ; Clear objects allocated to BANK0
   641                           psect cinit,class=CODE,delta=2
   642  07C2  1383               	bcf	status, 7	;select IRP bank0
   643  07C3  3046               	movlw	low(__pbssBANK0)
   644  07C4  0084               	movwf	fsr
   645  07C5  3066               	movlw	low((__pbssBANK0)+020h)
   646  07C6  120A  158A  225D   	fcall	clear_ram
              120A  118A         
   647                           ; Clear objects allocated to BANK1
   648                           psect cinit,class=CODE,delta=2
   649  07CB  30CE               	movlw	low(__pbssBANK1)
   650  07CC  0084               	movwf	fsr
   651  07CD  30DE               	movlw	low((__pbssBANK1)+010h)
   652  07CE  120A  158A  225D   	fcall	clear_ram
              120A  118A         
   653                           global btemp
   654                           psect inittext,class=CODE,delta=2
   655                           global init_fetch,btemp
   656                           ;	Called with low address in FSR and high address in W
   657  0AB1                     init_fetch:
   658  0AB1  087E               	movf btemp,w
   659  0AB2  008A               	movwf pclath
   660  0AB3  087F               	movf btemp+1,w
   661  0AB4  0082               	movwf pc
   662                           global init_ram
   663                           ;Called with:
   664                           ;	high address of idata address in btemp 
   665                           ;	low address of idata address in btemp+1 
   666                           ;	low address of data in FSR
   667                           ;	high address + 1 of data in btemp-1
   668  0AB5                     init_ram:
   669  0AB5  120A  158A  22B1   	fcall init_fetch
              120A  158A         
   670  0ABA  0080               	movwf indf,f
   671  0ABB  0A84               	incf fsr,f
   672  0ABC  0804               	movf fsr,w
   673  0ABD  067D               	xorwf btemp-1,w
   674  0ABE  1903               	btfsc status,2
   675  0ABF  3400               	retlw 0
   676  0AC0  0AFF               	incf btemp+1,f
   677  0AC1  1903               	btfsc status,2
   678  0AC2  0AFE               	incf btemp,f
   679  0AC3  2AB5               	goto init_ram
   680                           ; Initialize objects allocated to BANK3
   681                           psect cinit,class=CODE,delta=2
   682                           global init_ram, __pidataBANK3
   683  07D3  1783               	bsf	status, 7	;select IRP bank2
   684  07D4  30C8               	movlw low(__pdataBANK3+56)
   685  07D5  00FD               	movwf btemp-1,f
   686  07D6  300E               	movlw high(__pidataBANK3)
   687  07D7  00FE               	movwf btemp,f
   688  07D8  3057               	movlw low(__pidataBANK3)
   689  07D9  00FF               	movwf btemp+1,f
   690  07DA  3090               	movlw low(__pdataBANK3)
   691  07DB  0084               	movwf fsr,f
   692  07DC  120A  158A  22B5   	fcall init_ram
              120A  118A         
   693                           ; Initialize objects allocated to BANK1
   694                           psect cinit,class=CODE,delta=2
   695                           global init_ram, __pidataBANK1
   696  07E1  1383               	bcf	status, 7	;select IRP bank0
   697  07E2  30CE               	movlw low(__pdataBANK1+46)
   698  07E3  00FD               	movwf btemp-1,f
   699  07E4  300D               	movlw high(__pidataBANK1)
   700  07E5  00FE               	movwf btemp,f
   701  07E6  3056               	movlw low(__pidataBANK1)
   702  07E7  00FF               	movwf btemp+1,f
   703  07E8  30A0               	movlw low(__pdataBANK1)
   704  07E9  0084               	movwf fsr,f
   705  07EA  120A  158A  22B5   	fcall init_ram
              120A  118A         
   706                           ; Initialize objects allocated to COMMON
   707                           	global __pidataCOMMON
   708                           psect cinit,class=CODE,delta=2
   709  07EF  120A  158A  224C   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  118A         
   710  07F4  00FA               	movwf	__pdataCOMMON+0&07fh		
   711  07F5  120A  158A  224D   	fcall	__pidataCOMMON+1		;fetch initializer
              120A  118A         
   712  07FA  00FB               	movwf	__pdataCOMMON+1&07fh		
   713                           psect cinit,class=CODE,delta=2
   714                           global end_of_initialization
   715                           
   716                           ;End of C runtime variable initialization code
   717                           
   718  07FB                     end_of_initialization:
   719  07FB  0183               clrf status
   720  07FC  120A  118A  2C53   ljmp _main	;jump to C main() function
   721                           psect	cstackBANK1,class=BANK1,space=1
   722                           global __pcstackBANK1
   723  00DE                     __pcstackBANK1:
   724                           	global	?_adc_read_channel
   725  00DE                     ?_adc_read_channel:	; 2 bytes @ 0x0
   726  00DE                     	ds	2
   727                           	global	adc_read_channel@channel
   728  00E0                     adc_read_channel@channel:	; 1 bytes @ 0x2
   729  00E0                     	ds	1
   730                           	global	?_readIR
   731  00E1                     ?_readIR:	; 2 bytes @ 0x3
   732  00E1                     	ds	2
   733                           	global	readIR@cm
   734  00E3                     readIR@cm:	; 2 bytes @ 0x5
   735  00E3                     	ds	2
   736                           	global	??_rightWallCorrect
   737  00E5                     ??_rightWallCorrect:	; 0 bytes @ 0x7
   738                           	global	??_frontWallCorrect
   739  00E5                     ??_frontWallCorrect:	; 0 bytes @ 0x7
   740  00E5                     	ds	2
   741                           	global	??_findWalls
   742  00E7                     ??_findWalls:	; 0 bytes @ 0x9
   743  00E7                     	ds	1
   744                           psect	cstackCOMMON,class=COMMON,space=1
   745                           global __pcstackCOMMON
   746  0072                     __pcstackCOMMON:
   747                           	global	?_ser_putch
   748  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   749                           	global	?_lcd_set_cursor
   750  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   751                           	global	?_lcd_write_data
   752  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   753                           	global	?_turnAround
   754  0072                     ?_turnAround:	; 0 bytes @ 0x0
   755                           	global	?_updateOrientation
   756  0072                     ?_updateOrientation:	; 0 bytes @ 0x0
   757                           	global	?_turnLeft90
   758  0072                     ?_turnLeft90:	; 0 bytes @ 0x0
   759                           	global	?_turnRight90
   760  0072                     ?_turnRight90:	; 0 bytes @ 0x0
   761                           	global	?_ser_init
   762  0072                     ?_ser_init:	; 0 bytes @ 0x0
   763                           	global	?_initIRobot
   764  0072                     ?_initIRobot:	; 0 bytes @ 0x0
   765                           	global	?_initSongs
   766  0072                     ?_initSongs:	; 0 bytes @ 0x0
   767                           	global	?_play_iCreate_song
   768  0072                     ?_play_iCreate_song:	; 0 bytes @ 0x0
   769                           	global	?_findWall
   770  0072                     ?_findWall:	; 1 bit 
   771                           	global	?_init_adc
   772  0072                     ?_init_adc:	; 0 bytes @ 0x0
   773                           	global	?_goBackward
   774  0072                     ?_goBackward:	; 0 bytes @ 0x0
   775                           	global	?_goForward
   776  0072                     ?_goForward:	; 0 bytes @ 0x0
   777                           	global	?_goLeft
   778  0072                     ?_goLeft:	; 0 bytes @ 0x0
   779                           	global	?_goRight
   780  0072                     ?_goRight:	; 0 bytes @ 0x0
   781                           	global	?_rightWallCorrect
   782  0072                     ?_rightWallCorrect:	; 0 bytes @ 0x0
   783                           	global	?_frontWallCorrect
   784  0072                     ?_frontWallCorrect:	; 0 bytes @ 0x0
   785                           	global	?_lcd_write_control
   786  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   787                           	global	?_lcd_write_string
   788  0072                     ?_lcd_write_string:	; 0 bytes @ 0x0
   789                           	global	?_lcd_write_1_digit_bcd
   790  0072                     ?_lcd_write_1_digit_bcd:	; 0 bytes @ 0x0
   791                           	global	?_lcd_init
   792  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   793                           	global	?_isr1
   794  0072                     ?_isr1:	; 0 bytes @ 0x0
   795                           	global	?_init
   796  0072                     ?_init:	; 0 bytes @ 0x0
   797                           	global	?_checkForFinalDestination
   798  0072                     ?_checkForFinalDestination:	; 0 bytes @ 0x0
   799                           	global	?_lookForVictim
   800  0072                     ?_lookForVictim:	; 0 bytes @ 0x0
   801                           	global	?_findWalls
   802  0072                     ?_findWalls:	; 0 bytes @ 0x0
   803                           	global	?_goToNextCell
   804  0072                     ?_goToNextCell:	; 0 bytes @ 0x0
   805                           	global	?_updateLocation
   806  0072                     ?_updateLocation:	; 0 bytes @ 0x0
   807                           	global	?_updateNode
   808  0072                     ?_updateNode:	; 0 bytes @ 0x0
   809                           	global	?_checkIfHome
   810  0072                     ?_checkIfHome:	; 0 bytes @ 0x0
   811                           	global	?_main
   812  0072                     ?_main:	; 0 bytes @ 0x0
   813                           	global	?_ser_isrx
   814  0072                     ?_ser_isrx:	; 1 bit 
   815                           	global	?_ser_getch
   816  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   817                           	global	?_getFinalX
   818  0072                     ?_getFinalX:	; 1 bytes @ 0x0
   819                           	global	?_getFinalY
   820  0072                     ?_getFinalY:	; 1 bytes @ 0x0
   821                           	global	?_getOrientation
   822  0072                     ?_getOrientation:	; 1 bytes @ 0x0
   823                           	global	?___lwmod
   824  0072                     ?___lwmod:	; 2 bytes @ 0x0
   825                           	global	___lwmod@divisor
   826  0072                     ___lwmod@divisor:	; 2 bytes @ 0x0
   827  0072                     	ds	2
   828                           	global	___lwmod@dividend
   829  0074                     ___lwmod@dividend:	; 2 bytes @ 0x2
   830  0074                     	ds	2
   831                           	global	??___lwmod
   832  0076                     ??___lwmod:	; 0 bytes @ 0x4
   833  0076                     	ds	1
   834                           	global	___lwmod@counter
   835  0077                     ___lwmod@counter:	; 1 bytes @ 0x5
   836  0077                     	ds	1
   837                           psect	cstackBANK0,class=BANK0,space=1
   838                           global __pcstackBANK0
   839  0020                     __pcstackBANK0:
   840                           	global	??_isr1
   841  0020                     ??_isr1:	; 0 bytes @ 0x0
   842  0020                     	ds	10
   843                           	global	??_ser_putch
   844  002A                     ??_ser_putch:	; 0 bytes @ 0xA
   845                           	global	??_ser_getch
   846  002A                     ??_ser_getch:	; 0 bytes @ 0xA
   847                           	global	??_lcd_write_data
   848  002A                     ??_lcd_write_data:	; 0 bytes @ 0xA
   849                           	global	??_updateOrientation
   850  002A                     ??_updateOrientation:	; 0 bytes @ 0xA
   851                           	global	?_rotateIR
   852  002A                     ?_rotateIR:	; 0 bytes @ 0xA
   853                           	global	??_ser_init
   854  002A                     ??_ser_init:	; 0 bytes @ 0xA
   855                           	global	??_getFinalX
   856  002A                     ??_getFinalX:	; 0 bytes @ 0xA
   857                           	global	??_getFinalY
   858  002A                     ??_getFinalY:	; 0 bytes @ 0xA
   859                           	global	??_init_adc
   860  002A                     ??_init_adc:	; 0 bytes @ 0xA
   861                           	global	??_getOrientation
   862  002A                     ??_getOrientation:	; 0 bytes @ 0xA
   863                           	global	??_lcd_write_control
   864  002A                     ??_lcd_write_control:	; 0 bytes @ 0xA
   865                           	global	??_updateNode
   866  002A                     ??_updateNode:	; 0 bytes @ 0xA
   867                           	global	??_ser_isrx
   868  002A                     ??_ser_isrx:	; 0 bytes @ 0xA
   869                           	global	?_getVictimZone
   870  002A                     ?_getVictimZone:	; 1 bytes @ 0xA
   871                           	global	?___wmul
   872  002A                     ?___wmul:	; 2 bytes @ 0xA
   873                           	global	getVictimZone@victimY
   874  002A                     getVictimZone@victimY:	; 1 bytes @ 0xA
   875                           	global	rotateIR@direction
   876  002A                     rotateIR@direction:	; 1 bytes @ 0xA
   877                           	global	___wmul@multiplier
   878  002A                     ___wmul@multiplier:	; 2 bytes @ 0xA
   879  002A                     	ds	1
   880                           	global	??_rotateIR
   881  002B                     ??_rotateIR:	; 0 bytes @ 0xB
   882                           	global	??_getVictimZone
   883  002B                     ??_getVictimZone:	; 0 bytes @ 0xB
   884                           	global	updateOrientation@moved
   885  002B                     updateOrientation@moved:	; 1 bytes @ 0xB
   886                           	global	ser_getch@c
   887  002B                     ser_getch@c:	; 1 bytes @ 0xB
   888                           	global	ser_putch@c
   889  002B                     ser_putch@c:	; 1 bytes @ 0xB
   890  002B                     	ds	1
   891                           	global	?_waitFor
   892  002C                     ?_waitFor:	; 0 bytes @ 0xC
   893                           	global	??_initIRobot
   894  002C                     ??_initIRobot:	; 0 bytes @ 0xC
   895                           	global	??_play_iCreate_song
   896  002C                     ??_play_iCreate_song:	; 0 bytes @ 0xC
   897                           	global	?_drive
   898  002C                     ?_drive:	; 0 bytes @ 0xC
   899                           	global	?_ser_putArr
   900  002C                     ?_ser_putArr:	; 0 bytes @ 0xC
   901                           	global	drive@lowByteSpeed
   902  002C                     drive@lowByteSpeed:	; 1 bytes @ 0xC
   903                           	global	waitFor@highByte
   904  002C                     waitFor@highByte:	; 1 bytes @ 0xC
   905                           	global	lcd_write_control@databyte
   906  002C                     lcd_write_control@databyte:	; 1 bytes @ 0xC
   907                           	global	lcd_write_data@databyte
   908  002C                     lcd_write_data@databyte:	; 1 bytes @ 0xC
   909                           	global	getVictimZone@victimX
   910  002C                     getVictimZone@victimX:	; 1 bytes @ 0xC
   911                           	global	play_iCreate_song@song
   912  002C                     play_iCreate_song@song:	; 1 bytes @ 0xC
   913                           	global	ser_putArr@array
   914  002C                     ser_putArr@array:	; 2 bytes @ 0xC
   915                           	global	___wmul@multiplicand
   916  002C                     ___wmul@multiplicand:	; 2 bytes @ 0xC
   917  002C                     	ds	1
   918                           	global	??_lcd_set_cursor
   919  002D                     ??_lcd_set_cursor:	; 0 bytes @ 0xD
   920                           	global	??_lcd_write_string
   921  002D                     ??_lcd_write_string:	; 0 bytes @ 0xD
   922                           	global	??_lcd_write_1_digit_bcd
   923  002D                     ??_lcd_write_1_digit_bcd:	; 0 bytes @ 0xD
   924                           	global	??_lcd_init
   925  002D                     ??_lcd_init:	; 0 bytes @ 0xD
   926                           	global	drive@highByteRadius
   927  002D                     drive@highByteRadius:	; 1 bytes @ 0xD
   928                           	global	waitFor@lowByte
   929  002D                     waitFor@lowByte:	; 1 bytes @ 0xD
   930                           	global	lcd_set_cursor@address
   931  002D                     lcd_set_cursor@address:	; 1 bytes @ 0xD
   932                           	global	lcd_write_1_digit_bcd@data
   933  002D                     lcd_write_1_digit_bcd@data:	; 1 bytes @ 0xD
   934  002D                     	ds	1
   935                           	global	??_waitFor
   936  002E                     ??_waitFor:	; 0 bytes @ 0xE
   937                           	global	??_checkForFinalDestination
   938  002E                     ??_checkForFinalDestination:	; 0 bytes @ 0xE
   939                           	global	??_lookForVictim
   940  002E                     ??_lookForVictim:	; 0 bytes @ 0xE
   941                           	global	??_updateLocation
   942  002E                     ??_updateLocation:	; 0 bytes @ 0xE
   943                           	global	??___wmul
   944  002E                     ??___wmul:	; 0 bytes @ 0xE
   945                           	global	drive@lowByteRadius
   946  002E                     drive@lowByteRadius:	; 1 bytes @ 0xE
   947                           	global	lcd_write_string@s
   948  002E                     lcd_write_string@s:	; 1 bytes @ 0xE
   949                           	global	rotateIR@steps
   950  002E                     rotateIR@steps:	; 1 bytes @ 0xE
   951                           	global	ser_putArr@length
   952  002E                     ser_putArr@length:	; 2 bytes @ 0xE
   953                           	global	___wmul@product
   954  002E                     ___wmul@product:	; 2 bytes @ 0xE
   955  002E                     	ds	1
   956                           	global	??_drive
   957  002F                     ??_drive:	; 0 bytes @ 0xF
   958                           	global	rotateIR@stepNum
   959  002F                     rotateIR@stepNum:	; 1 bytes @ 0xF
   960  002F                     	ds	1
   961                           	global	??_ser_putArr
   962  0030                     ??_ser_putArr:	; 0 bytes @ 0x10
   963                           	global	?___awdiv
   964  0030                     ?___awdiv:	; 2 bytes @ 0x10
   965                           	global	___awdiv@divisor
   966  0030                     ___awdiv@divisor:	; 2 bytes @ 0x10
   967  0030                     	ds	1
   968                           	global	waitFor@type
   969  0031                     waitFor@type:	; 1 bytes @ 0x11
   970  0031                     	ds	1
   971                           	global	drive@highByteSpeed
   972  0032                     drive@highByteSpeed:	; 1 bytes @ 0x12
   973                           	global	___awdiv@dividend
   974  0032                     ___awdiv@dividend:	; 2 bytes @ 0x12
   975  0032                     	ds	1
   976                           	global	??_turnAround
   977  0033                     ??_turnAround:	; 0 bytes @ 0x13
   978                           	global	??_turnLeft90
   979  0033                     ??_turnLeft90:	; 0 bytes @ 0x13
   980                           	global	??_turnRight90
   981  0033                     ??_turnRight90:	; 0 bytes @ 0x13
   982                           	global	?_driveForDistance
   983  0033                     ?_driveForDistance:	; 0 bytes @ 0x13
   984                           	global	??_checkIfHome
   985  0033                     ??_checkIfHome:	; 0 bytes @ 0x13
   986                           	global	driveForDistance@moveDistance
   987  0033                     driveForDistance@moveDistance:	; 2 bytes @ 0x13
   988                           	global	ser_putArr@i
   989  0033                     ser_putArr@i:	; 2 bytes @ 0x13
   990  0033                     	ds	1
   991                           	global	??___awdiv
   992  0034                     ??___awdiv:	; 0 bytes @ 0x14
   993  0034                     	ds	1
   994                           	global	??_initSongs
   995  0035                     ??_initSongs:	; 0 bytes @ 0x15
   996                           	global	??_driveForDistance
   997  0035                     ??_driveForDistance:	; 0 bytes @ 0x15
   998                           	global	??_init
   999  0035                     ??_init:	; 0 bytes @ 0x15
  1000                           	global	___awdiv@counter
  1001  0035                     ___awdiv@counter:	; 1 bytes @ 0x15
  1002  0035                     	ds	1
  1003                           	global	___awdiv@sign
  1004  0036                     ___awdiv@sign:	; 1 bytes @ 0x16
  1005  0036                     	ds	1
  1006                           	global	driveForDistance@deltaDistance
  1007  0037                     driveForDistance@deltaDistance:	; 2 bytes @ 0x17
  1008                           	global	___awdiv@quotient
  1009  0037                     ___awdiv@quotient:	; 2 bytes @ 0x17
  1010  0037                     	ds	2
  1011                           	global	?_adc_read
  1012  0039                     ?_adc_read:	; 2 bytes @ 0x19
  1013                           	global	driveForDistance@distance
  1014  0039                     driveForDistance@distance:	; 2 bytes @ 0x19
  1015  0039                     	ds	2
  1016                           	global	??_adc_read
  1017  003B                     ??_adc_read:	; 0 bytes @ 0x1B
  1018                           	global	driveForDistance@high
  1019  003B                     driveForDistance@high:	; 1 bytes @ 0x1B
  1020  003B                     	ds	1
  1021                           	global	driveForDistance@low
  1022  003C                     driveForDistance@low:	; 1 bytes @ 0x1C
  1023  003C                     	ds	1
  1024                           	global	??_goBackward
  1025  003D                     ??_goBackward:	; 0 bytes @ 0x1D
  1026                           	global	??_goForward
  1027  003D                     ??_goForward:	; 0 bytes @ 0x1D
  1028                           	global	??_goLeft
  1029  003D                     ??_goLeft:	; 0 bytes @ 0x1D
  1030                           	global	??_goRight
  1031  003D                     ??_goRight:	; 0 bytes @ 0x1D
  1032  003D                     	ds	1
  1033                           	global	??_goToNextCell
  1034  003E                     ??_goToNextCell:	; 0 bytes @ 0x1E
  1035  003E                     	ds	1
  1036                           	global	adc_read@adc_value
  1037  003F                     adc_read@adc_value:	; 2 bytes @ 0x1F
  1038  003F                     	ds	2
  1039                           	global	?_convert
  1040  0041                     ?_convert:	; 2 bytes @ 0x21
  1041                           	global	convert@adc_value
  1042  0041                     convert@adc_value:	; 2 bytes @ 0x21
  1043  0041                     	ds	2
  1044                           	global	??_convert
  1045  0043                     ??_convert:	; 0 bytes @ 0x23
  1046  0043                     	ds	2
  1047                           	global	??_adc_read_channel
  1048  0045                     ??_adc_read_channel:	; 0 bytes @ 0x25
  1049  0045                     	ds	1
  1050                           	global	??_readIR
  1051  0046                     ??_readIR:	; 0 bytes @ 0x26
  1052                           	global	??_findWall
  1053  0046                     ??_findWall:	; 0 bytes @ 0x26
  1054                           	global	??_main
  1055  0046                     ??_main:	; 0 bytes @ 0x26
  1056 ;;Data sizes: Strings 34, constant 0, data 104, bss 50, persistent 0 stack 0
  1057 ;;Auto spaces:   Size  Autos    Used
  1058 ;; COMMON          14      6      12
  1059 ;; BANK0           80     38      70
  1060 ;; BANK1           80     10      72
  1061 ;; BANK3           96      0      56
  1062 ;; BANK2           96      0       0
  1063                           
  1064 ;;
  1065 ;; Pointer list with targets:
  1066                           
  1067 ;; ?_readIR	int  size(1) Largest target is 0
  1068 ;;
  1069 ;; ?_convert	int  size(1) Largest target is 2
  1070 ;;		 -> convert@adc_value(BANK0[2]), 
  1071 ;;
  1072 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1073 ;;
  1074 ;; ?_lcd_write_1_bcd	int  size(1) Largest target is 0
  1075 ;;
  1076 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1077 ;;
  1078 ;; ?_adc_read	int  size(1) Largest target is 0
  1079 ;;
  1080 ;; ?___awdiv	int  size(1) Largest target is 0
  1081 ;;
  1082 ;; ?_adc_read_channel	int  size(1) Largest target is 0
  1083 ;;
  1084 ;; ser_putArr@array	PTR unsigned char  size(2) Largest target is 29
  1085 ;;		 -> champions(BANK1[21]), lookingForU2(BANK3[29]), superMarioBros(BANK1[25]), finalCountdown(BANK3[27]), 
  1086 ;;
  1087 ;; lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 17
  1088 ;;		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1089 ;;
  1090                           
  1091                           
  1092 ;;
  1093 ;; Critical Paths under _main in COMMON
  1094 ;;
  1095 ;;   None.
  1096 ;;
  1097 ;; Critical Paths under _isr1 in COMMON
  1098 ;;
  1099 ;;   _isr1->___lwmod
  1100 ;;
  1101 ;; Critical Paths under _main in BANK0
  1102 ;;
  1103 ;;   _goToNextCell->_goRight
  1104 ;;   _goToNextCell->_goBackward
  1105 ;;   _updateLocation->_lcd_set_cursor
  1106 ;;   _updateLocation->_lcd_write_1_digit_bcd
  1107 ;;   _lookForVictim->_lcd_set_cursor
  1108 ;;   _lookForVictim->_lcd_write_1_digit_bcd
  1109 ;;   _checkForFinalDestination->_lcd_set_cursor
  1110 ;;   _readIR->_adc_read_channel
  1111 ;;   _goRight->_driveForDistance
  1112 ;;   _goLeft->_driveForDistance
  1113 ;;   _goForward->_driveForDistance
  1114 ;;   _goBackward->_driveForDistance
  1115 ;;   _checkIfHome->_drive
  1116 ;;   _initSongs->_ser_putArr
  1117 ;;   _lcd_init->_lcd_write_control
  1118 ;;   _lcd_write_1_digit_bcd->_lcd_write_data
  1119 ;;   _lcd_write_string->_lcd_write_data
  1120 ;;   _turnRight90->_drive
  1121 ;;   _turnLeft90->_drive
  1122 ;;   _turnAround->_drive
  1123 ;;   _lcd_set_cursor->_lcd_write_control
  1124 ;;   _driveForDistance->_drive
  1125 ;;   _adc_read_channel->_convert
  1126 ;;   _convert->_adc_read
  1127 ;;   _ser_putArr->_ser_putch
  1128 ;;   _play_iCreate_song->_ser_putch
  1129 ;;   _initIRobot->_ser_putch
  1130 ;;   _waitFor->_ser_putch
  1131 ;;   _drive->_ser_putch
  1132 ;;   _adc_read->___awdiv
  1133 ;;   ___awdiv->___wmul
  1134 ;;
  1135 ;; Critical Paths under _isr1 in BANK0
  1136 ;;
  1137 ;;   None.
  1138 ;;
  1139 ;; Critical Paths under _main in BANK1
  1140 ;;
  1141 ;;   _main->_findWalls
  1142 ;;   _findWalls->_frontWallCorrect
  1143 ;;   _findWalls->_rightWallCorrect
  1144 ;;   _findWall->_readIR
  1145 ;;   _frontWallCorrect->_readIR
  1146 ;;   _rightWallCorrect->_readIR
  1147 ;;   _readIR->_adc_read_channel
  1148 ;;
  1149 ;; Critical Paths under _isr1 in BANK1
  1150 ;;
  1151 ;;   None.
  1152 ;;
  1153 ;; Critical Paths under _main in BANK3
  1154 ;;
  1155 ;;   None.
  1156 ;;
  1157 ;; Critical Paths under _isr1 in BANK3
  1158 ;;
  1159 ;;   None.
  1160 ;;
  1161 ;; Critical Paths under _main in BANK2
  1162 ;;
  1163 ;;   None.
  1164 ;;
  1165 ;; Critical Paths under _isr1 in BANK2
  1166 ;;
  1167 ;;   None.
  1168                           
  1169 ;;
  1170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1171 ;;
  1172                           
  1173 ;;
  1174 ;;Call Graph Tables:
  1175 ;;
  1176 ;; ---------------------------------------------------------------------------------
  1177 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1178 ;; ---------------------------------------------------------------------------------
  1179 ;; (0) _main                                                 0     0      0   10110
  1180 ;;                               _init
  1181 ;;                              _drive
  1182 ;;                     _lcd_set_cursor
  1183 ;;                   _lcd_write_string
  1184 ;;           _checkForFinalDestination
  1185 ;;                      _lookForVictim
  1186 ;;                          _findWalls
  1187 ;;                       _goToNextCell
  1188 ;;                     _updateLocation
  1189 ;;                         _updateNode
  1190 ;;                        _checkIfHome
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (1) _findWalls                                            1     1      0    5746
  1193 ;;                                              9 BANK1      1     1      0
  1194 ;;                     _lcd_set_cursor
  1195 ;;                           _findWall
  1196 ;;                     _lcd_write_data
  1197 ;;                           _rotateIR
  1198 ;;                   _frontWallCorrect
  1199 ;;                   _rightWallCorrect
  1200 ;; ---------------------------------------------------------------------------------
  1201 ;; (1) _goToNextCell                                         0     0      0    2886
  1202 ;;                             _goLeft
  1203 ;;                          _goForward
  1204 ;;                            _goRight
  1205 ;;                         _goBackward
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (2) _findWall                                             0     0      0    1528
  1208 ;;                             _readIR
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (2) _frontWallCorrect                                     2     2      0    1683
  1211 ;;                                              7 BANK1      2     2      0
  1212 ;;                              _drive
  1213 ;;                             _readIR
  1214 ;; ---------------------------------------------------------------------------------
  1215 ;; (2) _rightWallCorrect                                     2     2      0    2340
  1216 ;;                                              7 BANK1      2     2      0
  1217 ;;                        _turnRight90
  1218 ;;                           _rotateIR
  1219 ;;                              _drive
  1220 ;;                             _readIR
  1221 ;;                         _turnLeft90
  1222 ;; ---------------------------------------------------------------------------------
  1223 ;; (1) _updateLocation                                       1     1      0     158
  1224 ;;                                             14 BANK0      1     1      0
  1225 ;;                     _lcd_set_cursor
  1226 ;;                     _lcd_write_data
  1227 ;;                     _getOrientation
  1228 ;;              _lcd_write_1_digit_bcd
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (1) _lookForVictim                                        2     2      0     406
  1231 ;;                                             14 BANK0      2     2      0
  1232 ;;                  _play_iCreate_song
  1233 ;;                     _lcd_set_cursor
  1234 ;;                     _lcd_write_data
  1235 ;;                      _getVictimZone
  1236 ;;              _lcd_write_1_digit_bcd
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (1) _checkForFinalDestination                             0     0      0     158
  1239 ;;                          _getFinalX
  1240 ;;                          _getFinalY
  1241 ;;                  _play_iCreate_song
  1242 ;;                     _lcd_set_cursor
  1243 ;;                     _lcd_write_data
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (1) _init                                                 0     0      0     223
  1246 ;;                           _init_adc
  1247 ;;                           _lcd_init
  1248 ;;                           _ser_init
  1249 ;;                         _initIRobot
  1250 ;;                          _initSongs
  1251 ;; ---------------------------------------------------------------------------------
  1252 ;; (3) _readIR                                               4     2      2    1528
  1253 ;;                                              3 BANK1      4     2      2
  1254 ;;                   _adc_read_channel
  1255 ;;                            _convert
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (2) _goRight                                              1     1      0     799
  1258 ;;                                             29 BANK0      1     1      0
  1259 ;;                     _lcd_set_cursor
  1260 ;;                     _lcd_write_data
  1261 ;;                        _turnRight90
  1262 ;;                  _updateOrientation
  1263 ;;                   _driveForDistance
  1264 ;; ---------------------------------------------------------------------------------
  1265 ;; (2) _goLeft                                               0     0      0     799
  1266 ;;                     _lcd_set_cursor
  1267 ;;                     _lcd_write_data
  1268 ;;                         _turnLeft90
  1269 ;;                  _updateOrientation
  1270 ;;                   _driveForDistance
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (2) _goForward                                            0     0      0     489
  1273 ;;                     _lcd_set_cursor
  1274 ;;                     _lcd_write_data
  1275 ;;                   _driveForDistance
  1276 ;; ---------------------------------------------------------------------------------
  1277 ;; (2) _goBackward                                           1     1      0     799
  1278 ;;                                             29 BANK0      1     1      0
  1279 ;;                     _lcd_set_cursor
  1280 ;;                     _lcd_write_data
  1281 ;;                         _turnAround
  1282 ;;                  _updateOrientation
  1283 ;;                   _driveForDistance
  1284 ;; ---------------------------------------------------------------------------------
  1285 ;; (1) _checkIfHome                                          0     0      0     217
  1286 ;;                              _drive
  1287 ;;                  _play_iCreate_song
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (2) _initSongs                                            0     0      0     161
  1290 ;;                         _ser_putArr
  1291 ;; ---------------------------------------------------------------------------------
  1292 ;; (2) _lcd_init                                             0     0      0      31
  1293 ;;                  _lcd_write_control
  1294 ;; ---------------------------------------------------------------------------------
  1295 ;; (2) _lcd_write_1_digit_bcd                                1     1      0      62
  1296 ;;                                             13 BANK0      1     1      0
  1297 ;;                     _lcd_write_data
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (1) _lcd_write_string                                     2     2      0      96
  1300 ;;                                             13 BANK0      2     2      0
  1301 ;;                     _lcd_write_data
  1302 ;; ---------------------------------------------------------------------------------
  1303 ;; (3) _turnRight90                                          3     3      0     279
  1304 ;;                                             19 BANK0      3     3      0
  1305 ;;                              _drive
  1306 ;;                            _waitFor
  1307 ;; ---------------------------------------------------------------------------------
  1308 ;; (3) _turnLeft90                                           3     3      0     279
  1309 ;;                                             19 BANK0      3     3      0
  1310 ;;                              _drive
  1311 ;;                            _waitFor
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (3) _turnAround                                           3     3      0     279
  1314 ;;                                             19 BANK0      3     3      0
  1315 ;;                              _drive
  1316 ;;                            _waitFor
  1317 ;; ---------------------------------------------------------------------------------
  1318 ;; (2) _lcd_set_cursor                                       1     1      0      65
  1319 ;;                                             13 BANK0      1     1      0
  1320 ;;                  _lcd_write_control
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (3) _driveForDistance                                    10     8      2     393
  1323 ;;                                             19 BANK0     10     8      2
  1324 ;;                              _drive
  1325 ;;                          _ser_putch
  1326 ;;                          _ser_getch
  1327 ;; ---------------------------------------------------------------------------------
  1328 ;; (4) _adc_read_channel                                     4     2      2     510
  1329 ;;                                             37 BANK0      1     1      0
  1330 ;;                                              0 BANK1      3     1      2
  1331 ;;                           _adc_read
  1332 ;;                            _convert (ARG)
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (4) _convert                                              4     2      2     984
  1335 ;;                                             33 BANK0      4     2      2
  1336 ;;                             ___wmul
  1337 ;;                            ___awdiv
  1338 ;;                           _adc_read (ARG)
  1339 ;; ---------------------------------------------------------------------------------
  1340 ;; (3) _ser_putArr                                           9     5      4     161
  1341 ;;                                             12 BANK0      9     5      4
  1342 ;;                          _ser_putch
  1343 ;; ---------------------------------------------------------------------------------
  1344 ;; (2) _play_iCreate_song                                    1     1      0      62
  1345 ;;                                             12 BANK0      1     1      0
  1346 ;;                          _ser_putch
  1347 ;; ---------------------------------------------------------------------------------
  1348 ;; (2) _initIRobot                                           3     3      0      31
  1349 ;;                                             12 BANK0      3     3      0
  1350 ;;                          _ser_putch
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (3) _lcd_write_control                                    3     3      0      31
  1353 ;;                                             10 BANK0      3     3      0
  1354 ;; ---------------------------------------------------------------------------------
  1355 ;; (3) _rotateIR                                             6     5      1      99
  1356 ;;                                             10 BANK0      6     5      1
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (4) _waitFor                                              6     4      2     124
  1359 ;;                                             12 BANK0      6     4      2
  1360 ;;                          _ser_putch
  1361 ;; ---------------------------------------------------------------------------------
  1362 ;; (3) _lcd_write_data                                       3     3      0      31
  1363 ;;                                             10 BANK0      3     3      0
  1364 ;; ---------------------------------------------------------------------------------
  1365 ;; (4) _ser_getch                                            2     2      0      34
  1366 ;;                                             10 BANK0      2     2      0
  1367 ;;                           _ser_isrx
  1368 ;; ---------------------------------------------------------------------------------
  1369 ;; (2) _drive                                                7     4      3     155
  1370 ;;                                             12 BANK0      7     4      3
  1371 ;;                          _ser_putch
  1372 ;; ---------------------------------------------------------------------------------
  1373 ;; (2) _init_adc                                             1     1      0       0
  1374 ;;                                             10 BANK0      1     1      0
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (5) _adc_read                                             8     6      2     479
  1377 ;;                                             25 BANK0      8     6      2
  1378 ;;                            ___awdiv
  1379 ;; ---------------------------------------------------------------------------------
  1380 ;; (5) ___awdiv                                              9     5      4     445
  1381 ;;                                             16 BANK0      9     5      4
  1382 ;;                             ___wmul (ARG)
  1383 ;; ---------------------------------------------------------------------------------
  1384 ;; (5) ___wmul                                               6     2      4     136
  1385 ;;                                             10 BANK0      6     2      4
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (5) _ser_isrx                                             0     0      0       0
  1388 ;; ---------------------------------------------------------------------------------
  1389 ;; (1) _updateNode                                           1     1      0       0
  1390 ;;                                             10 BANK0      1     1      0
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (2) _getVictimZone                                        3     2      1     186
  1393 ;;                                             10 BANK0      3     2      1
  1394 ;; ---------------------------------------------------------------------------------
  1395 ;; (2) _getFinalY                                            0     0      0       0
  1396 ;; ---------------------------------------------------------------------------------
  1397 ;; (2) _getFinalX                                            0     0      0       0
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; (2) _ser_init                                             1     1      0       0
  1400 ;;                                             10 BANK0      1     1      0
  1401 ;; ---------------------------------------------------------------------------------
  1402 ;; (3) _updateOrientation                                    2     2      0      31
  1403 ;;                                             10 BANK0      2     2      0
  1404 ;; ---------------------------------------------------------------------------------
  1405 ;; (2) _getOrientation                                       0     0      0       0
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; (3) _ser_putch                                            2     2      0      31
  1408 ;;                                             10 BANK0      2     2      0
  1409 ;; ---------------------------------------------------------------------------------
  1410 ;; Estimated maximum stack depth 5
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1413 ;; ---------------------------------------------------------------------------------
  1414 ;; (7) _isr1                                                10    10      0     159
  1415 ;;                                              0 BANK0     10    10      0
  1416 ;;                            ___lwmod
  1417 ;; ---------------------------------------------------------------------------------
  1418 ;; (8) ___lwmod                                              6     2      4     159
  1419 ;;                                              0 COMMON     6     2      4
  1420 ;; ---------------------------------------------------------------------------------
  1421 ;; Estimated maximum stack depth 8
  1422 ;; ---------------------------------------------------------------------------------
  1423                           
  1424 ;; Call Graph Graphs:
  1425                           
  1426 ;; _main (ROOT)
  1427 ;;   _init
  1428 ;;     _init_adc
  1429 ;;     _lcd_init
  1430 ;;       _lcd_write_control
  1431 ;;     _ser_init
  1432 ;;     _initIRobot
  1433 ;;       _ser_putch
  1434 ;;     _initSongs
  1435 ;;       _ser_putArr
  1436 ;;         _ser_putch
  1437 ;;   _drive
  1438 ;;     _ser_putch
  1439 ;;   _lcd_set_cursor
  1440 ;;     _lcd_write_control
  1441 ;;   _lcd_write_string
  1442 ;;     _lcd_write_data
  1443 ;;   _checkForFinalDestination
  1444 ;;     _getFinalX
  1445 ;;     _getFinalY
  1446 ;;     _play_iCreate_song
  1447 ;;       _ser_putch
  1448 ;;     _lcd_set_cursor
  1449 ;;       _lcd_write_control
  1450 ;;     _lcd_write_data
  1451 ;;   _lookForVictim
  1452 ;;     _play_iCreate_song
  1453 ;;       _ser_putch
  1454 ;;     _lcd_set_cursor
  1455 ;;       _lcd_write_control
  1456 ;;     _lcd_write_data
  1457 ;;     _getVictimZone
  1458 ;;     _lcd_write_1_digit_bcd
  1459 ;;       _lcd_write_data
  1460 ;;   _findWalls
  1461 ;;     _lcd_set_cursor
  1462 ;;       _lcd_write_control
  1463 ;;     _findWall
  1464 ;;       _readIR
  1465 ;;         _adc_read_channel
  1466 ;;           _adc_read
  1467 ;;             ___awdiv
  1468 ;;               ___wmul (ARG)
  1469 ;;           _convert (ARG)
  1470 ;;             ___wmul
  1471 ;;             ___awdiv
  1472 ;;               ___wmul (ARG)
  1473 ;;             _adc_read (ARG)
  1474 ;;               ___awdiv
  1475 ;;                 ___wmul (ARG)
  1476 ;;         _convert
  1477 ;;           ___wmul
  1478 ;;           ___awdiv
  1479 ;;             ___wmul (ARG)
  1480 ;;           _adc_read (ARG)
  1481 ;;             ___awdiv
  1482 ;;               ___wmul (ARG)
  1483 ;;     _lcd_write_data
  1484 ;;     _rotateIR
  1485 ;;     _frontWallCorrect
  1486 ;;       _drive
  1487 ;;         _ser_putch
  1488 ;;       _readIR
  1489 ;;         _adc_read_channel
  1490 ;;           _adc_read
  1491 ;;             ___awdiv
  1492 ;;               ___wmul (ARG)
  1493 ;;           _convert (ARG)
  1494 ;;             ___wmul
  1495 ;;             ___awdiv
  1496 ;;               ___wmul (ARG)
  1497 ;;             _adc_read (ARG)
  1498 ;;               ___awdiv
  1499 ;;                 ___wmul (ARG)
  1500 ;;         _convert
  1501 ;;           ___wmul
  1502 ;;           ___awdiv
  1503 ;;             ___wmul (ARG)
  1504 ;;           _adc_read (ARG)
  1505 ;;             ___awdiv
  1506 ;;               ___wmul (ARG)
  1507 ;;     _rightWallCorrect
  1508 ;;       _turnRight90
  1509 ;;         _drive
  1510 ;;           _ser_putch
  1511 ;;         _waitFor
  1512 ;;           _ser_putch
  1513 ;;       _rotateIR
  1514 ;;       _drive
  1515 ;;         _ser_putch
  1516 ;;       _readIR
  1517 ;;         _adc_read_channel
  1518 ;;           _adc_read
  1519 ;;             ___awdiv
  1520 ;;               ___wmul (ARG)
  1521 ;;           _convert (ARG)
  1522 ;;             ___wmul
  1523 ;;             ___awdiv
  1524 ;;               ___wmul (ARG)
  1525 ;;             _adc_read (ARG)
  1526 ;;               ___awdiv
  1527 ;;                 ___wmul (ARG)
  1528 ;;         _convert
  1529 ;;           ___wmul
  1530 ;;           ___awdiv
  1531 ;;             ___wmul (ARG)
  1532 ;;           _adc_read (ARG)
  1533 ;;             ___awdiv
  1534 ;;               ___wmul (ARG)
  1535 ;;       _turnLeft90
  1536 ;;         _drive
  1537 ;;           _ser_putch
  1538 ;;         _waitFor
  1539 ;;           _ser_putch
  1540 ;;   _goToNextCell
  1541 ;;     _goLeft
  1542 ;;       _lcd_set_cursor
  1543 ;;         _lcd_write_control
  1544 ;;       _lcd_write_data
  1545 ;;       _turnLeft90
  1546 ;;         _drive
  1547 ;;           _ser_putch
  1548 ;;         _waitFor
  1549 ;;           _ser_putch
  1550 ;;       _updateOrientation
  1551 ;;       _driveForDistance
  1552 ;;         _drive
  1553 ;;           _ser_putch
  1554 ;;         _ser_putch
  1555 ;;         _ser_getch
  1556 ;;           _ser_isrx
  1557 ;;     _goForward
  1558 ;;       _lcd_set_cursor
  1559 ;;         _lcd_write_control
  1560 ;;       _lcd_write_data
  1561 ;;       _driveForDistance
  1562 ;;         _drive
  1563 ;;           _ser_putch
  1564 ;;         _ser_putch
  1565 ;;         _ser_getch
  1566 ;;           _ser_isrx
  1567 ;;     _goRight
  1568 ;;       _lcd_set_cursor
  1569 ;;         _lcd_write_control
  1570 ;;       _lcd_write_data
  1571 ;;       _turnRight90
  1572 ;;         _drive
  1573 ;;           _ser_putch
  1574 ;;         _waitFor
  1575 ;;           _ser_putch
  1576 ;;       _updateOrientation
  1577 ;;       _driveForDistance
  1578 ;;         _drive
  1579 ;;           _ser_putch
  1580 ;;         _ser_putch
  1581 ;;         _ser_getch
  1582 ;;           _ser_isrx
  1583 ;;     _goBackward
  1584 ;;       _lcd_set_cursor
  1585 ;;         _lcd_write_control
  1586 ;;       _lcd_write_data
  1587 ;;       _turnAround
  1588 ;;         _drive
  1589 ;;           _ser_putch
  1590 ;;         _waitFor
  1591 ;;           _ser_putch
  1592 ;;       _updateOrientation
  1593 ;;       _driveForDistance
  1594 ;;         _drive
  1595 ;;           _ser_putch
  1596 ;;         _ser_putch
  1597 ;;         _ser_getch
  1598 ;;           _ser_isrx
  1599 ;;   _updateLocation
  1600 ;;     _lcd_set_cursor
  1601 ;;       _lcd_write_control
  1602 ;;     _lcd_write_data
  1603 ;;     _getOrientation
  1604 ;;     _lcd_write_1_digit_bcd
  1605 ;;       _lcd_write_data
  1606 ;;   _updateNode
  1607 ;;   _checkIfHome
  1608 ;;     _drive
  1609 ;;       _ser_putch
  1610 ;;     _play_iCreate_song
  1611 ;;       _ser_putch
  1612 ;;
  1613 ;; _isr1 (ROOT)
  1614 ;;   ___lwmod
  1615 ;;
  1616                           
  1617 ;; Address spaces:
  1618                           
  1619 ;;Name               Size   Autos  Total    Cost      Usage
  1620 ;;BANK3               60      0      38       9       58.3%
  1621 ;;BITBANK3            60      0       0       8        0.0%
  1622 ;;SFR3                 0      0       0       4        0.0%
  1623 ;;BITSFR3              0      0       0       4        0.0%
  1624 ;;BANK2               60      0       0      11        0.0%
  1625 ;;BITBANK2            60      0       0      10        0.0%
  1626 ;;SFR2                 0      0       0       5        0.0%
  1627 ;;BITSFR2              0      0       0       5        0.0%
  1628 ;;SFR1                 0      0       0       2        0.0%
  1629 ;;BITSFR1              0      0       0       2        0.0%
  1630 ;;BANK1               50      A      48       7       90.0%
  1631 ;;BITBANK1            50      0       0       6        0.0%
  1632 ;;CODE                 0      0       0       0        0.0%
  1633 ;;DATA                 0      0      DC      12        0.0%
  1634 ;;ABS                  0      0      D2       3        0.0%
  1635 ;;NULL                 0      0       0       0        0.0%
  1636 ;;STACK                0      0       A       2        0.0%
  1637 ;;BANK0               50     26      46       5       87.5%
  1638 ;;BITBANK0            50      0       0       4        0.0%
  1639 ;;SFR0                 0      0       0       1        0.0%
  1640 ;;BITSFR0              0      0       0       1        0.0%
  1641 ;;COMMON               E      6       C       1       85.7%
  1642 ;;BITCOMMON            E      0       2       0       14.3%
  1643 ;;EEDATA             100      0       0       0        0.0%
  1644                           
  1645                           	global	_main
  1646                           psect	maintext,global,class=CODE,delta=2
  1647                           global __pmaintext
  1648  0453                     __pmaintext:
  1649                           
  1650 ;; *************** function _main *****************
  1651 ;; Defined at:
  1652 ;;		line 258 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;		None               void
  1659 ;; Registers used:
  1660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 17F/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1666 ;;      Params:         0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels required when called:    8
  1672 ;; This function calls:
  1673 ;;		_init
  1674 ;;		_drive
  1675 ;;		_lcd_set_cursor
  1676 ;;		_lcd_write_string
  1677 ;;		_checkForFinalDestination
  1678 ;;		_lookForVictim
  1679 ;;		_findWalls
  1680 ;;		_goToNextCell
  1681 ;;		_updateLocation
  1682 ;;		_updateNode
  1683 ;;		_checkIfHome
  1684 ;; This function is called by:
  1685 ;;		Startup code after reset
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           psect	maintext
  1689                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  1690                           	line	258
  1691                           	global	__size_of_main
  1692  0087                     	__size_of_main	equ	__end_of_main-_main
  1693                           	
  1694  0453                     _main:	
  1695                           	opt	stack 0
  1696                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1697                           	line	259
  1698                           	
  1699  0453                     l10844:	
  1700                           ;main.c: 259: init();
  1701  0453  120A  158A  25B3   	fcall	_init
              120A  118A         
  1702                           	line	260
  1703                           ;main.c: 260: drive(0, 0, 0, 0);
  1704  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  1705  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  1706  045A  01AC               	clrf	(?_drive)
  1707  045B  01AD               	clrf	0+(?_drive)+01h
  1708  045C  01AE               	clrf	0+(?_drive)+02h
  1709  045D  3000               	movlw	(0)
  1710  045E  120A  158A  25E9   	fcall	_drive
              120A  118A         
  1711                           	line	262
  1712                           	
  1713  0463                     l10846:	
  1714                           ;main.c: 262: lcd_set_cursor(0x00);
  1715  0463  3000               	movlw	(0)
  1716  0464  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  118A         
  1717                           	line	263
  1718                           	
  1719  0469                     l10848:	
  1720                           ;main.c: 263: lcd_write_string("(-,-) E -- --- -");
  1721  0469  3001               	movlw	((STR_1-__stringbase))&0ffh
  1722  046A  120A  158A  23BB   	fcall	_lcd_write_string
              120A  118A         
  1723                           	line	264
  1724                           ;main.c: 264: lcd_set_cursor(0x40);
  1725  046F  3040               	movlw	(040h)
  1726  0470  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  118A         
  1727                           	line	265
  1728                           	
  1729  0475                     l10850:	
  1730                           ;main.c: 265: lcd_write_string("- - - (0,0) GREG");
  1731  0475  3012               	movlw	((STR_2-__stringbase))&0ffh
  1732  0476  120A  158A  23BB   	fcall	_lcd_write_string
              120A  118A         
  1733                           	line	269
  1734                           ;main.c: 269: while(!home)
  1735  047B  2CD2               	goto	l10878
  1736                           	
  1737  047C                     l3059:	
  1738                           	line	271
  1739                           	
  1740  047C                     l10852:	
  1741                           ;main.c: 270: {
  1742                           ;main.c: 271: if(start.pressed)
  1743  047C  1283               	bcf	status, 5	;RP0=0, select bank0
  1744  047D  1303               	bcf	status, 6	;RP1=0, select bank0
  1745  047E  0856               	movf	(_start),w
  1746  047F  1D03               	skipz
  1747  0480  2C82               	goto	u4700
  1748  0481  2CD2               	goto	l10878
  1749  0482                     u4700:
  1750                           	line	273
  1751                           	
  1752  0482                     l10854:	
  1753                           ;main.c: 272: {
  1754                           ;main.c: 273: checkForFinalDestination();
  1755  0482  120A  158A  2529   	fcall	_checkForFinalDestination
              120A  118A         
  1756                           	line	274
  1757                           ;main.c: 274: lookForVictim();
  1758  0487  120A  158A  27C0   	fcall	_lookForVictim
              120A  118A         
  1759                           	line	275
  1760                           	
  1761  048C                     l10856:	
  1762                           ;main.c: 275: findWalls();
  1763  048C  120A  118A  22AE   	fcall	_findWalls
              120A  118A         
  1764                           	line	276
  1765                           ;main.c: 276: switch(node)
  1766  0491  2CAC               	goto	l10868
  1767                           	line	278
  1768                           ;main.c: 277: {
  1769                           ;main.c: 278: case 0:
  1770                           	
  1771  0492                     l3062:	
  1772                           	line	279
  1773                           	
  1774  0492                     l10858:	
  1775                           ;main.c: 279: goToNextCell();
  1776  0492  120A  158A  23E0   	fcall	_goToNextCell
              120A  118A         
  1777                           	line	280
  1778                           ;main.c: 280: break;
  1779  0497  2CBC               	goto	l10870
  1780                           	line	281
  1781                           ;main.c: 281: case 1:
  1782                           	
  1783  0498                     l3064:	
  1784                           	line	282
  1785                           	
  1786  0498                     l10860:	
  1787                           ;main.c: 282: goToNextCell();
  1788  0498  120A  158A  23E0   	fcall	_goToNextCell
              120A  118A         
  1789                           	line	283
  1790                           ;main.c: 283: break;
  1791  049D  2CBC               	goto	l10870
  1792                           	line	284
  1793                           ;main.c: 284: case 2:
  1794                           	
  1795  049E                     l3065:	
  1796                           	line	285
  1797                           	
  1798  049E                     l10862:	
  1799                           ;main.c: 285: goToNextCell();
  1800  049E  120A  158A  23E0   	fcall	_goToNextCell
              120A  118A         
  1801                           	line	286
  1802                           ;main.c: 286: break;
  1803  04A3  2CBC               	goto	l10870
  1804                           	line	287
  1805                           ;main.c: 287: case 3:
  1806                           	
  1807  04A4                     l3066:	
  1808                           	line	288
  1809                           	
  1810  04A4                     l10864:	
  1811                           ;main.c: 288: goToNextCell();
  1812  04A4  120A  158A  23E0   	fcall	_goToNextCell
              120A  118A         
  1813                           	line	289
  1814                           ;main.c: 289: break;
  1815  04A9  2CBC               	goto	l10870
  1816                           	line	290
  1817                           ;main.c: 290: default:
  1818                           	
  1819  04AA                     l3067:	
  1820                           	line	291
  1821                           ;main.c: 291: break;
  1822  04AA  2CBC               	goto	l10870
  1823                           	line	292
  1824                           	
  1825  04AB                     l10866:	
  1826                           ;main.c: 292: }
  1827  04AB  2CBC               	goto	l10870
  1828                           	line	276
  1829                           	
  1830  04AC                     l3061:	
  1831                           	
  1832  04AC                     l10868:	
  1833  04AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1834  04AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1835  04AE  085F               	movf	(_node),w	;volatile
  1836                           	; Switch size 1, requested type "space"
  1837                           ; Number of cases is 4, Range of values is 0 to 3
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte           13     7 (average)
  1841                           ; direct_byte           20     8 (fixed)
  1842                           ; jumptable            260     6 (fixed)
  1843                           ; rangetable             8     6 (fixed)
  1844                           ; spacedrange           14     9 (fixed)
  1845                           ; locatedrange           4     3 (fixed)
  1846                           ;	Chosen strategy is simple_byte
  1847                           
  1848                           	opt asmopt_off
  1849  04AF  3A00               	xorlw	0^0	; case 0
  1850  04B0  1903               	skipnz
  1851  04B1  2C92               	goto	l10858
  1852  04B2  3A01               	xorlw	1^0	; case 1
  1853  04B3  1903               	skipnz
  1854  04B4  2C98               	goto	l10860
  1855  04B5  3A03               	xorlw	2^1	; case 2
  1856  04B6  1903               	skipnz
  1857  04B7  2C9E               	goto	l10862
  1858  04B8  3A01               	xorlw	3^2	; case 3
  1859  04B9  1903               	skipnz
  1860  04BA  2CA4               	goto	l10864
  1861  04BB  2CBC               	goto	l10870
  1862                           	opt asmopt_on
  1863                           
  1864                           	line	292
  1865                           	
  1866  04BC                     l3063:	
  1867                           	line	294
  1868                           	
  1869  04BC                     l10870:	
  1870                           ;main.c: 294: updateLocation();
  1871  04BC  120A  118A  263B   	fcall	_updateLocation
              120A  118A         
  1872                           	line	295
  1873                           	
  1874  04C1                     l10872:	
  1875                           ;main.c: 295: updateNode();
  1876  04C1  120A  158A  2705   	fcall	_updateNode
              120A  118A         
  1877                           	line	296
  1878                           	
  1879  04C6                     l10874:	
  1880                           ;main.c: 296: if(goingHome)
  1881  04C6  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  1882  04C7  2CC9               	goto	u4711
  1883  04C8  2CCA               	goto	u4710
  1884  04C9                     u4711:
  1885  04C9  2CD2               	goto	l10878
  1886  04CA                     u4710:
  1887                           	line	297
  1888                           	
  1889  04CA                     l10876:	
  1890                           ;main.c: 297: checkIfHome();
  1891  04CA  120A  158A  2358   	fcall	_checkIfHome
              120A  118A         
  1892  04CF  2CD2               	goto	l10878
  1893                           	
  1894  04D0                     l3068:	
  1895  04D0  2CD2               	goto	l10878
  1896                           	line	298
  1897                           	
  1898  04D1                     l3060:	
  1899  04D1  2CD2               	goto	l10878
  1900                           	line	299
  1901                           	
  1902  04D2                     l3058:	
  1903                           	line	269
  1904                           	
  1905  04D2                     l10878:	
  1906  04D2  1F70               	btfss	(_home/8),(_home)&7
  1907  04D3  2CD5               	goto	u4721
  1908  04D4  2CD6               	goto	u4720
  1909  04D5                     u4721:
  1910  04D5  2C7C               	goto	l10852
  1911  04D6                     u4720:
  1912  04D6  2CD7               	goto	l3070
  1913                           	
  1914  04D7                     l3069:	
  1915                           	line	301
  1916                           	
  1917  04D7                     l3070:	
  1918                           	global	start
  1919  04D7  120A  118A  2812   	ljmp	start
  1920                           	opt stack 0
  1921                           GLOBAL	__end_of_main
  1922  04DA                     	__end_of_main:
  1923 ;; =============== function _main ends ============
  1924                           
  1925                           	signat	_main,88
  1926                           	global	_findWalls
  1927                           psect	text1548,local,class=CODE,delta=2
  1928                           global __ptext1548
  1929  02AE                     __ptext1548:
  1930                           
  1931 ;; *************** function _findWalls *****************
  1932 ;; Defined at:
  1933 ;;		line 157 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1947 ;;      Params:         0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0
  1949 ;;      Temps:          0       0       1       0       0
  1950 ;;      Totals:         0       0       1       0       0
  1951 ;;Total ram usage:        1 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    7
  1954 ;; This function calls:
  1955 ;;		_lcd_set_cursor
  1956 ;;		_findWall
  1957 ;;		_lcd_write_data
  1958 ;;		_rotateIR
  1959 ;;		_frontWallCorrect
  1960 ;;		_rightWallCorrect
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           psect	text1548
  1966                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  1967                           	line	157
  1968                           	global	__size_of_findWalls
  1969  008F                     	__size_of_findWalls	equ	__end_of_findWalls-_findWalls
  1970                           	
  1971  02AE                     _findWalls:	
  1972                           	opt	stack 0
  1973                           ; Regs used in _findWalls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1974                           	line	158
  1975                           	
  1976  02AE                     l10814:	
  1977                           ;main.c: 158: lcd_set_cursor(0x0B);
  1978  02AE  300B               	movlw	(0Bh)
  1979  02AF  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  118A         
  1980                           	line	160
  1981                           	
  1982  02B4                     l10816:	
  1983                           ;main.c: 160: leftWall = findWall();
  1984  02B4  120A  158A  233C   	fcall	_findWall
              120A  118A         
  1985  02B9  1803               	btfsc	status,0
  1986  02BA  2ABC               	goto	u4611
  1987  02BB  2ABE               	goto	u4610
  1988                           	
  1989  02BC                     u4611:
  1990  02BC  17F0               	bsf	(_leftWall/8),(_leftWall)&7
  1991  02BD  2ABF               	goto	u4624
  1992  02BE                     u4610:
  1993  02BE  13F0               	bcf	(_leftWall/8),(_leftWall)&7
  1994  02BF                     u4624:
  1995                           	line	161
  1996                           	
  1997  02BF                     l10818:	
  1998                           ;main.c: 161: if(leftWall)
  1999  02BF  1FF0               	btfss	(_leftWall/8),(_leftWall)&7
  2000  02C0  2AC2               	goto	u4631
  2001  02C1  2AC3               	goto	u4630
  2002  02C2                     u4631:
  2003  02C2  2ACA               	goto	l10822
  2004  02C3                     u4630:
  2005                           	line	163
  2006                           	
  2007  02C3                     l10820:	
  2008                           ;main.c: 162: {
  2009                           ;main.c: 163: lcd_write_data('L');
  2010  02C3  304C               	movlw	(04Ch)
  2011  02C4  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2012                           	line	164
  2013                           ;main.c: 164: }
  2014  02C9  2AD0               	goto	l3018
  2015                           	line	165
  2016                           	
  2017  02CA                     l3017:	
  2018                           	line	166
  2019                           	
  2020  02CA                     l10822:	
  2021                           ;main.c: 165: else
  2022                           ;main.c: 166: lcd_write_data(' ');
  2023  02CA  3020               	movlw	(020h)
  2024  02CB  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2025                           	
  2026  02D0                     l3018:	
  2027                           	line	167
  2028                           ;main.c: 167: rotateIR(24, 0b00001111);
  2029  02D0  300F               	movlw	(0Fh)
  2030  02D1  1683               	bsf	status, 5	;RP0=1, select bank1
  2031  02D2  1303               	bcf	status, 6	;RP1=0, select bank1
  2032  02D3  00E7               	movwf	(??_findWalls+0)^080h+0
  2033  02D4  0867               	movf	(??_findWalls+0)^080h+0,w
  2034  02D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2035  02D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2036  02D7  00AA               	movwf	(?_rotateIR)
  2037  02D8  3018               	movlw	(018h)
  2038  02D9  120A  118A  26EF   	fcall	_rotateIR
              120A  118A         
  2039                           	line	169
  2040                           	
  2041  02DE                     l10824:	
  2042                           ;main.c: 169: frontWall = findWall();
  2043  02DE  120A  158A  233C   	fcall	_findWall
              120A  118A         
  2044  02E3  1803               	btfsc	status,0
  2045  02E4  2AE6               	goto	u4641
  2046  02E5  2AE8               	goto	u4640
  2047                           	
  2048  02E6                     u4641:
  2049  02E6  1670               	bsf	(_frontWall/8),(_frontWall)&7
  2050  02E7  2AE9               	goto	u4654
  2051  02E8                     u4640:
  2052  02E8  1270               	bcf	(_frontWall/8),(_frontWall)&7
  2053  02E9                     u4654:
  2054                           	line	170
  2055                           	
  2056  02E9                     l10826:	
  2057                           ;main.c: 170: if(frontWall)
  2058  02E9  1E70               	btfss	(_frontWall/8),(_frontWall)&7
  2059  02EA  2AEC               	goto	u4661
  2060  02EB  2AED               	goto	u4660
  2061  02EC                     u4661:
  2062  02EC  2AF9               	goto	l10832
  2063  02ED                     u4660:
  2064                           	line	172
  2065                           	
  2066  02ED                     l10828:	
  2067                           ;main.c: 171: {
  2068                           ;main.c: 172: lcd_write_data('F');
  2069  02ED  3046               	movlw	(046h)
  2070  02EE  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2071                           	line	173
  2072                           	
  2073  02F3                     l10830:	
  2074                           ;main.c: 173: frontWallCorrect();
  2075  02F3  120A  118A  23CB   	fcall	_frontWallCorrect
              120A  118A         
  2076                           	line	174
  2077                           ;main.c: 174: }
  2078  02F8  2AFF               	goto	l3020
  2079                           	line	175
  2080                           	
  2081  02F9                     l3019:	
  2082                           	line	176
  2083                           	
  2084  02F9                     l10832:	
  2085                           ;main.c: 175: else
  2086                           ;main.c: 176: lcd_write_data(' ');
  2087  02F9  3020               	movlw	(020h)
  2088  02FA  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2089                           	
  2090  02FF                     l3020:	
  2091                           	line	177
  2092                           ;main.c: 177: rotateIR(24, 0b00001111);
  2093  02FF  300F               	movlw	(0Fh)
  2094  0300  1683               	bsf	status, 5	;RP0=1, select bank1
  2095  0301  1303               	bcf	status, 6	;RP1=0, select bank1
  2096  0302  00E7               	movwf	(??_findWalls+0)^080h+0
  2097  0303  0867               	movf	(??_findWalls+0)^080h+0,w
  2098  0304  1283               	bcf	status, 5	;RP0=0, select bank0
  2099  0305  1303               	bcf	status, 6	;RP1=0, select bank0
  2100  0306  00AA               	movwf	(?_rotateIR)
  2101  0307  3018               	movlw	(018h)
  2102  0308  120A  118A  26EF   	fcall	_rotateIR
              120A  118A         
  2103                           	line	179
  2104                           	
  2105  030D                     l10834:	
  2106                           ;main.c: 179: rightWall = findWall();
  2107  030D  120A  158A  233C   	fcall	_findWall
              120A  118A         
  2108  0312  1803               	btfsc	status,0
  2109  0313  2B15               	goto	u4671
  2110  0314  2B17               	goto	u4670
  2111                           	
  2112  0315                     u4671:
  2113  0315  14F1               	bsf	(_rightWall/8),(_rightWall)&7
  2114  0316  2B18               	goto	u4684
  2115  0317                     u4670:
  2116  0317  10F1               	bcf	(_rightWall/8),(_rightWall)&7
  2117  0318                     u4684:
  2118                           	line	180
  2119                           	
  2120  0318                     l10836:	
  2121                           ;main.c: 180: if(rightWall)
  2122  0318  1CF1               	btfss	(_rightWall/8),(_rightWall)&7
  2123  0319  2B1B               	goto	u4691
  2124  031A  2B1C               	goto	u4690
  2125  031B                     u4691:
  2126  031B  2B28               	goto	l10842
  2127  031C                     u4690:
  2128                           	line	182
  2129                           	
  2130  031C                     l10838:	
  2131                           ;main.c: 181: {
  2132                           ;main.c: 182: lcd_write_data('R');
  2133  031C  3052               	movlw	(052h)
  2134  031D  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2135                           	line	183
  2136                           	
  2137  0322                     l10840:	
  2138                           ;main.c: 183: rightWallCorrect();
  2139  0322  120A  118A  233D   	fcall	_rightWallCorrect
              120A  118A         
  2140                           	line	184
  2141                           ;main.c: 184: }
  2142  0327  2B2E               	goto	l3022
  2143                           	line	185
  2144                           	
  2145  0328                     l3021:	
  2146                           	line	186
  2147                           	
  2148  0328                     l10842:	
  2149                           ;main.c: 185: else
  2150                           ;main.c: 186: lcd_write_data(' ');
  2151  0328  3020               	movlw	(020h)
  2152  0329  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2153                           	
  2154  032E                     l3022:	
  2155                           	line	187
  2156                           ;main.c: 187: rotateIR(48, 0b00001101);
  2157  032E  300D               	movlw	(0Dh)
  2158  032F  1683               	bsf	status, 5	;RP0=1, select bank1
  2159  0330  1303               	bcf	status, 6	;RP1=0, select bank1
  2160  0331  00E7               	movwf	(??_findWalls+0)^080h+0
  2161  0332  0867               	movf	(??_findWalls+0)^080h+0,w
  2162  0333  1283               	bcf	status, 5	;RP0=0, select bank0
  2163  0334  1303               	bcf	status, 6	;RP1=0, select bank0
  2164  0335  00AA               	movwf	(?_rotateIR)
  2165  0336  3030               	movlw	(030h)
  2166  0337  120A  118A  26EF   	fcall	_rotateIR
              120A  118A         
  2167                           	line	188
  2168                           	
  2169  033C                     l3023:	
  2170  033C  0008               	return
  2171                           	opt stack 0
  2172                           GLOBAL	__end_of_findWalls
  2173  033D                     	__end_of_findWalls:
  2174 ;; =============== function _findWalls ends ============
  2175                           
  2176                           	signat	_findWalls,88
  2177                           	global	_goToNextCell
  2178                           psect	text1549,local,class=CODE,delta=2
  2179                           global __ptext1549
  2180  0BE0                     __ptext1549:
  2181                           
  2182 ;; *************** function _goToNextCell *****************
  2183 ;; Defined at:
  2184 ;;		line 191 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    6
  2205 ;; This function calls:
  2206 ;;		_goLeft
  2207 ;;		_goForward
  2208 ;;		_goRight
  2209 ;;		_goBackward
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           psect	text1549
  2215                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  2216                           	line	191
  2217                           	global	__size_of_goToNextCell
  2218  0027                     	__size_of_goToNextCell	equ	__end_of_goToNextCell-_goToNextCell
  2219                           	
  2220  0BE0                     _goToNextCell:	
  2221                           	opt	stack 1
  2222                           ; Regs used in _goToNextCell: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2223                           	line	192
  2224                           	
  2225  0BE0                     l10804:	
  2226                           ;main.c: 192: if(!leftWall)
  2227  0BE0  1BF0               	btfsc	(_leftWall/8),(_leftWall)&7
  2228  0BE1  2BE3               	goto	u4581
  2229  0BE2  2BE4               	goto	u4580
  2230  0BE3                     u4581:
  2231  0BE3  2BEA               	goto	l3026
  2232  0BE4                     u4580:
  2233                           	line	193
  2234                           	
  2235  0BE4                     l10806:	
  2236                           ;main.c: 193: goLeft();
  2237  0BE4  120A  158A  242F   	fcall	_goLeft
              120A  158A         
  2238  0BE9  2C06               	goto	l3032
  2239                           	line	194
  2240                           	
  2241  0BEA                     l3026:	
  2242                           ;main.c: 194: else if(!frontWall)
  2243  0BEA  1A70               	btfsc	(_frontWall/8),(_frontWall)&7
  2244  0BEB  2BED               	goto	u4591
  2245  0BEC  2BEE               	goto	u4590
  2246  0BED                     u4591:
  2247  0BED  2BF4               	goto	l3028
  2248  0BEE                     u4590:
  2249                           	line	195
  2250                           	
  2251  0BEE                     l10808:	
  2252                           ;main.c: 195: goForward();
  2253  0BEE  120A  158A  2305   	fcall	_goForward
              120A  158A         
  2254  0BF3  2C06               	goto	l3032
  2255                           	line	196
  2256                           	
  2257  0BF4                     l3028:	
  2258                           ;main.c: 196: else if(!rightWall)
  2259  0BF4  18F1               	btfsc	(_rightWall/8),(_rightWall)&7
  2260  0BF5  2BF7               	goto	u4601
  2261  0BF6  2BF8               	goto	u4600
  2262  0BF7                     u4601:
  2263  0BF7  2BFE               	goto	l10812
  2264  0BF8                     u4600:
  2265                           	line	197
  2266                           	
  2267  0BF8                     l10810:	
  2268                           ;main.c: 197: goRight();
  2269  0BF8  120A  158A  24A9   	fcall	_goRight
              120A  158A         
  2270  0BFD  2C06               	goto	l3032
  2271                           	line	198
  2272                           	
  2273  0BFE                     l3030:	
  2274                           	line	199
  2275                           	
  2276  0BFE                     l10812:	
  2277                           ;main.c: 198: else
  2278                           ;main.c: 199: goBackward();
  2279  0BFE  120A  158A  2480   	fcall	_goBackward
              120A  158A         
  2280  0C03  2C06               	goto	l3032
  2281                           	
  2282  0C04                     l3031:	
  2283  0C04  2C06               	goto	l3032
  2284                           	
  2285  0C05                     l3029:	
  2286  0C05  2C06               	goto	l3032
  2287                           	
  2288  0C06                     l3027:	
  2289                           	line	200
  2290                           	
  2291  0C06                     l3032:	
  2292  0C06  0008               	return
  2293                           	opt stack 0
  2294                           GLOBAL	__end_of_goToNextCell
  2295  0C07                     	__end_of_goToNextCell:
  2296 ;; =============== function _goToNextCell ends ============
  2297                           
  2298                           	signat	_goToNextCell,88
  2299                           	global	_findWall
  2300                           psect	text1550,local,class=CODE,delta=2
  2301                           global __ptext1550
  2302  0B3C                     __ptext1550:
  2303                           
  2304 ;; *************** function _findWall *****************
  2305 ;; Defined at:
  2306 ;;		line 307 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;		None               void
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0
  2323 ;;      Totals:         0       0       0       0       0
  2324 ;;Total ram usage:        0 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    6
  2327 ;; This function calls:
  2328 ;;		_readIR
  2329 ;; This function is called by:
  2330 ;;		_findWalls
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           psect	text1550
  2334                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  2335                           	line	307
  2336                           	global	__size_of_findWall
  2337  001C                     	__size_of_findWall	equ	__end_of_findWall-_findWall
  2338                           	
  2339  0B3C                     _findWall:	
  2340                           	opt	stack 0
  2341                           ; Regs used in _findWall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2342                           	line	308
  2343                           	
  2344  0B3C                     l10792:	
  2345                           ;main.c: 308: if(readIR() > 100)
  2346  0B3C  120A  158A  2584   	fcall	_readIR
              120A  158A         
  2347  0B41  1683               	bsf	status, 5	;RP0=1, select bank1
  2348  0B42  1303               	bcf	status, 6	;RP1=0, select bank1
  2349  0B43  0862               	movf	(1+(?_readIR))^080h,w
  2350  0B44  3A80               	xorlw	80h
  2351  0B45  00FF               	movwf	btemp+1
  2352  0B46  3080               	movlw	(high(065h))^80h
  2353  0B47  027F               	subwf	btemp+1,w
  2354  0B48  1D03               	skipz
  2355  0B49  2B4C               	goto	u4575
  2356  0B4A  3065               	movlw	low(065h)
  2357  0B4B  0261               	subwf	(0+(?_readIR))^080h,w
  2358  0B4C                     u4575:
  2359                           
  2360  0B4C  1C03               	skipc
  2361  0B4D  2B4F               	goto	u4571
  2362  0B4E  2B50               	goto	u4570
  2363  0B4F                     u4571:
  2364  0B4F  2B54               	goto	l10800
  2365  0B50                     u4570:
  2366                           	line	309
  2367                           	
  2368  0B50                     l10794:	
  2369                           ;main.c: 309: return 0;
  2370  0B50  1003               	clrc
  2371                           	
  2372  0B51  2B57               	goto	l3074
  2373                           	
  2374  0B52                     l10796:	
  2375  0B52  2B57               	goto	l3074
  2376                           	
  2377  0B53                     l10798:	
  2378  0B53  2B57               	goto	l3074
  2379                           	line	310
  2380                           	
  2381  0B54                     l3073:	
  2382                           	line	311
  2383                           	
  2384  0B54                     l10800:	
  2385                           ;main.c: 310: else
  2386                           ;main.c: 311: return 1;
  2387  0B54  1403               	setc
  2388                           	
  2389  0B55  2B57               	goto	l3074
  2390                           	
  2391  0B56                     l10802:	
  2392  0B56  2B57               	goto	l3074
  2393                           	
  2394  0B57                     l3075:	
  2395                           	line	312
  2396                           	
  2397  0B57                     l3074:	
  2398  0B57  0008               	return
  2399                           	opt stack 0
  2400                           GLOBAL	__end_of_findWall
  2401  0B58                     	__end_of_findWall:
  2402 ;; =============== function _findWall ends ============
  2403                           
  2404                           	signat	_findWall,88
  2405                           	global	_frontWallCorrect
  2406                           psect	text1551,local,class=CODE,delta=2
  2407                           global __ptext1551
  2408  03CB                     __ptext1551:
  2409                           
  2410 ;; *************** function _frontWallCorrect *****************
  2411 ;; Defined at:
  2412 ;;		line 203 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2426 ;;      Params:         0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0
  2428 ;;      Temps:          0       0       2       0       0
  2429 ;;      Totals:         0       0       2       0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    6
  2433 ;; This function calls:
  2434 ;;		_drive
  2435 ;;		_readIR
  2436 ;; This function is called by:
  2437 ;;		_findWalls
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           psect	text1551
  2441                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  2442                           	line	203
  2443                           	global	__size_of_frontWallCorrect
  2444  0088                     	__size_of_frontWallCorrect	equ	__end_of_frontWallCorrect-_frontWallCorrect
  2445                           	
  2446  03CB                     _frontWallCorrect:	
  2447                           	opt	stack 0
  2448                           ; Regs used in _frontWallCorrect: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2449                           	line	204
  2450                           	
  2451  03CB                     l10776:	
  2452                           ;drive.c: 204: while(readIR() < 50)
  2453  03CB  2BE4               	goto	l10780
  2454                           	
  2455  03CC                     l1483:	
  2456                           	line	206
  2457                           	
  2458  03CC                     l10778:	
  2459                           ;drive.c: 205: {
  2460                           ;drive.c: 206: drive(255, 131, 128, 0);
  2461  03CC  3083               	movlw	(083h)
  2462  03CD  1683               	bsf	status, 5	;RP0=1, select bank1
  2463  03CE  1303               	bcf	status, 6	;RP1=0, select bank1
  2464  03CF  00E5               	movwf	(??_frontWallCorrect+0)^080h+0
  2465  03D0  0865               	movf	(??_frontWallCorrect+0)^080h+0,w
  2466  03D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2467  03D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2468  03D3  00AC               	movwf	(?_drive)
  2469  03D4  3080               	movlw	(080h)
  2470  03D5  1683               	bsf	status, 5	;RP0=1, select bank1
  2471  03D6  1303               	bcf	status, 6	;RP1=0, select bank1
  2472  03D7  00E6               	movwf	(??_frontWallCorrect+1)^080h+0
  2473  03D8  0866               	movf	(??_frontWallCorrect+1)^080h+0,w
  2474  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2475  03DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2476  03DB  00AD               	movwf	0+(?_drive)+01h
  2477  03DC  01AE               	clrf	0+(?_drive)+02h
  2478  03DD  30FF               	movlw	(0FFh)
  2479  03DE  120A  158A  25E9   	fcall	_drive
              120A  118A         
  2480  03E3  2BE4               	goto	l10780
  2481                           	line	207
  2482                           	
  2483  03E4                     l1482:	
  2484                           	line	204
  2485                           	
  2486  03E4                     l10780:	
  2487  03E4  120A  158A  2584   	fcall	_readIR
              120A  118A         
  2488  03E9  1683               	bsf	status, 5	;RP0=1, select bank1
  2489  03EA  1303               	bcf	status, 6	;RP1=0, select bank1
  2490  03EB  0862               	movf	(1+(?_readIR))^080h,w
  2491  03EC  3A80               	xorlw	80h
  2492  03ED  00FF               	movwf	btemp+1
  2493  03EE  3080               	movlw	(high(032h))^80h
  2494  03EF  027F               	subwf	btemp+1,w
  2495  03F0  1D03               	skipz
  2496  03F1  2BF4               	goto	u4545
  2497  03F2  3032               	movlw	low(032h)
  2498  03F3  0261               	subwf	(0+(?_readIR))^080h,w
  2499  03F4                     u4545:
  2500                           
  2501  03F4  1C03               	skipc
  2502  03F5  2BF7               	goto	u4541
  2503  03F6  2BF8               	goto	u4540
  2504  03F7                     u4541:
  2505  03F7  2BCC               	goto	l10778
  2506  03F8                     u4540:
  2507  03F8  2BF9               	goto	l10782
  2508                           	
  2509  03F9                     l1484:	
  2510                           	line	208
  2511                           	
  2512  03F9                     l10782:	
  2513                           ;drive.c: 207: }
  2514                           ;drive.c: 208: drive(0, 0, 0, 0);
  2515  03F9  1283               	bcf	status, 5	;RP0=0, select bank0
  2516  03FA  1303               	bcf	status, 6	;RP1=0, select bank0
  2517  03FB  01AC               	clrf	(?_drive)
  2518  03FC  01AD               	clrf	0+(?_drive)+01h
  2519  03FD  01AE               	clrf	0+(?_drive)+02h
  2520  03FE  3000               	movlw	(0)
  2521  03FF  120A  158A  25E9   	fcall	_drive
              120A  118A         
  2522                           	line	210
  2523                           ;drive.c: 210: while(readIR() > 55 && readIR() < 100)
  2524  0404  2C1D               	goto	l10786
  2525                           	
  2526  0405                     l1486:	
  2527                           	line	212
  2528                           	
  2529  0405                     l10784:	
  2530                           ;drive.c: 211: {
  2531                           ;drive.c: 212: drive(0, 250, 128, 0);
  2532  0405  30FA               	movlw	(0FAh)
  2533  0406  1683               	bsf	status, 5	;RP0=1, select bank1
  2534  0407  1303               	bcf	status, 6	;RP1=0, select bank1
  2535  0408  00E5               	movwf	(??_frontWallCorrect+0)^080h+0
  2536  0409  0865               	movf	(??_frontWallCorrect+0)^080h+0,w
  2537  040A  1283               	bcf	status, 5	;RP0=0, select bank0
  2538  040B  1303               	bcf	status, 6	;RP1=0, select bank0
  2539  040C  00AC               	movwf	(?_drive)
  2540  040D  3080               	movlw	(080h)
  2541  040E  1683               	bsf	status, 5	;RP0=1, select bank1
  2542  040F  1303               	bcf	status, 6	;RP1=0, select bank1
  2543  0410  00E6               	movwf	(??_frontWallCorrect+1)^080h+0
  2544  0411  0866               	movf	(??_frontWallCorrect+1)^080h+0,w
  2545  0412  1283               	bcf	status, 5	;RP0=0, select bank0
  2546  0413  1303               	bcf	status, 6	;RP1=0, select bank0
  2547  0414  00AD               	movwf	0+(?_drive)+01h
  2548  0415  01AE               	clrf	0+(?_drive)+02h
  2549  0416  3000               	movlw	(0)
  2550  0417  120A  158A  25E9   	fcall	_drive
              120A  118A         
  2551  041C  2C1D               	goto	l10786
  2552                           	line	213
  2553                           	
  2554  041D                     l1485:	
  2555                           	line	210
  2556                           	
  2557  041D                     l10786:	
  2558  041D  120A  158A  2584   	fcall	_readIR
              120A  118A         
  2559  0422  1683               	bsf	status, 5	;RP0=1, select bank1
  2560  0423  1303               	bcf	status, 6	;RP1=0, select bank1
  2561  0424  0862               	movf	(1+(?_readIR))^080h,w
  2562  0425  3A80               	xorlw	80h
  2563  0426  00FF               	movwf	btemp+1
  2564  0427  3080               	movlw	(high(038h))^80h
  2565  0428  027F               	subwf	btemp+1,w
  2566  0429  1D03               	skipz
  2567  042A  2C2D               	goto	u4555
  2568  042B  3038               	movlw	low(038h)
  2569  042C  0261               	subwf	(0+(?_readIR))^080h,w
  2570  042D                     u4555:
  2571                           
  2572  042D  1C03               	skipc
  2573  042E  2C30               	goto	u4551
  2574  042F  2C31               	goto	u4550
  2575  0430                     u4551:
  2576  0430  2C47               	goto	l10790
  2577  0431                     u4550:
  2578                           	
  2579  0431                     l10788:	
  2580  0431  120A  158A  2584   	fcall	_readIR
              120A  118A         
  2581  0436  1683               	bsf	status, 5	;RP0=1, select bank1
  2582  0437  1303               	bcf	status, 6	;RP1=0, select bank1
  2583  0438  0862               	movf	(1+(?_readIR))^080h,w
  2584  0439  3A80               	xorlw	80h
  2585  043A  00FF               	movwf	btemp+1
  2586  043B  3080               	movlw	(high(064h))^80h
  2587  043C  027F               	subwf	btemp+1,w
  2588  043D  1D03               	skipz
  2589  043E  2C41               	goto	u4565
  2590  043F  3064               	movlw	low(064h)
  2591  0440  0261               	subwf	(0+(?_readIR))^080h,w
  2592  0441                     u4565:
  2593                           
  2594  0441  1C03               	skipc
  2595  0442  2C44               	goto	u4561
  2596  0443  2C45               	goto	u4560
  2597  0444                     u4561:
  2598  0444  2C05               	goto	l10784
  2599  0445                     u4560:
  2600  0445  2C47               	goto	l10790
  2601                           	
  2602  0446                     l1488:	
  2603  0446  2C47               	goto	l10790
  2604                           	
  2605  0447                     l1489:	
  2606                           	line	214
  2607                           	
  2608  0447                     l10790:	
  2609                           ;drive.c: 213: }
  2610                           ;drive.c: 214: drive(0, 0, 0, 0);
  2611  0447  1283               	bcf	status, 5	;RP0=0, select bank0
  2612  0448  1303               	bcf	status, 6	;RP1=0, select bank0
  2613  0449  01AC               	clrf	(?_drive)
  2614  044A  01AD               	clrf	0+(?_drive)+01h
  2615  044B  01AE               	clrf	0+(?_drive)+02h
  2616  044C  3000               	movlw	(0)
  2617  044D  120A  158A  25E9   	fcall	_drive
              120A  118A         
  2618                           	line	215
  2619                           	
  2620  0452                     l1490:	
  2621  0452  0008               	return
  2622                           	opt stack 0
  2623                           GLOBAL	__end_of_frontWallCorrect
  2624  0453                     	__end_of_frontWallCorrect:
  2625 ;; =============== function _frontWallCorrect ends ============
  2626                           
  2627                           	signat	_frontWallCorrect,88
  2628                           	global	_rightWallCorrect
  2629                           psect	text1552,local,class=CODE,delta=2
  2630                           global __ptext1552
  2631  033D                     __ptext1552:
  2632                           
  2633 ;; *************** function _rightWallCorrect *****************
  2634 ;; Defined at:
  2635 ;;		line 186 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;		None               void
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0
  2651 ;;      Temps:          0       0       2       0       0
  2652 ;;      Totals:         0       0       2       0       0
  2653 ;;Total ram usage:        2 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    6
  2656 ;; This function calls:
  2657 ;;		_turnRight90
  2658 ;;		_rotateIR
  2659 ;;		_drive
  2660 ;;		_readIR
  2661 ;;		_turnLeft90
  2662 ;; This function is called by:
  2663 ;;		_findWalls
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           psect	text1552
  2667                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  2668                           	line	186
  2669                           	global	__size_of_rightWallCorrect
  2670  008E                     	__size_of_rightWallCorrect	equ	__end_of_rightWallCorrect-_rightWallCorrect
  2671                           	
  2672  033D                     _rightWallCorrect:	
  2673                           	opt	stack 0
  2674                           ; Regs used in _rightWallCorrect: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2675                           	line	187
  2676                           	
  2677  033D                     l10758:	
  2678                           ;drive.c: 187: turnRight90();
  2679  033D  120A  158A  2743   	fcall	_turnRight90
              120A  118A         
  2680                           	line	188
  2681                           	
  2682  0342                     l10760:	
  2683                           ;drive.c: 188: rotateIR(24, 0b00001101);
  2684  0342  300D               	movlw	(0Dh)
  2685  0343  1683               	bsf	status, 5	;RP0=1, select bank1
  2686  0344  1303               	bcf	status, 6	;RP1=0, select bank1
  2687  0345  00E5               	movwf	(??_rightWallCorrect+0)^080h+0
  2688  0346  0865               	movf	(??_rightWallCorrect+0)^080h+0,w
  2689  0347  1283               	bcf	status, 5	;RP0=0, select bank0
  2690  0348  1303               	bcf	status, 6	;RP1=0, select bank0
  2691  0349  00AA               	movwf	(?_rotateIR)
  2692  034A  3018               	movlw	(018h)
  2693  034B  120A  118A  26EF   	fcall	_rotateIR
              120A  118A         
  2694                           	line	189
  2695                           ;drive.c: 189: while(readIR() <45)
  2696  0350  2B69               	goto	l10764
  2697                           	
  2698  0351                     l1474:	
  2699                           	line	191
  2700                           	
  2701  0351                     l10762:	
  2702                           ;drive.c: 190: {
  2703                           ;drive.c: 191: drive(255, 131, 128, 0);
  2704  0351  3083               	movlw	(083h)
  2705  0352  1683               	bsf	status, 5	;RP0=1, select bank1
  2706  0353  1303               	bcf	status, 6	;RP1=0, select bank1
  2707  0354  00E5               	movwf	(??_rightWallCorrect+0)^080h+0
  2708  0355  0865               	movf	(??_rightWallCorrect+0)^080h+0,w
  2709  0356  1283               	bcf	status, 5	;RP0=0, select bank0
  2710  0357  1303               	bcf	status, 6	;RP1=0, select bank0
  2711  0358  00AC               	movwf	(?_drive)
  2712  0359  3080               	movlw	(080h)
  2713  035A  1683               	bsf	status, 5	;RP0=1, select bank1
  2714  035B  1303               	bcf	status, 6	;RP1=0, select bank1
  2715  035C  00E6               	movwf	(??_rightWallCorrect+1)^080h+0
  2716  035D  0866               	movf	(??_rightWallCorrect+1)^080h+0,w
  2717  035E  1283               	bcf	status, 5	;RP0=0, select bank0
  2718  035F  1303               	bcf	status, 6	;RP1=0, select bank0
  2719  0360  00AD               	movwf	0+(?_drive)+01h
  2720  0361  01AE               	clrf	0+(?_drive)+02h
  2721  0362  30FF               	movlw	(0FFh)
  2722  0363  120A  158A  25E9   	fcall	_drive
              120A  118A         
  2723  0368  2B69               	goto	l10764
  2724                           	line	192
  2725                           	
  2726  0369                     l1473:	
  2727                           	line	189
  2728                           	
  2729  0369                     l10764:	
  2730  0369  120A  158A  2584   	fcall	_readIR
              120A  118A         
  2731  036E  1683               	bsf	status, 5	;RP0=1, select bank1
  2732  036F  1303               	bcf	status, 6	;RP1=0, select bank1
  2733  0370  0862               	movf	(1+(?_readIR))^080h,w
  2734  0371  3A80               	xorlw	80h
  2735  0372  00FF               	movwf	btemp+1
  2736  0373  3080               	movlw	(high(02Dh))^80h
  2737  0374  027F               	subwf	btemp+1,w
  2738  0375  1D03               	skipz
  2739  0376  2B79               	goto	u4525
  2740  0377  302D               	movlw	low(02Dh)
  2741  0378  0261               	subwf	(0+(?_readIR))^080h,w
  2742  0379                     u4525:
  2743                           
  2744  0379  1C03               	skipc
  2745  037A  2B7C               	goto	u4521
  2746  037B  2B7D               	goto	u4520
  2747  037C                     u4521:
  2748  037C  2B51               	goto	l10762
  2749  037D                     u4520:
  2750  037D  2B97               	goto	l10768
  2751                           	
  2752  037E                     l1475:	
  2753                           	line	193
  2754                           ;drive.c: 192: }
  2755                           ;drive.c: 193: while(readIR() >55)
  2756  037E  2B97               	goto	l10768
  2757                           	
  2758  037F                     l1477:	
  2759                           	line	195
  2760                           	
  2761  037F                     l10766:	
  2762                           ;drive.c: 194: {
  2763                           ;drive.c: 195: drive(0, 250, 128, 0);
  2764  037F  30FA               	movlw	(0FAh)
  2765  0380  1683               	bsf	status, 5	;RP0=1, select bank1
  2766  0381  1303               	bcf	status, 6	;RP1=0, select bank1
  2767  0382  00E5               	movwf	(??_rightWallCorrect+0)^080h+0
  2768  0383  0865               	movf	(??_rightWallCorrect+0)^080h+0,w
  2769  0384  1283               	bcf	status, 5	;RP0=0, select bank0
  2770  0385  1303               	bcf	status, 6	;RP1=0, select bank0
  2771  0386  00AC               	movwf	(?_drive)
  2772  0387  3080               	movlw	(080h)
  2773  0388  1683               	bsf	status, 5	;RP0=1, select bank1
  2774  0389  1303               	bcf	status, 6	;RP1=0, select bank1
  2775  038A  00E6               	movwf	(??_rightWallCorrect+1)^080h+0
  2776  038B  0866               	movf	(??_rightWallCorrect+1)^080h+0,w
  2777  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  2778  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  2779  038E  00AD               	movwf	0+(?_drive)+01h
  2780  038F  01AE               	clrf	0+(?_drive)+02h
  2781  0390  3000               	movlw	(0)
  2782  0391  120A  158A  25E9   	fcall	_drive
              120A  118A         
  2783  0396  2B97               	goto	l10768
  2784                           	line	196
  2785                           	
  2786  0397                     l1476:	
  2787                           	line	193
  2788                           	
  2789  0397                     l10768:	
  2790  0397  120A  158A  2584   	fcall	_readIR
              120A  118A         
  2791  039C  1683               	bsf	status, 5	;RP0=1, select bank1
  2792  039D  1303               	bcf	status, 6	;RP1=0, select bank1
  2793  039E  0862               	movf	(1+(?_readIR))^080h,w
  2794  039F  3A80               	xorlw	80h
  2795  03A0  00FF               	movwf	btemp+1
  2796  03A1  3080               	movlw	(high(038h))^80h
  2797  03A2  027F               	subwf	btemp+1,w
  2798  03A3  1D03               	skipz
  2799  03A4  2BA7               	goto	u4535
  2800  03A5  3038               	movlw	low(038h)
  2801  03A6  0261               	subwf	(0+(?_readIR))^080h,w
  2802  03A7                     u4535:
  2803                           
  2804  03A7  1803               	skipnc
  2805  03A8  2BAA               	goto	u4531
  2806  03A9  2BAB               	goto	u4530
  2807  03AA                     u4531:
  2808  03AA  2B7F               	goto	l10766
  2809  03AB                     u4530:
  2810  03AB  2BAC               	goto	l10770
  2811                           	
  2812  03AC                     l1478:	
  2813                           	line	197
  2814                           	
  2815  03AC                     l10770:	
  2816                           ;drive.c: 196: }
  2817                           ;drive.c: 197: turnLeft90();
  2818  03AC  120A  158A  2620   	fcall	_turnLeft90
              120A  118A         
  2819                           	line	198
  2820                           	
  2821  03B1                     l10772:	
  2822                           ;drive.c: 198: rotateIR(24, 0b00001111);
  2823  03B1  300F               	movlw	(0Fh)
  2824  03B2  1683               	bsf	status, 5	;RP0=1, select bank1
  2825  03B3  1303               	bcf	status, 6	;RP1=0, select bank1
  2826  03B4  00E5               	movwf	(??_rightWallCorrect+0)^080h+0
  2827  03B5  0865               	movf	(??_rightWallCorrect+0)^080h+0,w
  2828  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  2829  03B7  1303               	bcf	status, 6	;RP1=0, select bank0
  2830  03B8  00AA               	movwf	(?_rotateIR)
  2831  03B9  3018               	movlw	(018h)
  2832  03BA  120A  118A  26EF   	fcall	_rotateIR
              120A  118A         
  2833                           	line	199
  2834                           	
  2835  03BF                     l10774:	
  2836                           ;drive.c: 199: drive(0, 0, 0, 0);
  2837  03BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2838  03C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2839  03C1  01AC               	clrf	(?_drive)
  2840  03C2  01AD               	clrf	0+(?_drive)+01h
  2841  03C3  01AE               	clrf	0+(?_drive)+02h
  2842  03C4  3000               	movlw	(0)
  2843  03C5  120A  158A  25E9   	fcall	_drive
              120A  118A         
  2844                           	line	200
  2845                           	
  2846  03CA                     l1479:	
  2847  03CA  0008               	return
  2848                           	opt stack 0
  2849                           GLOBAL	__end_of_rightWallCorrect
  2850  03CB                     	__end_of_rightWallCorrect:
  2851 ;; =============== function _rightWallCorrect ends ============
  2852                           
  2853                           	signat	_rightWallCorrect,88
  2854                           	global	_updateLocation
  2855                           psect	text1553,local,class=CODE,delta=2
  2856                           global __ptext1553
  2857  063B                     __ptext1553:
  2858                           
  2859 ;; *************** function _updateLocation *****************
  2860 ;; Defined at:
  2861 ;;		line 203 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;		None               void
  2868 ;; Registers used:
  2869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0
  2877 ;;      Temps:          0       1       0       0       0
  2878 ;;      Totals:         0       1       0       0       0
  2879 ;;Total ram usage:        1 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    4
  2882 ;; This function calls:
  2883 ;;		_lcd_set_cursor
  2884 ;;		_lcd_write_data
  2885 ;;		_getOrientation
  2886 ;;		_lcd_write_1_digit_bcd
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           psect	text1553
  2892                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  2893                           	line	203
  2894                           	global	__size_of_updateLocation
  2895  0060                     	__size_of_updateLocation	equ	__end_of_updateLocation-_updateLocation
  2896                           	
  2897  063B                     _updateLocation:	
  2898                           	opt	stack 3
  2899                           ; Regs used in _updateLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2900                           	line	204
  2901                           	
  2902  063B                     l10734:	
  2903                           ;main.c: 204: lcd_set_cursor(0x40);
  2904  063B  3040               	movlw	(040h)
  2905  063C  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  118A         
  2906                           	line	205
  2907                           ;main.c: 205: switch(getOrientation())
  2908  0641  2E70               	goto	l10754
  2909                           	line	207
  2910                           ;main.c: 206: {
  2911                           ;main.c: 207: case NORTH:
  2912                           	
  2913  0642                     l3036:	
  2914                           	line	208
  2915                           	
  2916  0642                     l10736:	
  2917                           ;main.c: 208: ++yCoord;
  2918  0642  3001               	movlw	(01h)
  2919  0643  1283               	bcf	status, 5	;RP0=0, select bank0
  2920  0644  1303               	bcf	status, 6	;RP1=0, select bank0
  2921  0645  00AE               	movwf	(??_updateLocation+0)+0
  2922  0646  082E               	movf	(??_updateLocation+0)+0,w
  2923  0647  07FB               	addwf	(_yCoord),f	;volatile
  2924                           	line	209
  2925                           	
  2926  0648                     l10738:	
  2927                           ;main.c: 209: lcd_write_data('N');
  2928  0648  304E               	movlw	(04Eh)
  2929  0649  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2930                           	line	210
  2931                           ;main.c: 210: break;
  2932  064E  2E82               	goto	l10756
  2933                           	line	211
  2934                           ;main.c: 211: case SOUTH:
  2935                           	
  2936  064F                     l3038:	
  2937                           	line	212
  2938                           	
  2939  064F                     l10740:	
  2940                           ;main.c: 212: --yCoord;
  2941  064F  3001               	movlw	low(01h)
  2942  0650  02FB               	subwf	(_yCoord),f	;volatile
  2943                           	line	213
  2944                           	
  2945  0651                     l10742:	
  2946                           ;main.c: 213: lcd_write_data('S');
  2947  0651  3053               	movlw	(053h)
  2948  0652  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2949                           	line	214
  2950                           ;main.c: 214: break;
  2951  0657  2E82               	goto	l10756
  2952                           	line	215
  2953                           ;main.c: 215: case EAST:
  2954                           	
  2955  0658                     l3039:	
  2956                           	line	216
  2957                           	
  2958  0658                     l10744:	
  2959                           ;main.c: 216: ++xCoord;
  2960  0658  3001               	movlw	(01h)
  2961  0659  1283               	bcf	status, 5	;RP0=0, select bank0
  2962  065A  1303               	bcf	status, 6	;RP1=0, select bank0
  2963  065B  00AE               	movwf	(??_updateLocation+0)+0
  2964  065C  082E               	movf	(??_updateLocation+0)+0,w
  2965  065D  07FA               	addwf	(_xCoord),f	;volatile
  2966                           	line	217
  2967                           	
  2968  065E                     l10746:	
  2969                           ;main.c: 217: lcd_write_data('E');
  2970  065E  3045               	movlw	(045h)
  2971  065F  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2972                           	line	218
  2973                           ;main.c: 218: break;
  2974  0664  2E82               	goto	l10756
  2975                           	line	219
  2976                           ;main.c: 219: case WEST:
  2977                           	
  2978  0665                     l3040:	
  2979                           	line	220
  2980                           	
  2981  0665                     l10748:	
  2982                           ;main.c: 220: --xCoord;
  2983  0665  3001               	movlw	low(01h)
  2984  0666  02FA               	subwf	(_xCoord),f	;volatile
  2985                           	line	221
  2986                           	
  2987  0667                     l10750:	
  2988                           ;main.c: 221: lcd_write_data('W');
  2989  0667  3057               	movlw	(057h)
  2990  0668  120A  158A  229E   	fcall	_lcd_write_data
              120A  118A         
  2991                           	line	222
  2992                           ;main.c: 222: break;
  2993  066D  2E82               	goto	l10756
  2994                           	line	223
  2995                           ;main.c: 223: default:
  2996                           	
  2997  066E                     l3041:	
  2998                           	line	224
  2999                           ;main.c: 224: break;
  3000  066E  2E82               	goto	l10756
  3001                           	line	225
  3002                           	
  3003  066F                     l10752:	
  3004                           ;main.c: 225: }
  3005  066F  2E82               	goto	l10756
  3006                           	line	205
  3007                           	
  3008  0670                     l3035:	
  3009                           	
  3010  0670                     l10754:	
  3011  0670  120A  158A  224E   	fcall	_getOrientation
              120A  118A         
  3012                           	; Switch size 1, requested type "space"
  3013                           ; Number of cases is 4, Range of values is 0 to 3
  3014                           ; switch strategies available:
  3015                           ; Name         Instructions Cycles
  3016                           ; simple_byte           13     7 (average)
  3017                           ; direct_byte           20     8 (fixed)
  3018                           ; jumptable            260     6 (fixed)
  3019                           ; rangetable             8     6 (fixed)
  3020                           ; spacedrange           14     9 (fixed)
  3021                           ; locatedrange           4     3 (fixed)
  3022                           ;	Chosen strategy is simple_byte
  3023                           
  3024                           	opt asmopt_off
  3025  0675  3A00               	xorlw	0^0	; case 0
  3026  0676  1903               	skipnz
  3027  0677  2E65               	goto	l10748
  3028  0678  3A01               	xorlw	1^0	; case 1
  3029  0679  1903               	skipnz
  3030  067A  2E4F               	goto	l10740
  3031  067B  3A03               	xorlw	2^1	; case 2
  3032  067C  1903               	skipnz
  3033  067D  2E58               	goto	l10744
  3034  067E  3A01               	xorlw	3^2	; case 3
  3035  067F  1903               	skipnz
  3036  0680  2E42               	goto	l10736
  3037  0681  2E82               	goto	l10756
  3038                           	opt asmopt_on
  3039                           
  3040                           	line	225
  3041                           	
  3042  0682                     l3037:	
  3043                           	line	227
  3044                           	
  3045  0682                     l10756:	
  3046                           ;main.c: 227: lcd_set_cursor(0x01);
  3047  0682  3001               	movlw	(01h)
  3048  0683  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  118A         
  3049                           	line	228
  3050                           ;main.c: 228: lcd_write_1_digit_bcd(xCoord);
  3051  0688  087A               	movf	(_xCoord),w	;volatile
  3052  0689  120A  158A  2270   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  3053                           	line	229
  3054                           ;main.c: 229: lcd_set_cursor(0x03);
  3055  068E  3003               	movlw	(03h)
  3056  068F  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  118A         
  3057                           	line	230
  3058                           ;main.c: 230: lcd_write_1_digit_bcd(yCoord);
  3059  0694  087B               	movf	(_yCoord),w	;volatile
  3060  0695  120A  158A  2270   	fcall	_lcd_write_1_digit_bcd
              120A  118A         
  3061                           	line	231
  3062                           	
  3063  069A                     l3042:	
  3064  069A  0008               	return
  3065                           	opt stack 0
  3066                           GLOBAL	__end_of_updateLocation
  3067  069B                     	__end_of_updateLocation:
  3068 ;; =============== function _updateLocation ends ============
  3069                           
  3070                           	signat	_updateLocation,88
  3071                           	global	_lookForVictim
  3072                           psect	text1554,local,class=CODE,delta=2
  3073                           global __ptext1554
  3074  0FC0                     __ptext1554:
  3075                           
  3076 ;; *************** function _lookForVictim *****************
  3077 ;; Defined at:
  3078 ;;		line 135 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;		None               void
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0
  3094 ;;      Temps:          0       2       0       0       0
  3095 ;;      Totals:         0       2       0       0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    4
  3099 ;; This function calls:
  3100 ;;		_play_iCreate_song
  3101 ;;		_lcd_set_cursor
  3102 ;;		_lcd_write_data
  3103 ;;		_getVictimZone
  3104 ;;		_lcd_write_1_digit_bcd
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           psect	text1554
  3110                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  3111                           	line	135
  3112                           	global	__size_of_lookForVictim
  3113  0040                     	__size_of_lookForVictim	equ	__end_of_lookForVictim-_lookForVictim
  3114                           	
  3115  0FC0                     _lookForVictim:	
  3116                           	opt	stack 3
  3117                           ; Regs used in _lookForVictim: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3118                           	line	137
  3119                           	
  3120  0FC0                     l10716:	
  3121                           ;main.c: 137: if(victimFound)
  3122  0FC0  1D71               	btfss	(_victimFound/8),(_victimFound)&7
  3123  0FC1  2FC3               	goto	u4501
  3124  0FC2  2FC4               	goto	u4500
  3125  0FC3                     u4501:
  3126  0FC3  2FFF               	goto	l3014
  3127  0FC4                     u4500:
  3128                           	line	139
  3129                           	
  3130  0FC4                     l10718:	
  3131                           ;main.c: 138: {
  3132                           ;main.c: 139: if(goingHome)
  3133  0FC4  1EF0               	btfss	(_goingHome/8),(_goingHome)&7
  3134  0FC5  2FC7               	goto	u4511
  3135  0FC6  2FC8               	goto	u4510
  3136  0FC7                     u4511:
  3137  0FC7  2FDE               	goto	l10728
  3138  0FC8                     u4510:
  3139                           	line	141
  3140                           	
  3141  0FC8                     l10720:	
  3142                           ;main.c: 140: {
  3143                           ;main.c: 141: play_iCreate_song(3);
  3144  0FC8  3003               	movlw	(03h)
  3145  0FC9  120A  158A  228C   	fcall	_play_iCreate_song
              120A  158A         
  3146                           	line	142
  3147                           	
  3148  0FCE                     l10722:	
  3149                           ;main.c: 142: victimZone = 0;
  3150  0FCE  1283               	bcf	status, 5	;RP0=0, select bank0
  3151  0FCF  1303               	bcf	status, 6	;RP1=0, select bank0
  3152  0FD0  01E4               	clrf	(_victimZone)	;volatile
  3153                           	line	143
  3154                           	
  3155  0FD1                     l10724:	
  3156                           ;main.c: 143: lcd_set_cursor(0x09);
  3157  0FD1  3009               	movlw	(09h)
  3158  0FD2  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  158A         
  3159                           	line	144
  3160                           	
  3161  0FD7                     l10726:	
  3162                           ;main.c: 144: lcd_write_data('V');
  3163  0FD7  3056               	movlw	(056h)
  3164  0FD8  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  3165                           	line	145
  3166                           ;main.c: 145: }
  3167  0FDD  2FFF               	goto	l3014
  3168                           	line	146
  3169                           	
  3170  0FDE                     l3012:	
  3171                           	line	148
  3172                           	
  3173  0FDE                     l10728:	
  3174                           ;main.c: 146: else
  3175                           ;main.c: 147: {
  3176                           ;main.c: 148: victimZone = getVictimZone(xCoord, yCoord);
  3177  0FDE  087B               	movf	(_yCoord),w	;volatile
  3178  0FDF  1283               	bcf	status, 5	;RP0=0, select bank0
  3179  0FE0  1303               	bcf	status, 6	;RP1=0, select bank0
  3180  0FE1  00AE               	movwf	(??_lookForVictim+0)+0
  3181  0FE2  082E               	movf	(??_lookForVictim+0)+0,w
  3182  0FE3  00AA               	movwf	(?_getVictimZone)
  3183  0FE4  087A               	movf	(_xCoord),w	;volatile
  3184  0FE5  120A  118A  24DA   	fcall	_getVictimZone
              120A  158A         
  3185  0FEA  1283               	bcf	status, 5	;RP0=0, select bank0
  3186  0FEB  1303               	bcf	status, 6	;RP1=0, select bank0
  3187  0FEC  00AF               	movwf	(??_lookForVictim+1)+0
  3188  0FED  082F               	movf	(??_lookForVictim+1)+0,w
  3189  0FEE  00E4               	movwf	(_victimZone)	;volatile
  3190                           	line	149
  3191                           	
  3192  0FEF                     l10730:	
  3193                           ;main.c: 149: lcd_set_cursor(0x08);
  3194  0FEF  3008               	movlw	(08h)
  3195  0FF0  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  158A         
  3196                           	line	150
  3197                           	
  3198  0FF5                     l10732:	
  3199                           ;main.c: 150: lcd_write_1_digit_bcd(victimZone);
  3200  0FF5  1283               	bcf	status, 5	;RP0=0, select bank0
  3201  0FF6  1303               	bcf	status, 6	;RP1=0, select bank0
  3202  0FF7  0864               	movf	(_victimZone),w	;volatile
  3203  0FF8  120A  158A  2270   	fcall	_lcd_write_1_digit_bcd
              120A  158A         
  3204  0FFD  2FFF               	goto	l3014
  3205                           	line	151
  3206                           	
  3207  0FFE                     l3013:	
  3208  0FFE  2FFF               	goto	l3014
  3209                           	line	152
  3210                           	
  3211  0FFF                     l3011:	
  3212                           	line	153
  3213                           	
  3214  0FFF                     l3014:	
  3215  0FFF  0008               	return
  3216                           	opt stack 0
  3217                           GLOBAL	__end_of_lookForVictim
  3218  1000                     	__end_of_lookForVictim:
  3219 ;; =============== function _lookForVictim ends ============
  3220                           
  3221                           	signat	_lookForVictim,88
  3222                           	global	_checkForFinalDestination
  3223                           psect	text1555,local,class=CODE,delta=2
  3224                           global __ptext1555
  3225  0D29                     __ptext1555:
  3226                           
  3227 ;; *************** function _checkForFinalDestination *****************
  3228 ;; Defined at:
  3229 ;;		line 124 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    4
  3250 ;; This function calls:
  3251 ;;		_getFinalX
  3252 ;;		_getFinalY
  3253 ;;		_play_iCreate_song
  3254 ;;		_lcd_set_cursor
  3255 ;;		_lcd_write_data
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           psect	text1555
  3261                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  3262                           	line	124
  3263                           	global	__size_of_checkForFinalDestination
  3264  002D                     	__size_of_checkForFinalDestination	equ	__end_of_checkForFinalDestination-_checkForFinal
                                 Destination
  3265                           	
  3266  0D29                     _checkForFinalDestination:	
  3267                           	opt	stack 3
  3268                           ; Regs used in _checkForFinalDestination: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3269                           	line	125
  3270                           	
  3271  0D29                     l10702:	
  3272                           ;main.c: 125: if(!goingHome && (xCoord == getFinalX()) && (yCoord == getFinalY()))
  3273  0D29  1AF0               	btfsc	(_goingHome/8),(_goingHome)&7
  3274  0D2A  2D2C               	goto	u4471
  3275  0D2B  2D2D               	goto	u4470
  3276  0D2C                     u4471:
  3277  0D2C  2D55               	goto	l3008
  3278  0D2D                     u4470:
  3279                           	
  3280  0D2D                     l10704:	
  3281  0D2D  120A  158A  2253   	fcall	_getFinalX
              120A  158A         
  3282  0D32  067A               	xorwf	(_xCoord),w	;volatile
  3283  0D33  1D03               	skipz
  3284  0D34  2D36               	goto	u4481
  3285  0D35  2D37               	goto	u4480
  3286  0D36                     u4481:
  3287  0D36  2D55               	goto	l3008
  3288  0D37                     u4480:
  3289                           	
  3290  0D37                     l10706:	
  3291  0D37  120A  158A  2258   	fcall	_getFinalY
              120A  158A         
  3292  0D3C  067B               	xorwf	(_yCoord),w	;volatile
  3293  0D3D  1D03               	skipz
  3294  0D3E  2D40               	goto	u4491
  3295  0D3F  2D41               	goto	u4490
  3296  0D40                     u4491:
  3297  0D40  2D55               	goto	l3008
  3298  0D41                     u4490:
  3299                           	line	127
  3300                           	
  3301  0D41                     l10708:	
  3302                           ;main.c: 126: {
  3303                           ;main.c: 127: play_iCreate_song(2);
  3304  0D41  3002               	movlw	(02h)
  3305  0D42  120A  158A  228C   	fcall	_play_iCreate_song
              120A  158A         
  3306                           	line	128
  3307                           	
  3308  0D47                     l10710:	
  3309                           ;main.c: 128: goingHome = 1;
  3310  0D47  16F0               	bsf	(_goingHome/8),(_goingHome)&7
  3311                           	line	129
  3312                           	
  3313  0D48                     l10712:	
  3314                           ;main.c: 129: lcd_set_cursor(0x06);
  3315  0D48  3006               	movlw	(06h)
  3316  0D49  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  158A         
  3317                           	line	130
  3318                           	
  3319  0D4E                     l10714:	
  3320                           ;main.c: 130: lcd_write_data('R');
  3321  0D4E  3052               	movlw	(052h)
  3322  0D4F  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  3323  0D54  2D55               	goto	l3008
  3324                           	line	131
  3325                           	
  3326  0D55                     l3007:	
  3327                           	line	132
  3328                           	
  3329  0D55                     l3008:	
  3330  0D55  0008               	return
  3331                           	opt stack 0
  3332                           GLOBAL	__end_of_checkForFinalDestination
  3333  0D56                     	__end_of_checkForFinalDestination:
  3334 ;; =============== function _checkForFinalDestination ends ============
  3335                           
  3336                           	signat	_checkForFinalDestination,88
  3337                           	global	_init
  3338                           psect	text1556,local,class=CODE,delta=2
  3339                           global __ptext1556
  3340  0DB3                     __ptext1556:
  3341                           
  3342 ;; *************** function _init *****************
  3343 ;; Defined at:
  3344 ;;		line 87 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;		None               void
  3351 ;; Registers used:
  3352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    5
  3365 ;; This function calls:
  3366 ;;		_init_adc
  3367 ;;		_lcd_init
  3368 ;;		_ser_init
  3369 ;;		_initIRobot
  3370 ;;		_initSongs
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           psect	text1556
  3376                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  3377                           	line	87
  3378                           	global	__size_of_init
  3379  0036                     	__size_of_init	equ	__end_of_init-_init
  3380                           	
  3381  0DB3                     _init:	
  3382                           	opt	stack 2
  3383                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3384                           	line	88
  3385                           	
  3386  0DB3                     l10670:	
  3387                           ;main.c: 88: start.pressed = 0;
  3388  0DB3  1283               	bcf	status, 5	;RP0=0, select bank0
  3389  0DB4  1303               	bcf	status, 6	;RP1=0, select bank0
  3390  0DB5  01D6               	clrf	(_start)
  3391                           	line	89
  3392                           	
  3393  0DB6                     l10672:	
  3394                           ;main.c: 89: start.released = 1;
  3395  0DB6  01D7               	clrf	0+(_start)+01h
  3396  0DB7  1403               	bsf	status,0
  3397  0DB8  0DD7               	rlf	0+(_start)+01h,f
  3398                           	line	91
  3399                           	
  3400  0DB9                     l10674:	
  3401                           ;main.c: 91: init_adc();
  3402  0DB9  120A  158A  22D8   	fcall	_init_adc
              120A  158A         
  3403                           	line	92
  3404                           	
  3405  0DBE                     l10676:	
  3406                           ;main.c: 92: lcd_init();
  3407  0DBE  120A  158A  24D2   	fcall	_lcd_init
              120A  158A         
  3408                           	line	94
  3409                           	
  3410  0DC3                     l10678:	
  3411                           ;main.c: 94: TRISB = 0b00000001;
  3412  0DC3  3001               	movlw	(01h)
  3413  0DC4  1683               	bsf	status, 5	;RP0=1, select bank1
  3414  0DC5  1303               	bcf	status, 6	;RP1=0, select bank1
  3415  0DC6  0086               	movwf	(134)^080h	;volatile
  3416                           	line	97
  3417                           	
  3418  0DC7                     l10680:	
  3419                           ;main.c: 97: OPTION_REG = 0b00000100;
  3420  0DC7  3004               	movlw	(04h)
  3421  0DC8  0081               	movwf	(129)^080h	;volatile
  3422                           	line	99
  3423                           	
  3424  0DC9                     l10682:	
  3425                           ;main.c: 99: TMR0IE = 1;
  3426  0DC9  168B               	bsf	(93/8),(93)&7
  3427                           	line	100
  3428                           	
  3429  0DCA                     l10684:	
  3430                           ;main.c: 100: SSPSTAT = 0b01000000;
  3431  0DCA  3040               	movlw	(040h)
  3432  0DCB  0094               	movwf	(148)^080h	;volatile
  3433                           	line	101
  3434                           	
  3435  0DCC                     l10686:	
  3436                           ;main.c: 101: SSPCON = 0b00100010;
  3437  0DCC  3022               	movlw	(022h)
  3438  0DCD  1283               	bcf	status, 5	;RP0=0, select bank0
  3439  0DCE  1303               	bcf	status, 6	;RP1=0, select bank0
  3440  0DCF  0094               	movwf	(20)	;volatile
  3441                           	line	102
  3442                           	
  3443  0DD0                     l10688:	
  3444                           ;main.c: 102: TRISC = 0b10010000;
  3445  0DD0  3090               	movlw	(090h)
  3446  0DD1  1683               	bsf	status, 5	;RP0=1, select bank1
  3447  0DD2  1303               	bcf	status, 6	;RP1=0, select bank1
  3448  0DD3  0087               	movwf	(135)^080h	;volatile
  3449                           	line	103
  3450                           	
  3451  0DD4                     l10690:	
  3452                           ;main.c: 103: PORTC = 0b00000000;
  3453  0DD4  1283               	bcf	status, 5	;RP0=0, select bank0
  3454  0DD5  1303               	bcf	status, 6	;RP1=0, select bank0
  3455  0DD6  0187               	clrf	(7)	;volatile
  3456                           	line	106
  3457                           	
  3458  0DD7                     l10692:	
  3459                           ;main.c: 106: PEIE = 1;
  3460  0DD7  170B               	bsf	(94/8),(94)&7
  3461                           	line	107
  3462                           	
  3463  0DD8                     l10694:	
  3464                           ;main.c: 107: GIE = 1;
  3465  0DD8  178B               	bsf	(95/8),(95)&7
  3466                           	line	109
  3467                           	
  3468  0DD9                     l10696:	
  3469                           ;main.c: 109: ser_init();
  3470  0DD9  120A  158A  2407   	fcall	_ser_init
              120A  158A         
  3471                           	line	110
  3472                           	
  3473  0DDE                     l10698:	
  3474                           ;main.c: 110: initIRobot();
  3475  0DDE  120A  158A  2320   	fcall	_initIRobot
              120A  158A         
  3476                           	line	111
  3477                           	
  3478  0DE3                     l10700:	
  3479                           ;main.c: 111: initSongs();
  3480  0DE3  120A  158A  26C8   	fcall	_initSongs
              120A  158A         
  3481                           	line	112
  3482                           	
  3483  0DE8                     l3001:	
  3484  0DE8  0008               	return
  3485                           	opt stack 0
  3486                           GLOBAL	__end_of_init
  3487  0DE9                     	__end_of_init:
  3488 ;; =============== function _init ends ============
  3489                           
  3490                           	signat	_init,88
  3491                           	global	_readIR
  3492                           psect	text1557,local,class=CODE,delta=2
  3493                           global __ptext1557
  3494  0D84                     __ptext1557:
  3495                           
  3496 ;; *************** function _readIR *****************
  3497 ;; Defined at:
  3498 ;;		line 33 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ir.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  cm              2    5[BANK1 ] int 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    3[BANK1 ] int 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       0       2       0       0
  3513 ;;      Locals:         0       0       2       0       0
  3514 ;;      Temps:          0       0       0       0       0
  3515 ;;      Totals:         0       0       4       0       0
  3516 ;;Total ram usage:        4 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    5
  3519 ;; This function calls:
  3520 ;;		_adc_read_channel
  3521 ;;		_convert
  3522 ;; This function is called by:
  3523 ;;		_rightWallCorrect
  3524 ;;		_frontWallCorrect
  3525 ;;		_findWall
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           psect	text1557
  3529                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ir.c"
  3530                           	line	33
  3531                           	global	__size_of_readIR
  3532  002F                     	__size_of_readIR	equ	__end_of_readIR-_readIR
  3533                           	
  3534  0D84                     _readIR:	
  3535                           	opt	stack 0
  3536                           ; Regs used in _readIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3537                           	line	34
  3538                           	
  3539  0D84                     l10664:	
  3540                           ;ir.c: 34: int cm = convert(adc_read_channel(0));
  3541  0D84  3000               	movlw	(0)
  3542  0D85  120A  118A  269B   	fcall	_adc_read_channel
              120A  158A         
  3543  0D8A  1683               	bsf	status, 5	;RP0=1, select bank1
  3544  0D8B  1303               	bcf	status, 6	;RP1=0, select bank1
  3545  0D8C  085F               	movf	(1+(?_adc_read_channel))^080h,w
  3546  0D8D  1283               	bcf	status, 5	;RP0=0, select bank0
  3547  0D8E  1303               	bcf	status, 6	;RP1=0, select bank0
  3548  0D8F  01C2               	clrf	(?_convert+1)
  3549  0D90  07C2               	addwf	(?_convert+1)
  3550  0D91  1683               	bsf	status, 5	;RP0=1, select bank1
  3551  0D92  1303               	bcf	status, 6	;RP1=0, select bank1
  3552  0D93  085E               	movf	(0+(?_adc_read_channel))^080h,w
  3553  0D94  1283               	bcf	status, 5	;RP0=0, select bank0
  3554  0D95  1303               	bcf	status, 6	;RP1=0, select bank0
  3555  0D96  01C1               	clrf	(?_convert)
  3556  0D97  07C1               	addwf	(?_convert)
  3557                           
  3558  0D98  120A  118A  2015   	fcall	_convert
              120A  158A         
  3559  0D9D  1283               	bcf	status, 5	;RP0=0, select bank0
  3560  0D9E  1303               	bcf	status, 6	;RP1=0, select bank0
  3561  0D9F  0842               	movf	(1+(?_convert)),w
  3562  0DA0  1683               	bsf	status, 5	;RP0=1, select bank1
  3563  0DA1  1303               	bcf	status, 6	;RP1=0, select bank1
  3564  0DA2  01E4               	clrf	(readIR@cm+1)^080h
  3565  0DA3  07E4               	addwf	(readIR@cm+1)^080h
  3566  0DA4  1283               	bcf	status, 5	;RP0=0, select bank0
  3567  0DA5  1303               	bcf	status, 6	;RP1=0, select bank0
  3568  0DA6  0841               	movf	(0+(?_convert)),w
  3569  0DA7  1683               	bsf	status, 5	;RP0=1, select bank1
  3570  0DA8  1303               	bcf	status, 6	;RP1=0, select bank1
  3571  0DA9  01E3               	clrf	(readIR@cm)^080h
  3572  0DAA  07E3               	addwf	(readIR@cm)^080h
  3573                           
  3574                           	line	35
  3575                           	
  3576  0DAB                     l10666:	
  3577                           ;ir.c: 35: return cm;
  3578  0DAB  0864               	movf	(readIR@cm+1)^080h,w
  3579  0DAC  01E2               	clrf	(?_readIR+1)^080h
  3580  0DAD  07E2               	addwf	(?_readIR+1)^080h
  3581  0DAE  0863               	movf	(readIR@cm)^080h,w
  3582  0DAF  01E1               	clrf	(?_readIR)^080h
  3583  0DB0  07E1               	addwf	(?_readIR)^080h
  3584                           
  3585  0DB1  2DB2               	goto	l6007
  3586                           	
  3587  0DB2                     l10668:	
  3588                           	line	36
  3589                           	
  3590  0DB2                     l6007:	
  3591  0DB2  0008               	return
  3592                           	opt stack 0
  3593                           GLOBAL	__end_of_readIR
  3594  0DB3                     	__end_of_readIR:
  3595 ;; =============== function _readIR ends ============
  3596                           
  3597                           	signat	_readIR,90
  3598                           	global	_goRight
  3599                           psect	text1558,local,class=CODE,delta=2
  3600                           global __ptext1558
  3601  0CA9                     __ptext1558:
  3602                           
  3603 ;; *************** function _goRight *****************
  3604 ;; Defined at:
  3605 ;;		line 136 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0
  3621 ;;      Temps:          0       1       0       0       0
  3622 ;;      Totals:         0       1       0       0       0
  3623 ;;Total ram usage:        1 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    5
  3626 ;; This function calls:
  3627 ;;		_lcd_set_cursor
  3628 ;;		_lcd_write_data
  3629 ;;		_turnRight90
  3630 ;;		_updateOrientation
  3631 ;;		_driveForDistance
  3632 ;; This function is called by:
  3633 ;;		_goToNextCell
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           psect	text1558
  3637                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3638                           	line	136
  3639                           	global	__size_of_goRight
  3640  0029                     	__size_of_goRight	equ	__end_of_goRight-_goRight
  3641                           	
  3642  0CA9                     _goRight:	
  3643                           	opt	stack 1
  3644                           ; Regs used in _goRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3645                           	line	137
  3646                           	
  3647  0CA9                     l10654:	
  3648                           ;drive.c: 137: lcd_set_cursor(0x0F);
  3649  0CA9  300F               	movlw	(0Fh)
  3650  0CAA  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  158A         
  3651                           	line	138
  3652                           ;drive.c: 138: lcd_write_data('R');
  3653  0CAF  3052               	movlw	(052h)
  3654  0CB0  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  3655                           	line	139
  3656                           	
  3657  0CB5                     l10656:	
  3658                           ;drive.c: 139: turnRight90();
  3659  0CB5  120A  158A  2743   	fcall	_turnRight90
              120A  158A         
  3660                           	line	140
  3661                           	
  3662  0CBA                     l10658:	
  3663                           ;drive.c: 140: updateOrientation(RIGHT);
  3664  0CBA  3003               	movlw	(03h)
  3665  0CBB  120A  158A  227B   	fcall	_updateOrientation
              120A  158A         
  3666                           	line	141
  3667                           	
  3668  0CC0                     l10660:	
  3669                           ;drive.c: 141: driveForDistance(1000);
  3670  0CC0  30E8               	movlw	low(03E8h)
  3671  0CC1  1283               	bcf	status, 5	;RP0=0, select bank0
  3672  0CC2  1303               	bcf	status, 6	;RP1=0, select bank0
  3673  0CC3  00B3               	movwf	(?_driveForDistance)
  3674  0CC4  3003               	movlw	high(03E8h)
  3675  0CC5  00B4               	movwf	((?_driveForDistance))+1
  3676  0CC6  120A  118A  25CF   	fcall	_driveForDistance
              120A  158A         
  3677                           	line	142
  3678                           	
  3679  0CCB                     l10662:	
  3680                           ;drive.c: 142: lastMove = RIGHT;
  3681  0CCB  3003               	movlw	(03h)
  3682  0CCC  1283               	bcf	status, 5	;RP0=0, select bank0
  3683  0CCD  1303               	bcf	status, 6	;RP1=0, select bank0
  3684  0CCE  00BD               	movwf	(??_goRight+0)+0
  3685  0CCF  083D               	movf	(??_goRight+0)+0,w
  3686  0CD0  00DE               	movwf	(_lastMove)	;volatile
  3687                           	line	143
  3688                           	
  3689  0CD1                     l1454:	
  3690  0CD1  0008               	return
  3691                           	opt stack 0
  3692                           GLOBAL	__end_of_goRight
  3693  0CD2                     	__end_of_goRight:
  3694 ;; =============== function _goRight ends ============
  3695                           
  3696                           	signat	_goRight,88
  3697                           	global	_goLeft
  3698                           psect	text1559,local,class=CODE,delta=2
  3699                           global __ptext1559
  3700  0C2F                     __ptext1559:
  3701                           
  3702 ;; *************** function _goLeft *****************
  3703 ;; Defined at:
  3704 ;;		line 102 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;		None               void
  3711 ;; Registers used:
  3712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3718 ;;      Params:         0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0
  3721 ;;      Totals:         0       0       0       0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    5
  3725 ;; This function calls:
  3726 ;;		_lcd_set_cursor
  3727 ;;		_lcd_write_data
  3728 ;;		_turnLeft90
  3729 ;;		_updateOrientation
  3730 ;;		_driveForDistance
  3731 ;; This function is called by:
  3732 ;;		_goToNextCell
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           psect	text1559
  3736                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3737                           	line	102
  3738                           	global	__size_of_goLeft
  3739  0028                     	__size_of_goLeft	equ	__end_of_goLeft-_goLeft
  3740                           	
  3741  0C2F                     _goLeft:	
  3742                           	opt	stack 1
  3743                           ; Regs used in _goLeft: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3744                           	line	103
  3745                           	
  3746  0C2F                     l10644:	
  3747                           ;drive.c: 103: lcd_set_cursor(0x0F);
  3748  0C2F  300F               	movlw	(0Fh)
  3749  0C30  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  158A         
  3750                           	line	104
  3751                           ;drive.c: 104: lcd_write_data('L');
  3752  0C35  304C               	movlw	(04Ch)
  3753  0C36  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  3754                           	line	105
  3755                           	
  3756  0C3B                     l10646:	
  3757                           ;drive.c: 105: turnLeft90();
  3758  0C3B  120A  158A  2620   	fcall	_turnLeft90
              120A  158A         
  3759                           	line	106
  3760                           	
  3761  0C40                     l10648:	
  3762                           ;drive.c: 106: updateOrientation(LEFT);
  3763  0C40  3001               	movlw	(01h)
  3764  0C41  120A  158A  227B   	fcall	_updateOrientation
              120A  158A         
  3765                           	line	107
  3766                           	
  3767  0C46                     l10650:	
  3768                           ;drive.c: 107: driveForDistance(1000);
  3769  0C46  30E8               	movlw	low(03E8h)
  3770  0C47  1283               	bcf	status, 5	;RP0=0, select bank0
  3771  0C48  1303               	bcf	status, 6	;RP1=0, select bank0
  3772  0C49  00B3               	movwf	(?_driveForDistance)
  3773  0C4A  3003               	movlw	high(03E8h)
  3774  0C4B  00B4               	movwf	((?_driveForDistance))+1
  3775  0C4C  120A  118A  25CF   	fcall	_driveForDistance
              120A  158A         
  3776                           	line	108
  3777                           	
  3778  0C51                     l10652:	
  3779                           ;drive.c: 108: lastMove = LEFT;
  3780  0C51  1283               	bcf	status, 5	;RP0=0, select bank0
  3781  0C52  1303               	bcf	status, 6	;RP1=0, select bank0
  3782  0C53  01DE               	clrf	(_lastMove)	;volatile
  3783  0C54  1403               	bsf	status,0
  3784  0C55  0DDE               	rlf	(_lastMove),f	;volatile
  3785                           	line	109
  3786                           	
  3787  0C56                     l1445:	
  3788  0C56  0008               	return
  3789                           	opt stack 0
  3790                           GLOBAL	__end_of_goLeft
  3791  0C57                     	__end_of_goLeft:
  3792 ;; =============== function _goLeft ends ============
  3793                           
  3794                           	signat	_goLeft,88
  3795                           	global	_goForward
  3796                           psect	text1560,local,class=CODE,delta=2
  3797                           global __ptext1560
  3798  0B05                     __ptext1560:
  3799                           
  3800 ;; *************** function _goForward *****************
  3801 ;; Defined at:
  3802 ;;		line 93 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;		None               void
  3809 ;; Registers used:
  3810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0
  3819 ;;      Totals:         0       0       0       0       0
  3820 ;;Total ram usage:        0 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    5
  3823 ;; This function calls:
  3824 ;;		_lcd_set_cursor
  3825 ;;		_lcd_write_data
  3826 ;;		_driveForDistance
  3827 ;; This function is called by:
  3828 ;;		_goToNextCell
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           psect	text1560
  3832                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3833                           	line	93
  3834                           	global	__size_of_goForward
  3835  001B                     	__size_of_goForward	equ	__end_of_goForward-_goForward
  3836                           	
  3837  0B05                     _goForward:	
  3838                           	opt	stack 1
  3839                           ; Regs used in _goForward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3840                           	line	94
  3841                           	
  3842  0B05                     l10638:	
  3843                           ;drive.c: 94: lcd_set_cursor(0x0F);
  3844  0B05  300F               	movlw	(0Fh)
  3845  0B06  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  158A         
  3846                           	line	95
  3847                           ;drive.c: 95: lcd_write_data('F');
  3848  0B0B  3046               	movlw	(046h)
  3849  0B0C  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  3850                           	line	96
  3851                           	
  3852  0B11                     l10640:	
  3853                           ;drive.c: 96: driveForDistance(1000);
  3854  0B11  30E8               	movlw	low(03E8h)
  3855  0B12  1283               	bcf	status, 5	;RP0=0, select bank0
  3856  0B13  1303               	bcf	status, 6	;RP1=0, select bank0
  3857  0B14  00B3               	movwf	(?_driveForDistance)
  3858  0B15  3003               	movlw	high(03E8h)
  3859  0B16  00B4               	movwf	((?_driveForDistance))+1
  3860  0B17  120A  118A  25CF   	fcall	_driveForDistance
              120A  158A         
  3861                           	line	97
  3862                           	
  3863  0B1C                     l10642:	
  3864                           ;drive.c: 97: lastMove = FORWARD;
  3865  0B1C  1283               	bcf	status, 5	;RP0=0, select bank0
  3866  0B1D  1303               	bcf	status, 6	;RP1=0, select bank0
  3867  0B1E  01DE               	clrf	(_lastMove)	;volatile
  3868                           	line	98
  3869                           	
  3870  0B1F                     l1442:	
  3871  0B1F  0008               	return
  3872                           	opt stack 0
  3873                           GLOBAL	__end_of_goForward
  3874  0B20                     	__end_of_goForward:
  3875 ;; =============== function _goForward ends ============
  3876                           
  3877                           	signat	_goForward,88
  3878                           	global	_goBackward
  3879                           psect	text1561,local,class=CODE,delta=2
  3880                           global __ptext1561
  3881  0C80                     __ptext1561:
  3882                           
  3883 ;; *************** function _goBackward *****************
  3884 ;; Defined at:
  3885 ;;		line 82 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;		None               void
  3892 ;; Registers used:
  3893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3899 ;;      Params:         0       0       0       0       0
  3900 ;;      Locals:         0       0       0       0       0
  3901 ;;      Temps:          0       1       0       0       0
  3902 ;;      Totals:         0       1       0       0       0
  3903 ;;Total ram usage:        1 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    5
  3906 ;; This function calls:
  3907 ;;		_lcd_set_cursor
  3908 ;;		_lcd_write_data
  3909 ;;		_turnAround
  3910 ;;		_updateOrientation
  3911 ;;		_driveForDistance
  3912 ;; This function is called by:
  3913 ;;		_goToNextCell
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           psect	text1561
  3917                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  3918                           	line	82
  3919                           	global	__size_of_goBackward
  3920  0029                     	__size_of_goBackward	equ	__end_of_goBackward-_goBackward
  3921                           	
  3922  0C80                     _goBackward:	
  3923                           	opt	stack 1
  3924                           ; Regs used in _goBackward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3925                           	line	83
  3926                           	
  3927  0C80                     l10628:	
  3928                           ;drive.c: 83: lcd_set_cursor(0x0F);
  3929  0C80  300F               	movlw	(0Fh)
  3930  0C81  120A  158A  2265   	fcall	_lcd_set_cursor
              120A  158A         
  3931                           	line	84
  3932                           ;drive.c: 84: lcd_write_data('B');
  3933  0C86  3042               	movlw	(042h)
  3934  0C87  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  3935                           	line	85
  3936                           	
  3937  0C8C                     l10630:	
  3938                           ;drive.c: 85: turnAround();
  3939  0C8C  120A  118A  2735   	fcall	_turnAround
              120A  158A         
  3940                           	line	86
  3941                           	
  3942  0C91                     l10632:	
  3943                           ;drive.c: 86: updateOrientation(BACKWARD);
  3944  0C91  3002               	movlw	(02h)
  3945  0C92  120A  158A  227B   	fcall	_updateOrientation
              120A  158A         
  3946                           	line	87
  3947                           	
  3948  0C97                     l10634:	
  3949                           ;drive.c: 87: driveForDistance(1000);
  3950  0C97  30E8               	movlw	low(03E8h)
  3951  0C98  1283               	bcf	status, 5	;RP0=0, select bank0
  3952  0C99  1303               	bcf	status, 6	;RP1=0, select bank0
  3953  0C9A  00B3               	movwf	(?_driveForDistance)
  3954  0C9B  3003               	movlw	high(03E8h)
  3955  0C9C  00B4               	movwf	((?_driveForDistance))+1
  3956  0C9D  120A  118A  25CF   	fcall	_driveForDistance
              120A  158A         
  3957                           	line	88
  3958                           	
  3959  0CA2                     l10636:	
  3960                           ;drive.c: 88: lastMove = BACKWARD;
  3961  0CA2  3002               	movlw	(02h)
  3962  0CA3  1283               	bcf	status, 5	;RP0=0, select bank0
  3963  0CA4  1303               	bcf	status, 6	;RP1=0, select bank0
  3964  0CA5  00BD               	movwf	(??_goBackward+0)+0
  3965  0CA6  083D               	movf	(??_goBackward+0)+0,w
  3966  0CA7  00DE               	movwf	(_lastMove)	;volatile
  3967                           	line	89
  3968                           	
  3969  0CA8                     l1439:	
  3970  0CA8  0008               	return
  3971                           	opt stack 0
  3972                           GLOBAL	__end_of_goBackward
  3973  0CA9                     	__end_of_goBackward:
  3974 ;; =============== function _goBackward ends ============
  3975                           
  3976                           	signat	_goBackward,88
  3977                           	global	_checkIfHome
  3978                           psect	text1562,local,class=CODE,delta=2
  3979                           global __ptext1562
  3980  0B58                     __ptext1562:
  3981                           
  3982 ;; *************** function _checkIfHome *****************
  3983 ;; Defined at:
  3984 ;;		line 246 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3998 ;;      Params:         0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0
  4001 ;;      Totals:         0       0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    4
  4005 ;; This function calls:
  4006 ;;		_drive
  4007 ;;		_play_iCreate_song
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           psect	text1562
  4013                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  4014                           	line	246
  4015                           	global	__size_of_checkIfHome
  4016  0020                     	__size_of_checkIfHome	equ	__end_of_checkIfHome-_checkIfHome
  4017                           	
  4018  0B58                     _checkIfHome:	
  4019                           	opt	stack 3
  4020                           ; Regs used in _checkIfHome: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4021                           	line	247
  4022                           	
  4023  0B58                     l10620:	
  4024                           ;main.c: 247: if((xCoord == 1) && (yCoord == 3))
  4025  0B58  087A               	movf	(_xCoord),w	;volatile
  4026  0B59  3A01               	xorlw	01h
  4027  0B5A  1D03               	skipz
  4028  0B5B  2B5D               	goto	u4451
  4029  0B5C  2B5E               	goto	u4450
  4030  0B5D                     u4451:
  4031  0B5D  2B77               	goto	l3055
  4032  0B5E                     u4450:
  4033                           	
  4034  0B5E                     l10622:	
  4035  0B5E  087B               	movf	(_yCoord),w	;volatile
  4036  0B5F  3A03               	xorlw	03h
  4037  0B60  1D03               	skipz
  4038  0B61  2B63               	goto	u4461
  4039  0B62  2B64               	goto	u4460
  4040  0B63                     u4461:
  4041  0B63  2B77               	goto	l3055
  4042  0B64                     u4460:
  4043                           	line	249
  4044                           	
  4045  0B64                     l10624:	
  4046                           ;main.c: 248: {
  4047                           ;main.c: 249: drive(0, 0, 0, 0);
  4048  0B64  1283               	bcf	status, 5	;RP0=0, select bank0
  4049  0B65  1303               	bcf	status, 6	;RP1=0, select bank0
  4050  0B66  01AC               	clrf	(?_drive)
  4051  0B67  01AD               	clrf	0+(?_drive)+01h
  4052  0B68  01AE               	clrf	0+(?_drive)+02h
  4053  0B69  3000               	movlw	(0)
  4054  0B6A  120A  158A  25E9   	fcall	_drive
              120A  158A         
  4055                           	line	250
  4056                           ;main.c: 250: play_iCreate_song(4);
  4057  0B6F  3004               	movlw	(04h)
  4058  0B70  120A  158A  228C   	fcall	_play_iCreate_song
              120A  158A         
  4059                           	line	251
  4060                           	
  4061  0B75                     l10626:	
  4062                           ;main.c: 251: home = 1;
  4063  0B75  1770               	bsf	(_home/8),(_home)&7
  4064  0B76  2B77               	goto	l3055
  4065                           	line	252
  4066                           	
  4067  0B77                     l3054:	
  4068                           	line	253
  4069                           	
  4070  0B77                     l3055:	
  4071  0B77  0008               	return
  4072                           	opt stack 0
  4073                           GLOBAL	__end_of_checkIfHome
  4074  0B78                     	__end_of_checkIfHome:
  4075 ;; =============== function _checkIfHome ends ============
  4076                           
  4077                           	signat	_checkIfHome,88
  4078                           	global	_initSongs
  4079                           psect	text1563,local,class=CODE,delta=2
  4080                           global __ptext1563
  4081  0EC8                     __ptext1563:
  4082                           
  4083 ;; *************** function _initSongs *****************
  4084 ;; Defined at:
  4085 ;;		line 30 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;		None               void
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    4
  4106 ;; This function calls:
  4107 ;;		_ser_putArr
  4108 ;; This function is called by:
  4109 ;;		_init
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           psect	text1563
  4113                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
  4114                           	line	30
  4115                           	global	__size_of_initSongs
  4116  003D                     	__size_of_initSongs	equ	__end_of_initSongs-_initSongs
  4117                           	
  4118  0EC8                     _initSongs:	
  4119                           	opt	stack 2
  4120                           ; Regs used in _initSongs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4121                           	line	31
  4122                           	
  4123  0EC8                     l10618:	
  4124                           ;songs.c: 31: ser_putArr(finalCountdown, 27);
  4125  0EC8  30AD               	movlw	(_finalCountdown&0ffh)
  4126  0EC9  1283               	bcf	status, 5	;RP0=0, select bank0
  4127  0ECA  1303               	bcf	status, 6	;RP1=0, select bank0
  4128  0ECB  00AC               	movwf	(?_ser_putArr)
  4129  0ECC  3001               	movlw	(0x3/2)
  4130  0ECD  00AD               	movwf	(?_ser_putArr+1)
  4131  0ECE  301B               	movlw	low(01Bh)
  4132  0ECF  00AE               	movwf	0+(?_ser_putArr)+02h
  4133  0ED0  3000               	movlw	high(01Bh)
  4134  0ED1  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4135  0ED2  120A  158A  268F   	fcall	_ser_putArr
              120A  158A         
  4136                           	line	32
  4137                           ;songs.c: 32: ser_putArr(superMarioBros, 25);
  4138  0ED7  30A0               	movlw	(_superMarioBros&0ffh)
  4139  0ED8  1283               	bcf	status, 5	;RP0=0, select bank0
  4140  0ED9  1303               	bcf	status, 6	;RP1=0, select bank0
  4141  0EDA  00AC               	movwf	(?_ser_putArr)
  4142  0EDB  3000               	movlw	(0x1/2)
  4143  0EDC  00AD               	movwf	(?_ser_putArr+1)
  4144  0EDD  3019               	movlw	low(019h)
  4145  0EDE  00AE               	movwf	0+(?_ser_putArr)+02h
  4146  0EDF  3000               	movlw	high(019h)
  4147  0EE0  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4148  0EE1  120A  158A  268F   	fcall	_ser_putArr
              120A  158A         
  4149                           	line	33
  4150                           ;songs.c: 33: ser_putArr(lookingForU2, 29);
  4151  0EE6  3090               	movlw	(_lookingForU2&0ffh)
  4152  0EE7  1283               	bcf	status, 5	;RP0=0, select bank0
  4153  0EE8  1303               	bcf	status, 6	;RP1=0, select bank0
  4154  0EE9  00AC               	movwf	(?_ser_putArr)
  4155  0EEA  3001               	movlw	(0x3/2)
  4156  0EEB  00AD               	movwf	(?_ser_putArr+1)
  4157  0EEC  301D               	movlw	low(01Dh)
  4158  0EED  00AE               	movwf	0+(?_ser_putArr)+02h
  4159  0EEE  3000               	movlw	high(01Dh)
  4160  0EEF  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4161  0EF0  120A  158A  268F   	fcall	_ser_putArr
              120A  158A         
  4162                           	line	34
  4163                           ;songs.c: 34: ser_putArr(champions, 21);
  4164  0EF5  30B9               	movlw	(_champions&0ffh)
  4165  0EF6  1283               	bcf	status, 5	;RP0=0, select bank0
  4166  0EF7  1303               	bcf	status, 6	;RP1=0, select bank0
  4167  0EF8  00AC               	movwf	(?_ser_putArr)
  4168  0EF9  3000               	movlw	(0x1/2)
  4169  0EFA  00AD               	movwf	(?_ser_putArr+1)
  4170  0EFB  3015               	movlw	low(015h)
  4171  0EFC  00AE               	movwf	0+(?_ser_putArr)+02h
  4172  0EFD  3000               	movlw	high(015h)
  4173  0EFE  00AF               	movwf	(0+(?_ser_putArr)+02h)+1
  4174  0EFF  120A  158A  268F   	fcall	_ser_putArr
              120A  158A         
  4175                           	line	35
  4176                           	
  4177  0F04                     l5301:	
  4178  0F04  0008               	return
  4179                           	opt stack 0
  4180                           GLOBAL	__end_of_initSongs
  4181  0F05                     	__end_of_initSongs:
  4182 ;; =============== function _initSongs ends ============
  4183                           
  4184                           	signat	_initSongs,88
  4185                           	global	_lcd_init
  4186                           psect	text1564,local,class=CODE,delta=2
  4187                           global __ptext1564
  4188  0CD2                     __ptext1564:
  4189                           
  4190 ;; *************** function _lcd_init *****************
  4191 ;; Defined at:
  4192 ;;		line 78 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;		None               void
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0, pclath, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         0       0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0
  4209 ;;      Totals:         0       0       0       0       0
  4210 ;;Total ram usage:        0 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    3
  4213 ;; This function calls:
  4214 ;;		_lcd_write_control
  4215 ;; This function is called by:
  4216 ;;		_init
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           psect	text1564
  4220                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4221                           	line	78
  4222                           	global	__size_of_lcd_init
  4223  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4224                           	
  4225  0CD2                     _lcd_init:	
  4226                           	opt	stack 3
  4227                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4228                           	line	82
  4229                           	
  4230  0CD2                     l10598:	
  4231                           ;lcd.c: 82: ADCON1 = 0b00000010;
  4232  0CD2  3002               	movlw	(02h)
  4233  0CD3  1683               	bsf	status, 5	;RP0=1, select bank1
  4234  0CD4  1303               	bcf	status, 6	;RP1=0, select bank1
  4235  0CD5  009F               	movwf	(159)^080h	;volatile
  4236                           	line	85
  4237                           	
  4238  0CD6                     l10600:	
  4239                           ;lcd.c: 85: PORTD = 0;
  4240  0CD6  1283               	bcf	status, 5	;RP0=0, select bank0
  4241  0CD7  1303               	bcf	status, 6	;RP1=0, select bank0
  4242  0CD8  0188               	clrf	(8)	;volatile
  4243                           	line	86
  4244                           	
  4245  0CD9                     l10602:	
  4246                           ;lcd.c: 86: PORTE = 0;
  4247  0CD9  0189               	clrf	(9)	;volatile
  4248                           	line	88
  4249                           	
  4250  0CDA                     l10604:	
  4251                           ;lcd.c: 88: TRISD = 0b00000000;
  4252  0CDA  1683               	bsf	status, 5	;RP0=1, select bank1
  4253  0CDB  1303               	bcf	status, 6	;RP1=0, select bank1
  4254  0CDC  0188               	clrf	(136)^080h	;volatile
  4255                           	line	89
  4256                           	
  4257  0CDD                     l10606:	
  4258                           ;lcd.c: 89: TRISE = 0b00000000;
  4259  0CDD  0189               	clrf	(137)^080h	;volatile
  4260                           	line	92
  4261                           	
  4262  0CDE                     l10608:	
  4263                           ;lcd.c: 92: lcd_write_control(0b00000001);
  4264  0CDE  3001               	movlw	(01h)
  4265  0CDF  120A  158A  22C4   	fcall	_lcd_write_control
              120A  158A         
  4266                           	line	93
  4267                           	
  4268  0CE4                     l10610:	
  4269                           ;lcd.c: 93: lcd_write_control(0b00111000);
  4270  0CE4  3038               	movlw	(038h)
  4271  0CE5  120A  158A  22C4   	fcall	_lcd_write_control
              120A  158A         
  4272                           	line	94
  4273                           	
  4274  0CEA                     l10612:	
  4275                           ;lcd.c: 94: lcd_write_control(0b00001100);
  4276  0CEA  300C               	movlw	(0Ch)
  4277  0CEB  120A  158A  22C4   	fcall	_lcd_write_control
              120A  158A         
  4278                           	line	95
  4279                           	
  4280  0CF0                     l10614:	
  4281                           ;lcd.c: 95: lcd_write_control(0b00000110);
  4282  0CF0  3006               	movlw	(06h)
  4283  0CF1  120A  158A  22C4   	fcall	_lcd_write_control
              120A  158A         
  4284                           	line	96
  4285                           	
  4286  0CF6                     l10616:	
  4287                           ;lcd.c: 96: lcd_write_control(0b00000010);
  4288  0CF6  3002               	movlw	(02h)
  4289  0CF7  120A  158A  22C4   	fcall	_lcd_write_control
              120A  158A         
  4290                           	line	98
  4291                           	
  4292  0CFC                     l2204:	
  4293  0CFC  0008               	return
  4294                           	opt stack 0
  4295                           GLOBAL	__end_of_lcd_init
  4296  0CFD                     	__end_of_lcd_init:
  4297 ;; =============== function _lcd_init ends ============
  4298                           
  4299                           	signat	_lcd_init,88
  4300                           	global	_lcd_write_1_digit_bcd
  4301                           psect	text1565,local,class=CODE,delta=2
  4302                           global __ptext1565
  4303  0A70                     __ptext1565:
  4304                           
  4305 ;; *************** function _lcd_write_1_digit_bcd *****************
  4306 ;; Defined at:
  4307 ;;		line 44 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  data            1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  data            1   13[BANK0 ] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;		None               void
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, pclath, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4321 ;;      Params:         0       0       0       0       0
  4322 ;;      Locals:         0       1       0       0       0
  4323 ;;      Temps:          0       0       0       0       0
  4324 ;;      Totals:         0       1       0       0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    3
  4328 ;; This function calls:
  4329 ;;		_lcd_write_data
  4330 ;; This function is called by:
  4331 ;;		_lookForVictim
  4332 ;;		_updateLocation
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           psect	text1565
  4336                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4337                           	line	44
  4338                           	global	__size_of_lcd_write_1_digit_bcd
  4339  000B                     	__size_of_lcd_write_1_digit_bcd	equ	__end_of_lcd_write_1_digit_bcd-_lcd_write_1_digit_b
                                 cd
  4340                           	
  4341  0A70                     _lcd_write_1_digit_bcd:	
  4342                           	opt	stack 3
  4343                           ; Regs used in _lcd_write_1_digit_bcd: [wreg+status,2+status,0+pclath+cstack]
  4344                           ;lcd_write_1_digit_bcd@data stored from wreg
  4345  0A70  1283               	bcf	status, 5	;RP0=0, select bank0
  4346  0A71  1303               	bcf	status, 6	;RP1=0, select bank0
  4347  0A72  00AD               	movwf	(lcd_write_1_digit_bcd@data)
  4348                           	line	45
  4349                           	
  4350  0A73                     l10596:	
  4351                           ;lcd.c: 45: lcd_write_data(data + 48);
  4352  0A73  082D               	movf	(lcd_write_1_digit_bcd@data),w
  4353  0A74  3E30               	addlw	030h
  4354  0A75  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  4355                           	line	46
  4356                           	
  4357  0A7A                     l2192:	
  4358  0A7A  0008               	return
  4359                           	opt stack 0
  4360                           GLOBAL	__end_of_lcd_write_1_digit_bcd
  4361  0A7B                     	__end_of_lcd_write_1_digit_bcd:
  4362 ;; =============== function _lcd_write_1_digit_bcd ends ============
  4363                           
  4364                           	signat	_lcd_write_1_digit_bcd,4216
  4365                           	global	_lcd_write_string
  4366                           psect	text1566,local,class=CODE,delta=2
  4367                           global __ptext1566
  4368  0BBB                     __ptext1566:
  4369                           
  4370 ;; *************** function _lcd_write_string *****************
  4371 ;; Defined at:
  4372 ;;		line 38 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  s               1    wreg     PTR const unsigned char 
  4375 ;;		 -> STR_2(17), STR_1(17), 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  4378 ;;		 -> STR_2(17), STR_1(17), 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;		None               void
  4381 ;; Registers used:
  4382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         0       1       0       0       0
  4390 ;;      Temps:          0       1       0       0       0
  4391 ;;      Totals:         0       2       0       0       0
  4392 ;;Total ram usage:        2 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    3
  4395 ;; This function calls:
  4396 ;;		_lcd_write_data
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           psect	text1566
  4402                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4403                           	line	38
  4404                           	global	__size_of_lcd_write_string
  4405  0025                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4406                           	
  4407  0BBB                     _lcd_write_string:	
  4408                           	opt	stack 4
  4409                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4410                           ;lcd_write_string@s stored from wreg
  4411  0BBB  1283               	bcf	status, 5	;RP0=0, select bank0
  4412  0BBC  1303               	bcf	status, 6	;RP1=0, select bank0
  4413  0BBD  00AE               	movwf	(lcd_write_string@s)
  4414                           	line	40
  4415                           	
  4416  0BBE                     l10588:	
  4417                           ;lcd.c: 40: while(*s) lcd_write_data(*s++);
  4418  0BBE  2BD2               	goto	l10594
  4419                           	
  4420  0BBF                     l2187:	
  4421                           	
  4422  0BBF                     l10590:	
  4423  0BBF  082E               	movf	(lcd_write_string@s),w
  4424  0BC0  0084               	movwf	fsr0
  4425  0BC1  120A  158A  2000   	fcall	stringdir
              120A  158A         
  4426  0BC6  120A  158A  229E   	fcall	_lcd_write_data
              120A  158A         
  4427                           	
  4428  0BCB                     l10592:	
  4429  0BCB  3001               	movlw	(01h)
  4430  0BCC  1283               	bcf	status, 5	;RP0=0, select bank0
  4431  0BCD  1303               	bcf	status, 6	;RP1=0, select bank0
  4432  0BCE  00AD               	movwf	(??_lcd_write_string+0)+0
  4433  0BCF  082D               	movf	(??_lcd_write_string+0)+0,w
  4434  0BD0  07AE               	addwf	(lcd_write_string@s),f
  4435  0BD1  2BD2               	goto	l10594
  4436                           	
  4437  0BD2                     l2186:	
  4438                           	
  4439  0BD2                     l10594:	
  4440  0BD2  082E               	movf	(lcd_write_string@s),w
  4441  0BD3  0084               	movwf	fsr0
  4442  0BD4  120A  158A  2000   	fcall	stringdir
              120A  158A         
  4443  0BD9  3800               	iorlw	0
  4444  0BDA  1D03               	skipz
  4445  0BDB  2BDD               	goto	u4441
  4446  0BDC  2BDE               	goto	u4440
  4447  0BDD                     u4441:
  4448  0BDD  2BBF               	goto	l10590
  4449  0BDE                     u4440:
  4450  0BDE  2BDF               	goto	l2189
  4451                           	
  4452  0BDF                     l2188:	
  4453                           	line	41
  4454                           	
  4455  0BDF                     l2189:	
  4456  0BDF  0008               	return
  4457                           	opt stack 0
  4458                           GLOBAL	__end_of_lcd_write_string
  4459  0BE0                     	__end_of_lcd_write_string:
  4460 ;; =============== function _lcd_write_string ends ============
  4461                           
  4462                           	signat	_lcd_write_string,4216
  4463                           	global	_turnRight90
  4464                           psect	text1567,local,class=CODE,delta=2
  4465                           global __ptext1567
  4466  0F43                     __ptext1567:
  4467                           
  4468 ;; *************** function _turnRight90 *****************
  4469 ;; Defined at:
  4470 ;;		line 163 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;		None               void
  4477 ;; Registers used:
  4478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4484 ;;      Params:         0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0
  4486 ;;      Temps:          0       3       0       0       0
  4487 ;;      Totals:         0       3       0       0       0
  4488 ;;Total ram usage:        3 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    4
  4491 ;; This function calls:
  4492 ;;		_drive
  4493 ;;		_waitFor
  4494 ;; This function is called by:
  4495 ;;		_goRight
  4496 ;;		_rightWallCorrect
  4497 ;;		_goReverse
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           psect	text1567
  4501                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4502                           	line	163
  4503                           	global	__size_of_turnRight90
  4504  003E                     	__size_of_turnRight90	equ	__end_of_turnRight90-_turnRight90
  4505                           	
  4506  0F43                     _turnRight90:	
  4507                           	opt	stack 1
  4508                           ; Regs used in _turnRight90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4509                           	line	164
  4510                           	
  4511  0F43                     l10584:	
  4512                           ;drive.c: 164: drive(0, 25, 255, 255);
  4513  0F43  3019               	movlw	(019h)
  4514  0F44  1283               	bcf	status, 5	;RP0=0, select bank0
  4515  0F45  1303               	bcf	status, 6	;RP1=0, select bank0
  4516  0F46  00B3               	movwf	(??_turnRight90+0)+0
  4517  0F47  0833               	movf	(??_turnRight90+0)+0,w
  4518  0F48  00AC               	movwf	(?_drive)
  4519  0F49  30FF               	movlw	(0FFh)
  4520  0F4A  00B4               	movwf	(??_turnRight90+1)+0
  4521  0F4B  0834               	movf	(??_turnRight90+1)+0,w
  4522  0F4C  00AD               	movwf	0+(?_drive)+01h
  4523  0F4D  30FF               	movlw	(0FFh)
  4524  0F4E  00B5               	movwf	(??_turnRight90+2)+0
  4525  0F4F  0835               	movf	(??_turnRight90+2)+0,w
  4526  0F50  00AE               	movwf	0+(?_drive)+02h
  4527  0F51  3000               	movlw	(0)
  4528  0F52  120A  158A  25E9   	fcall	_drive
              120A  158A         
  4529                           	line	165
  4530                           ;drive.c: 165: waitFor(157,255,169);
  4531  0F57  30FF               	movlw	(0FFh)
  4532  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  4533  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  4534  0F5A  00B3               	movwf	(??_turnRight90+0)+0
  4535  0F5B  0833               	movf	(??_turnRight90+0)+0,w
  4536  0F5C  00AC               	movwf	(?_waitFor)
  4537  0F5D  30A9               	movlw	(0A9h)
  4538  0F5E  00B4               	movwf	(??_turnRight90+1)+0
  4539  0F5F  0834               	movf	(??_turnRight90+1)+0,w
  4540  0F60  00AD               	movwf	0+(?_waitFor)+01h
  4541  0F61  309D               	movlw	(09Dh)
  4542  0F62  120A  158A  2457   	fcall	_waitFor
              120A  158A         
  4543                           	line	166
  4544                           ;drive.c: 166: drive(0, 0, 0, 0);
  4545  0F67  1283               	bcf	status, 5	;RP0=0, select bank0
  4546  0F68  1303               	bcf	status, 6	;RP1=0, select bank0
  4547  0F69  01AC               	clrf	(?_drive)
  4548  0F6A  01AD               	clrf	0+(?_drive)+01h
  4549  0F6B  01AE               	clrf	0+(?_drive)+02h
  4550  0F6C  3000               	movlw	(0)
  4551  0F6D  120A  158A  25E9   	fcall	_drive
              120A  158A         
  4552                           	line	167
  4553                           	
  4554  0F72                     l10586:	
  4555                           ;drive.c: 167: _delay((unsigned long)((6500)*(20000000/4000.0)));
  4556                           	opt asmopt_off
  4557  0F72  30A5               movlw  165
  4558  0F73  1283               	bcf	status, 5	;RP0=0, select bank0
  4559  0F74  1303               	bcf	status, 6	;RP1=0, select bank0
  4560  0F75  00B5               movwf	((??_turnRight90+0)+0+2),f
  4561  0F76  30E0               movlw	224
  4562  0F77  00B4               movwf	((??_turnRight90+0)+0+1),f
  4563  0F78  30FE               	movlw	254
  4564  0F79  00B3               movwf	((??_turnRight90+0)+0),f
  4565  0F7A                     u4737:
  4566  0F7A  0BB3               	decfsz	((??_turnRight90+0)+0),f
  4567  0F7B  2F7A               	goto	u4737
  4568  0F7C  0BB4               	decfsz	((??_turnRight90+0)+0+1),f
  4569  0F7D  2F7A               	goto	u4737
  4570  0F7E  0BB5               	decfsz	((??_turnRight90+0)+0+2),f
  4571  0F7F  2F7A               	goto	u4737
  4572                           opt asmopt_on
  4573                           
  4574                           	line	168
  4575                           	
  4576  0F80                     l1463:	
  4577  0F80  0008               	return
  4578                           	opt stack 0
  4579                           GLOBAL	__end_of_turnRight90
  4580  0F81                     	__end_of_turnRight90:
  4581 ;; =============== function _turnRight90 ends ============
  4582                           
  4583                           	signat	_turnRight90,88
  4584                           	global	_turnLeft90
  4585                           psect	text1568,local,class=CODE,delta=2
  4586                           global __ptext1568
  4587  0E20                     __ptext1568:
  4588                           
  4589 ;; *************** function _turnLeft90 *****************
  4590 ;; Defined at:
  4591 ;;		line 155 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;		None               void
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0
  4607 ;;      Temps:          0       3       0       0       0
  4608 ;;      Totals:         0       3       0       0       0
  4609 ;;Total ram usage:        3 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    4
  4612 ;; This function calls:
  4613 ;;		_drive
  4614 ;;		_waitFor
  4615 ;; This function is called by:
  4616 ;;		_goLeft
  4617 ;;		_rightWallCorrect
  4618 ;;		_goReverse
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           psect	text1568
  4622                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4623                           	line	155
  4624                           	global	__size_of_turnLeft90
  4625  0037                     	__size_of_turnLeft90	equ	__end_of_turnLeft90-_turnLeft90
  4626                           	
  4627  0E20                     _turnLeft90:	
  4628                           	opt	stack 1
  4629                           ; Regs used in _turnLeft90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4630                           	line	156
  4631                           	
  4632  0E20                     l10580:	
  4633                           ;drive.c: 156: drive(0, 25, 0, 1);
  4634  0E20  3019               	movlw	(019h)
  4635  0E21  1283               	bcf	status, 5	;RP0=0, select bank0
  4636  0E22  1303               	bcf	status, 6	;RP1=0, select bank0
  4637  0E23  00B3               	movwf	(??_turnLeft90+0)+0
  4638  0E24  0833               	movf	(??_turnLeft90+0)+0,w
  4639  0E25  00AC               	movwf	(?_drive)
  4640  0E26  01AD               	clrf	0+(?_drive)+01h
  4641  0E27  01AE               	clrf	0+(?_drive)+02h
  4642  0E28  1403               	bsf	status,0
  4643  0E29  0DAE               	rlf	0+(?_drive)+02h,f
  4644  0E2A  3000               	movlw	(0)
  4645  0E2B  120A  158A  25E9   	fcall	_drive
              120A  158A         
  4646                           	line	157
  4647                           ;drive.c: 157: waitFor(157,0,85);
  4648  0E30  1283               	bcf	status, 5	;RP0=0, select bank0
  4649  0E31  1303               	bcf	status, 6	;RP1=0, select bank0
  4650  0E32  01AC               	clrf	(?_waitFor)
  4651  0E33  3055               	movlw	(055h)
  4652  0E34  00B3               	movwf	(??_turnLeft90+0)+0
  4653  0E35  0833               	movf	(??_turnLeft90+0)+0,w
  4654  0E36  00AD               	movwf	0+(?_waitFor)+01h
  4655  0E37  309D               	movlw	(09Dh)
  4656  0E38  120A  158A  2457   	fcall	_waitFor
              120A  158A         
  4657                           	line	158
  4658                           ;drive.c: 158: drive(0, 0, 0, 0);
  4659  0E3D  1283               	bcf	status, 5	;RP0=0, select bank0
  4660  0E3E  1303               	bcf	status, 6	;RP1=0, select bank0
  4661  0E3F  01AC               	clrf	(?_drive)
  4662  0E40  01AD               	clrf	0+(?_drive)+01h
  4663  0E41  01AE               	clrf	0+(?_drive)+02h
  4664  0E42  3000               	movlw	(0)
  4665  0E43  120A  158A  25E9   	fcall	_drive
              120A  158A         
  4666                           	line	159
  4667                           	
  4668  0E48                     l10582:	
  4669                           ;drive.c: 159: _delay((unsigned long)((6500)*(20000000/4000.0)));
  4670                           	opt asmopt_off
  4671  0E48  30A5               movlw  165
  4672  0E49  1283               	bcf	status, 5	;RP0=0, select bank0
  4673  0E4A  1303               	bcf	status, 6	;RP1=0, select bank0
  4674  0E4B  00B5               movwf	((??_turnLeft90+0)+0+2),f
  4675  0E4C  30E0               movlw	224
  4676  0E4D  00B4               movwf	((??_turnLeft90+0)+0+1),f
  4677  0E4E  30FE               	movlw	254
  4678  0E4F  00B3               movwf	((??_turnLeft90+0)+0),f
  4679  0E50                     u4747:
  4680  0E50  0BB3               	decfsz	((??_turnLeft90+0)+0),f
  4681  0E51  2E50               	goto	u4747
  4682  0E52  0BB4               	decfsz	((??_turnLeft90+0)+0+1),f
  4683  0E53  2E50               	goto	u4747
  4684  0E54  0BB5               	decfsz	((??_turnLeft90+0)+0+2),f
  4685  0E55  2E50               	goto	u4747
  4686                           opt asmopt_on
  4687                           
  4688                           	line	160
  4689                           	
  4690  0E56                     l1460:	
  4691  0E56  0008               	return
  4692                           	opt stack 0
  4693                           GLOBAL	__end_of_turnLeft90
  4694  0E57                     	__end_of_turnLeft90:
  4695 ;; =============== function _turnLeft90 ends ============
  4696                           
  4697                           	signat	_turnLeft90,88
  4698                           	global	_turnAround
  4699                           psect	text1569,local,class=CODE,delta=2
  4700                           global __ptext1569
  4701  0735                     __ptext1569:
  4702                           
  4703 ;; *************** function _turnAround *****************
  4704 ;; Defined at:
  4705 ;;		line 146 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0
  4721 ;;      Temps:          0       3       0       0       0
  4722 ;;      Totals:         0       3       0       0       0
  4723 ;;Total ram usage:        3 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    4
  4726 ;; This function calls:
  4727 ;;		_drive
  4728 ;;		_waitFor
  4729 ;; This function is called by:
  4730 ;;		_goBackward
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           psect	text1569
  4734                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4735                           	line	146
  4736                           	global	__size_of_turnAround
  4737  0045                     	__size_of_turnAround	equ	__end_of_turnAround-_turnAround
  4738                           	
  4739  0735                     _turnAround:	
  4740                           	opt	stack 1
  4741                           ; Regs used in _turnAround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4742                           	line	147
  4743                           	
  4744  0735                     l10574:	
  4745                           ;drive.c: 147: drive(0, 25, 0, 1);
  4746  0735  3019               	movlw	(019h)
  4747  0736  1283               	bcf	status, 5	;RP0=0, select bank0
  4748  0737  1303               	bcf	status, 6	;RP1=0, select bank0
  4749  0738  00B3               	movwf	(??_turnAround+0)+0
  4750  0739  0833               	movf	(??_turnAround+0)+0,w
  4751  073A  00AC               	movwf	(?_drive)
  4752  073B  01AD               	clrf	0+(?_drive)+01h
  4753  073C  01AE               	clrf	0+(?_drive)+02h
  4754  073D  1403               	bsf	status,0
  4755  073E  0DAE               	rlf	0+(?_drive)+02h,f
  4756  073F  3000               	movlw	(0)
  4757  0740  120A  158A  25E9   	fcall	_drive
              120A  118A         
  4758                           	line	148
  4759                           ;drive.c: 148: waitFor(157,0,170);
  4760  0745  1283               	bcf	status, 5	;RP0=0, select bank0
  4761  0746  1303               	bcf	status, 6	;RP1=0, select bank0
  4762  0747  01AC               	clrf	(?_waitFor)
  4763  0748  30AA               	movlw	(0AAh)
  4764  0749  00B3               	movwf	(??_turnAround+0)+0
  4765  074A  0833               	movf	(??_turnAround+0)+0,w
  4766  074B  00AD               	movwf	0+(?_waitFor)+01h
  4767  074C  309D               	movlw	(09Dh)
  4768  074D  120A  158A  2457   	fcall	_waitFor
              120A  118A         
  4769                           	line	149
  4770                           ;drive.c: 149: drive(0, 0, 0, 0);
  4771  0752  1283               	bcf	status, 5	;RP0=0, select bank0
  4772  0753  1303               	bcf	status, 6	;RP1=0, select bank0
  4773  0754  01AC               	clrf	(?_drive)
  4774  0755  01AD               	clrf	0+(?_drive)+01h
  4775  0756  01AE               	clrf	0+(?_drive)+02h
  4776  0757  3000               	movlw	(0)
  4777  0758  120A  158A  25E9   	fcall	_drive
              120A  118A         
  4778                           	line	150
  4779                           	
  4780  075D                     l10576:	
  4781                           ;drive.c: 150: _delay((unsigned long)((6500)*(20000000/4000.0)));
  4782                           	opt asmopt_off
  4783  075D  30A5               movlw  165
  4784  075E  1283               	bcf	status, 5	;RP0=0, select bank0
  4785  075F  1303               	bcf	status, 6	;RP1=0, select bank0
  4786  0760  00B5               movwf	((??_turnAround+0)+0+2),f
  4787  0761  30E0               movlw	224
  4788  0762  00B4               movwf	((??_turnAround+0)+0+1),f
  4789  0763  30FE               	movlw	254
  4790  0764  00B3               movwf	((??_turnAround+0)+0),f
  4791  0765                     u4757:
  4792  0765  0BB3               	decfsz	((??_turnAround+0)+0),f
  4793  0766  2F65               	goto	u4757
  4794  0767  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  4795  0768  2F65               	goto	u4757
  4796  0769  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  4797  076A  2F65               	goto	u4757
  4798                           opt asmopt_on
  4799                           
  4800                           	line	151
  4801                           	
  4802  076B                     l10578:	
  4803                           ;drive.c: 151: _delay((unsigned long)((6500)*(20000000/4000.0)));
  4804                           	opt asmopt_off
  4805  076B  30A5               movlw  165
  4806  076C  1283               	bcf	status, 5	;RP0=0, select bank0
  4807  076D  1303               	bcf	status, 6	;RP1=0, select bank0
  4808  076E  00B5               movwf	((??_turnAround+0)+0+2),f
  4809  076F  30E0               movlw	224
  4810  0770  00B4               movwf	((??_turnAround+0)+0+1),f
  4811  0771  30FE               	movlw	254
  4812  0772  00B3               movwf	((??_turnAround+0)+0),f
  4813  0773                     u4767:
  4814  0773  0BB3               	decfsz	((??_turnAround+0)+0),f
  4815  0774  2F73               	goto	u4767
  4816  0775  0BB4               	decfsz	((??_turnAround+0)+0+1),f
  4817  0776  2F73               	goto	u4767
  4818  0777  0BB5               	decfsz	((??_turnAround+0)+0+2),f
  4819  0778  2F73               	goto	u4767
  4820                           opt asmopt_on
  4821                           
  4822                           	line	152
  4823                           	
  4824  0779                     l1457:	
  4825  0779  0008               	return
  4826                           	opt stack 0
  4827                           GLOBAL	__end_of_turnAround
  4828  077A                     	__end_of_turnAround:
  4829 ;; =============== function _turnAround ends ============
  4830                           
  4831                           	signat	_turnAround,88
  4832                           	global	_lcd_set_cursor
  4833                           psect	text1570,local,class=CODE,delta=2
  4834                           global __ptext1570
  4835  0A65                     __ptext1570:
  4836                           
  4837 ;; *************** function _lcd_set_cursor *****************
  4838 ;; Defined at:
  4839 ;;		line 32 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  address         1    wreg     unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  address         1   13[BANK0 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;		None               void
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, pclath, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4853 ;;      Params:         0       0       0       0       0
  4854 ;;      Locals:         0       1       0       0       0
  4855 ;;      Temps:          0       0       0       0       0
  4856 ;;      Totals:         0       1       0       0       0
  4857 ;;Total ram usage:        1 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    3
  4860 ;; This function calls:
  4861 ;;		_lcd_write_control
  4862 ;; This function is called by:
  4863 ;;		_goBackward
  4864 ;;		_goForward
  4865 ;;		_goLeft
  4866 ;;		_goRight
  4867 ;;		_checkForFinalDestination
  4868 ;;		_lookForVictim
  4869 ;;		_findWalls
  4870 ;;		_updateLocation
  4871 ;;		_main
  4872 ;;		_goReverse
  4873 ;;		_findFinalDestination
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           psect	text1570
  4877                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  4878                           	line	32
  4879                           	global	__size_of_lcd_set_cursor
  4880  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  4881                           	
  4882  0A65                     _lcd_set_cursor:	
  4883                           	opt	stack 3
  4884                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4885                           ;lcd_set_cursor@address stored from wreg
  4886  0A65  1283               	bcf	status, 5	;RP0=0, select bank0
  4887  0A66  1303               	bcf	status, 6	;RP1=0, select bank0
  4888  0A67  00AD               	movwf	(lcd_set_cursor@address)
  4889                           	line	33
  4890                           	
  4891  0A68                     l10570:	
  4892                           ;lcd.c: 33: address |= 0b10000000;
  4893  0A68  17AD               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  4894                           	line	34
  4895                           	
  4896  0A69                     l10572:	
  4897                           ;lcd.c: 34: lcd_write_control(address);
  4898  0A69  082D               	movf	(lcd_set_cursor@address),w
  4899  0A6A  120A  158A  22C4   	fcall	_lcd_write_control
              120A  158A         
  4900                           	line	35
  4901                           	
  4902  0A6F                     l2183:	
  4903  0A6F  0008               	return
  4904                           	opt stack 0
  4905                           GLOBAL	__end_of_lcd_set_cursor
  4906  0A70                     	__end_of_lcd_set_cursor:
  4907 ;; =============== function _lcd_set_cursor ends ============
  4908                           
  4909                           	signat	_lcd_set_cursor,4216
  4910                           	global	_driveForDistance
  4911                           psect	text1571,local,class=CODE,delta=2
  4912                           global __ptext1571
  4913  05CF                     __ptext1571:
  4914                           
  4915 ;; *************** function _driveForDistance *****************
  4916 ;; Defined at:
  4917 ;;		line 29 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  moveDistance    2   19[BANK0 ] int 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  distance        2   25[BANK0 ] int 
  4922 ;;  deltaDistanc    2   23[BANK0 ] int 
  4923 ;;  low             1   28[BANK0 ] volatile unsigned char 
  4924 ;;  high            1   27[BANK0 ] volatile unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;		None               void
  4927 ;; Registers used:
  4928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         0       2       0       0       0
  4935 ;;      Locals:         0       6       0       0       0
  4936 ;;      Temps:          0       2       0       0       0
  4937 ;;      Totals:         0      10       0       0       0
  4938 ;;Total ram usage:       10 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    4
  4941 ;; This function calls:
  4942 ;;		_drive
  4943 ;;		_ser_putch
  4944 ;;		_ser_getch
  4945 ;; This function is called by:
  4946 ;;		_goBackward
  4947 ;;		_goForward
  4948 ;;		_goLeft
  4949 ;;		_goRight
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           psect	text1571
  4953                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  4954                           	line	29
  4955                           	global	__size_of_driveForDistance
  4956  006C                     	__size_of_driveForDistance	equ	__end_of_driveForDistance-_driveForDistance
  4957                           	
  4958  05CF                     _driveForDistance:	
  4959                           	opt	stack 1
  4960                           ; Regs used in _driveForDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4961                           	line	32
  4962                           	
  4963  05CF                     l10552:	
  4964                           ;drive.c: 31: volatile char high, low;
  4965                           ;drive.c: 32: int deltaDistance = 0;
  4966  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  4967  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  4968  05D1  01B7               	clrf	(driveForDistance@deltaDistance)
  4969  05D2  01B8               	clrf	(driveForDistance@deltaDistance+1)
  4970                           	line	33
  4971                           ;drive.c: 33: int distance = 0;
  4972  05D3  01B9               	clrf	(driveForDistance@distance)
  4973  05D4  01BA               	clrf	(driveForDistance@distance+1)
  4974                           	line	35
  4975                           	
  4976  05D5                     l10554:	
  4977                           ;drive.c: 35: moving = 1;
  4978  05D5  1471               	bsf	(_moving/8),(_moving)&7
  4979                           	line	36
  4980                           	
  4981  05D6                     l10556:	
  4982                           ;drive.c: 36: drive(0, 250, 128, 0);
  4983  05D6  30FA               	movlw	(0FAh)
  4984  05D7  00B5               	movwf	(??_driveForDistance+0)+0
  4985  05D8  0835               	movf	(??_driveForDistance+0)+0,w
  4986  05D9  00AC               	movwf	(?_drive)
  4987  05DA  3080               	movlw	(080h)
  4988  05DB  00B6               	movwf	(??_driveForDistance+1)+0
  4989  05DC  0836               	movf	(??_driveForDistance+1)+0,w
  4990  05DD  00AD               	movwf	0+(?_drive)+01h
  4991  05DE  01AE               	clrf	0+(?_drive)+02h
  4992  05DF  3000               	movlw	(0)
  4993  05E0  120A  158A  25E9   	fcall	_drive
              120A  118A         
  4994                           	line	38
  4995                           ;drive.c: 38: while(moving)
  4996  05E5  2E2A               	goto	l1426
  4997                           	
  4998  05E6                     l1427:	
  4999                           	line	40
  5000                           	
  5001  05E6                     l10558:	
  5002                           ;drive.c: 39: {
  5003                           ;drive.c: 40: ser_putch(142);
  5004  05E6  308E               	movlw	(08Eh)
  5005  05E7  120A  158A  2378   	fcall	_ser_putch
              120A  118A         
  5006                           	line	41
  5007                           ;drive.c: 41: ser_putch(19);
  5008  05EC  3013               	movlw	(013h)
  5009  05ED  120A  158A  2378   	fcall	_ser_putch
              120A  118A         
  5010                           	line	42
  5011                           ;drive.c: 42: high = ser_getch();
  5012  05F2  120A  158A  2399   	fcall	_ser_getch
              120A  118A         
  5013  05F7  1283               	bcf	status, 5	;RP0=0, select bank0
  5014  05F8  1303               	bcf	status, 6	;RP1=0, select bank0
  5015  05F9  00B5               	movwf	(??_driveForDistance+0)+0
  5016  05FA  0835               	movf	(??_driveForDistance+0)+0,w
  5017  05FB  00BB               	movwf	(driveForDistance@high)	;volatile
  5018                           	line	43
  5019                           ;drive.c: 43: low = ser_getch();
  5020  05FC  120A  158A  2399   	fcall	_ser_getch
              120A  118A         
  5021  0601  1283               	bcf	status, 5	;RP0=0, select bank0
  5022  0602  1303               	bcf	status, 6	;RP1=0, select bank0
  5023  0603  00B5               	movwf	(??_driveForDistance+0)+0
  5024  0604  0835               	movf	(??_driveForDistance+0)+0,w
  5025  0605  00BC               	movwf	(driveForDistance@low)	;volatile
  5026                           	line	44
  5027                           	
  5028  0606                     l10560:	
  5029                           ;drive.c: 44: deltaDistance = high*256 + low;
  5030  0606  083B               	movf	(driveForDistance@high),w	;volatile
  5031  0607  00B5               	movwf	(??_driveForDistance+0)+0
  5032  0608  01B6               	clrf	(??_driveForDistance+0)+0+1
  5033  0609  0835               	movf	(??_driveForDistance+0)+0,w
  5034  060A  00B6               	movwf	(??_driveForDistance+0)+1
  5035  060B  01B5               	clrf	(??_driveForDistance+0)+0
  5036  060C  083C               	movf	(driveForDistance@low),w	;volatile
  5037  060D  0735               	addwf	0+(??_driveForDistance+0)+0,w
  5038  060E  00B7               	movwf	(driveForDistance@deltaDistance)
  5039  060F  3000               	movlw	0
  5040  0610  1803               	skipnc
  5041  0611  3001               	movlw	1
  5042  0612  0736               	addwf	1+(??_driveForDistance+0)+0,w
  5043  0613  00B8               	movwf	1+(driveForDistance@deltaDistance)
  5044                           	line	45
  5045                           	
  5046  0614                     l10562:	
  5047                           ;drive.c: 45: distance += deltaDistance;
  5048  0614  0837               	movf	(driveForDistance@deltaDistance),w
  5049  0615  07B9               	addwf	(driveForDistance@distance),f
  5050  0616  1803               	skipnc
  5051  0617  0ABA               	incf	(driveForDistance@distance+1),f
  5052  0618  0838               	movf	(driveForDistance@deltaDistance+1),w
  5053  0619  07BA               	addwf	(driveForDistance@distance+1),f
  5054                           	line	64
  5055                           	
  5056  061A                     l10564:	
  5057                           ;drive.c: 64: if(distance >= moveDistance)
  5058  061A  083A               	movf	(driveForDistance@distance+1),w
  5059  061B  3A80               	xorlw	80h
  5060  061C  00B5               	movwf	(??_driveForDistance+0)+0
  5061  061D  0834               	movf	(driveForDistance@moveDistance+1),w
  5062  061E  3A80               	xorlw	80h
  5063  061F  0235               	subwf	(??_driveForDistance+0)+0,w
  5064  0620  1D03               	skipz
  5065  0621  2E24               	goto	u4425
  5066  0622  0833               	movf	(driveForDistance@moveDistance),w
  5067  0623  0239               	subwf	(driveForDistance@distance),w
  5068  0624                     u4425:
  5069                           
  5070  0624  1C03               	skipc
  5071  0625  2E27               	goto	u4421
  5072  0626  2E28               	goto	u4420
  5073  0627                     u4421:
  5074  0627  2E2A               	goto	l1426
  5075  0628                     u4420:
  5076                           	line	65
  5077                           	
  5078  0628                     l10566:	
  5079                           ;drive.c: 65: moving = 0;
  5080  0628  1071               	bcf	(_moving/8),(_moving)&7
  5081  0629  2E2A               	goto	l1426
  5082                           	
  5083  062A                     l1428:	
  5084                           	line	66
  5085                           	
  5086  062A                     l1426:	
  5087                           	line	38
  5088  062A  1871               	btfsc	(_moving/8),(_moving)&7
  5089  062B  2E2D               	goto	u4431
  5090  062C  2E2E               	goto	u4430
  5091  062D                     u4431:
  5092  062D  2DE6               	goto	l10558
  5093  062E                     u4430:
  5094  062E  2E2F               	goto	l10568
  5095                           	
  5096  062F                     l1429:	
  5097                           	line	67
  5098                           	
  5099  062F                     l10568:	
  5100                           ;drive.c: 66: }
  5101                           ;drive.c: 67: drive(0, 0, 0, 0);
  5102  062F  1283               	bcf	status, 5	;RP0=0, select bank0
  5103  0630  1303               	bcf	status, 6	;RP1=0, select bank0
  5104  0631  01AC               	clrf	(?_drive)
  5105  0632  01AD               	clrf	0+(?_drive)+01h
  5106  0633  01AE               	clrf	0+(?_drive)+02h
  5107  0634  3000               	movlw	(0)
  5108  0635  120A  158A  25E9   	fcall	_drive
              120A  118A         
  5109                           	line	68
  5110                           	
  5111  063A                     l1430:	
  5112  063A  0008               	return
  5113                           	opt stack 0
  5114                           GLOBAL	__end_of_driveForDistance
  5115  063B                     	__end_of_driveForDistance:
  5116 ;; =============== function _driveForDistance ends ============
  5117                           
  5118                           	signat	_driveForDistance,4216
  5119                           	global	_adc_read_channel
  5120                           psect	text1572,local,class=CODE,delta=2
  5121                           global __ptext1572
  5122  069B                     __ptext1572:
  5123                           
  5124 ;; *************** function _adc_read_channel *****************
  5125 ;; Defined at:
  5126 ;;		line 7 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  channel         1    wreg     unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  channel         1    2[BANK1 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2    0[BANK1 ] int 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5140 ;;      Params:         0       0       2       0       0
  5141 ;;      Locals:         0       0       1       0       0
  5142 ;;      Temps:          0       1       0       0       0
  5143 ;;      Totals:         0       1       3       0       0
  5144 ;;Total ram usage:        4 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    4
  5147 ;; This function calls:
  5148 ;;		_adc_read
  5149 ;; This function is called by:
  5150 ;;		_readIR
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           psect	text1572
  5154                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  5155                           	line	7
  5156                           	global	__size_of_adc_read_channel
  5157  0054                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  5158                           	
  5159  069B                     _adc_read_channel:	
  5160                           	opt	stack 0
  5161                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5162                           ;adc_read_channel@channel stored from wreg
  5163  069B  1683               	bsf	status, 5	;RP0=1, select bank1
  5164  069C  1303               	bcf	status, 6	;RP1=0, select bank1
  5165  069D  00E0               	movwf	(adc_read_channel@channel)^080h
  5166                           	line	8
  5167                           	
  5168  069E                     l10536:	
  5169                           ;adc.c: 8: switch(channel)
  5170  069E  2EC4               	goto	l10544
  5171                           	line	10
  5172                           ;adc.c: 9: {
  5173                           ;adc.c: 10: case 0:
  5174                           	
  5175  069F                     l690:	
  5176                           	line	11
  5177                           ;adc.c: 11: CHS0 = 0;
  5178  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  5179  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  5180  06A1  119F               	bcf	(251/8),(251)&7
  5181                           	line	12
  5182                           ;adc.c: 12: CHS1 = 0;
  5183  06A2  121F               	bcf	(252/8),(252)&7
  5184                           	line	13
  5185                           ;adc.c: 13: CHS2 = 0;
  5186  06A3  129F               	bcf	(253/8),(253)&7
  5187                           	line	14
  5188                           ;adc.c: 14: break;
  5189  06A4  2ED5               	goto	l10546
  5190                           	line	15
  5191                           ;adc.c: 15: case 1:
  5192                           	
  5193  06A5                     l692:	
  5194                           	line	16
  5195                           ;adc.c: 16: CHS0 = 1;
  5196  06A5  1283               	bcf	status, 5	;RP0=0, select bank0
  5197  06A6  1303               	bcf	status, 6	;RP1=0, select bank0
  5198  06A7  159F               	bsf	(251/8),(251)&7
  5199                           	line	17
  5200                           ;adc.c: 17: CHS1 = 0;
  5201  06A8  121F               	bcf	(252/8),(252)&7
  5202                           	line	18
  5203                           ;adc.c: 18: CHS2 = 0;
  5204  06A9  129F               	bcf	(253/8),(253)&7
  5205                           	line	19
  5206                           ;adc.c: 19: break;
  5207  06AA  2ED5               	goto	l10546
  5208                           	line	20
  5209                           ;adc.c: 20: case 2:
  5210                           	
  5211  06AB                     l693:	
  5212                           	line	21
  5213                           ;adc.c: 21: CHS0 = 0;
  5214  06AB  1283               	bcf	status, 5	;RP0=0, select bank0
  5215  06AC  1303               	bcf	status, 6	;RP1=0, select bank0
  5216  06AD  119F               	bcf	(251/8),(251)&7
  5217                           	line	22
  5218                           ;adc.c: 22: CHS1 = 1;
  5219  06AE  161F               	bsf	(252/8),(252)&7
  5220                           	line	23
  5221                           ;adc.c: 23: CHS2 = 0;
  5222  06AF  129F               	bcf	(253/8),(253)&7
  5223                           	line	24
  5224                           ;adc.c: 24: break;
  5225  06B0  2ED5               	goto	l10546
  5226                           	line	25
  5227                           ;adc.c: 25: case 3:
  5228                           	
  5229  06B1                     l694:	
  5230                           	line	26
  5231                           ;adc.c: 26: CHS0 = 1;
  5232  06B1  1283               	bcf	status, 5	;RP0=0, select bank0
  5233  06B2  1303               	bcf	status, 6	;RP1=0, select bank0
  5234  06B3  159F               	bsf	(251/8),(251)&7
  5235                           	line	27
  5236                           ;adc.c: 27: CHS1 = 1;
  5237  06B4  161F               	bsf	(252/8),(252)&7
  5238                           	line	28
  5239                           ;adc.c: 28: CHS2 = 0;
  5240  06B5  129F               	bcf	(253/8),(253)&7
  5241                           	line	29
  5242                           ;adc.c: 29: break;
  5243  06B6  2ED5               	goto	l10546
  5244                           	line	30
  5245                           ;adc.c: 30: case 4:
  5246                           	
  5247  06B7                     l695:	
  5248                           	line	31
  5249                           ;adc.c: 31: CHS0 = 0;
  5250  06B7  1283               	bcf	status, 5	;RP0=0, select bank0
  5251  06B8  1303               	bcf	status, 6	;RP1=0, select bank0
  5252  06B9  119F               	bcf	(251/8),(251)&7
  5253                           	line	32
  5254                           ;adc.c: 32: CHS1 = 0;
  5255  06BA  121F               	bcf	(252/8),(252)&7
  5256                           	line	33
  5257                           ;adc.c: 33: CHS2 = 1;
  5258  06BB  169F               	bsf	(253/8),(253)&7
  5259                           	line	34
  5260                           ;adc.c: 34: break;
  5261  06BC  2ED5               	goto	l10546
  5262                           	line	37
  5263                           ;adc.c: 37: default:
  5264                           	
  5265  06BD                     l696:	
  5266                           	line	38
  5267                           	
  5268  06BD                     l10538:	
  5269                           ;adc.c: 38: return 0;
  5270  06BD  1683               	bsf	status, 5	;RP0=1, select bank1
  5271  06BE  1303               	bcf	status, 6	;RP1=0, select bank1
  5272  06BF  01DE               	clrf	(?_adc_read_channel)^080h
  5273  06C0  01DF               	clrf	(?_adc_read_channel+1)^080h
  5274  06C1  2EEE               	goto	l697
  5275                           	
  5276  06C2                     l10540:	
  5277  06C2  2EEE               	goto	l697
  5278                           	line	39
  5279                           	
  5280  06C3                     l10542:	
  5281                           ;adc.c: 39: }
  5282  06C3  2ED5               	goto	l10546
  5283                           	line	8
  5284                           	
  5285  06C4                     l689:	
  5286                           	
  5287  06C4                     l10544:	
  5288  06C4  0860               	movf	(adc_read_channel@channel)^080h,w
  5289                           	; Switch size 1, requested type "space"
  5290                           ; Number of cases is 5, Range of values is 0 to 4
  5291                           ; switch strategies available:
  5292                           ; Name         Instructions Cycles
  5293                           ; simple_byte           16     9 (average)
  5294                           ; direct_byte           23     8 (fixed)
  5295                           ; jumptable            260     6 (fixed)
  5296                           ; rangetable             9     6 (fixed)
  5297                           ; spacedrange           16     9 (fixed)
  5298                           ; locatedrange           5     3 (fixed)
  5299                           ;	Chosen strategy is simple_byte
  5300                           
  5301                           	opt asmopt_off
  5302  06C5  3A00               	xorlw	0^0	; case 0
  5303  06C6  1903               	skipnz
  5304  06C7  2E9F               	goto	l690
  5305  06C8  3A01               	xorlw	1^0	; case 1
  5306  06C9  1903               	skipnz
  5307  06CA  2EA5               	goto	l692
  5308  06CB  3A03               	xorlw	2^1	; case 2
  5309  06CC  1903               	skipnz
  5310  06CD  2EAB               	goto	l693
  5311  06CE  3A01               	xorlw	3^2	; case 3
  5312  06CF  1903               	skipnz
  5313  06D0  2EB1               	goto	l694
  5314  06D1  3A07               	xorlw	4^3	; case 4
  5315  06D2  1903               	skipnz
  5316  06D3  2EB7               	goto	l695
  5317  06D4  2EBD               	goto	l10538
  5318                           	opt asmopt_on
  5319                           
  5320                           	line	39
  5321                           	
  5322  06D5                     l691:	
  5323                           	line	41
  5324                           	
  5325  06D5                     l10546:	
  5326                           ;adc.c: 41: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5327                           	opt asmopt_off
  5328  06D5  3053               movlw	83
  5329  06D6  1283               	bcf	status, 5	;RP0=0, select bank0
  5330  06D7  00C5               movwf	(??_adc_read_channel+0)+0,f
  5331  06D8                     u4777:
  5332  06D8  0BC5               decfsz	(??_adc_read_channel+0)+0,f
  5333  06D9  2ED8               	goto	u4777
  5334                           opt asmopt_on
  5335                           
  5336                           	line	43
  5337                           	
  5338  06DA                     l10548:	
  5339                           ;adc.c: 43: return adc_read();
  5340  06DA  120A  158A  2781   	fcall	_adc_read
              120A  118A         
  5341  06DF  1283               	bcf	status, 5	;RP0=0, select bank0
  5342  06E0  1303               	bcf	status, 6	;RP1=0, select bank0
  5343  06E1  083A               	movf	(1+(?_adc_read)),w
  5344  06E2  1683               	bsf	status, 5	;RP0=1, select bank1
  5345  06E3  1303               	bcf	status, 6	;RP1=0, select bank1
  5346  06E4  01DF               	clrf	(?_adc_read_channel+1)^080h
  5347  06E5  07DF               	addwf	(?_adc_read_channel+1)^080h
  5348  06E6  1283               	bcf	status, 5	;RP0=0, select bank0
  5349  06E7  1303               	bcf	status, 6	;RP1=0, select bank0
  5350  06E8  0839               	movf	(0+(?_adc_read)),w
  5351  06E9  1683               	bsf	status, 5	;RP0=1, select bank1
  5352  06EA  1303               	bcf	status, 6	;RP1=0, select bank1
  5353  06EB  01DE               	clrf	(?_adc_read_channel)^080h
  5354  06EC  07DE               	addwf	(?_adc_read_channel)^080h
  5355                           
  5356  06ED  2EEE               	goto	l697
  5357                           	
  5358  06EE                     l10550:	
  5359                           	line	45
  5360                           	
  5361  06EE                     l697:	
  5362  06EE  0008               	return
  5363                           	opt stack 0
  5364                           GLOBAL	__end_of_adc_read_channel
  5365  06EF                     	__end_of_adc_read_channel:
  5366 ;; =============== function _adc_read_channel ends ============
  5367                           
  5368                           	signat	_adc_read_channel,4218
  5369                           	global	_convert
  5370                           psect	text1573,local,class=CODE,delta=2
  5371                           global __ptext1573
  5372  0015                     __ptext1573:
  5373                           
  5374 ;; *************** function _convert *****************
  5375 ;; Defined at:
  5376 ;;		line 11 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ir.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  adc_value       2   33[BANK0 ] int 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2   33[BANK0 ] int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         0       2       0       0       0
  5391 ;;      Locals:         0       0       0       0       0
  5392 ;;      Temps:          0       2       0       0       0
  5393 ;;      Totals:         0       4       0       0       0
  5394 ;;Total ram usage:        4 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    3
  5397 ;; This function calls:
  5398 ;;		___wmul
  5399 ;;		___awdiv
  5400 ;; This function is called by:
  5401 ;;		_readIR
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           psect	text1573
  5405                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ir.c"
  5406                           	line	11
  5407                           	global	__size_of_convert
  5408  01CF                     	__size_of_convert	equ	__end_of_convert-_convert
  5409                           	
  5410  0015                     _convert:	
  5411                           	opt	stack 1
  5412                           ; Regs used in _convert: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5413                           	line	12
  5414                           	
  5415  0015                     l10476:	
  5416                           ;ir.c: 12: if(adc_value < 82)
  5417  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  5418  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  5419  0017  0842               	movf	(convert@adc_value+1),w
  5420  0018  3A80               	xorlw	80h
  5421  0019  00FF               	movwf	btemp+1
  5422  001A  3080               	movlw	(high(052h))^80h
  5423  001B  027F               	subwf	btemp+1,w
  5424  001C  1D03               	skipz
  5425  001D  2820               	goto	u4355
  5426  001E  3052               	movlw	low(052h)
  5427  001F  0241               	subwf	(convert@adc_value),w
  5428  0020                     u4355:
  5429                           
  5430  0020  1803               	skipnc
  5431  0021  2823               	goto	u4351
  5432  0022  2824               	goto	u4350
  5433  0023                     u4351:
  5434  0023  282D               	goto	l10484
  5435  0024                     u4350:
  5436                           	line	13
  5437                           	
  5438  0024                     l10478:	
  5439                           ;ir.c: 13: return 999;
  5440  0024  30E7               	movlw	low(03E7h)
  5441  0025  1283               	bcf	status, 5	;RP0=0, select bank0
  5442  0026  1303               	bcf	status, 6	;RP1=0, select bank0
  5443  0027  00C1               	movwf	(?_convert)
  5444  0028  3003               	movlw	high(03E7h)
  5445  0029  00C2               	movwf	((?_convert))+1
  5446  002A  29E3               	goto	l5991
  5447                           	
  5448  002B                     l10480:	
  5449  002B  29E3               	goto	l5991
  5450                           	
  5451  002C                     l10482:	
  5452  002C  29E3               	goto	l5991
  5453                           	line	14
  5454                           	
  5455  002D                     l5990:	
  5456                           	
  5457  002D                     l10484:	
  5458                           ;ir.c: 14: else if(adc_value < 133)
  5459  002D  1283               	bcf	status, 5	;RP0=0, select bank0
  5460  002E  1303               	bcf	status, 6	;RP1=0, select bank0
  5461  002F  0842               	movf	(convert@adc_value+1),w
  5462  0030  3A80               	xorlw	80h
  5463  0031  00FF               	movwf	btemp+1
  5464  0032  3080               	movlw	(high(085h))^80h
  5465  0033  027F               	subwf	btemp+1,w
  5466  0034  1D03               	skipz
  5467  0035  2838               	goto	u4365
  5468  0036  3085               	movlw	low(085h)
  5469  0037  0241               	subwf	(convert@adc_value),w
  5470  0038                     u4365:
  5471                           
  5472  0038  1803               	skipnc
  5473  0039  283B               	goto	u4361
  5474  003A  283C               	goto	u4360
  5475  003B                     u4361:
  5476  003B  2874               	goto	l10492
  5477  003C                     u4360:
  5478                           	line	15
  5479                           	
  5480  003C                     l10486:	
  5481                           ;ir.c: 15: return (100 + (150-100)*(133 - adc_value)/(133 - 82) - 3);
  5482  003C  3033               	movlw	low(033h)
  5483  003D  1283               	bcf	status, 5	;RP0=0, select bank0
  5484  003E  1303               	bcf	status, 6	;RP1=0, select bank0
  5485  003F  00B0               	movwf	(?___awdiv)
  5486  0040  3000               	movlw	high(033h)
  5487  0041  00B1               	movwf	((?___awdiv))+1
  5488  0042  0941               	comf	(convert@adc_value),w
  5489  0043  00C3               	movwf	(??_convert+0)+0
  5490  0044  0942               	comf	(convert@adc_value+1),w
  5491  0045  00C4               	movwf	((??_convert+0)+0+1)
  5492  0046  0AC3               	incf	(??_convert+0)+0,f
  5493  0047  1903               	skipnz
  5494  0048  0AC4               	incf	((??_convert+0)+0+1),f
  5495  0049  0843               	movf	0+(??_convert+0)+0,w
  5496  004A  3E85               	addlw	low(085h)
  5497  004B  00AA               	movwf	(?___wmul)
  5498  004C  0844               	movf	1+(??_convert+0)+0,w
  5499  004D  1803               	skipnc
  5500  004E  3E01               	addlw	1
  5501  004F  3E00               	addlw	high(085h)
  5502  0050  00AB               	movwf	1+(?___wmul)
  5503  0051  3032               	movlw	low(032h)
  5504  0052  00AC               	movwf	0+(?___wmul)+02h
  5505  0053  3000               	movlw	high(032h)
  5506  0054  00AD               	movwf	(0+(?___wmul)+02h)+1
  5507  0055  120A  158A  24FD   	fcall	___wmul
              120A  118A         
  5508  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  5509  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  5510  005C  082B               	movf	(1+(?___wmul)),w
  5511  005D  01B3               	clrf	1+(?___awdiv)+02h
  5512  005E  07B3               	addwf	1+(?___awdiv)+02h
  5513  005F  082A               	movf	(0+(?___wmul)),w
  5514  0060  01B2               	clrf	0+(?___awdiv)+02h
  5515  0061  07B2               	addwf	0+(?___awdiv)+02h
  5516                           
  5517  0062  120A  118A  2559   	fcall	___awdiv
              120A  118A         
  5518  0067  1283               	bcf	status, 5	;RP0=0, select bank0
  5519  0068  1303               	bcf	status, 6	;RP1=0, select bank0
  5520  0069  0830               	movf	(0+(?___awdiv)),w
  5521  006A  3E61               	addlw	low(061h)
  5522  006B  00C1               	movwf	(?_convert)
  5523  006C  0831               	movf	(1+(?___awdiv)),w
  5524  006D  1803               	skipnc
  5525  006E  3E01               	addlw	1
  5526  006F  3E00               	addlw	high(061h)
  5527  0070  00C2               	movwf	1+(?_convert)
  5528  0071  29E3               	goto	l5991
  5529                           	
  5530  0072                     l10488:	
  5531  0072  29E3               	goto	l5991
  5532                           	
  5533  0073                     l10490:	
  5534  0073  29E3               	goto	l5991
  5535                           	line	16
  5536                           	
  5537  0074                     l5993:	
  5538                           	
  5539  0074                     l10492:	
  5540                           ;ir.c: 16: else if(adc_value < 184)
  5541  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  5542  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  5543  0076  0842               	movf	(convert@adc_value+1),w
  5544  0077  3A80               	xorlw	80h
  5545  0078  00FF               	movwf	btemp+1
  5546  0079  3080               	movlw	(high(0B8h))^80h
  5547  007A  027F               	subwf	btemp+1,w
  5548  007B  1D03               	skipz
  5549  007C  287F               	goto	u4375
  5550  007D  30B8               	movlw	low(0B8h)
  5551  007E  0241               	subwf	(convert@adc_value),w
  5552  007F                     u4375:
  5553                           
  5554  007F  1803               	skipnc
  5555  0080  2882               	goto	u4371
  5556  0081  2883               	goto	u4370
  5557  0082                     u4371:
  5558  0082  28BB               	goto	l10500
  5559  0083                     u4370:
  5560                           	line	17
  5561                           	
  5562  0083                     l10494:	
  5563                           ;ir.c: 17: return (70 + (100-70)*(184 - adc_value)/(184 - 133) - 3);
  5564  0083  3033               	movlw	low(033h)
  5565  0084  1283               	bcf	status, 5	;RP0=0, select bank0
  5566  0085  1303               	bcf	status, 6	;RP1=0, select bank0
  5567  0086  00B0               	movwf	(?___awdiv)
  5568  0087  3000               	movlw	high(033h)
  5569  0088  00B1               	movwf	((?___awdiv))+1
  5570  0089  0941               	comf	(convert@adc_value),w
  5571  008A  00C3               	movwf	(??_convert+0)+0
  5572  008B  0942               	comf	(convert@adc_value+1),w
  5573  008C  00C4               	movwf	((??_convert+0)+0+1)
  5574  008D  0AC3               	incf	(??_convert+0)+0,f
  5575  008E  1903               	skipnz
  5576  008F  0AC4               	incf	((??_convert+0)+0+1),f
  5577  0090  0843               	movf	0+(??_convert+0)+0,w
  5578  0091  3EB8               	addlw	low(0B8h)
  5579  0092  00AA               	movwf	(?___wmul)
  5580  0093  0844               	movf	1+(??_convert+0)+0,w
  5581  0094  1803               	skipnc
  5582  0095  3E01               	addlw	1
  5583  0096  3E00               	addlw	high(0B8h)
  5584  0097  00AB               	movwf	1+(?___wmul)
  5585  0098  301E               	movlw	low(01Eh)
  5586  0099  00AC               	movwf	0+(?___wmul)+02h
  5587  009A  3000               	movlw	high(01Eh)
  5588  009B  00AD               	movwf	(0+(?___wmul)+02h)+1
  5589  009C  120A  158A  24FD   	fcall	___wmul
              120A  118A         
  5590  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  5591  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  5592  00A3  082B               	movf	(1+(?___wmul)),w
  5593  00A4  01B3               	clrf	1+(?___awdiv)+02h
  5594  00A5  07B3               	addwf	1+(?___awdiv)+02h
  5595  00A6  082A               	movf	(0+(?___wmul)),w
  5596  00A7  01B2               	clrf	0+(?___awdiv)+02h
  5597  00A8  07B2               	addwf	0+(?___awdiv)+02h
  5598                           
  5599  00A9  120A  118A  2559   	fcall	___awdiv
              120A  118A         
  5600  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  5601  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  5602  00B0  0830               	movf	(0+(?___awdiv)),w
  5603  00B1  3E43               	addlw	low(043h)
  5604  00B2  00C1               	movwf	(?_convert)
  5605  00B3  0831               	movf	(1+(?___awdiv)),w
  5606  00B4  1803               	skipnc
  5607  00B5  3E01               	addlw	1
  5608  00B6  3E00               	addlw	high(043h)
  5609  00B7  00C2               	movwf	1+(?_convert)
  5610  00B8  29E3               	goto	l5991
  5611                           	
  5612  00B9                     l10496:	
  5613  00B9  29E3               	goto	l5991
  5614                           	
  5615  00BA                     l10498:	
  5616  00BA  29E3               	goto	l5991
  5617                           	line	18
  5618                           	
  5619  00BB                     l5995:	
  5620                           	
  5621  00BB                     l10500:	
  5622                           ;ir.c: 18: else if(adc_value < 256)
  5623  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  5624  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  5625  00BD  0842               	movf	(convert@adc_value+1),w
  5626  00BE  3A80               	xorlw	80h
  5627  00BF  00FF               	movwf	btemp+1
  5628  00C0  3081               	movlw	(high(0100h))^80h
  5629  00C1  027F               	subwf	btemp+1,w
  5630  00C2  1D03               	skipz
  5631  00C3  28C6               	goto	u4385
  5632  00C4  3000               	movlw	low(0100h)
  5633  00C5  0241               	subwf	(convert@adc_value),w
  5634  00C6                     u4385:
  5635                           
  5636  00C6  1803               	skipnc
  5637  00C7  28C9               	goto	u4381
  5638  00C8  28CA               	goto	u4380
  5639  00C9                     u4381:
  5640  00C9  2902               	goto	l10508
  5641  00CA                     u4380:
  5642                           	line	19
  5643                           	
  5644  00CA                     l10502:	
  5645                           ;ir.c: 19: return (50 + (70-50)*(256 - adc_value)/(256 - 184) - 4);
  5646  00CA  3048               	movlw	low(048h)
  5647  00CB  1283               	bcf	status, 5	;RP0=0, select bank0
  5648  00CC  1303               	bcf	status, 6	;RP1=0, select bank0
  5649  00CD  00B0               	movwf	(?___awdiv)
  5650  00CE  3000               	movlw	high(048h)
  5651  00CF  00B1               	movwf	((?___awdiv))+1
  5652  00D0  0941               	comf	(convert@adc_value),w
  5653  00D1  00C3               	movwf	(??_convert+0)+0
  5654  00D2  0942               	comf	(convert@adc_value+1),w
  5655  00D3  00C4               	movwf	((??_convert+0)+0+1)
  5656  00D4  0AC3               	incf	(??_convert+0)+0,f
  5657  00D5  1903               	skipnz
  5658  00D6  0AC4               	incf	((??_convert+0)+0+1),f
  5659  00D7  0843               	movf	0+(??_convert+0)+0,w
  5660  00D8  3E00               	addlw	low(0100h)
  5661  00D9  00AA               	movwf	(?___wmul)
  5662  00DA  0844               	movf	1+(??_convert+0)+0,w
  5663  00DB  1803               	skipnc
  5664  00DC  3E01               	addlw	1
  5665  00DD  3E01               	addlw	high(0100h)
  5666  00DE  00AB               	movwf	1+(?___wmul)
  5667  00DF  3014               	movlw	low(014h)
  5668  00E0  00AC               	movwf	0+(?___wmul)+02h
  5669  00E1  3000               	movlw	high(014h)
  5670  00E2  00AD               	movwf	(0+(?___wmul)+02h)+1
  5671  00E3  120A  158A  24FD   	fcall	___wmul
              120A  118A         
  5672  00E8  1283               	bcf	status, 5	;RP0=0, select bank0
  5673  00E9  1303               	bcf	status, 6	;RP1=0, select bank0
  5674  00EA  082B               	movf	(1+(?___wmul)),w
  5675  00EB  01B3               	clrf	1+(?___awdiv)+02h
  5676  00EC  07B3               	addwf	1+(?___awdiv)+02h
  5677  00ED  082A               	movf	(0+(?___wmul)),w
  5678  00EE  01B2               	clrf	0+(?___awdiv)+02h
  5679  00EF  07B2               	addwf	0+(?___awdiv)+02h
  5680                           
  5681  00F0  120A  118A  2559   	fcall	___awdiv
              120A  118A         
  5682  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
  5683  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
  5684  00F7  0830               	movf	(0+(?___awdiv)),w
  5685  00F8  3E2E               	addlw	low(02Eh)
  5686  00F9  00C1               	movwf	(?_convert)
  5687  00FA  0831               	movf	(1+(?___awdiv)),w
  5688  00FB  1803               	skipnc
  5689  00FC  3E01               	addlw	1
  5690  00FD  3E00               	addlw	high(02Eh)
  5691  00FE  00C2               	movwf	1+(?_convert)
  5692  00FF  29E3               	goto	l5991
  5693                           	
  5694  0100                     l10504:	
  5695  0100  29E3               	goto	l5991
  5696                           	
  5697  0101                     l10506:	
  5698  0101  29E3               	goto	l5991
  5699                           	line	20
  5700                           	
  5701  0102                     l5997:	
  5702                           	
  5703  0102                     l10508:	
  5704                           ;ir.c: 20: else if(adc_value < 317)
  5705  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  5706  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  5707  0104  0842               	movf	(convert@adc_value+1),w
  5708  0105  3A80               	xorlw	80h
  5709  0106  00FF               	movwf	btemp+1
  5710  0107  3081               	movlw	(high(013Dh))^80h
  5711  0108  027F               	subwf	btemp+1,w
  5712  0109  1D03               	skipz
  5713  010A  290D               	goto	u4395
  5714  010B  303D               	movlw	low(013Dh)
  5715  010C  0241               	subwf	(convert@adc_value),w
  5716  010D                     u4395:
  5717                           
  5718  010D  1803               	skipnc
  5719  010E  2910               	goto	u4391
  5720  010F  2911               	goto	u4390
  5721  0110                     u4391:
  5722  0110  2949               	goto	l10516
  5723  0111                     u4390:
  5724                           	line	21
  5725                           	
  5726  0111                     l10510:	
  5727                           ;ir.c: 21: return (40 + (50-40)*(317 - adc_value)/(317 - 256) - 3);
  5728  0111  303D               	movlw	low(03Dh)
  5729  0112  1283               	bcf	status, 5	;RP0=0, select bank0
  5730  0113  1303               	bcf	status, 6	;RP1=0, select bank0
  5731  0114  00B0               	movwf	(?___awdiv)
  5732  0115  3000               	movlw	high(03Dh)
  5733  0116  00B1               	movwf	((?___awdiv))+1
  5734  0117  0941               	comf	(convert@adc_value),w
  5735  0118  00C3               	movwf	(??_convert+0)+0
  5736  0119  0942               	comf	(convert@adc_value+1),w
  5737  011A  00C4               	movwf	((??_convert+0)+0+1)
  5738  011B  0AC3               	incf	(??_convert+0)+0,f
  5739  011C  1903               	skipnz
  5740  011D  0AC4               	incf	((??_convert+0)+0+1),f
  5741  011E  0843               	movf	0+(??_convert+0)+0,w
  5742  011F  3E3D               	addlw	low(013Dh)
  5743  0120  00AA               	movwf	(?___wmul)
  5744  0121  0844               	movf	1+(??_convert+0)+0,w
  5745  0122  1803               	skipnc
  5746  0123  3E01               	addlw	1
  5747  0124  3E01               	addlw	high(013Dh)
  5748  0125  00AB               	movwf	1+(?___wmul)
  5749  0126  300A               	movlw	low(0Ah)
  5750  0127  00AC               	movwf	0+(?___wmul)+02h
  5751  0128  3000               	movlw	high(0Ah)
  5752  0129  00AD               	movwf	(0+(?___wmul)+02h)+1
  5753  012A  120A  158A  24FD   	fcall	___wmul
              120A  118A         
  5754  012F  1283               	bcf	status, 5	;RP0=0, select bank0
  5755  0130  1303               	bcf	status, 6	;RP1=0, select bank0
  5756  0131  082B               	movf	(1+(?___wmul)),w
  5757  0132  01B3               	clrf	1+(?___awdiv)+02h
  5758  0133  07B3               	addwf	1+(?___awdiv)+02h
  5759  0134  082A               	movf	(0+(?___wmul)),w
  5760  0135  01B2               	clrf	0+(?___awdiv)+02h
  5761  0136  07B2               	addwf	0+(?___awdiv)+02h
  5762                           
  5763  0137  120A  118A  2559   	fcall	___awdiv
              120A  118A         
  5764  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  5765  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  5766  013E  0830               	movf	(0+(?___awdiv)),w
  5767  013F  3E25               	addlw	low(025h)
  5768  0140  00C1               	movwf	(?_convert)
  5769  0141  0831               	movf	(1+(?___awdiv)),w
  5770  0142  1803               	skipnc
  5771  0143  3E01               	addlw	1
  5772  0144  3E00               	addlw	high(025h)
  5773  0145  00C2               	movwf	1+(?_convert)
  5774  0146  29E3               	goto	l5991
  5775                           	
  5776  0147                     l10512:	
  5777  0147  29E3               	goto	l5991
  5778                           	
  5779  0148                     l10514:	
  5780  0148  29E3               	goto	l5991
  5781                           	line	22
  5782                           	
  5783  0149                     l5999:	
  5784                           	
  5785  0149                     l10516:	
  5786                           ;ir.c: 22: else if(adc_value < 410)
  5787  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  5788  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  5789  014B  0842               	movf	(convert@adc_value+1),w
  5790  014C  3A80               	xorlw	80h
  5791  014D  00FF               	movwf	btemp+1
  5792  014E  3081               	movlw	(high(019Ah))^80h
  5793  014F  027F               	subwf	btemp+1,w
  5794  0150  1D03               	skipz
  5795  0151  2954               	goto	u4405
  5796  0152  309A               	movlw	low(019Ah)
  5797  0153  0241               	subwf	(convert@adc_value),w
  5798  0154                     u4405:
  5799                           
  5800  0154  1803               	skipnc
  5801  0155  2957               	goto	u4401
  5802  0156  2958               	goto	u4400
  5803  0157                     u4401:
  5804  0157  2990               	goto	l10524
  5805  0158                     u4400:
  5806                           	line	23
  5807                           	
  5808  0158                     l10518:	
  5809                           ;ir.c: 23: return (30 + (40-30)*(410 - adc_value)/(410 - 317) - 2);
  5810  0158  305D               	movlw	low(05Dh)
  5811  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  5812  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  5813  015B  00B0               	movwf	(?___awdiv)
  5814  015C  3000               	movlw	high(05Dh)
  5815  015D  00B1               	movwf	((?___awdiv))+1
  5816  015E  0941               	comf	(convert@adc_value),w
  5817  015F  00C3               	movwf	(??_convert+0)+0
  5818  0160  0942               	comf	(convert@adc_value+1),w
  5819  0161  00C4               	movwf	((??_convert+0)+0+1)
  5820  0162  0AC3               	incf	(??_convert+0)+0,f
  5821  0163  1903               	skipnz
  5822  0164  0AC4               	incf	((??_convert+0)+0+1),f
  5823  0165  0843               	movf	0+(??_convert+0)+0,w
  5824  0166  3E9A               	addlw	low(019Ah)
  5825  0167  00AA               	movwf	(?___wmul)
  5826  0168  0844               	movf	1+(??_convert+0)+0,w
  5827  0169  1803               	skipnc
  5828  016A  3E01               	addlw	1
  5829  016B  3E01               	addlw	high(019Ah)
  5830  016C  00AB               	movwf	1+(?___wmul)
  5831  016D  300A               	movlw	low(0Ah)
  5832  016E  00AC               	movwf	0+(?___wmul)+02h
  5833  016F  3000               	movlw	high(0Ah)
  5834  0170  00AD               	movwf	(0+(?___wmul)+02h)+1
  5835  0171  120A  158A  24FD   	fcall	___wmul
              120A  118A         
  5836  0176  1283               	bcf	status, 5	;RP0=0, select bank0
  5837  0177  1303               	bcf	status, 6	;RP1=0, select bank0
  5838  0178  082B               	movf	(1+(?___wmul)),w
  5839  0179  01B3               	clrf	1+(?___awdiv)+02h
  5840  017A  07B3               	addwf	1+(?___awdiv)+02h
  5841  017B  082A               	movf	(0+(?___wmul)),w
  5842  017C  01B2               	clrf	0+(?___awdiv)+02h
  5843  017D  07B2               	addwf	0+(?___awdiv)+02h
  5844                           
  5845  017E  120A  118A  2559   	fcall	___awdiv
              120A  118A         
  5846  0183  1283               	bcf	status, 5	;RP0=0, select bank0
  5847  0184  1303               	bcf	status, 6	;RP1=0, select bank0
  5848  0185  0830               	movf	(0+(?___awdiv)),w
  5849  0186  3E1C               	addlw	low(01Ch)
  5850  0187  00C1               	movwf	(?_convert)
  5851  0188  0831               	movf	(1+(?___awdiv)),w
  5852  0189  1803               	skipnc
  5853  018A  3E01               	addlw	1
  5854  018B  3E00               	addlw	high(01Ch)
  5855  018C  00C2               	movwf	1+(?_convert)
  5856  018D  29E3               	goto	l5991
  5857                           	
  5858  018E                     l10520:	
  5859  018E  29E3               	goto	l5991
  5860                           	
  5861  018F                     l10522:	
  5862  018F  29E3               	goto	l5991
  5863                           	line	24
  5864                           	
  5865  0190                     l6001:	
  5866                           	
  5867  0190                     l10524:	
  5868                           ;ir.c: 24: else if(adc_value < 522)
  5869  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  5870  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  5871  0192  0842               	movf	(convert@adc_value+1),w
  5872  0193  3A80               	xorlw	80h
  5873  0194  00FF               	movwf	btemp+1
  5874  0195  3082               	movlw	(high(020Ah))^80h
  5875  0196  027F               	subwf	btemp+1,w
  5876  0197  1D03               	skipz
  5877  0198  299B               	goto	u4415
  5878  0199  300A               	movlw	low(020Ah)
  5879  019A  0241               	subwf	(convert@adc_value),w
  5880  019B                     u4415:
  5881                           
  5882  019B  1803               	skipnc
  5883  019C  299E               	goto	u4411
  5884  019D  299F               	goto	u4410
  5885  019E                     u4411:
  5886  019E  29D7               	goto	l10532
  5887  019F                     u4410:
  5888                           	line	25
  5889                           	
  5890  019F                     l10526:	
  5891                           ;ir.c: 25: return (20 + (30-20)*(522 - adc_value)/(522 - 410) - 2);
  5892  019F  3070               	movlw	low(070h)
  5893  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  5894  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  5895  01A2  00B0               	movwf	(?___awdiv)
  5896  01A3  3000               	movlw	high(070h)
  5897  01A4  00B1               	movwf	((?___awdiv))+1
  5898  01A5  0941               	comf	(convert@adc_value),w
  5899  01A6  00C3               	movwf	(??_convert+0)+0
  5900  01A7  0942               	comf	(convert@adc_value+1),w
  5901  01A8  00C4               	movwf	((??_convert+0)+0+1)
  5902  01A9  0AC3               	incf	(??_convert+0)+0,f
  5903  01AA  1903               	skipnz
  5904  01AB  0AC4               	incf	((??_convert+0)+0+1),f
  5905  01AC  0843               	movf	0+(??_convert+0)+0,w
  5906  01AD  3E0A               	addlw	low(020Ah)
  5907  01AE  00AA               	movwf	(?___wmul)
  5908  01AF  0844               	movf	1+(??_convert+0)+0,w
  5909  01B0  1803               	skipnc
  5910  01B1  3E01               	addlw	1
  5911  01B2  3E02               	addlw	high(020Ah)
  5912  01B3  00AB               	movwf	1+(?___wmul)
  5913  01B4  300A               	movlw	low(0Ah)
  5914  01B5  00AC               	movwf	0+(?___wmul)+02h
  5915  01B6  3000               	movlw	high(0Ah)
  5916  01B7  00AD               	movwf	(0+(?___wmul)+02h)+1
  5917  01B8  120A  158A  24FD   	fcall	___wmul
              120A  118A         
  5918  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  5919  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  5920  01BF  082B               	movf	(1+(?___wmul)),w
  5921  01C0  01B3               	clrf	1+(?___awdiv)+02h
  5922  01C1  07B3               	addwf	1+(?___awdiv)+02h
  5923  01C2  082A               	movf	(0+(?___wmul)),w
  5924  01C3  01B2               	clrf	0+(?___awdiv)+02h
  5925  01C4  07B2               	addwf	0+(?___awdiv)+02h
  5926                           
  5927  01C5  120A  118A  2559   	fcall	___awdiv
              120A  118A         
  5928  01CA  1283               	bcf	status, 5	;RP0=0, select bank0
  5929  01CB  1303               	bcf	status, 6	;RP1=0, select bank0
  5930  01CC  0830               	movf	(0+(?___awdiv)),w
  5931  01CD  3E12               	addlw	low(012h)
  5932  01CE  00C1               	movwf	(?_convert)
  5933  01CF  0831               	movf	(1+(?___awdiv)),w
  5934  01D0  1803               	skipnc
  5935  01D1  3E01               	addlw	1
  5936  01D2  3E00               	addlw	high(012h)
  5937  01D3  00C2               	movwf	1+(?_convert)
  5938  01D4  29E3               	goto	l5991
  5939                           	
  5940  01D5                     l10528:	
  5941  01D5  29E3               	goto	l5991
  5942                           	
  5943  01D6                     l10530:	
  5944  01D6  29E3               	goto	l5991
  5945                           	line	26
  5946                           	
  5947  01D7                     l6003:	
  5948                           	
  5949  01D7                     l10532:	
  5950                           ;ir.c: 26: else return 0;
  5951  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  5952  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  5953  01D9  01C1               	clrf	(?_convert)
  5954  01DA  01C2               	clrf	(?_convert+1)
  5955  01DB  29E3               	goto	l5991
  5956                           	
  5957  01DC                     l10534:	
  5958  01DC  29E3               	goto	l5991
  5959                           	
  5960  01DD                     l6004:	
  5961  01DD  29E3               	goto	l5991
  5962                           	
  5963  01DE                     l6002:	
  5964  01DE  29E3               	goto	l5991
  5965                           	
  5966  01DF                     l6000:	
  5967  01DF  29E3               	goto	l5991
  5968                           	
  5969  01E0                     l5998:	
  5970  01E0  29E3               	goto	l5991
  5971                           	
  5972  01E1                     l5996:	
  5973  01E1  29E3               	goto	l5991
  5974                           	
  5975  01E2                     l5994:	
  5976  01E2  29E3               	goto	l5991
  5977                           	
  5978  01E3                     l5992:	
  5979                           	line	27
  5980                           	
  5981  01E3                     l5991:	
  5982  01E3  0008               	return
  5983                           	opt stack 0
  5984                           GLOBAL	__end_of_convert
  5985  01E4                     	__end_of_convert:
  5986 ;; =============== function _convert ends ============
  5987                           
  5988                           	signat	_convert,4218
  5989                           	global	_ser_putArr
  5990                           psect	text1574,local,class=CODE,delta=2
  5991                           global __ptext1574
  5992  0E8F                     __ptext1574:
  5993                           
  5994 ;; *************** function _ser_putArr *****************
  5995 ;; Defined at:
  5996 ;;		line 73 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  array           2   12[BANK0 ] PTR unsigned char 
  5999 ;;		 -> champions(21), lookingForU2(29), superMarioBros(25), finalCountdown(27), 
  6000 ;;  length          2   14[BANK0 ] int 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  i               2   19[BANK0 ] int 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;		None               void
  6005 ;; Registers used:
  6006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6012 ;;      Params:         0       4       0       0       0
  6013 ;;      Locals:         0       2       0       0       0
  6014 ;;      Temps:          0       3       0       0       0
  6015 ;;      Totals:         0       9       0       0       0
  6016 ;;Total ram usage:        9 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    3
  6019 ;; This function calls:
  6020 ;;		_ser_putch
  6021 ;; This function is called by:
  6022 ;;		_initSongs
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           psect	text1574
  6026                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  6027                           	line	73
  6028                           	global	__size_of_ser_putArr
  6029  0039                     	__size_of_ser_putArr	equ	__end_of_ser_putArr-_ser_putArr
  6030                           	
  6031  0E8F                     _ser_putArr:	
  6032                           	opt	stack 2
  6033                           ; Regs used in _ser_putArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6034                           	line	74
  6035                           	
  6036  0E8F                     l10468:	
  6037                           ;ser.c: 74: for(int i =0; i< length; i++)
  6038  0E8F  1283               	bcf	status, 5	;RP0=0, select bank0
  6039  0E90  1303               	bcf	status, 6	;RP1=0, select bank0
  6040  0E91  01B3               	clrf	(ser_putArr@i)
  6041  0E92  01B4               	clrf	(ser_putArr@i+1)
  6042  0E93  2EB8               	goto	l10474
  6043                           	line	75
  6044                           	
  6045  0E94                     l4571:	
  6046                           	line	76
  6047                           	
  6048  0E94                     l10470:	
  6049                           ;ser.c: 75: {
  6050                           ;ser.c: 76: ser_putch(array[i]);
  6051  0E94  1283               	bcf	status, 5	;RP0=0, select bank0
  6052  0E95  1303               	bcf	status, 6	;RP1=0, select bank0
  6053  0E96  0833               	movf	(ser_putArr@i),w
  6054  0E97  072C               	addwf	(ser_putArr@array),w
  6055  0E98  00B1               	movwf	(??_ser_putArr+1)+0
  6056  0E99  082D               	movf	(ser_putArr@array+1),w
  6057  0E9A  00B0               	movwf	(??_ser_putArr+0)+0
  6058  0E9B  1803               	skipnc
  6059  0E9C  0AB0               	incf	(??_ser_putArr+0)+0,f
  6060  0E9D  1FB3               	btfss	(ser_putArr@i),7
  6061  0E9E  2EA0               	goto	u4330
  6062  0E9F  03B0               	decf	(??_ser_putArr+0)+0,f
  6063  0EA0                     u4330:
  6064  0EA0  1283               	bcf	status, 5	;RP0=0, select bank0
  6065  0EA1  1303               	bcf	status, 6	;RP1=0, select bank0
  6066  0EA2  0830               	movf	(??_ser_putArr+0)+0,w
  6067  0EA3  00B2               	movwf	0+((??_ser_putArr+1)+0)+1
  6068  0EA4  0831               	movf	0+(??_ser_putArr+1)+0,w
  6069  0EA5  0084               	movwf	fsr0
  6070  0EA6  1783               	bsf	status,7
  6071  0EA7  1C32               	btfss	1+(??_ser_putArr+1)+0,0
  6072  0EA8  1383               	bcf	status,7
  6073  0EA9  0800               	movf	indf,w
  6074  0EAA  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6075                           	line	74
  6076                           	
  6077  0EAF                     l10472:	
  6078  0EAF  3001               	movlw	low(01h)
  6079  0EB0  1283               	bcf	status, 5	;RP0=0, select bank0
  6080  0EB1  1303               	bcf	status, 6	;RP1=0, select bank0
  6081  0EB2  07B3               	addwf	(ser_putArr@i),f
  6082  0EB3  1803               	skipnc
  6083  0EB4  0AB4               	incf	(ser_putArr@i+1),f
  6084  0EB5  3000               	movlw	high(01h)
  6085  0EB6  07B4               	addwf	(ser_putArr@i+1),f
  6086  0EB7  2EB8               	goto	l10474
  6087                           	
  6088  0EB8                     l4570:	
  6089                           	
  6090  0EB8                     l10474:	
  6091  0EB8  0834               	movf	(ser_putArr@i+1),w
  6092  0EB9  3A80               	xorlw	80h
  6093  0EBA  00B0               	movwf	(??_ser_putArr+0)+0
  6094  0EBB  082F               	movf	(ser_putArr@length+1),w
  6095  0EBC  3A80               	xorlw	80h
  6096  0EBD  0230               	subwf	(??_ser_putArr+0)+0,w
  6097  0EBE  1D03               	skipz
  6098  0EBF  2EC2               	goto	u4345
  6099  0EC0  082E               	movf	(ser_putArr@length),w
  6100  0EC1  0233               	subwf	(ser_putArr@i),w
  6101  0EC2                     u4345:
  6102                           
  6103  0EC2  1C03               	skipc
  6104  0EC3  2EC5               	goto	u4341
  6105  0EC4  2EC6               	goto	u4340
  6106  0EC5                     u4341:
  6107  0EC5  2E94               	goto	l10470
  6108  0EC6                     u4340:
  6109  0EC6  2EC7               	goto	l4573
  6110                           	
  6111  0EC7                     l4572:	
  6112                           	line	78
  6113                           	
  6114  0EC7                     l4573:	
  6115  0EC7  0008               	return
  6116                           	opt stack 0
  6117                           GLOBAL	__end_of_ser_putArr
  6118  0EC8                     	__end_of_ser_putArr:
  6119 ;; =============== function _ser_putArr ends ============
  6120                           
  6121                           	signat	_ser_putArr,8312
  6122                           	global	_play_iCreate_song
  6123                           psect	text1575,local,class=CODE,delta=2
  6124                           global __ptext1575
  6125  0A8C                     __ptext1575:
  6126                           
  6127 ;; *************** function _play_iCreate_song *****************
  6128 ;; Defined at:
  6129 ;;		line 24 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  song            1    wreg     unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  song            1   12[BANK0 ] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;		None               void
  6136 ;; Registers used:
  6137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6143 ;;      Params:         0       0       0       0       0
  6144 ;;      Locals:         0       1       0       0       0
  6145 ;;      Temps:          0       0       0       0       0
  6146 ;;      Totals:         0       1       0       0       0
  6147 ;;Total ram usage:        1 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    3
  6150 ;; This function calls:
  6151 ;;		_ser_putch
  6152 ;; This function is called by:
  6153 ;;		_checkForFinalDestination
  6154 ;;		_lookForVictim
  6155 ;;		_checkIfHome
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           psect	text1575
  6159                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\songs.c"
  6160                           	line	24
  6161                           	global	__size_of_play_iCreate_song
  6162  0012                     	__size_of_play_iCreate_song	equ	__end_of_play_iCreate_song-_play_iCreate_song
  6163                           	
  6164  0A8C                     _play_iCreate_song:	
  6165                           	opt	stack 3
  6166                           ; Regs used in _play_iCreate_song: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6167                           ;play_iCreate_song@song stored from wreg
  6168  0A8C  1283               	bcf	status, 5	;RP0=0, select bank0
  6169  0A8D  1303               	bcf	status, 6	;RP1=0, select bank0
  6170  0A8E  00AC               	movwf	(play_iCreate_song@song)
  6171                           	line	25
  6172                           	
  6173  0A8F                     l10466:	
  6174                           ;songs.c: 25: ser_putch(141);
  6175  0A8F  308D               	movlw	(08Dh)
  6176  0A90  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6177                           	line	26
  6178                           ;songs.c: 26: ser_putch(song);
  6179  0A95  1283               	bcf	status, 5	;RP0=0, select bank0
  6180  0A96  1303               	bcf	status, 6	;RP1=0, select bank0
  6181  0A97  082C               	movf	(play_iCreate_song@song),w
  6182  0A98  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6183                           	line	27
  6184                           	
  6185  0A9D                     l5298:	
  6186  0A9D  0008               	return
  6187                           	opt stack 0
  6188                           GLOBAL	__end_of_play_iCreate_song
  6189  0A9E                     	__end_of_play_iCreate_song:
  6190 ;; =============== function _play_iCreate_song ends ============
  6191                           
  6192                           	signat	_play_iCreate_song,4216
  6193                           	global	_initIRobot
  6194                           psect	text1576,local,class=CODE,delta=2
  6195                           global __ptext1576
  6196  0B20                     __ptext1576:
  6197                           
  6198 ;; *************** function _initIRobot *****************
  6199 ;; Defined at:
  6200 ;;		line 115 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;		None               void
  6207 ;; Registers used:
  6208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6214 ;;      Params:         0       0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0
  6216 ;;      Temps:          0       3       0       0       0
  6217 ;;      Totals:         0       3       0       0       0
  6218 ;;Total ram usage:        3 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    3
  6221 ;; This function calls:
  6222 ;;		_ser_putch
  6223 ;; This function is called by:
  6224 ;;		_init
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           psect	text1576
  6228                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  6229                           	line	115
  6230                           	global	__size_of_initIRobot
  6231  001C                     	__size_of_initIRobot	equ	__end_of_initIRobot-_initIRobot
  6232                           	
  6233  0B20                     _initIRobot:	
  6234                           	opt	stack 3
  6235                           ; Regs used in _initIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6236                           	line	116
  6237                           	
  6238  0B20                     l10460:	
  6239                           ;main.c: 116: _delay((unsigned long)((100)*(20000000/4000.0)));
  6240                           	opt asmopt_off
  6241  0B20  3003               movlw  3
  6242  0B21  1283               	bcf	status, 5	;RP0=0, select bank0
  6243  0B22  1303               	bcf	status, 6	;RP1=0, select bank0
  6244  0B23  00AE               movwf	((??_initIRobot+0)+0+2),f
  6245  0B24  308A               movlw	138
  6246  0B25  00AD               movwf	((??_initIRobot+0)+0+1),f
  6247  0B26  3056               	movlw	86
  6248  0B27  00AC               movwf	((??_initIRobot+0)+0),f
  6249  0B28                     u4787:
  6250  0B28  0BAC               	decfsz	((??_initIRobot+0)+0),f
  6251  0B29  2B28               	goto	u4787
  6252  0B2A  0BAD               	decfsz	((??_initIRobot+0)+0+1),f
  6253  0B2B  2B28               	goto	u4787
  6254  0B2C  0BAE               	decfsz	((??_initIRobot+0)+0+2),f
  6255  0B2D  2B28               	goto	u4787
  6256  0B2E  2B2F               	nop2
  6257                           opt asmopt_on
  6258                           
  6259                           	line	117
  6260                           	
  6261  0B2F                     l10462:	
  6262                           ;main.c: 117: ser_putch(128);
  6263  0B2F  3080               	movlw	(080h)
  6264  0B30  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6265                           	line	118
  6266                           	
  6267  0B35                     l10464:	
  6268                           ;main.c: 118: ser_putch(132);
  6269  0B35  3084               	movlw	(084h)
  6270  0B36  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6271                           	line	119
  6272                           	
  6273  0B3B                     l3004:	
  6274  0B3B  0008               	return
  6275                           	opt stack 0
  6276                           GLOBAL	__end_of_initIRobot
  6277  0B3C                     	__end_of_initIRobot:
  6278 ;; =============== function _initIRobot ends ============
  6279                           
  6280                           	signat	_initIRobot,88
  6281                           	global	_lcd_write_control
  6282                           psect	text1577,local,class=CODE,delta=2
  6283                           global __ptext1577
  6284  0AC4                     __ptext1577:
  6285                           
  6286 ;; *************** function _lcd_write_control *****************
  6287 ;; Defined at:
  6288 ;;		line 8 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  databyte        1    wreg     unsigned char 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  databyte        1   12[BANK0 ] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;		None               void
  6295 ;; Registers used:
  6296 ;;		wreg
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6302 ;;      Params:         0       0       0       0       0
  6303 ;;      Locals:         0       1       0       0       0
  6304 ;;      Temps:          0       2       0       0       0
  6305 ;;      Totals:         0       3       0       0       0
  6306 ;;Total ram usage:        3 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    2
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_lcd_set_cursor
  6313 ;;		_lcd_init
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           psect	text1577
  6317                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  6318                           	line	8
  6319                           	global	__size_of_lcd_write_control
  6320  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  6321                           	
  6322  0AC4                     _lcd_write_control:	
  6323                           	opt	stack 3
  6324                           ; Regs used in _lcd_write_control: [wreg]
  6325                           ;lcd_write_control@databyte stored from wreg
  6326  0AC4  1283               	bcf	status, 5	;RP0=0, select bank0
  6327  0AC5  1303               	bcf	status, 6	;RP1=0, select bank0
  6328  0AC6  00AC               	movwf	(lcd_write_control@databyte)
  6329                           	line	9
  6330                           	
  6331  0AC7                     l10452:	
  6332                           ;lcd.c: 9: RE2 = 0;
  6333  0AC7  1109               	bcf	(74/8),(74)&7
  6334                           	line	10
  6335                           ;lcd.c: 10: RE1 = 0;
  6336  0AC8  1089               	bcf	(73/8),(73)&7
  6337                           	line	11
  6338                           ;lcd.c: 11: RE0 = 0;
  6339  0AC9  1009               	bcf	(72/8),(72)&7
  6340                           	line	12
  6341                           	
  6342  0ACA                     l10454:	
  6343                           ;lcd.c: 12: PORTD = databyte;
  6344  0ACA  082C               	movf	(lcd_write_control@databyte),w
  6345  0ACB  0088               	movwf	(8)	;volatile
  6346                           	line	13
  6347                           	
  6348  0ACC                     l10456:	
  6349                           ;lcd.c: 13: RE2 = 1;
  6350  0ACC  1509               	bsf	(74/8),(74)&7
  6351                           	line	14
  6352                           	
  6353  0ACD                     l10458:	
  6354                           ;lcd.c: 14: RE2 = 0;
  6355  0ACD  1109               	bcf	(74/8),(74)&7
  6356                           	line	15
  6357                           ;lcd.c: 15: _delay((unsigned long)((2)*(20000000/4000.0)));
  6358                           	opt asmopt_off
  6359  0ACE  300D               movlw	13
  6360  0ACF  00AB               movwf	((??_lcd_write_control+0)+0+1),f
  6361  0AD0  30FB               	movlw	251
  6362  0AD1  00AA               movwf	((??_lcd_write_control+0)+0),f
  6363  0AD2                     u4797:
  6364  0AD2  0BAA               	decfsz	((??_lcd_write_control+0)+0),f
  6365  0AD3  2AD2               	goto	u4797
  6366  0AD4  0BAB               	decfsz	((??_lcd_write_control+0)+0+1),f
  6367  0AD5  2AD2               	goto	u4797
  6368  0AD6  2AD7               	nop2
  6369                           opt asmopt_on
  6370                           
  6371                           	line	16
  6372                           	
  6373  0AD7                     l2177:	
  6374  0AD7  0008               	return
  6375                           	opt stack 0
  6376                           GLOBAL	__end_of_lcd_write_control
  6377  0AD8                     	__end_of_lcd_write_control:
  6378 ;; =============== function _lcd_write_control ends ============
  6379                           
  6380                           	signat	_lcd_write_control,4216
  6381                           	global	_rotateIR
  6382                           psect	text1578,local,class=CODE,delta=2
  6383                           global __ptext1578
  6384  06EF                     __ptext1578:
  6385                           
  6386 ;; *************** function _rotateIR *****************
  6387 ;; Defined at:
  6388 ;;		line 39 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ir.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  steps           1    wreg     unsigned char 
  6391 ;;  direction       1   10[BANK0 ] unsigned char 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;  steps           1   14[BANK0 ] unsigned char 
  6394 ;;  stepNum         1   15[BANK0 ] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;		None               void
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6404 ;;      Params:         0       1       0       0       0
  6405 ;;      Locals:         0       2       0       0       0
  6406 ;;      Temps:          0       3       0       0       0
  6407 ;;      Totals:         0       6       0       0       0
  6408 ;;Total ram usage:        6 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    2
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_rightWallCorrect
  6415 ;;		_findWalls
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           psect	text1578
  6419                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ir.c"
  6420                           	line	39
  6421                           	global	__size_of_rotateIR
  6422  0046                     	__size_of_rotateIR	equ	__end_of_rotateIR-_rotateIR
  6423                           	
  6424  06EF                     _rotateIR:	
  6425                           	opt	stack 3
  6426                           ; Regs used in _rotateIR: [wreg+status,2+status,0]
  6427                           ;rotateIR@steps stored from wreg
  6428  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
  6429  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
  6430  06F1  00AE               	movwf	(rotateIR@steps)
  6431                           	line	40
  6432                           	
  6433  06F2                     l10434:	
  6434                           ;ir.c: 40: PORTC |= 0b00000011;
  6435  06F2  3003               	movlw	(03h)
  6436  06F3  00AB               	movwf	(??_rotateIR+0)+0
  6437  06F4  082B               	movf	(??_rotateIR+0)+0,w
  6438  06F5  0487               	iorwf	(7),f	;volatile
  6439                           	line	41
  6440                           	
  6441  06F6                     l10436:	
  6442                           ;ir.c: 41: SSPBUF = direction;
  6443  06F6  082A               	movf	(rotateIR@direction),w
  6444  06F7  0093               	movwf	(19)	;volatile
  6445                           	line	42
  6446                           	
  6447  06F8                     l10438:	
  6448                           ;ir.c: 42: _delay((unsigned long)((200)*(20000000/4000.0)));
  6449                           	opt asmopt_off
  6450  06F8  3006               movlw  6
  6451  06F9  00AD               movwf	((??_rotateIR+0)+0+2),f
  6452  06FA  3013               movlw	19
  6453  06FB  00AC               movwf	((??_rotateIR+0)+0+1),f
  6454  06FC  30B1               	movlw	177
  6455  06FD  00AB               movwf	((??_rotateIR+0)+0),f
  6456  06FE                     u4807:
  6457  06FE  0BAB               	decfsz	((??_rotateIR+0)+0),f
  6458  06FF  2EFE               	goto	u4807
  6459  0700  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  6460  0701  2EFE               	goto	u4807
  6461  0702  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  6462  0703  2EFE               	goto	u4807
  6463  0704  2F05               	nop2
  6464                           opt asmopt_on
  6465                           
  6466                           	line	44
  6467                           	
  6468  0705                     l10440:	
  6469                           ;ir.c: 44: for (char stepNum = 1; stepNum <= steps; ++stepNum)
  6470  0705  1283               	bcf	status, 5	;RP0=0, select bank0
  6471  0706  1303               	bcf	status, 6	;RP1=0, select bank0
  6472  0707  01AF               	clrf	(rotateIR@stepNum)
  6473  0708  1403               	bsf	status,0
  6474  0709  0DAF               	rlf	(rotateIR@stepNum),f
  6475  070A  2F1F               	goto	l6010
  6476                           	line	45
  6477                           	
  6478  070B                     l6011:	
  6479                           	line	46
  6480                           ;ir.c: 45: {
  6481                           ;ir.c: 46: PORTC |= 0b00000100;
  6482  070B  1507               	bsf	(7)+(2/8),(2)&7	;volatile
  6483                           	line	47
  6484                           	
  6485  070C                     l10442:	
  6486                           ;ir.c: 47: PORTC &= 0b11111011;
  6487  070C  30FB               	movlw	(0FBh)
  6488  070D  00AB               	movwf	(??_rotateIR+0)+0
  6489  070E  082B               	movf	(??_rotateIR+0)+0,w
  6490  070F  0587               	andwf	(7),f	;volatile
  6491                           	line	48
  6492                           	
  6493  0710                     l10444:	
  6494                           ;ir.c: 48: _delay((unsigned long)((20)*(20000000/4000.0)));
  6495                           	opt asmopt_off
  6496  0710  3082               movlw	130
  6497  0711  00AC               movwf	((??_rotateIR+0)+0+1),f
  6498  0712  30DD               	movlw	221
  6499  0713  00AB               movwf	((??_rotateIR+0)+0),f
  6500  0714                     u4817:
  6501  0714  0BAB               	decfsz	((??_rotateIR+0)+0),f
  6502  0715  2F14               	goto	u4817
  6503  0716  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  6504  0717  2F14               	goto	u4817
  6505  0718  2F19               	nop2
  6506                           opt asmopt_on
  6507                           
  6508                           	line	44
  6509                           	
  6510  0719                     l10446:	
  6511  0719  3001               	movlw	(01h)
  6512  071A  1283               	bcf	status, 5	;RP0=0, select bank0
  6513  071B  1303               	bcf	status, 6	;RP1=0, select bank0
  6514  071C  00AB               	movwf	(??_rotateIR+0)+0
  6515  071D  082B               	movf	(??_rotateIR+0)+0,w
  6516  071E  07AF               	addwf	(rotateIR@stepNum),f
  6517                           	
  6518  071F                     l6010:	
  6519  071F  082F               	movf	(rotateIR@stepNum),w
  6520  0720  022E               	subwf	(rotateIR@steps),w
  6521  0721  1803               	skipnc
  6522  0722  2F24               	goto	u4321
  6523  0723  2F25               	goto	u4320
  6524  0724                     u4321:
  6525  0724  2F0B               	goto	l6011
  6526  0725                     u4320:
  6527  0725  2F26               	goto	l10448
  6528                           	
  6529  0726                     l6012:	
  6530                           	line	51
  6531                           	
  6532  0726                     l10448:	
  6533                           ;ir.c: 49: }
  6534                           ;ir.c: 51: SSPBUF = 0b00000000;
  6535  0726  0193               	clrf	(19)	;volatile
  6536                           	line	52
  6537                           	
  6538  0727                     l10450:	
  6539                           ;ir.c: 52: _delay((unsigned long)((200)*(20000000/4000.0)));
  6540                           	opt asmopt_off
  6541  0727  3006               movlw  6
  6542  0728  00AD               movwf	((??_rotateIR+0)+0+2),f
  6543  0729  3013               movlw	19
  6544  072A  00AC               movwf	((??_rotateIR+0)+0+1),f
  6545  072B  30B1               	movlw	177
  6546  072C  00AB               movwf	((??_rotateIR+0)+0),f
  6547  072D                     u4827:
  6548  072D  0BAB               	decfsz	((??_rotateIR+0)+0),f
  6549  072E  2F2D               	goto	u4827
  6550  072F  0BAC               	decfsz	((??_rotateIR+0)+0+1),f
  6551  0730  2F2D               	goto	u4827
  6552  0731  0BAD               	decfsz	((??_rotateIR+0)+0+2),f
  6553  0732  2F2D               	goto	u4827
  6554  0733  2F34               	nop2
  6555                           opt asmopt_on
  6556                           
  6557                           	line	54
  6558                           	
  6559  0734                     l6013:	
  6560  0734  0008               	return
  6561                           	opt stack 0
  6562                           GLOBAL	__end_of_rotateIR
  6563  0735                     	__end_of_rotateIR:
  6564 ;; =============== function _rotateIR ends ============
  6565                           
  6566                           	signat	_rotateIR,8312
  6567                           	global	_waitFor
  6568                           psect	text1579,local,class=CODE,delta=2
  6569                           global __ptext1579
  6570  0C57                     __ptext1579:
  6571                           
  6572 ;; *************** function _waitFor *****************
  6573 ;; Defined at:
  6574 ;;		line 178 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  type            1    wreg     unsigned char 
  6577 ;;  highByte        1   12[BANK0 ] unsigned char 
  6578 ;;  lowByte         1   13[BANK0 ] unsigned char 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  type            1   17[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;		None               void
  6583 ;; Registers used:
  6584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         0       2       0       0       0
  6591 ;;      Locals:         0       1       0       0       0
  6592 ;;      Temps:          0       3       0       0       0
  6593 ;;      Totals:         0       6       0       0       0
  6594 ;;Total ram usage:        6 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    3
  6597 ;; This function calls:
  6598 ;;		_ser_putch
  6599 ;; This function is called by:
  6600 ;;		_turnAround
  6601 ;;		_turnLeft90
  6602 ;;		_turnRight90
  6603 ;;		_goReverse
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           psect	text1579
  6607                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  6608                           	line	178
  6609                           	global	__size_of_waitFor
  6610  0029                     	__size_of_waitFor	equ	__end_of_waitFor-_waitFor
  6611                           	
  6612  0C57                     _waitFor:	
  6613                           	opt	stack 1
  6614                           ; Regs used in _waitFor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6615                           ;waitFor@type stored from wreg
  6616  0C57  1283               	bcf	status, 5	;RP0=0, select bank0
  6617  0C58  1303               	bcf	status, 6	;RP1=0, select bank0
  6618  0C59  00B1               	movwf	(waitFor@type)
  6619                           	line	179
  6620                           	
  6621  0C5A                     l10426:	
  6622                           ;drive.c: 179: _delay((unsigned long)((100)*(20000000/4000.0)));
  6623                           	opt asmopt_off
  6624  0C5A  3003               movlw  3
  6625  0C5B  00B0               movwf	((??_waitFor+0)+0+2),f
  6626  0C5C  308A               movlw	138
  6627  0C5D  00AF               movwf	((??_waitFor+0)+0+1),f
  6628  0C5E  3056               	movlw	86
  6629  0C5F  00AE               movwf	((??_waitFor+0)+0),f
  6630  0C60                     u4837:
  6631  0C60  0BAE               	decfsz	((??_waitFor+0)+0),f
  6632  0C61  2C60               	goto	u4837
  6633  0C62  0BAF               	decfsz	((??_waitFor+0)+0+1),f
  6634  0C63  2C60               	goto	u4837
  6635  0C64  0BB0               	decfsz	((??_waitFor+0)+0+2),f
  6636  0C65  2C60               	goto	u4837
  6637  0C66  2C67               	nop2
  6638                           opt asmopt_on
  6639                           
  6640                           	line	180
  6641                           	
  6642  0C67                     l10428:	
  6643                           ;drive.c: 180: ser_putch(type);
  6644  0C67  1283               	bcf	status, 5	;RP0=0, select bank0
  6645  0C68  1303               	bcf	status, 6	;RP1=0, select bank0
  6646  0C69  0831               	movf	(waitFor@type),w
  6647  0C6A  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6648                           	line	181
  6649                           	
  6650  0C6F                     l10430:	
  6651                           ;drive.c: 181: ser_putch(highByte);
  6652  0C6F  1283               	bcf	status, 5	;RP0=0, select bank0
  6653  0C70  1303               	bcf	status, 6	;RP1=0, select bank0
  6654  0C71  082C               	movf	(waitFor@highByte),w
  6655  0C72  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6656                           	line	182
  6657                           	
  6658  0C77                     l10432:	
  6659                           ;drive.c: 182: ser_putch(lowByte);
  6660  0C77  1283               	bcf	status, 5	;RP0=0, select bank0
  6661  0C78  1303               	bcf	status, 6	;RP1=0, select bank0
  6662  0C79  082D               	movf	(waitFor@lowByte),w
  6663  0C7A  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6664                           	line	183
  6665                           	
  6666  0C7F                     l1470:	
  6667  0C7F  0008               	return
  6668                           	opt stack 0
  6669                           GLOBAL	__end_of_waitFor
  6670  0C80                     	__end_of_waitFor:
  6671 ;; =============== function _waitFor ends ============
  6672                           
  6673                           	signat	_waitFor,12408
  6674                           	global	_lcd_write_data
  6675                           psect	text1580,local,class=CODE,delta=2
  6676                           global __ptext1580
  6677  0A9E                     __ptext1580:
  6678                           
  6679 ;; *************** function _lcd_write_data *****************
  6680 ;; Defined at:
  6681 ;;		line 20 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  databyte        1    wreg     unsigned char 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  databyte        1   12[BANK0 ] unsigned char 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;		None               void
  6688 ;; Registers used:
  6689 ;;		wreg
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6695 ;;      Params:         0       0       0       0       0
  6696 ;;      Locals:         0       1       0       0       0
  6697 ;;      Temps:          0       2       0       0       0
  6698 ;;      Totals:         0       3       0       0       0
  6699 ;;Total ram usage:        3 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    2
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_goBackward
  6706 ;;		_goForward
  6707 ;;		_goLeft
  6708 ;;		_goRight
  6709 ;;		_lcd_write_string
  6710 ;;		_lcd_write_1_digit_bcd
  6711 ;;		_checkForFinalDestination
  6712 ;;		_lookForVictim
  6713 ;;		_findWalls
  6714 ;;		_updateLocation
  6715 ;;		_goReverse
  6716 ;;		_lcd_write_3_digit_bcd
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           psect	text1580
  6720                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\lcd.c"
  6721                           	line	20
  6722                           	global	__size_of_lcd_write_data
  6723  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  6724                           	
  6725  0A9E                     _lcd_write_data:	
  6726                           	opt	stack 3
  6727                           ; Regs used in _lcd_write_data: [wreg]
  6728                           ;lcd_write_data@databyte stored from wreg
  6729  0A9E  1283               	bcf	status, 5	;RP0=0, select bank0
  6730  0A9F  1303               	bcf	status, 6	;RP1=0, select bank0
  6731  0AA0  00AC               	movwf	(lcd_write_data@databyte)
  6732                           	line	21
  6733                           	
  6734  0AA1                     l10418:	
  6735                           ;lcd.c: 21: RE2 = 0;
  6736  0AA1  1109               	bcf	(74/8),(74)&7
  6737                           	line	22
  6738                           ;lcd.c: 22: RE1 = 0;
  6739  0AA2  1089               	bcf	(73/8),(73)&7
  6740                           	line	23
  6741                           ;lcd.c: 23: RE0 = 1;
  6742  0AA3  1409               	bsf	(72/8),(72)&7
  6743                           	line	24
  6744                           	
  6745  0AA4                     l10420:	
  6746                           ;lcd.c: 24: PORTD = databyte;
  6747  0AA4  082C               	movf	(lcd_write_data@databyte),w
  6748  0AA5  0088               	movwf	(8)	;volatile
  6749                           	line	25
  6750                           	
  6751  0AA6                     l10422:	
  6752                           ;lcd.c: 25: RE2 = 1;
  6753  0AA6  1509               	bsf	(74/8),(74)&7
  6754                           	line	26
  6755                           	
  6756  0AA7                     l10424:	
  6757                           ;lcd.c: 26: RE2 = 0;
  6758  0AA7  1109               	bcf	(74/8),(74)&7
  6759                           	line	27
  6760                           ;lcd.c: 27: _delay((unsigned long)((1)*(20000000/4000.0)));
  6761                           	opt asmopt_off
  6762  0AA8  3007               movlw	7
  6763  0AA9  00AB               movwf	((??_lcd_write_data+0)+0+1),f
  6764  0AAA  307D               	movlw	125
  6765  0AAB  00AA               movwf	((??_lcd_write_data+0)+0),f
  6766  0AAC                     u4847:
  6767  0AAC  0BAA               	decfsz	((??_lcd_write_data+0)+0),f
  6768  0AAD  2AAC               	goto	u4847
  6769  0AAE  0BAB               	decfsz	((??_lcd_write_data+0)+0+1),f
  6770  0AAF  2AAC               	goto	u4847
  6771                           opt asmopt_on
  6772                           
  6773                           	line	28
  6774                           	
  6775  0AB0                     l2180:	
  6776  0AB0  0008               	return
  6777                           	opt stack 0
  6778                           GLOBAL	__end_of_lcd_write_data
  6779  0AB1                     	__end_of_lcd_write_data:
  6780 ;; =============== function _lcd_write_data ends ============
  6781                           
  6782                           	signat	_lcd_write_data,4216
  6783                           	global	_ser_getch
  6784                           psect	text1581,local,class=CODE,delta=2
  6785                           global __ptext1581
  6786  0B99                     __ptext1581:
  6787                           
  6788 ;; *************** function _ser_getch *****************
  6789 ;; Defined at:
  6790 ;;		line 58 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  c               1   11[BANK0 ] unsigned char 
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      unsigned char 
  6797 ;; Registers used:
  6798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6804 ;;      Params:         0       0       0       0       0
  6805 ;;      Locals:         0       1       0       0       0
  6806 ;;      Temps:          0       1       0       0       0
  6807 ;;      Totals:         0       2       0       0       0
  6808 ;;Total ram usage:        2 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    3
  6811 ;; This function calls:
  6812 ;;		_ser_isrx
  6813 ;; This function is called by:
  6814 ;;		_driveForDistance
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           psect	text1581
  6818                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  6819                           	line	58
  6820                           	global	__size_of_ser_getch
  6821  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6822                           	
  6823  0B99                     _ser_getch:	
  6824                           	opt	stack 1
  6825                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6826                           	line	61
  6827                           	
  6828  0B99                     l10402:	
  6829                           ;ser.c: 59: unsigned char c;
  6830                           ;ser.c: 61: while (ser_isrx()==0)
  6831  0B99  2B9B               	goto	l10404
  6832                           	
  6833  0B9A                     l4565:	
  6834                           	line	62
  6835                           ;ser.c: 62: continue;
  6836  0B9A  2B9B               	goto	l10404
  6837                           	
  6838  0B9B                     l4564:	
  6839                           	line	61
  6840                           	
  6841  0B9B                     l10404:	
  6842  0B9B  120A  158A  22EE   	fcall	_ser_isrx
              120A  158A         
  6843  0BA0  1C03               	btfss	status,0
  6844  0BA1  2BA3               	goto	u4311
  6845  0BA2  2BA4               	goto	u4310
  6846  0BA3                     u4311:
  6847  0BA3  2B9B               	goto	l10404
  6848  0BA4                     u4310:
  6849                           	
  6850  0BA4                     l4566:	
  6851                           	line	64
  6852                           ;ser.c: 64: GIE=0;
  6853  0BA4  138B               	bcf	(95/8),(95)&7
  6854                           	line	65
  6855                           	
  6856  0BA5                     l10406:	
  6857                           ;ser.c: 65: c=rxfifo[rxoptr];
  6858  0BA5  1283               	bcf	status, 5	;RP0=0, select bank0
  6859  0BA6  1303               	bcf	status, 6	;RP1=0, select bank0
  6860  0BA7  0860               	movf	(_rxoptr),w
  6861  0BA8  3E46               	addlw	_rxfifo&0ffh
  6862  0BA9  0084               	movwf	fsr0
  6863  0BAA  1383               	bcf	status, 7	;select IRP bank0
  6864  0BAB  0800               	movf	indf,w
  6865  0BAC  00AA               	movwf	(??_ser_getch+0)+0
  6866  0BAD  082A               	movf	(??_ser_getch+0)+0,w
  6867  0BAE  00AB               	movwf	(ser_getch@c)
  6868                           	line	66
  6869                           	
  6870  0BAF                     l10408:	
  6871                           ;ser.c: 66: ++rxoptr;
  6872  0BAF  3001               	movlw	(01h)
  6873  0BB0  00AA               	movwf	(??_ser_getch+0)+0
  6874  0BB1  082A               	movf	(??_ser_getch+0)+0,w
  6875  0BB2  07E0               	addwf	(_rxoptr),f	;volatile
  6876                           	line	67
  6877                           	
  6878  0BB3                     l10410:	
  6879                           ;ser.c: 67: rxoptr &= (16-1);
  6880  0BB3  300F               	movlw	(0Fh)
  6881  0BB4  00AA               	movwf	(??_ser_getch+0)+0
  6882  0BB5  082A               	movf	(??_ser_getch+0)+0,w
  6883  0BB6  05E0               	andwf	(_rxoptr),f	;volatile
  6884                           	line	68
  6885                           	
  6886  0BB7                     l10412:	
  6887                           ;ser.c: 68: GIE=1;
  6888  0BB7  178B               	bsf	(95/8),(95)&7
  6889                           	line	69
  6890                           	
  6891  0BB8                     l10414:	
  6892                           ;ser.c: 69: return c;
  6893  0BB8  082B               	movf	(ser_getch@c),w
  6894  0BB9  2BBA               	goto	l4567
  6895                           	
  6896  0BBA                     l10416:	
  6897                           	line	70
  6898                           	
  6899  0BBA                     l4567:	
  6900  0BBA  0008               	return
  6901                           	opt stack 0
  6902                           GLOBAL	__end_of_ser_getch
  6903  0BBB                     	__end_of_ser_getch:
  6904 ;; =============== function _ser_getch ends ============
  6905                           
  6906                           	signat	_ser_getch,89
  6907                           	global	_drive
  6908                           psect	text1582,local,class=CODE,delta=2
  6909                           global __ptext1582
  6910  0DE9                     __ptext1582:
  6911                           
  6912 ;; *************** function _drive *****************
  6913 ;; Defined at:
  6914 ;;		line 19 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  highByteSpee    1    wreg     unsigned char 
  6917 ;;  lowByteSpeed    1   12[BANK0 ] unsigned char 
  6918 ;;  highByteRadi    1   13[BANK0 ] unsigned char 
  6919 ;;  lowByteRadiu    1   14[BANK0 ] unsigned char 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  highByteSpee    1   18[BANK0 ] unsigned char 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;		None               void
  6924 ;; Registers used:
  6925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6931 ;;      Params:         0       3       0       0       0
  6932 ;;      Locals:         0       1       0       0       0
  6933 ;;      Temps:          0       3       0       0       0
  6934 ;;      Totals:         0       7       0       0       0
  6935 ;;Total ram usage:        7 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    3
  6938 ;; This function calls:
  6939 ;;		_ser_putch
  6940 ;; This function is called by:
  6941 ;;		_driveForDistance
  6942 ;;		_turnAround
  6943 ;;		_turnLeft90
  6944 ;;		_turnRight90
  6945 ;;		_rightWallCorrect
  6946 ;;		_frontWallCorrect
  6947 ;;		_checkIfHome
  6948 ;;		_main
  6949 ;;		_goReverse
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           psect	text1582
  6953                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  6954                           	line	19
  6955                           	global	__size_of_drive
  6956  0037                     	__size_of_drive	equ	__end_of_drive-_drive
  6957                           	
  6958  0DE9                     _drive:	
  6959                           	opt	stack 3
  6960                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6961                           ;drive@highByteSpeed stored from wreg
  6962  0DE9  1283               	bcf	status, 5	;RP0=0, select bank0
  6963  0DEA  1303               	bcf	status, 6	;RP1=0, select bank0
  6964  0DEB  00B2               	movwf	(drive@highByteSpeed)
  6965                           	line	20
  6966                           	
  6967  0DEC                     l10390:	
  6968                           ;drive.c: 20: _delay((unsigned long)((100)*(20000000/4000.0)));
  6969                           	opt asmopt_off
  6970  0DEC  3003               movlw  3
  6971  0DED  00B1               movwf	((??_drive+0)+0+2),f
  6972  0DEE  308A               movlw	138
  6973  0DEF  00B0               movwf	((??_drive+0)+0+1),f
  6974  0DF0  3056               	movlw	86
  6975  0DF1  00AF               movwf	((??_drive+0)+0),f
  6976  0DF2                     u4857:
  6977  0DF2  0BAF               	decfsz	((??_drive+0)+0),f
  6978  0DF3  2DF2               	goto	u4857
  6979  0DF4  0BB0               	decfsz	((??_drive+0)+0+1),f
  6980  0DF5  2DF2               	goto	u4857
  6981  0DF6  0BB1               	decfsz	((??_drive+0)+0+2),f
  6982  0DF7  2DF2               	goto	u4857
  6983  0DF8  2DF9               	nop2
  6984                           opt asmopt_on
  6985                           
  6986                           	line	21
  6987                           	
  6988  0DF9                     l10392:	
  6989                           ;drive.c: 21: ser_putch(137);
  6990  0DF9  3089               	movlw	(089h)
  6991  0DFA  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  6992                           	line	22
  6993                           	
  6994  0DFF                     l10394:	
  6995                           ;drive.c: 22: ser_putch(highByteSpeed);
  6996  0DFF  1283               	bcf	status, 5	;RP0=0, select bank0
  6997  0E00  1303               	bcf	status, 6	;RP1=0, select bank0
  6998  0E01  0832               	movf	(drive@highByteSpeed),w
  6999  0E02  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  7000                           	line	23
  7001                           	
  7002  0E07                     l10396:	
  7003                           ;drive.c: 23: ser_putch(lowByteSpeed);
  7004  0E07  1283               	bcf	status, 5	;RP0=0, select bank0
  7005  0E08  1303               	bcf	status, 6	;RP1=0, select bank0
  7006  0E09  082C               	movf	(drive@lowByteSpeed),w
  7007  0E0A  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  7008                           	line	24
  7009                           	
  7010  0E0F                     l10398:	
  7011                           ;drive.c: 24: ser_putch(highByteRadius);
  7012  0E0F  1283               	bcf	status, 5	;RP0=0, select bank0
  7013  0E10  1303               	bcf	status, 6	;RP1=0, select bank0
  7014  0E11  082D               	movf	(drive@highByteRadius),w
  7015  0E12  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  7016                           	line	25
  7017                           	
  7018  0E17                     l10400:	
  7019                           ;drive.c: 25: ser_putch(lowByteRadius);
  7020  0E17  1283               	bcf	status, 5	;RP0=0, select bank0
  7021  0E18  1303               	bcf	status, 6	;RP1=0, select bank0
  7022  0E19  082E               	movf	(drive@lowByteRadius),w
  7023  0E1A  120A  158A  2378   	fcall	_ser_putch
              120A  158A         
  7024                           	line	26
  7025                           	
  7026  0E1F                     l1423:	
  7027  0E1F  0008               	return
  7028                           	opt stack 0
  7029                           GLOBAL	__end_of_drive
  7030  0E20                     	__end_of_drive:
  7031 ;; =============== function _drive ends ============
  7032                           
  7033                           	signat	_drive,16504
  7034                           	global	_init_adc
  7035                           psect	text1583,local,class=CODE,delta=2
  7036                           global __ptext1583
  7037  0AD8                     __ptext1583:
  7038                           
  7039 ;; *************** function _init_adc *****************
  7040 ;; Defined at:
  7041 ;;		line 48 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;		None               void
  7048 ;; Registers used:
  7049 ;;		wreg, status,2
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0
  7057 ;;      Temps:          0       1       0       0       0
  7058 ;;      Totals:         0       1       0       0       0
  7059 ;;Total ram usage:        1 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    2
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_init
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           psect	text1583
  7069                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7070                           	line	48
  7071                           	global	__size_of_init_adc
  7072  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  7073                           	
  7074  0AD8                     _init_adc:	
  7075                           	opt	stack 4
  7076                           ; Regs used in _init_adc: [wreg+status,2]
  7077                           	line	50
  7078                           	
  7079  0AD8                     l10380:	
  7080                           ;adc.c: 50: PORTA = 0;
  7081  0AD8  1283               	bcf	status, 5	;RP0=0, select bank0
  7082  0AD9  1303               	bcf	status, 6	;RP1=0, select bank0
  7083  0ADA  0185               	clrf	(5)	;volatile
  7084                           	line	51
  7085                           	
  7086  0ADB                     l10382:	
  7087                           ;adc.c: 51: TRISA = 0b00111111;
  7088  0ADB  303F               	movlw	(03Fh)
  7089  0ADC  1683               	bsf	status, 5	;RP0=1, select bank1
  7090  0ADD  1303               	bcf	status, 6	;RP1=0, select bank1
  7091  0ADE  0085               	movwf	(133)^080h	;volatile
  7092                           	line	54
  7093                           	
  7094  0ADF                     l10384:	
  7095                           ;adc.c: 54: ADCON0 = 0b10100001;
  7096  0ADF  30A1               	movlw	(0A1h)
  7097  0AE0  1283               	bcf	status, 5	;RP0=0, select bank0
  7098  0AE1  1303               	bcf	status, 6	;RP1=0, select bank0
  7099  0AE2  009F               	movwf	(31)	;volatile
  7100                           	line	55
  7101                           	
  7102  0AE3                     l10386:	
  7103                           ;adc.c: 55: ADCON1 = 0b00000010;
  7104  0AE3  3002               	movlw	(02h)
  7105  0AE4  1683               	bsf	status, 5	;RP0=1, select bank1
  7106  0AE5  1303               	bcf	status, 6	;RP1=0, select bank1
  7107  0AE6  009F               	movwf	(159)^080h	;volatile
  7108                           	line	57
  7109                           	
  7110  0AE7                     l10388:	
  7111                           ;adc.c: 57: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7112                           	opt asmopt_off
  7113  0AE7  3053               movlw	83
  7114  0AE8  1283               	bcf	status, 5	;RP0=0, select bank0
  7115  0AE9  1303               	bcf	status, 6	;RP1=0, select bank0
  7116  0AEA  00AA               movwf	(??_init_adc+0)+0,f
  7117  0AEB                     u4867:
  7118  0AEB  0BAA               decfsz	(??_init_adc+0)+0,f
  7119  0AEC  2AEB               	goto	u4867
  7120                           opt asmopt_on
  7121                           
  7122                           	line	58
  7123                           	
  7124  0AED                     l700:	
  7125  0AED  0008               	return
  7126                           	opt stack 0
  7127                           GLOBAL	__end_of_init_adc
  7128  0AEE                     	__end_of_init_adc:
  7129 ;; =============== function _init_adc ends ============
  7130                           
  7131                           	signat	_init_adc,88
  7132                           	global	_adc_read
  7133                           psect	text1584,local,class=CODE,delta=2
  7134                           global __ptext1584
  7135  0F81                     __ptext1584:
  7136                           
  7137 ;; *************** function _adc_read *****************
  7138 ;; Defined at:
  7139 ;;		line 62 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;		None
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  adc_value       2   31[BANK0 ] volatile int 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2   25[BANK0 ] int 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7153 ;;      Params:         0       2       0       0       0
  7154 ;;      Locals:         0       2       0       0       0
  7155 ;;      Temps:          0       4       0       0       0
  7156 ;;      Totals:         0       8       0       0       0
  7157 ;;Total ram usage:        8 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    3
  7160 ;; This function calls:
  7161 ;;		___awdiv
  7162 ;; This function is called by:
  7163 ;;		_adc_read_channel
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           psect	text1584
  7167                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\adc.c"
  7168                           	line	62
  7169                           	global	__size_of_adc_read
  7170  003F                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7171                           	
  7172  0F81                     _adc_read:	
  7173                           	opt	stack 0
  7174                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7175                           	line	65
  7176                           	
  7177  0F81                     l10370:	
  7178                           ;adc.c: 63: volatile int adc_value;
  7179                           ;adc.c: 65: ADRESH = 0;
  7180  0F81  1283               	bcf	status, 5	;RP0=0, select bank0
  7181  0F82  1303               	bcf	status, 6	;RP1=0, select bank0
  7182  0F83  019E               	clrf	(30)	;volatile
  7183                           	line	66
  7184                           ;adc.c: 66: ADRESL = 0;
  7185  0F84  1683               	bsf	status, 5	;RP0=1, select bank1
  7186  0F85  1303               	bcf	status, 6	;RP1=0, select bank1
  7187  0F86  019E               	clrf	(158)^080h	;volatile
  7188                           	line	68
  7189                           	
  7190  0F87                     l10372:	
  7191                           ;adc.c: 68: GO = 1;
  7192  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  7193  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  7194  0F89  151F               	bsf	(250/8),(250)&7
  7195                           	line	69
  7196                           ;adc.c: 69: while(GO) continue;
  7197  0F8A  2F8B               	goto	l703
  7198                           	
  7199  0F8B                     l704:	
  7200                           	
  7201  0F8B                     l703:	
  7202  0F8B  191F               	btfsc	(250/8),(250)&7
  7203  0F8C  2F8E               	goto	u4291
  7204  0F8D  2F8F               	goto	u4290
  7205  0F8E                     u4291:
  7206  0F8E  2F8B               	goto	l703
  7207  0F8F                     u4290:
  7208  0F8F  2F90               	goto	l10374
  7209                           	
  7210  0F90                     l705:	
  7211                           	line	75
  7212                           	
  7213  0F90                     l10374:	
  7214                           ;adc.c: 75: adc_value = (ADRESH * 4) + (ADRESL / 64);
  7215  0F90  3040               	movlw	low(040h)
  7216  0F91  00B0               	movwf	(?___awdiv)
  7217  0F92  3000               	movlw	high(040h)
  7218  0F93  00B1               	movwf	((?___awdiv))+1
  7219  0F94  1683               	bsf	status, 5	;RP0=1, select bank1
  7220  0F95  1303               	bcf	status, 6	;RP1=0, select bank1
  7221  0F96  081E               	movf	(158)^080h,w	;volatile
  7222  0F97  1283               	bcf	status, 5	;RP0=0, select bank0
  7223  0F98  1303               	bcf	status, 6	;RP1=0, select bank0
  7224  0F99  00BB               	movwf	(??_adc_read+0)+0
  7225  0F9A  01BC               	clrf	(??_adc_read+0)+0+1
  7226  0F9B  083B               	movf	0+(??_adc_read+0)+0,w
  7227  0F9C  00B2               	movwf	0+(?___awdiv)+02h
  7228  0F9D  083C               	movf	1+(??_adc_read+0)+0,w
  7229  0F9E  00B3               	movwf	1+(?___awdiv)+02h
  7230  0F9F  120A  118A  2559   	fcall	___awdiv
              120A  158A         
  7231  0FA4  1283               	bcf	status, 5	;RP0=0, select bank0
  7232  0FA5  1303               	bcf	status, 6	;RP1=0, select bank0
  7233  0FA6  081E               	movf	(30),w	;volatile
  7234  0FA7  00BD               	movwf	(??_adc_read+2)+0
  7235  0FA8  01BE               	clrf	(??_adc_read+2)+0+1
  7236  0FA9  3002               	movlw	02h
  7237  0FAA  00FF               	movwf	btemp+1
  7238  0FAB                     u4305:
  7239  0FAB  1003               	clrc
  7240  0FAC  0DBD               	rlf	(??_adc_read+2)+0,f
  7241  0FAD  0DBE               	rlf	(??_adc_read+2)+1,f
  7242  0FAE  0BFF               	decfsz	btemp+1,f
  7243  0FAF  2FAB               	goto	u4305
  7244  0FB0  0830               	movf	(0+(?___awdiv)),w
  7245  0FB1  073D               	addwf	0+(??_adc_read+2)+0,w
  7246  0FB2  00BF               	movwf	(adc_read@adc_value)	;volatile
  7247  0FB3  0831               	movf	(1+(?___awdiv)),w
  7248  0FB4  1803               	skipnc
  7249  0FB5  0A31               	incf	(1+(?___awdiv)),w
  7250  0FB6  073E               	addwf	1+(??_adc_read+2)+0,w
  7251  0FB7  00C0               	movwf	1+(adc_read@adc_value)	;volatile
  7252                           	line	77
  7253                           	
  7254  0FB8                     l10376:	
  7255                           ;adc.c: 77: return (adc_value);
  7256  0FB8  0840               	movf	(adc_read@adc_value+1),w	;volatile
  7257  0FB9  01BA               	clrf	(?_adc_read+1)
  7258  0FBA  07BA               	addwf	(?_adc_read+1)
  7259  0FBB  083F               	movf	(adc_read@adc_value),w	;volatile
  7260  0FBC  01B9               	clrf	(?_adc_read)
  7261  0FBD  07B9               	addwf	(?_adc_read)
  7262                           
  7263  0FBE  2FBF               	goto	l706
  7264                           	
  7265  0FBF                     l10378:	
  7266                           	line	78
  7267                           	
  7268  0FBF                     l706:	
  7269  0FBF  0008               	return
  7270                           	opt stack 0
  7271                           GLOBAL	__end_of_adc_read
  7272  0FC0                     	__end_of_adc_read:
  7273 ;; =============== function _adc_read ends ============
  7274                           
  7275                           	signat	_adc_read,90
  7276                           	global	___awdiv
  7277                           psect	text1585,local,class=CODE,delta=2
  7278                           global __ptext1585
  7279  0559                     __ptext1585:
  7280                           
  7281 ;; *************** function ___awdiv *****************
  7282 ;; Defined at:
  7283 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  divisor         2   16[BANK0 ] int 
  7286 ;;  dividend        2   18[BANK0 ] int 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;  quotient        2   23[BANK0 ] int 
  7289 ;;  sign            1   22[BANK0 ] unsigned char 
  7290 ;;  counter         1   21[BANK0 ] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2   16[BANK0 ] int 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7300 ;;      Params:         0       4       0       0       0
  7301 ;;      Locals:         0       4       0       0       0
  7302 ;;      Temps:          0       1       0       0       0
  7303 ;;      Totals:         0       9       0       0       0
  7304 ;;Total ram usage:        9 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    2
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_adc_read
  7311 ;;		_convert
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           psect	text1585
  7315                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  7316                           	line	5
  7317                           	global	__size_of___awdiv
  7318  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  7319                           	
  7320  0559                     ___awdiv:	
  7321                           	opt	stack 1
  7322                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7323                           	line	9
  7324                           	
  7325  0559                     l10330:	
  7326  0559  1283               	bcf	status, 5	;RP0=0, select bank0
  7327  055A  1303               	bcf	status, 6	;RP1=0, select bank0
  7328  055B  01B6               	clrf	(___awdiv@sign)
  7329                           	line	10
  7330  055C  1FB1               	btfss	(___awdiv@divisor+1),7
  7331  055D  2D5F               	goto	u4191
  7332  055E  2D60               	goto	u4190
  7333  055F                     u4191:
  7334  055F  2D69               	goto	l10334
  7335  0560                     u4190:
  7336                           	line	11
  7337                           	
  7338  0560                     l10332:	
  7339  0560  09B0               	comf	(___awdiv@divisor),f
  7340  0561  09B1               	comf	(___awdiv@divisor+1),f
  7341  0562  0AB0               	incf	(___awdiv@divisor),f
  7342  0563  1903               	skipnz
  7343  0564  0AB1               	incf	(___awdiv@divisor+1),f
  7344                           	line	12
  7345  0565  01B6               	clrf	(___awdiv@sign)
  7346  0566  1403               	bsf	status,0
  7347  0567  0DB6               	rlf	(___awdiv@sign),f
  7348  0568  2D69               	goto	l10334
  7349                           	line	13
  7350                           	
  7351  0569                     l6836:	
  7352                           	line	14
  7353                           	
  7354  0569                     l10334:	
  7355  0569  1FB3               	btfss	(___awdiv@dividend+1),7
  7356  056A  2D6C               	goto	u4201
  7357  056B  2D6D               	goto	u4200
  7358  056C                     u4201:
  7359  056C  2D77               	goto	l10340
  7360  056D                     u4200:
  7361                           	line	15
  7362                           	
  7363  056D                     l10336:	
  7364  056D  09B2               	comf	(___awdiv@dividend),f
  7365  056E  09B3               	comf	(___awdiv@dividend+1),f
  7366  056F  0AB2               	incf	(___awdiv@dividend),f
  7367  0570  1903               	skipnz
  7368  0571  0AB3               	incf	(___awdiv@dividend+1),f
  7369                           	line	16
  7370                           	
  7371  0572                     l10338:	
  7372  0572  3001               	movlw	(01h)
  7373  0573  00B4               	movwf	(??___awdiv+0)+0
  7374  0574  0834               	movf	(??___awdiv+0)+0,w
  7375  0575  06B6               	xorwf	(___awdiv@sign),f
  7376  0576  2D77               	goto	l10340
  7377                           	line	17
  7378                           	
  7379  0577                     l6837:	
  7380                           	line	18
  7381                           	
  7382  0577                     l10340:	
  7383  0577  01B7               	clrf	(___awdiv@quotient)
  7384  0578  01B8               	clrf	(___awdiv@quotient+1)
  7385                           	line	19
  7386                           	
  7387  0579                     l10342:	
  7388  0579  0831               	movf	(___awdiv@divisor+1),w
  7389  057A  0430               	iorwf	(___awdiv@divisor),w
  7390  057B  1903               	skipnz
  7391  057C  2D7E               	goto	u4211
  7392  057D  2D7F               	goto	u4210
  7393  057E                     u4211:
  7394  057E  2DBD               	goto	l10362
  7395  057F                     u4210:
  7396                           	line	20
  7397                           	
  7398  057F                     l10344:	
  7399  057F  01B5               	clrf	(___awdiv@counter)
  7400  0580  1403               	bsf	status,0
  7401  0581  0DB5               	rlf	(___awdiv@counter),f
  7402                           	line	21
  7403  0582  2D8F               	goto	l10350
  7404                           	
  7405  0583                     l6840:	
  7406                           	line	22
  7407                           	
  7408  0583                     l10346:	
  7409  0583  3001               	movlw	01h
  7410                           	
  7411  0584                     u4225:
  7412  0584  1003               	clrc
  7413  0585  0DB0               	rlf	(___awdiv@divisor),f
  7414  0586  0DB1               	rlf	(___awdiv@divisor+1),f
  7415  0587  3EFF               	addlw	-1
  7416  0588  1D03               	skipz
  7417  0589  2D84               	goto	u4225
  7418                           	line	23
  7419                           	
  7420  058A                     l10348:	
  7421  058A  3001               	movlw	(01h)
  7422  058B  00B4               	movwf	(??___awdiv+0)+0
  7423  058C  0834               	movf	(??___awdiv+0)+0,w
  7424  058D  07B5               	addwf	(___awdiv@counter),f
  7425  058E  2D8F               	goto	l10350
  7426                           	line	24
  7427                           	
  7428  058F                     l6839:	
  7429                           	line	21
  7430                           	
  7431  058F                     l10350:	
  7432  058F  1FB1               	btfss	(___awdiv@divisor+1),(15)&7
  7433  0590  2D92               	goto	u4231
  7434  0591  2D93               	goto	u4230
  7435  0592                     u4231:
  7436  0592  2D83               	goto	l10346
  7437  0593                     u4230:
  7438  0593  2D95               	goto	l10352
  7439                           	
  7440  0594                     l6841:	
  7441  0594  2D95               	goto	l10352
  7442                           	line	25
  7443                           	
  7444  0595                     l6842:	
  7445                           	line	26
  7446                           	
  7447  0595                     l10352:	
  7448  0595  3001               	movlw	01h
  7449                           	
  7450  0596                     u4245:
  7451  0596  1003               	clrc
  7452  0597  0DB7               	rlf	(___awdiv@quotient),f
  7453  0598  0DB8               	rlf	(___awdiv@quotient+1),f
  7454  0599  3EFF               	addlw	-1
  7455  059A  1D03               	skipz
  7456  059B  2D96               	goto	u4245
  7457                           	line	27
  7458  059C  0831               	movf	(___awdiv@divisor+1),w
  7459  059D  0233               	subwf	(___awdiv@dividend+1),w
  7460  059E  1D03               	skipz
  7461  059F  2DA2               	goto	u4255
  7462  05A0  0830               	movf	(___awdiv@divisor),w
  7463  05A1  0232               	subwf	(___awdiv@dividend),w
  7464  05A2                     u4255:
  7465  05A2  1C03               	skipc
  7466  05A3  2DA5               	goto	u4251
  7467  05A4  2DA6               	goto	u4250
  7468  05A5                     u4251:
  7469  05A5  2DAE               	goto	l10358
  7470  05A6                     u4250:
  7471                           	line	28
  7472                           	
  7473  05A6                     l10354:	
  7474  05A6  0830               	movf	(___awdiv@divisor),w
  7475  05A7  02B2               	subwf	(___awdiv@dividend),f
  7476  05A8  0831               	movf	(___awdiv@divisor+1),w
  7477  05A9  1C03               	skipc
  7478  05AA  03B3               	decf	(___awdiv@dividend+1),f
  7479  05AB  02B3               	subwf	(___awdiv@dividend+1),f
  7480                           	line	29
  7481                           	
  7482  05AC                     l10356:	
  7483  05AC  1437               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  7484  05AD  2DAE               	goto	l10358
  7485                           	line	30
  7486                           	
  7487  05AE                     l6843:	
  7488                           	line	31
  7489                           	
  7490  05AE                     l10358:	
  7491  05AE  3001               	movlw	01h
  7492                           	
  7493  05AF                     u4265:
  7494  05AF  1003               	clrc
  7495  05B0  0CB1               	rrf	(___awdiv@divisor+1),f
  7496  05B1  0CB0               	rrf	(___awdiv@divisor),f
  7497  05B2  3EFF               	addlw	-1
  7498  05B3  1D03               	skipz
  7499  05B4  2DAF               	goto	u4265
  7500                           	line	32
  7501                           	
  7502  05B5                     l10360:	
  7503  05B5  3001               	movlw	low(01h)
  7504  05B6  02B5               	subwf	(___awdiv@counter),f
  7505  05B7  1D03               	btfss	status,2
  7506  05B8  2DBA               	goto	u4271
  7507  05B9  2DBB               	goto	u4270
  7508  05BA                     u4271:
  7509  05BA  2D95               	goto	l10352
  7510  05BB                     u4270:
  7511  05BB  2DBD               	goto	l10362
  7512                           	
  7513  05BC                     l6844:	
  7514  05BC  2DBD               	goto	l10362
  7515                           	line	33
  7516                           	
  7517  05BD                     l6838:	
  7518                           	line	34
  7519                           	
  7520  05BD                     l10362:	
  7521  05BD  0836               	movf	(___awdiv@sign),w
  7522  05BE  1D03               	skipz
  7523  05BF  2DC1               	goto	u4280
  7524  05C0  2DC7               	goto	l10366
  7525  05C1                     u4280:
  7526                           	line	35
  7527                           	
  7528  05C1                     l10364:	
  7529  05C1  09B7               	comf	(___awdiv@quotient),f
  7530  05C2  09B8               	comf	(___awdiv@quotient+1),f
  7531  05C3  0AB7               	incf	(___awdiv@quotient),f
  7532  05C4  1903               	skipnz
  7533  05C5  0AB8               	incf	(___awdiv@quotient+1),f
  7534  05C6  2DC7               	goto	l10366
  7535                           	
  7536  05C7                     l6845:	
  7537                           	line	36
  7538                           	
  7539  05C7                     l10366:	
  7540  05C7  0838               	movf	(___awdiv@quotient+1),w
  7541  05C8  01B1               	clrf	(?___awdiv+1)
  7542  05C9  07B1               	addwf	(?___awdiv+1)
  7543  05CA  0837               	movf	(___awdiv@quotient),w
  7544  05CB  01B0               	clrf	(?___awdiv)
  7545  05CC  07B0               	addwf	(?___awdiv)
  7546                           
  7547  05CD  2DCE               	goto	l6846
  7548                           	
  7549  05CE                     l10368:	
  7550                           	line	37
  7551                           	
  7552  05CE                     l6846:	
  7553  05CE  0008               	return
  7554                           	opt stack 0
  7555                           GLOBAL	__end_of___awdiv
  7556  05CF                     	__end_of___awdiv:
  7557 ;; =============== function ___awdiv ends ============
  7558                           
  7559                           	signat	___awdiv,8314
  7560                           	global	___wmul
  7561                           psect	text1586,local,class=CODE,delta=2
  7562                           global __ptext1586
  7563  0CFD                     __ptext1586:
  7564                           
  7565 ;; *************** function ___wmul *****************
  7566 ;; Defined at:
  7567 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  multiplier      2   10[BANK0 ] unsigned int 
  7570 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  product         2   14[BANK0 ] unsigned int 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  2   10[BANK0 ] unsigned int 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7582 ;;      Params:         0       4       0       0       0
  7583 ;;      Locals:         0       2       0       0       0
  7584 ;;      Temps:          0       0       0       0       0
  7585 ;;      Totals:         0       6       0       0       0
  7586 ;;Total ram usage:        6 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    2
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_convert
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           psect	text1586
  7596                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  7597                           	line	3
  7598                           	global	__size_of___wmul
  7599  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7600                           	
  7601  0CFD                     ___wmul:	
  7602                           	opt	stack 1
  7603                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7604                           	line	4
  7605                           	
  7606  0CFD                     l10318:	
  7607  0CFD  1283               	bcf	status, 5	;RP0=0, select bank0
  7608  0CFE  1303               	bcf	status, 6	;RP1=0, select bank0
  7609  0CFF  01AE               	clrf	(___wmul@product)
  7610  0D00  01AF               	clrf	(___wmul@product+1)
  7611  0D01  2D02               	goto	l10320
  7612                           	line	6
  7613                           	
  7614  0D02                     l6696:	
  7615                           	line	7
  7616                           	
  7617  0D02                     l10320:	
  7618  0D02  1C2A               	btfss	(___wmul@multiplier),(0)&7
  7619  0D03  2D05               	goto	u4151
  7620  0D04  2D06               	goto	u4150
  7621  0D05                     u4151:
  7622  0D05  2D0C               	goto	l6697
  7623  0D06                     u4150:
  7624                           	line	8
  7625                           	
  7626  0D06                     l10322:	
  7627  0D06  082C               	movf	(___wmul@multiplicand),w
  7628  0D07  07AE               	addwf	(___wmul@product),f
  7629  0D08  1803               	skipnc
  7630  0D09  0AAF               	incf	(___wmul@product+1),f
  7631  0D0A  082D               	movf	(___wmul@multiplicand+1),w
  7632  0D0B  07AF               	addwf	(___wmul@product+1),f
  7633                           	
  7634  0D0C                     l6697:	
  7635                           	line	9
  7636  0D0C  3001               	movlw	01h
  7637                           	
  7638  0D0D                     u4165:
  7639  0D0D  1003               	clrc
  7640  0D0E  0DAC               	rlf	(___wmul@multiplicand),f
  7641  0D0F  0DAD               	rlf	(___wmul@multiplicand+1),f
  7642  0D10  3EFF               	addlw	-1
  7643  0D11  1D03               	skipz
  7644  0D12  2D0D               	goto	u4165
  7645                           	line	10
  7646                           	
  7647  0D13                     l10324:	
  7648  0D13  3001               	movlw	01h
  7649                           	
  7650  0D14                     u4175:
  7651  0D14  1003               	clrc
  7652  0D15  0CAB               	rrf	(___wmul@multiplier+1),f
  7653  0D16  0CAA               	rrf	(___wmul@multiplier),f
  7654  0D17  3EFF               	addlw	-1
  7655  0D18  1D03               	skipz
  7656  0D19  2D14               	goto	u4175
  7657                           	line	11
  7658  0D1A  082B               	movf	((___wmul@multiplier+1)),w
  7659  0D1B  042A               	iorwf	((___wmul@multiplier)),w
  7660  0D1C  1D03               	skipz
  7661  0D1D  2D1F               	goto	u4181
  7662  0D1E  2D20               	goto	u4180
  7663  0D1F                     u4181:
  7664  0D1F  2D02               	goto	l10320
  7665  0D20                     u4180:
  7666  0D20  2D21               	goto	l10326
  7667                           	
  7668  0D21                     l6698:	
  7669                           	line	12
  7670                           	
  7671  0D21                     l10326:	
  7672  0D21  082F               	movf	(___wmul@product+1),w
  7673  0D22  01AB               	clrf	(?___wmul+1)
  7674  0D23  07AB               	addwf	(?___wmul+1)
  7675  0D24  082E               	movf	(___wmul@product),w
  7676  0D25  01AA               	clrf	(?___wmul)
  7677  0D26  07AA               	addwf	(?___wmul)
  7678                           
  7679  0D27  2D28               	goto	l6699
  7680                           	
  7681  0D28                     l10328:	
  7682                           	line	13
  7683                           	
  7684  0D28                     l6699:	
  7685  0D28  0008               	return
  7686                           	opt stack 0
  7687                           GLOBAL	__end_of___wmul
  7688  0D29                     	__end_of___wmul:
  7689 ;; =============== function ___wmul ends ============
  7690                           
  7691                           	signat	___wmul,8314
  7692                           	global	_ser_isrx
  7693                           psect	text1587,local,class=CODE,delta=2
  7694                           global __ptext1587
  7695  0AEE                     __ptext1587:
  7696                           
  7697 ;; *************** function _ser_isrx *****************
  7698 ;; Defined at:
  7699 ;;		line 48 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;		None
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;		None               void
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7713 ;;      Params:         0       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0
  7716 ;;      Totals:         0       0       0       0       0
  7717 ;;Total ram usage:        0 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    2
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_ser_getch
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           psect	text1587
  7727                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  7728                           	line	48
  7729                           	global	__size_of_ser_isrx
  7730  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  7731                           	
  7732  0AEE                     _ser_isrx:	
  7733                           	opt	stack 1
  7734                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  7735                           	line	49
  7736                           	
  7737  0AEE                     l10270:	
  7738                           ;ser.c: 49: if(OERR) {
  7739  0AEE  1283               	bcf	status, 5	;RP0=0, select bank0
  7740  0AEF  1303               	bcf	status, 6	;RP1=0, select bank0
  7741  0AF0  1C98               	btfss	(193/8),(193)&7
  7742  0AF1  2AF3               	goto	u4081
  7743  0AF2  2AF4               	goto	u4080
  7744  0AF3                     u4081:
  7745  0AF3  2AF9               	goto	l10278
  7746  0AF4                     u4080:
  7747                           	line	50
  7748                           	
  7749  0AF4                     l10272:	
  7750                           ;ser.c: 50: CREN = 0;
  7751  0AF4  1218               	bcf	(196/8),(196)&7
  7752                           	line	51
  7753                           ;ser.c: 51: CREN = 1;
  7754  0AF5  1618               	bsf	(196/8),(196)&7
  7755                           	line	52
  7756                           	
  7757  0AF6                     l10274:	
  7758                           ;ser.c: 52: return 0;
  7759  0AF6  1003               	clrc
  7760                           	
  7761  0AF7  2B04               	goto	l4561
  7762                           	
  7763  0AF8                     l10276:	
  7764  0AF8  2B04               	goto	l4561
  7765                           	line	53
  7766                           	
  7767  0AF9                     l4560:	
  7768                           	line	54
  7769                           	
  7770  0AF9                     l10278:	
  7771                           ;ser.c: 53: }
  7772                           ;ser.c: 54: return (rxiptr!=rxoptr);
  7773  0AF9  0878               	movf	(_rxiptr),w	;volatile
  7774  0AFA  0660               	xorwf	(_rxoptr),w	;volatile
  7775  0AFB  1D03               	skipz
  7776  0AFC  2AFE               	goto	u4091
  7777  0AFD  2AFF               	goto	u4090
  7778  0AFE                     u4091:
  7779  0AFE  2B01               	goto	l10282
  7780  0AFF                     u4090:
  7781                           	
  7782  0AFF                     l10280:	
  7783  0AFF  1003               	clrc
  7784                           	
  7785  0B00  2B04               	goto	l4561
  7786                           	
  7787  0B01                     l9994:	
  7788                           	
  7789  0B01                     l10282:	
  7790  0B01  1403               	setc
  7791                           	
  7792  0B02  2B04               	goto	l4561
  7793                           	
  7794  0B03                     l9996:	
  7795  0B03  2B04               	goto	l4561
  7796                           	
  7797  0B04                     l10284:	
  7798                           	line	55
  7799                           	
  7800  0B04                     l4561:	
  7801  0B04  0008               	return
  7802                           	opt stack 0
  7803                           GLOBAL	__end_of_ser_isrx
  7804  0B05                     	__end_of_ser_isrx:
  7805 ;; =============== function _ser_isrx ends ============
  7806                           
  7807                           	signat	_ser_isrx,88
  7808                           	global	_updateNode
  7809                           psect	text1588,local,class=CODE,delta=2
  7810                           global __ptext1588
  7811  0F05                     __ptext1588:
  7812                           
  7813 ;; *************** function _updateNode *****************
  7814 ;; Defined at:
  7815 ;;		line 234 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;		None               void
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7829 ;;      Params:         0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0
  7831 ;;      Temps:          0       1       0       0       0
  7832 ;;      Totals:         0       1       0       0       0
  7833 ;;Total ram usage:        1 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    2
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           psect	text1588
  7843                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  7844                           	line	234
  7845                           	global	__size_of_updateNode
  7846  003E                     	__size_of_updateNode	equ	__end_of_updateNode-_updateNode
  7847                           	
  7848  0F05                     _updateNode:	
  7849                           	opt	stack 5
  7850                           ; Regs used in _updateNode: [wreg+status,2+status,0]
  7851                           	line	235
  7852                           	
  7853  0F05                     l10168:	
  7854                           ;main.c: 235: if((xCoord == 2) && (yCoord == 2))
  7855  0F05  087A               	movf	(_xCoord),w	;volatile
  7856  0F06  3A02               	xorlw	02h
  7857  0F07  1D03               	skipz
  7858  0F08  2F0A               	goto	u3991
  7859  0F09  2F0B               	goto	u3990
  7860  0F0A                     u3991:
  7861  0F0A  2F17               	goto	l10174
  7862  0F0B                     u3990:
  7863                           	
  7864  0F0B                     l10170:	
  7865  0F0B  087B               	movf	(_yCoord),w	;volatile
  7866  0F0C  3A02               	xorlw	02h
  7867  0F0D  1D03               	skipz
  7868  0F0E  2F10               	goto	u4001
  7869  0F0F  2F11               	goto	u4000
  7870  0F10                     u4001:
  7871  0F10  2F17               	goto	l10174
  7872  0F11                     u4000:
  7873                           	line	236
  7874                           	
  7875  0F11                     l10172:	
  7876                           ;main.c: 236: node = 1;
  7877  0F11  1283               	bcf	status, 5	;RP0=0, select bank0
  7878  0F12  1303               	bcf	status, 6	;RP1=0, select bank0
  7879  0F13  01DF               	clrf	(_node)	;volatile
  7880  0F14  1403               	bsf	status,0
  7881  0F15  0DDF               	rlf	(_node),f	;volatile
  7882  0F16  2F42               	goto	l3051
  7883                           	line	237
  7884                           	
  7885  0F17                     l3045:	
  7886                           	
  7887  0F17                     l10174:	
  7888                           ;main.c: 237: else if((xCoord == 4) && (yCoord == 2))
  7889  0F17  087A               	movf	(_xCoord),w	;volatile
  7890  0F18  3A04               	xorlw	04h
  7891  0F19  1D03               	skipz
  7892  0F1A  2F1C               	goto	u4011
  7893  0F1B  2F1D               	goto	u4010
  7894  0F1C                     u4011:
  7895  0F1C  2F2A               	goto	l10180
  7896  0F1D                     u4010:
  7897                           	
  7898  0F1D                     l10176:	
  7899  0F1D  087B               	movf	(_yCoord),w	;volatile
  7900  0F1E  3A02               	xorlw	02h
  7901  0F1F  1D03               	skipz
  7902  0F20  2F22               	goto	u4021
  7903  0F21  2F23               	goto	u4020
  7904  0F22                     u4021:
  7905  0F22  2F2A               	goto	l10180
  7906  0F23                     u4020:
  7907                           	line	238
  7908                           	
  7909  0F23                     l10178:	
  7910                           ;main.c: 238: node = 2;
  7911  0F23  3002               	movlw	(02h)
  7912  0F24  1283               	bcf	status, 5	;RP0=0, select bank0
  7913  0F25  1303               	bcf	status, 6	;RP1=0, select bank0
  7914  0F26  00AA               	movwf	(??_updateNode+0)+0
  7915  0F27  082A               	movf	(??_updateNode+0)+0,w
  7916  0F28  00DF               	movwf	(_node)	;volatile
  7917  0F29  2F42               	goto	l3051
  7918                           	line	239
  7919                           	
  7920  0F2A                     l3047:	
  7921                           	
  7922  0F2A                     l10180:	
  7923                           ;main.c: 239: else if((xCoord == 2) && (yCoord == 0))
  7924  0F2A  087A               	movf	(_xCoord),w	;volatile
  7925  0F2B  3A02               	xorlw	02h
  7926  0F2C  1D03               	skipz
  7927  0F2D  2F2F               	goto	u4031
  7928  0F2E  2F30               	goto	u4030
  7929  0F2F                     u4031:
  7930  0F2F  2F3C               	goto	l3049
  7931  0F30                     u4030:
  7932                           	
  7933  0F30                     l10182:	
  7934  0F30  08FB               	movf	(_yCoord),f
  7935  0F31  1D03               	skipz	;volatile
  7936  0F32  2F34               	goto	u4041
  7937  0F33  2F35               	goto	u4040
  7938  0F34                     u4041:
  7939  0F34  2F3C               	goto	l3049
  7940  0F35                     u4040:
  7941                           	line	240
  7942                           	
  7943  0F35                     l10184:	
  7944                           ;main.c: 240: node = 3;
  7945  0F35  3003               	movlw	(03h)
  7946  0F36  1283               	bcf	status, 5	;RP0=0, select bank0
  7947  0F37  1303               	bcf	status, 6	;RP1=0, select bank0
  7948  0F38  00AA               	movwf	(??_updateNode+0)+0
  7949  0F39  082A               	movf	(??_updateNode+0)+0,w
  7950  0F3A  00DF               	movwf	(_node)	;volatile
  7951  0F3B  2F42               	goto	l3051
  7952                           	line	241
  7953                           	
  7954  0F3C                     l3049:	
  7955                           	line	242
  7956                           ;main.c: 241: else
  7957                           ;main.c: 242: node = 0;
  7958  0F3C  1283               	bcf	status, 5	;RP0=0, select bank0
  7959  0F3D  1303               	bcf	status, 6	;RP1=0, select bank0
  7960  0F3E  01DF               	clrf	(_node)	;volatile
  7961  0F3F  2F42               	goto	l3051
  7962                           	
  7963  0F40                     l3050:	
  7964  0F40  2F42               	goto	l3051
  7965                           	
  7966  0F41                     l3048:	
  7967  0F41  2F42               	goto	l3051
  7968                           	
  7969  0F42                     l3046:	
  7970                           	line	243
  7971                           	
  7972  0F42                     l3051:	
  7973  0F42  0008               	return
  7974                           	opt stack 0
  7975                           GLOBAL	__end_of_updateNode
  7976  0F43                     	__end_of_updateNode:
  7977 ;; =============== function _updateNode ends ============
  7978                           
  7979                           	signat	_updateNode,88
  7980                           	global	_getVictimZone
  7981                           psect	text1589,local,class=CODE,delta=2
  7982                           global __ptext1589
  7983  04DA                     __ptext1589:
  7984                           
  7985 ;; *************** function _getVictimZone *****************
  7986 ;; Defined at:
  7987 ;;		line 157 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\map.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  victimX         1    wreg     unsigned char 
  7990 ;;  victimY         1   10[BANK0 ] unsigned char 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  victimX         1   12[BANK0 ] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      unsigned char 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8002 ;;      Params:         0       1       0       0       0
  8003 ;;      Locals:         0       1       0       0       0
  8004 ;;      Temps:          0       1       0       0       0
  8005 ;;      Totals:         0       3       0       0       0
  8006 ;;Total ram usage:        3 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    2
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_lookForVictim
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           psect	text1589
  8016                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\map.c"
  8017                           	line	157
  8018                           	global	__size_of_getVictimZone
  8019  007F                     	__size_of_getVictimZone	equ	__end_of_getVictimZone-_getVictimZone
  8020                           	
  8021  04DA                     _getVictimZone:	
  8022                           	opt	stack 4
  8023                           ; Regs used in _getVictimZone: [wreg-fsr0h+status,2+status,0]
  8024                           ;getVictimZone@victimX stored from wreg
  8025  04DA  1283               	bcf	status, 5	;RP0=0, select bank0
  8026  04DB  1303               	bcf	status, 6	;RP1=0, select bank0
  8027  04DC  00AC               	movwf	(getVictimZone@victimX)
  8028                           	line	163
  8029                           	
  8030  04DD                     l10120:	
  8031                           ;map.c: 163: switch (victimX)
  8032  04DD  2D45               	goto	l10162
  8033                           	line	165
  8034                           ;map.c: 164: {
  8035                           ;map.c: 165: case 0:
  8036                           	
  8037  04DE                     l3828:	
  8038                           	line	166
  8039                           ;map.c: 166: switch (victimY)
  8040  04DE  2CEB               	goto	l10128
  8041                           	line	168
  8042                           ;map.c: 167: {
  8043                           ;map.c: 168: case 0:
  8044                           	
  8045  04DF                     l3830:	
  8046                           	line	169
  8047                           	
  8048  04DF                     l10122:	
  8049                           ;map.c: 169: vicZone = 4;
  8050  04DF  3004               	movlw	(04h)
  8051  04E0  00AB               	movwf	(??_getVictimZone+0)+0
  8052  04E1  082B               	movf	(??_getVictimZone+0)+0,w
  8053  04E2  00E3               	movwf	(_vicZone)
  8054                           	line	170
  8055                           ;map.c: 170: break;
  8056  04E3  2D56               	goto	l10164
  8057                           	line	171
  8058                           ;map.c: 171: case 1:
  8059                           	
  8060  04E4                     l3832:	
  8061                           	line	172
  8062                           	
  8063  04E4                     l10124:	
  8064                           ;map.c: 172: vicZone = 4;
  8065  04E4  3004               	movlw	(04h)
  8066  04E5  00AB               	movwf	(??_getVictimZone+0)+0
  8067  04E6  082B               	movf	(??_getVictimZone+0)+0,w
  8068  04E7  00E3               	movwf	(_vicZone)
  8069                           	line	173
  8070                           ;map.c: 173: break;
  8071  04E8  2D56               	goto	l10164
  8072                           	line	178
  8073                           ;map.c: 178: default:
  8074                           	
  8075  04E9                     l3833:	
  8076                           	line	179
  8077                           ;map.c: 179: break;
  8078  04E9  2D56               	goto	l10164
  8079                           	line	180
  8080                           	
  8081  04EA                     l10126:	
  8082                           ;map.c: 180: }
  8083  04EA  2D56               	goto	l10164
  8084                           	line	166
  8085                           	
  8086  04EB                     l3829:	
  8087                           	
  8088  04EB                     l10128:	
  8089  04EB  082A               	movf	(getVictimZone@victimY),w
  8090                           	; Switch size 1, requested type "space"
  8091                           ; Number of cases is 2, Range of values is 0 to 1
  8092                           ; switch strategies available:
  8093                           ; Name         Instructions Cycles
  8094                           ; simple_byte            7     4 (average)
  8095                           ; direct_byte           14     8 (fixed)
  8096                           ; jumptable            260     6 (fixed)
  8097                           ; rangetable             6     6 (fixed)
  8098                           ; spacedrange           10     9 (fixed)
  8099                           ; locatedrange           2     3 (fixed)
  8100                           ;	Chosen strategy is simple_byte
  8101                           
  8102                           	opt asmopt_off
  8103  04EC  3A00               	xorlw	0^0	; case 0
  8104  04ED  1903               	skipnz
  8105  04EE  2CDF               	goto	l10122
  8106  04EF  3A01               	xorlw	1^0	; case 1
  8107  04F0  1903               	skipnz
  8108  04F1  2CE4               	goto	l10124
  8109  04F2  2D56               	goto	l10164
  8110                           	opt asmopt_on
  8111                           
  8112                           	line	180
  8113                           	
  8114  04F3                     l3831:	
  8115                           	line	181
  8116                           ;map.c: 181: break;
  8117  04F3  2D56               	goto	l10164
  8118                           	line	183
  8119                           ;map.c: 183: case 1:
  8120                           	
  8121  04F4                     l3835:	
  8122                           	line	184
  8123                           ;map.c: 184: switch (victimY)
  8124  04F4  2D01               	goto	l10136
  8125                           	line	186
  8126                           ;map.c: 185: {
  8127                           ;map.c: 186: case 0:
  8128                           	
  8129  04F5                     l3837:	
  8130                           	line	187
  8131                           	
  8132  04F5                     l10130:	
  8133                           ;map.c: 187: vicZone = 4;
  8134  04F5  3004               	movlw	(04h)
  8135  04F6  00AB               	movwf	(??_getVictimZone+0)+0
  8136  04F7  082B               	movf	(??_getVictimZone+0)+0,w
  8137  04F8  00E3               	movwf	(_vicZone)
  8138                           	line	188
  8139                           ;map.c: 188: break;
  8140  04F9  2D56               	goto	l10164
  8141                           	line	189
  8142                           ;map.c: 189: case 1:
  8143                           	
  8144  04FA                     l3839:	
  8145                           	line	190
  8146                           	
  8147  04FA                     l10132:	
  8148                           ;map.c: 190: vicZone = 4;
  8149  04FA  3004               	movlw	(04h)
  8150  04FB  00AB               	movwf	(??_getVictimZone+0)+0
  8151  04FC  082B               	movf	(??_getVictimZone+0)+0,w
  8152  04FD  00E3               	movwf	(_vicZone)
  8153                           	line	191
  8154                           ;map.c: 191: break;
  8155  04FE  2D56               	goto	l10164
  8156                           	line	196
  8157                           ;map.c: 196: default:
  8158                           	
  8159  04FF                     l3840:	
  8160                           	line	197
  8161                           ;map.c: 197: break;
  8162  04FF  2D56               	goto	l10164
  8163                           	line	198
  8164                           	
  8165  0500                     l10134:	
  8166                           ;map.c: 198: }
  8167  0500  2D56               	goto	l10164
  8168                           	line	184
  8169                           	
  8170  0501                     l3836:	
  8171                           	
  8172  0501                     l10136:	
  8173  0501  082A               	movf	(getVictimZone@victimY),w
  8174                           	; Switch size 1, requested type "space"
  8175                           ; Number of cases is 2, Range of values is 0 to 1
  8176                           ; switch strategies available:
  8177                           ; Name         Instructions Cycles
  8178                           ; simple_byte            7     4 (average)
  8179                           ; direct_byte           14     8 (fixed)
  8180                           ; jumptable            260     6 (fixed)
  8181                           ; rangetable             6     6 (fixed)
  8182                           ; spacedrange           10     9 (fixed)
  8183                           ; locatedrange           2     3 (fixed)
  8184                           ;	Chosen strategy is simple_byte
  8185                           
  8186                           	opt asmopt_off
  8187  0502  3A00               	xorlw	0^0	; case 0
  8188  0503  1903               	skipnz
  8189  0504  2CF5               	goto	l10130
  8190  0505  3A01               	xorlw	1^0	; case 1
  8191  0506  1903               	skipnz
  8192  0507  2CFA               	goto	l10132
  8193  0508  2D56               	goto	l10164
  8194                           	opt asmopt_on
  8195                           
  8196                           	line	198
  8197                           	
  8198  0509                     l3838:	
  8199                           	line	199
  8200                           ;map.c: 199: break;
  8201  0509  2D56               	goto	l10164
  8202                           	line	201
  8203                           ;map.c: 201: case 2:
  8204                           	
  8205  050A                     l3841:	
  8206                           	line	202
  8207                           ;map.c: 202: switch (victimY)
  8208  050A  2D16               	goto	l10144
  8209                           	line	206
  8210                           ;map.c: 203: {
  8211                           ;map.c: 206: case 1:
  8212                           	
  8213  050B                     l3843:	
  8214                           	line	207
  8215                           	
  8216  050B                     l10138:	
  8217                           ;map.c: 207: vicZone = 3;
  8218  050B  3003               	movlw	(03h)
  8219  050C  00AB               	movwf	(??_getVictimZone+0)+0
  8220  050D  082B               	movf	(??_getVictimZone+0)+0,w
  8221  050E  00E3               	movwf	(_vicZone)
  8222                           	line	208
  8223                           ;map.c: 208: break;
  8224  050F  2D56               	goto	l10164
  8225                           	line	211
  8226                           ;map.c: 211: case 3:
  8227                           	
  8228  0510                     l3845:	
  8229                           	line	212
  8230                           	
  8231  0510                     l10140:	
  8232                           ;map.c: 212: vicZone = 1;
  8233  0510  01E3               	clrf	(_vicZone)
  8234  0511  1403               	bsf	status,0
  8235  0512  0DE3               	rlf	(_vicZone),f
  8236                           	line	213
  8237                           ;map.c: 213: break;
  8238  0513  2D56               	goto	l10164
  8239                           	line	214
  8240                           ;map.c: 214: default:
  8241                           	
  8242  0514                     l3846:	
  8243                           	line	215
  8244                           ;map.c: 215: break;
  8245  0514  2D56               	goto	l10164
  8246                           	line	216
  8247                           	
  8248  0515                     l10142:	
  8249                           ;map.c: 216: }
  8250  0515  2D56               	goto	l10164
  8251                           	line	202
  8252                           	
  8253  0516                     l3842:	
  8254                           	
  8255  0516                     l10144:	
  8256  0516  082A               	movf	(getVictimZone@victimY),w
  8257                           	; Switch size 1, requested type "space"
  8258                           ; Number of cases is 2, Range of values is 1 to 3
  8259                           ; switch strategies available:
  8260                           ; Name         Instructions Cycles
  8261                           ; simple_byte            7     4 (average)
  8262                           ; direct_byte           20    11 (fixed)
  8263                           ; jumptable            263     9 (fixed)
  8264                           ;	Chosen strategy is simple_byte
  8265                           
  8266                           	opt asmopt_off
  8267  0517  3A01               	xorlw	1^0	; case 1
  8268  0518  1903               	skipnz
  8269  0519  2D0B               	goto	l10138
  8270  051A  3A02               	xorlw	3^1	; case 3
  8271  051B  1903               	skipnz
  8272  051C  2D10               	goto	l10140
  8273  051D  2D56               	goto	l10164
  8274                           	opt asmopt_on
  8275                           
  8276                           	line	216
  8277                           	
  8278  051E                     l3844:	
  8279                           	line	217
  8280                           ;map.c: 217: break;
  8281  051E  2D56               	goto	l10164
  8282                           	line	219
  8283                           ;map.c: 219: case 3:
  8284                           	
  8285  051F                     l3847:	
  8286                           	line	220
  8287                           ;map.c: 220: switch (victimY)
  8288  051F  2D2C               	goto	l10152
  8289                           	line	224
  8290                           ;map.c: 221: {
  8291                           ;map.c: 224: case 1:
  8292                           	
  8293  0520                     l3849:	
  8294                           	line	225
  8295                           	
  8296  0520                     l10146:	
  8297                           ;map.c: 225: vicZone = 3;
  8298  0520  3003               	movlw	(03h)
  8299  0521  00AB               	movwf	(??_getVictimZone+0)+0
  8300  0522  082B               	movf	(??_getVictimZone+0)+0,w
  8301  0523  00E3               	movwf	(_vicZone)
  8302                           	line	226
  8303                           ;map.c: 226: break;
  8304  0524  2D56               	goto	l10164
  8305                           	line	229
  8306                           ;map.c: 229: case 3:
  8307                           	
  8308  0525                     l3851:	
  8309                           	line	230
  8310                           	
  8311  0525                     l10148:	
  8312                           ;map.c: 230: vicZone = 2;
  8313  0525  3002               	movlw	(02h)
  8314  0526  00AB               	movwf	(??_getVictimZone+0)+0
  8315  0527  082B               	movf	(??_getVictimZone+0)+0,w
  8316  0528  00E3               	movwf	(_vicZone)
  8317                           	line	231
  8318                           ;map.c: 231: break;
  8319  0529  2D56               	goto	l10164
  8320                           	line	232
  8321                           ;map.c: 232: default:
  8322                           	
  8323  052A                     l3852:	
  8324                           	line	233
  8325                           ;map.c: 233: break;
  8326  052A  2D56               	goto	l10164
  8327                           	line	234
  8328                           	
  8329  052B                     l10150:	
  8330                           ;map.c: 234: }
  8331  052B  2D56               	goto	l10164
  8332                           	line	220
  8333                           	
  8334  052C                     l3848:	
  8335                           	
  8336  052C                     l10152:	
  8337  052C  082A               	movf	(getVictimZone@victimY),w
  8338                           	; Switch size 1, requested type "space"
  8339                           ; Number of cases is 2, Range of values is 1 to 3
  8340                           ; switch strategies available:
  8341                           ; Name         Instructions Cycles
  8342                           ; simple_byte            7     4 (average)
  8343                           ; direct_byte           20    11 (fixed)
  8344                           ; jumptable            263     9 (fixed)
  8345                           ;	Chosen strategy is simple_byte
  8346                           
  8347                           	opt asmopt_off
  8348  052D  3A01               	xorlw	1^0	; case 1
  8349  052E  1903               	skipnz
  8350  052F  2D20               	goto	l10146
  8351  0530  3A02               	xorlw	3^1	; case 3
  8352  0531  1903               	skipnz
  8353  0532  2D25               	goto	l10148
  8354  0533  2D56               	goto	l10164
  8355                           	opt asmopt_on
  8356                           
  8357                           	line	234
  8358                           	
  8359  0534                     l3850:	
  8360                           	line	235
  8361                           ;map.c: 235: break;
  8362  0534  2D56               	goto	l10164
  8363                           	line	237
  8364                           ;map.c: 237: case 4:
  8365                           	
  8366  0535                     l3853:	
  8367                           	line	238
  8368                           ;map.c: 238: switch (victimY)
  8369  0535  2D3D               	goto	l10158
  8370                           	line	246
  8371                           ;map.c: 239: {
  8372                           ;map.c: 246: case 3:
  8373                           	
  8374  0536                     l3855:	
  8375                           	line	247
  8376                           	
  8377  0536                     l10154:	
  8378                           ;map.c: 247: vicZone = 2;
  8379  0536  3002               	movlw	(02h)
  8380  0537  00AB               	movwf	(??_getVictimZone+0)+0
  8381  0538  082B               	movf	(??_getVictimZone+0)+0,w
  8382  0539  00E3               	movwf	(_vicZone)
  8383                           	line	248
  8384                           ;map.c: 248: break;
  8385  053A  2D56               	goto	l10164
  8386                           	line	249
  8387                           ;map.c: 249: default:
  8388                           	
  8389  053B                     l3857:	
  8390                           	line	250
  8391                           ;map.c: 250: break;
  8392  053B  2D56               	goto	l10164
  8393                           	line	251
  8394                           	
  8395  053C                     l10156:	
  8396                           ;map.c: 251: }
  8397  053C  2D56               	goto	l10164
  8398                           	line	238
  8399                           	
  8400  053D                     l3854:	
  8401                           	
  8402  053D                     l10158:	
  8403  053D  082A               	movf	(getVictimZone@victimY),w
  8404                           	; Switch size 1, requested type "space"
  8405                           ; Number of cases is 1, Range of values is 3 to 3
  8406                           ; switch strategies available:
  8407                           ; Name         Instructions Cycles
  8408                           ; simple_byte            4     3 (average)
  8409                           ; direct_byte           14    11 (fixed)
  8410                           ; jumptable            263     9 (fixed)
  8411                           ;	Chosen strategy is simple_byte
  8412                           
  8413                           	opt asmopt_off
  8414  053E  3A03               	xorlw	3^0	; case 3
  8415  053F  1903               	skipnz
  8416  0540  2D36               	goto	l10154
  8417  0541  2D56               	goto	l10164
  8418                           	opt asmopt_on
  8419                           
  8420                           	line	251
  8421                           	
  8422  0542                     l3856:	
  8423                           	line	252
  8424                           ;map.c: 252: break;
  8425  0542  2D56               	goto	l10164
  8426                           	line	254
  8427                           ;map.c: 254: default:
  8428                           	
  8429  0543                     l3858:	
  8430                           	line	255
  8431                           ;map.c: 255: break;
  8432  0543  2D56               	goto	l10164
  8433                           	line	256
  8434                           	
  8435  0544                     l10160:	
  8436                           ;map.c: 256: }
  8437  0544  2D56               	goto	l10164
  8438                           	line	163
  8439                           	
  8440  0545                     l3827:	
  8441                           	
  8442  0545                     l10162:	
  8443  0545  082C               	movf	(getVictimZone@victimX),w
  8444                           	; Switch size 1, requested type "space"
  8445                           ; Number of cases is 5, Range of values is 0 to 4
  8446                           ; switch strategies available:
  8447                           ; Name         Instructions Cycles
  8448                           ; simple_byte           16     9 (average)
  8449                           ; direct_byte           23     8 (fixed)
  8450                           ; jumptable            260     6 (fixed)
  8451                           ; rangetable             9     6 (fixed)
  8452                           ; spacedrange           16     9 (fixed)
  8453                           ; locatedrange           5     3 (fixed)
  8454                           ;	Chosen strategy is simple_byte
  8455                           
  8456                           	opt asmopt_off
  8457  0546  3A00               	xorlw	0^0	; case 0
  8458  0547  1903               	skipnz
  8459  0548  2CEB               	goto	l10128
  8460  0549  3A01               	xorlw	1^0	; case 1
  8461  054A  1903               	skipnz
  8462  054B  2D01               	goto	l10136
  8463  054C  3A03               	xorlw	2^1	; case 2
  8464  054D  1903               	skipnz
  8465  054E  2D16               	goto	l10144
  8466  054F  3A01               	xorlw	3^2	; case 3
  8467  0550  1903               	skipnz
  8468  0551  2D2C               	goto	l10152
  8469  0552  3A07               	xorlw	4^3	; case 4
  8470  0553  1903               	skipnz
  8471  0554  2D3D               	goto	l10158
  8472  0555  2D56               	goto	l10164
  8473                           	opt asmopt_on
  8474                           
  8475                           	line	256
  8476                           	
  8477  0556                     l3834:	
  8478                           	line	258
  8479                           	
  8480  0556                     l10164:	
  8481                           ;map.c: 258: return vicZone;
  8482  0556  0863               	movf	(_vicZone),w
  8483  0557  2D58               	goto	l3859
  8484                           	
  8485  0558                     l10166:	
  8486                           	line	259
  8487                           	
  8488  0558                     l3859:	
  8489  0558  0008               	return
  8490                           	opt stack 0
  8491                           GLOBAL	__end_of_getVictimZone
  8492  0559                     	__end_of_getVictimZone:
  8493 ;; =============== function _getVictimZone ends ============
  8494                           
  8495                           	signat	_getVictimZone,8313
  8496                           	global	_getFinalY
  8497                           psect	text1590,local,class=CODE,delta=2
  8498                           global __ptext1590
  8499  0A58                     __ptext1590:
  8500                           
  8501 ;; *************** function _getFinalY *****************
  8502 ;; Defined at:
  8503 ;;		line 152 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\map.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;		None
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;		None
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  1    wreg      unsigned char 
  8510 ;; Registers used:
  8511 ;;		wreg
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8517 ;;      Params:         0       0       0       0       0
  8518 ;;      Locals:         0       0       0       0       0
  8519 ;;      Temps:          0       0       0       0       0
  8520 ;;      Totals:         0       0       0       0       0
  8521 ;;Total ram usage:        0 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:    2
  8524 ;; This function calls:
  8525 ;;		Nothing
  8526 ;; This function is called by:
  8527 ;;		_checkForFinalDestination
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           psect	text1590
  8531                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\map.c"
  8532                           	line	152
  8533                           	global	__size_of_getFinalY
  8534  0005                     	__size_of_getFinalY	equ	__end_of_getFinalY-_getFinalY
  8535                           	
  8536  0A58                     _getFinalY:	
  8537                           	opt	stack 4
  8538                           ; Regs used in _getFinalY: [wreg]
  8539                           	line	153
  8540                           	
  8541  0A58                     l10116:	
  8542                           ;map.c: 153: return finalY;
  8543  0A58  1283               	bcf	status, 5	;RP0=0, select bank0
  8544  0A59  1303               	bcf	status, 6	;RP1=0, select bank0
  8545  0A5A  085D               	movf	(_finalY),w
  8546  0A5B  2A5C               	goto	l3824
  8547                           	
  8548  0A5C                     l10118:	
  8549                           	line	154
  8550                           	
  8551  0A5C                     l3824:	
  8552  0A5C  0008               	return
  8553                           	opt stack 0
  8554                           GLOBAL	__end_of_getFinalY
  8555  0A5D                     	__end_of_getFinalY:
  8556 ;; =============== function _getFinalY ends ============
  8557                           
  8558                           	signat	_getFinalY,89
  8559                           	global	_getFinalX
  8560                           psect	text1591,local,class=CODE,delta=2
  8561                           global __ptext1591
  8562  0A53                     __ptext1591:
  8563                           
  8564 ;; *************** function _getFinalX *****************
  8565 ;; Defined at:
  8566 ;;		line 147 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\map.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      unsigned char 
  8573 ;; Registers used:
  8574 ;;		wreg
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8580 ;;      Params:         0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0
  8583 ;;      Totals:         0       0       0       0       0
  8584 ;;Total ram usage:        0 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:    2
  8587 ;; This function calls:
  8588 ;;		Nothing
  8589 ;; This function is called by:
  8590 ;;		_checkForFinalDestination
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           psect	text1591
  8594                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\map.c"
  8595                           	line	147
  8596                           	global	__size_of_getFinalX
  8597  0005                     	__size_of_getFinalX	equ	__end_of_getFinalX-_getFinalX
  8598                           	
  8599  0A53                     _getFinalX:	
  8600                           	opt	stack 4
  8601                           ; Regs used in _getFinalX: [wreg]
  8602                           	line	148
  8603                           	
  8604  0A53                     l10112:	
  8605                           ;map.c: 148: return finalX;
  8606  0A53  1283               	bcf	status, 5	;RP0=0, select bank0
  8607  0A54  1303               	bcf	status, 6	;RP1=0, select bank0
  8608  0A55  085C               	movf	(_finalX),w
  8609  0A56  2A57               	goto	l3821
  8610                           	
  8611  0A57                     l10114:	
  8612                           	line	149
  8613                           	
  8614  0A57                     l3821:	
  8615  0A57  0008               	return
  8616                           	opt stack 0
  8617                           GLOBAL	__end_of_getFinalX
  8618  0A58                     	__end_of_getFinalX:
  8619 ;; =============== function _getFinalX ends ============
  8620                           
  8621                           	signat	_getFinalX,89
  8622                           	global	_ser_init
  8623                           psect	text1592,local,class=CODE,delta=2
  8624                           global __ptext1592
  8625  0C07                     __ptext1592:
  8626                           
  8627 ;; *************** function _ser_init *****************
  8628 ;; Defined at:
  8629 ;;		line 124 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;		None
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;		None               void
  8636 ;; Registers used:
  8637 ;;		wreg, status,2, status,0
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8643 ;;      Params:         0       0       0       0       0
  8644 ;;      Locals:         0       0       0       0       0
  8645 ;;      Temps:          0       1       0       0       0
  8646 ;;      Totals:         0       1       0       0       0
  8647 ;;Total ram usage:        1 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    2
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_init
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           psect	text1592
  8657                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  8658                           	line	124
  8659                           	global	__size_of_ser_init
  8660  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  8661                           	
  8662  0C07                     _ser_init:	
  8663                           	opt	stack 4
  8664                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  8665                           	line	125
  8666                           	
  8667  0C07                     l10086:	
  8668                           ;ser.c: 125: TRISC |= 0b10000000;
  8669  0C07  1683               	bsf	status, 5	;RP0=1, select bank1
  8670  0C08  1303               	bcf	status, 6	;RP1=0, select bank1
  8671  0C09  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  8672                           	line	126
  8673                           	
  8674  0C0A                     l10088:	
  8675                           ;ser.c: 126: TRISC &= 0b10111111;
  8676  0C0A  30BF               	movlw	(0BFh)
  8677  0C0B  1283               	bcf	status, 5	;RP0=0, select bank0
  8678  0C0C  1303               	bcf	status, 6	;RP1=0, select bank0
  8679  0C0D  00AA               	movwf	(??_ser_init+0)+0
  8680  0C0E  082A               	movf	(??_ser_init+0)+0,w
  8681  0C0F  1683               	bsf	status, 5	;RP0=1, select bank1
  8682  0C10  1303               	bcf	status, 6	;RP1=0, select bank1
  8683  0C11  0587               	andwf	(135)^080h,f	;volatile
  8684                           	line	127
  8685                           	
  8686  0C12                     l10090:	
  8687                           ;ser.c: 127: BRGH=1;
  8688  0C12  1518               	bsf	(1218/8)^080h,(1218)&7
  8689                           	line	129
  8690                           	
  8691  0C13                     l10092:	
  8692                           ;ser.c: 129: SPBRG=20;
  8693  0C13  3014               	movlw	(014h)
  8694  0C14  0099               	movwf	(153)^080h	;volatile
  8695                           	line	132
  8696                           	
  8697  0C15                     l10094:	
  8698                           ;ser.c: 132: TX9=0;
  8699  0C15  1318               	bcf	(1222/8)^080h,(1222)&7
  8700                           	line	133
  8701                           	
  8702  0C16                     l10096:	
  8703                           ;ser.c: 133: RX9=0;
  8704  0C16  1283               	bcf	status, 5	;RP0=0, select bank0
  8705  0C17  1303               	bcf	status, 6	;RP1=0, select bank0
  8706  0C18  1318               	bcf	(198/8),(198)&7
  8707                           	line	135
  8708                           	
  8709  0C19                     l10098:	
  8710                           ;ser.c: 135: SYNC=0;
  8711  0C19  1683               	bsf	status, 5	;RP0=1, select bank1
  8712  0C1A  1303               	bcf	status, 6	;RP1=0, select bank1
  8713  0C1B  1218               	bcf	(1220/8)^080h,(1220)&7
  8714                           	line	136
  8715                           	
  8716  0C1C                     l10100:	
  8717                           ;ser.c: 136: SPEN=1;
  8718  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  8719  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  8720  0C1E  1798               	bsf	(199/8),(199)&7
  8721                           	line	137
  8722                           	
  8723  0C1F                     l10102:	
  8724                           ;ser.c: 137: CREN=1;
  8725  0C1F  1618               	bsf	(196/8),(196)&7
  8726                           	line	138
  8727                           	
  8728  0C20                     l10104:	
  8729                           ;ser.c: 138: TXIE=0;
  8730  0C20  1683               	bsf	status, 5	;RP0=1, select bank1
  8731  0C21  1303               	bcf	status, 6	;RP1=0, select bank1
  8732  0C22  120C               	bcf	(1124/8)^080h,(1124)&7
  8733                           	line	139
  8734                           	
  8735  0C23                     l10106:	
  8736                           ;ser.c: 139: RCIE=1;
  8737  0C23  168C               	bsf	(1125/8)^080h,(1125)&7
  8738                           	line	140
  8739                           	
  8740  0C24                     l10108:	
  8741                           ;ser.c: 140: TXEN=1;
  8742  0C24  1698               	bsf	(1221/8)^080h,(1221)&7
  8743                           	line	143
  8744                           	
  8745  0C25                     l10110:	
  8746                           ;ser.c: 143: rxiptr=rxoptr=txiptr=txoptr=0;
  8747  0C25  3000               	movlw	(0)
  8748  0C26  1283               	bcf	status, 5	;RP0=0, select bank0
  8749  0C27  1303               	bcf	status, 6	;RP1=0, select bank0
  8750  0C28  00E2               	movwf	(_txoptr)	;volatile
  8751  0C29  00F9               	movwf	(_txiptr)	;volatile
  8752  0C2A  00E0               	movwf	(_rxoptr)	;volatile
  8753  0C2B  00AA               	movwf	(??_ser_init+0)+0
  8754  0C2C  082A               	movf	(??_ser_init+0)+0,w
  8755  0C2D  00F8               	movwf	(_rxiptr)	;volatile
  8756                           	line	144
  8757                           	
  8758  0C2E                     l4601:	
  8759  0C2E  0008               	return
  8760                           	opt stack 0
  8761                           GLOBAL	__end_of_ser_init
  8762  0C2F                     	__end_of_ser_init:
  8763 ;; =============== function _ser_init ends ============
  8764                           
  8765                           	signat	_ser_init,88
  8766                           	global	_updateOrientation
  8767                           psect	text1593,local,class=CODE,delta=2
  8768                           global __ptext1593
  8769  0A7B                     __ptext1593:
  8770                           
  8771 ;; *************** function _updateOrientation *****************
  8772 ;; Defined at:
  8773 ;;		line 171 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  moved           1    wreg     enum E1111
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  moved           1   11[BANK0 ] enum E1111
  8778 ;; Return value:  Size  Location     Type
  8779 ;;		None               void
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8787 ;;      Params:         0       0       0       0       0
  8788 ;;      Locals:         0       1       0       0       0
  8789 ;;      Temps:          0       1       0       0       0
  8790 ;;      Totals:         0       2       0       0       0
  8791 ;;Total ram usage:        2 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    2
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_goBackward
  8798 ;;		_goLeft
  8799 ;;		_goRight
  8800 ;;		_goReverse
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           psect	text1593
  8804                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  8805                           	line	171
  8806                           	global	__size_of_updateOrientation
  8807  0011                     	__size_of_updateOrientation	equ	__end_of_updateOrientation-_updateOrientation
  8808                           	
  8809  0A7B                     _updateOrientation:	
  8810                           	opt	stack 3
  8811                           ; Regs used in _updateOrientation: [wreg+status,2+status,0]
  8812                           ;updateOrientation@moved stored from wreg
  8813  0A7B  1283               	bcf	status, 5	;RP0=0, select bank0
  8814  0A7C  1303               	bcf	status, 6	;RP1=0, select bank0
  8815  0A7D  00AB               	movwf	(updateOrientation@moved)
  8816                           	line	172
  8817                           	
  8818  0A7E                     l10040:	
  8819                           ;drive.c: 172: currentOrientation += moved;
  8820  0A7E  082B               	movf	(updateOrientation@moved),w	;volatile
  8821  0A7F  00AA               	movwf	(??_updateOrientation+0)+0
  8822  0A80  082A               	movf	(??_updateOrientation+0)+0,w
  8823  0A81  07DB               	addwf	(_currentOrientation),f	;volatile
  8824                           	line	173
  8825                           	
  8826  0A82                     l10042:	
  8827                           ;drive.c: 173: if(currentOrientation >= 4)
  8828  0A82  3004               	movlw	(04h)
  8829  0A83  025B               	subwf	(_currentOrientation),w	;volatile
  8830  0A84  1C03               	skipc
  8831  0A85  2A87               	goto	u3941
  8832  0A86  2A88               	goto	u3940
  8833  0A87                     u3941:
  8834  0A87  2A8B               	goto	l1467
  8835  0A88                     u3940:
  8836                           	line	174
  8837                           	
  8838  0A88                     l10044:	
  8839                           ;drive.c: 174: currentOrientation -= 4;
  8840  0A88  3004               	movlw	low(04h)
  8841  0A89  02DB               	subwf	(_currentOrientation),f	;volatile
  8842  0A8A  2A8B               	goto	l1467
  8843                           	
  8844  0A8B                     l1466:	
  8845                           	line	175
  8846                           	
  8847  0A8B                     l1467:	
  8848  0A8B  0008               	return
  8849                           	opt stack 0
  8850                           GLOBAL	__end_of_updateOrientation
  8851  0A8C                     	__end_of_updateOrientation:
  8852 ;; =============== function _updateOrientation ends ============
  8853                           
  8854                           	signat	_updateOrientation,4216
  8855                           	global	_getOrientation
  8856                           psect	text1594,local,class=CODE,delta=2
  8857                           global __ptext1594
  8858  0A4E                     __ptext1594:
  8859                           
  8860 ;; *************** function _getOrientation *****************
  8861 ;; Defined at:
  8862 ;;		line 71 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;		None
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      enum E1117
  8869 ;; Registers used:
  8870 ;;		wreg
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8876 ;;      Params:         0       0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0
  8879 ;;      Totals:         0       0       0       0       0
  8880 ;;Total ram usage:        0 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:    2
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_updateLocation
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           psect	text1594
  8890                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\drive.c"
  8891                           	line	71
  8892                           	global	__size_of_getOrientation
  8893  0005                     	__size_of_getOrientation	equ	__end_of_getOrientation-_getOrientation
  8894                           	
  8895  0A4E                     _getOrientation:	
  8896                           	opt	stack 4
  8897                           ; Regs used in _getOrientation: [wreg]
  8898                           	line	72
  8899                           	
  8900  0A4E                     l10036:	
  8901                           ;drive.c: 72: return currentOrientation;
  8902  0A4E  1283               	bcf	status, 5	;RP0=0, select bank0
  8903  0A4F  1303               	bcf	status, 6	;RP1=0, select bank0
  8904  0A50  085B               	movf	(_currentOrientation),w	;volatile
  8905  0A51  2A52               	goto	l1433
  8906                           	
  8907  0A52                     l10038:	
  8908                           	line	73
  8909                           	
  8910  0A52                     l1433:	
  8911  0A52  0008               	return
  8912                           	opt stack 0
  8913                           GLOBAL	__end_of_getOrientation
  8914  0A53                     	__end_of_getOrientation:
  8915 ;; =============== function _getOrientation ends ============
  8916                           
  8917                           	signat	_getOrientation,89
  8918                           	global	_ser_putch
  8919                           psect	text1595,local,class=CODE,delta=2
  8920                           global __ptext1595
  8921  0B78                     __ptext1595:
  8922                           
  8923 ;; *************** function _ser_putch *****************
  8924 ;; Defined at:
  8925 ;;		line 81 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  c               1    wreg     unsigned char 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  c               1   11[BANK0 ] unsigned char 
  8930 ;; Return value:  Size  Location     Type
  8931 ;;		None               void
  8932 ;; Registers used:
  8933 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8939 ;;      Params:         0       0       0       0       0
  8940 ;;      Locals:         0       1       0       0       0
  8941 ;;      Temps:          0       1       0       0       0
  8942 ;;      Totals:         0       2       0       0       0
  8943 ;;Total ram usage:        2 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    2
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_drive
  8950 ;;		_driveForDistance
  8951 ;;		_waitFor
  8952 ;;		_initIRobot
  8953 ;;		_ser_putArr
  8954 ;;		_play_iCreate_song
  8955 ;;		_ser_puts
  8956 ;;		_ser_puts2
  8957 ;;		_ser_puthex
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           psect	text1595
  8961                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\ser.c"
  8962                           	line	81
  8963                           	global	__size_of_ser_putch
  8964  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  8965                           	
  8966  0B78                     _ser_putch:	
  8967                           	opt	stack 3
  8968                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  8969                           ;ser_putch@c stored from wreg
  8970  0B78  1283               	bcf	status, 5	;RP0=0, select bank0
  8971  0B79  1303               	bcf	status, 6	;RP1=0, select bank0
  8972  0B7A  00AB               	movwf	(ser_putch@c)
  8973                           	line	82
  8974                           	
  8975  0B7B                     l10024:	
  8976                           ;ser.c: 82: while (((txiptr+1) & (16-1))==txoptr)
  8977  0B7B  2B7D               	goto	l10026
  8978                           	
  8979  0B7C                     l4577:	
  8980                           	line	83
  8981                           ;ser.c: 83: continue;
  8982  0B7C  2B7D               	goto	l10026
  8983                           	
  8984  0B7D                     l4576:	
  8985                           	line	82
  8986                           	
  8987  0B7D                     l10026:	
  8988  0B7D  0879               	movf	(_txiptr),w	;volatile
  8989  0B7E  3E01               	addlw	01h
  8990  0B7F  390F               	andlw	0Fh
  8991  0B80  0662               	xorwf	(_txoptr),w	;volatile
  8992  0B81  1903               	skipnz
  8993  0B82  2B84               	goto	u3931
  8994  0B83  2B85               	goto	u3930
  8995  0B84                     u3931:
  8996  0B84  2B7D               	goto	l10026
  8997  0B85                     u3930:
  8998                           	
  8999  0B85                     l4578:	
  9000                           	line	84
  9001                           ;ser.c: 84: GIE=0;
  9002  0B85  138B               	bcf	(95/8),(95)&7
  9003                           	line	85
  9004                           	
  9005  0B86                     l10028:	
  9006                           ;ser.c: 85: txfifo[txiptr] = c;
  9007  0B86  082B               	movf	(ser_putch@c),w
  9008  0B87  00AA               	movwf	(??_ser_putch+0)+0
  9009  0B88  0879               	movf	(_txiptr),w
  9010  0B89  3ECE               	addlw	_txfifo&0ffh
  9011  0B8A  0084               	movwf	fsr0
  9012  0B8B  082A               	movf	(??_ser_putch+0)+0,w
  9013  0B8C  1383               	bcf	status, 7	;select IRP bank1
  9014  0B8D  0080               	movwf	indf
  9015                           	line	86
  9016                           	
  9017  0B8E                     l10030:	
  9018                           ;ser.c: 86: txiptr=(txiptr+1) & (16-1);
  9019  0B8E  0879               	movf	(_txiptr),w	;volatile
  9020  0B8F  3E01               	addlw	01h
  9021  0B90  390F               	andlw	0Fh
  9022  0B91  00AA               	movwf	(??_ser_putch+0)+0
  9023  0B92  082A               	movf	(??_ser_putch+0)+0,w
  9024  0B93  00F9               	movwf	(_txiptr)	;volatile
  9025                           	line	87
  9026                           	
  9027  0B94                     l10032:	
  9028                           ;ser.c: 87: TXIE=1;
  9029  0B94  1683               	bsf	status, 5	;RP0=1, select bank1
  9030  0B95  1303               	bcf	status, 6	;RP1=0, select bank1
  9031  0B96  160C               	bsf	(1124/8)^080h,(1124)&7
  9032                           	line	88
  9033                           	
  9034  0B97                     l10034:	
  9035                           ;ser.c: 88: GIE=1;
  9036  0B97  178B               	bsf	(95/8),(95)&7
  9037                           	line	89
  9038                           	
  9039  0B98                     l4579:	
  9040  0B98  0008               	return
  9041                           	opt stack 0
  9042                           GLOBAL	__end_of_ser_putch
  9043  0B99                     	__end_of_ser_putch:
  9044 ;; =============== function _ser_putch ends ============
  9045                           
  9046                           	signat	_ser_putch,4216
  9047                           	global	_isr1
  9048                           psect	text1596,local,class=CODE,delta=2
  9049                           global __ptext1596
  9050  01E4                     __ptext1596:
  9051                           
  9052 ;; *************** function _isr1 *****************
  9053 ;; Defined at:
  9054 ;;		line 47 in file "C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;		None               void
  9061 ;; Registers used:
  9062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9068 ;;      Params:         0       0       0       0       0
  9069 ;;      Locals:         0       0       0       0       0
  9070 ;;      Temps:          0      10       0       0       0
  9071 ;;      Totals:         0      10       0       0       0
  9072 ;;Total ram usage:       10 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    1
  9075 ;; This function calls:
  9076 ;;		___lwmod
  9077 ;; This function is called by:
  9078 ;;		Interrupt level 1
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           psect	text1596
  9082                           	file	"C:\Users\10999959\Desktop\COMPETITIONv0.4\main.c"
  9083                           	line	47
  9084                           	global	__size_of_isr1
  9085  00CA                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  9086                           	
  9087  01E4                     _isr1:	
  9088                           	opt	stack 0
  9089                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9090                           psect	intentry,class=CODE,delta=2
  9091                           global __pintentry
  9092  0004                     __pintentry:
  9093                           global interrupt_function
  9094  0004                     interrupt_function:
  9095                           	global saved_w
  9096  007E                     	saved_w	set	btemp+0
  9097  0004  00FE               	movwf	saved_w
  9098  0005  0E03               	swapf	status,w
  9099  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  9100  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  9101  0008  00A6               	movwf	(??_isr1+6)
  9102  0009  0804               	movf	fsr0,w
  9103  000A  00A7               	movwf	(??_isr1+7)
  9104  000B  080A               	movf	pclath,w
  9105  000C  00A8               	movwf	(??_isr1+8)
  9106  000D  087F               	movf	btemp+1,w
  9107  000E  00A9               	movwf	(??_isr1+9)
  9108  000F  120A  118A  29E4   	ljmp	_isr1
  9109                           psect	text1596
  9110                           	line	49
  9111                           	
  9112  01E4                     i1l9126:	
  9113                           ;main.c: 49: if(TMR0IF)
  9114  01E4  1D0B               	btfss	(90/8),(90)&7
  9115  01E5  29E7               	goto	u303_21
  9116  01E6  29E8               	goto	u303_20
  9117  01E7                     u303_21:
  9118  01E7  2AA2               	goto	i1l2998
  9119  01E8                     u303_20:
  9120                           	line	51
  9121                           	
  9122  01E8                     i1l9128:	
  9123                           ;main.c: 50: {
  9124                           ;main.c: 51: TMR0IF = 0;
  9125  01E8  110B               	bcf	(90/8),(90)&7
  9126                           	line	52
  9127                           	
  9128  01E9                     i1l9130:	
  9129                           ;main.c: 52: TMR0 = 100;
  9130  01E9  3064               	movlw	(064h)
  9131  01EA  0081               	movwf	(1)	;volatile
  9132                           	line	54
  9133                           ;main.c: 54: RTC_Counter++;
  9134  01EB  3001               	movlw	low(01h)
  9135  01EC  07D9               	addwf	(_RTC_Counter),f	;volatile
  9136  01ED  1803               	skipnc
  9137  01EE  0ADA               	incf	(_RTC_Counter+1),f	;volatile
  9138  01EF  3000               	movlw	high(01h)
  9139  01F0  07DA               	addwf	(_RTC_Counter+1),f	;volatile
  9140                           	line	56
  9141                           	
  9142  01F1                     i1l9132:	
  9143                           ;main.c: 56: RTC_FLAG_1MS = 1;
  9144  01F1  14F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  9145                           	line	58
  9146                           	
  9147  01F2                     i1l9134:	
  9148                           ;main.c: 58: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  9149  01F2  300A               	movlw	low(0Ah)
  9150  01F3  00F2               	movwf	(?___lwmod)
  9151  01F4  3000               	movlw	high(0Ah)
  9152  01F5  00F3               	movwf	((?___lwmod))+1
  9153  01F6  085A               	movf	(_RTC_Counter+1),w	;volatile
  9154  01F7  01F5               	clrf	1+(?___lwmod)+02h
  9155  01F8  07F5               	addwf	1+(?___lwmod)+02h
  9156  01F9  0859               	movf	(_RTC_Counter),w	;volatile
  9157  01FA  01F4               	clrf	0+(?___lwmod)+02h
  9158  01FB  07F4               	addwf	0+(?___lwmod)+02h
  9159                           
  9160  01FC  120A  118A  277A   	fcall	___lwmod
              120A  118A         
  9161  0201  0873               	movf	((1+(?___lwmod))),w
  9162  0202  0472               	iorwf	((0+(?___lwmod))),w
  9163  0203  1D03               	skipz
  9164  0204  2A06               	goto	u304_21
  9165  0205  2A07               	goto	u304_20
  9166  0206                     u304_21:
  9167  0206  2A09               	goto	i1l9138
  9168  0207                     u304_20:
  9169                           	
  9170  0207                     i1l9136:	
  9171  0207  1470               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  9172  0208  2A09               	goto	i1l9138
  9173                           	
  9174  0209                     i1l2988:	
  9175                           	line	59
  9176                           	
  9177  0209                     i1l9138:	
  9178                           ;main.c: 59: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  9179  0209  3032               	movlw	low(032h)
  9180  020A  00F2               	movwf	(?___lwmod)
  9181  020B  3000               	movlw	high(032h)
  9182  020C  00F3               	movwf	((?___lwmod))+1
  9183  020D  1283               	bcf	status, 5	;RP0=0, select bank0
  9184  020E  1303               	bcf	status, 6	;RP1=0, select bank0
  9185  020F  085A               	movf	(_RTC_Counter+1),w	;volatile
  9186  0210  01F5               	clrf	1+(?___lwmod)+02h
  9187  0211  07F5               	addwf	1+(?___lwmod)+02h
  9188  0212  0859               	movf	(_RTC_Counter),w	;volatile
  9189  0213  01F4               	clrf	0+(?___lwmod)+02h
  9190  0214  07F4               	addwf	0+(?___lwmod)+02h
  9191                           
  9192  0215  120A  118A  277A   	fcall	___lwmod
              120A  118A         
  9193  021A  0873               	movf	((1+(?___lwmod))),w
  9194  021B  0472               	iorwf	((0+(?___lwmod))),w
  9195  021C  1D03               	skipz
  9196  021D  2A1F               	goto	u305_21
  9197  021E  2A20               	goto	u305_20
  9198  021F                     u305_21:
  9199  021F  2A22               	goto	i1l9142
  9200  0220                     u305_20:
  9201                           	
  9202  0220                     i1l9140:	
  9203  0220  15F0               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  9204  0221  2A22               	goto	i1l9142
  9205                           	
  9206  0222                     i1l2989:	
  9207                           	line	60
  9208                           	
  9209  0222                     i1l9142:	
  9210                           ;main.c: 60: if(RTC_Counter % 500 == 0)
  9211  0222  30F4               	movlw	low(01F4h)
  9212  0223  00F2               	movwf	(?___lwmod)
  9213  0224  3001               	movlw	high(01F4h)
  9214  0225  00F3               	movwf	((?___lwmod))+1
  9215  0226  1283               	bcf	status, 5	;RP0=0, select bank0
  9216  0227  1303               	bcf	status, 6	;RP1=0, select bank0
  9217  0228  085A               	movf	(_RTC_Counter+1),w	;volatile
  9218  0229  01F5               	clrf	1+(?___lwmod)+02h
  9219  022A  07F5               	addwf	1+(?___lwmod)+02h
  9220  022B  0859               	movf	(_RTC_Counter),w	;volatile
  9221  022C  01F4               	clrf	0+(?___lwmod)+02h
  9222  022D  07F4               	addwf	0+(?___lwmod)+02h
  9223                           
  9224  022E  120A  118A  277A   	fcall	___lwmod
              120A  118A         
  9225                           	line	63
  9226                           ;main.c: 61: {
  9227                           	
  9228  0233                     i1l2990:	
  9229                           	line	65
  9230                           ;main.c: 63: }
  9231                           ;main.c: 65: if(!RB0)
  9232  0233  1283               	bcf	status, 5	;RP0=0, select bank0
  9233  0234  1303               	bcf	status, 6	;RP1=0, select bank0
  9234  0235  1806               	btfsc	(48/8),(48)&7
  9235  0236  2A38               	goto	u306_21
  9236  0237  2A39               	goto	u306_20
  9237  0238                     u306_21:
  9238  0238  2A59               	goto	i1l2991
  9239  0239                     u306_20:
  9240                           	line	67
  9241                           	
  9242  0239                     i1l9144:	
  9243                           ;main.c: 66: {
  9244                           ;main.c: 67: start.debounceCount++;
  9245  0239  3001               	movlw	(01h)
  9246  023A  00A0               	movwf	(??_isr1+0)+0
  9247  023B  0820               	movf	(??_isr1+0)+0,w
  9248  023C  07D8               	addwf	0+(_start)+02h,f
  9249                           	line	68
  9250                           	
  9251  023D                     i1l9146:	
  9252                           ;main.c: 68: if(start.debounceCount >= 10 & start.released)
  9253  023D  0857               	movf	0+(_start)+01h,w
  9254  023E  00A0               	movwf	(??_isr1+0)+0
  9255  023F  01A1               	clrf	(??_isr1+0)+0+1
  9256  0240  300A               	movlw	(0Ah)
  9257  0241  0258               	subwf	0+(_start)+02h,w
  9258  0242  3000               	movlw	0
  9259  0243  1803               	skipnc
  9260  0244  3001               	movlw	1
  9261  0245  00A2               	movwf	(??_isr1+2)+0
  9262  0246  01A3               	clrf	(??_isr1+2)+0+1
  9263  0247  0820               	movf	0+(??_isr1+0)+0,w
  9264  0248  0522               	andwf	0+(??_isr1+2)+0,w
  9265  0249  00A4               	movwf	(??_isr1+4)+0
  9266  024A  0821               	movf	1+(??_isr1+0)+0,w
  9267  024B  0523               	andwf	1+(??_isr1+2)+0,w
  9268  024C  00A5               	movwf	1+(??_isr1+4)+0
  9269  024D  0825               	movf	1+(??_isr1+4)+0,w
  9270  024E  0424               	iorwf	0+(??_isr1+4)+0,w
  9271  024F  1903               	skipnz
  9272  0250  2A52               	goto	u307_21
  9273  0251  2A53               	goto	u307_20
  9274  0252                     u307_21:
  9275  0252  2A5E               	goto	i1l9154
  9276  0253                     u307_20:
  9277                           	line	70
  9278                           	
  9279  0253                     i1l9148:	
  9280                           ;main.c: 69: {
  9281                           ;main.c: 70: start.pressed = 1;
  9282  0253  01D6               	clrf	(_start)
  9283  0254  1403               	bsf	status,0
  9284  0255  0DD6               	rlf	(_start),f
  9285                           	line	71
  9286                           	
  9287  0256                     i1l9150:	
  9288                           ;main.c: 71: start.released = 0;
  9289  0256  01D7               	clrf	0+(_start)+01h
  9290  0257  2A5E               	goto	i1l9154
  9291                           	line	72
  9292                           	
  9293  0258                     i1l2992:	
  9294                           	line	73
  9295                           ;main.c: 72: }
  9296                           ;main.c: 73: }
  9297  0258  2A5E               	goto	i1l9154
  9298                           	line	74
  9299                           	
  9300  0259                     i1l2991:	
  9301                           	line	76
  9302                           ;main.c: 74: else
  9303                           ;main.c: 75: {
  9304                           ;main.c: 76: start.debounceCount = 0;
  9305  0259  01D8               	clrf	0+(_start)+02h
  9306                           	line	77
  9307                           	
  9308  025A                     i1l9152:	
  9309                           ;main.c: 77: start.released = 1;
  9310  025A  01D7               	clrf	0+(_start)+01h
  9311  025B  1403               	bsf	status,0
  9312  025C  0DD7               	rlf	0+(_start)+01h,f
  9313  025D  2A5E               	goto	i1l9154
  9314                           	line	78
  9315                           	
  9316  025E                     i1l2993:	
  9317                           	line	80
  9318                           	
  9319  025E                     i1l9154:	
  9320                           ;main.c: 78: }
  9321                           ;main.c: 80: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  9322  025E  1E8C               	btfss	(101/8),(101)&7
  9323  025F  2A61               	goto	u308_21
  9324  0260  2A62               	goto	u308_20
  9325  0261                     u308_21:
  9326  0261  2A7C               	goto	i1l9164
  9327  0262                     u308_20:
  9328                           	
  9329  0262                     i1l9156:	
  9330  0262  081A               	movf	(26),w	;volatile
  9331  0263  00A0               	movwf	(??_isr1+0)+0
  9332  0264  0878               	movf	(_rxiptr),w
  9333  0265  3E46               	addlw	_rxfifo&0ffh
  9334  0266  0084               	movwf	fsr0
  9335  0267  0820               	movf	(??_isr1+0)+0,w
  9336  0268  1383               	bcf	status, 7	;select IRP bank0
  9337  0269  0080               	movwf	indf
  9338                           	
  9339  026A                     i1l9158:	
  9340  026A  0878               	movf	(_rxiptr),w	;volatile
  9341  026B  3E01               	addlw	01h
  9342  026C  390F               	andlw	0Fh
  9343  026D  00A0               	movwf	(??_isr1+0)+0
  9344  026E  0820               	movf	(??_isr1+0)+0,w
  9345  026F  00E1               	movwf	(_ser_tmp)
  9346                           	
  9347  0270                     i1l9160:	
  9348  0270  0861               	movf	(_ser_tmp),w
  9349  0271  0660               	xorwf	(_rxoptr),w	;volatile
  9350  0272  1903               	skipnz
  9351  0273  2A75               	goto	u309_21
  9352  0274  2A76               	goto	u309_20
  9353  0275                     u309_21:
  9354  0275  2A7C               	goto	i1l9164
  9355  0276                     u309_20:
  9356                           	
  9357  0276                     i1l9162:	
  9358  0276  0861               	movf	(_ser_tmp),w
  9359  0277  00A0               	movwf	(??_isr1+0)+0
  9360  0278  0820               	movf	(??_isr1+0)+0,w
  9361  0279  00F8               	movwf	(_rxiptr)	;volatile
  9362  027A  2A7C               	goto	i1l9164
  9363                           	
  9364  027B                     i1l2995:	
  9365  027B  2A7C               	goto	i1l9164
  9366                           	
  9367  027C                     i1l2994:	
  9368                           	
  9369  027C                     i1l9164:	
  9370  027C  1E0C               	btfss	(100/8),(100)&7
  9371  027D  2A7F               	goto	u310_21
  9372  027E  2A80               	goto	u310_20
  9373  027F                     u310_21:
  9374  027F  2AA2               	goto	i1l2998
  9375  0280                     u310_20:
  9376                           	
  9377  0280                     i1l9166:	
  9378  0280  1683               	bsf	status, 5	;RP0=1, select bank1
  9379  0281  1303               	bcf	status, 6	;RP1=0, select bank1
  9380  0282  1E0C               	btfss	(1124/8)^080h,(1124)&7
  9381  0283  2A85               	goto	u311_21
  9382  0284  2A86               	goto	u311_20
  9383  0285                     u311_21:
  9384  0285  2AA2               	goto	i1l2998
  9385  0286                     u311_20:
  9386                           	
  9387  0286                     i1l9168:	
  9388  0286  1283               	bcf	status, 5	;RP0=0, select bank0
  9389  0287  1303               	bcf	status, 6	;RP1=0, select bank0
  9390  0288  0862               	movf	(_txoptr),w
  9391  0289  3ECE               	addlw	_txfifo&0ffh
  9392  028A  0084               	movwf	fsr0
  9393  028B  1383               	bcf	status, 7	;select IRP bank1
  9394  028C  0800               	movf	indf,w
  9395  028D  0099               	movwf	(25)	;volatile
  9396                           	
  9397  028E                     i1l9170:	
  9398  028E  3001               	movlw	(01h)
  9399  028F  00A0               	movwf	(??_isr1+0)+0
  9400  0290  0820               	movf	(??_isr1+0)+0,w
  9401  0291  07E2               	addwf	(_txoptr),f	;volatile
  9402                           	
  9403  0292                     i1l9172:	
  9404  0292  300F               	movlw	(0Fh)
  9405  0293  00A0               	movwf	(??_isr1+0)+0
  9406  0294  0820               	movf	(??_isr1+0)+0,w
  9407  0295  05E2               	andwf	(_txoptr),f	;volatile
  9408                           	
  9409  0296                     i1l9174:	
  9410  0296  0862               	movf	(_txoptr),w	;volatile
  9411  0297  0679               	xorwf	(_txiptr),w	;volatile
  9412  0298  1D03               	skipz
  9413  0299  2A9B               	goto	u312_21
  9414  029A  2A9C               	goto	u312_20
  9415  029B                     u312_21:
  9416  029B  2AA2               	goto	i1l2998
  9417  029C                     u312_20:
  9418                           	
  9419  029C                     i1l9176:	
  9420  029C  1683               	bsf	status, 5	;RP0=1, select bank1
  9421  029D  1303               	bcf	status, 6	;RP1=0, select bank1
  9422  029E  120C               	bcf	(1124/8)^080h,(1124)&7
  9423  029F  2AA2               	goto	i1l2998
  9424                           	
  9425  02A0                     i1l2997:	
  9426  02A0  2AA2               	goto	i1l2998
  9427                           	
  9428  02A1                     i1l2996:	
  9429  02A1  2AA2               	goto	i1l2998
  9430                           	line	81
  9431                           	
  9432  02A2                     i1l2987:	
  9433                           	line	82
  9434                           	
  9435  02A2                     i1l2998:	
  9436  02A2  1283               	bcf	status, 5	;RP0=0, select bank0
  9437  02A3  0829               	movf	(??_isr1+9),w
  9438  02A4  00FF               	movwf	btemp+1
  9439  02A5  0828               	movf	(??_isr1+8),w
  9440  02A6  008A               	movwf	pclath
  9441  02A7  0827               	movf	(??_isr1+7),w
  9442  02A8  0084               	movwf	fsr0
  9443  02A9  0E26               	swapf	(??_isr1+6)^00h,w
  9444  02AA  0083               	movwf	status
  9445  02AB  0EFE               	swapf	saved_w,f
  9446  02AC  0E7E               	swapf	saved_w,w
  9447  02AD  0009               	retfie
  9448                           	opt stack 0
  9449                           GLOBAL	__end_of_isr1
  9450  02AE                     	__end_of_isr1:
  9451 ;; =============== function _isr1 ends ============
  9452                           
  9453                           	signat	_isr1,88
  9454                           	global	___lwmod
  9455                           psect	text1597,local,class=CODE,delta=2
  9456                           global __ptext1597
  9457  077A                     __ptext1597:
  9458                           
  9459 ;; *************** function ___lwmod *****************
  9460 ;; Defined at:
  9461 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  divisor         2    0[COMMON] unsigned int 
  9464 ;;  dividend        2    2[COMMON] unsigned int 
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;  counter         1    5[COMMON] unsigned char 
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  2    0[COMMON] unsigned int 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9476 ;;      Params:         4       0       0       0       0
  9477 ;;      Locals:         1       0       0       0       0
  9478 ;;      Temps:          1       0       0       0       0
  9479 ;;      Totals:         6       0       0       0       0
  9480 ;;Total ram usage:        6 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; This function calls:
  9483 ;;		Nothing
  9484 ;; This function is called by:
  9485 ;;		_isr1
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           psect	text1597
  9489                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  9490                           	line	5
  9491                           	global	__size_of___lwmod
  9492  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  9493                           	
  9494  077A                     ___lwmod:	
  9495                           	opt	stack 0
  9496                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9497                           	line	8
  9498                           	
  9499  077A                     i1l9422:	
  9500  077A  0873               	movf	(___lwmod@divisor+1),w
  9501  077B  0472               	iorwf	(___lwmod@divisor),w
  9502  077C  1903               	skipnz
  9503  077D  2F7F               	goto	u333_21
  9504  077E  2F80               	goto	u333_20
  9505  077F                     u333_21:
  9506  077F  2FB6               	goto	i1l9440
  9507  0780                     u333_20:
  9508                           	line	9
  9509                           	
  9510  0780                     i1l9424:	
  9511  0780  01F7               	clrf	(___lwmod@counter)
  9512  0781  1403               	bsf	status,0
  9513  0782  0DF7               	rlf	(___lwmod@counter),f
  9514                           	line	10
  9515  0783  2F90               	goto	i1l9430
  9516                           	
  9517  0784                     i1l6714:	
  9518                           	line	11
  9519                           	
  9520  0784                     i1l9426:	
  9521  0784  3001               	movlw	01h
  9522                           	
  9523  0785                     u334_25:
  9524  0785  1003               	clrc
  9525  0786  0DF2               	rlf	(___lwmod@divisor),f
  9526  0787  0DF3               	rlf	(___lwmod@divisor+1),f
  9527  0788  3EFF               	addlw	-1
  9528  0789  1D03               	skipz
  9529  078A  2F85               	goto	u334_25
  9530                           	line	12
  9531                           	
  9532  078B                     i1l9428:	
  9533  078B  3001               	movlw	(01h)
  9534  078C  00F6               	movwf	(??___lwmod+0)+0
  9535  078D  0876               	movf	(??___lwmod+0)+0,w
  9536  078E  07F7               	addwf	(___lwmod@counter),f
  9537  078F  2F90               	goto	i1l9430
  9538                           	line	13
  9539                           	
  9540  0790                     i1l6713:	
  9541                           	line	10
  9542                           	
  9543  0790                     i1l9430:	
  9544  0790  1FF3               	btfss	(___lwmod@divisor+1),(15)&7
  9545  0791  2F93               	goto	u335_21
  9546  0792  2F94               	goto	u335_20
  9547  0793                     u335_21:
  9548  0793  2F84               	goto	i1l9426
  9549  0794                     u335_20:
  9550  0794  2F96               	goto	i1l9432
  9551                           	
  9552  0795                     i1l6715:	
  9553  0795  2F96               	goto	i1l9432
  9554                           	line	14
  9555                           	
  9556  0796                     i1l6716:	
  9557                           	line	15
  9558                           	
  9559  0796                     i1l9432:	
  9560  0796  0873               	movf	(___lwmod@divisor+1),w
  9561  0797  0275               	subwf	(___lwmod@dividend+1),w
  9562  0798  1D03               	skipz
  9563  0799  2F9C               	goto	u336_25
  9564  079A  0872               	movf	(___lwmod@divisor),w
  9565  079B  0274               	subwf	(___lwmod@dividend),w
  9566  079C                     u336_25:
  9567  079C  1C03               	skipc
  9568  079D  2F9F               	goto	u336_21
  9569  079E  2FA0               	goto	u336_20
  9570  079F                     u336_21:
  9571  079F  2FA7               	goto	i1l9436
  9572  07A0                     u336_20:
  9573                           	line	16
  9574                           	
  9575  07A0                     i1l9434:	
  9576  07A0  0872               	movf	(___lwmod@divisor),w
  9577  07A1  02F4               	subwf	(___lwmod@dividend),f
  9578  07A2  0873               	movf	(___lwmod@divisor+1),w
  9579  07A3  1C03               	skipc
  9580  07A4  03F5               	decf	(___lwmod@dividend+1),f
  9581  07A5  02F5               	subwf	(___lwmod@dividend+1),f
  9582  07A6  2FA7               	goto	i1l9436
  9583                           	
  9584  07A7                     i1l6717:	
  9585                           	line	17
  9586                           	
  9587  07A7                     i1l9436:	
  9588  07A7  3001               	movlw	01h
  9589                           	
  9590  07A8                     u337_25:
  9591  07A8  1003               	clrc
  9592  07A9  0CF3               	rrf	(___lwmod@divisor+1),f
  9593  07AA  0CF2               	rrf	(___lwmod@divisor),f
  9594  07AB  3EFF               	addlw	-1
  9595  07AC  1D03               	skipz
  9596  07AD  2FA8               	goto	u337_25
  9597                           	line	18
  9598                           	
  9599  07AE                     i1l9438:	
  9600  07AE  3001               	movlw	low(01h)
  9601  07AF  02F7               	subwf	(___lwmod@counter),f
  9602  07B0  1D03               	btfss	status,2
  9603  07B1  2FB3               	goto	u338_21
  9604  07B2  2FB4               	goto	u338_20
  9605  07B3                     u338_21:
  9606  07B3  2F96               	goto	i1l9432
  9607  07B4                     u338_20:
  9608  07B4  2FB6               	goto	i1l9440
  9609                           	
  9610  07B5                     i1l6718:	
  9611  07B5  2FB6               	goto	i1l9440
  9612                           	line	19
  9613                           	
  9614  07B6                     i1l6712:	
  9615                           	line	20
  9616                           	
  9617  07B6                     i1l9440:	
  9618  07B6  0875               	movf	(___lwmod@dividend+1),w
  9619  07B7  01F3               	clrf	(?___lwmod+1)
  9620  07B8  07F3               	addwf	(?___lwmod+1)
  9621  07B9  0874               	movf	(___lwmod@dividend),w
  9622  07BA  01F2               	clrf	(?___lwmod)
  9623  07BB  07F2               	addwf	(?___lwmod)
  9624                           
  9625  07BC  2FBD               	goto	i1l6719
  9626                           	
  9627  07BD                     i1l9442:	
  9628                           	line	21
  9629                           	
  9630  07BD                     i1l6719:	
  9631  07BD  0008               	return
  9632                           	opt stack 0
  9633                           GLOBAL	__end_of___lwmod
  9634  07BE                     	__end_of___lwmod:
  9635 ;; =============== function ___lwmod ends ============
  9636                           
  9637                           	signat	___lwmod,8314
  9638                           psect	text1598,local,class=CODE,delta=2
  9639                           global __ptext1598
  9640  0000                     __ptext1598:
  9641                           	global	btemp
  9642  007E                     	btemp set 07Eh
  9643                           
  9644                           	DABS	1,126,2	;btemp
  9645                           	global	wtemp0
  9646  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue May 21 15:29:59 2013

            __end_of_lookForVictim 1000          __end_of_lcd_write_control 0AD8  
        __end_of_updateOrientation 0A8C                                  pc 0002  
                               _GO 00FA                                 _RD 0C60  
                               _WR 0C61                       ___awdiv@sign 0036  
                               fsr 0004                ___wmul@multiplicand 002C  
                 ??_getOrientation 002A                                l700 0AED  
                              l703 0F8B                                l704 0F8B  
                              l705 0F90                                l706 0FBF  
                              l690 069F                                l691 06D5  
                              l692 06A5                                l693 06AB  
                              l694 06B1                                l695 06B7  
                              l696 06BD                                l689 06C4  
                              l697 06EE                                _GIE 005F  
                              _RB0 0030                                _RE0 0048  
                              _RE1 0049                                _RE2 004A  
                              _RX9 00C6                                _TX9 04C6  
                  ??_getVictimZone 002B                                fsr0 0004  
                              indf 0000                 drive@highByteSpeed 0032  
        lcd_write_1_digit_bcd@data 002D                    ?_lcd_set_cursor 0072  
           __end_of_updateLocation 069B                               l3001 0DE8  
                             l3011 0FFF                               l3004 0B3B  
                             l2204 0CFC                               l3012 0FDE  
                             l3020 02FF                               l3013 0FFE  
                             l3021 0328                               l1430 063A  
                             l3014 0FFF                               l3030 0BFE  
                             l3022 032E                               l1423 0E1F  
                             l3007 0D55                               l3031 0C04  
                             l3023 033C                               l3008 0D55  
                             l3040 0665                               l3032 0C06  
                             l1433 0A52                               l3041 066E  
                             l3017 02CA                               l3050 0F40  
                             l1426 062A                               l1442 0B1F  
                             l3042 069A                               l3026 0BEA  
                             l3018 02D0                               l3051 0F42  
                             l1427 05E6                               l3035 0670  
                             l3027 0C06                               l3019 02F9  
                             l2180 0AB0                               l1428 062A  
                             l1460 0E56                               l3036 0642  
                             l3028 0BF4                               l3060 04D1  
                             l3045 0F17                               l1429 062F  
                             l1445 0C56                               l3037 0682  
                             l3029 0C05                               l3061 04AC  
                             l3046 0F42                               l1470 0C7F  
                             l3054 0B77                               l1454 0CD1  
                             l3038 064F                               l3070 04D7  
                             l3062 0492                               l3047 0F2A  
                             l2183 0A6F                               l1463 0F80  
                             l3055 0B77                               l1439 0CA8  
                             l3039 0658                               l3063 04BC  
                             l3048 0F41                               l2192 0A7A  
                             l3064 0498                               l3049 0F3C  
                             l2177 0AD7                               l1457 0779  
                             l1473 0369                               l3073 0B54  
                             l3065 049E                               l1466 0A8B  
                             l2186 0BD2                               l1474 0351  
                             l1490 0452                               l1482 03E4  
                             l3074 0B57                               l3058 04D2  
                             l3066 04A4                               l1467 0A8B  
                             l2187 0BBF                               l1475 037E  
                             l1483 03CC                               l3075 0B57  
                             l3067 04AA                               l3059 047C  
                             l2188 0BDF                               l1476 0397  
                             l1484 03F9                               l3068 04D0  
                             l2189 0BDF                               l1477 037F  
                             l1485 041D                               l3069 04D7  
                             l1478 03AC                               l1486 0405  
                             l1479 03CA                               l6000 01DF  
                             l1488 0446                               l6001 0190  
                             l1489 0447                               l6010 071F  
                             l6002 01DE                               l6011 070B  
                             l6003 01D7                               l6012 0726  
                             l6004 01DD                               l6013 0734  
                             l5301 0F04                               l6007 0DB2  
                             l4601 0C2E                               l3821 0A57  
                             l3830 04DF                               l3831 04F3  
                             l3824 0A5C                               l3840 04FF  
                             l3832 04E4                               l4560 0AF9  
                             l3841 050A                               l3833 04E9  
                             l4561 0B04                               l3834 0556  
                             l3850 0534                               l3842 0516  
                             l4570 0EB8                               l3827 0545  
                             l3851 0525                               l3843 050B  
                             l3835 04F4                               l4571 0E94  
                             l3852 052A                               l3844 051E  
                             l3836 0501                               l3828 04DE  
                             l4564 0B9B                               l4572 0EC7  
                             l3853 0535                               l3845 0510  
                             l3837 04F5                               l3829 04EB  
                             l4565 0B9A                               l4573 0EC7  
                             l3854 053D                               l3846 0514  
                             l3838 0509                               l4566 0BA4  
                             l3855 0536                               l3847 051F  
                             l3839 04FA                               l4567 0BBA  
                             l4576 0B7D                               l3856 0542  
                             l3848 052C                               l4577 0B7C  
                             l3857 053B                               l3849 0520  
                             l4578 0B85                               l3858 0543  
                             l5298 0A9D                               l4579 0B98  
                             l3859 0558                               l6840 0583  
                             l6841 0594                               l6842 0595  
                             l6843 05AE                               l6844 05BC  
                             l6836 0569                               l6845 05C7  
                             l6837 0577                               l6846 05CE  
                             l6838 05BD                               l5990 002D  
                             l6839 058F                               l5991 01E3  
                             l6696 0D02                               l5992 01E3  
                             l6697 0D0C                               l5993 0074  
                             l6698 0D21                               l5994 01E2  
                             l6699 0D28                               l5995 00BB  
                             l5996 01E1                               l5997 0102  
                             l5998 01E0                               l5999 0149  
                             _CHS0 00FB                               _CHS1 00FC  
                             _CHS2 00FD                               STR_1 0806  
                             STR_2 0817                               l9994 0B01  
                             l9996 0B03                               _BRGH 04C2  
                             _CREN 00C4                               u4000 0F11  
                             u4001 0F10                               u4010 0F1D  
                             u4011 0F1C                               u4020 0F23  
                             u4021 0F22                               u4030 0F30  
                             u4031 0F2F                               u4040 0F35  
                             u4200 056D                               u4041 0F34  
                             u4201 056C                               u4210 057F  
                             u4211 057E                               u4150 0D06  
                             u4230 0593                               u4310 0BA4  
                             u4151 0D05                               u4231 0592  
                             u4311 0BA3                               u4080 0AF4  
                             u4320 0725                               u4400 0158  
                             u4081 0AF3                               u4225 0584  
                             u4305 0FAB                               u4321 0724  
                             u4401 0157                               u4090 0AFF  
                             u4250 05A6                               u4330 0EA0  
                             u4410 019F                               u4091 0AFE  
                             u4251 05A5                               u4411 019E  
                             u4180 0D20                               u4340 0EC6  
                             u4420 0628                               u4500 0FC4  
                             u4181 0D1F                               u4165 0D0D  
                             u4245 0596                               u4341 0EC5  
                             u4405 0154                               u4421 0627  
                             u4501 0FC3                               u4270 05BB  
                             u4190 0560                               u4350 0024  
                             u4430 062E                               u4510 0FC8  
                             u4175 0D14                               u4271 05BA  
                             u4255 05A2                               u4191 055F  
                             u4415 019B                               u4351 0023  
                             u4431 062D                               u4511 0FC7  
                             u4280 05C1                               u4360 003C  
                             u4440 0BDE                               u4520 037D  
                             u4600 0BF8                               u4265 05AF  
                             u4345 0EC2                               u4361 003B  
                             u4425 0624                               u4441 0BDD  
                             u4521 037C                               u4601 0BF7  
                             u4290 0F8F                               u4370 0083  
                             u4450 0B5E                               u4530 03AB  
                             u4610 02BE                               u4291 0F8E  
                             u4371 0082                               u4355 0020  
                             u4451 0B5D                               u4531 03AA  
                             u4611 02BC                               _PEIE 005E  
                             u4380 00CA                               u4460 0B64  
                             u4540 03F8                               u4700 0482  
                             u4381 00C9                               u4365 0038  
                             u4461 0B63                               u4525 0379  
                             u4541 03F7                               u4390 0111  
                             u4470 0D2D                               u4550 0431  
                             u4630 02C3                               u4710 04CA  
                             u4391 0110                               u4375 007F  
                             u4471 0D2C                               u4535 03A7  
                             u4551 0430                               u4631 02C2  
                             u4711 04C9                               u4480 0D37  
                             u4560 0445                               u4640 02E8  
                             u4624 02BF                               u4720 04D6  
                             u4385 00C6                               u4481 0D36  
                             u4561 0444                               u4545 03F4  
                             u4641 02E6                               u4721 04D5  
                             u3930 0B85                               u4490 0D41  
                             u4570 0B50                               u3931 0B84  
                             u4395 010D                               u4491 0D40  
                             u4555 042D                               u4571 0B4F  
                             _RCIE 0465                               u3940 0A88  
                             u4580 0BE4                               u4660 02ED  
                             _RCIF 0065                               u3941 0A87  
                             u4565 0441                               u4581 0BE3  
                             u4661 02EC                               u4590 0BEE  
                             u4670 0317                               u4654 02E9  
                             u4807 06FE                               u4575 0B4C  
                             u4591 0BED                               u4671 0315  
                             u4817 0714                               u4737 0F7A  
                             u4690 031C                               u4827 072D  
                             u4747 0E50                               u4691 031B  
                             u4684 0318                               u4837 0C60  
                             u4757 0765                               u3990 0F0B  
                             u3991 0F0A                               u4847 0AAC  
                             u4767 0773                               u4857 0DF2  
                             u4777 06D8                               _OERR 00C1  
                             u4867 0AEB                               u4787 0B28  
                             u4797 0AD2                               _TMR0 0001  
                             _SPEN 00C7                               _TXIE 0464  
                             _WREN 0C62                               _TXEN 04C5  
                             _TXIF 0064                               _SYNC 04C4  
           __end_of_lcd_write_data 0AB1                               _isr1 01E4  
                             _main 0453                               _home 0386  
                             _init 0DB3                               _node 005F  
              drive@highByteRadius 002D                               btemp 007E  
                             start 0012                    rotateIR@stepNum 002F  
            _lcd_write_1_digit_bcd 0A70                  ?_driveForDistance 0033  
                      _turnRight90 0F43                              l10100 0C1C  
                            l10030 0B8E                              l10110 0C25  
                            l10102 0C1F                              l10032 0B94  
                            l10024 0B7B                              l10040 0A7E  
                            l10104 0C20                              l10112 0A53  
                            l10120 04DD                              l10034 0B97  
                            l10026 0B7D                              l10042 0A82  
                            l10106 0C23                              l10114 0A57  
                            l10130 04F5                              l10122 04DF  
                            l10028 0B86                              l10036 0A4E  
                            l10044 0A88                              l10108 0C24  
                            l10116 0A58                              l10140 0510  
                            l10132 04FA                              l10124 04E4  
                            l10038 0A52                              l10118 0A5C  
                            l10150 052B                              l10142 0515  
                            l10134 0500                              l10126 04EA  
                            l10160 0544                              l10152 052C  
                            l10144 0516                              l10136 0501  
                            l10128 04EB                              l10320 0D02  
                            l10400 0E17                              l10090 0C12  
                            l10154 0536                              l10146 0520  
                            l10138 050B                              l10162 0545  
                            l10170 0F0B                              l10322 0D06  
                            l10330 0559                              l10410 0BB3  
                            l10402 0B99                              l10092 0C13  
                            l10156 053C                              l10148 0525  
                            l10164 0556                              l10180 0F2A  
                            l10172 0F11                              l10324 0D13  
                            l10340 0577                              l10332 0560  
                            l10412 0BB7                              l10404 0B9B  
                            l10420 0AA4                              l10500 00BB  
                            l10094 0C15                              l10086 0C07  
                            l10166 0558                              l10158 053D  
                            l10182 0F30                              l10174 0F17  
                            l10270 0AEE                              l10326 0D21  
                            l10318 0CFD                              l10350 058F  
                            l10342 0579                              l10334 0569  
                            l10414 0BB8                              l10406 0BA5  
                            l10422 0AA6                              l10430 0C6F  
                            l10510 0111                              l10502 00CA  
                            l10096 0C16                              l10088 0C0A  
                            l10184 0F35                              l10176 0F1D  
                            l10168 0F05                              l10280 0AFF  
                            l10272 0AF4                              l10328 0D28  
                            l10360 05B5                              l10352 0595  
                            l10344 057F                              l10336 056D  
                            l10416 0BBA                              l10408 0BAF  
                            l10424 0AA7                              l10432 0C77  
                            l10440 0705                              l10520 018E  
                            l10512 0147                              l10504 0100  
                            l10600 0CD6                              l10098 0C19  
                            l10178 0F23                              l10282 0B01  
                            l10274 0AF6                              l10354 05A6  
                            l10346 0583                              l10362 05BD  
                            l10338 0572                              l10370 0F81  
                            l10418 0AA1                              l10426 0C5A  
                            l10450 0727                              l10442 070C  
                            l10434 06F2                              l10530 01D6  
                            l10522 018F                              l10514 0148  
                            l10506 0101                              l10610 0CE4  
                            l10602 0CD9                              l10284 0B04  
                            l10276 0AF8                              l10364 05C1  
                            l10356 05AC                              l10348 058A  
                            l10372 0F87                              l10380 0AD8  
                            l10428 0C67                              l10444 0710  
                            l10436 06F6                              l10452 0AC7  
                            l10460 0B20                              l10532 01D7  
                            l10524 0190                              l10516 0149  
                            l10508 0102                              l10540 06C2  
                            l10612 0CEA                              l10604 0CDA  
                            l10620 0B58                              l10700 0DE3  
                            l10278 0AF9                              l10366 05C7  
                            l10358 05AE                              l10374 0F90  
                            l10382 0ADB                              l10390 0DEC  
                            l10446 0719                              l10438 06F8  
                            l10454 0ACA                              l10462 0B2F  
                            l10470 0E94                              l10534 01DC  
                            l10526 019F                              l10518 0158  
                            l10550 06EE                              l10542 06C3  
                            l10614 0CF0                              l10606 0CDD  
                            l10622 0B5E                              l10630 0C8C  
                            l10710 0D47                              l10702 0D29  
                            l10368 05CE                              l10376 0FB8  
                            l10384 0ADF                              l10392 0DF9  
                            l10448 0726                              l10456 0ACC  
                            l10464 0B35                              l10472 0EAF  
                            l10528 01D5                              l10480 002B  
                            l10544 06C4                              l10536 069E  
                            l10560 0606                              l10552 05CF  
                            l10616 0CF6                              l10608 0CDE  
                            l10624 0B64                              l10632 0C91  
                            l10640 0B11                              l10712 0D48  
                            l10704 0D2D                              l10720 0FC8  
                            l10800 0B54                 ??_driveForDistance 0035  
                            l10378 0FBF                              l10386 0AE3  
                            l10394 0DFF                              l10458 0ACD  
                            l10466 0A8F                              l10474 0EB8  
                            l10490 0073                              l10482 002C  
                            l10538 06BD                              l10546 06D5  
                            l10562 0614                              l10554 05D5  
                            l10570 0A68                              l10618 0EC8  
                            l10626 0B75                              l10634 0C97  
                            l10642 0B1C                              l10650 0C46  
                            l10714 0D4E                              l10706 0D37  
                            l10730 0FEF                              l10722 0FCE  
                            l10802 0B56                              l10810 0BF8  
                            l10388 0AE7                              l10396 0E07  
                            l10468 0E8F                              l10492 0074  
                            l10484 002D                              l10476 0015  
                            l10548 06DA                              l10564 061A  
                            l10556 05D6                              l10572 0A69  
                            l10580 0E20                              l10636 0CA2  
                            l10628 0C80                              l10652 0C51  
                            l10644 0C2F                              l10660 0CC0  
                            l10708 0D41                              l10732 0FF5  
                            l10724 0FD1                              l10716 0FC0  
                            l10740 064F                              l10812 0BFE  
                            l10804 0BE0                              l10820 02C3  
                            l10398 0E0F                              l10494 0083  
                            l10486 003C                              l10478 0024  
                            l10566 0628                              l10558 05E6  
                            l10574 0735                              l10582 0E48  
                            l10590 0BBF                              l10638 0B05  
                            l10646 0C3B                              l10662 0CCB  
                            l10654 0CA9                              l10670 0DB3  
                            l10726 0FD7                              l10718 0FC4  
                            l10750 0667                              l10742 0651  
                            l10734 063B                              l10806 0BE4  
                            l10830 02F3                              l10822 02CA  
                            l10814 02AE                              l10496 00B9  
                            l10488 0072                              l10568 062F  
                            l10576 075D                              l10584 0F43  
                            l10592 0BCB                              l10648 0C40  
                            l10656 0CB5                              l10664 0D84  
                            l10680 0DC7                              l10672 0DB6  
                            l10728 0FDE                              l10752 066F  
                            l10744 0658                              l10736 0642  
                            l10760 0342                              l10808 0BEE  
                            l10840 0322                              l10832 02F9  
                            l10824 02DE                              l10816 02B4  
                            l10498 00BA                              l10578 076B  
                            l10586 0F72                              l10594 0BD2  
                            l10658 0CBA                              l10666 0DAB  
                            l10690 0DD4                              l10682 0DC9  
                            l10674 0DB9                              l10746 065E  
                            l10738 0648                              l10754 0670  
                            l10770 03AC                              l10762 0351  
                            l10842 0328                              l10834 030D  
                            l10826 02E9                              l10818 02BF  
                            l10850 0475                              l10588 0BBE  
                            l10596 0A73                              l10668 0DB2  
                            l10692 0DD7                              l10684 0DCA  
                            l10676 0DBE                              l10748 0665  
                            l10756 0682                              l10772 03B1  
                            l10764 0369                              l10780 03E4  
                            l10836 0318                              l10828 02ED  
                            l10860 0498                              l10852 047C  
                            l10844 0453                              l10598 0CD2  
                            l10694 0DD8                              l10686 0DCC  
                            l10678 0DC3                              l10774 03BF  
                            l10766 037F                              l10758 033D  
                            l10790 0447                              l10782 03F9  
                            l10838 031C                              l10862 049E  
                            l10870 04BC                              l10854 0482  
                            l10846 0463                              l10696 0DD9  
                            l10688 0DD0                              l10768 0397  
                            l10784 0405                              l10776 03CB  
                            l10792 0B3C                              l10872 04C1  
                            l10864 04A4                              l10856 048C  
                            l10848 0469                              l10698 0DDE  
                            l10786 041D                              l10778 03CC  
                            l10794 0B50                              l10874 04C6  
                            l10866 04AB                              l10858 0492  
                            l10788 0431                              l10796 0B52  
                            l10876 04CA                              l10868 04AC  
                            l10798 0B53                              l10878 04D2  
                            ?_isr1 0072                              ?_main 0072  
                            ?_init 0072                    __end_of___awdiv 05CF  
             __size_of_checkIfHome 0020                              _EEADR 010D  
                            _CARRY 0018                    ___awdiv@divisor 0030  
                  __end_of___lwmod 07BE                    ___awdiv@counter 0035  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _TRISE 0089                              _TXREG 0019  
           lcd_write_data@databyte 002C                    __end_of_goRight 0CD2  
                  __end_of_convert 01E4                              _drive 0DE9  
                  ?_updateLocation 0072                              _start 0056  
                   __pbitbssCOMMON 0380                    __end_of_waitFor 0C80  
                            pclath 000A                    ?_lcd_write_data 0072  
                ?_adc_read_channel 00DE                              status 0003  
                            wtemp0 007E                  ?_frontWallCorrect 0072  
               ??_adc_read_channel 0045               __end_of_goToNextCell 0C07  
               ??_frontWallCorrect 00E5         __size_of_lcd_write_control 0014  
                     __end_of_isr1 02AE                       __end_of_main 04DA  
                     __end_of_init 0DE9         __size_of_updateOrientation 0011  
                           ??_isr1 0020                             ??_main 0046  
                           ??_init 0035                             _ADCON0 001F  
                           _ADCON1 009F                             ?_drive 002C  
                           _ADRESH 001E                             _ADRESL 009E  
                           _EEDATA 010C                             _EECON1 018C  
                           _EECON2 018D                   ___awdiv@dividend 0032  
                 __end_of_adc_read 0FC0                             i1l2990 0233  
                           i1l2991 0259                             i1l2992 0258  
                           i1l2993 025E                             i1l2994 027C  
                           i1l2987 02A2                             i1l2995 027B  
                           i1l2996 02A1                             i1l2988 0209  
                           i1l2997 02A0                             i1l2989 0222  
                           i1l2998 02A2                             i1l6712 07B6  
                           u310_20 0280                             i1l6713 0790  
                           u310_21 027F                             i1l6714 0784  
                           i1l9130 01E9                             i1l6715 0795  
                           i1l6716 0796                             i1l9140 0220  
                           i1l9132 01F1                             i1l6717 07A7  
                           i1l6718 07B5                             i1l9150 0256  
                           i1l9142 0222                             i1l9134 01F2  
                           i1l9126 01E4                             i1l6719 07BD  
                           u311_20 0286                             i1l9160 0270  
                           i1l9152 025A                             i1l9144 0239  
                           i1l9136 0207                             i1l9128 01E8  
                           u303_20 01E8                             u311_21 0285  
                           u303_21 01E7                             i1l9170 028E  
                           i1l9162 0276                             i1l9154 025E  
                           i1l9146 023D                             i1l9138 0209  
                           i1l9172 0292                             i1l9156 0262  
                           i1l9164 027C                             i1l9148 0253  
                           i1l9430 0790                             i1l9422 077A  
                           i1l9174 0296                             i1l9166 0280  
                           i1l9158 026A                             i1l9432 0796  
                           i1l9424 0780                             i1l9440 07B6  
                           i1l9176 029C                             u312_20 029C  
                           i1l9168 0286                             u304_20 0207  
                           u312_21 029B                             u304_21 0206  
                           i1l9442 07BD                             i1l9434 07A0  
                           i1l9426 0784                             i1l9436 07A7  
                           i1l9428 078B                             i1l9438 07AE  
                           u305_20 0220                             u305_21 021F  
                           u306_20 0239                             u306_21 0238  
                           u307_20 0253                             u307_21 0252  
                           u308_20 0262                             u308_21 0261  
                           u333_20 0780                             u309_20 0276  
                           u333_21 077F                             u309_21 0275  
                           u334_25 0785                             u335_20 0794  
                           u335_21 0793                             u336_20 07A0  
                           u336_21 079F                             u336_25 079C  
                           u337_25 07A8                             u338_20 07B4  
                           u338_21 07B3                             _TMR0IE 005D  
                           _TMR0IF 005A                             _SSPCON 0014  
                           _SSPBUF 0013                   convert@adc_value 0041  
                rotateIR@direction 002A                   _rightWallCorrect 033D  
           ?_lcd_write_1_digit_bcd 0072                   __end_of_findWall 0B58  
                 __end_of_lcd_init 0CFD                             ___wmul 0CFD  
                        ??___awdiv 0034                             _goLeft 0C2F  
                           _finalX 005C                             _finalY 005D  
                        ??___lwmod 0076                             _xCoord 007A  
                           _yCoord 007B                             _readIR 0D84  
                 __end_of_init_adc 0AEE                   ___awdiv@quotient 0037  
         __end_of_lcd_write_string 0BE0                             _moving 0388  
                        ??_goRight 003D                             _rxfifo 0046  
                           clrloop 0A5E                             _txfifo 00CE  
                           _rxiptr 0078                             _rxoptr 0060  
                           _txiptr 0079                          ??_convert 0043  
                           _txoptr 0062                   __end_of_ser_init 0C2F  
                     __pdataCOMMON 007A                   __end_of_ser_isrx 0B05  
                           saved_w 007E                          ??_waitFor 002E  
                 __end_of_rotateIR 0735                  lcd_write_string@s 002E  
            play_iCreate_song@song 002C                      rotateIR@steps 002E  
                   __pcstackCOMMON 0072                       __pidataBANK1 0D56  
                     __pidataBANK3 0E57                      __end_of_drive 0E20  
                _play_iCreate_song 0A8C                 __size_of_goForward 001B  
               __size_of_getFinalX 0005                 __size_of_getFinalY 0005  
                 ??_lcd_set_cursor 002D                 ?_play_iCreate_song 0072  
               __size_of_findWalls 008F                         _goBackward 0C80  
                          ??_drive 002F                ??_play_iCreate_song 002C  
                       __pbssBANK0 0046                         __pbssBANK1 00CE  
            __size_of_goToNextCell 0027                 __size_of_initSongs 003D  
                drive@lowByteSpeed 002C                         __pmaintext 0453  
                          ?___wmul 002A                            ?_goLeft 0072  
                       __pintentry 0004          __end_of_play_iCreate_song 0A9E  
                          ?_readIR 00E1                       ?_turnRight90 0072  
                       __ptext1550 0B3C                         __ptext1551 03CB  
                       __ptext1560 0B05                         __ptext1552 033D  
                       __ptext1561 0C80                         __ptext1553 063B  
                       __ptext1570 0A65                         __ptext1562 0B58  
                       __ptext1554 0FC0                         __ptext1571 05CF  
                       __ptext1563 0EC8                         __ptext1555 0D29  
                       __ptext1580 0A9E                         __ptext1572 069B  
                       __ptext1564 0CD2                         __ptext1556 0DB3  
                       __ptext1548 02AE                         __ptext1581 0B99  
                       __ptext1573 0015                         __ptext1565 0A70  
                       __ptext1557 0D84                         __ptext1549 0BE0  
                       __ptext1590 0A58                         __ptext1582 0DE9  
                       __ptext1574 0E8F                         __ptext1566 0BBB  
                       __ptext1558 0CA9                         __ptext1591 0A53  
                       __ptext1583 0AD8                         __ptext1575 0A8C  
                       __ptext1567 0F43                         __ptext1559 0C2F  
                       __ptext1592 0C07                         __ptext1584 0F81  
                       __ptext1576 0B20                         __ptext1568 0E20  
                       __ptext1593 0A7B                         __ptext1585 0559  
                       __ptext1577 0AC4                         __ptext1569 0735  
                       __ptext1594 0A4E                         __ptext1586 0CFD  
                       __ptext1578 06EF                         __ptext1595 0B78  
                       __ptext1587 0AEE                         __ptext1579 0C57  
                       __ptext1596 01E4                         __ptext1588 0F05  
                       __ptext1597 077A                         __ptext1589 04DA  
                       __ptext1598 0000                 __size_of_ser_getch 0022  
                        ?_adc_read 0039                 __size_of_ser_putch 0021  
         _checkForFinalDestination 0D29                   ??_updateLocation 002E  
            __end_of_getVictimZone 0559                       _goToNextCell 0BE0  
                 ??_lcd_write_data 002A                          ?_findWall 0072  
        __size_of_driveForDistance 006C                     waitFor@lowByte 002D  
           __size_of_lookForVictim 0040                          ?_lcd_init 0072  
                          _SSPSTAT 0094                          ?_init_adc 0072  
                __end_of_goForward 0B20                  __end_of_getFinalX 0A58  
                __end_of_getFinalY 0A5D                         _initIRobot 0B20  
                __end_of_findWalls 033D                          ?_ser_init 0072  
                        ?_ser_isrx 0072                            ___awdiv 0559  
                        ?_rotateIR 002A                    __size_of___wmul 002C  
                    ??_checkIfHome 0033                            ___lwmod 077A  
                  __size_of_goLeft 0028                    __size_of_readIR 002F  
        __size_of_adc_read_channel 0054                            _goRight 0CA9  
                       ??_adc_read 003B          __size_of_frontWallCorrect 0088  
                          _convert 0015                        waitFor@type 0031  
                __end_of_initSongs 0F05       driveForDistance@moveDistance 0033  
         __end_of_rightWallCorrect 03CB                            _waitFor 0C57  
                          _ser_tmp 0061                            _vicZone 0063  
                      ?_goBackward 0072                            _wayWent 0065  
              driveForDistance@low 003C                        ser_putArr@i 0033  
                       ??_findWall 0046            __size_of_getOrientation 0005  
                       ??_lcd_init 002D               end_of_initialization 07FB  
                __end_of_ser_getch 0BBB                            init_ram 0AB5  
                   _superMarioBros 00A0                         ??_init_adc 002A  
          ??_lcd_write_1_digit_bcd 002D                  __end_of_ser_putch 0B99  
                       ??_ser_init 002A                         ??_ser_isrx 002A  
                       _ser_putArr 0E8F                      _lookForVictim 0FC0  
                       ??_rotateIR 002B         __size_of_play_iCreate_song 0012  
                ?_lcd_write_string 0072                         _victimZone 0064  
               ??_lcd_write_string 002D                __end_of_checkIfHome 0B78  
                adc_read@adc_value 003F                         _updateNode 0F05  
                      ?_initIRobot 0072                         _turnLeft90 0E20  
                   ?_lookForVictim 0072                         _turnAround 0735  
              __size_of_goBackward 0029                     __end_of___wmul 0D29  
                   __end_of_goLeft 0C57                      __pidataCOMMON 0A4C  
                   __end_of_readIR 0DB3               __size_of_turnRight90 003E  
              start_initialization 07BE                   _driveForDistance 05CF  
            lcd_set_cursor@address 002D                        ?_ser_putArr 002C  
       ??_checkForFinalDestination 002E                     _RTC_FLAG_500MS 0382  
                         ??___wmul 002E                           ??_goLeft 003D  
                      __pdataBANK1 00A0                        __pdataBANK3 0190  
                      _checkIfHome 0B58                           ??_readIR 0046  
                 _adc_read_channel 069B                   _frontWallCorrect 03CB  
                __size_of_adc_read 003F                        __pbssCOMMON 0078  
                      ?_updateNode 0072                      __pcstackBANK0 0020  
                    __pcstackBANK1 00DE                __size_of_initIRobot 001C  
                   _getOrientation 0A4E                  __size_of_findWall 001C  
                __size_of_lcd_init 002B                 drive@lowByteRadius 002E  
                        _champions 00B9                  __size_of_init_adc 0016  
                  ??_lookForVictim 002E                          _goForward 0B05  
                      ?_turnLeft90 0072                          _getFinalX 0A53  
                        _getFinalY 0A58                        ?_turnAround 0072  
                         ?___awdiv 0030                  __size_of_ser_init 0028  
                __size_of_ser_isrx 0017                           ?___lwmod 0072  
                        _findWalls 02AE                          __pstrings 0800  
                __size_of_rotateIR 0046                           ?_goRight 0072  
                         ?_convert 0041                     _finalCountdown 01AD  
                        _goingHome 0385             __end_of_getOrientation 0A53  
                ?_rightWallCorrect 0072                           ?_waitFor 002C  
                     ??_goBackward 003D                         ser_getch@c 002B  
                        _initSongs 0EC8                __size_of_ser_putArr 0039  
               ??_rightWallCorrect 00E5                     __size_of_drive 0037  
                        _frontWall 0384            __size_of_lcd_set_cursor 000B  
                interrupt_function 0004                     ___wmul@product 002E  
                       ser_putch@c 002B     __size_of_lcd_write_1_digit_bcd 000B  
    __end_of_lcd_write_1_digit_bcd 0A7B                    waitFor@highByte 002C  
                        _rightWall 0389                          _ser_getch 0B99  
                       ?_goForward 0072                          _ser_putch 0B78  
                       ?_getFinalX 0072                         ?_getFinalY 0072  
              __size_of_updateNode 003E             __size_of_getVictimZone 007F  
               __end_of_goBackward 0CA9                         ?_findWalls 0072  
                      __stringbase 0805                  ___wmul@multiplier 002A  
                  ?_getOrientation 0072                         ?_initSongs 0072  
              __size_of_turnLeft90 0037                __size_of_turnAround 0045  
          __size_of_updateLocation 0060          __size_of_lcd_write_string 0025  
                     ??_initIRobot 002C            __size_of_lcd_write_data 0013  
                       ?_ser_getch 0072   __end_of_checkForFinalDestination 0D56  
                     _lookingForU2 0190                         ?_ser_putch 0072  
          adc_read_channel@channel 00E0                      _RTC_FLAG_10MS 0380  
                    _RTC_FLAG_50MS 0383                          init_fetch 0AB1  
         __end_of_driveForDistance 063B                   __size_of___awdiv 0076  
               _currentOrientation 005B                   __size_of___lwmod 0044  
             getVictimZone@victimX 002C               getVictimZone@victimY 002A  
                         _adc_read 0F81                   __size_of_goRight 0029  
                 __size_of_convert 01CF                 __end_of_initIRobot 0B3C  
                    _getVictimZone 04DA                   __size_of_waitFor 0029  
                         _findWall 0B3C                           _lcd_init 0CD2  
                         _leftWall 0387           __end_of_adc_read_channel 06EF  
        lcd_write_control@databyte 002C                           _lastMove 005E  
                         _init_adc 0AD8                      __size_of_isr1 00CA  
                    __size_of_main 0087                      __size_of_init 0036  
         __end_of_frontWallCorrect 0453                           clear_ram 0A5D  
                         _ser_init 0C07                        ??_goForward 003D  
                     ??_ser_putArr 0030                           _ser_isrx 0AEE  
                      ??_getFinalX 002A                        ??_getFinalY 002A  
             driveForDistance@high 003B                           _rotateIR 06EF  
                      ??_findWalls 00E7                       ?_checkIfHome 0072  
                    ??_turnRight90 0033                           readIR@cm 00E3  
                     ??_updateNode 002A                      ?_goToNextCell 0072  
                   ?_getVictimZone 002A      driveForDistance@deltaDistance 0037  
                     _RTC_FLAG_1MS 0381                        ??_initSongs 0035  
               __end_of_ser_putArr 0EC8                           intlevel1 0000  
                   _lcd_set_cursor 0A65                   ___lwmod@dividend 0074  
                        stringcode 0800                        ??_ser_getch 002A  
                     ??_turnLeft90 0033                        ??_ser_putch 002A  
                     ??_turnAround 0033                 __end_of_updateNode 0F43  
                _lcd_write_control 0AC4                  _updateOrientation 0A7B  
               ?_lcd_write_control 0072             updateOrientation@moved 002B  
                       _OPTION_REG 0081                 ?_updateOrientation 0072  
                  ___lwmod@divisor 0072                     ??_goToNextCell 003E  
                  ___lwmod@counter 0077                __end_of_turnRight90 0F81  
                         stringdir 0800           driveForDistance@distance 0039  
                         stringtab 0800  __size_of_checkForFinalDestination 002D  
        ?_checkForFinalDestination 0072                ??_lcd_write_control 002A  
           __end_of_lcd_set_cursor 0A70                ??_updateOrientation 002A  
               __end_of_turnLeft90 0E57                 __end_of_turnAround 077A  
                   _updateLocation 063B                   _lcd_write_string 0BBB  
                      _victimFound 038A                        _RTC_Counter 0059  
                   _lcd_write_data 0A9E          __size_of_rightWallCorrect 008E  
                  ser_putArr@array 002C                   ser_putArr@length 002E  
